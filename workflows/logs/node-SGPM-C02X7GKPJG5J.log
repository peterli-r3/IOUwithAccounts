[INFO ] 2023-01-31T06:59:37,859Z [Test worker] internal.TestCordappImpl. - Generating CorDapp jar from local project in /Users/peter.li/Desktop/obligation-cordapp/workflows ... {}
[INFO ] 2023-01-31T06:59:38,064Z [Connection worker] internal.TestCordappImpl. - Build {}
[INFO ] 2023-01-31T06:59:39,207Z [Connection worker] internal.TestCordappImpl. - Starting Gradle Daemon {}
[INFO ] 2023-01-31T06:59:40,021Z [Connection worker] internal.TestCordappImpl. - Connecting to Gradle Daemon {}
[INFO ] 2023-01-31T06:59:40,033Z [Connection worker] internal.TestCordappImpl. - Starting Gradle Daemon {}
[INFO ] 2023-01-31T06:59:40,034Z [Connection worker] internal.TestCordappImpl. - Build {}
[INFO ] 2023-01-31T06:59:40,570Z [Connection worker] internal.TestCordappImpl. - Run build {}
[INFO ] 2023-01-31T06:59:40,591Z [Connection worker] internal.TestCordappImpl. - Evaluate settings {}
[INFO ] 2023-01-31T06:59:41,032Z [Connection worker] internal.TestCordappImpl. - Run build {}
[INFO ] 2023-01-31T06:59:41,042Z [Connection worker] internal.TestCordappImpl. - Configure build {}
[INFO ] 2023-01-31T06:59:41,042Z [Connection worker] internal.TestCordappImpl. - Load projects {}
[INFO ] 2023-01-31T06:59:41,208Z [Connection worker] internal.TestCordappImpl. - Configure build {}
[INFO ] 2023-01-31T06:59:41,208Z [Connection worker] internal.TestCordappImpl. - Configure project : {}
[INFO ] 2023-01-31T06:59:41,785Z [Connection worker] internal.TestCordappImpl. - Resolve dependencies of :classpath {}
[INFO ] 2023-01-31T06:59:42,217Z [Connection worker] internal.TestCordappImpl. - Configure project : {}
[INFO ] 2023-01-31T06:59:42,217Z [Connection worker] internal.TestCordappImpl. - Resolve files of :classpath {}
[INFO ] 2023-01-31T06:59:42,251Z [Connection worker] internal.TestCordappImpl. - Configure project : {}
[INFO ] 2023-01-31T06:59:42,261Z [Connection worker] internal.TestCordappImpl. - Resolve files of :classpath {}
[INFO ] 2023-01-31T06:59:42,261Z [Connection worker] internal.TestCordappImpl. - Configure project : {}
[INFO ] 2023-01-31T06:59:43,373Z [Connection worker] internal.TestCordappImpl. - Configure build {}
[INFO ] 2023-01-31T06:59:43,373Z [Connection worker] internal.TestCordappImpl. - Configure project :clients {}
[INFO ] 2023-01-31T06:59:43,521Z [Connection worker] internal.TestCordappImpl. - Configure build {}
[INFO ] 2023-01-31T06:59:43,522Z [Connection worker] internal.TestCordappImpl. - Configure project :contracts {}
[INFO ] 2023-01-31T06:59:43,552Z [Connection worker] internal.TestCordappImpl. - Configure build {}
[INFO ] 2023-01-31T06:59:43,553Z [Connection worker] internal.TestCordappImpl. - Configure project :workflows {}
[INFO ] 2023-01-31T06:59:43,673Z [Connection worker] internal.TestCordappImpl. - Configure build {}
[INFO ] 2023-01-31T06:59:43,673Z [Connection worker] internal.TestCordappImpl. - Run build {}
[INFO ] 2023-01-31T06:59:43,778Z [Connection worker] internal.TestCordappImpl. - Resolve dependencies of :workflows:kotlinCompilerClasspath {}
[INFO ] 2023-01-31T06:59:43,798Z [Connection worker] internal.TestCordappImpl. - Run build {}
[INFO ] 2023-01-31T06:59:43,798Z [Connection worker] internal.TestCordappImpl. - Resolve files of :workflows:kotlinCompilerClasspath {}
[INFO ] 2023-01-31T06:59:43,798Z [Connection worker] internal.TestCordappImpl. - Run build {}
[INFO ] 2023-01-31T06:59:43,811Z [Connection worker] internal.TestCordappImpl. - Resolve dependencies of :contracts:kotlinCompilerClasspath {}
[INFO ] 2023-01-31T06:59:43,811Z [Connection worker] internal.TestCordappImpl. - Run build {}
[INFO ] 2023-01-31T06:59:43,811Z [Connection worker] internal.TestCordappImpl. - Resolve files of :contracts:kotlinCompilerClasspath {}
[INFO ] 2023-01-31T06:59:43,811Z [Connection worker] internal.TestCordappImpl. - Run build {}
[INFO ] 2023-01-31T06:59:43,823Z [Connection worker] internal.TestCordappImpl. - Run tasks {}
[INFO ] 2023-01-31T06:59:43,863Z [Connection worker] internal.TestCordappImpl. - Task :contracts:compileKotlin {}
[INFO ] 2023-01-31T06:59:43,874Z [Connection worker] internal.TestCordappImpl. - Resolve files of :contracts:kotlinCompilerClasspath {}
[INFO ] 2023-01-31T06:59:43,874Z [Connection worker] internal.TestCordappImpl. - Task :contracts:compileKotlin {}
[INFO ] 2023-01-31T06:59:43,958Z [Connection worker] internal.TestCordappImpl. - Resolve dependencies of :contracts:kotlinCompilerPluginClasspath {}
[INFO ] 2023-01-31T06:59:43,968Z [Connection worker] internal.TestCordappImpl. - Task :contracts:compileKotlin {}
[INFO ] 2023-01-31T06:59:43,968Z [Connection worker] internal.TestCordappImpl. - Resolve files of :contracts:kotlinCompilerPluginClasspath {}
[INFO ] 2023-01-31T06:59:43,969Z [Connection worker] internal.TestCordappImpl. - Task :contracts:compileKotlin {}
[INFO ] 2023-01-31T06:59:43,969Z [Connection worker] internal.TestCordappImpl. - Resolve dependencies of :contracts:compileClasspath {}
[INFO ] 2023-01-31T06:59:44,055Z [Connection worker] internal.TestCordappImpl. - Task :contracts:compileKotlin {}
[INFO ] 2023-01-31T06:59:44,055Z [Connection worker] internal.TestCordappImpl. - Resolve files of :contracts:compileClasspath {}
[INFO ] 2023-01-31T06:59:44,066Z [Connection worker] internal.TestCordappImpl. - Task :contracts:compileKotlin {}
[INFO ] 2023-01-31T06:59:44,539Z [Connection worker] internal.TestCordappImpl. - Resolve files of :contracts:compileClasspath {}
[INFO ] 2023-01-31T06:59:44,539Z [Connection worker] internal.TestCordappImpl. - Task :contracts:compileKotlin {}
[INFO ] 2023-01-31T06:59:44,576Z [Connection worker] internal.TestCordappImpl. - Resolve files of :contracts:kotlinCompilerPluginClasspath {}
[INFO ] 2023-01-31T06:59:44,577Z [Connection worker] internal.TestCordappImpl. - Task :contracts:compileKotlin {}
[INFO ] 2023-01-31T06:59:44,608Z [Connection worker] internal.TestCordappImpl. - Run tasks {}
[INFO ] 2023-01-31T06:59:44,608Z [Connection worker] internal.TestCordappImpl. - Task :contracts:compileJava {}
[INFO ] 2023-01-31T06:59:44,608Z [Connection worker] internal.TestCordappImpl. - Run tasks {}
[INFO ] 2023-01-31T06:59:44,608Z [Connection worker] internal.TestCordappImpl. - Task :contracts:processResources {}
[INFO ] 2023-01-31T06:59:44,620Z [Connection worker] internal.TestCordappImpl. - Run tasks {}
[INFO ] 2023-01-31T06:59:44,620Z [Connection worker] internal.TestCordappImpl. - Task :contracts:classes {}
[INFO ] 2023-01-31T06:59:44,620Z [Connection worker] internal.TestCordappImpl. - Run tasks {}
[INFO ] 2023-01-31T06:59:44,620Z [Connection worker] internal.TestCordappImpl. - Task :contracts:configureCordappFatJar {}
[INFO ] 2023-01-31T06:59:44,620Z [Connection worker] internal.TestCordappImpl. - Resolve dependencies of :contracts:runtime {}
[INFO ] 2023-01-31T06:59:44,651Z [Connection worker] internal.TestCordappImpl. - Task :contracts:configureCordappFatJar {}
[INFO ] 2023-01-31T06:59:44,652Z [Connection worker] internal.TestCordappImpl. - Resolve files of :contracts:runtime {}
[INFO ] 2023-01-31T06:59:44,662Z [Connection worker] internal.TestCordappImpl. - Task :contracts:configureCordappFatJar {}
[INFO ] 2023-01-31T06:59:44,662Z [Connection worker] internal.TestCordappImpl. - Resolve files of :contracts:runtime {}
[INFO ] 2023-01-31T06:59:44,663Z [Connection worker] internal.TestCordappImpl. - Task :contracts:configureCordappFatJar {}
[INFO ] 2023-01-31T06:59:44,663Z [Connection worker] internal.TestCordappImpl. - Resolve files of :contracts:runtime {}
[INFO ] 2023-01-31T06:59:44,663Z [Connection worker] internal.TestCordappImpl. - Task :contracts:configureCordappFatJar {}
[INFO ] 2023-01-31T06:59:44,663Z [Connection worker] internal.TestCordappImpl. - Resolve files of :contracts:runtime {}
[INFO ] 2023-01-31T06:59:44,663Z [Connection worker] internal.TestCordappImpl. - Task :contracts:configureCordappFatJar {}
[INFO ] 2023-01-31T06:59:44,663Z [Connection worker] internal.TestCordappImpl. - Resolve files of :contracts:runtime {}
[INFO ] 2023-01-31T06:59:44,663Z [Connection worker] internal.TestCordappImpl. - Task :contracts:configureCordappFatJar {}
[INFO ] 2023-01-31T06:59:44,673Z [Connection worker] internal.TestCordappImpl. - Run tasks {}
[INFO ] 2023-01-31T06:59:44,673Z [Connection worker] internal.TestCordappImpl. - Task :contracts:inspectClassesForKotlinIC {}
[INFO ] 2023-01-31T06:59:44,685Z [Connection worker] internal.TestCordappImpl. - Run tasks {}
[INFO ] 2023-01-31T06:59:44,685Z [Connection worker] internal.TestCordappImpl. - Task :contracts:jar {}
[INFO ] 2023-01-31T06:59:44,706Z [Connection worker] internal.TestCordappImpl. - Run tasks {}
[INFO ] 2023-01-31T06:59:44,706Z [Connection worker] internal.TestCordappImpl. - Task :workflows:compileKotlin {}
[INFO ] 2023-01-31T06:59:44,706Z [Connection worker] internal.TestCordappImpl. - Resolve files of :workflows:kotlinCompilerClasspath {}
[INFO ] 2023-01-31T06:59:44,706Z [Connection worker] internal.TestCordappImpl. - Task :workflows:compileKotlin {}
[INFO ] 2023-01-31T06:59:44,719Z [Connection worker] internal.TestCordappImpl. - Resolve dependencies of :workflows:kotlinCompilerPluginClasspath {}
[INFO ] 2023-01-31T06:59:44,719Z [Connection worker] internal.TestCordappImpl. - Task :workflows:compileKotlin {}
[INFO ] 2023-01-31T06:59:44,719Z [Connection worker] internal.TestCordappImpl. - Resolve files of :workflows:kotlinCompilerPluginClasspath {}
[INFO ] 2023-01-31T06:59:44,719Z [Connection worker] internal.TestCordappImpl. - Task :workflows:compileKotlin {}
[INFO ] 2023-01-31T06:59:44,719Z [Connection worker] internal.TestCordappImpl. - Resolve dependencies of :workflows:compileClasspath {}
[INFO ] 2023-01-31T06:59:44,750Z [Connection worker] internal.TestCordappImpl. - Task :workflows:compileKotlin {}
[INFO ] 2023-01-31T06:59:44,750Z [Connection worker] internal.TestCordappImpl. - Resolve files of :workflows:compileClasspath {}
[INFO ] 2023-01-31T06:59:44,750Z [Connection worker] internal.TestCordappImpl. - Task :workflows:compileKotlin {}
[INFO ] 2023-01-31T06:59:44,750Z [Connection worker] internal.TestCordappImpl. - Resolve files of :workflows:compileClasspath {}
[INFO ] 2023-01-31T06:59:44,751Z [Connection worker] internal.TestCordappImpl. - Task :workflows:compileKotlin {}
[INFO ] 2023-01-31T06:59:44,762Z [Connection worker] internal.TestCordappImpl. - Resolve files of :workflows:kotlinCompilerPluginClasspath {}
[INFO ] 2023-01-31T06:59:44,763Z [Connection worker] internal.TestCordappImpl. - Task :workflows:compileKotlin {}
[INFO ] 2023-01-31T06:59:44,763Z [Connection worker] internal.TestCordappImpl. - Run tasks {}
[INFO ] 2023-01-31T06:59:44,763Z [Connection worker] internal.TestCordappImpl. - Task :workflows:compileJava {}
[INFO ] 2023-01-31T06:59:44,774Z [Connection worker] internal.TestCordappImpl. - Run tasks {}
[INFO ] 2023-01-31T06:59:44,774Z [Connection worker] internal.TestCordappImpl. - Task :workflows:processResources {}
[INFO ] 2023-01-31T06:59:44,774Z [Connection worker] internal.TestCordappImpl. - Run tasks {}
[INFO ] 2023-01-31T06:59:44,774Z [Connection worker] internal.TestCordappImpl. - Task :workflows:classes {}
[INFO ] 2023-01-31T06:59:44,774Z [Connection worker] internal.TestCordappImpl. - Run tasks {}
[INFO ] 2023-01-31T06:59:44,774Z [Connection worker] internal.TestCordappImpl. - Task :workflows:configureCordappFatJar {}
[INFO ] 2023-01-31T06:59:44,785Z [Connection worker] internal.TestCordappImpl. - Resolve dependencies of :workflows:runtime {}
[INFO ] 2023-01-31T06:59:44,818Z [Connection worker] internal.TestCordappImpl. - Task :workflows:configureCordappFatJar {}
[INFO ] 2023-01-31T06:59:44,818Z [Connection worker] internal.TestCordappImpl. - Resolve files of :workflows:runtime {}
[INFO ] 2023-01-31T06:59:44,818Z [Connection worker] internal.TestCordappImpl. - Task :workflows:configureCordappFatJar {}
[INFO ] 2023-01-31T06:59:44,818Z [Connection worker] internal.TestCordappImpl. - Resolve files of :workflows:runtime {}
[INFO ] 2023-01-31T06:59:44,828Z [Connection worker] internal.TestCordappImpl. - Task :workflows:configureCordappFatJar {}
[INFO ] 2023-01-31T06:59:44,829Z [Connection worker] internal.TestCordappImpl. - Resolve files of :workflows:runtime {}
[INFO ] 2023-01-31T06:59:44,829Z [Connection worker] internal.TestCordappImpl. - Task :workflows:configureCordappFatJar {}
[INFO ] 2023-01-31T06:59:44,829Z [Connection worker] internal.TestCordappImpl. - Resolve files of :workflows:runtime {}
[INFO ] 2023-01-31T06:59:44,829Z [Connection worker] internal.TestCordappImpl. - Task :workflows:configureCordappFatJar {}
[INFO ] 2023-01-31T06:59:44,829Z [Connection worker] internal.TestCordappImpl. - Resolve files of :workflows:runtime {}
[INFO ] 2023-01-31T06:59:44,829Z [Connection worker] internal.TestCordappImpl. - Task :workflows:configureCordappFatJar {}
[INFO ] 2023-01-31T06:59:44,829Z [Connection worker] internal.TestCordappImpl. - Resolve files of :workflows:runtime {}
[INFO ] 2023-01-31T06:59:44,829Z [Connection worker] internal.TestCordappImpl. - Task :workflows:configureCordappFatJar {}
[INFO ] 2023-01-31T06:59:44,829Z [Connection worker] internal.TestCordappImpl. - Resolve files of :workflows:runtime {}
[INFO ] 2023-01-31T06:59:44,829Z [Connection worker] internal.TestCordappImpl. - Task :workflows:configureCordappFatJar {}
[INFO ] 2023-01-31T06:59:44,829Z [Connection worker] internal.TestCordappImpl. - Resolve files of :workflows:runtime {}
[INFO ] 2023-01-31T06:59:44,829Z [Connection worker] internal.TestCordappImpl. - Task :workflows:configureCordappFatJar {}
[INFO ] 2023-01-31T06:59:44,829Z [Connection worker] internal.TestCordappImpl. - Run tasks {}
[INFO ] 2023-01-31T06:59:44,829Z [Connection worker] internal.TestCordappImpl. - Task :workflows:inspectClassesForKotlinIC {}
[INFO ] 2023-01-31T06:59:44,860Z [Connection worker] internal.TestCordappImpl. - Run tasks {}
[INFO ] 2023-01-31T06:59:44,861Z [Connection worker] internal.TestCordappImpl. - Task :workflows:jar {}
[INFO ] 2023-01-31T06:59:46,586Z [Connection worker] internal.TestCordappImpl. - Run tasks {}
[INFO ] 2023-01-31T06:59:46,597Z [Connection worker] internal.TestCordappImpl. - Run build {}
[INFO ] 2023-01-31T06:59:46,597Z [Connection worker] internal.TestCordappImpl. - Build model 'java.lang.Void' for project ':workflows' {}
[INFO ] 2023-01-31T06:59:46,597Z [Connection worker] internal.TestCordappImpl. - Run build {}
[INFO ] 2023-01-31T06:59:46,612Z [Connection worker] internal.TestCordappImpl. - Build {}
[INFO ] 2023-01-31T06:59:46,632Z [Connection worker] internal.TestCordappImpl. - Deleting unused version-specific caches in /Users/peter.li/Desktop/obligation-cordapp/.gradle {}
[INFO ] 2023-01-31T06:59:46,632Z [Connection worker] internal.TestCordappImpl. - Build {}
[INFO ] 2023-01-31T06:59:46,647Z [Connection worker] internal.TestCordappImpl. -  {}
[INFO ] 2023-01-31T06:59:52,334Z [Test worker] cordapp.JarScanningCordappLoader. - Looking for CorDapps in [build/mock-network/20230131-065937.006-DE8FE0700A9846CF/nodes/0/cordapps] {}
[INFO ] 2023-01-31T06:59:52,343Z [Test worker] cordapp.JarScanningCordappLoader. - Loading CorDapps from RestrictedURL(url=file:/Users/peter.li/Desktop/obligation-cordapp/workflows/build/mock-network/20230131-065937.006-DE8FE0700A9846CF/nodes/0/cordapps/accounts-contracts-1.0.jar, rootPackageName=null), RestrictedURL(url=file:/Users/peter.li/Desktop/obligation-cordapp/workflows/build/mock-network/20230131-065937.006-DE8FE0700A9846CF/nodes/0/cordapps/accounts-workflows-1.0.jar, rootPackageName=null), RestrictedURL(url=file:/Users/peter.li/Desktop/obligation-cordapp/workflows/build/mock-network/20230131-065937.006-DE8FE0700A9846CF/nodes/0/cordapps/corda-finance-contracts-4.9.jar, rootPackageName=null), RestrictedURL(url=file:/Users/peter.li/Desktop/obligation-cordapp/workflows/build/mock-network/20230131-065937.006-DE8FE0700A9846CF/nodes/0/cordapps/contracts-1.0.jar, rootPackageName=null), RestrictedURL(url=file:/Users/peter.li/Desktop/obligation-cordapp/workflows/build/mock-network/20230131-065937.006-DE8FE0700A9846CF/nodes/0/cordapps/workflows-1.0.jar, rootPackageName=null) {}
[INFO ] 2023-01-31T06:59:52,355Z [Test worker] cordapp.JarScanningCordappLoader. - Scanning CorDapp in file:/Users/peter.li/Desktop/obligation-cordapp/workflows/build/mock-network/20230131-065937.006-DE8FE0700A9846CF/nodes/0/cordapps/accounts-contracts-1.0.jar {}
[INFO ] 2023-01-31T06:59:52,473Z [Test worker] cordapp.JarScanningCordappLoader. - Scanning CorDapp in file:/Users/peter.li/Desktop/obligation-cordapp/workflows/build/mock-network/20230131-065937.006-DE8FE0700A9846CF/nodes/0/cordapps/accounts-workflows-1.0.jar {}
[INFO ] 2023-01-31T06:59:52,671Z [Test worker] cordapp.JarScanningCordappLoader. - Scanning CorDapp in file:/Users/peter.li/Desktop/obligation-cordapp/workflows/build/mock-network/20230131-065937.006-DE8FE0700A9846CF/nodes/0/cordapps/corda-finance-contracts-4.9.jar {}
[INFO ] 2023-01-31T06:59:52,811Z [Test worker] cordapp.JarScanningCordappLoader. - Scanning CorDapp in file:/Users/peter.li/Desktop/obligation-cordapp/workflows/build/mock-network/20230131-065937.006-DE8FE0700A9846CF/nodes/0/cordapps/contracts-1.0.jar {}
[INFO ] 2023-01-31T06:59:52,824Z [Test worker] cordapp.JarScanningCordappLoader. - Scanning CorDapp in file:/Users/peter.li/Desktop/obligation-cordapp/workflows/build/mock-network/20230131-065937.006-DE8FE0700A9846CF/nodes/0/cordapps/workflows-1.0.jar {}
[INFO ] 2023-01-31T06:59:54,412Z [Test worker] internal.InternalMockNetwork$MockNode. - MessagingService active change to: false {}
[INFO ] 2023-01-31T06:59:54,690Z [Test worker] internal.InternalMockNetwork$MockNode. - Flow external operation executor has a max of 2 threads {}
[INFO ] 2023-01-31T06:59:54,755Z [Test worker] internal.InternalMockNetwork$MockNode. - Node starting up ... {}
[INFO ] 2023-01-31T06:59:54,776Z [Test worker] internal.KeyStoreHandler. - Loaded trusted root certificate: DL7fwxLm5xbiMD8adUuYTsPZHAict46Ng4w6RNcySt5vAw, alias: cordarootca {}
[INFO ] 2023-01-31T06:59:54,779Z [Test worker] internal.KeyStoreHandler. - Loaded node identity key: DLBRwkZUo2ij1zLrLbCbGQmENLkPebt4G4ENVu86CUqvfj, alias: identity-private-key {}
[INFO ] 2023-01-31T06:59:54,906Z [Test worker] internal.NodeFlowManager. - Registered com.r3.corda.lib.accounts.workflows.flows.ShareStateAndSyncAccounts to initiate com.r3.corda.lib.accounts.workflows.flows.ReceiveStateAndSyncAccounts (version 1) {}
[INFO ] 2023-01-31T06:59:54,907Z [Test worker] internal.NodeFlowManager. - Registered com.r3.corda.lib.accounts.workflows.flows.ShareStateWithAccount to initiate com.r3.corda.lib.accounts.workflows.flows.ReceiveStateForAccount (version 1) {}
[INFO ] 2023-01-31T06:59:54,907Z [Test worker] internal.NodeFlowManager. - Registered com.r3.corda.lib.accounts.workflows.flows.RequestAccountInfo to initiate com.r3.corda.lib.accounts.workflows.flows.RequestAccountInfoHandler (version 1) {}
[INFO ] 2023-01-31T06:59:54,908Z [Test worker] internal.NodeFlowManager. - Registered com.r3.corda.lib.accounts.workflows.flows.RequestKeyForAccount to initiate com.r3.corda.lib.accounts.workflows.flows.SendKeyForAccount (version 1) {}
[INFO ] 2023-01-31T06:59:54,909Z [Test worker] internal.NodeFlowManager. - Registered com.r3.corda.lib.accounts.workflows.flows.ShareAccountInfo to initiate com.r3.corda.lib.accounts.workflows.flows.ShareAccountInfoHandler (version 1) {}
[INFO ] 2023-01-31T06:59:54,910Z [Test worker] internal.NodeFlowManager. - Registered net.corda.samples.obligation.flows.IOUIssueFlow to initiate net.corda.samples.obligation.flows.IOUIssueFlowResponder (version 1) {}
[INFO ] 2023-01-31T06:59:54,911Z [Test worker] internal.NodeFlowManager. - Registered net.corda.samples.obligation.flows.IOUSettleFlow to initiate net.corda.samples.obligation.flows.IOUSettleFlowResponder (version 1) {}
[INFO ] 2023-01-31T06:59:54,911Z [Test worker] internal.NodeFlowManager. - Registered net.corda.samples.obligation.flows.IOUTransferFlow to initiate net.corda.samples.obligation.flows.IOUTransferFlowResponder (version 1) {}
[INFO ] 2023-01-31T06:59:54,912Z [Test worker] internal.NodeFlowManager. - Registered net.corda.samples.obligation.flows.SyncKey to initiate net.corda.samples.obligation.flows.SyncKeyResponder (version 1) {}
[INFO ] 2023-01-31T06:59:55,048Z [Test worker] internal.InternalMockNetwork$MockNode. - Loaded network parameters: NetworkParameters {
      minimumPlatformVersion=4
      notaries=[NotaryInfo(identity=O=Notary, L=London, C=GB, validating=true)]
      maxMessageSize=10485760
      maxTransactionSize=524288000
      whitelistedContractImplementations {
        
      }
      eventHorizon=PT720H
      packageOwnership {
        
      }
      modifiedTime=2023-01-31T06:59:36.686Z
      epoch=1
  } {}
[INFO ] 2023-01-31T07:00:01,404Z [Test worker] internal.InternalMockNetwork$MockNode. - Connected to H2 database. {}
[INFO ] 2023-01-31T07:00:01,468Z [Test worker] persistence.HibernateConfiguration. - Init HibernateConfiguration for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1), AccountsContractsSchemaV1(name=com.r3.corda.lib.accounts.contracts.internal.schemas.AccountsContractsSchema, version=1), AccountsWorkflowsSchemaV1(name=com.r3.corda.lib.accounts.workflows.internal.schemas.AccountsWorkflowsSchema, version=1), CashSchemaV1(name=net.corda.finance.schemas.CashSchema, version=1), CommercialPaperSchemaV1(name=net.corda.finance.schemas.CommercialPaperSchema, version=1), JPANotarySchemaV1(name=net.corda.notary.jpa.JPANotarySchema, version=1)] {}
[INFO ] 2023-01-31T07:00:01,473Z [Test worker] factory.BaseSessionFactoryFactory. - Creating session factory for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1), AccountsContractsSchemaV1(name=com.r3.corda.lib.accounts.contracts.internal.schemas.AccountsContractsSchema, version=1), AccountsWorkflowsSchemaV1(name=com.r3.corda.lib.accounts.workflows.internal.schemas.AccountsWorkflowsSchema, version=1), CashSchemaV1(name=net.corda.finance.schemas.CashSchema, version=1), CommercialPaperSchemaV1(name=net.corda.finance.schemas.CommercialPaperSchema, version=1), JPANotarySchemaV1(name=net.corda.notary.jpa.JPANotarySchema, version=1)] {}
[INFO ] 2023-01-31T07:00:05,245Z [Test worker] factory.BaseSessionFactoryFactory. - Created session factory for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1), AccountsContractsSchemaV1(name=com.r3.corda.lib.accounts.contracts.internal.schemas.AccountsContractsSchema, version=1), AccountsWorkflowsSchemaV1(name=com.r3.corda.lib.accounts.workflows.internal.schemas.AccountsWorkflowsSchema, version=1), CashSchemaV1(name=net.corda.finance.schemas.CashSchema, version=1), CommercialPaperSchemaV1(name=net.corda.finance.schemas.CommercialPaperSchema, version=1), JPANotarySchemaV1(name=net.corda.notary.jpa.JPANotarySchema, version=1)] {}
[INFO ] 2023-01-31T07:00:05,520Z [Test worker] internal.InternalMockNetwork$MockNode. - Node-info has changed so submitting update. Old node-info was null {}
[INFO ] 2023-01-31T07:00:05,527Z [Test worker] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Notary, L=London, C=GB], platformVersion=11, serial=1675148405520), owningKey=DLBRwkZUo2ij1zLrLbCbGQmENLkPebt4G4ENVu86CUqvfj {}
[INFO ] 2023-01-31T07:00:05,527Z [Test worker] network.PersistentNetworkMapCache. - No previous node found for O=Notary, L=London, C=GB {}
[INFO ] 2023-01-31T07:00:05,668Z [Test worker] internal.InternalMockNetwork$MockNode. - New node-info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Notary, L=London, C=GB], platformVersion=11, serial=1675148405520) {}
[INFO ] 2023-01-31T07:00:05,719Z [Test worker] network.NetworkMapUpdater. - Auto-accept enabled for network parameter changes which modify only: [epoch, modifiedTime, packageOwnership, whitelistedContractImplementations] {}
[INFO ] 2023-01-31T07:00:05,748Z [Test worker] internal.MockNodeMessagingService. - Status change to true {}
[INFO ] 2023-01-31T07:00:05,750Z [Test worker] internal.InternalMockNetwork$MockNode. - MessagingService active change to: true {}
[INFO ] 2023-01-31T07:00:05,782Z [MockNode-1-2] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Notary, L=London, C=GB], platformVersion=11, serial=1675148405520), owningKey=DLBRwkZUo2ij1zLrLbCbGQmENLkPebt4G4ENVu86CUqvfj {}
[INFO ] 2023-01-31T07:00:05,782Z [MockNode-1-2] network.PersistentNetworkMapCache. - Previous node was identical to incoming one - doing nothing {}
[INFO ] 2023-01-31T07:00:05,891Z [Test worker] persistence.NodeAttachmentService. - Stored new attachment: id=D370FD972C7E07CE73F4F9B7886D226807F6B16C4EE287398B9C69384109DC14 uploader=app filename=Accounts SDK - States and Contracts {}
[INFO ] 2023-01-31T07:00:05,934Z [Test worker] persistence.NodeAttachmentService. - Stored new attachment: id=BD0C932EAF8B1FE96DCBBF275B914BCD776D14EDC8F97DCEBF7E15DA09C606AE uploader=app filename=Corda Finance Demo {}
[INFO ] 2023-01-31T07:00:05,950Z [Test worker] persistence.NodeAttachmentService. - Stored new attachment: id=8D797B45F40704FA4FD70921F5BC6E2D7B34450D345CE6788D2A87859EF63BD8 uploader=app filename=Obligation Contracts {}
[INFO ] 2023-01-31T07:00:05,965Z [Test worker] internal.InternalMockNetwork$MockNode. - Installed com.r3.corda.lib.accounts.workflows.services.KeyManagementBackedAccountService Corda service {}
[INFO ] 2023-01-31T07:00:05,965Z [Test worker] utilities.NotaryLoader. - Starting notary service: class net.corda.notary.jpa.JPANotaryService {}
[INFO ] 2023-01-31T07:00:06,759Z [Test worker] statemachine.SingleThreadedStateMachineManager. - Node ready, info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Notary, L=London, C=GB], platformVersion=11, serial=1675148405520) {}
[INFO ] 2023-01-31T07:00:06,774Z [Test worker] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Notary, L=London, C=GB], platformVersion=11, serial=1675148405520), owningKey=DLBRwkZUo2ij1zLrLbCbGQmENLkPebt4G4ENVu86CUqvfj {}
[INFO ] 2023-01-31T07:00:06,775Z [Test worker] network.PersistentNetworkMapCache. - Previous node was identical to incoming one - doing nothing {}
[INFO ] 2023-01-31T07:00:06,775Z [Test worker] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Notary, L=London, C=GB], platformVersion=11, serial=1675148405520), owningKey=DLBRwkZUo2ij1zLrLbCbGQmENLkPebt4G4ENVu86CUqvfj {}
[INFO ] 2023-01-31T07:00:06,775Z [Test worker] network.PersistentNetworkMapCache. - Previous node was identical to incoming one - doing nothing {}
[INFO ] 2023-01-31T07:00:06,795Z [Test worker] cordapp.JarScanningCordappLoader. - Looking for CorDapps in [build/mock-network/20230131-065937.006-DE8FE0700A9846CF/nodes/1/cordapps] {}
[INFO ] 2023-01-31T07:00:06,796Z [Test worker] cordapp.JarScanningCordappLoader. - Loading CorDapps from RestrictedURL(url=file:/Users/peter.li/Desktop/obligation-cordapp/workflows/build/mock-network/20230131-065937.006-DE8FE0700A9846CF/nodes/1/cordapps/accounts-contracts-1.0.jar, rootPackageName=null), RestrictedURL(url=file:/Users/peter.li/Desktop/obligation-cordapp/workflows/build/mock-network/20230131-065937.006-DE8FE0700A9846CF/nodes/1/cordapps/accounts-workflows-1.0.jar, rootPackageName=null), RestrictedURL(url=file:/Users/peter.li/Desktop/obligation-cordapp/workflows/build/mock-network/20230131-065937.006-DE8FE0700A9846CF/nodes/1/cordapps/corda-finance-contracts-4.9.jar, rootPackageName=null), RestrictedURL(url=file:/Users/peter.li/Desktop/obligation-cordapp/workflows/build/mock-network/20230131-065937.006-DE8FE0700A9846CF/nodes/1/cordapps/contracts-1.0.jar, rootPackageName=null), RestrictedURL(url=file:/Users/peter.li/Desktop/obligation-cordapp/workflows/build/mock-network/20230131-065937.006-DE8FE0700A9846CF/nodes/1/cordapps/workflows-1.0.jar, rootPackageName=null) {}
[INFO ] 2023-01-31T07:00:06,796Z [Test worker] cordapp.JarScanningCordappLoader. - Scanning CorDapp in file:/Users/peter.li/Desktop/obligation-cordapp/workflows/build/mock-network/20230131-065937.006-DE8FE0700A9846CF/nodes/1/cordapps/accounts-contracts-1.0.jar {}
[INFO ] 2023-01-31T07:00:06,827Z [Test worker] cordapp.JarScanningCordappLoader. - Scanning CorDapp in file:/Users/peter.li/Desktop/obligation-cordapp/workflows/build/mock-network/20230131-065937.006-DE8FE0700A9846CF/nodes/1/cordapps/accounts-workflows-1.0.jar {}
[INFO ] 2023-01-31T07:00:06,839Z [Test worker] cordapp.JarScanningCordappLoader. - Scanning CorDapp in file:/Users/peter.li/Desktop/obligation-cordapp/workflows/build/mock-network/20230131-065937.006-DE8FE0700A9846CF/nodes/1/cordapps/corda-finance-contracts-4.9.jar {}
[INFO ] 2023-01-31T07:00:06,861Z [Test worker] cordapp.JarScanningCordappLoader. - Scanning CorDapp in file:/Users/peter.li/Desktop/obligation-cordapp/workflows/build/mock-network/20230131-065937.006-DE8FE0700A9846CF/nodes/1/cordapps/contracts-1.0.jar {}
[INFO ] 2023-01-31T07:00:06,868Z [Test worker] cordapp.JarScanningCordappLoader. - Scanning CorDapp in file:/Users/peter.li/Desktop/obligation-cordapp/workflows/build/mock-network/20230131-065937.006-DE8FE0700A9846CF/nodes/1/cordapps/workflows-1.0.jar {}
[INFO ] 2023-01-31T07:00:06,903Z [Test worker] internal.InternalMockNetwork$MockNode. - MessagingService active change to: false {}
[INFO ] 2023-01-31T07:00:06,904Z [Test worker] internal.InternalMockNetwork$MockNode. - Flow external operation executor has a max of 2 threads {}
[INFO ] 2023-01-31T07:00:06,906Z [Test worker] internal.InternalMockNetwork$MockNode. - Node starting up ... {}
[INFO ] 2023-01-31T07:00:06,951Z [Test worker] internal.KeyStoreHandler. - Loaded trusted root certificate: DL7fwxLm5xbiMD8adUuYTsPZHAict46Ng4w6RNcySt5vAw, alias: cordarootca {}
[INFO ] 2023-01-31T07:00:06,951Z [Test worker] internal.KeyStoreHandler. - Loaded node identity key: DLAstkg1RVriNHWv5u7xtsAFxomMTe7nN2eLXrLZrL5VL3, alias: identity-private-key {}
[INFO ] 2023-01-31T07:00:06,957Z [Test worker] internal.NodeFlowManager. - Registered com.r3.corda.lib.accounts.workflows.flows.ShareStateAndSyncAccounts to initiate com.r3.corda.lib.accounts.workflows.flows.ReceiveStateAndSyncAccounts (version 1) {}
[INFO ] 2023-01-31T07:00:06,958Z [Test worker] internal.NodeFlowManager. - Registered com.r3.corda.lib.accounts.workflows.flows.ShareStateWithAccount to initiate com.r3.corda.lib.accounts.workflows.flows.ReceiveStateForAccount (version 1) {}
[INFO ] 2023-01-31T07:00:06,958Z [Test worker] internal.NodeFlowManager. - Registered com.r3.corda.lib.accounts.workflows.flows.RequestAccountInfo to initiate com.r3.corda.lib.accounts.workflows.flows.RequestAccountInfoHandler (version 1) {}
[INFO ] 2023-01-31T07:00:06,958Z [Test worker] internal.NodeFlowManager. - Registered com.r3.corda.lib.accounts.workflows.flows.RequestKeyForAccount to initiate com.r3.corda.lib.accounts.workflows.flows.SendKeyForAccount (version 1) {}
[INFO ] 2023-01-31T07:00:06,958Z [Test worker] internal.NodeFlowManager. - Registered com.r3.corda.lib.accounts.workflows.flows.ShareAccountInfo to initiate com.r3.corda.lib.accounts.workflows.flows.ShareAccountInfoHandler (version 1) {}
[INFO ] 2023-01-31T07:00:06,958Z [Test worker] internal.NodeFlowManager. - Registered net.corda.samples.obligation.flows.IOUIssueFlow to initiate net.corda.samples.obligation.flows.IOUIssueFlowResponder (version 1) {}
[INFO ] 2023-01-31T07:00:06,958Z [Test worker] internal.NodeFlowManager. - Registered net.corda.samples.obligation.flows.IOUSettleFlow to initiate net.corda.samples.obligation.flows.IOUSettleFlowResponder (version 1) {}
[INFO ] 2023-01-31T07:00:06,958Z [Test worker] internal.NodeFlowManager. - Registered net.corda.samples.obligation.flows.IOUTransferFlow to initiate net.corda.samples.obligation.flows.IOUTransferFlowResponder (version 1) {}
[INFO ] 2023-01-31T07:00:06,958Z [Test worker] internal.NodeFlowManager. - Registered net.corda.samples.obligation.flows.SyncKey to initiate net.corda.samples.obligation.flows.SyncKeyResponder (version 1) {}
[INFO ] 2023-01-31T07:00:06,963Z [Test worker] internal.InternalMockNetwork$MockNode. - Loaded network parameters: NetworkParameters {
      minimumPlatformVersion=4
      notaries=[NotaryInfo(identity=O=Notary, L=London, C=GB, validating=true)]
      maxMessageSize=10485760
      maxTransactionSize=524288000
      whitelistedContractImplementations {
        
      }
      eventHorizon=PT720H
      packageOwnership {
        
      }
      modifiedTime=2023-01-31T06:59:36.686Z
      epoch=1
  } {}
[INFO ] 2023-01-31T07:00:07,708Z [Test worker] internal.InternalMockNetwork$MockNode. - Connected to H2 database. {}
[INFO ] 2023-01-31T07:00:07,710Z [Test worker] persistence.HibernateConfiguration. - Init HibernateConfiguration for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1), AccountsContractsSchemaV1(name=com.r3.corda.lib.accounts.contracts.internal.schemas.AccountsContractsSchema, version=1), AccountsWorkflowsSchemaV1(name=com.r3.corda.lib.accounts.workflows.internal.schemas.AccountsWorkflowsSchema, version=1), CashSchemaV1(name=net.corda.finance.schemas.CashSchema, version=1), CommercialPaperSchemaV1(name=net.corda.finance.schemas.CommercialPaperSchema, version=1)] {}
[INFO ] 2023-01-31T07:00:07,710Z [Test worker] factory.BaseSessionFactoryFactory. - Creating session factory for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1), AccountsContractsSchemaV1(name=com.r3.corda.lib.accounts.contracts.internal.schemas.AccountsContractsSchema, version=1), AccountsWorkflowsSchemaV1(name=com.r3.corda.lib.accounts.workflows.internal.schemas.AccountsWorkflowsSchema, version=1), CashSchemaV1(name=net.corda.finance.schemas.CashSchema, version=1), CommercialPaperSchemaV1(name=net.corda.finance.schemas.CommercialPaperSchema, version=1)] {}
[INFO ] 2023-01-31T07:00:07,895Z [Test worker] factory.BaseSessionFactoryFactory. - Created session factory for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1), AccountsContractsSchemaV1(name=com.r3.corda.lib.accounts.contracts.internal.schemas.AccountsContractsSchema, version=1), AccountsWorkflowsSchemaV1(name=com.r3.corda.lib.accounts.workflows.internal.schemas.AccountsWorkflowsSchema, version=1), CashSchemaV1(name=net.corda.finance.schemas.CashSchema, version=1), CommercialPaperSchemaV1(name=net.corda.finance.schemas.CommercialPaperSchema, version=1)] {}
[INFO ] 2023-01-31T07:00:07,899Z [Test worker] internal.InternalMockNetwork$MockNode. - Node-info has changed so submitting update. Old node-info was null {}
[INFO ] 2023-01-31T07:00:07,903Z [Test worker] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 1, L=London, C=GB], platformVersion=11, serial=1675148407899), owningKey=DLAstkg1RVriNHWv5u7xtsAFxomMTe7nN2eLXrLZrL5VL3 {}
[INFO ] 2023-01-31T07:00:07,903Z [Test worker] network.PersistentNetworkMapCache. - No previous node found for O=Mock Company 1, L=London, C=GB {}
[INFO ] 2023-01-31T07:00:07,913Z [Test worker] internal.InternalMockNetwork$MockNode. - New node-info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 1, L=London, C=GB], platformVersion=11, serial=1675148407899) {}
[INFO ] 2023-01-31T07:00:07,921Z [Test worker] network.NetworkMapUpdater. - Auto-accept enabled for network parameter changes which modify only: [epoch, modifiedTime, packageOwnership, whitelistedContractImplementations] {}
[INFO ] 2023-01-31T07:00:07,921Z [Test worker] internal.MockNodeMessagingService. - Status change to true {}
[INFO ] 2023-01-31T07:00:07,921Z [Test worker] internal.InternalMockNetwork$MockNode. - MessagingService active change to: true {}
[INFO ] 2023-01-31T07:00:07,932Z [MockNode-2-2] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 1, L=London, C=GB], platformVersion=11, serial=1675148407899), owningKey=DLAstkg1RVriNHWv5u7xtsAFxomMTe7nN2eLXrLZrL5VL3 {}
[INFO ] 2023-01-31T07:00:07,932Z [MockNode-2-2] network.PersistentNetworkMapCache. - Previous node was identical to incoming one - doing nothing {}
[INFO ] 2023-01-31T07:00:07,957Z [Test worker] persistence.NodeAttachmentService. - Stored new attachment: id=D370FD972C7E07CE73F4F9B7886D226807F6B16C4EE287398B9C69384109DC14 uploader=app filename=Accounts SDK - States and Contracts {}
[INFO ] 2023-01-31T07:00:07,997Z [Test worker] persistence.NodeAttachmentService. - Stored new attachment: id=BD0C932EAF8B1FE96DCBBF275B914BCD776D14EDC8F97DCEBF7E15DA09C606AE uploader=app filename=Corda Finance Demo {}
[INFO ] 2023-01-31T07:00:08,017Z [Test worker] persistence.NodeAttachmentService. - Stored new attachment: id=8D797B45F40704FA4FD70921F5BC6E2D7B34450D345CE6788D2A87859EF63BD8 uploader=app filename=Obligation Contracts {}
[INFO ] 2023-01-31T07:00:08,021Z [Test worker] internal.InternalMockNetwork$MockNode. - Installed com.r3.corda.lib.accounts.workflows.services.KeyManagementBackedAccountService Corda service {}
[INFO ] 2023-01-31T07:00:08,050Z [Test worker] statemachine.SingleThreadedStateMachineManager. - Node ready, info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 1, L=London, C=GB], platformVersion=11, serial=1675148407899) {}
[INFO ] 2023-01-31T07:00:08,053Z [Test worker] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Notary, L=London, C=GB], platformVersion=11, serial=1675148405520), owningKey=DLBRwkZUo2ij1zLrLbCbGQmENLkPebt4G4ENVu86CUqvfj {}
[INFO ] 2023-01-31T07:00:08,053Z [Test worker] network.PersistentNetworkMapCache. - No previous node found for O=Notary, L=London, C=GB {}
[INFO ] 2023-01-31T07:00:08,069Z [Test worker] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 1, L=London, C=GB], platformVersion=11, serial=1675148407899), owningKey=DLAstkg1RVriNHWv5u7xtsAFxomMTe7nN2eLXrLZrL5VL3 {}
[INFO ] 2023-01-31T07:00:08,069Z [Test worker] network.PersistentNetworkMapCache. - No previous node found for O=Mock Company 1, L=London, C=GB {}
[INFO ] 2023-01-31T07:00:08,084Z [Test worker] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 1, L=London, C=GB], platformVersion=11, serial=1675148407899), owningKey=DLAstkg1RVriNHWv5u7xtsAFxomMTe7nN2eLXrLZrL5VL3 {}
[INFO ] 2023-01-31T07:00:08,084Z [Test worker] network.PersistentNetworkMapCache. - Previous node was identical to incoming one - doing nothing {}
[INFO ] 2023-01-31T07:00:08,084Z [Test worker] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 1, L=London, C=GB], platformVersion=11, serial=1675148407899), owningKey=DLAstkg1RVriNHWv5u7xtsAFxomMTe7nN2eLXrLZrL5VL3 {}
[INFO ] 2023-01-31T07:00:08,084Z [Test worker] network.PersistentNetworkMapCache. - Previous node was identical to incoming one - doing nothing {}
[INFO ] 2023-01-31T07:00:08,103Z [Test worker] cordapp.JarScanningCordappLoader. - Looking for CorDapps in [build/mock-network/20230131-065937.006-DE8FE0700A9846CF/nodes/2/cordapps] {}
[INFO ] 2023-01-31T07:00:08,104Z [Test worker] cordapp.JarScanningCordappLoader. - Loading CorDapps from RestrictedURL(url=file:/Users/peter.li/Desktop/obligation-cordapp/workflows/build/mock-network/20230131-065937.006-DE8FE0700A9846CF/nodes/2/cordapps/accounts-contracts-1.0.jar, rootPackageName=null), RestrictedURL(url=file:/Users/peter.li/Desktop/obligation-cordapp/workflows/build/mock-network/20230131-065937.006-DE8FE0700A9846CF/nodes/2/cordapps/accounts-workflows-1.0.jar, rootPackageName=null), RestrictedURL(url=file:/Users/peter.li/Desktop/obligation-cordapp/workflows/build/mock-network/20230131-065937.006-DE8FE0700A9846CF/nodes/2/cordapps/corda-finance-contracts-4.9.jar, rootPackageName=null), RestrictedURL(url=file:/Users/peter.li/Desktop/obligation-cordapp/workflows/build/mock-network/20230131-065937.006-DE8FE0700A9846CF/nodes/2/cordapps/contracts-1.0.jar, rootPackageName=null), RestrictedURL(url=file:/Users/peter.li/Desktop/obligation-cordapp/workflows/build/mock-network/20230131-065937.006-DE8FE0700A9846CF/nodes/2/cordapps/workflows-1.0.jar, rootPackageName=null) {}
[INFO ] 2023-01-31T07:00:08,104Z [Test worker] cordapp.JarScanningCordappLoader. - Scanning CorDapp in file:/Users/peter.li/Desktop/obligation-cordapp/workflows/build/mock-network/20230131-065937.006-DE8FE0700A9846CF/nodes/2/cordapps/accounts-contracts-1.0.jar {}
[INFO ] 2023-01-31T07:00:08,130Z [Test worker] cordapp.JarScanningCordappLoader. - Scanning CorDapp in file:/Users/peter.li/Desktop/obligation-cordapp/workflows/build/mock-network/20230131-065937.006-DE8FE0700A9846CF/nodes/2/cordapps/accounts-workflows-1.0.jar {}
[INFO ] 2023-01-31T07:00:08,139Z [Test worker] cordapp.JarScanningCordappLoader. - Scanning CorDapp in file:/Users/peter.li/Desktop/obligation-cordapp/workflows/build/mock-network/20230131-065937.006-DE8FE0700A9846CF/nodes/2/cordapps/corda-finance-contracts-4.9.jar {}
[INFO ] 2023-01-31T07:00:08,152Z [Test worker] cordapp.JarScanningCordappLoader. - Scanning CorDapp in file:/Users/peter.li/Desktop/obligation-cordapp/workflows/build/mock-network/20230131-065937.006-DE8FE0700A9846CF/nodes/2/cordapps/contracts-1.0.jar {}
[INFO ] 2023-01-31T07:00:08,159Z [Test worker] cordapp.JarScanningCordappLoader. - Scanning CorDapp in file:/Users/peter.li/Desktop/obligation-cordapp/workflows/build/mock-network/20230131-065937.006-DE8FE0700A9846CF/nodes/2/cordapps/workflows-1.0.jar {}
[INFO ] 2023-01-31T07:00:08,188Z [Test worker] internal.InternalMockNetwork$MockNode. - MessagingService active change to: false {}
[INFO ] 2023-01-31T07:00:08,189Z [Test worker] internal.InternalMockNetwork$MockNode. - Flow external operation executor has a max of 2 threads {}
[INFO ] 2023-01-31T07:00:08,191Z [Test worker] internal.InternalMockNetwork$MockNode. - Node starting up ... {}
[INFO ] 2023-01-31T07:00:08,231Z [Test worker] internal.KeyStoreHandler. - Loaded trusted root certificate: DL7fwxLm5xbiMD8adUuYTsPZHAict46Ng4w6RNcySt5vAw, alias: cordarootca {}
[INFO ] 2023-01-31T07:00:08,231Z [Test worker] internal.KeyStoreHandler. - Loaded node identity key: DL2mqLGxXzFLMLNsgGnXa1wt1fQEeVYREZC6mEHKM5LxQV, alias: identity-private-key {}
[INFO ] 2023-01-31T07:00:08,237Z [Test worker] internal.NodeFlowManager. - Registered com.r3.corda.lib.accounts.workflows.flows.ShareStateAndSyncAccounts to initiate com.r3.corda.lib.accounts.workflows.flows.ReceiveStateAndSyncAccounts (version 1) {}
[INFO ] 2023-01-31T07:00:08,237Z [Test worker] internal.NodeFlowManager. - Registered com.r3.corda.lib.accounts.workflows.flows.ShareStateWithAccount to initiate com.r3.corda.lib.accounts.workflows.flows.ReceiveStateForAccount (version 1) {}
[INFO ] 2023-01-31T07:00:08,237Z [Test worker] internal.NodeFlowManager. - Registered com.r3.corda.lib.accounts.workflows.flows.RequestAccountInfo to initiate com.r3.corda.lib.accounts.workflows.flows.RequestAccountInfoHandler (version 1) {}
[INFO ] 2023-01-31T07:00:08,237Z [Test worker] internal.NodeFlowManager. - Registered com.r3.corda.lib.accounts.workflows.flows.RequestKeyForAccount to initiate com.r3.corda.lib.accounts.workflows.flows.SendKeyForAccount (version 1) {}
[INFO ] 2023-01-31T07:00:08,237Z [Test worker] internal.NodeFlowManager. - Registered com.r3.corda.lib.accounts.workflows.flows.ShareAccountInfo to initiate com.r3.corda.lib.accounts.workflows.flows.ShareAccountInfoHandler (version 1) {}
[INFO ] 2023-01-31T07:00:08,237Z [Test worker] internal.NodeFlowManager. - Registered net.corda.samples.obligation.flows.IOUIssueFlow to initiate net.corda.samples.obligation.flows.IOUIssueFlowResponder (version 1) {}
[INFO ] 2023-01-31T07:00:08,237Z [Test worker] internal.NodeFlowManager. - Registered net.corda.samples.obligation.flows.IOUSettleFlow to initiate net.corda.samples.obligation.flows.IOUSettleFlowResponder (version 1) {}
[INFO ] 2023-01-31T07:00:08,237Z [Test worker] internal.NodeFlowManager. - Registered net.corda.samples.obligation.flows.IOUTransferFlow to initiate net.corda.samples.obligation.flows.IOUTransferFlowResponder (version 1) {}
[INFO ] 2023-01-31T07:00:08,237Z [Test worker] internal.NodeFlowManager. - Registered net.corda.samples.obligation.flows.SyncKey to initiate net.corda.samples.obligation.flows.SyncKeyResponder (version 1) {}
[INFO ] 2023-01-31T07:00:08,243Z [Test worker] internal.InternalMockNetwork$MockNode. - Loaded network parameters: NetworkParameters {
      minimumPlatformVersion=4
      notaries=[NotaryInfo(identity=O=Notary, L=London, C=GB, validating=true)]
      maxMessageSize=10485760
      maxTransactionSize=524288000
      whitelistedContractImplementations {
        
      }
      eventHorizon=PT720H
      packageOwnership {
        
      }
      modifiedTime=2023-01-31T06:59:36.686Z
      epoch=1
  } {}
[INFO ] 2023-01-31T07:00:08,955Z [Test worker] internal.InternalMockNetwork$MockNode. - Connected to H2 database. {}
[INFO ] 2023-01-31T07:00:08,957Z [Test worker] persistence.HibernateConfiguration. - Init HibernateConfiguration for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1), AccountsContractsSchemaV1(name=com.r3.corda.lib.accounts.contracts.internal.schemas.AccountsContractsSchema, version=1), AccountsWorkflowsSchemaV1(name=com.r3.corda.lib.accounts.workflows.internal.schemas.AccountsWorkflowsSchema, version=1), CashSchemaV1(name=net.corda.finance.schemas.CashSchema, version=1), CommercialPaperSchemaV1(name=net.corda.finance.schemas.CommercialPaperSchema, version=1)] {}
[INFO ] 2023-01-31T07:00:08,957Z [Test worker] factory.BaseSessionFactoryFactory. - Creating session factory for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1), AccountsContractsSchemaV1(name=com.r3.corda.lib.accounts.contracts.internal.schemas.AccountsContractsSchema, version=1), AccountsWorkflowsSchemaV1(name=com.r3.corda.lib.accounts.workflows.internal.schemas.AccountsWorkflowsSchema, version=1), CashSchemaV1(name=net.corda.finance.schemas.CashSchema, version=1), CommercialPaperSchemaV1(name=net.corda.finance.schemas.CommercialPaperSchema, version=1)] {}
[INFO ] 2023-01-31T07:00:09,114Z [Test worker] factory.BaseSessionFactoryFactory. - Created session factory for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1), AccountsContractsSchemaV1(name=com.r3.corda.lib.accounts.contracts.internal.schemas.AccountsContractsSchema, version=1), AccountsWorkflowsSchemaV1(name=com.r3.corda.lib.accounts.workflows.internal.schemas.AccountsWorkflowsSchema, version=1), CashSchemaV1(name=net.corda.finance.schemas.CashSchema, version=1), CommercialPaperSchemaV1(name=net.corda.finance.schemas.CommercialPaperSchema, version=1)] {}
[INFO ] 2023-01-31T07:00:09,119Z [Test worker] internal.InternalMockNetwork$MockNode. - Node-info has changed so submitting update. Old node-info was null {}
[INFO ] 2023-01-31T07:00:09,122Z [Test worker] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 2, L=London, C=GB], platformVersion=11, serial=1675148409119), owningKey=DL2mqLGxXzFLMLNsgGnXa1wt1fQEeVYREZC6mEHKM5LxQV {}
[INFO ] 2023-01-31T07:00:09,122Z [Test worker] network.PersistentNetworkMapCache. - No previous node found for O=Mock Company 2, L=London, C=GB {}
[INFO ] 2023-01-31T07:00:09,130Z [Test worker] internal.InternalMockNetwork$MockNode. - New node-info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 2, L=London, C=GB], platformVersion=11, serial=1675148409119) {}
[INFO ] 2023-01-31T07:00:09,137Z [Test worker] network.NetworkMapUpdater. - Auto-accept enabled for network parameter changes which modify only: [epoch, modifiedTime, packageOwnership, whitelistedContractImplementations] {}
[INFO ] 2023-01-31T07:00:09,137Z [Test worker] internal.MockNodeMessagingService. - Status change to true {}
[INFO ] 2023-01-31T07:00:09,137Z [Test worker] internal.InternalMockNetwork$MockNode. - MessagingService active change to: true {}
[INFO ] 2023-01-31T07:00:09,150Z [MockNode-3-2] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 2, L=London, C=GB], platformVersion=11, serial=1675148409119), owningKey=DL2mqLGxXzFLMLNsgGnXa1wt1fQEeVYREZC6mEHKM5LxQV {}
[INFO ] 2023-01-31T07:00:09,150Z [MockNode-3-2] network.PersistentNetworkMapCache. - Previous node was identical to incoming one - doing nothing {}
[INFO ] 2023-01-31T07:00:09,177Z [Test worker] persistence.NodeAttachmentService. - Stored new attachment: id=D370FD972C7E07CE73F4F9B7886D226807F6B16C4EE287398B9C69384109DC14 uploader=app filename=Accounts SDK - States and Contracts {}
[INFO ] 2023-01-31T07:00:09,234Z [Test worker] persistence.NodeAttachmentService. - Stored new attachment: id=BD0C932EAF8B1FE96DCBBF275B914BCD776D14EDC8F97DCEBF7E15DA09C606AE uploader=app filename=Corda Finance Demo {}
[INFO ] 2023-01-31T07:00:09,252Z [Test worker] persistence.NodeAttachmentService. - Stored new attachment: id=8D797B45F40704FA4FD70921F5BC6E2D7B34450D345CE6788D2A87859EF63BD8 uploader=app filename=Obligation Contracts {}
[INFO ] 2023-01-31T07:00:09,255Z [Test worker] internal.InternalMockNetwork$MockNode. - Installed com.r3.corda.lib.accounts.workflows.services.KeyManagementBackedAccountService Corda service {}
[INFO ] 2023-01-31T07:00:09,280Z [Test worker] statemachine.SingleThreadedStateMachineManager. - Node ready, info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 2, L=London, C=GB], platformVersion=11, serial=1675148409119) {}
[INFO ] 2023-01-31T07:00:09,283Z [Test worker] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Notary, L=London, C=GB], platformVersion=11, serial=1675148405520), owningKey=DLBRwkZUo2ij1zLrLbCbGQmENLkPebt4G4ENVu86CUqvfj {}
[INFO ] 2023-01-31T07:00:09,283Z [Test worker] network.PersistentNetworkMapCache. - No previous node found for O=Notary, L=London, C=GB {}
[INFO ] 2023-01-31T07:00:09,297Z [Test worker] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 2, L=London, C=GB], platformVersion=11, serial=1675148409119), owningKey=DL2mqLGxXzFLMLNsgGnXa1wt1fQEeVYREZC6mEHKM5LxQV {}
[INFO ] 2023-01-31T07:00:09,297Z [Test worker] network.PersistentNetworkMapCache. - No previous node found for O=Mock Company 2, L=London, C=GB {}
[INFO ] 2023-01-31T07:00:09,309Z [Test worker] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 1, L=London, C=GB], platformVersion=11, serial=1675148407899), owningKey=DLAstkg1RVriNHWv5u7xtsAFxomMTe7nN2eLXrLZrL5VL3 {}
[INFO ] 2023-01-31T07:00:09,309Z [Test worker] network.PersistentNetworkMapCache. - No previous node found for O=Mock Company 1, L=London, C=GB {}
[INFO ] 2023-01-31T07:00:09,320Z [Test worker] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 2, L=London, C=GB], platformVersion=11, serial=1675148409119), owningKey=DL2mqLGxXzFLMLNsgGnXa1wt1fQEeVYREZC6mEHKM5LxQV {}
[INFO ] 2023-01-31T07:00:09,320Z [Test worker] network.PersistentNetworkMapCache. - No previous node found for O=Mock Company 2, L=London, C=GB {}
[INFO ] 2023-01-31T07:00:09,329Z [Test worker] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 2, L=London, C=GB], platformVersion=11, serial=1675148409119), owningKey=DL2mqLGxXzFLMLNsgGnXa1wt1fQEeVYREZC6mEHKM5LxQV {}
[INFO ] 2023-01-31T07:00:09,329Z [Test worker] network.PersistentNetworkMapCache. - Previous node was identical to incoming one - doing nothing {}
[INFO ] 2023-01-31T07:00:09,329Z [Test worker] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 2, L=London, C=GB], platformVersion=11, serial=1675148409119), owningKey=DL2mqLGxXzFLMLNsgGnXa1wt1fQEeVYREZC6mEHKM5LxQV {}
[INFO ] 2023-01-31T07:00:09,329Z [Test worker] network.PersistentNetworkMapCache. - Previous node was identical to incoming one - doing nothing {}
[INFO ] 2023-01-31T07:00:09,341Z [Test worker] cordapp.JarScanningCordappLoader. - Looking for CorDapps in [build/mock-network/20230131-065937.006-DE8FE0700A9846CF/nodes/3/cordapps] {}
[INFO ] 2023-01-31T07:00:09,341Z [Test worker] cordapp.JarScanningCordappLoader. - Loading CorDapps from RestrictedURL(url=file:/Users/peter.li/Desktop/obligation-cordapp/workflows/build/mock-network/20230131-065937.006-DE8FE0700A9846CF/nodes/3/cordapps/accounts-contracts-1.0.jar, rootPackageName=null), RestrictedURL(url=file:/Users/peter.li/Desktop/obligation-cordapp/workflows/build/mock-network/20230131-065937.006-DE8FE0700A9846CF/nodes/3/cordapps/accounts-workflows-1.0.jar, rootPackageName=null), RestrictedURL(url=file:/Users/peter.li/Desktop/obligation-cordapp/workflows/build/mock-network/20230131-065937.006-DE8FE0700A9846CF/nodes/3/cordapps/corda-finance-contracts-4.9.jar, rootPackageName=null), RestrictedURL(url=file:/Users/peter.li/Desktop/obligation-cordapp/workflows/build/mock-network/20230131-065937.006-DE8FE0700A9846CF/nodes/3/cordapps/contracts-1.0.jar, rootPackageName=null), RestrictedURL(url=file:/Users/peter.li/Desktop/obligation-cordapp/workflows/build/mock-network/20230131-065937.006-DE8FE0700A9846CF/nodes/3/cordapps/workflows-1.0.jar, rootPackageName=null) {}
[INFO ] 2023-01-31T07:00:09,341Z [Test worker] cordapp.JarScanningCordappLoader. - Scanning CorDapp in file:/Users/peter.li/Desktop/obligation-cordapp/workflows/build/mock-network/20230131-065937.006-DE8FE0700A9846CF/nodes/3/cordapps/accounts-contracts-1.0.jar {}
[INFO ] 2023-01-31T07:00:09,369Z [Test worker] cordapp.JarScanningCordappLoader. - Scanning CorDapp in file:/Users/peter.li/Desktop/obligation-cordapp/workflows/build/mock-network/20230131-065937.006-DE8FE0700A9846CF/nodes/3/cordapps/accounts-workflows-1.0.jar {}
[INFO ] 2023-01-31T07:00:09,377Z [Test worker] cordapp.JarScanningCordappLoader. - Scanning CorDapp in file:/Users/peter.li/Desktop/obligation-cordapp/workflows/build/mock-network/20230131-065937.006-DE8FE0700A9846CF/nodes/3/cordapps/corda-finance-contracts-4.9.jar {}
[INFO ] 2023-01-31T07:00:09,389Z [Test worker] cordapp.JarScanningCordappLoader. - Scanning CorDapp in file:/Users/peter.li/Desktop/obligation-cordapp/workflows/build/mock-network/20230131-065937.006-DE8FE0700A9846CF/nodes/3/cordapps/contracts-1.0.jar {}
[INFO ] 2023-01-31T07:00:09,395Z [Test worker] cordapp.JarScanningCordappLoader. - Scanning CorDapp in file:/Users/peter.li/Desktop/obligation-cordapp/workflows/build/mock-network/20230131-065937.006-DE8FE0700A9846CF/nodes/3/cordapps/workflows-1.0.jar {}
[INFO ] 2023-01-31T07:00:09,427Z [Test worker] internal.InternalMockNetwork$MockNode. - MessagingService active change to: false {}
[INFO ] 2023-01-31T07:00:09,429Z [Test worker] internal.InternalMockNetwork$MockNode. - Flow external operation executor has a max of 2 threads {}
[INFO ] 2023-01-31T07:00:09,430Z [Test worker] internal.InternalMockNetwork$MockNode. - Node starting up ... {}
[INFO ] 2023-01-31T07:00:09,471Z [Test worker] internal.KeyStoreHandler. - Loaded trusted root certificate: DL7fwxLm5xbiMD8adUuYTsPZHAict46Ng4w6RNcySt5vAw, alias: cordarootca {}
[INFO ] 2023-01-31T07:00:09,472Z [Test worker] internal.KeyStoreHandler. - Loaded node identity key: DLGqmDGmX5RFpyp6eUqfVe5CRNsXXRGmvvdVCDS3CGYim9, alias: identity-private-key {}
[INFO ] 2023-01-31T07:00:09,478Z [Test worker] internal.NodeFlowManager. - Registered com.r3.corda.lib.accounts.workflows.flows.ShareStateAndSyncAccounts to initiate com.r3.corda.lib.accounts.workflows.flows.ReceiveStateAndSyncAccounts (version 1) {}
[INFO ] 2023-01-31T07:00:09,478Z [Test worker] internal.NodeFlowManager. - Registered com.r3.corda.lib.accounts.workflows.flows.ShareStateWithAccount to initiate com.r3.corda.lib.accounts.workflows.flows.ReceiveStateForAccount (version 1) {}
[INFO ] 2023-01-31T07:00:09,478Z [Test worker] internal.NodeFlowManager. - Registered com.r3.corda.lib.accounts.workflows.flows.RequestAccountInfo to initiate com.r3.corda.lib.accounts.workflows.flows.RequestAccountInfoHandler (version 1) {}
[INFO ] 2023-01-31T07:00:09,478Z [Test worker] internal.NodeFlowManager. - Registered com.r3.corda.lib.accounts.workflows.flows.RequestKeyForAccount to initiate com.r3.corda.lib.accounts.workflows.flows.SendKeyForAccount (version 1) {}
[INFO ] 2023-01-31T07:00:09,478Z [Test worker] internal.NodeFlowManager. - Registered com.r3.corda.lib.accounts.workflows.flows.ShareAccountInfo to initiate com.r3.corda.lib.accounts.workflows.flows.ShareAccountInfoHandler (version 1) {}
[INFO ] 2023-01-31T07:00:09,478Z [Test worker] internal.NodeFlowManager. - Registered net.corda.samples.obligation.flows.IOUIssueFlow to initiate net.corda.samples.obligation.flows.IOUIssueFlowResponder (version 1) {}
[INFO ] 2023-01-31T07:00:09,478Z [Test worker] internal.NodeFlowManager. - Registered net.corda.samples.obligation.flows.IOUSettleFlow to initiate net.corda.samples.obligation.flows.IOUSettleFlowResponder (version 1) {}
[INFO ] 2023-01-31T07:00:09,478Z [Test worker] internal.NodeFlowManager. - Registered net.corda.samples.obligation.flows.IOUTransferFlow to initiate net.corda.samples.obligation.flows.IOUTransferFlowResponder (version 1) {}
[INFO ] 2023-01-31T07:00:09,478Z [Test worker] internal.NodeFlowManager. - Registered net.corda.samples.obligation.flows.SyncKey to initiate net.corda.samples.obligation.flows.SyncKeyResponder (version 1) {}
[INFO ] 2023-01-31T07:00:09,483Z [Test worker] internal.InternalMockNetwork$MockNode. - Loaded network parameters: NetworkParameters {
      minimumPlatformVersion=4
      notaries=[NotaryInfo(identity=O=Notary, L=London, C=GB, validating=true)]
      maxMessageSize=10485760
      maxTransactionSize=524288000
      whitelistedContractImplementations {
        
      }
      eventHorizon=PT720H
      packageOwnership {
        
      }
      modifiedTime=2023-01-31T06:59:36.686Z
      epoch=1
  } {}
[INFO ] 2023-01-31T07:00:10,143Z [Test worker] internal.InternalMockNetwork$MockNode. - Connected to H2 database. {}
[INFO ] 2023-01-31T07:00:10,145Z [Test worker] persistence.HibernateConfiguration. - Init HibernateConfiguration for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1), AccountsContractsSchemaV1(name=com.r3.corda.lib.accounts.contracts.internal.schemas.AccountsContractsSchema, version=1), AccountsWorkflowsSchemaV1(name=com.r3.corda.lib.accounts.workflows.internal.schemas.AccountsWorkflowsSchema, version=1), CashSchemaV1(name=net.corda.finance.schemas.CashSchema, version=1), CommercialPaperSchemaV1(name=net.corda.finance.schemas.CommercialPaperSchema, version=1)] {}
[INFO ] 2023-01-31T07:00:10,145Z [Test worker] factory.BaseSessionFactoryFactory. - Creating session factory for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1), AccountsContractsSchemaV1(name=com.r3.corda.lib.accounts.contracts.internal.schemas.AccountsContractsSchema, version=1), AccountsWorkflowsSchemaV1(name=com.r3.corda.lib.accounts.workflows.internal.schemas.AccountsWorkflowsSchema, version=1), CashSchemaV1(name=net.corda.finance.schemas.CashSchema, version=1), CommercialPaperSchemaV1(name=net.corda.finance.schemas.CommercialPaperSchema, version=1)] {}
[INFO ] 2023-01-31T07:00:10,335Z [Test worker] factory.BaseSessionFactoryFactory. - Created session factory for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1), AccountsContractsSchemaV1(name=com.r3.corda.lib.accounts.contracts.internal.schemas.AccountsContractsSchema, version=1), AccountsWorkflowsSchemaV1(name=com.r3.corda.lib.accounts.workflows.internal.schemas.AccountsWorkflowsSchema, version=1), CashSchemaV1(name=net.corda.finance.schemas.CashSchema, version=1), CommercialPaperSchemaV1(name=net.corda.finance.schemas.CommercialPaperSchema, version=1)] {}
[INFO ] 2023-01-31T07:00:10,339Z [Test worker] internal.InternalMockNetwork$MockNode. - Node-info has changed so submitting update. Old node-info was null {}
[INFO ] 2023-01-31T07:00:10,341Z [Test worker] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 3, L=London, C=GB], platformVersion=11, serial=1675148410339), owningKey=DLGqmDGmX5RFpyp6eUqfVe5CRNsXXRGmvvdVCDS3CGYim9 {}
[INFO ] 2023-01-31T07:00:10,341Z [Test worker] network.PersistentNetworkMapCache. - No previous node found for O=Mock Company 3, L=London, C=GB {}
[INFO ] 2023-01-31T07:00:10,348Z [Test worker] internal.InternalMockNetwork$MockNode. - New node-info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 3, L=London, C=GB], platformVersion=11, serial=1675148410339) {}
[INFO ] 2023-01-31T07:00:10,355Z [Test worker] network.NetworkMapUpdater. - Auto-accept enabled for network parameter changes which modify only: [epoch, modifiedTime, packageOwnership, whitelistedContractImplementations] {}
[INFO ] 2023-01-31T07:00:10,356Z [Test worker] internal.MockNodeMessagingService. - Status change to true {}
[INFO ] 2023-01-31T07:00:10,356Z [Test worker] internal.InternalMockNetwork$MockNode. - MessagingService active change to: true {}
[INFO ] 2023-01-31T07:00:10,366Z [MockNode-4-2] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 3, L=London, C=GB], platformVersion=11, serial=1675148410339), owningKey=DLGqmDGmX5RFpyp6eUqfVe5CRNsXXRGmvvdVCDS3CGYim9 {}
[INFO ] 2023-01-31T07:00:10,366Z [MockNode-4-2] network.PersistentNetworkMapCache. - Previous node was identical to incoming one - doing nothing {}
[INFO ] 2023-01-31T07:00:10,386Z [Test worker] persistence.NodeAttachmentService. - Stored new attachment: id=D370FD972C7E07CE73F4F9B7886D226807F6B16C4EE287398B9C69384109DC14 uploader=app filename=Accounts SDK - States and Contracts {}
[INFO ] 2023-01-31T07:00:10,428Z [Test worker] persistence.NodeAttachmentService. - Stored new attachment: id=BD0C932EAF8B1FE96DCBBF275B914BCD776D14EDC8F97DCEBF7E15DA09C606AE uploader=app filename=Corda Finance Demo {}
[INFO ] 2023-01-31T07:00:10,445Z [Test worker] persistence.NodeAttachmentService. - Stored new attachment: id=8D797B45F40704FA4FD70921F5BC6E2D7B34450D345CE6788D2A87859EF63BD8 uploader=app filename=Obligation Contracts {}
[INFO ] 2023-01-31T07:00:10,448Z [Test worker] internal.InternalMockNetwork$MockNode. - Installed com.r3.corda.lib.accounts.workflows.services.KeyManagementBackedAccountService Corda service {}
[INFO ] 2023-01-31T07:00:10,468Z [Test worker] statemachine.SingleThreadedStateMachineManager. - Node ready, info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 3, L=London, C=GB], platformVersion=11, serial=1675148410339) {}
[INFO ] 2023-01-31T07:00:10,470Z [Test worker] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Notary, L=London, C=GB], platformVersion=11, serial=1675148405520), owningKey=DLBRwkZUo2ij1zLrLbCbGQmENLkPebt4G4ENVu86CUqvfj {}
[INFO ] 2023-01-31T07:00:10,470Z [Test worker] network.PersistentNetworkMapCache. - No previous node found for O=Notary, L=London, C=GB {}
[INFO ] 2023-01-31T07:00:10,481Z [Test worker] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 3, L=London, C=GB], platformVersion=11, serial=1675148410339), owningKey=DLGqmDGmX5RFpyp6eUqfVe5CRNsXXRGmvvdVCDS3CGYim9 {}
[INFO ] 2023-01-31T07:00:10,481Z [Test worker] network.PersistentNetworkMapCache. - No previous node found for O=Mock Company 3, L=London, C=GB {}
[INFO ] 2023-01-31T07:00:10,516Z [Test worker] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 1, L=London, C=GB], platformVersion=11, serial=1675148407899), owningKey=DLAstkg1RVriNHWv5u7xtsAFxomMTe7nN2eLXrLZrL5VL3 {}
[INFO ] 2023-01-31T07:00:10,516Z [Test worker] network.PersistentNetworkMapCache. - No previous node found for O=Mock Company 1, L=London, C=GB {}
[INFO ] 2023-01-31T07:00:10,524Z [Test worker] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 3, L=London, C=GB], platformVersion=11, serial=1675148410339), owningKey=DLGqmDGmX5RFpyp6eUqfVe5CRNsXXRGmvvdVCDS3CGYim9 {}
[INFO ] 2023-01-31T07:00:10,524Z [Test worker] network.PersistentNetworkMapCache. - No previous node found for O=Mock Company 3, L=London, C=GB {}
[INFO ] 2023-01-31T07:00:10,533Z [Test worker] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 2, L=London, C=GB], platformVersion=11, serial=1675148409119), owningKey=DL2mqLGxXzFLMLNsgGnXa1wt1fQEeVYREZC6mEHKM5LxQV {}
[INFO ] 2023-01-31T07:00:10,533Z [Test worker] network.PersistentNetworkMapCache. - No previous node found for O=Mock Company 2, L=London, C=GB {}
[INFO ] 2023-01-31T07:00:10,540Z [Test worker] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 3, L=London, C=GB], platformVersion=11, serial=1675148410339), owningKey=DLGqmDGmX5RFpyp6eUqfVe5CRNsXXRGmvvdVCDS3CGYim9 {}
[INFO ] 2023-01-31T07:00:10,540Z [Test worker] network.PersistentNetworkMapCache. - No previous node found for O=Mock Company 3, L=London, C=GB {}
[INFO ] 2023-01-31T07:00:10,548Z [Test worker] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 3, L=London, C=GB], platformVersion=11, serial=1675148410339), owningKey=DLGqmDGmX5RFpyp6eUqfVe5CRNsXXRGmvvdVCDS3CGYim9 {}
[INFO ] 2023-01-31T07:00:10,548Z [Test worker] network.PersistentNetworkMapCache. - Previous node was identical to incoming one - doing nothing {}
[INFO ] 2023-01-31T07:00:10,548Z [Test worker] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 3, L=London, C=GB], platformVersion=11, serial=1675148410339), owningKey=DLGqmDGmX5RFpyp6eUqfVe5CRNsXXRGmvvdVCDS3CGYim9 {}
[INFO ] 2023-01-31T07:00:10,548Z [Test worker] network.PersistentNetworkMapCache. - Previous node was identical to incoming one - doing nothing {}
[WARN ] 2023-01-31T07:00:10,550Z [Test worker] internal.NodeFlowManager. - Multiple flows are registered for InitiatingFlow: class net.corda.samples.obligation.flows.IOUIssueFlow, currently using: class net.corda.samples.obligation.flows.IOUIssueFlowResponder {}
[INFO ] 2023-01-31T07:00:10,550Z [Test worker] internal.NodeFlowManager. - Registered net.corda.samples.obligation.flows.IOUIssueFlow to initiate net.corda.samples.obligation.flows.IOUIssueFlowResponder (version 1) {}
[WARN ] 2023-01-31T07:00:10,553Z [Test worker] internal.NodeFlowManager. - Multiple flows are registered for InitiatingFlow: class net.corda.samples.obligation.flows.IOUIssueFlow, currently using: class net.corda.samples.obligation.flows.IOUIssueFlowResponder {}
[INFO ] 2023-01-31T07:00:10,553Z [Test worker] internal.NodeFlowManager. - Registered net.corda.samples.obligation.flows.IOUIssueFlow to initiate net.corda.samples.obligation.flows.IOUIssueFlowResponder (version 1) {}
[WARN ] 2023-01-31T07:00:10,553Z [Test worker] internal.NodeFlowManager. - Multiple flows are registered for InitiatingFlow: class net.corda.samples.obligation.flows.IOUIssueFlow, currently using: class net.corda.samples.obligation.flows.IOUIssueFlowResponder {}
[INFO ] 2023-01-31T07:00:10,553Z [Test worker] internal.NodeFlowManager. - Registered net.corda.samples.obligation.flows.IOUIssueFlow to initiate net.corda.samples.obligation.flows.IOUIssueFlowResponder (version 1) {}
[WARN ] 2023-01-31T07:00:10,553Z [Test worker] internal.NodeFlowManager. - Multiple flows are registered for InitiatingFlow: class net.corda.samples.obligation.flows.IOUSettleFlow, currently using: class net.corda.samples.obligation.flows.IOUSettleFlowResponder {}
[INFO ] 2023-01-31T07:00:10,553Z [Test worker] internal.NodeFlowManager. - Registered net.corda.samples.obligation.flows.IOUSettleFlow to initiate net.corda.samples.obligation.flows.IOUSettleFlowResponder (version 1) {}
[WARN ] 2023-01-31T07:00:10,553Z [Test worker] internal.NodeFlowManager. - Multiple flows are registered for InitiatingFlow: class net.corda.samples.obligation.flows.IOUSettleFlow, currently using: class net.corda.samples.obligation.flows.IOUSettleFlowResponder {}
[INFO ] 2023-01-31T07:00:10,553Z [Test worker] internal.NodeFlowManager. - Registered net.corda.samples.obligation.flows.IOUSettleFlow to initiate net.corda.samples.obligation.flows.IOUSettleFlowResponder (version 1) {}
[WARN ] 2023-01-31T07:00:10,553Z [Test worker] internal.NodeFlowManager. - Multiple flows are registered for InitiatingFlow: class net.corda.samples.obligation.flows.IOUSettleFlow, currently using: class net.corda.samples.obligation.flows.IOUSettleFlowResponder {}
[INFO ] 2023-01-31T07:00:10,553Z [Test worker] internal.NodeFlowManager. - Registered net.corda.samples.obligation.flows.IOUSettleFlow to initiate net.corda.samples.obligation.flows.IOUSettleFlowResponder (version 1) {}
[INFO ] 2023-01-31T07:00:11,484Z [Mock network] corda.flow. - No need to notarise this transaction. {actor_id=Only For Testing, actor_owning_identity=O=Mock Company 1, L=London, C=GB, actor_store_id=TEST, fiber-id=10000001, flow-id=b1717d71-c8a0-4984-a1ef-49aadbe266ba, invocation_id=c9866efa-305e-4a12-865c-8578eb1db6c1, invocation_timestamp=2023-01-31T07:00:10.585Z, origin=Only For Testing, session_id=c9866efa-305e-4a12-865c-8578eb1db6c1, session_timestamp=2023-01-31T07:00:10.585Z, thread-id=859, tx_id=1CE5D3FE0ABB1BD37C3E10119E06383AC86F78A0AA06FF992ECEE4D318ED1D39}
[INFO ] 2023-01-31T07:00:11,484Z [Mock network] corda.flow. - Recording transaction locally. {actor_id=Only For Testing, actor_owning_identity=O=Mock Company 1, L=London, C=GB, actor_store_id=TEST, fiber-id=10000001, flow-id=b1717d71-c8a0-4984-a1ef-49aadbe266ba, invocation_id=c9866efa-305e-4a12-865c-8578eb1db6c1, invocation_timestamp=2023-01-31T07:00:10.585Z, origin=Only For Testing, session_id=c9866efa-305e-4a12-865c-8578eb1db6c1, session_timestamp=2023-01-31T07:00:10.585Z, thread-id=859, tx_id=1CE5D3FE0ABB1BD37C3E10119E06383AC86F78A0AA06FF992ECEE4D318ED1D39}
[INFO ] 2023-01-31T07:00:11,593Z [Mock network] corda.flow. - Recorded transaction locally successfully. {actor_id=Only For Testing, actor_owning_identity=O=Mock Company 1, L=London, C=GB, actor_store_id=TEST, fiber-id=10000001, flow-id=b1717d71-c8a0-4984-a1ef-49aadbe266ba, invocation_id=c9866efa-305e-4a12-865c-8578eb1db6c1, invocation_timestamp=2023-01-31T07:00:10.585Z, origin=Only For Testing, session_id=c9866efa-305e-4a12-865c-8578eb1db6c1, session_timestamp=2023-01-31T07:00:10.585Z, thread-id=859, tx_id=1CE5D3FE0ABB1BD37C3E10119E06383AC86F78A0AA06FF992ECEE4D318ED1D39}
[INFO ] 2023-01-31T07:00:11,593Z [Mock network] corda.flow. - All parties received the transaction successfully. {actor_id=Only For Testing, actor_owning_identity=O=Mock Company 1, L=London, C=GB, actor_store_id=TEST, fiber-id=10000001, flow-id=b1717d71-c8a0-4984-a1ef-49aadbe266ba, invocation_id=c9866efa-305e-4a12-865c-8578eb1db6c1, invocation_timestamp=2023-01-31T07:00:10.585Z, origin=Only For Testing, session_id=c9866efa-305e-4a12-865c-8578eb1db6c1, session_timestamp=2023-01-31T07:00:10.585Z, thread-id=859, tx_id=1CE5D3FE0ABB1BD37C3E10119E06383AC86F78A0AA06FF992ECEE4D318ED1D39}
[INFO ] 2023-01-31T07:00:11,778Z [Mock network] corda.flow. - Received transaction acknowledgement request from party O=Mock Company 1, L=London, C=GB. {fiber-id=10000002, flow-id=8cf1d560-1db5-4409-994d-08b82d8d8a69, invocation_id=e9480ffa-a8bf-4fa3-8da0-b22ac4891409, invocation_timestamp=2023-01-31T07:00:11.734Z, origin=O=Mock Company 1, L=London, C=GB, session_id=e9480ffa-a8bf-4fa3-8da0-b22ac4891409, session_timestamp=2023-01-31T07:00:11.734Z, thread-id=859, tx_id=1CE5D3FE0ABB1BD37C3E10119E06383AC86F78A0AA06FF992ECEE4D318ED1D39}
[INFO ] 2023-01-31T07:00:11,838Z [Mock network] corda.flow. - Transaction dependencies resolution completed. {fiber-id=10000002, flow-id=8cf1d560-1db5-4409-994d-08b82d8d8a69, invocation_id=e9480ffa-a8bf-4fa3-8da0-b22ac4891409, invocation_timestamp=2023-01-31T07:00:11.734Z, origin=O=Mock Company 1, L=London, C=GB, session_id=e9480ffa-a8bf-4fa3-8da0-b22ac4891409, session_timestamp=2023-01-31T07:00:11.734Z, thread-id=859, tx_id=1CE5D3FE0ABB1BD37C3E10119E06383AC86F78A0AA06FF992ECEE4D318ED1D39}
[INFO ] 2023-01-31T07:00:11,870Z [Mock network] corda.flow. - Successfully received fully signed tx. Sending it to the vault for processing. {fiber-id=10000002, flow-id=8cf1d560-1db5-4409-994d-08b82d8d8a69, invocation_id=e9480ffa-a8bf-4fa3-8da0-b22ac4891409, invocation_timestamp=2023-01-31T07:00:11.734Z, origin=O=Mock Company 1, L=London, C=GB, session_id=e9480ffa-a8bf-4fa3-8da0-b22ac4891409, session_timestamp=2023-01-31T07:00:11.734Z, thread-id=859, tx_id=1CE5D3FE0ABB1BD37C3E10119E06383AC86F78A0AA06FF992ECEE4D318ED1D39}
[INFO ] 2023-01-31T07:00:11,878Z [Mock network] corda.flow. - Successfully recorded received transaction locally. {fiber-id=10000002, flow-id=8cf1d560-1db5-4409-994d-08b82d8d8a69, invocation_id=e9480ffa-a8bf-4fa3-8da0-b22ac4891409, invocation_timestamp=2023-01-31T07:00:11.734Z, origin=O=Mock Company 1, L=London, C=GB, session_id=e9480ffa-a8bf-4fa3-8da0-b22ac4891409, session_timestamp=2023-01-31T07:00:11.734Z, thread-id=859, tx_id=1CE5D3FE0ABB1BD37C3E10119E06383AC86F78A0AA06FF992ECEE4D318ED1D39}
[INFO ] 2023-01-31T07:00:11,961Z [Mock network] corda.flow. - Received transaction acknowledgement request from party O=Mock Company 1, L=London, C=GB. {fiber-id=10000003, flow-id=9657a6d1-cfb9-4f6f-83b9-b54e7fbd8c8b, invocation_id=edd2d08a-a2de-42a4-ac19-416c1ad4d4f8, invocation_timestamp=2023-01-31T07:00:11.935Z, origin=O=Mock Company 1, L=London, C=GB, session_id=edd2d08a-a2de-42a4-ac19-416c1ad4d4f8, session_timestamp=2023-01-31T07:00:11.935Z, thread-id=859, tx_id=1CE5D3FE0ABB1BD37C3E10119E06383AC86F78A0AA06FF992ECEE4D318ED1D39}
[INFO ] 2023-01-31T07:00:11,971Z [Mock network] corda.flow. - Transaction dependencies resolution completed. {fiber-id=10000003, flow-id=9657a6d1-cfb9-4f6f-83b9-b54e7fbd8c8b, invocation_id=edd2d08a-a2de-42a4-ac19-416c1ad4d4f8, invocation_timestamp=2023-01-31T07:00:11.935Z, origin=O=Mock Company 1, L=London, C=GB, session_id=edd2d08a-a2de-42a4-ac19-416c1ad4d4f8, session_timestamp=2023-01-31T07:00:11.935Z, thread-id=859, tx_id=1CE5D3FE0ABB1BD37C3E10119E06383AC86F78A0AA06FF992ECEE4D318ED1D39}
[INFO ] 2023-01-31T07:00:12,001Z [Mock network] corda.flow. - Successfully received fully signed tx. Sending it to the vault for processing. {fiber-id=10000003, flow-id=9657a6d1-cfb9-4f6f-83b9-b54e7fbd8c8b, invocation_id=edd2d08a-a2de-42a4-ac19-416c1ad4d4f8, invocation_timestamp=2023-01-31T07:00:11.935Z, origin=O=Mock Company 1, L=London, C=GB, session_id=edd2d08a-a2de-42a4-ac19-416c1ad4d4f8, session_timestamp=2023-01-31T07:00:11.935Z, thread-id=859, tx_id=1CE5D3FE0ABB1BD37C3E10119E06383AC86F78A0AA06FF992ECEE4D318ED1D39}
[INFO ] 2023-01-31T07:00:12,007Z [Mock network] corda.flow. - Successfully recorded received transaction locally. {fiber-id=10000003, flow-id=9657a6d1-cfb9-4f6f-83b9-b54e7fbd8c8b, invocation_id=edd2d08a-a2de-42a4-ac19-416c1ad4d4f8, invocation_timestamp=2023-01-31T07:00:11.935Z, origin=O=Mock Company 1, L=London, C=GB, session_id=edd2d08a-a2de-42a4-ac19-416c1ad4d4f8, session_timestamp=2023-01-31T07:00:11.935Z, thread-id=859, tx_id=1CE5D3FE0ABB1BD37C3E10119E06383AC86F78A0AA06FF992ECEE4D318ED1D39}
[INFO ] 2023-01-31T07:00:12,048Z [Mock network] corda.flow. - No need to notarise this transaction. {actor_id=Only For Testing, actor_owning_identity=O=Mock Company 2, L=London, C=GB, actor_store_id=TEST, fiber-id=10000004, flow-id=e31c19d4-5287-4272-ab86-18ec7b15d8bc, invocation_id=6510bd4d-1662-4816-a755-5cd55ce5bbf4, invocation_timestamp=2023-01-31T07:00:12.030Z, origin=Only For Testing, session_id=6510bd4d-1662-4816-a755-5cd55ce5bbf4, session_timestamp=2023-01-31T07:00:12.030Z, thread-id=859, tx_id=6D5369D55332DE1241B79EDE882C18B3A79A731E0F243516A79FCBA01C6D249C}
[INFO ] 2023-01-31T07:00:12,048Z [Mock network] corda.flow. - Recording transaction locally. {actor_id=Only For Testing, actor_owning_identity=O=Mock Company 2, L=London, C=GB, actor_store_id=TEST, fiber-id=10000004, flow-id=e31c19d4-5287-4272-ab86-18ec7b15d8bc, invocation_id=6510bd4d-1662-4816-a755-5cd55ce5bbf4, invocation_timestamp=2023-01-31T07:00:12.030Z, origin=Only For Testing, session_id=6510bd4d-1662-4816-a755-5cd55ce5bbf4, session_timestamp=2023-01-31T07:00:12.030Z, thread-id=859, tx_id=6D5369D55332DE1241B79EDE882C18B3A79A731E0F243516A79FCBA01C6D249C}
[INFO ] 2023-01-31T07:00:12,051Z [Mock network] corda.flow. - Recorded transaction locally successfully. {actor_id=Only For Testing, actor_owning_identity=O=Mock Company 2, L=London, C=GB, actor_store_id=TEST, fiber-id=10000004, flow-id=e31c19d4-5287-4272-ab86-18ec7b15d8bc, invocation_id=6510bd4d-1662-4816-a755-5cd55ce5bbf4, invocation_timestamp=2023-01-31T07:00:12.030Z, origin=Only For Testing, session_id=6510bd4d-1662-4816-a755-5cd55ce5bbf4, session_timestamp=2023-01-31T07:00:12.030Z, thread-id=859, tx_id=6D5369D55332DE1241B79EDE882C18B3A79A731E0F243516A79FCBA01C6D249C}
[INFO ] 2023-01-31T07:00:12,051Z [Mock network] corda.flow. - All parties received the transaction successfully. {actor_id=Only For Testing, actor_owning_identity=O=Mock Company 2, L=London, C=GB, actor_store_id=TEST, fiber-id=10000004, flow-id=e31c19d4-5287-4272-ab86-18ec7b15d8bc, invocation_id=6510bd4d-1662-4816-a755-5cd55ce5bbf4, invocation_timestamp=2023-01-31T07:00:12.030Z, origin=Only For Testing, session_id=6510bd4d-1662-4816-a755-5cd55ce5bbf4, session_timestamp=2023-01-31T07:00:12.030Z, thread-id=859, tx_id=6D5369D55332DE1241B79EDE882C18B3A79A731E0F243516A79FCBA01C6D249C}
[INFO ] 2023-01-31T07:00:12,075Z [Mock network] corda.flow. - Received transaction acknowledgement request from party O=Mock Company 2, L=London, C=GB. {fiber-id=10000005, flow-id=239dae1b-f8a8-457a-b56e-ed85393076fb, invocation_id=7f1ea09f-0a7c-4754-be0c-233bd9b0e7f1, invocation_timestamp=2023-01-31T07:00:12.066Z, origin=O=Mock Company 2, L=London, C=GB, session_id=7f1ea09f-0a7c-4754-be0c-233bd9b0e7f1, session_timestamp=2023-01-31T07:00:12.066Z, thread-id=859, tx_id=6D5369D55332DE1241B79EDE882C18B3A79A731E0F243516A79FCBA01C6D249C}
[INFO ] 2023-01-31T07:00:12,084Z [Mock network] corda.flow. - Transaction dependencies resolution completed. {fiber-id=10000005, flow-id=239dae1b-f8a8-457a-b56e-ed85393076fb, invocation_id=7f1ea09f-0a7c-4754-be0c-233bd9b0e7f1, invocation_timestamp=2023-01-31T07:00:12.066Z, origin=O=Mock Company 2, L=London, C=GB, session_id=7f1ea09f-0a7c-4754-be0c-233bd9b0e7f1, session_timestamp=2023-01-31T07:00:12.066Z, thread-id=859, tx_id=6D5369D55332DE1241B79EDE882C18B3A79A731E0F243516A79FCBA01C6D249C}
[INFO ] 2023-01-31T07:00:12,087Z [Mock network] corda.flow. - Successfully received fully signed tx. Sending it to the vault for processing. {fiber-id=10000005, flow-id=239dae1b-f8a8-457a-b56e-ed85393076fb, invocation_id=7f1ea09f-0a7c-4754-be0c-233bd9b0e7f1, invocation_timestamp=2023-01-31T07:00:12.066Z, origin=O=Mock Company 2, L=London, C=GB, session_id=7f1ea09f-0a7c-4754-be0c-233bd9b0e7f1, session_timestamp=2023-01-31T07:00:12.066Z, thread-id=859, tx_id=6D5369D55332DE1241B79EDE882C18B3A79A731E0F243516A79FCBA01C6D249C}
[INFO ] 2023-01-31T07:00:12,102Z [Mock network] corda.flow. - Successfully recorded received transaction locally. {fiber-id=10000005, flow-id=239dae1b-f8a8-457a-b56e-ed85393076fb, invocation_id=7f1ea09f-0a7c-4754-be0c-233bd9b0e7f1, invocation_timestamp=2023-01-31T07:00:12.066Z, origin=O=Mock Company 2, L=London, C=GB, session_id=7f1ea09f-0a7c-4754-be0c-233bd9b0e7f1, session_timestamp=2023-01-31T07:00:12.066Z, thread-id=859, tx_id=6D5369D55332DE1241B79EDE882C18B3A79A731E0F243516A79FCBA01C6D249C}
[INFO ] 2023-01-31T07:00:12,198Z [Mock network] corda.flow. - Received transaction acknowledgement request from party O=Mock Company 2, L=London, C=GB. {fiber-id=10000006, flow-id=2a8f5941-b7f2-4906-96fd-1fc55d45f470, invocation_id=84f3b37f-afe1-4c4c-aa8b-18e06bd15ef0, invocation_timestamp=2023-01-31T07:00:12.139Z, origin=O=Mock Company 2, L=London, C=GB, session_id=84f3b37f-afe1-4c4c-aa8b-18e06bd15ef0, session_timestamp=2023-01-31T07:00:12.139Z, thread-id=859, tx_id=6D5369D55332DE1241B79EDE882C18B3A79A731E0F243516A79FCBA01C6D249C}
[INFO ] 2023-01-31T07:00:12,204Z [Mock network] corda.flow. - Transaction dependencies resolution completed. {fiber-id=10000006, flow-id=2a8f5941-b7f2-4906-96fd-1fc55d45f470, invocation_id=84f3b37f-afe1-4c4c-aa8b-18e06bd15ef0, invocation_timestamp=2023-01-31T07:00:12.139Z, origin=O=Mock Company 2, L=London, C=GB, session_id=84f3b37f-afe1-4c4c-aa8b-18e06bd15ef0, session_timestamp=2023-01-31T07:00:12.139Z, thread-id=859, tx_id=6D5369D55332DE1241B79EDE882C18B3A79A731E0F243516A79FCBA01C6D249C}
[INFO ] 2023-01-31T07:00:12,208Z [Mock network] corda.flow. - Successfully received fully signed tx. Sending it to the vault for processing. {fiber-id=10000006, flow-id=2a8f5941-b7f2-4906-96fd-1fc55d45f470, invocation_id=84f3b37f-afe1-4c4c-aa8b-18e06bd15ef0, invocation_timestamp=2023-01-31T07:00:12.139Z, origin=O=Mock Company 2, L=London, C=GB, session_id=84f3b37f-afe1-4c4c-aa8b-18e06bd15ef0, session_timestamp=2023-01-31T07:00:12.139Z, thread-id=859, tx_id=6D5369D55332DE1241B79EDE882C18B3A79A731E0F243516A79FCBA01C6D249C}
[INFO ] 2023-01-31T07:00:12,213Z [Mock network] corda.flow. - Successfully recorded received transaction locally. {fiber-id=10000006, flow-id=2a8f5941-b7f2-4906-96fd-1fc55d45f470, invocation_id=84f3b37f-afe1-4c4c-aa8b-18e06bd15ef0, invocation_timestamp=2023-01-31T07:00:12.139Z, origin=O=Mock Company 2, L=London, C=GB, session_id=84f3b37f-afe1-4c4c-aa8b-18e06bd15ef0, session_timestamp=2023-01-31T07:00:12.139Z, thread-id=859, tx_id=6D5369D55332DE1241B79EDE882C18B3A79A731E0F243516A79FCBA01C6D249C}
[INFO ] 2023-01-31T07:00:12,246Z [Mock network] corda.flow. - No need to notarise this transaction. {actor_id=Only For Testing, actor_owning_identity=O=Mock Company 3, L=London, C=GB, actor_store_id=TEST, fiber-id=10000007, flow-id=eb10093d-64eb-48ee-b388-90e8a7c23bb7, invocation_id=d5ff0d75-0858-4e62-8d8e-1a3bcd498964, invocation_timestamp=2023-01-31T07:00:12.230Z, origin=Only For Testing, session_id=d5ff0d75-0858-4e62-8d8e-1a3bcd498964, session_timestamp=2023-01-31T07:00:12.230Z, thread-id=859, tx_id=A697593A85FEF4F437ABF96DEAAB574478887BF4B5E11B454A270A1304BAE7A1}
[INFO ] 2023-01-31T07:00:12,246Z [Mock network] corda.flow. - Recording transaction locally. {actor_id=Only For Testing, actor_owning_identity=O=Mock Company 3, L=London, C=GB, actor_store_id=TEST, fiber-id=10000007, flow-id=eb10093d-64eb-48ee-b388-90e8a7c23bb7, invocation_id=d5ff0d75-0858-4e62-8d8e-1a3bcd498964, invocation_timestamp=2023-01-31T07:00:12.230Z, origin=Only For Testing, session_id=d5ff0d75-0858-4e62-8d8e-1a3bcd498964, session_timestamp=2023-01-31T07:00:12.230Z, thread-id=859, tx_id=A697593A85FEF4F437ABF96DEAAB574478887BF4B5E11B454A270A1304BAE7A1}
[INFO ] 2023-01-31T07:00:12,249Z [Mock network] corda.flow. - Recorded transaction locally successfully. {actor_id=Only For Testing, actor_owning_identity=O=Mock Company 3, L=London, C=GB, actor_store_id=TEST, fiber-id=10000007, flow-id=eb10093d-64eb-48ee-b388-90e8a7c23bb7, invocation_id=d5ff0d75-0858-4e62-8d8e-1a3bcd498964, invocation_timestamp=2023-01-31T07:00:12.230Z, origin=Only For Testing, session_id=d5ff0d75-0858-4e62-8d8e-1a3bcd498964, session_timestamp=2023-01-31T07:00:12.230Z, thread-id=859, tx_id=A697593A85FEF4F437ABF96DEAAB574478887BF4B5E11B454A270A1304BAE7A1}
[INFO ] 2023-01-31T07:00:12,249Z [Mock network] corda.flow. - All parties received the transaction successfully. {actor_id=Only For Testing, actor_owning_identity=O=Mock Company 3, L=London, C=GB, actor_store_id=TEST, fiber-id=10000007, flow-id=eb10093d-64eb-48ee-b388-90e8a7c23bb7, invocation_id=d5ff0d75-0858-4e62-8d8e-1a3bcd498964, invocation_timestamp=2023-01-31T07:00:12.230Z, origin=Only For Testing, session_id=d5ff0d75-0858-4e62-8d8e-1a3bcd498964, session_timestamp=2023-01-31T07:00:12.230Z, thread-id=859, tx_id=A697593A85FEF4F437ABF96DEAAB574478887BF4B5E11B454A270A1304BAE7A1}
[INFO ] 2023-01-31T07:00:12,271Z [Mock network] corda.flow. - Received transaction acknowledgement request from party O=Mock Company 3, L=London, C=GB. {fiber-id=10000008, flow-id=1370dce8-2846-409a-8a5d-be1f186eb333, invocation_id=d714aa8f-813c-4b8a-a968-e6fed2c690ac, invocation_timestamp=2023-01-31T07:00:12.262Z, origin=O=Mock Company 3, L=London, C=GB, session_id=d714aa8f-813c-4b8a-a968-e6fed2c690ac, session_timestamp=2023-01-31T07:00:12.262Z, thread-id=859, tx_id=A697593A85FEF4F437ABF96DEAAB574478887BF4B5E11B454A270A1304BAE7A1}
[INFO ] 2023-01-31T07:00:12,278Z [Mock network] corda.flow. - Transaction dependencies resolution completed. {fiber-id=10000008, flow-id=1370dce8-2846-409a-8a5d-be1f186eb333, invocation_id=d714aa8f-813c-4b8a-a968-e6fed2c690ac, invocation_timestamp=2023-01-31T07:00:12.262Z, origin=O=Mock Company 3, L=London, C=GB, session_id=d714aa8f-813c-4b8a-a968-e6fed2c690ac, session_timestamp=2023-01-31T07:00:12.262Z, thread-id=859, tx_id=A697593A85FEF4F437ABF96DEAAB574478887BF4B5E11B454A270A1304BAE7A1}
[INFO ] 2023-01-31T07:00:12,282Z [Mock network] corda.flow. - Successfully received fully signed tx. Sending it to the vault for processing. {fiber-id=10000008, flow-id=1370dce8-2846-409a-8a5d-be1f186eb333, invocation_id=d714aa8f-813c-4b8a-a968-e6fed2c690ac, invocation_timestamp=2023-01-31T07:00:12.262Z, origin=O=Mock Company 3, L=London, C=GB, session_id=d714aa8f-813c-4b8a-a968-e6fed2c690ac, session_timestamp=2023-01-31T07:00:12.262Z, thread-id=859, tx_id=A697593A85FEF4F437ABF96DEAAB574478887BF4B5E11B454A270A1304BAE7A1}
[INFO ] 2023-01-31T07:00:12,286Z [Mock network] corda.flow. - Successfully recorded received transaction locally. {fiber-id=10000008, flow-id=1370dce8-2846-409a-8a5d-be1f186eb333, invocation_id=d714aa8f-813c-4b8a-a968-e6fed2c690ac, invocation_timestamp=2023-01-31T07:00:12.262Z, origin=O=Mock Company 3, L=London, C=GB, session_id=d714aa8f-813c-4b8a-a968-e6fed2c690ac, session_timestamp=2023-01-31T07:00:12.262Z, thread-id=859, tx_id=A697593A85FEF4F437ABF96DEAAB574478887BF4B5E11B454A270A1304BAE7A1}
[INFO ] 2023-01-31T07:00:12,316Z [Mock network] corda.flow. - Received transaction acknowledgement request from party O=Mock Company 3, L=London, C=GB. {fiber-id=10000009, flow-id=c07691ea-2485-4298-8de5-03be007f606a, invocation_id=6bab3924-9ecd-44d0-8793-37966c5485a6, invocation_timestamp=2023-01-31T07:00:12.307Z, origin=O=Mock Company 3, L=London, C=GB, session_id=6bab3924-9ecd-44d0-8793-37966c5485a6, session_timestamp=2023-01-31T07:00:12.307Z, thread-id=859, tx_id=A697593A85FEF4F437ABF96DEAAB574478887BF4B5E11B454A270A1304BAE7A1}
[INFO ] 2023-01-31T07:00:12,322Z [Mock network] corda.flow. - Transaction dependencies resolution completed. {fiber-id=10000009, flow-id=c07691ea-2485-4298-8de5-03be007f606a, invocation_id=6bab3924-9ecd-44d0-8793-37966c5485a6, invocation_timestamp=2023-01-31T07:00:12.307Z, origin=O=Mock Company 3, L=London, C=GB, session_id=6bab3924-9ecd-44d0-8793-37966c5485a6, session_timestamp=2023-01-31T07:00:12.307Z, thread-id=859, tx_id=A697593A85FEF4F437ABF96DEAAB574478887BF4B5E11B454A270A1304BAE7A1}
[INFO ] 2023-01-31T07:00:12,325Z [Mock network] corda.flow. - Successfully received fully signed tx. Sending it to the vault for processing. {fiber-id=10000009, flow-id=c07691ea-2485-4298-8de5-03be007f606a, invocation_id=6bab3924-9ecd-44d0-8793-37966c5485a6, invocation_timestamp=2023-01-31T07:00:12.307Z, origin=O=Mock Company 3, L=London, C=GB, session_id=6bab3924-9ecd-44d0-8793-37966c5485a6, session_timestamp=2023-01-31T07:00:12.307Z, thread-id=859, tx_id=A697593A85FEF4F437ABF96DEAAB574478887BF4B5E11B454A270A1304BAE7A1}
[INFO ] 2023-01-31T07:00:12,331Z [Mock network] corda.flow. - Successfully recorded received transaction locally. {fiber-id=10000009, flow-id=c07691ea-2485-4298-8de5-03be007f606a, invocation_id=6bab3924-9ecd-44d0-8793-37966c5485a6, invocation_timestamp=2023-01-31T07:00:12.307Z, origin=O=Mock Company 3, L=London, C=GB, session_id=6bab3924-9ecd-44d0-8793-37966c5485a6, session_timestamp=2023-01-31T07:00:12.307Z, thread-id=859, tx_id=A697593A85FEF4F437ABF96DEAAB574478887BF4B5E11B454A270A1304BAE7A1}
[INFO ] 2023-01-31T07:00:12,382Z [Mock network] identity.PersistentIdentityService. - Linking: 539F4BC4A6CAEFCC3D5B793987F103CD0FE07B1F258D935EC508C5280FA6C729 to O=Mock Company 1, L=London, C=GB {actor_id=Only For Testing, actor_owning_identity=O=Mock Company 1, L=London, C=GB, actor_store_id=TEST, fiber-id=10000011, flow-id=cf681da9-f32e-46d7-a421-b1981171a322, invocation_id=39a4bd6b-1c16-4894-8dc0-6d244d91ac0a, invocation_timestamp=2023-01-31T07:00:12.369Z, origin=Only For Testing, session_id=39a4bd6b-1c16-4894-8dc0-6d244d91ac0a, session_timestamp=2023-01-31T07:00:12.369Z, thread-id=859}
[INFO ] 2023-01-31T07:00:12,482Z [Mock network] identity.PersistentIdentityService. - Linking: 401B9B80EE6BC09409BF6FED3684DE04C5586A8D4EE4E62D5FB73B31E71EC903 to O=Mock Company 2, L=London, C=GB {fiber-id=10000012, flow-id=86fba9a8-5d62-4846-aad7-55442bd79484, invocation_id=ff20b072-a644-4aeb-a142-059f1889383a, invocation_timestamp=2023-01-31T07:00:12.396Z, origin=O=Mock Company 1, L=London, C=GB, session_id=ff20b072-a644-4aeb-a142-059f1889383a, session_timestamp=2023-01-31T07:00:12.396Z, thread-id=859}
[INFO ] 2023-01-31T07:00:12,508Z [Mock network] identity.PersistentIdentityService. - Linking: 401B9B80EE6BC09409BF6FED3684DE04C5586A8D4EE4E62D5FB73B31E71EC903 to O=Mock Company 2, L=London, C=GB {actor_id=Only For Testing, actor_owning_identity=O=Mock Company 1, L=London, C=GB, actor_store_id=TEST, fiber-id=10000011, flow-id=cf681da9-f32e-46d7-a421-b1981171a322, invocation_id=39a4bd6b-1c16-4894-8dc0-6d244d91ac0a, invocation_timestamp=2023-01-31T07:00:12.369Z, origin=Only For Testing, session_id=39a4bd6b-1c16-4894-8dc0-6d244d91ac0a, session_timestamp=2023-01-31T07:00:12.369Z, thread-id=859}
[INFO ] 2023-01-31T07:00:12,700Z [Mock network] corda.flow. - Received transaction acknowledgement request from party O=Mock Company 1, L=London, C=GB. {fiber-id=10000013, flow-id=ccb2be3c-649f-440c-a134-ef40b44e05ca, invocation_id=1277f245-272d-4fe0-9549-f6f4c95ff444, invocation_timestamp=2023-01-31T07:00:12.678Z, origin=O=Mock Company 1, L=London, C=GB, session_id=1277f245-272d-4fe0-9549-f6f4c95ff444, session_timestamp=2023-01-31T07:00:12.678Z, thread-id=859, tx_id=030FB25C8DD3CDCC2265D87AF3B73D218F976433121BF4A4C20224A40321BC27}
[INFO ] 2023-01-31T07:00:12,707Z [Mock network] corda.flow. - Transaction dependencies resolution completed. {fiber-id=10000013, flow-id=ccb2be3c-649f-440c-a134-ef40b44e05ca, invocation_id=1277f245-272d-4fe0-9549-f6f4c95ff444, invocation_timestamp=2023-01-31T07:00:12.678Z, origin=O=Mock Company 1, L=London, C=GB, session_id=1277f245-272d-4fe0-9549-f6f4c95ff444, session_timestamp=2023-01-31T07:00:12.678Z, thread-id=859, tx_id=030FB25C8DD3CDCC2265D87AF3B73D218F976433121BF4A4C20224A40321BC27}
[INFO ] 2023-01-31T07:00:12,788Z [Mock network] corda.flow. - No need to notarise this transaction. {actor_id=Only For Testing, actor_owning_identity=O=Mock Company 1, L=London, C=GB, actor_store_id=TEST, fiber-id=10000011, flow-id=cf681da9-f32e-46d7-a421-b1981171a322, invocation_id=39a4bd6b-1c16-4894-8dc0-6d244d91ac0a, invocation_timestamp=2023-01-31T07:00:12.369Z, origin=Only For Testing, session_id=39a4bd6b-1c16-4894-8dc0-6d244d91ac0a, session_timestamp=2023-01-31T07:00:12.369Z, thread-id=859, tx_id=030FB25C8DD3CDCC2265D87AF3B73D218F976433121BF4A4C20224A40321BC27}
[INFO ] 2023-01-31T07:00:12,788Z [Mock network] corda.flow. - Recording transaction locally. {actor_id=Only For Testing, actor_owning_identity=O=Mock Company 1, L=London, C=GB, actor_store_id=TEST, fiber-id=10000011, flow-id=cf681da9-f32e-46d7-a421-b1981171a322, invocation_id=39a4bd6b-1c16-4894-8dc0-6d244d91ac0a, invocation_timestamp=2023-01-31T07:00:12.369Z, origin=Only For Testing, session_id=39a4bd6b-1c16-4894-8dc0-6d244d91ac0a, session_timestamp=2023-01-31T07:00:12.369Z, thread-id=859, tx_id=030FB25C8DD3CDCC2265D87AF3B73D218F976433121BF4A4C20224A40321BC27}
[INFO ] 2023-01-31T07:00:12,792Z [Mock network] corda.flow. - Recorded transaction locally successfully. {actor_id=Only For Testing, actor_owning_identity=O=Mock Company 1, L=London, C=GB, actor_store_id=TEST, fiber-id=10000011, flow-id=cf681da9-f32e-46d7-a421-b1981171a322, invocation_id=39a4bd6b-1c16-4894-8dc0-6d244d91ac0a, invocation_timestamp=2023-01-31T07:00:12.369Z, origin=Only For Testing, session_id=39a4bd6b-1c16-4894-8dc0-6d244d91ac0a, session_timestamp=2023-01-31T07:00:12.369Z, thread-id=859, tx_id=030FB25C8DD3CDCC2265D87AF3B73D218F976433121BF4A4C20224A40321BC27}
[INFO ] 2023-01-31T07:00:12,824Z [Mock network] corda.flow. - Received transaction acknowledgement request from party O=Mock Company 1, L=London, C=GB. {fiber-id=10000013, flow-id=ccb2be3c-649f-440c-a134-ef40b44e05ca, invocation_id=1277f245-272d-4fe0-9549-f6f4c95ff444, invocation_timestamp=2023-01-31T07:00:12.678Z, origin=O=Mock Company 1, L=London, C=GB, session_id=1277f245-272d-4fe0-9549-f6f4c95ff444, session_timestamp=2023-01-31T07:00:12.678Z, thread-id=859, tx_id=030FB25C8DD3CDCC2265D87AF3B73D218F976433121BF4A4C20224A40321BC27}
[INFO ] 2023-01-31T07:00:12,834Z [Mock network] corda.flow. - Transaction dependencies resolution completed. {fiber-id=10000013, flow-id=ccb2be3c-649f-440c-a134-ef40b44e05ca, invocation_id=1277f245-272d-4fe0-9549-f6f4c95ff444, invocation_timestamp=2023-01-31T07:00:12.678Z, origin=O=Mock Company 1, L=London, C=GB, session_id=1277f245-272d-4fe0-9549-f6f4c95ff444, session_timestamp=2023-01-31T07:00:12.678Z, thread-id=859, tx_id=030FB25C8DD3CDCC2265D87AF3B73D218F976433121BF4A4C20224A40321BC27}
[INFO ] 2023-01-31T07:00:12,839Z [Mock network] corda.flow. - Successfully received fully signed tx. Sending it to the vault for processing. {fiber-id=10000013, flow-id=ccb2be3c-649f-440c-a134-ef40b44e05ca, invocation_id=1277f245-272d-4fe0-9549-f6f4c95ff444, invocation_timestamp=2023-01-31T07:00:12.678Z, origin=O=Mock Company 1, L=London, C=GB, session_id=1277f245-272d-4fe0-9549-f6f4c95ff444, session_timestamp=2023-01-31T07:00:12.678Z, thread-id=859, tx_id=030FB25C8DD3CDCC2265D87AF3B73D218F976433121BF4A4C20224A40321BC27}
[INFO ] 2023-01-31T07:00:12,843Z [Mock network] corda.flow. - Successfully recorded received transaction locally. {fiber-id=10000013, flow-id=ccb2be3c-649f-440c-a134-ef40b44e05ca, invocation_id=1277f245-272d-4fe0-9549-f6f4c95ff444, invocation_timestamp=2023-01-31T07:00:12.678Z, origin=O=Mock Company 1, L=London, C=GB, session_id=1277f245-272d-4fe0-9549-f6f4c95ff444, session_timestamp=2023-01-31T07:00:12.678Z, thread-id=859, tx_id=030FB25C8DD3CDCC2265D87AF3B73D218F976433121BF4A4C20224A40321BC27}
[WARN ] 2023-01-31T07:00:12,846Z [Mock network] persistence.AbstractPartyToX500NameAsStringConverter. - Identity service unable to resolve AbstractParty: Anonymous(DL6dRiphnj7Ak2xw51vSrcZcXmLSHiGXJkmuXEQzhQGoUC) {actor_id=Only For Testing, actor_owning_identity=O=Mock Company 1, L=London, C=GB, actor_store_id=TEST, fiber-id=10000013, flow-id=ccb2be3c-649f-440c-a134-ef40b44e05ca, invocation_id=1277f245-272d-4fe0-9549-f6f4c95ff444, invocation_timestamp=2023-01-31T07:00:12.678Z, origin=O=Mock Company 1, L=London, C=GB, session_id=1277f245-272d-4fe0-9549-f6f4c95ff444, session_timestamp=2023-01-31T07:00:12.678Z, thread-id=859}
[INFO ] 2023-01-31T07:00:12,850Z [Mock network] corda.flow. - Party O=Mock Company 2, L=London, C=GB received the transaction. {actor_id=Only For Testing, actor_owning_identity=O=Mock Company 1, L=London, C=GB, actor_store_id=TEST, fiber-id=10000011, flow-id=cf681da9-f32e-46d7-a421-b1981171a322, invocation_id=39a4bd6b-1c16-4894-8dc0-6d244d91ac0a, invocation_timestamp=2023-01-31T07:00:12.369Z, origin=Only For Testing, session_id=39a4bd6b-1c16-4894-8dc0-6d244d91ac0a, session_timestamp=2023-01-31T07:00:12.369Z, thread-id=859, tx_id=030FB25C8DD3CDCC2265D87AF3B73D218F976433121BF4A4C20224A40321BC27}
[INFO ] 2023-01-31T07:00:12,850Z [Mock network] corda.flow. - All parties received the transaction successfully. {actor_id=Only For Testing, actor_owning_identity=O=Mock Company 1, L=London, C=GB, actor_store_id=TEST, fiber-id=10000011, flow-id=cf681da9-f32e-46d7-a421-b1981171a322, invocation_id=39a4bd6b-1c16-4894-8dc0-6d244d91ac0a, invocation_timestamp=2023-01-31T07:00:12.369Z, origin=Only For Testing, session_id=39a4bd6b-1c16-4894-8dc0-6d244d91ac0a, session_timestamp=2023-01-31T07:00:12.369Z, thread-id=859, tx_id=030FB25C8DD3CDCC2265D87AF3B73D218F976433121BF4A4C20224A40321BC27}
[INFO ] 2023-01-31T07:00:12,899Z [Mock network] corda.flow. - Received transaction acknowledgement request from party O=Mock Company 1, L=London, C=GB. {fiber-id=10000014, flow-id=335e9e82-a3b4-400c-9f7b-5fc38a074f73, invocation_id=ad2decd4-24e6-4cd9-b4f7-2db8f97dfda4, invocation_timestamp=2023-01-31T07:00:12.881Z, origin=O=Mock Company 1, L=London, C=GB, session_id=ad2decd4-24e6-4cd9-b4f7-2db8f97dfda4, session_timestamp=2023-01-31T07:00:12.881Z, thread-id=859, tx_id=6D5369D55332DE1241B79EDE882C18B3A79A731E0F243516A79FCBA01C6D249C}
[INFO ] 2023-01-31T07:00:12,904Z [Mock network] corda.flow. - Transaction dependencies resolution completed. {fiber-id=10000014, flow-id=335e9e82-a3b4-400c-9f7b-5fc38a074f73, invocation_id=ad2decd4-24e6-4cd9-b4f7-2db8f97dfda4, invocation_timestamp=2023-01-31T07:00:12.881Z, origin=O=Mock Company 1, L=London, C=GB, session_id=ad2decd4-24e6-4cd9-b4f7-2db8f97dfda4, session_timestamp=2023-01-31T07:00:12.881Z, thread-id=859, tx_id=6D5369D55332DE1241B79EDE882C18B3A79A731E0F243516A79FCBA01C6D249C}
[INFO ] 2023-01-31T07:00:12,907Z [Mock network] corda.flow. - Successfully received fully signed tx. Sending it to the vault for processing. {fiber-id=10000014, flow-id=335e9e82-a3b4-400c-9f7b-5fc38a074f73, invocation_id=ad2decd4-24e6-4cd9-b4f7-2db8f97dfda4, invocation_timestamp=2023-01-31T07:00:12.881Z, origin=O=Mock Company 1, L=London, C=GB, session_id=ad2decd4-24e6-4cd9-b4f7-2db8f97dfda4, session_timestamp=2023-01-31T07:00:12.881Z, thread-id=859, tx_id=6D5369D55332DE1241B79EDE882C18B3A79A731E0F243516A79FCBA01C6D249C}
[INFO ] 2023-01-31T07:00:12,911Z [Mock network] corda.flow. - Successfully recorded received transaction locally. {fiber-id=10000014, flow-id=335e9e82-a3b4-400c-9f7b-5fc38a074f73, invocation_id=ad2decd4-24e6-4cd9-b4f7-2db8f97dfda4, invocation_timestamp=2023-01-31T07:00:12.881Z, origin=O=Mock Company 1, L=London, C=GB, session_id=ad2decd4-24e6-4cd9-b4f7-2db8f97dfda4, session_timestamp=2023-01-31T07:00:12.881Z, thread-id=859, tx_id=6D5369D55332DE1241B79EDE882C18B3A79A731E0F243516A79FCBA01C6D249C}
[INFO ] 2023-01-31T07:00:12,931Z [Mock network] identity.PersistentIdentityService. - An existing entry for DL5KFWWeYwdTnigUHce1PRyq71QhHcphFTgeXhEjwJw42W already exists. {fiber-id=10000014, flow-id=335e9e82-a3b4-400c-9f7b-5fc38a074f73, invocation_id=ad2decd4-24e6-4cd9-b4f7-2db8f97dfda4, invocation_timestamp=2023-01-31T07:00:12.881Z, origin=O=Mock Company 1, L=London, C=GB, session_id=ad2decd4-24e6-4cd9-b4f7-2db8f97dfda4, session_timestamp=2023-01-31T07:00:12.881Z, thread-id=859, tx_id=6D5369D55332DE1241B79EDE882C18B3A79A731E0F243516A79FCBA01C6D249C}
[INFO ] 2023-01-31T07:00:12,937Z [Mock network] corda.flow. - Received transaction acknowledgement request from party O=Mock Company 1, L=London, C=GB. {fiber-id=10000014, flow-id=335e9e82-a3b4-400c-9f7b-5fc38a074f73, invocation_id=ad2decd4-24e6-4cd9-b4f7-2db8f97dfda4, invocation_timestamp=2023-01-31T07:00:12.881Z, origin=O=Mock Company 1, L=London, C=GB, session_id=ad2decd4-24e6-4cd9-b4f7-2db8f97dfda4, session_timestamp=2023-01-31T07:00:12.881Z, thread-id=859, tx_id=1CE5D3FE0ABB1BD37C3E10119E06383AC86F78A0AA06FF992ECEE4D318ED1D39}
[INFO ] 2023-01-31T07:00:12,943Z [Mock network] corda.flow. - Transaction dependencies resolution completed. {fiber-id=10000014, flow-id=335e9e82-a3b4-400c-9f7b-5fc38a074f73, invocation_id=ad2decd4-24e6-4cd9-b4f7-2db8f97dfda4, invocation_timestamp=2023-01-31T07:00:12.881Z, origin=O=Mock Company 1, L=London, C=GB, session_id=ad2decd4-24e6-4cd9-b4f7-2db8f97dfda4, session_timestamp=2023-01-31T07:00:12.881Z, thread-id=859, tx_id=1CE5D3FE0ABB1BD37C3E10119E06383AC86F78A0AA06FF992ECEE4D318ED1D39}
[INFO ] 2023-01-31T07:00:12,945Z [Mock network] corda.flow. - Successfully received fully signed tx. Sending it to the vault for processing. {fiber-id=10000014, flow-id=335e9e82-a3b4-400c-9f7b-5fc38a074f73, invocation_id=ad2decd4-24e6-4cd9-b4f7-2db8f97dfda4, invocation_timestamp=2023-01-31T07:00:12.881Z, origin=O=Mock Company 1, L=London, C=GB, session_id=ad2decd4-24e6-4cd9-b4f7-2db8f97dfda4, session_timestamp=2023-01-31T07:00:12.881Z, thread-id=859, tx_id=1CE5D3FE0ABB1BD37C3E10119E06383AC86F78A0AA06FF992ECEE4D318ED1D39}
[INFO ] 2023-01-31T07:00:12,949Z [Mock network] corda.flow. - Successfully recorded received transaction locally. {fiber-id=10000014, flow-id=335e9e82-a3b4-400c-9f7b-5fc38a074f73, invocation_id=ad2decd4-24e6-4cd9-b4f7-2db8f97dfda4, invocation_timestamp=2023-01-31T07:00:12.881Z, origin=O=Mock Company 1, L=London, C=GB, session_id=ad2decd4-24e6-4cd9-b4f7-2db8f97dfda4, session_timestamp=2023-01-31T07:00:12.881Z, thread-id=859, tx_id=1CE5D3FE0ABB1BD37C3E10119E06383AC86F78A0AA06FF992ECEE4D318ED1D39}
[INFO ] 2023-01-31T07:00:12,975Z [Mock network] identity.PersistentIdentityService. - Linking: 539F4BC4A6CAEFCC3D5B793987F103CD0FE07B1F258D935EC508C5280FA6C729 to O=Mock Company 1, L=London, C=GB {fiber-id=10000014, flow-id=335e9e82-a3b4-400c-9f7b-5fc38a074f73, invocation_id=ad2decd4-24e6-4cd9-b4f7-2db8f97dfda4, invocation_timestamp=2023-01-31T07:00:12.881Z, origin=O=Mock Company 1, L=London, C=GB, session_id=ad2decd4-24e6-4cd9-b4f7-2db8f97dfda4, session_timestamp=2023-01-31T07:00:12.881Z, thread-id=859, tx_id=1CE5D3FE0ABB1BD37C3E10119E06383AC86F78A0AA06FF992ECEE4D318ED1D39}
[INFO ] 2023-01-31T07:00:12,983Z [Mock network] corda.flow. - Received transaction acknowledgement request from party O=Mock Company 1, L=London, C=GB. {fiber-id=10000014, flow-id=335e9e82-a3b4-400c-9f7b-5fc38a074f73, invocation_id=ad2decd4-24e6-4cd9-b4f7-2db8f97dfda4, invocation_timestamp=2023-01-31T07:00:12.881Z, origin=O=Mock Company 1, L=London, C=GB, session_id=ad2decd4-24e6-4cd9-b4f7-2db8f97dfda4, session_timestamp=2023-01-31T07:00:12.881Z, thread-id=859, tx_id=030FB25C8DD3CDCC2265D87AF3B73D218F976433121BF4A4C20224A40321BC27}
[INFO ] 2023-01-31T07:00:12,988Z [Mock network] corda.flow. - Transaction dependencies resolution completed. {fiber-id=10000014, flow-id=335e9e82-a3b4-400c-9f7b-5fc38a074f73, invocation_id=ad2decd4-24e6-4cd9-b4f7-2db8f97dfda4, invocation_timestamp=2023-01-31T07:00:12.881Z, origin=O=Mock Company 1, L=London, C=GB, session_id=ad2decd4-24e6-4cd9-b4f7-2db8f97dfda4, session_timestamp=2023-01-31T07:00:12.881Z, thread-id=859, tx_id=030FB25C8DD3CDCC2265D87AF3B73D218F976433121BF4A4C20224A40321BC27}
[INFO ] 2023-01-31T07:00:12,992Z [Mock network] corda.flow. - Successfully received fully signed tx. Sending it to the vault for processing. {fiber-id=10000014, flow-id=335e9e82-a3b4-400c-9f7b-5fc38a074f73, invocation_id=ad2decd4-24e6-4cd9-b4f7-2db8f97dfda4, invocation_timestamp=2023-01-31T07:00:12.881Z, origin=O=Mock Company 1, L=London, C=GB, session_id=ad2decd4-24e6-4cd9-b4f7-2db8f97dfda4, session_timestamp=2023-01-31T07:00:12.881Z, thread-id=859, tx_id=030FB25C8DD3CDCC2265D87AF3B73D218F976433121BF4A4C20224A40321BC27}
[INFO ] 2023-01-31T07:00:12,997Z [Mock network] corda.flow. - Successfully recorded received transaction locally. {fiber-id=10000014, flow-id=335e9e82-a3b4-400c-9f7b-5fc38a074f73, invocation_id=ad2decd4-24e6-4cd9-b4f7-2db8f97dfda4, invocation_timestamp=2023-01-31T07:00:12.881Z, origin=O=Mock Company 1, L=London, C=GB, session_id=ad2decd4-24e6-4cd9-b4f7-2db8f97dfda4, session_timestamp=2023-01-31T07:00:12.881Z, thread-id=859, tx_id=030FB25C8DD3CDCC2265D87AF3B73D218F976433121BF4A4C20224A40321BC27}
[INFO ] 2023-01-31T07:00:13,102Z [Mock network] identity.PersistentIdentityService. - Linking: 05B42C565C11D0A7E787DF57DEB41543313007BF86D801484B3F63613274DA3B to O=Mock Company 1, L=London, C=GB {fiber-id=10000017, flow-id=d9800414-a3e2-4265-810f-dc899a3eb136, invocation_id=27d2d188-f5a2-44ac-b1c9-6d5c08c5ebd6, invocation_timestamp=2023-01-31T07:00:13.073Z, origin=O=Mock Company 2, L=London, C=GB, session_id=27d2d188-f5a2-44ac-b1c9-6d5c08c5ebd6, session_timestamp=2023-01-31T07:00:13.073Z, thread-id=859}
[INFO ] 2023-01-31T07:00:13,113Z [Mock network] identity.PersistentIdentityService. - Linking: 05B42C565C11D0A7E787DF57DEB41543313007BF86D801484B3F63613274DA3B to O=Mock Company 1, L=London, C=GB {actor_id=Only For Testing, actor_owning_identity=O=Mock Company 2, L=London, C=GB, actor_store_id=TEST, fiber-id=10000016, flow-id=9c069932-e92d-4b75-9c70-f70a95f67c04, invocation_id=0b3b2344-25d0-4593-962c-6af2301b77a6, invocation_timestamp=2023-01-31T07:00:13.046Z, origin=Only For Testing, session_id=0b3b2344-25d0-4593-962c-6af2301b77a6, session_timestamp=2023-01-31T07:00:13.046Z, thread-id=859}
[INFO ] 2023-01-31T07:00:13,117Z [Mock network] identity.PersistentIdentityService. - Linking: B804E2224329D7FDA7673C0EFE2BBC4D3934E9D0545FD21772D7F880AE72EEE0 to O=Mock Company 2, L=London, C=GB {actor_id=Only For Testing, actor_owning_identity=O=Mock Company 2, L=London, C=GB, actor_store_id=TEST, fiber-id=10000016, flow-id=9c069932-e92d-4b75-9c70-f70a95f67c04, invocation_id=0b3b2344-25d0-4593-962c-6af2301b77a6, invocation_timestamp=2023-01-31T07:00:13.046Z, origin=Only For Testing, session_id=0b3b2344-25d0-4593-962c-6af2301b77a6, session_timestamp=2023-01-31T07:00:13.046Z, thread-id=859}
[INFO ] 2023-01-31T07:00:13,152Z [Mock network] identity.PersistentIdentityService. - Linking: 57E6718F560884E0FF5682E222F5ADFA060A44CFB4B6507FCBCF0F96BD8FD76F to O=Mock Company 3, L=London, C=GB {fiber-id=10000018, flow-id=903e4ab5-1915-4eba-81b1-3b4021bc7e57, invocation_id=699146b6-c0f3-4726-b741-e0a3e12798f5, invocation_timestamp=2023-01-31T07:00:13.126Z, origin=O=Mock Company 2, L=London, C=GB, session_id=699146b6-c0f3-4726-b741-e0a3e12798f5, session_timestamp=2023-01-31T07:00:13.126Z, thread-id=859}
[INFO ] 2023-01-31T07:00:13,175Z [Mock network] identity.PersistentIdentityService. - Linking: 57E6718F560884E0FF5682E222F5ADFA060A44CFB4B6507FCBCF0F96BD8FD76F to O=Mock Company 3, L=London, C=GB {actor_id=Only For Testing, actor_owning_identity=O=Mock Company 2, L=London, C=GB, actor_store_id=TEST, fiber-id=10000016, flow-id=9c069932-e92d-4b75-9c70-f70a95f67c04, invocation_id=0b3b2344-25d0-4593-962c-6af2301b77a6, invocation_timestamp=2023-01-31T07:00:13.046Z, origin=Only For Testing, session_id=0b3b2344-25d0-4593-962c-6af2301b77a6, session_timestamp=2023-01-31T07:00:13.046Z, thread-id=859}
[INFO ] 2023-01-31T07:00:13,236Z [Mock network] corda.flow. - Received transaction acknowledgement request from party O=Mock Company 2, L=London, C=GB. {fiber-id=10000019, flow-id=a2eaf580-03b6-4010-9428-494adfc87d4b, invocation_id=66470c3c-af95-4a16-aaff-0342ce9074c3, invocation_timestamp=2023-01-31T07:00:13.197Z, origin=O=Mock Company 2, L=London, C=GB, session_id=66470c3c-af95-4a16-aaff-0342ce9074c3, session_timestamp=2023-01-31T07:00:13.197Z, thread-id=859, tx_id=6D5369D55332DE1241B79EDE882C18B3A79A731E0F243516A79FCBA01C6D249C}
[INFO ] 2023-01-31T07:00:13,241Z [Mock network] corda.flow. - Transaction dependencies resolution completed. {fiber-id=10000019, flow-id=a2eaf580-03b6-4010-9428-494adfc87d4b, invocation_id=66470c3c-af95-4a16-aaff-0342ce9074c3, invocation_timestamp=2023-01-31T07:00:13.197Z, origin=O=Mock Company 2, L=London, C=GB, session_id=66470c3c-af95-4a16-aaff-0342ce9074c3, session_timestamp=2023-01-31T07:00:13.197Z, thread-id=859, tx_id=6D5369D55332DE1241B79EDE882C18B3A79A731E0F243516A79FCBA01C6D249C}
[INFO ] 2023-01-31T07:00:13,244Z [Mock network] corda.flow. - Successfully received fully signed tx. Sending it to the vault for processing. {fiber-id=10000019, flow-id=a2eaf580-03b6-4010-9428-494adfc87d4b, invocation_id=66470c3c-af95-4a16-aaff-0342ce9074c3, invocation_timestamp=2023-01-31T07:00:13.197Z, origin=O=Mock Company 2, L=London, C=GB, session_id=66470c3c-af95-4a16-aaff-0342ce9074c3, session_timestamp=2023-01-31T07:00:13.197Z, thread-id=859, tx_id=6D5369D55332DE1241B79EDE882C18B3A79A731E0F243516A79FCBA01C6D249C}
[INFO ] 2023-01-31T07:00:13,248Z [Mock network] corda.flow. - Successfully recorded received transaction locally. {fiber-id=10000019, flow-id=a2eaf580-03b6-4010-9428-494adfc87d4b, invocation_id=66470c3c-af95-4a16-aaff-0342ce9074c3, invocation_timestamp=2023-01-31T07:00:13.197Z, origin=O=Mock Company 2, L=London, C=GB, session_id=66470c3c-af95-4a16-aaff-0342ce9074c3, session_timestamp=2023-01-31T07:00:13.197Z, thread-id=859, tx_id=6D5369D55332DE1241B79EDE882C18B3A79A731E0F243516A79FCBA01C6D249C}
[INFO ] 2023-01-31T07:00:13,266Z [Mock network] identity.PersistentIdentityService. - An existing entry for DL5KFWWeYwdTnigUHce1PRyq71QhHcphFTgeXhEjwJw42W already exists. {fiber-id=10000019, flow-id=a2eaf580-03b6-4010-9428-494adfc87d4b, invocation_id=66470c3c-af95-4a16-aaff-0342ce9074c3, invocation_timestamp=2023-01-31T07:00:13.197Z, origin=O=Mock Company 2, L=London, C=GB, session_id=66470c3c-af95-4a16-aaff-0342ce9074c3, session_timestamp=2023-01-31T07:00:13.197Z, thread-id=859, tx_id=6D5369D55332DE1241B79EDE882C18B3A79A731E0F243516A79FCBA01C6D249C}
[INFO ] 2023-01-31T07:00:13,272Z [Mock network] corda.flow. - Received transaction acknowledgement request from party O=Mock Company 2, L=London, C=GB. {fiber-id=10000019, flow-id=a2eaf580-03b6-4010-9428-494adfc87d4b, invocation_id=66470c3c-af95-4a16-aaff-0342ce9074c3, invocation_timestamp=2023-01-31T07:00:13.197Z, origin=O=Mock Company 2, L=London, C=GB, session_id=66470c3c-af95-4a16-aaff-0342ce9074c3, session_timestamp=2023-01-31T07:00:13.197Z, thread-id=859, tx_id=1CE5D3FE0ABB1BD37C3E10119E06383AC86F78A0AA06FF992ECEE4D318ED1D39}
[INFO ] 2023-01-31T07:00:13,277Z [Mock network] corda.flow. - Transaction dependencies resolution completed. {fiber-id=10000019, flow-id=a2eaf580-03b6-4010-9428-494adfc87d4b, invocation_id=66470c3c-af95-4a16-aaff-0342ce9074c3, invocation_timestamp=2023-01-31T07:00:13.197Z, origin=O=Mock Company 2, L=London, C=GB, session_id=66470c3c-af95-4a16-aaff-0342ce9074c3, session_timestamp=2023-01-31T07:00:13.197Z, thread-id=859, tx_id=1CE5D3FE0ABB1BD37C3E10119E06383AC86F78A0AA06FF992ECEE4D318ED1D39}
[INFO ] 2023-01-31T07:00:13,280Z [Mock network] corda.flow. - Successfully received fully signed tx. Sending it to the vault for processing. {fiber-id=10000019, flow-id=a2eaf580-03b6-4010-9428-494adfc87d4b, invocation_id=66470c3c-af95-4a16-aaff-0342ce9074c3, invocation_timestamp=2023-01-31T07:00:13.197Z, origin=O=Mock Company 2, L=London, C=GB, session_id=66470c3c-af95-4a16-aaff-0342ce9074c3, session_timestamp=2023-01-31T07:00:13.197Z, thread-id=859, tx_id=1CE5D3FE0ABB1BD37C3E10119E06383AC86F78A0AA06FF992ECEE4D318ED1D39}
[INFO ] 2023-01-31T07:00:13,283Z [Mock network] corda.flow. - Successfully recorded received transaction locally. {fiber-id=10000019, flow-id=a2eaf580-03b6-4010-9428-494adfc87d4b, invocation_id=66470c3c-af95-4a16-aaff-0342ce9074c3, invocation_timestamp=2023-01-31T07:00:13.197Z, origin=O=Mock Company 2, L=London, C=GB, session_id=66470c3c-af95-4a16-aaff-0342ce9074c3, session_timestamp=2023-01-31T07:00:13.197Z, thread-id=859, tx_id=1CE5D3FE0ABB1BD37C3E10119E06383AC86F78A0AA06FF992ECEE4D318ED1D39}
[INFO ] 2023-01-31T07:00:13,301Z [Mock network] identity.PersistentIdentityService. - An existing entry for DL6dRiphnj7Ak2xw51vSrcZcXmLSHiGXJkmuXEQzhQGoUC already exists. {fiber-id=10000019, flow-id=a2eaf580-03b6-4010-9428-494adfc87d4b, invocation_id=66470c3c-af95-4a16-aaff-0342ce9074c3, invocation_timestamp=2023-01-31T07:00:13.197Z, origin=O=Mock Company 2, L=London, C=GB, session_id=66470c3c-af95-4a16-aaff-0342ce9074c3, session_timestamp=2023-01-31T07:00:13.197Z, thread-id=859, tx_id=1CE5D3FE0ABB1BD37C3E10119E06383AC86F78A0AA06FF992ECEE4D318ED1D39}
[INFO ] 2023-01-31T07:00:13,308Z [Mock network] corda.flow. - Received transaction acknowledgement request from party O=Mock Company 2, L=London, C=GB. {fiber-id=10000019, flow-id=a2eaf580-03b6-4010-9428-494adfc87d4b, invocation_id=66470c3c-af95-4a16-aaff-0342ce9074c3, invocation_timestamp=2023-01-31T07:00:13.197Z, origin=O=Mock Company 2, L=London, C=GB, session_id=66470c3c-af95-4a16-aaff-0342ce9074c3, session_timestamp=2023-01-31T07:00:13.197Z, thread-id=859, tx_id=030FB25C8DD3CDCC2265D87AF3B73D218F976433121BF4A4C20224A40321BC27}
[INFO ] 2023-01-31T07:00:13,315Z [Mock network] corda.flow. - Transaction dependencies resolution completed. {fiber-id=10000019, flow-id=a2eaf580-03b6-4010-9428-494adfc87d4b, invocation_id=66470c3c-af95-4a16-aaff-0342ce9074c3, invocation_timestamp=2023-01-31T07:00:13.197Z, origin=O=Mock Company 2, L=London, C=GB, session_id=66470c3c-af95-4a16-aaff-0342ce9074c3, session_timestamp=2023-01-31T07:00:13.197Z, thread-id=859, tx_id=030FB25C8DD3CDCC2265D87AF3B73D218F976433121BF4A4C20224A40321BC27}
[INFO ] 2023-01-31T07:00:13,319Z [Mock network] corda.flow. - Successfully received fully signed tx. Sending it to the vault for processing. {fiber-id=10000019, flow-id=a2eaf580-03b6-4010-9428-494adfc87d4b, invocation_id=66470c3c-af95-4a16-aaff-0342ce9074c3, invocation_timestamp=2023-01-31T07:00:13.197Z, origin=O=Mock Company 2, L=London, C=GB, session_id=66470c3c-af95-4a16-aaff-0342ce9074c3, session_timestamp=2023-01-31T07:00:13.197Z, thread-id=859, tx_id=030FB25C8DD3CDCC2265D87AF3B73D218F976433121BF4A4C20224A40321BC27}
[INFO ] 2023-01-31T07:00:13,325Z [Mock network] corda.flow. - Successfully recorded received transaction locally. {fiber-id=10000019, flow-id=a2eaf580-03b6-4010-9428-494adfc87d4b, invocation_id=66470c3c-af95-4a16-aaff-0342ce9074c3, invocation_timestamp=2023-01-31T07:00:13.197Z, origin=O=Mock Company 2, L=London, C=GB, session_id=66470c3c-af95-4a16-aaff-0342ce9074c3, session_timestamp=2023-01-31T07:00:13.197Z, thread-id=859, tx_id=030FB25C8DD3CDCC2265D87AF3B73D218F976433121BF4A4C20224A40321BC27}
[INFO ] 2023-01-31T07:00:13,406Z [Mock network] corda.flow. - Received transaction acknowledgement request from party O=Mock Company 2, L=London, C=GB. {fiber-id=10000020, flow-id=6d30b29c-17fe-4d54-b784-257725d48c32, invocation_id=6ee7ef8d-d78a-48f3-a73f-9a6e6c5cbc27, invocation_timestamp=2023-01-31T07:00:13.394Z, origin=O=Mock Company 2, L=London, C=GB, session_id=6ee7ef8d-d78a-48f3-a73f-9a6e6c5cbc27, session_timestamp=2023-01-31T07:00:13.394Z, thread-id=859, tx_id=E6913855036BDA60DFF152E34297C45671D3EAA22F692944A53BCE83F2540C13}
[INFO ] 2023-01-31T07:00:13,579Z [Mock network] corda.flow. - Transaction dependencies resolution completed. {fiber-id=10000020, flow-id=6d30b29c-17fe-4d54-b784-257725d48c32, invocation_id=6ee7ef8d-d78a-48f3-a73f-9a6e6c5cbc27, invocation_timestamp=2023-01-31T07:00:13.394Z, origin=O=Mock Company 2, L=London, C=GB, session_id=6ee7ef8d-d78a-48f3-a73f-9a6e6c5cbc27, session_timestamp=2023-01-31T07:00:13.394Z, thread-id=859, tx_id=E6913855036BDA60DFF152E34297C45671D3EAA22F692944A53BCE83F2540C13}
[INFO ] 2023-01-31T07:00:13,646Z [Mock network] corda.flow. - Received transaction acknowledgement request from party O=Mock Company 2, L=London, C=GB. {fiber-id=10000021, flow-id=179572ee-92f4-4257-99a9-e78d30afaddb, invocation_id=5148a6d3-eb78-4c54-81f5-870d83978d10, invocation_timestamp=2023-01-31T07:00:13.636Z, origin=O=Mock Company 2, L=London, C=GB, session_id=5148a6d3-eb78-4c54-81f5-870d83978d10, session_timestamp=2023-01-31T07:00:13.636Z, thread-id=859, tx_id=E6913855036BDA60DFF152E34297C45671D3EAA22F692944A53BCE83F2540C13}
[INFO ] 2023-01-31T07:00:13,654Z [Mock network] corda.flow. - Transaction dependencies resolution completed. {fiber-id=10000021, flow-id=179572ee-92f4-4257-99a9-e78d30afaddb, invocation_id=5148a6d3-eb78-4c54-81f5-870d83978d10, invocation_timestamp=2023-01-31T07:00:13.636Z, origin=O=Mock Company 2, L=London, C=GB, session_id=5148a6d3-eb78-4c54-81f5-870d83978d10, session_timestamp=2023-01-31T07:00:13.636Z, thread-id=859, tx_id=E6913855036BDA60DFF152E34297C45671D3EAA22F692944A53BCE83F2540C13}
[INFO ] 2023-01-31T07:00:13,713Z [Mock network] corda.flow. - Sending transaction to notary: O=Notary, L=London, C=GB. {actor_id=Only For Testing, actor_owning_identity=O=Mock Company 2, L=London, C=GB, actor_store_id=TEST, fiber-id=10000016, flow-id=9c069932-e92d-4b75-9c70-f70a95f67c04, invocation_id=0b3b2344-25d0-4593-962c-6af2301b77a6, invocation_timestamp=2023-01-31T07:00:13.046Z, origin=Only For Testing, session_id=0b3b2344-25d0-4593-962c-6af2301b77a6, session_timestamp=2023-01-31T07:00:13.046Z, thread-id=859, tx_id=E6913855036BDA60DFF152E34297C45671D3EAA22F692944A53BCE83F2540C13}
[INFO ] 2023-01-31T07:00:13,754Z [Mock network] corda.flow. - Received a notarisation request for Tx [E6913855036BDA60DFF152E34297C45671D3EAA22F692944A53BCE83F2540C13] from [O=Mock Company 2, L=London, C=GB] {fiber-id=10000022, flow-id=3d47692c-2a42-4142-88d3-36a812c3c560, invocation_id=a2d79d59-5134-4f63-aa0a-be364808d1b5, invocation_timestamp=2023-01-31T07:00:13.740Z, origin=O=Mock Company 2, L=London, C=GB, session_id=a2d79d59-5134-4f63-aa0a-be364808d1b5, session_timestamp=2023-01-31T07:00:13.740Z, thread-id=859}
[INFO ] 2023-01-31T07:00:13,953Z [Notary request queue processor] jpa.JPAUniquenessProvider. - Processing notarization requests with 1 input states and 0 references {}
[INFO ] 2023-01-31T07:00:13,985Z [Mock network] corda.flow. - Transaction [E6913855036BDA60DFF152E34297C45671D3EAA22F692944A53BCE83F2540C13] successfully notarised, sending signature back to [O=Mock Company 2, L=London, C=GB] {fiber-id=10000022, flow-id=3d47692c-2a42-4142-88d3-36a812c3c560, invocation_id=a2d79d59-5134-4f63-aa0a-be364808d1b5, invocation_timestamp=2023-01-31T07:00:13.740Z, origin=O=Mock Company 2, L=London, C=GB, session_id=a2d79d59-5134-4f63-aa0a-be364808d1b5, session_timestamp=2023-01-31T07:00:13.740Z, thread-id=859}
[INFO ] 2023-01-31T07:00:14,016Z [Mock network] corda.flow. - Notary responded (O=Notary, L=London, C=GB). {actor_id=Only For Testing, actor_owning_identity=O=Mock Company 2, L=London, C=GB, actor_store_id=TEST, fiber-id=10000016, flow-id=9c069932-e92d-4b75-9c70-f70a95f67c04, invocation_id=0b3b2344-25d0-4593-962c-6af2301b77a6, invocation_timestamp=2023-01-31T07:00:13.046Z, origin=Only For Testing, session_id=0b3b2344-25d0-4593-962c-6af2301b77a6, session_timestamp=2023-01-31T07:00:13.046Z, thread-id=859, tx_id=E6913855036BDA60DFF152E34297C45671D3EAA22F692944A53BCE83F2540C13}
[INFO ] 2023-01-31T07:00:14,018Z [Mock network] corda.flow. - Recording transaction locally. {actor_id=Only For Testing, actor_owning_identity=O=Mock Company 2, L=London, C=GB, actor_store_id=TEST, fiber-id=10000016, flow-id=9c069932-e92d-4b75-9c70-f70a95f67c04, invocation_id=0b3b2344-25d0-4593-962c-6af2301b77a6, invocation_timestamp=2023-01-31T07:00:13.046Z, origin=Only For Testing, session_id=0b3b2344-25d0-4593-962c-6af2301b77a6, session_timestamp=2023-01-31T07:00:13.046Z, thread-id=859, tx_id=E6913855036BDA60DFF152E34297C45671D3EAA22F692944A53BCE83F2540C13}
[INFO ] 2023-01-31T07:00:14,029Z [Mock network] corda.flow. - Recorded transaction locally successfully. {actor_id=Only For Testing, actor_owning_identity=O=Mock Company 2, L=London, C=GB, actor_store_id=TEST, fiber-id=10000016, flow-id=9c069932-e92d-4b75-9c70-f70a95f67c04, invocation_id=0b3b2344-25d0-4593-962c-6af2301b77a6, invocation_timestamp=2023-01-31T07:00:13.046Z, origin=Only For Testing, session_id=0b3b2344-25d0-4593-962c-6af2301b77a6, session_timestamp=2023-01-31T07:00:13.046Z, thread-id=859, tx_id=E6913855036BDA60DFF152E34297C45671D3EAA22F692944A53BCE83F2540C13}
[INFO ] 2023-01-31T07:00:14,038Z [Mock network] corda.flow. - Received transaction acknowledgement request from party O=Mock Company 2, L=London, C=GB. {fiber-id=10000020, flow-id=6d30b29c-17fe-4d54-b784-257725d48c32, invocation_id=6ee7ef8d-d78a-48f3-a73f-9a6e6c5cbc27, invocation_timestamp=2023-01-31T07:00:13.394Z, origin=O=Mock Company 2, L=London, C=GB, session_id=6ee7ef8d-d78a-48f3-a73f-9a6e6c5cbc27, session_timestamp=2023-01-31T07:00:13.394Z, thread-id=859, tx_id=E6913855036BDA60DFF152E34297C45671D3EAA22F692944A53BCE83F2540C13}
[INFO ] 2023-01-31T07:00:14,044Z [Mock network] corda.flow. - Transaction dependencies resolution completed. {fiber-id=10000020, flow-id=6d30b29c-17fe-4d54-b784-257725d48c32, invocation_id=6ee7ef8d-d78a-48f3-a73f-9a6e6c5cbc27, invocation_timestamp=2023-01-31T07:00:13.394Z, origin=O=Mock Company 2, L=London, C=GB, session_id=6ee7ef8d-d78a-48f3-a73f-9a6e6c5cbc27, session_timestamp=2023-01-31T07:00:13.394Z, thread-id=859, tx_id=E6913855036BDA60DFF152E34297C45671D3EAA22F692944A53BCE83F2540C13}
[INFO ] 2023-01-31T07:00:14,321Z [Mock network] corda.flow. - Successfully received fully signed tx. Sending it to the vault for processing. {fiber-id=10000020, flow-id=6d30b29c-17fe-4d54-b784-257725d48c32, invocation_id=6ee7ef8d-d78a-48f3-a73f-9a6e6c5cbc27, invocation_timestamp=2023-01-31T07:00:13.394Z, origin=O=Mock Company 2, L=London, C=GB, session_id=6ee7ef8d-d78a-48f3-a73f-9a6e6c5cbc27, session_timestamp=2023-01-31T07:00:13.394Z, thread-id=859, tx_id=E6913855036BDA60DFF152E34297C45671D3EAA22F692944A53BCE83F2540C13}
[INFO ] 2023-01-31T07:00:14,329Z [Mock network] corda.flow. - Successfully recorded received transaction locally. {fiber-id=10000020, flow-id=6d30b29c-17fe-4d54-b784-257725d48c32, invocation_id=6ee7ef8d-d78a-48f3-a73f-9a6e6c5cbc27, invocation_timestamp=2023-01-31T07:00:13.394Z, origin=O=Mock Company 2, L=London, C=GB, session_id=6ee7ef8d-d78a-48f3-a73f-9a6e6c5cbc27, session_timestamp=2023-01-31T07:00:13.394Z, thread-id=859, tx_id=E6913855036BDA60DFF152E34297C45671D3EAA22F692944A53BCE83F2540C13}
[WARN ] 2023-01-31T07:00:14,332Z [Mock network] persistence.AbstractPartyToX500NameAsStringConverter. - Identity service unable to resolve AbstractParty: Anonymous(DL6dRiphnj7Ak2xw51vSrcZcXmLSHiGXJkmuXEQzhQGoUC) {actor_id=Only For Testing, actor_owning_identity=O=Mock Company 2, L=London, C=GB, actor_store_id=TEST, fiber-id=10000020, flow-id=6d30b29c-17fe-4d54-b784-257725d48c32, invocation_id=6ee7ef8d-d78a-48f3-a73f-9a6e6c5cbc27, invocation_timestamp=2023-01-31T07:00:13.394Z, origin=O=Mock Company 2, L=London, C=GB, session_id=6ee7ef8d-d78a-48f3-a73f-9a6e6c5cbc27, session_timestamp=2023-01-31T07:00:13.394Z, thread-id=859}
[INFO ] 2023-01-31T07:00:14,338Z [Mock network] corda.flow. - Party O=Mock Company 3, L=London, C=GB received the transaction. {actor_id=Only For Testing, actor_owning_identity=O=Mock Company 2, L=London, C=GB, actor_store_id=TEST, fiber-id=10000016, flow-id=9c069932-e92d-4b75-9c70-f70a95f67c04, invocation_id=0b3b2344-25d0-4593-962c-6af2301b77a6, invocation_timestamp=2023-01-31T07:00:13.046Z, origin=Only For Testing, session_id=0b3b2344-25d0-4593-962c-6af2301b77a6, session_timestamp=2023-01-31T07:00:13.046Z, thread-id=859, tx_id=E6913855036BDA60DFF152E34297C45671D3EAA22F692944A53BCE83F2540C13}
[INFO ] 2023-01-31T07:00:14,347Z [Mock network] corda.flow. - Received transaction acknowledgement request from party O=Mock Company 2, L=London, C=GB. {fiber-id=10000021, flow-id=179572ee-92f4-4257-99a9-e78d30afaddb, invocation_id=5148a6d3-eb78-4c54-81f5-870d83978d10, invocation_timestamp=2023-01-31T07:00:13.636Z, origin=O=Mock Company 2, L=London, C=GB, session_id=5148a6d3-eb78-4c54-81f5-870d83978d10, session_timestamp=2023-01-31T07:00:13.636Z, thread-id=859, tx_id=E6913855036BDA60DFF152E34297C45671D3EAA22F692944A53BCE83F2540C13}
[INFO ] 2023-01-31T07:00:14,352Z [Mock network] corda.flow. - Transaction dependencies resolution completed. {fiber-id=10000021, flow-id=179572ee-92f4-4257-99a9-e78d30afaddb, invocation_id=5148a6d3-eb78-4c54-81f5-870d83978d10, invocation_timestamp=2023-01-31T07:00:13.636Z, origin=O=Mock Company 2, L=London, C=GB, session_id=5148a6d3-eb78-4c54-81f5-870d83978d10, session_timestamp=2023-01-31T07:00:13.636Z, thread-id=859, tx_id=E6913855036BDA60DFF152E34297C45671D3EAA22F692944A53BCE83F2540C13}
[INFO ] 2023-01-31T07:00:14,359Z [Mock network] corda.flow. - Successfully received fully signed tx. Sending it to the vault for processing. {fiber-id=10000021, flow-id=179572ee-92f4-4257-99a9-e78d30afaddb, invocation_id=5148a6d3-eb78-4c54-81f5-870d83978d10, invocation_timestamp=2023-01-31T07:00:13.636Z, origin=O=Mock Company 2, L=London, C=GB, session_id=5148a6d3-eb78-4c54-81f5-870d83978d10, session_timestamp=2023-01-31T07:00:13.636Z, thread-id=859, tx_id=E6913855036BDA60DFF152E34297C45671D3EAA22F692944A53BCE83F2540C13}
[INFO ] 2023-01-31T07:00:14,365Z [Mock network] corda.flow. - Successfully recorded received transaction locally. {fiber-id=10000021, flow-id=179572ee-92f4-4257-99a9-e78d30afaddb, invocation_id=5148a6d3-eb78-4c54-81f5-870d83978d10, invocation_timestamp=2023-01-31T07:00:13.636Z, origin=O=Mock Company 2, L=London, C=GB, session_id=5148a6d3-eb78-4c54-81f5-870d83978d10, session_timestamp=2023-01-31T07:00:13.636Z, thread-id=859, tx_id=E6913855036BDA60DFF152E34297C45671D3EAA22F692944A53BCE83F2540C13}
[WARN ] 2023-01-31T07:00:14,367Z [Mock network] persistence.AbstractPartyToX500NameAsStringConverter. - Identity service unable to resolve AbstractParty: Anonymous(DL6v8GxjNPNZLW4xJ9KP77iSgzgnJKysUbmi5t7ntaxFta) {actor_id=Only For Testing, actor_owning_identity=O=Mock Company 2, L=London, C=GB, actor_store_id=TEST, fiber-id=10000021, flow-id=179572ee-92f4-4257-99a9-e78d30afaddb, invocation_id=5148a6d3-eb78-4c54-81f5-870d83978d10, invocation_timestamp=2023-01-31T07:00:13.636Z, origin=O=Mock Company 2, L=London, C=GB, session_id=5148a6d3-eb78-4c54-81f5-870d83978d10, session_timestamp=2023-01-31T07:00:13.636Z, thread-id=859}
[INFO ] 2023-01-31T07:00:14,373Z [Mock network] corda.flow. - Party O=Mock Company 1, L=London, C=GB received the transaction. {actor_id=Only For Testing, actor_owning_identity=O=Mock Company 2, L=London, C=GB, actor_store_id=TEST, fiber-id=10000016, flow-id=9c069932-e92d-4b75-9c70-f70a95f67c04, invocation_id=0b3b2344-25d0-4593-962c-6af2301b77a6, invocation_timestamp=2023-01-31T07:00:13.046Z, origin=Only For Testing, session_id=0b3b2344-25d0-4593-962c-6af2301b77a6, session_timestamp=2023-01-31T07:00:13.046Z, thread-id=859, tx_id=E6913855036BDA60DFF152E34297C45671D3EAA22F692944A53BCE83F2540C13}
[INFO ] 2023-01-31T07:00:14,373Z [Mock network] corda.flow. - All parties received the transaction successfully. {actor_id=Only For Testing, actor_owning_identity=O=Mock Company 2, L=London, C=GB, actor_store_id=TEST, fiber-id=10000016, flow-id=9c069932-e92d-4b75-9c70-f70a95f67c04, invocation_id=0b3b2344-25d0-4593-962c-6af2301b77a6, invocation_timestamp=2023-01-31T07:00:13.046Z, origin=Only For Testing, session_id=0b3b2344-25d0-4593-962c-6af2301b77a6, session_timestamp=2023-01-31T07:00:13.046Z, thread-id=859, tx_id=E6913855036BDA60DFF152E34297C45671D3EAA22F692944A53BCE83F2540C13}
[INFO ] 2023-01-31T07:00:14,399Z [Mock network] identity.PersistentIdentityService. - Linking: 3A4CDCD8DD187D32AA45A5D22B8962551FF25FDF1A99D16DC5BB567264654C0D to O=Mock Company 1, L=London, C=GB {actor_id=Only For Testing, actor_owning_identity=O=Mock Company 1, L=London, C=GB, actor_store_id=TEST, fiber-id=10000024, flow-id=c247d41f-b458-41f4-abd4-031ae767b2d0, invocation_id=69cdf0b7-bb1e-459c-bdca-55b7e92525e6, invocation_timestamp=2023-01-31T07:00:14.393Z, origin=Only For Testing, session_id=69cdf0b7-bb1e-459c-bdca-55b7e92525e6, session_timestamp=2023-01-31T07:00:14.393Z, thread-id=859}
[INFO ] 2023-01-31T07:00:14,528Z [Mock network] corda.flow. - No need to notarise this transaction. {actor_id=Only For Testing, actor_owning_identity=O=Mock Company 1, L=London, C=GB, actor_store_id=TEST, fiber-id=10000024, flow-id=c247d41f-b458-41f4-abd4-031ae767b2d0, invocation_id=69cdf0b7-bb1e-459c-bdca-55b7e92525e6, invocation_timestamp=2023-01-31T07:00:14.393Z, origin=Only For Testing, session_id=69cdf0b7-bb1e-459c-bdca-55b7e92525e6, session_timestamp=2023-01-31T07:00:14.393Z, thread-id=859, tx_id=72778BC3652AECADB91C585B9FAFE85FFB3AD204869C2B636B48305FFF9936F7}
[INFO ] 2023-01-31T07:00:14,528Z [Mock network] corda.flow. - Recording transaction locally. {actor_id=Only For Testing, actor_owning_identity=O=Mock Company 1, L=London, C=GB, actor_store_id=TEST, fiber-id=10000024, flow-id=c247d41f-b458-41f4-abd4-031ae767b2d0, invocation_id=69cdf0b7-bb1e-459c-bdca-55b7e92525e6, invocation_timestamp=2023-01-31T07:00:14.393Z, origin=Only For Testing, session_id=69cdf0b7-bb1e-459c-bdca-55b7e92525e6, session_timestamp=2023-01-31T07:00:14.393Z, thread-id=859, tx_id=72778BC3652AECADB91C585B9FAFE85FFB3AD204869C2B636B48305FFF9936F7}
[INFO ] 2023-01-31T07:00:14,543Z [Mock network] corda.flow. - Recorded transaction locally successfully. {actor_id=Only For Testing, actor_owning_identity=O=Mock Company 1, L=London, C=GB, actor_store_id=TEST, fiber-id=10000024, flow-id=c247d41f-b458-41f4-abd4-031ae767b2d0, invocation_id=69cdf0b7-bb1e-459c-bdca-55b7e92525e6, invocation_timestamp=2023-01-31T07:00:14.393Z, origin=Only For Testing, session_id=69cdf0b7-bb1e-459c-bdca-55b7e92525e6, session_timestamp=2023-01-31T07:00:14.393Z, thread-id=859, tx_id=72778BC3652AECADB91C585B9FAFE85FFB3AD204869C2B636B48305FFF9936F7}
[INFO ] 2023-01-31T07:00:14,543Z [Mock network] corda.flow. - All parties received the transaction successfully. {actor_id=Only For Testing, actor_owning_identity=O=Mock Company 1, L=London, C=GB, actor_store_id=TEST, fiber-id=10000024, flow-id=c247d41f-b458-41f4-abd4-031ae767b2d0, invocation_id=69cdf0b7-bb1e-459c-bdca-55b7e92525e6, invocation_timestamp=2023-01-31T07:00:14.393Z, origin=Only For Testing, session_id=69cdf0b7-bb1e-459c-bdca-55b7e92525e6, session_timestamp=2023-01-31T07:00:14.393Z, thread-id=859, tx_id=72778BC3652AECADB91C585B9FAFE85FFB3AD204869C2B636B48305FFF9936F7}
[INFO ] 2023-01-31T07:00:14,558Z [Mock network] identity.PersistentIdentityService. - Linking: BC0FFEB35649E60924BC85304A2F5C19FE0AE72F13373FDD68DA71044ED265D1 to O=Mock Company 1, L=London, C=GB {actor_id=Only For Testing, actor_owning_identity=O=Mock Company 1, L=London, C=GB, actor_store_id=TEST, fiber-id=10000025, flow-id=ea94ff04-f8a5-4812-93d9-292cbfbbf22b, invocation_id=569be7a1-bbff-4d65-92a0-e9faeb7d595b, invocation_timestamp=2023-01-31T07:00:14.555Z, origin=Only For Testing, session_id=569be7a1-bbff-4d65-92a0-e9faeb7d595b, session_timestamp=2023-01-31T07:00:14.555Z, thread-id=859}
[INFO ] 2023-01-31T07:00:14,568Z [Mock network] corda.flow. - No need to notarise this transaction. {actor_id=Only For Testing, actor_owning_identity=O=Mock Company 1, L=London, C=GB, actor_store_id=TEST, fiber-id=10000025, flow-id=ea94ff04-f8a5-4812-93d9-292cbfbbf22b, invocation_id=569be7a1-bbff-4d65-92a0-e9faeb7d595b, invocation_timestamp=2023-01-31T07:00:14.555Z, origin=Only For Testing, session_id=569be7a1-bbff-4d65-92a0-e9faeb7d595b, session_timestamp=2023-01-31T07:00:14.555Z, thread-id=859, tx_id=6EFDF35EF6C391C125A79179B4239D38E2E98356B6A235CF7DADD3D0C2245344}
[INFO ] 2023-01-31T07:00:14,568Z [Mock network] corda.flow. - Recording transaction locally. {actor_id=Only For Testing, actor_owning_identity=O=Mock Company 1, L=London, C=GB, actor_store_id=TEST, fiber-id=10000025, flow-id=ea94ff04-f8a5-4812-93d9-292cbfbbf22b, invocation_id=569be7a1-bbff-4d65-92a0-e9faeb7d595b, invocation_timestamp=2023-01-31T07:00:14.555Z, origin=Only For Testing, session_id=569be7a1-bbff-4d65-92a0-e9faeb7d595b, session_timestamp=2023-01-31T07:00:14.555Z, thread-id=859, tx_id=6EFDF35EF6C391C125A79179B4239D38E2E98356B6A235CF7DADD3D0C2245344}
[INFO ] 2023-01-31T07:00:14,572Z [Mock network] corda.flow. - Recorded transaction locally successfully. {actor_id=Only For Testing, actor_owning_identity=O=Mock Company 1, L=London, C=GB, actor_store_id=TEST, fiber-id=10000025, flow-id=ea94ff04-f8a5-4812-93d9-292cbfbbf22b, invocation_id=569be7a1-bbff-4d65-92a0-e9faeb7d595b, invocation_timestamp=2023-01-31T07:00:14.555Z, origin=Only For Testing, session_id=569be7a1-bbff-4d65-92a0-e9faeb7d595b, session_timestamp=2023-01-31T07:00:14.555Z, thread-id=859, tx_id=6EFDF35EF6C391C125A79179B4239D38E2E98356B6A235CF7DADD3D0C2245344}
[INFO ] 2023-01-31T07:00:14,572Z [Mock network] corda.flow. - All parties received the transaction successfully. {actor_id=Only For Testing, actor_owning_identity=O=Mock Company 1, L=London, C=GB, actor_store_id=TEST, fiber-id=10000025, flow-id=ea94ff04-f8a5-4812-93d9-292cbfbbf22b, invocation_id=569be7a1-bbff-4d65-92a0-e9faeb7d595b, invocation_timestamp=2023-01-31T07:00:14.555Z, origin=Only For Testing, session_id=569be7a1-bbff-4d65-92a0-e9faeb7d595b, session_timestamp=2023-01-31T07:00:14.555Z, thread-id=859, tx_id=6EFDF35EF6C391C125A79179B4239D38E2E98356B6A235CF7DADD3D0C2245344}
[INFO ] 2023-01-31T07:00:14,602Z [Mock network] identity.PersistentIdentityService. - Linking: 3E11B8640CADACC273DC1BE36F1AB8F76F92947DE94F25184329393140DBD13D to O=Mock Company 1, L=London, C=GB {actor_id=Only For Testing, actor_owning_identity=O=Mock Company 1, L=London, C=GB, actor_store_id=TEST, fiber-id=10000027, flow-id=6a84b95f-9585-4464-b302-dff1b1c96b12, invocation_id=13121be1-7942-4193-a973-e9f16a3aad92, invocation_timestamp=2023-01-31T07:00:14.594Z, origin=Only For Testing, session_id=13121be1-7942-4193-a973-e9f16a3aad92, session_timestamp=2023-01-31T07:00:14.594Z, thread-id=859}
[INFO ] 2023-01-31T07:00:14,659Z [Mock network] identity.PersistentIdentityService. - Linking: 01C5557D3BBA2F5233964F3DAF40D5E79409E47619DF9EA894EB43C15C9EEBDA to O=Mock Company 3, L=London, C=GB {fiber-id=10000028, flow-id=ed257411-fa52-4e6d-bdf4-e9725a057d97, invocation_id=3e39d17c-4462-497c-9d58-08214dfc7326, invocation_timestamp=2023-01-31T07:00:14.628Z, origin=O=Mock Company 1, L=London, C=GB, session_id=3e39d17c-4462-497c-9d58-08214dfc7326, session_timestamp=2023-01-31T07:00:14.628Z, thread-id=859}
[INFO ] 2023-01-31T07:00:14,672Z [Mock network] identity.PersistentIdentityService. - Linking: 01C5557D3BBA2F5233964F3DAF40D5E79409E47619DF9EA894EB43C15C9EEBDA to O=Mock Company 3, L=London, C=GB {actor_id=Only For Testing, actor_owning_identity=O=Mock Company 1, L=London, C=GB, actor_store_id=TEST, fiber-id=10000027, flow-id=6a84b95f-9585-4464-b302-dff1b1c96b12, invocation_id=13121be1-7942-4193-a973-e9f16a3aad92, invocation_timestamp=2023-01-31T07:00:14.594Z, origin=Only For Testing, session_id=13121be1-7942-4193-a973-e9f16a3aad92, session_timestamp=2023-01-31T07:00:14.594Z, thread-id=859}
[INFO ] 2023-01-31T07:00:14,894Z [Mock network] corda.flow. - Received transaction acknowledgement request from party O=Mock Company 1, L=London, C=GB. {fiber-id=10000029, flow-id=19d5529e-5027-4fa9-b1fb-f606ce138a0e, invocation_id=ecadbadd-d49d-4516-8b4c-2ec4a2bd801c, invocation_timestamp=2023-01-31T07:00:14.883Z, origin=O=Mock Company 1, L=London, C=GB, session_id=ecadbadd-d49d-4516-8b4c-2ec4a2bd801c, session_timestamp=2023-01-31T07:00:14.883Z, thread-id=859, tx_id=B8B88DF526D6289A98FCDCC0D0A5BE69453156D8846C61133778E9B0554C8B59}
[INFO ] 2023-01-31T07:00:15,003Z [Mock network] corda.flow. - Transaction dependencies resolution completed. {fiber-id=10000029, flow-id=19d5529e-5027-4fa9-b1fb-f606ce138a0e, invocation_id=ecadbadd-d49d-4516-8b4c-2ec4a2bd801c, invocation_timestamp=2023-01-31T07:00:14.883Z, origin=O=Mock Company 1, L=London, C=GB, session_id=ecadbadd-d49d-4516-8b4c-2ec4a2bd801c, session_timestamp=2023-01-31T07:00:14.883Z, thread-id=859, tx_id=B8B88DF526D6289A98FCDCC0D0A5BE69453156D8846C61133778E9B0554C8B59}
[INFO ] 2023-01-31T07:00:15,334Z [Mock network] corda.flow. - Flow raised an error: Could not find Party for Anonymous(DL6v8GxjNPNZLW4xJ9KP77iSgzgnJKysUbmi5t7ntaxFta). Sending it to flow hospital to be triaged. {actor_id=Only For Testing, actor_owning_identity=O=Mock Company 1, L=London, C=GB, actor_store_id=TEST, fiber-id=10000027, flow-id=6a84b95f-9585-4464-b302-dff1b1c96b12, invocation_id=13121be1-7942-4193-a973-e9f16a3aad92, invocation_timestamp=2023-01-31T07:00:14.594Z, origin=Only For Testing, session_id=13121be1-7942-4193-a973-e9f16a3aad92, session_timestamp=2023-01-31T07:00:14.594Z, thread-id=859, tx_id=B8B88DF526D6289A98FCDCC0D0A5BE69453156D8846C61133778E9B0554C8B59}
[INFO ] 2023-01-31T07:00:15,338Z [Mock network] statemachine.StaffedFlowHospital. - Flow [6a84b95f-9585-4464-b302-dff1b1c96b12] admitted to hospital in state StateMachineState(checkpoint=Checkpoint(checkpointState=CheckpointState(invocationContext=InvocationContext(origin=RPC(actor=Actor(id=Id(value=Only For Testing), serviceId=AuthServiceId(value=TEST), owningLegalIdentity=O=Mock Company 1, L=London, C=GB)), trace=Trace(invocationId=13121be1-7942-4193-a973-e9f16a3aad92, timestamp: 2023-01-31T07:00:14.594Z, entityType: Invocation, sessionId=13121be1-7942-4193-a973-e9f16a3aad92, timestamp: 2023-01-31T07:00:14.594Z, entityType: Session), actor=Actor(id=Id(value=Only For Testing), serviceId=AuthServiceId(value=TEST), owningLegalIdentity=O=Mock Company 1, L=London, C=GB), externalTrace=null, impersonatedActor=null, arguments=[], clientId=null), ourIdentity=O=Mock Company 1, L=London, C=GB, sessions={SessionId(toLong=-846941239363969924)=Initiated(peerParty=O=Mock Company 3, L=London, C=GB, peerFlowInfo=FlowInfo(flowVersion=1, appName=<unknown>), receivedMessages=[], otherSideErrored=false, peerSinkSessionId=SessionId(toLong=-6111232092193349787), deduplicationSeed=R--846941239363969924--3458992896374643217)}, sessionsToBeClosed=[], subFlowStack=[Initiating(flowClass=class net.corda.samples.obligation.flows.IOUSettleFlow, classToInitiateWith=class net.corda.samples.obligation.flows.IOUSettleFlow, flowInfo=FlowInfo(flowVersion=1, appName=<unknown>), subFlowVersion=CorDappFlow(platformVersion=11, corDappName=workflows-1.0, corDappHash=B699A1A7AEE96EE2270B80DAE7A921F446B5529E562BC1497C4BF0F7569223AA), isEnabledTimedFlow=false)], numberOfSuspends=6, numberOfCommits=7), flowState=Started(flowIORequest=Receive(sessions=[FlowSessionImpl(destination=O=Mock Company 3, L=London, C=GB, sourceSessionId=SessionId(toLong=-846941239363969924))]), frozenFiber=228F2A710A65624C4985AA6775CDD54794B3C458D04E580DFBDE472C913B30B6), errorState=Clean, result=null, status=RUNNABLE, progressStep=Starting, flowIoRequest=Receive, compatible=true), flowLogic=net.corda.samples.obligation.flows.IOUSettleFlow@17a23079, pendingDeduplicationHandlers=[net.corda.testing.node.internal.MockNodeMessagingService$InMemoryDeduplicationHandler@2b9121dc], isFlowResumed=true, isWaitingForFuture=false, future=null, isAnyCheckpointPersisted=true, isStartIdempotent=false, isRemoved=false, isKilled=false, isDead=false, senderUUID=fed2a79a-ec55-4f8e-b069-bc5cdd6da91d, reloadCheckpointAfterSuspendCount=null, numberOfCommits=7, lock=java.util.concurrent.Semaphore@5c41ad12[Permits = 0]) {actor_id=Only For Testing, actor_owning_identity=O=Mock Company 1, L=London, C=GB, actor_store_id=TEST, fiber-id=10000027, flow-id=6a84b95f-9585-4464-b302-dff1b1c96b12, invocation_id=13121be1-7942-4193-a973-e9f16a3aad92, invocation_timestamp=2023-01-31T07:00:14.594Z, origin=Only For Testing, session_id=13121be1-7942-4193-a973-e9f16a3aad92, session_timestamp=2023-01-31T07:00:14.594Z, thread-id=859, tx_id=B8B88DF526D6289A98FCDCC0D0A5BE69453156D8846C61133778E9B0554C8B59}
[INFO ] 2023-01-31T07:00:15,341Z [Mock network] statemachine.StaffedFlowHospital. - Error 1 of 1: {actor_id=Only For Testing, actor_owning_identity=O=Mock Company 1, L=London, C=GB, actor_store_id=TEST, fiber-id=10000027, flow-id=6a84b95f-9585-4464-b302-dff1b1c96b12, invocation_id=13121be1-7942-4193-a973-e9f16a3aad92, invocation_timestamp=2023-01-31T07:00:14.594Z, origin=Only For Testing, session_id=13121be1-7942-4193-a973-e9f16a3aad92, session_timestamp=2023-01-31T07:00:14.594Z, thread-id=859, tx_id=B8B88DF526D6289A98FCDCC0D0A5BE69453156D8846C61133778E9B0554C8B59}
java.lang.IllegalArgumentException: Could not find Party for Anonymous(DL6v8GxjNPNZLW4xJ9KP77iSgzgnJKysUbmi5t7ntaxFta)
	at net.corda.core.identity.IdentityUtils.groupAbstractPartyByWellKnownParty(IdentityUtils.kt:47) ~[corda-core-4.9.jar:?]
	at net.corda.core.identity.IdentityUtils.groupAbstractPartyByWellKnownParty(IdentityUtils.kt:63) ~[corda-core-4.9.jar:?]
	at net.corda.core.flows.FinalityFlow.extractExternalParticipants(FinalityFlow.kt:252) ~[corda-core-4.9.jar:?]
	at net.corda.core.flows.FinalityFlow.call(FinalityFlow.kt:162) ~[corda-core-4.9.jar:?]
	at net.corda.core.flows.FinalityFlow.call(FinalityFlow.kt:43) ~[corda-core-4.9.jar:?]
	at net.corda.node.services.statemachine.FlowStateMachineImpl.subFlow(FlowStateMachineImpl.kt:420) ~[corda-node-4.9.jar:?]
	at net.corda.core.flows.FlowLogic.subFlow(FlowLogic.kt:409) ~[corda-core-4.9.jar:?]
	at net.corda.samples.obligation.flows.IOUSettleFlow.call(IOUSettleFlow.kt:116) ~[main/:?]
	at net.corda.samples.obligation.flows.IOUSettleFlow.call(IOUSettleFlow.kt:30) ~[main/:?]
	at net.corda.node.services.statemachine.FlowStateMachineImpl.run(FlowStateMachineImpl.kt:349) ~[corda-node-4.9.jar:?]
	at net.corda.node.services.statemachine.FlowStateMachineImpl.run(FlowStateMachineImpl.kt:71) ~[corda-node-4.9.jar:?]
	at co.paralleluniverse.fibers.Fiber.run1(Fiber.java:1092) ~[quasar-core-0.7.10.jar:0.7.10]
	at co.paralleluniverse.fibers.Fiber.exec(Fiber.java:788) ~[quasar-core-0.7.10.jar:0.7.10]
	at co.paralleluniverse.fibers.RunnableFiberTask.doExec(RunnableFiberTask.java:100) ~[quasar-core-0.7.10.jar:0.7.10]
	at co.paralleluniverse.fibers.RunnableFiberTask.run(RunnableFiberTask.java:91) ~[quasar-core-0.7.10.jar:0.7.10]
	at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511) ~[?:1.8.0_202]
	at java.util.concurrent.FutureTask.run(FutureTask.java:266) ~[?:1.8.0_202]
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.access$201(ScheduledThreadPoolExecutor.java:180) ~[?:1.8.0_202]
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.run(ScheduledThreadPoolExecutor.java:293) ~[?:1.8.0_202]
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149) ~[?:1.8.0_202]
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624) ~[?:1.8.0_202]
	at net.corda.node.utilities.AffinityExecutor$ServiceAffinityExecutor$1$thread$1.run(AffinityExecutor.kt:63) ~[corda-node-4.9.jar:?]
[INFO ] 2023-01-31T07:00:15,344Z [Mock network] statemachine.StaffedFlowHospital. - Flow error allowed to propagate {actor_id=Only For Testing, actor_owning_identity=O=Mock Company 1, L=London, C=GB, actor_store_id=TEST, fiber-id=10000027, flow-id=6a84b95f-9585-4464-b302-dff1b1c96b12, invocation_id=13121be1-7942-4193-a973-e9f16a3aad92, invocation_timestamp=2023-01-31T07:00:14.594Z, origin=Only For Testing, session_id=13121be1-7942-4193-a973-e9f16a3aad92, session_timestamp=2023-01-31T07:00:14.594Z, thread-id=859, tx_id=B8B88DF526D6289A98FCDCC0D0A5BE69453156D8846C61133778E9B0554C8B59}
java.lang.IllegalArgumentException: Could not find Party for Anonymous(DL6v8GxjNPNZLW4xJ9KP77iSgzgnJKysUbmi5t7ntaxFta)
	at net.corda.core.identity.IdentityUtils.groupAbstractPartyByWellKnownParty(IdentityUtils.kt:47) ~[corda-core-4.9.jar:?]
	at net.corda.core.identity.IdentityUtils.groupAbstractPartyByWellKnownParty(IdentityUtils.kt:63) ~[corda-core-4.9.jar:?]
	at net.corda.core.flows.FinalityFlow.extractExternalParticipants(FinalityFlow.kt:252) ~[corda-core-4.9.jar:?]
	at net.corda.core.flows.FinalityFlow.call(FinalityFlow.kt:162) ~[corda-core-4.9.jar:?]
	at net.corda.core.flows.FinalityFlow.call(FinalityFlow.kt:43) ~[corda-core-4.9.jar:?]
	at net.corda.node.services.statemachine.FlowStateMachineImpl.subFlow(FlowStateMachineImpl.kt:420) ~[corda-node-4.9.jar:?]
	at net.corda.core.flows.FlowLogic.subFlow(FlowLogic.kt:409) ~[corda-core-4.9.jar:?]
	at net.corda.samples.obligation.flows.IOUSettleFlow.call(IOUSettleFlow.kt:116) ~[main/:?]
	at net.corda.samples.obligation.flows.IOUSettleFlow.call(IOUSettleFlow.kt:30) ~[main/:?]
	at net.corda.node.services.statemachine.FlowStateMachineImpl.run(FlowStateMachineImpl.kt:349) ~[corda-node-4.9.jar:?]
	at net.corda.node.services.statemachine.FlowStateMachineImpl.run(FlowStateMachineImpl.kt:71) ~[corda-node-4.9.jar:?]
	at co.paralleluniverse.fibers.Fiber.run1(Fiber.java:1092) ~[quasar-core-0.7.10.jar:0.7.10]
	at co.paralleluniverse.fibers.Fiber.exec(Fiber.java:788) ~[quasar-core-0.7.10.jar:0.7.10]
	at co.paralleluniverse.fibers.RunnableFiberTask.doExec(RunnableFiberTask.java:100) ~[quasar-core-0.7.10.jar:0.7.10]
	at co.paralleluniverse.fibers.RunnableFiberTask.run(RunnableFiberTask.java:91) ~[quasar-core-0.7.10.jar:0.7.10]
	at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511) ~[?:1.8.0_202]
	at java.util.concurrent.FutureTask.run(FutureTask.java:266) ~[?:1.8.0_202]
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.access$201(ScheduledThreadPoolExecutor.java:180) ~[?:1.8.0_202]
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.run(ScheduledThreadPoolExecutor.java:293) ~[?:1.8.0_202]
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149) ~[?:1.8.0_202]
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624) ~[?:1.8.0_202]
	at net.corda.node.utilities.AffinityExecutor$ServiceAffinityExecutor$1$thread$1.run(AffinityExecutor.kt:63) ~[corda-node-4.9.jar:?]
[WARN ] 2023-01-31T07:00:15,388Z [Mock network] interceptors.DumpHistoryOnErrorInterceptor. - Flow [6a84b95f-9585-4464-b302-dff1b1c96b12] errored, dumping all transitions:

 --- Transition of flow [6a84b95f-9585-4464-b302-dff1b1c96b12] ---
  Timestamp: 2023-01-31T07:00:14.598Z
  Event: DoRemainingWork
  Actions: 
    CreateTransaction
    PersistCheckpoint(id=[6a84b95f-9585-4464-b302-dff1b1c96b12], checkpoint=Checkpoint(checkpointState=CheckpointState(invocationContext=InvocationContext(origin=RPC(actor=Actor(id=Id(value=Only For Testing), serviceId=AuthServiceId(value=TEST), owningLegalIdentity=O=Mock Company 1, L=London, C=GB)), trace=Trace(invocationId=13121be1-7942-4193-a973-e9f16a3aad92, timestamp: 2023-01-31T07:00:14.594Z, entityType: Invocation, sessionId=13121be1-7942-4193-a973-e9f16a3aad92, timestamp: 2023-01-31T07:00:14.594Z, entityType: Session), actor=Actor(id=Id(value=Only For Testing), serviceId=AuthServiceId(value=TEST), owningLegalIdentity=O=Mock Company 1, L=London, C=GB), externalTrace=null, impersonatedActor=null, arguments=[], clientId=null), ourIdentity=O=Mock Company 1, L=London, C=GB, sessions={}, sessionsToBeClosed=[], subFlowStack=[Initiating(flowClass=class net.corda.samples.obligation.flows.IOUSettleFlow, classToInitiateWith=class net.corda.samples.obligation.flows.IOUSettleFlow, flowInfo=FlowInfo(flowVersion=1, appName=<unknown>), subFlowVersion=CorDappFlow(platformVersion=11, corDappName=workflows-1.0, corDappHash=B699A1A7AEE96EE2270B80DAE7A921F446B5529E562BC1497C4BF0F7569223AA), isEnabledTimedFlow=false)], numberOfSuspends=0, numberOfCommits=1), flowState=Unstarted(flowStart=Explicit, frozenFlowLogic=5DE723D0E9D1391EDC093BDD8A167DF0CE0F886DA8DB399D4F95765FFD2EEF04), errorState=Clean, result=null, status=RUNNABLE, progressStep=null, flowIoRequest=null, compatible=true), isCheckpointUpdate=false)
    PersistDeduplicationFacts(deduplicationHandlers=[net.corda.node.internal.FlowStarterImpl$startFlow$startFlowEvent$1@b4ec0ff])
    CommitTransaction
    AcknowledgeMessages(deduplicationHandlers=[net.corda.node.internal.FlowStarterImpl$startFlow$startFlowEvent$1@b4ec0ff])
    SignalFlowHasStarted(flowId=[6a84b95f-9585-4464-b302-dff1b1c96b12])
    CreateTransaction
  Continuation: Resume(result=null)
  Diff between previous and next state:
pendingDeduplicationHandlers: 
    [net.corda.node.internal.FlowStarterImpl$startFlow$startFlowEvent$1@b4ec0ff]
    []
isAnyCheckpointPersisted: 
    false
    true
isFlowResumed: 
    false
    true


 --- Transition of flow [6a84b95f-9585-4464-b302-dff1b1c96b12] ---
  Timestamp: 2023-01-31T07:00:14.601Z
  Event: EnterSubFlow(subFlowClass=class net.corda.samples.obligation.accountUtil.NewKeyForAccount, subFlowVersion=CorDappFlow(platformVersion=11, corDappName=workflows-1.0, corDappHash=B699A1A7AEE96EE2270B80DAE7A921F446B5529E562BC1497C4BF0F7569223AA), isEnabledTimedFlow=false)
  Actions: 
    
  Continuation: ProcessEvents
  Diff between previous and next state:
checkpoint.checkpointState.subFlowStack: 
    [Initiating(flowClass=class net.corda.samples.obligation.flows.IOUSettleFlow, classToInitiateWith=class net.corda.samples.obligation.flows.IOUSettleFlow, flowInfo=FlowInfo(flowVersion=1, appName=<unknown>), subFlowVersion=CorDappFlow(platformVersion=11, corDappName=workflows-1.0, corDappHash=B699A1A7AEE96EE2270B80DAE7A921F446B5529E562BC1497C4BF0F7569223AA), isEnabledTimedFlow=false)]
    [Initiating(flowClass=class net.corda.samples.obligation.flows.IOUSettleFlow, classToInitiateWith=class net.corda.samples.obligation.flows.IOUSettleFlow, flowInfo=FlowInfo(flowVersion=1, appName=<unknown>), subFlowVersion=CorDappFlow(platformVersion=11, corDappName=workflows-1.0, corDappHash=B699A1A7AEE96EE2270B80DAE7A921F446B5529E562BC1497C4BF0F7569223AA), isEnabledTimedFlow=false), Inlined(flowClass=class net.corda.samples.obligation.accountUtil.NewKeyForAccount, subFlowVersion=CorDappFlow(platformVersion=11, corDappName=workflows-1.0, corDappHash=B699A1A7AEE96EE2270B80DAE7A921F446B5529E562BC1497C4BF0F7569223AA), isEnabledTimedFlow=false)]
checkpoint.timestamp: 
    2023-01-31T07:00:14.595Z
    2023-01-31T07:00:14.601Z


 --- Transition of flow [6a84b95f-9585-4464-b302-dff1b1c96b12] ---
  Timestamp: 2023-01-31T07:00:14.605Z
  Event: LeaveSubFlow
  Actions: 
    
  Continuation: ProcessEvents
  Diff between previous and next state:
checkpoint.checkpointState.subFlowStack: 
    [Initiating(flowClass=class net.corda.samples.obligation.flows.IOUSettleFlow, classToInitiateWith=class net.corda.samples.obligation.flows.IOUSettleFlow, flowInfo=FlowInfo(flowVersion=1, appName=<unknown>), subFlowVersion=CorDappFlow(platformVersion=11, corDappName=workflows-1.0, corDappHash=B699A1A7AEE96EE2270B80DAE7A921F446B5529E562BC1497C4BF0F7569223AA), isEnabledTimedFlow=false), Inlined(flowClass=class net.corda.samples.obligation.accountUtil.NewKeyForAccount, subFlowVersion=CorDappFlow(platformVersion=11, corDappName=workflows-1.0, corDappHash=B699A1A7AEE96EE2270B80DAE7A921F446B5529E562BC1497C4BF0F7569223AA), isEnabledTimedFlow=false)]
    [Initiating(flowClass=class net.corda.samples.obligation.flows.IOUSettleFlow, classToInitiateWith=class net.corda.samples.obligation.flows.IOUSettleFlow, flowInfo=FlowInfo(flowVersion=1, appName=<unknown>), subFlowVersion=CorDappFlow(platformVersion=11, corDappName=workflows-1.0, corDappHash=B699A1A7AEE96EE2270B80DAE7A921F446B5529E562BC1497C4BF0F7569223AA), isEnabledTimedFlow=false)]
checkpoint.timestamp: 
    2023-01-31T07:00:14.601Z
    2023-01-31T07:00:14.605Z


 --- Transition of flow [6a84b95f-9585-4464-b302-dff1b1c96b12] ---
  Timestamp: 2023-01-31T07:00:14.613Z
  Event: EnterSubFlow(subFlowClass=class com.r3.corda.lib.accounts.workflows.flows.RequestKeyForAccount, subFlowVersion=CorDappFlow(platformVersion=11, corDappName=accounts-workflows-1.0, corDappHash=80555705CE83A631D1BDD61E9C14A7C2215BB67FAB1411547C4D4B3D66F8402E), isEnabledTimedFlow=false)
  Actions: 
    
  Continuation: ProcessEvents
  Diff between previous and next state:
checkpoint.checkpointState.subFlowStack: 
    [Initiating(flowClass=class net.corda.samples.obligation.flows.IOUSettleFlow, classToInitiateWith=class net.corda.samples.obligation.flows.IOUSettleFlow, flowInfo=FlowInfo(flowVersion=1, appName=<unknown>), subFlowVersion=CorDappFlow(platformVersion=11, corDappName=workflows-1.0, corDappHash=B699A1A7AEE96EE2270B80DAE7A921F446B5529E562BC1497C4BF0F7569223AA), isEnabledTimedFlow=false)]
    [Initiating(flowClass=class net.corda.samples.obligation.flows.IOUSettleFlow, classToInitiateWith=class net.corda.samples.obligation.flows.IOUSettleFlow, flowInfo=FlowInfo(flowVersion=1, appName=<unknown>), subFlowVersion=CorDappFlow(platformVersion=11, corDappName=workflows-1.0, corDappHash=B699A1A7AEE96EE2270B80DAE7A921F446B5529E562BC1497C4BF0F7569223AA), isEnabledTimedFlow=false), Initiating(flowClass=class com.r3.corda.lib.accounts.workflows.flows.RequestKeyForAccount, classToInitiateWith=class com.r3.corda.lib.accounts.workflows.flows.RequestKeyForAccount, flowInfo=FlowInfo(flowVersion=1, appName=accounts-workflows-1.0), subFlowVersion=CorDappFlow(platformVersion=11, corDappName=accounts-workflows-1.0, corDappHash=80555705CE83A631D1BDD61E9C14A7C2215BB67FAB1411547C4D4B3D66F8402E), isEnabledTimedFlow=false)]
checkpoint.timestamp: 
    2023-01-31T07:00:14.605Z
    2023-01-31T07:00:14.613Z


 --- Transition of flow [6a84b95f-9585-4464-b302-dff1b1c96b12] ---
  Timestamp: 2023-01-31T07:00:14.613Z
  Event: InitiateFlow(destination=O=Mock Company 3, L=London, C=GB, wellKnownParty=O=Mock Company 3, L=London, C=GB)
  Actions: 
    AddSessionBinding(flowId=[6a84b95f-9585-4464-b302-dff1b1c96b12], sessionId=SessionId(toLong=6728904389291810955))
  Continuation: Resume(result=class net.corda.node.services.statemachine.FlowSessionImpl)
  Diff between previous and next state:
checkpoint.checkpointState.sessions.SessionId(toLong=6728904389291810955): 
    null
    Uninitiated(destination=O=Mock Company 3, L=London, C=GB, initiatingSubFlow=Initiating(flowClass=class com.r3.corda.lib.accounts.workflows.flows.RequestKeyForAccount, classToInitiateWith=class com.r3.corda.lib.accounts.workflows.flows.RequestKeyForAccount, flowInfo=FlowInfo(flowVersion=1, appName=accounts-workflows-1.0), subFlowVersion=CorDappFlow(platformVersion=11, corDappName=accounts-workflows-1.0, corDappHash=80555705CE83A631D1BDD61E9C14A7C2215BB67FAB1411547C4D4B3D66F8402E), isEnabledTimedFlow=false), sourceSessionId=SessionId(toLong=6728904389291810955), additionalEntropy=-381495336044722511)


 --- Transition of flow [6a84b95f-9585-4464-b302-dff1b1c96b12] ---
  Timestamp: 2023-01-31T07:00:14.613Z
  Event: EnterSubFlow(subFlowClass=class com.r3.corda.lib.accounts.workflows.flows.RequestKeyForAccountFlow, subFlowVersion=CorDappFlow(platformVersion=11, corDappName=accounts-workflows-1.0, corDappHash=80555705CE83A631D1BDD61E9C14A7C2215BB67FAB1411547C4D4B3D66F8402E), isEnabledTimedFlow=false)
  Actions: 
    
  Continuation: ProcessEvents
  Diff between previous and next state:
checkpoint.checkpointState.subFlowStack: 
    [Initiating(flowClass=class net.corda.samples.obligation.flows.IOUSettleFlow, classToInitiateWith=class net.corda.samples.obligation.flows.IOUSettleFlow, flowInfo=FlowInfo(flowVersion=1, appName=<unknown>), subFlowVersion=CorDappFlow(platformVersion=11, corDappName=workflows-1.0, corDappHash=B699A1A7AEE96EE2270B80DAE7A921F446B5529E562BC1497C4BF0F7569223AA), isEnabledTimedFlow=false), Initiating(flowClass=class com.r3.corda.lib.accounts.workflows.flows.RequestKeyForAccount, classToInitiateWith=class com.r3.corda.lib.accounts.workflows.flows.RequestKeyForAccount, flowInfo=FlowInfo(flowVersion=1, appName=accounts-workflows-1.0), subFlowVersion=CorDappFlow(platformVersion=11, corDappName=accounts-workflows-1.0, corDappHash=80555705CE83A631D1BDD61E9C14A7C2215BB67FAB1411547C4D4B3D66F8402E), isEnabledTimedFlow=false)]
    [Initiating(flowClass=class net.corda.samples.obligation.flows.IOUSettleFlow, classToInitiateWith=class net.corda.samples.obligation.flows.IOUSettleFlow, flowInfo=FlowInfo(flowVersion=1, appName=<unknown>), subFlowVersion=CorDappFlow(platformVersion=11, corDappName=workflows-1.0, corDappHash=B699A1A7AEE96EE2270B80DAE7A921F446B5529E562BC1497C4BF0F7569223AA), isEnabledTimedFlow=false), Initiating(flowClass=class com.r3.corda.lib.accounts.workflows.flows.RequestKeyForAccount, classToInitiateWith=class com.r3.corda.lib.accounts.workflows.flows.RequestKeyForAccount, flowInfo=FlowInfo(flowVersion=1, appName=accounts-workflows-1.0), subFlowVersion=CorDappFlow(platformVersion=11, corDappName=accounts-workflows-1.0, corDappHash=80555705CE83A631D1BDD61E9C14A7C2215BB67FAB1411547C4D4B3D66F8402E), isEnabledTimedFlow=false), Inlined(flowClass=class com.r3.corda.lib.accounts.workflows.flows.RequestKeyForAccountFlow, subFlowVersion=CorDappFlow(platformVersion=11, corDappName=accounts-workflows-1.0, corDappHash=80555705CE83A631D1BDD61E9C14A7C2215BB67FAB1411547C4D4B3D66F8402E), isEnabledTimedFlow=false)]


 --- Transition of flow [6a84b95f-9585-4464-b302-dff1b1c96b12] ---
  Timestamp: 2023-01-31T07:00:14.621Z
  Event: Suspend(ioRequest=SendAndReceive({FlowSessionImpl(destination=O=Mock Company 3, L=London, C=GB, sourceSessionId=SessionId(toLong=6728904389291810955))=FlowSessionImpl(destination=O=Mock Company 3, L=London, C=GB, sourceSessionId=SessionId(toLong=6728904389291810955))=00A0FD77D4D949DA5FA692475B2671D10B18BB1F0A8E923BB2709D45565AF177}, shouldRetrySend=false), maySkipCheckpoint=false, fiber=72EA43EEF5A82DF465B8DA3DADBE59C3922E8EF7C2F9EED9482D7CDE87766E17, currentStep=Starting)
  Actions: 
    PersistCheckpoint(id=[6a84b95f-9585-4464-b302-dff1b1c96b12], checkpoint=Checkpoint(checkpointState=CheckpointState(invocationContext=InvocationContext(origin=RPC(actor=Actor(id=Id(value=Only For Testing), serviceId=AuthServiceId(value=TEST), owningLegalIdentity=O=Mock Company 1, L=London, C=GB)), trace=Trace(invocationId=13121be1-7942-4193-a973-e9f16a3aad92, timestamp: 2023-01-31T07:00:14.594Z, entityType: Invocation, sessionId=13121be1-7942-4193-a973-e9f16a3aad92, timestamp: 2023-01-31T07:00:14.594Z, entityType: Session), actor=Actor(id=Id(value=Only For Testing), serviceId=AuthServiceId(value=TEST), owningLegalIdentity=O=Mock Company 1, L=London, C=GB), externalTrace=null, impersonatedActor=null, arguments=[], clientId=null), ourIdentity=O=Mock Company 1, L=London, C=GB, sessions={SessionId(toLong=6728904389291810955)=Uninitiated(destination=O=Mock Company 3, L=London, C=GB, initiatingSubFlow=Initiating(flowClass=class com.r3.corda.lib.accounts.workflows.flows.RequestKeyForAccount, classToInitiateWith=class com.r3.corda.lib.accounts.workflows.flows.RequestKeyForAccount, flowInfo=FlowInfo(flowVersion=1, appName=accounts-workflows-1.0), subFlowVersion=CorDappFlow(platformVersion=11, corDappName=accounts-workflows-1.0, corDappHash=80555705CE83A631D1BDD61E9C14A7C2215BB67FAB1411547C4D4B3D66F8402E), isEnabledTimedFlow=false), sourceSessionId=SessionId(toLong=6728904389291810955), additionalEntropy=-381495336044722511)}, sessionsToBeClosed=[], subFlowStack=[Initiating(flowClass=class net.corda.samples.obligation.flows.IOUSettleFlow, classToInitiateWith=class net.corda.samples.obligation.flows.IOUSettleFlow, flowInfo=FlowInfo(flowVersion=1, appName=<unknown>), subFlowVersion=CorDappFlow(platformVersion=11, corDappName=workflows-1.0, corDappHash=B699A1A7AEE96EE2270B80DAE7A921F446B5529E562BC1497C4BF0F7569223AA), isEnabledTimedFlow=false), Initiating(flowClass=class com.r3.corda.lib.accounts.workflows.flows.RequestKeyForAccount, classToInitiateWith=class com.r3.corda.lib.accounts.workflows.flows.RequestKeyForAccount, flowInfo=FlowInfo(flowVersion=1, appName=accounts-workflows-1.0), subFlowVersion=CorDappFlow(platformVersion=11, corDappName=accounts-workflows-1.0, corDappHash=80555705CE83A631D1BDD61E9C14A7C2215BB67FAB1411547C4D4B3D66F8402E), isEnabledTimedFlow=false), Inlined(flowClass=class com.r3.corda.lib.accounts.workflows.flows.RequestKeyForAccountFlow, subFlowVersion=CorDappFlow(platformVersion=11, corDappName=accounts-workflows-1.0, corDappHash=80555705CE83A631D1BDD61E9C14A7C2215BB67FAB1411547C4D4B3D66F8402E), isEnabledTimedFlow=false)], numberOfSuspends=1, numberOfCommits=2), flowState=Started(flowIORequest=SendAndReceive({FlowSessionImpl(destination=O=Mock Company 3, L=London, C=GB, sourceSessionId=SessionId(toLong=6728904389291810955))=FlowSessionImpl(destination=O=Mock Company 3, L=London, C=GB, sourceSessionId=SessionId(toLong=6728904389291810955))=00A0FD77D4D949DA5FA692475B2671D10B18BB1F0A8E923BB2709D45565AF177}, shouldRetrySend=false), frozenFiber=72EA43EEF5A82DF465B8DA3DADBE59C3922E8EF7C2F9EED9482D7CDE87766E17), errorState=Clean, result=null, status=RUNNABLE, progressStep=Starting, flowIoRequest=SendAndReceive, compatible=true), isCheckpointUpdate=true)
    PersistDeduplicationFacts(deduplicationHandlers=[])
    CommitTransaction
    AcknowledgeMessages(deduplicationHandlers=[])
    ScheduleEvent(event=DoRemainingWork)
  Continuation: ProcessEvents
  Diff between previous and next state:
numberOfCommits: 
    0
    2
checkpoint.flowIoRequest: 
    null
    SendAndReceive
checkpoint.flowState: 
    Unstarted(flowStart=Explicit, frozenFlowLogic=5DE723D0E9D1391EDC093BDD8A167DF0CE0F886DA8DB399D4F95765FFD2EEF04)
    Started(flowIORequest=SendAndReceive({FlowSessionImpl(destination=O=Mock Company 3, L=London, C=GB, sourceSessionId=SessionId(toLong=6728904389291810955))=FlowSessionImpl(destination=O=Mock Company 3, L=London, C=GB, sourceSessionId=SessionId(toLong=6728904389291810955))=00A0FD77D4D949DA5FA692475B2671D10B18BB1F0A8E923BB2709D45565AF177}, shouldRetrySend=false), frozenFiber=72EA43EEF5A82DF465B8DA3DADBE59C3922E8EF7C2F9EED9482D7CDE87766E17)
checkpoint.checkpointState.numberOfCommits: 
    1
    2
checkpoint.checkpointState.numberOfSuspends: 
    0
    1
checkpoint.progressStep: 
    null
    Starting
checkpoint.timestamp: 
    2023-01-31T07:00:14.613Z
    2023-01-31T07:00:14.619Z
isFlowResumed: 
    true
    false


 --- Transition of flow [6a84b95f-9585-4464-b302-dff1b1c96b12] ---
  Timestamp: 2023-01-31T07:00:14.625Z
  Event: DoRemainingWork
  Actions: 
    SendMultiple(sendInitial=[SendInitial(destination=O=Mock Company 3, L=London, C=GB, initialise=InitialSessionMessage(initiatorSessionId=SessionId(toLong=6728904389291810955), initiationEntropy=-381495336044722511, initiatorFlowClassName=com.r3.corda.lib.accounts.workflows.flows.RequestKeyForAccount, appName=accounts-workflows-1.0, firstPayload=class net.corda.core.serialization.SerializedBytes), deduplicationId=SenderDeduplicationId(deduplicationId=DeduplicationId(toString=N-R-6728904389291810955--381495336044722511-1-0), senderUUID=fed2a79a-ec55-4f8e-b069-bc5cdd6da91d))], sendExisting=[])
  Continuation: ProcessEvents
  Diff between previous and next state:
checkpoint.flowState.flowIORequest: 
    SendAndReceive({FlowSessionImpl(destination=O=Mock Company 3, L=London, C=GB, sourceSessionId=SessionId(toLong=6728904389291810955))=FlowSessionImpl(destination=O=Mock Company 3, L=London, C=GB, sourceSessionId=SessionId(toLong=6728904389291810955))=00A0FD77D4D949DA5FA692475B2671D10B18BB1F0A8E923BB2709D45565AF177}, shouldRetrySend=false)
    Receive(sessions=[FlowSessionImpl(destination=O=Mock Company 3, L=London, C=GB, sourceSessionId=SessionId(toLong=6728904389291810955))])
checkpoint.checkpointState.sessions.SessionId(toLong=6728904389291810955): 
    Uninitiated(destination=O=Mock Company 3, L=London, C=GB, initiatingSubFlow=Initiating(flowClass=class com.r3.corda.lib.accounts.workflows.flows.RequestKeyForAccount, classToInitiateWith=class com.r3.corda.lib.accounts.workflows.flows.RequestKeyForAccount, flowInfo=FlowInfo(flowVersion=1, appName=accounts-workflows-1.0), subFlowVersion=CorDappFlow(platformVersion=11, corDappName=accounts-workflows-1.0, corDappHash=80555705CE83A631D1BDD61E9C14A7C2215BB67FAB1411547C4D4B3D66F8402E), isEnabledTimedFlow=false), sourceSessionId=SessionId(toLong=6728904389291810955), additionalEntropy=-381495336044722511)
    Initiating(bufferedMessages=[], rejectionError=null, deduplicationSeed=R-6728904389291810955--381495336044722511)
checkpoint.timestamp: 
    2023-01-31T07:00:14.619Z
    2023-01-31T07:00:14.621Z


 --- Transition of flow [6a84b95f-9585-4464-b302-dff1b1c96b12] ---
  Timestamp: 2023-01-31T07:00:14.650Z
  Event: DeliverSessionMessage(sessionMessage=ExistingSessionMessage(recipientSessionId=SessionId(toLong=6728904389291810955), payload=ConfirmSessionMessage(initiatedSessionId=SessionId(toLong=-4097024049185308153), initiatedFlowInfo=FlowInfo(flowVersion=1, appName=accounts-workflows-1.0))), deduplicationHandler=net.corda.testing.node.internal.MockNodeMessagingService$InMemoryDeduplicationHandler@18122e02, sender=O=Mock Company 3, L=London, C=GB)
  Actions: 
    ScheduleEvent(event=DoRemainingWork)
  Continuation: ProcessEvents
  Diff between previous and next state:
pendingDeduplicationHandlers: 
    []
    [net.corda.testing.node.internal.MockNodeMessagingService$InMemoryDeduplicationHandler@18122e02]
checkpoint.checkpointState.sessions.SessionId(toLong=6728904389291810955): 
    Initiating(bufferedMessages=[], rejectionError=null, deduplicationSeed=R-6728904389291810955--381495336044722511)
    Initiated(peerParty=O=Mock Company 3, L=London, C=GB, peerFlowInfo=FlowInfo(flowVersion=1, appName=accounts-workflows-1.0), receivedMessages=[], otherSideErrored=false, peerSinkSessionId=SessionId(toLong=-4097024049185308153), deduplicationSeed=R-6728904389291810955--381495336044722511)
checkpoint.timestamp: 
    2023-01-31T07:00:14.621Z
    2023-01-31T07:00:14.650Z


 --- Transition of flow [6a84b95f-9585-4464-b302-dff1b1c96b12] ---
  Timestamp: 2023-01-31T07:00:14.650Z
  Event: DoRemainingWork
  Actions: 
    
  Continuation: ProcessEvents
  Diff between previous and next state:
null

 --- Transition of flow [6a84b95f-9585-4464-b302-dff1b1c96b12] ---
  Timestamp: 2023-01-31T07:00:14.651Z
  Event: DeliverSessionMessage(sessionMessage=ExistingSessionMessage(recipientSessionId=SessionId(toLong=6728904389291810955), payload=DataSessionMessage(payload=class net.corda.core.serialization.SerializedBytes)), deduplicationHandler=net.corda.testing.node.internal.MockNodeMessagingService$InMemoryDeduplicationHandler@4cea9e92, sender=O=Mock Company 3, L=London, C=GB)
  Actions: 
    ScheduleEvent(event=DoRemainingWork)
  Continuation: ProcessEvents
  Diff between previous and next state:
pendingDeduplicationHandlers: 
    [net.corda.testing.node.internal.MockNodeMessagingService$InMemoryDeduplicationHandler@18122e02]
    [net.corda.testing.node.internal.MockNodeMessagingService$InMemoryDeduplicationHandler@18122e02, net.corda.testing.node.internal.MockNodeMessagingService$InMemoryDeduplicationHandler@4cea9e92]
checkpoint.checkpointState.sessions.SessionId(toLong=6728904389291810955).receivedMessages.isEmpty: 
    true
    false
checkpoint.timestamp: 
    2023-01-31T07:00:14.650Z
    2023-01-31T07:00:14.651Z


 --- Transition of flow [6a84b95f-9585-4464-b302-dff1b1c96b12] ---
  Timestamp: 2023-01-31T07:00:14.651Z
  Event: DoRemainingWork
  Actions: 
    CreateTransaction
  Continuation: Resume(result=class java.util.LinkedHashMap)
  Diff between previous and next state:
checkpoint.checkpointState.sessions.SessionId(toLong=6728904389291810955).receivedMessages.isEmpty: 
    false
    true
isFlowResumed: 
    false
    true


 --- Transition of flow [6a84b95f-9585-4464-b302-dff1b1c96b12] ---
  Timestamp: 2023-01-31T07:00:14.652Z
  Event: EnterSubFlow(subFlowClass=class com.r3.corda.lib.ci.workflows.RequestKeyFlow, subFlowVersion=CoreFlow(platformVersion=11), isEnabledTimedFlow=false)
  Actions: 
    
  Continuation: ProcessEvents
  Diff between previous and next state:
checkpoint.checkpointState.subFlowStack: 
    [Initiating(flowClass=class net.corda.samples.obligation.flows.IOUSettleFlow, classToInitiateWith=class net.corda.samples.obligation.flows.IOUSettleFlow, flowInfo=FlowInfo(flowVersion=1, appName=<unknown>), subFlowVersion=CorDappFlow(platformVersion=11, corDappName=workflows-1.0, corDappHash=B699A1A7AEE96EE2270B80DAE7A921F446B5529E562BC1497C4BF0F7569223AA), isEnabledTimedFlow=false), Initiating(flowClass=class com.r3.corda.lib.accounts.workflows.flows.RequestKeyForAccount, classToInitiateWith=class com.r3.corda.lib.accounts.workflows.flows.RequestKeyForAccount, flowInfo=FlowInfo(flowVersion=1, appName=accounts-workflows-1.0), subFlowVersion=CorDappFlow(platformVersion=11, corDappName=accounts-workflows-1.0, corDappHash=80555705CE83A631D1BDD61E9C14A7C2215BB67FAB1411547C4D4B3D66F8402E), isEnabledTimedFlow=false), Inlined(flowClass=class com.r3.corda.lib.accounts.workflows.flows.RequestKeyForAccountFlow, subFlowVersion=CorDappFlow(platformVersion=11, corDappName=accounts-workflows-1.0, corDappHash=80555705CE83A631D1BDD61E9C14A7C2215BB67FAB1411547C4D4B3D66F8402E), isEnabledTimedFlow=false)]
    [Initiating(flowClass=class net.corda.samples.obligation.flows.IOUSettleFlow, classToInitiateWith=class net.corda.samples.obligation.flows.IOUSettleFlow, flowInfo=FlowInfo(flowVersion=1, appName=<unknown>), subFlowVersion=CorDappFlow(platformVersion=11, corDappName=workflows-1.0, corDappHash=B699A1A7AEE96EE2270B80DAE7A921F446B5529E562BC1497C4BF0F7569223AA), isEnabledTimedFlow=false), Initiating(flowClass=class com.r3.corda.lib.accounts.workflows.flows.RequestKeyForAccount, classToInitiateWith=class com.r3.corda.lib.accounts.workflows.flows.RequestKeyForAccount, flowInfo=FlowInfo(flowVersion=1, appName=accounts-workflows-1.0), subFlowVersion=CorDappFlow(platformVersion=11, corDappName=accounts-workflows-1.0, corDappHash=80555705CE83A631D1BDD61E9C14A7C2215BB67FAB1411547C4D4B3D66F8402E), isEnabledTimedFlow=false), Inlined(flowClass=class com.r3.corda.lib.accounts.workflows.flows.RequestKeyForAccountFlow, subFlowVersion=CorDappFlow(platformVersion=11, corDappName=accounts-workflows-1.0, corDappHash=80555705CE83A631D1BDD61E9C14A7C2215BB67FAB1411547C4D4B3D66F8402E), isEnabledTimedFlow=false), Inlined(flowClass=class com.r3.corda.lib.ci.workflows.RequestKeyFlow, subFlowVersion=CoreFlow(platformVersion=11), isEnabledTimedFlow=false)]
checkpoint.timestamp: 
    2023-01-31T07:00:14.651Z
    2023-01-31T07:00:14.652Z


 --- Transition of flow [6a84b95f-9585-4464-b302-dff1b1c96b12] ---
  Timestamp: 2023-01-31T07:00:14.656Z
  Event: Suspend(ioRequest=SendAndReceive({FlowSessionImpl(destination=O=Mock Company 3, L=London, C=GB, sourceSessionId=SessionId(toLong=6728904389291810955))=FlowSessionImpl(destination=O=Mock Company 3, L=London, C=GB, sourceSessionId=SessionId(toLong=6728904389291810955))=4420BD51973C3A034B9DF1B956F5F9205333584CC5C92ADDF3E1704C8B9FD25F}, shouldRetrySend=false), maySkipCheckpoint=false, fiber=888DFA59C02B3826AAE16CC3BA496C2E5E79164411129EB29989060DC9CC955D, currentStep=Starting)
  Actions: 
    PersistCheckpoint(id=[6a84b95f-9585-4464-b302-dff1b1c96b12], checkpoint=Checkpoint(checkpointState=CheckpointState(invocationContext=InvocationContext(origin=RPC(actor=Actor(id=Id(value=Only For Testing), serviceId=AuthServiceId(value=TEST), owningLegalIdentity=O=Mock Company 1, L=London, C=GB)), trace=Trace(invocationId=13121be1-7942-4193-a973-e9f16a3aad92, timestamp: 2023-01-31T07:00:14.594Z, entityType: Invocation, sessionId=13121be1-7942-4193-a973-e9f16a3aad92, timestamp: 2023-01-31T07:00:14.594Z, entityType: Session), actor=Actor(id=Id(value=Only For Testing), serviceId=AuthServiceId(value=TEST), owningLegalIdentity=O=Mock Company 1, L=London, C=GB), externalTrace=null, impersonatedActor=null, arguments=[], clientId=null), ourIdentity=O=Mock Company 1, L=London, C=GB, sessions={SessionId(toLong=6728904389291810955)=Initiated(peerParty=O=Mock Company 3, L=London, C=GB, peerFlowInfo=FlowInfo(flowVersion=1, appName=accounts-workflows-1.0), receivedMessages=[], otherSideErrored=false, peerSinkSessionId=SessionId(toLong=-4097024049185308153), deduplicationSeed=R-6728904389291810955--381495336044722511)}, sessionsToBeClosed=[], subFlowStack=[Initiating(flowClass=class net.corda.samples.obligation.flows.IOUSettleFlow, classToInitiateWith=class net.corda.samples.obligation.flows.IOUSettleFlow, flowInfo=FlowInfo(flowVersion=1, appName=<unknown>), subFlowVersion=CorDappFlow(platformVersion=11, corDappName=workflows-1.0, corDappHash=B699A1A7AEE96EE2270B80DAE7A921F446B5529E562BC1497C4BF0F7569223AA), isEnabledTimedFlow=false), Initiating(flowClass=class com.r3.corda.lib.accounts.workflows.flows.RequestKeyForAccount, classToInitiateWith=class com.r3.corda.lib.accounts.workflows.flows.RequestKeyForAccount, flowInfo=FlowInfo(flowVersion=1, appName=accounts-workflows-1.0), subFlowVersion=CorDappFlow(platformVersion=11, corDappName=accounts-workflows-1.0, corDappHash=80555705CE83A631D1BDD61E9C14A7C2215BB67FAB1411547C4D4B3D66F8402E), isEnabledTimedFlow=false), Inlined(flowClass=class com.r3.corda.lib.accounts.workflows.flows.RequestKeyForAccountFlow, subFlowVersion=CorDappFlow(platformVersion=11, corDappName=accounts-workflows-1.0, corDappHash=80555705CE83A631D1BDD61E9C14A7C2215BB67FAB1411547C4D4B3D66F8402E), isEnabledTimedFlow=false), Inlined(flowClass=class com.r3.corda.lib.ci.workflows.RequestKeyFlow, subFlowVersion=CoreFlow(platformVersion=11), isEnabledTimedFlow=false)], numberOfSuspends=2, numberOfCommits=3), flowState=Started(flowIORequest=SendAndReceive({FlowSessionImpl(destination=O=Mock Company 3, L=London, C=GB, sourceSessionId=SessionId(toLong=6728904389291810955))=FlowSessionImpl(destination=O=Mock Company 3, L=London, C=GB, sourceSessionId=SessionId(toLong=6728904389291810955))=4420BD51973C3A034B9DF1B956F5F9205333584CC5C92ADDF3E1704C8B9FD25F}, shouldRetrySend=false), frozenFiber=888DFA59C02B3826AAE16CC3BA496C2E5E79164411129EB29989060DC9CC955D), errorState=Clean, result=null, status=RUNNABLE, progressStep=Starting, flowIoRequest=SendAndReceive, compatible=true), isCheckpointUpdate=true)
    PersistDeduplicationFacts(deduplicationHandlers=[net.corda.testing.node.internal.MockNodeMessagingService$InMemoryDeduplicationHandler@18122e02, net.corda.testing.node.internal.MockNodeMessagingService$InMemoryDeduplicationHandler@4cea9e92])
    CommitTransaction
    AcknowledgeMessages(deduplicationHandlers=[net.corda.testing.node.internal.MockNodeMessagingService$InMemoryDeduplicationHandler@18122e02, net.corda.testing.node.internal.MockNodeMessagingService$InMemoryDeduplicationHandler@4cea9e92])
    ScheduleEvent(event=DoRemainingWork)
  Continuation: ProcessEvents
  Diff between previous and next state:
pendingDeduplicationHandlers: 
    [net.corda.testing.node.internal.MockNodeMessagingService$InMemoryDeduplicationHandler@18122e02, net.corda.testing.node.internal.MockNodeMessagingService$InMemoryDeduplicationHandler@4cea9e92]
    []
numberOfCommits: 
    2
    3
checkpoint.flowState.flowIORequest: 
    Receive(sessions=[FlowSessionImpl(destination=O=Mock Company 3, L=London, C=GB, sourceSessionId=SessionId(toLong=6728904389291810955))])
    SendAndReceive({FlowSessionImpl(destination=O=Mock Company 3, L=London, C=GB, sourceSessionId=SessionId(toLong=6728904389291810955))=FlowSessionImpl(destination=O=Mock Company 3, L=London, C=GB, sourceSessionId=SessionId(toLong=6728904389291810955))=4420BD51973C3A034B9DF1B956F5F9205333584CC5C92ADDF3E1704C8B9FD25F}, shouldRetrySend=false)
checkpoint.flowState.frozenFiber.hash: 
    72EA43EEF5A82DF465B8DA3DADBE59C3922E8EF7C2F9EED9482D7CDE87766E17
    888DFA59C02B3826AAE16CC3BA496C2E5E79164411129EB29989060DC9CC955D
checkpoint.checkpointState.numberOfCommits: 
    2
    3
checkpoint.checkpointState.numberOfSuspends: 
    1
    2
checkpoint.timestamp: 
    2023-01-31T07:00:14.652Z
    2023-01-31T07:00:14.654Z
isFlowResumed: 
    true
    false


 --- Transition of flow [6a84b95f-9585-4464-b302-dff1b1c96b12] ---
  Timestamp: 2023-01-31T07:00:14.657Z
  Event: DoRemainingWork
  Actions: 
    SendMultiple(sendInitial=[], sendExisting=[SendExisting(peerParty=O=Mock Company 3, L=London, C=GB, message=ExistingSessionMessage(recipientSessionId=SessionId(toLong=-4097024049185308153), payload=DataSessionMessage(payload=class net.corda.core.serialization.SerializedBytes)), deduplicationId=SenderDeduplicationId(deduplicationId=DeduplicationId(toString=N-R-6728904389291810955--381495336044722511-2-0), senderUUID=fed2a79a-ec55-4f8e-b069-bc5cdd6da91d))])
  Continuation: ProcessEvents
  Diff between previous and next state:
checkpoint.flowState.flowIORequest: 
    SendAndReceive({FlowSessionImpl(destination=O=Mock Company 3, L=London, C=GB, sourceSessionId=SessionId(toLong=6728904389291810955))=FlowSessionImpl(destination=O=Mock Company 3, L=London, C=GB, sourceSessionId=SessionId(toLong=6728904389291810955))=4420BD51973C3A034B9DF1B956F5F9205333584CC5C92ADDF3E1704C8B9FD25F}, shouldRetrySend=false)
    Receive(sessions=[FlowSessionImpl(destination=O=Mock Company 3, L=London, C=GB, sourceSessionId=SessionId(toLong=6728904389291810955))])
checkpoint.timestamp: 
    2023-01-31T07:00:14.654Z
    2023-01-31T07:00:14.656Z


 --- Transition of flow [6a84b95f-9585-4464-b302-dff1b1c96b12] ---
  Timestamp: 2023-01-31T07:00:14.670Z
  Event: DeliverSessionMessage(sessionMessage=ExistingSessionMessage(recipientSessionId=SessionId(toLong=6728904389291810955), payload=DataSessionMessage(payload=class net.corda.core.serialization.SerializedBytes)), deduplicationHandler=net.corda.testing.node.internal.MockNodeMessagingService$InMemoryDeduplicationHandler@5ade2399, sender=O=Mock Company 3, L=London, C=GB)
  Actions: 
    ScheduleEvent(event=DoRemainingWork)
  Continuation: ProcessEvents
  Diff between previous and next state:
pendingDeduplicationHandlers: 
    []
    [net.corda.testing.node.internal.MockNodeMessagingService$InMemoryDeduplicationHandler@5ade2399]
checkpoint.checkpointState.sessions.SessionId(toLong=6728904389291810955).receivedMessages.isEmpty: 
    true
    false
checkpoint.timestamp: 
    2023-01-31T07:00:14.656Z
    2023-01-31T07:00:14.670Z


 --- Transition of flow [6a84b95f-9585-4464-b302-dff1b1c96b12] ---
  Timestamp: 2023-01-31T07:00:14.670Z
  Event: DoRemainingWork
  Actions: 
    CreateTransaction
  Continuation: Resume(result=class java.util.LinkedHashMap)
  Diff between previous and next state:
checkpoint.checkpointState.sessions.SessionId(toLong=6728904389291810955).receivedMessages.isEmpty: 
    false
    true
isFlowResumed: 
    false
    true


 --- Transition of flow [6a84b95f-9585-4464-b302-dff1b1c96b12] ---
  Timestamp: 2023-01-31T07:00:14.672Z
  Event: LeaveSubFlow
  Actions: 
    
  Continuation: ProcessEvents
  Diff between previous and next state:
checkpoint.checkpointState.subFlowStack: 
    [Initiating(flowClass=class net.corda.samples.obligation.flows.IOUSettleFlow, classToInitiateWith=class net.corda.samples.obligation.flows.IOUSettleFlow, flowInfo=FlowInfo(flowVersion=1, appName=<unknown>), subFlowVersion=CorDappFlow(platformVersion=11, corDappName=workflows-1.0, corDappHash=B699A1A7AEE96EE2270B80DAE7A921F446B5529E562BC1497C4BF0F7569223AA), isEnabledTimedFlow=false), Initiating(flowClass=class com.r3.corda.lib.accounts.workflows.flows.RequestKeyForAccount, classToInitiateWith=class com.r3.corda.lib.accounts.workflows.flows.RequestKeyForAccount, flowInfo=FlowInfo(flowVersion=1, appName=accounts-workflows-1.0), subFlowVersion=CorDappFlow(platformVersion=11, corDappName=accounts-workflows-1.0, corDappHash=80555705CE83A631D1BDD61E9C14A7C2215BB67FAB1411547C4D4B3D66F8402E), isEnabledTimedFlow=false), Inlined(flowClass=class com.r3.corda.lib.accounts.workflows.flows.RequestKeyForAccountFlow, subFlowVersion=CorDappFlow(platformVersion=11, corDappName=accounts-workflows-1.0, corDappHash=80555705CE83A631D1BDD61E9C14A7C2215BB67FAB1411547C4D4B3D66F8402E), isEnabledTimedFlow=false), Inlined(flowClass=class com.r3.corda.lib.ci.workflows.RequestKeyFlow, subFlowVersion=CoreFlow(platformVersion=11), isEnabledTimedFlow=false)]
    [Initiating(flowClass=class net.corda.samples.obligation.flows.IOUSettleFlow, classToInitiateWith=class net.corda.samples.obligation.flows.IOUSettleFlow, flowInfo=FlowInfo(flowVersion=1, appName=<unknown>), subFlowVersion=CorDappFlow(platformVersion=11, corDappName=workflows-1.0, corDappHash=B699A1A7AEE96EE2270B80DAE7A921F446B5529E562BC1497C4BF0F7569223AA), isEnabledTimedFlow=false), Initiating(flowClass=class com.r3.corda.lib.accounts.workflows.flows.RequestKeyForAccount, classToInitiateWith=class com.r3.corda.lib.accounts.workflows.flows.RequestKeyForAccount, flowInfo=FlowInfo(flowVersion=1, appName=accounts-workflows-1.0), subFlowVersion=CorDappFlow(platformVersion=11, corDappName=accounts-workflows-1.0, corDappHash=80555705CE83A631D1BDD61E9C14A7C2215BB67FAB1411547C4D4B3D66F8402E), isEnabledTimedFlow=false), Inlined(flowClass=class com.r3.corda.lib.accounts.workflows.flows.RequestKeyForAccountFlow, subFlowVersion=CorDappFlow(platformVersion=11, corDappName=accounts-workflows-1.0, corDappHash=80555705CE83A631D1BDD61E9C14A7C2215BB67FAB1411547C4D4B3D66F8402E), isEnabledTimedFlow=false)]
checkpoint.timestamp: 
    2023-01-31T07:00:14.670Z
    2023-01-31T07:00:14.672Z


 --- Transition of flow [6a84b95f-9585-4464-b302-dff1b1c96b12] ---
  Timestamp: 2023-01-31T07:00:14.672Z
  Event: LeaveSubFlow
  Actions: 
    
  Continuation: ProcessEvents
  Diff between previous and next state:
checkpoint.checkpointState.subFlowStack: 
    [Initiating(flowClass=class net.corda.samples.obligation.flows.IOUSettleFlow, classToInitiateWith=class net.corda.samples.obligation.flows.IOUSettleFlow, flowInfo=FlowInfo(flowVersion=1, appName=<unknown>), subFlowVersion=CorDappFlow(platformVersion=11, corDappName=workflows-1.0, corDappHash=B699A1A7AEE96EE2270B80DAE7A921F446B5529E562BC1497C4BF0F7569223AA), isEnabledTimedFlow=false), Initiating(flowClass=class com.r3.corda.lib.accounts.workflows.flows.RequestKeyForAccount, classToInitiateWith=class com.r3.corda.lib.accounts.workflows.flows.RequestKeyForAccount, flowInfo=FlowInfo(flowVersion=1, appName=accounts-workflows-1.0), subFlowVersion=CorDappFlow(platformVersion=11, corDappName=accounts-workflows-1.0, corDappHash=80555705CE83A631D1BDD61E9C14A7C2215BB67FAB1411547C4D4B3D66F8402E), isEnabledTimedFlow=false), Inlined(flowClass=class com.r3.corda.lib.accounts.workflows.flows.RequestKeyForAccountFlow, subFlowVersion=CorDappFlow(platformVersion=11, corDappName=accounts-workflows-1.0, corDappHash=80555705CE83A631D1BDD61E9C14A7C2215BB67FAB1411547C4D4B3D66F8402E), isEnabledTimedFlow=false)]
    [Initiating(flowClass=class net.corda.samples.obligation.flows.IOUSettleFlow, classToInitiateWith=class net.corda.samples.obligation.flows.IOUSettleFlow, flowInfo=FlowInfo(flowVersion=1, appName=<unknown>), subFlowVersion=CorDappFlow(platformVersion=11, corDappName=workflows-1.0, corDappHash=B699A1A7AEE96EE2270B80DAE7A921F446B5529E562BC1497C4BF0F7569223AA), isEnabledTimedFlow=false), Initiating(flowClass=class com.r3.corda.lib.accounts.workflows.flows.RequestKeyForAccount, classToInitiateWith=class com.r3.corda.lib.accounts.workflows.flows.RequestKeyForAccount, flowInfo=FlowInfo(flowVersion=1, appName=accounts-workflows-1.0), subFlowVersion=CorDappFlow(platformVersion=11, corDappName=accounts-workflows-1.0, corDappHash=80555705CE83A631D1BDD61E9C14A7C2215BB67FAB1411547C4D4B3D66F8402E), isEnabledTimedFlow=false)]


 --- Transition of flow [6a84b95f-9585-4464-b302-dff1b1c96b12] ---
  Timestamp: 2023-01-31T07:00:14.672Z
  Event: LeaveSubFlow
  Actions: 
    
  Continuation: ProcessEvents
  Diff between previous and next state:
checkpoint.checkpointState.subFlowStack: 
    [Initiating(flowClass=class net.corda.samples.obligation.flows.IOUSettleFlow, classToInitiateWith=class net.corda.samples.obligation.flows.IOUSettleFlow, flowInfo=FlowInfo(flowVersion=1, appName=<unknown>), subFlowVersion=CorDappFlow(platformVersion=11, corDappName=workflows-1.0, corDappHash=B699A1A7AEE96EE2270B80DAE7A921F446B5529E562BC1497C4BF0F7569223AA), isEnabledTimedFlow=false), Initiating(flowClass=class com.r3.corda.lib.accounts.workflows.flows.RequestKeyForAccount, classToInitiateWith=class com.r3.corda.lib.accounts.workflows.flows.RequestKeyForAccount, flowInfo=FlowInfo(flowVersion=1, appName=accounts-workflows-1.0), subFlowVersion=CorDappFlow(platformVersion=11, corDappName=accounts-workflows-1.0, corDappHash=80555705CE83A631D1BDD61E9C14A7C2215BB67FAB1411547C4D4B3D66F8402E), isEnabledTimedFlow=false)]
    [Initiating(flowClass=class net.corda.samples.obligation.flows.IOUSettleFlow, classToInitiateWith=class net.corda.samples.obligation.flows.IOUSettleFlow, flowInfo=FlowInfo(flowVersion=1, appName=<unknown>), subFlowVersion=CorDappFlow(platformVersion=11, corDappName=workflows-1.0, corDappHash=B699A1A7AEE96EE2270B80DAE7A921F446B5529E562BC1497C4BF0F7569223AA), isEnabledTimedFlow=false)]


 --- Transition of flow [6a84b95f-9585-4464-b302-dff1b1c96b12] ---
  Timestamp: 2023-01-31T07:00:14.875Z
  Event: InitiateFlow(destination=O=Mock Company 3, L=London, C=GB, wellKnownParty=O=Mock Company 3, L=London, C=GB)
  Actions: 
    AddSessionBinding(flowId=[6a84b95f-9585-4464-b302-dff1b1c96b12], sessionId=SessionId(toLong=-846941239363969924))
  Continuation: Resume(result=class net.corda.node.services.statemachine.FlowSessionImpl)
  Diff between previous and next state:
checkpoint.checkpointState.sessions.SessionId(toLong=-846941239363969924): 
    null
    Uninitiated(destination=O=Mock Company 3, L=London, C=GB, initiatingSubFlow=Initiating(flowClass=class net.corda.samples.obligation.flows.IOUSettleFlow, classToInitiateWith=class net.corda.samples.obligation.flows.IOUSettleFlow, flowInfo=FlowInfo(flowVersion=1, appName=<unknown>), subFlowVersion=CorDappFlow(platformVersion=11, corDappName=workflows-1.0, corDappHash=B699A1A7AEE96EE2270B80DAE7A921F446B5529E562BC1497C4BF0F7569223AA), isEnabledTimedFlow=false), sourceSessionId=SessionId(toLong=-846941239363969924), additionalEntropy=-3458992896374643217)
checkpoint.timestamp: 
    2023-01-31T07:00:14.672Z
    2023-01-31T07:00:14.875Z


 --- Transition of flow [6a84b95f-9585-4464-b302-dff1b1c96b12] ---
  Timestamp: 2023-01-31T07:00:14.875Z
  Event: EnterSubFlow(subFlowClass=class net.corda.core.flows.CollectSignatureFlow, subFlowVersion=CoreFlow(platformVersion=11), isEnabledTimedFlow=false)
  Actions: 
    
  Continuation: ProcessEvents
  Diff between previous and next state:
checkpoint.checkpointState.subFlowStack: 
    [Initiating(flowClass=class net.corda.samples.obligation.flows.IOUSettleFlow, classToInitiateWith=class net.corda.samples.obligation.flows.IOUSettleFlow, flowInfo=FlowInfo(flowVersion=1, appName=<unknown>), subFlowVersion=CorDappFlow(platformVersion=11, corDappName=workflows-1.0, corDappHash=B699A1A7AEE96EE2270B80DAE7A921F446B5529E562BC1497C4BF0F7569223AA), isEnabledTimedFlow=false)]
    [Initiating(flowClass=class net.corda.samples.obligation.flows.IOUSettleFlow, classToInitiateWith=class net.corda.samples.obligation.flows.IOUSettleFlow, flowInfo=FlowInfo(flowVersion=1, appName=<unknown>), subFlowVersion=CorDappFlow(platformVersion=11, corDappName=workflows-1.0, corDappHash=B699A1A7AEE96EE2270B80DAE7A921F446B5529E562BC1497C4BF0F7569223AA), isEnabledTimedFlow=false), Inlined(flowClass=class net.corda.core.flows.CollectSignatureFlow, subFlowVersion=CoreFlow(platformVersion=11), isEnabledTimedFlow=false)]


 --- Transition of flow [6a84b95f-9585-4464-b302-dff1b1c96b12] ---
  Timestamp: 2023-01-31T07:00:14.876Z
  Event: EnterSubFlow(subFlowClass=class net.corda.core.flows.SendTransactionFlow, subFlowVersion=CoreFlow(platformVersion=11), isEnabledTimedFlow=false)
  Actions: 
    
  Continuation: ProcessEvents
  Diff between previous and next state:
checkpoint.checkpointState.subFlowStack: 
    [Initiating(flowClass=class net.corda.samples.obligation.flows.IOUSettleFlow, classToInitiateWith=class net.corda.samples.obligation.flows.IOUSettleFlow, flowInfo=FlowInfo(flowVersion=1, appName=<unknown>), subFlowVersion=CorDappFlow(platformVersion=11, corDappName=workflows-1.0, corDappHash=B699A1A7AEE96EE2270B80DAE7A921F446B5529E562BC1497C4BF0F7569223AA), isEnabledTimedFlow=false), Inlined(flowClass=class net.corda.core.flows.CollectSignatureFlow, subFlowVersion=CoreFlow(platformVersion=11), isEnabledTimedFlow=false)]
    [Initiating(flowClass=class net.corda.samples.obligation.flows.IOUSettleFlow, classToInitiateWith=class net.corda.samples.obligation.flows.IOUSettleFlow, flowInfo=FlowInfo(flowVersion=1, appName=<unknown>), subFlowVersion=CorDappFlow(platformVersion=11, corDappName=workflows-1.0, corDappHash=B699A1A7AEE96EE2270B80DAE7A921F446B5529E562BC1497C4BF0F7569223AA), isEnabledTimedFlow=false), Inlined(flowClass=class net.corda.core.flows.CollectSignatureFlow, subFlowVersion=CoreFlow(platformVersion=11), isEnabledTimedFlow=false), Inlined(flowClass=class net.corda.core.flows.SendTransactionFlow, subFlowVersion=CoreFlow(platformVersion=11), isEnabledTimedFlow=false)]
checkpoint.timestamp: 
    2023-01-31T07:00:14.875Z
    2023-01-31T07:00:14.876Z


 --- Transition of flow [6a84b95f-9585-4464-b302-dff1b1c96b12] ---
  Timestamp: 2023-01-31T07:00:14.881Z
  Event: Suspend(ioRequest=SendAndReceive({FlowSessionImpl(destination=O=Mock Company 3, L=London, C=GB, sourceSessionId=SessionId(toLong=-846941239363969924))=FlowSessionImpl(destination=O=Mock Company 3, L=London, C=GB, sourceSessionId=SessionId(toLong=-846941239363969924))=3B2D0FAB19318E56EFD044EB7BA83465D7CBD503E6770785AC8CB296E9C6CFFE}, shouldRetrySend=false), maySkipCheckpoint=false, fiber=8BBF002E883FE0A8121D90F4F14F9E1E7A39871E719748BA95A66828D01C0D42, currentStep=Starting)
  Actions: 
    PersistCheckpoint(id=[6a84b95f-9585-4464-b302-dff1b1c96b12], checkpoint=Checkpoint(checkpointState=CheckpointState(invocationContext=InvocationContext(origin=RPC(actor=Actor(id=Id(value=Only For Testing), serviceId=AuthServiceId(value=TEST), owningLegalIdentity=O=Mock Company 1, L=London, C=GB)), trace=Trace(invocationId=13121be1-7942-4193-a973-e9f16a3aad92, timestamp: 2023-01-31T07:00:14.594Z, entityType: Invocation, sessionId=13121be1-7942-4193-a973-e9f16a3aad92, timestamp: 2023-01-31T07:00:14.594Z, entityType: Session), actor=Actor(id=Id(value=Only For Testing), serviceId=AuthServiceId(value=TEST), owningLegalIdentity=O=Mock Company 1, L=London, C=GB), externalTrace=null, impersonatedActor=null, arguments=[], clientId=null), ourIdentity=O=Mock Company 1, L=London, C=GB, sessions={SessionId(toLong=6728904389291810955)=Initiated(peerParty=O=Mock Company 3, L=London, C=GB, peerFlowInfo=FlowInfo(flowVersion=1, appName=accounts-workflows-1.0), receivedMessages=[], otherSideErrored=false, peerSinkSessionId=SessionId(toLong=-4097024049185308153), deduplicationSeed=R-6728904389291810955--381495336044722511), SessionId(toLong=-846941239363969924)=Uninitiated(destination=O=Mock Company 3, L=London, C=GB, initiatingSubFlow=Initiating(flowClass=class net.corda.samples.obligation.flows.IOUSettleFlow, classToInitiateWith=class net.corda.samples.obligation.flows.IOUSettleFlow, flowInfo=FlowInfo(flowVersion=1, appName=<unknown>), subFlowVersion=CorDappFlow(platformVersion=11, corDappName=workflows-1.0, corDappHash=B699A1A7AEE96EE2270B80DAE7A921F446B5529E562BC1497C4BF0F7569223AA), isEnabledTimedFlow=false), sourceSessionId=SessionId(toLong=-846941239363969924), additionalEntropy=-3458992896374643217)}, sessionsToBeClosed=[], subFlowStack=[Initiating(flowClass=class net.corda.samples.obligation.flows.IOUSettleFlow, classToInitiateWith=class net.corda.samples.obligation.flows.IOUSettleFlow, flowInfo=FlowInfo(flowVersion=1, appName=<unknown>), subFlowVersion=CorDappFlow(platformVersion=11, corDappName=workflows-1.0, corDappHash=B699A1A7AEE96EE2270B80DAE7A921F446B5529E562BC1497C4BF0F7569223AA), isEnabledTimedFlow=false), Inlined(flowClass=class net.corda.core.flows.CollectSignatureFlow, subFlowVersion=CoreFlow(platformVersion=11), isEnabledTimedFlow=false), Inlined(flowClass=class net.corda.core.flows.SendTransactionFlow, subFlowVersion=CoreFlow(platformVersion=11), isEnabledTimedFlow=false)], numberOfSuspends=3, numberOfCommits=4), flowState=Started(flowIORequest=SendAndReceive({FlowSessionImpl(destination=O=Mock Company 3, L=London, C=GB, sourceSessionId=SessionId(toLong=-846941239363969924))=FlowSessionImpl(destination=O=Mock Company 3, L=London, C=GB, sourceSessionId=SessionId(toLong=-846941239363969924))=3B2D0FAB19318E56EFD044EB7BA83465D7CBD503E6770785AC8CB296E9C6CFFE}, shouldRetrySend=false), frozenFiber=8BBF002E883FE0A8121D90F4F14F9E1E7A39871E719748BA95A66828D01C0D42), errorState=Clean, result=null, status=RUNNABLE, progressStep=Starting, flowIoRequest=SendAndReceive, compatible=true), isCheckpointUpdate=true)
    PersistDeduplicationFacts(deduplicationHandlers=[net.corda.testing.node.internal.MockNodeMessagingService$InMemoryDeduplicationHandler@5ade2399])
    CommitTransaction
    AcknowledgeMessages(deduplicationHandlers=[net.corda.testing.node.internal.MockNodeMessagingService$InMemoryDeduplicationHandler@5ade2399])
    ScheduleEvent(event=DoRemainingWork)
  Continuation: ProcessEvents
  Diff between previous and next state:
pendingDeduplicationHandlers: 
    [net.corda.testing.node.internal.MockNodeMessagingService$InMemoryDeduplicationHandler@5ade2399]
    []
numberOfCommits: 
    3
    4
checkpoint.flowState.flowIORequest: 
    Receive(sessions=[FlowSessionImpl(destination=O=Mock Company 3, L=London, C=GB, sourceSessionId=SessionId(toLong=6728904389291810955))])
    SendAndReceive({FlowSessionImpl(destination=O=Mock Company 3, L=London, C=GB, sourceSessionId=SessionId(toLong=-846941239363969924))=FlowSessionImpl(destination=O=Mock Company 3, L=London, C=GB, sourceSessionId=SessionId(toLong=-846941239363969924))=3B2D0FAB19318E56EFD044EB7BA83465D7CBD503E6770785AC8CB296E9C6CFFE}, shouldRetrySend=false)
checkpoint.flowState.frozenFiber.hash: 
    888DFA59C02B3826AAE16CC3BA496C2E5E79164411129EB29989060DC9CC955D
    8BBF002E883FE0A8121D90F4F14F9E1E7A39871E719748BA95A66828D01C0D42
checkpoint.checkpointState.numberOfCommits: 
    3
    4
checkpoint.checkpointState.numberOfSuspends: 
    2
    3
checkpoint.timestamp: 
    2023-01-31T07:00:14.876Z
    2023-01-31T07:00:14.878Z
isFlowResumed: 
    true
    false


 --- Transition of flow [6a84b95f-9585-4464-b302-dff1b1c96b12] ---
  Timestamp: 2023-01-31T07:00:14.881Z
  Event: DoRemainingWork
  Actions: 
    SendMultiple(sendInitial=[SendInitial(destination=O=Mock Company 3, L=London, C=GB, initialise=InitialSessionMessage(initiatorSessionId=SessionId(toLong=-846941239363969924), initiationEntropy=-3458992896374643217, initiatorFlowClassName=net.corda.samples.obligation.flows.IOUSettleFlow, appName=<unknown>, firstPayload=class net.corda.core.serialization.SerializedBytes), deduplicationId=SenderDeduplicationId(deduplicationId=DeduplicationId(toString=N-R--846941239363969924--3458992896374643217-3-0), senderUUID=fed2a79a-ec55-4f8e-b069-bc5cdd6da91d))], sendExisting=[])
  Continuation: ProcessEvents
  Diff between previous and next state:
checkpoint.flowState.flowIORequest: 
    SendAndReceive({FlowSessionImpl(destination=O=Mock Company 3, L=London, C=GB, sourceSessionId=SessionId(toLong=-846941239363969924))=FlowSessionImpl(destination=O=Mock Company 3, L=London, C=GB, sourceSessionId=SessionId(toLong=-846941239363969924))=3B2D0FAB19318E56EFD044EB7BA83465D7CBD503E6770785AC8CB296E9C6CFFE}, shouldRetrySend=false)
    Receive(sessions=[FlowSessionImpl(destination=O=Mock Company 3, L=London, C=GB, sourceSessionId=SessionId(toLong=-846941239363969924))])
checkpoint.checkpointState.sessions.SessionId(toLong=-846941239363969924): 
    Uninitiated(destination=O=Mock Company 3, L=London, C=GB, initiatingSubFlow=Initiating(flowClass=class net.corda.samples.obligation.flows.IOUSettleFlow, classToInitiateWith=class net.corda.samples.obligation.flows.IOUSettleFlow, flowInfo=FlowInfo(flowVersion=1, appName=<unknown>), subFlowVersion=CorDappFlow(platformVersion=11, corDappName=workflows-1.0, corDappHash=B699A1A7AEE96EE2270B80DAE7A921F446B5529E562BC1497C4BF0F7569223AA), isEnabledTimedFlow=false), sourceSessionId=SessionId(toLong=-846941239363969924), additionalEntropy=-3458992896374643217)
    Initiating(bufferedMessages=[], rejectionError=null, deduplicationSeed=R--846941239363969924--3458992896374643217)
checkpoint.timestamp: 
    2023-01-31T07:00:14.878Z
    2023-01-31T07:00:14.881Z


 --- Transition of flow [6a84b95f-9585-4464-b302-dff1b1c96b12] ---
  Timestamp: 2023-01-31T07:00:14.912Z
  Event: DeliverSessionMessage(sessionMessage=ExistingSessionMessage(recipientSessionId=SessionId(toLong=6728904389291810955), payload=net.corda.node.services.statemachine.EndSessionMessage@6613b19c), deduplicationHandler=net.corda.testing.node.internal.MockNodeMessagingService$InMemoryDeduplicationHandler@4438c258, sender=O=Mock Company 3, L=London, C=GB)
  Actions: 
    ScheduleEvent(event=DoRemainingWork)
  Continuation: ProcessEvents
  Diff between previous and next state:
pendingDeduplicationHandlers: 
    []
    [net.corda.testing.node.internal.MockNodeMessagingService$InMemoryDeduplicationHandler@4438c258]
checkpoint.checkpointState.sessions.SessionId(toLong=6728904389291810955).receivedMessages.isEmpty: 
    true
    false
checkpoint.checkpointState.sessionsToBeClosed: 
    []
    [SessionId(toLong=6728904389291810955)]
checkpoint.timestamp: 
    2023-01-31T07:00:14.881Z
    2023-01-31T07:00:14.912Z


 --- Transition of flow [6a84b95f-9585-4464-b302-dff1b1c96b12] ---
  Timestamp: 2023-01-31T07:00:14.912Z
  Event: DoRemainingWork
  Actions: 
    RemoveSessionBindings(sessionIds=[SessionId(toLong=6728904389291810955)])
  Continuation: ProcessEvents
  Diff between previous and next state:
checkpoint.checkpointState.sessions.SessionId(toLong=6728904389291810955): 
    Initiated(peerParty=O=Mock Company 3, L=London, C=GB, peerFlowInfo=FlowInfo(flowVersion=1, appName=accounts-workflows-1.0), receivedMessages=[net.corda.node.services.statemachine.EndSessionMessage@6613b19c], otherSideErrored=false, peerSinkSessionId=SessionId(toLong=-4097024049185308153), deduplicationSeed=R-6728904389291810955--381495336044722511)
    null
checkpoint.checkpointState.sessionsToBeClosed: 
    [SessionId(toLong=6728904389291810955)]
    []


 --- Transition of flow [6a84b95f-9585-4464-b302-dff1b1c96b12] ---
  Timestamp: 2023-01-31T07:00:14.914Z
  Event: DeliverSessionMessage(sessionMessage=ExistingSessionMessage(recipientSessionId=SessionId(toLong=-846941239363969924), payload=ConfirmSessionMessage(initiatedSessionId=SessionId(toLong=-6111232092193349787), initiatedFlowInfo=FlowInfo(flowVersion=1, appName=<unknown>))), deduplicationHandler=net.corda.testing.node.internal.MockNodeMessagingService$InMemoryDeduplicationHandler@4e6f2dea, sender=O=Mock Company 3, L=London, C=GB)
  Actions: 
    ScheduleEvent(event=DoRemainingWork)
  Continuation: ProcessEvents
  Diff between previous and next state:
pendingDeduplicationHandlers: 
    [net.corda.testing.node.internal.MockNodeMessagingService$InMemoryDeduplicationHandler@4438c258]
    [net.corda.testing.node.internal.MockNodeMessagingService$InMemoryDeduplicationHandler@4438c258, net.corda.testing.node.internal.MockNodeMessagingService$InMemoryDeduplicationHandler@4e6f2dea]
checkpoint.checkpointState.sessions.SessionId(toLong=-846941239363969924): 
    Initiating(bufferedMessages=[], rejectionError=null, deduplicationSeed=R--846941239363969924--3458992896374643217)
    Initiated(peerParty=O=Mock Company 3, L=London, C=GB, peerFlowInfo=FlowInfo(flowVersion=1, appName=<unknown>), receivedMessages=[], otherSideErrored=false, peerSinkSessionId=SessionId(toLong=-6111232092193349787), deduplicationSeed=R--846941239363969924--3458992896374643217)
checkpoint.timestamp: 
    2023-01-31T07:00:14.912Z
    2023-01-31T07:00:14.914Z


 --- Transition of flow [6a84b95f-9585-4464-b302-dff1b1c96b12] ---
  Timestamp: 2023-01-31T07:00:14.914Z
  Event: DoRemainingWork
  Actions: 
    
  Continuation: ProcessEvents
  Diff between previous and next state:
null

 --- Transition of flow [6a84b95f-9585-4464-b302-dff1b1c96b12] ---
  Timestamp: 2023-01-31T07:00:14.915Z
  Event: DeliverSessionMessage(sessionMessage=ExistingSessionMessage(recipientSessionId=SessionId(toLong=-846941239363969924), payload=DataSessionMessage(payload=class net.corda.core.serialization.SerializedBytes)), deduplicationHandler=net.corda.testing.node.internal.MockNodeMessagingService$InMemoryDeduplicationHandler@2f2798a4, sender=O=Mock Company 3, L=London, C=GB)
  Actions: 
    ScheduleEvent(event=DoRemainingWork)
  Continuation: ProcessEvents
  Diff between previous and next state:
pendingDeduplicationHandlers: 
    [net.corda.testing.node.internal.MockNodeMessagingService$InMemoryDeduplicationHandler@4438c258, net.corda.testing.node.internal.MockNodeMessagingService$InMemoryDeduplicationHandler@4e6f2dea]
    [net.corda.testing.node.internal.MockNodeMessagingService$InMemoryDeduplicationHandler@4438c258, net.corda.testing.node.internal.MockNodeMessagingService$InMemoryDeduplicationHandler@4e6f2dea, net.corda.testing.node.internal.MockNodeMessagingService$InMemoryDeduplicationHandler@2f2798a4]
checkpoint.checkpointState.sessions.SessionId(toLong=-846941239363969924).receivedMessages.isEmpty: 
    true
    false
checkpoint.timestamp: 
    2023-01-31T07:00:14.914Z
    2023-01-31T07:00:14.915Z


 --- Transition of flow [6a84b95f-9585-4464-b302-dff1b1c96b12] ---
  Timestamp: 2023-01-31T07:00:14.916Z
  Event: DoRemainingWork
  Actions: 
    CreateTransaction
  Continuation: Resume(result=class java.util.LinkedHashMap)
  Diff between previous and next state:
checkpoint.checkpointState.sessions.SessionId(toLong=-846941239363969924).receivedMessages.isEmpty: 
    false
    true
checkpoint.timestamp: 
    2023-01-31T07:00:14.915Z
    2023-01-31T07:00:14.916Z
isFlowResumed: 
    false
    true


 --- Transition of flow [6a84b95f-9585-4464-b302-dff1b1c96b12] ---
  Timestamp: 2023-01-31T07:00:14.922Z
  Event: Suspend(ioRequest=SendAndReceive({FlowSessionImpl(destination=O=Mock Company 3, L=London, C=GB, sourceSessionId=SessionId(toLong=-846941239363969924))=FlowSessionImpl(destination=O=Mock Company 3, L=London, C=GB, sourceSessionId=SessionId(toLong=-846941239363969924))=4B1B7813D1476BEE8874ECD03EA9C7807871EF639382BBA4AA097BCCA3EDA360}, shouldRetrySend=false), maySkipCheckpoint=false, fiber=921C4D933942AA00C433841E0650463FCA42A7A48A2E0C1D738E20F7CB379F07, currentStep=Starting)
  Actions: 
    PersistCheckpoint(id=[6a84b95f-9585-4464-b302-dff1b1c96b12], checkpoint=Checkpoint(checkpointState=CheckpointState(invocationContext=InvocationContext(origin=RPC(actor=Actor(id=Id(value=Only For Testing), serviceId=AuthServiceId(value=TEST), owningLegalIdentity=O=Mock Company 1, L=London, C=GB)), trace=Trace(invocationId=13121be1-7942-4193-a973-e9f16a3aad92, timestamp: 2023-01-31T07:00:14.594Z, entityType: Invocation, sessionId=13121be1-7942-4193-a973-e9f16a3aad92, timestamp: 2023-01-31T07:00:14.594Z, entityType: Session), actor=Actor(id=Id(value=Only For Testing), serviceId=AuthServiceId(value=TEST), owningLegalIdentity=O=Mock Company 1, L=London, C=GB), externalTrace=null, impersonatedActor=null, arguments=[], clientId=null), ourIdentity=O=Mock Company 1, L=London, C=GB, sessions={SessionId(toLong=-846941239363969924)=Initiated(peerParty=O=Mock Company 3, L=London, C=GB, peerFlowInfo=FlowInfo(flowVersion=1, appName=<unknown>), receivedMessages=[], otherSideErrored=false, peerSinkSessionId=SessionId(toLong=-6111232092193349787), deduplicationSeed=R--846941239363969924--3458992896374643217)}, sessionsToBeClosed=[], subFlowStack=[Initiating(flowClass=class net.corda.samples.obligation.flows.IOUSettleFlow, classToInitiateWith=class net.corda.samples.obligation.flows.IOUSettleFlow, flowInfo=FlowInfo(flowVersion=1, appName=<unknown>), subFlowVersion=CorDappFlow(platformVersion=11, corDappName=workflows-1.0, corDappHash=B699A1A7AEE96EE2270B80DAE7A921F446B5529E562BC1497C4BF0F7569223AA), isEnabledTimedFlow=false), Inlined(flowClass=class net.corda.core.flows.CollectSignatureFlow, subFlowVersion=CoreFlow(platformVersion=11), isEnabledTimedFlow=false), Inlined(flowClass=class net.corda.core.flows.SendTransactionFlow, subFlowVersion=CoreFlow(platformVersion=11), isEnabledTimedFlow=false)], numberOfSuspends=4, numberOfCommits=5), flowState=Started(flowIORequest=SendAndReceive({FlowSessionImpl(destination=O=Mock Company 3, L=London, C=GB, sourceSessionId=SessionId(toLong=-846941239363969924))=FlowSessionImpl(destination=O=Mock Company 3, L=London, C=GB, sourceSessionId=SessionId(toLong=-846941239363969924))=4B1B7813D1476BEE8874ECD03EA9C7807871EF639382BBA4AA097BCCA3EDA360}, shouldRetrySend=false), frozenFiber=921C4D933942AA00C433841E0650463FCA42A7A48A2E0C1D738E20F7CB379F07), errorState=Clean, result=null, status=RUNNABLE, progressStep=Starting, flowIoRequest=SendAndReceive, compatible=true), isCheckpointUpdate=true)
    PersistDeduplicationFacts(deduplicationHandlers=[net.corda.testing.node.internal.MockNodeMessagingService$InMemoryDeduplicationHandler@4438c258, net.corda.testing.node.internal.MockNodeMessagingService$InMemoryDeduplicationHandler@4e6f2dea, net.corda.testing.node.internal.MockNodeMessagingService$InMemoryDeduplicationHandler@2f2798a4])
    CommitTransaction
    AcknowledgeMessages(deduplicationHandlers=[net.corda.testing.node.internal.MockNodeMessagingService$InMemoryDeduplicationHandler@4438c258, net.corda.testing.node.internal.MockNodeMessagingService$InMemoryDeduplicationHandler@4e6f2dea, net.corda.testing.node.internal.MockNodeMessagingService$InMemoryDeduplicationHandler@2f2798a4])
    ScheduleEvent(event=DoRemainingWork)
  Continuation: ProcessEvents
  Diff between previous and next state:
pendingDeduplicationHandlers: 
    [net.corda.testing.node.internal.MockNodeMessagingService$InMemoryDeduplicationHandler@4438c258, net.corda.testing.node.internal.MockNodeMessagingService$InMemoryDeduplicationHandler@4e6f2dea, net.corda.testing.node.internal.MockNodeMessagingService$InMemoryDeduplicationHandler@2f2798a4]
    []
numberOfCommits: 
    4
    5
checkpoint.flowState.flowIORequest: 
    Receive(sessions=[FlowSessionImpl(destination=O=Mock Company 3, L=London, C=GB, sourceSessionId=SessionId(toLong=-846941239363969924))])
    SendAndReceive({FlowSessionImpl(destination=O=Mock Company 3, L=London, C=GB, sourceSessionId=SessionId(toLong=-846941239363969924))=FlowSessionImpl(destination=O=Mock Company 3, L=London, C=GB, sourceSessionId=SessionId(toLong=-846941239363969924))=4B1B7813D1476BEE8874ECD03EA9C7807871EF639382BBA4AA097BCCA3EDA360}, shouldRetrySend=false)
checkpoint.flowState.frozenFiber.hash: 
    8BBF002E883FE0A8121D90F4F14F9E1E7A39871E719748BA95A66828D01C0D42
    921C4D933942AA00C433841E0650463FCA42A7A48A2E0C1D738E20F7CB379F07
checkpoint.checkpointState.numberOfCommits: 
    4
    5
checkpoint.checkpointState.numberOfSuspends: 
    3
    4
checkpoint.timestamp: 
    2023-01-31T07:00:14.916Z
    2023-01-31T07:00:14.920Z
isFlowResumed: 
    true
    false


 --- Transition of flow [6a84b95f-9585-4464-b302-dff1b1c96b12] ---
  Timestamp: 2023-01-31T07:00:14.923Z
  Event: DoRemainingWork
  Actions: 
    SendMultiple(sendInitial=[], sendExisting=[SendExisting(peerParty=O=Mock Company 3, L=London, C=GB, message=ExistingSessionMessage(recipientSessionId=SessionId(toLong=-6111232092193349787), payload=DataSessionMessage(payload=class net.corda.core.serialization.SerializedBytes)), deduplicationId=SenderDeduplicationId(deduplicationId=DeduplicationId(toString=N-R--846941239363969924--3458992896374643217-4-0), senderUUID=fed2a79a-ec55-4f8e-b069-bc5cdd6da91d))])
  Continuation: ProcessEvents
  Diff between previous and next state:
checkpoint.flowState.flowIORequest: 
    SendAndReceive({FlowSessionImpl(destination=O=Mock Company 3, L=London, C=GB, sourceSessionId=SessionId(toLong=-846941239363969924))=FlowSessionImpl(destination=O=Mock Company 3, L=London, C=GB, sourceSessionId=SessionId(toLong=-846941239363969924))=4B1B7813D1476BEE8874ECD03EA9C7807871EF639382BBA4AA097BCCA3EDA360}, shouldRetrySend=false)
    Receive(sessions=[FlowSessionImpl(destination=O=Mock Company 3, L=London, C=GB, sourceSessionId=SessionId(toLong=-846941239363969924))])
checkpoint.timestamp: 
    2023-01-31T07:00:14.920Z
    2023-01-31T07:00:14.922Z


 --- Transition of flow [6a84b95f-9585-4464-b302-dff1b1c96b12] ---
  Timestamp: 2023-01-31T07:00:15.300Z
  Event: DeliverSessionMessage(sessionMessage=ExistingSessionMessage(recipientSessionId=SessionId(toLong=-846941239363969924), payload=DataSessionMessage(payload=class net.corda.core.serialization.SerializedBytes)), deduplicationHandler=net.corda.testing.node.internal.MockNodeMessagingService$InMemoryDeduplicationHandler@7e43d359, sender=O=Mock Company 3, L=London, C=GB)
  Actions: 
    ScheduleEvent(event=DoRemainingWork)
  Continuation: ProcessEvents
  Diff between previous and next state:
pendingDeduplicationHandlers: 
    []
    [net.corda.testing.node.internal.MockNodeMessagingService$InMemoryDeduplicationHandler@7e43d359]
checkpoint.checkpointState.sessions.SessionId(toLong=-846941239363969924).receivedMessages.isEmpty: 
    true
    false
checkpoint.timestamp: 
    2023-01-31T07:00:14.922Z
    2023-01-31T07:00:15.300Z


 --- Transition of flow [6a84b95f-9585-4464-b302-dff1b1c96b12] ---
  Timestamp: 2023-01-31T07:00:15.300Z
  Event: DoRemainingWork
  Actions: 
    CreateTransaction
  Continuation: Resume(result=class java.util.LinkedHashMap)
  Diff between previous and next state:
checkpoint.checkpointState.sessions.SessionId(toLong=-846941239363969924).receivedMessages.isEmpty: 
    false
    true
isFlowResumed: 
    false
    true


 --- Transition of flow [6a84b95f-9585-4464-b302-dff1b1c96b12] ---
  Timestamp: 2023-01-31T07:00:15.300Z
  Event: LeaveSubFlow
  Actions: 
    
  Continuation: ProcessEvents
  Diff between previous and next state:
checkpoint.checkpointState.subFlowStack: 
    [Initiating(flowClass=class net.corda.samples.obligation.flows.IOUSettleFlow, classToInitiateWith=class net.corda.samples.obligation.flows.IOUSettleFlow, flowInfo=FlowInfo(flowVersion=1, appName=<unknown>), subFlowVersion=CorDappFlow(platformVersion=11, corDappName=workflows-1.0, corDappHash=B699A1A7AEE96EE2270B80DAE7A921F446B5529E562BC1497C4BF0F7569223AA), isEnabledTimedFlow=false), Inlined(flowClass=class net.corda.core.flows.CollectSignatureFlow, subFlowVersion=CoreFlow(platformVersion=11), isEnabledTimedFlow=false), Inlined(flowClass=class net.corda.core.flows.SendTransactionFlow, subFlowVersion=CoreFlow(platformVersion=11), isEnabledTimedFlow=false)]
    [Initiating(flowClass=class net.corda.samples.obligation.flows.IOUSettleFlow, classToInitiateWith=class net.corda.samples.obligation.flows.IOUSettleFlow, flowInfo=FlowInfo(flowVersion=1, appName=<unknown>), subFlowVersion=CorDappFlow(platformVersion=11, corDappName=workflows-1.0, corDappHash=B699A1A7AEE96EE2270B80DAE7A921F446B5529E562BC1497C4BF0F7569223AA), isEnabledTimedFlow=false), Inlined(flowClass=class net.corda.core.flows.CollectSignatureFlow, subFlowVersion=CoreFlow(platformVersion=11), isEnabledTimedFlow=false)]


 --- Transition of flow [6a84b95f-9585-4464-b302-dff1b1c96b12] ---
  Timestamp: 2023-01-31T07:00:15.304Z
  Event: Suspend(ioRequest=Send(sessionToMessage={FlowSessionImpl(destination=O=Mock Company 3, L=London, C=GB, sourceSessionId=SessionId(toLong=-846941239363969924))=06B26266643E6DF20F1617B076D5D837601BFCBA2241B7D07F37E91C9253DD79}), maySkipCheckpoint=false, fiber=58E20F2E5FE771AEE330B55B7420F149E4059FDE4170F6DC8CAD4E16331B97C1, currentStep=Starting)
  Actions: 
    PersistCheckpoint(id=[6a84b95f-9585-4464-b302-dff1b1c96b12], checkpoint=Checkpoint(checkpointState=CheckpointState(invocationContext=InvocationContext(origin=RPC(actor=Actor(id=Id(value=Only For Testing), serviceId=AuthServiceId(value=TEST), owningLegalIdentity=O=Mock Company 1, L=London, C=GB)), trace=Trace(invocationId=13121be1-7942-4193-a973-e9f16a3aad92, timestamp: 2023-01-31T07:00:14.594Z, entityType: Invocation, sessionId=13121be1-7942-4193-a973-e9f16a3aad92, timestamp: 2023-01-31T07:00:14.594Z, entityType: Session), actor=Actor(id=Id(value=Only For Testing), serviceId=AuthServiceId(value=TEST), owningLegalIdentity=O=Mock Company 1, L=London, C=GB), externalTrace=null, impersonatedActor=null, arguments=[], clientId=null), ourIdentity=O=Mock Company 1, L=London, C=GB, sessions={SessionId(toLong=-846941239363969924)=Initiated(peerParty=O=Mock Company 3, L=London, C=GB, peerFlowInfo=FlowInfo(flowVersion=1, appName=<unknown>), receivedMessages=[], otherSideErrored=false, peerSinkSessionId=SessionId(toLong=-6111232092193349787), deduplicationSeed=R--846941239363969924--3458992896374643217)}, sessionsToBeClosed=[], subFlowStack=[Initiating(flowClass=class net.corda.samples.obligation.flows.IOUSettleFlow, classToInitiateWith=class net.corda.samples.obligation.flows.IOUSettleFlow, flowInfo=FlowInfo(flowVersion=1, appName=<unknown>), subFlowVersion=CorDappFlow(platformVersion=11, corDappName=workflows-1.0, corDappHash=B699A1A7AEE96EE2270B80DAE7A921F446B5529E562BC1497C4BF0F7569223AA), isEnabledTimedFlow=false), Inlined(flowClass=class net.corda.core.flows.CollectSignatureFlow, subFlowVersion=CoreFlow(platformVersion=11), isEnabledTimedFlow=false)], numberOfSuspends=5, numberOfCommits=6), flowState=Started(flowIORequest=Send(sessionToMessage={FlowSessionImpl(destination=O=Mock Company 3, L=London, C=GB, sourceSessionId=SessionId(toLong=-846941239363969924))=06B26266643E6DF20F1617B076D5D837601BFCBA2241B7D07F37E91C9253DD79}), frozenFiber=58E20F2E5FE771AEE330B55B7420F149E4059FDE4170F6DC8CAD4E16331B97C1), errorState=Clean, result=null, status=RUNNABLE, progressStep=Starting, flowIoRequest=Send, compatible=true), isCheckpointUpdate=true)
    PersistDeduplicationFacts(deduplicationHandlers=[net.corda.testing.node.internal.MockNodeMessagingService$InMemoryDeduplicationHandler@7e43d359])
    CommitTransaction
    AcknowledgeMessages(deduplicationHandlers=[net.corda.testing.node.internal.MockNodeMessagingService$InMemoryDeduplicationHandler@7e43d359])
    ScheduleEvent(event=DoRemainingWork)
  Continuation: ProcessEvents
  Diff between previous and next state:
pendingDeduplicationHandlers: 
    [net.corda.testing.node.internal.MockNodeMessagingService$InMemoryDeduplicationHandler@7e43d359]
    []
numberOfCommits: 
    5
    6
checkpoint.flowIoRequest: 
    SendAndReceive
    Send
checkpoint.flowState.flowIORequest: 
    Receive(sessions=[FlowSessionImpl(destination=O=Mock Company 3, L=London, C=GB, sourceSessionId=SessionId(toLong=-846941239363969924))])
    Send(sessionToMessage={FlowSessionImpl(destination=O=Mock Company 3, L=London, C=GB, sourceSessionId=SessionId(toLong=-846941239363969924))=06B26266643E6DF20F1617B076D5D837601BFCBA2241B7D07F37E91C9253DD79})
checkpoint.flowState.frozenFiber.hash: 
    921C4D933942AA00C433841E0650463FCA42A7A48A2E0C1D738E20F7CB379F07
    58E20F2E5FE771AEE330B55B7420F149E4059FDE4170F6DC8CAD4E16331B97C1
checkpoint.checkpointState.numberOfCommits: 
    5
    6
checkpoint.checkpointState.numberOfSuspends: 
    4
    5
checkpoint.timestamp: 
    2023-01-31T07:00:15.300Z
    2023-01-31T07:00:15.302Z
isFlowResumed: 
    true
    false


 --- Transition of flow [6a84b95f-9585-4464-b302-dff1b1c96b12] ---
  Timestamp: 2023-01-31T07:00:15.304Z
  Event: DoRemainingWork
  Actions: 
    SendMultiple(sendInitial=[], sendExisting=[SendExisting(peerParty=O=Mock Company 3, L=London, C=GB, message=ExistingSessionMessage(recipientSessionId=SessionId(toLong=-6111232092193349787), payload=DataSessionMessage(payload=class net.corda.core.serialization.SerializedBytes)), deduplicationId=SenderDeduplicationId(deduplicationId=DeduplicationId(toString=N-R--846941239363969924--3458992896374643217-5-0), senderUUID=fed2a79a-ec55-4f8e-b069-bc5cdd6da91d))])
    CreateTransaction
  Continuation: Resume(result=class kotlin.Unit)
  Diff between previous and next state:
isFlowResumed: 
    false
    true


 --- Transition of flow [6a84b95f-9585-4464-b302-dff1b1c96b12] ---
  Timestamp: 2023-01-31T07:00:15.307Z
  Event: Suspend(ioRequest=Receive(sessions=[FlowSessionImpl(destination=O=Mock Company 3, L=London, C=GB, sourceSessionId=SessionId(toLong=-846941239363969924))]), maySkipCheckpoint=false, fiber=228F2A710A65624C4985AA6775CDD54794B3C458D04E580DFBDE472C913B30B6, currentStep=Starting)
  Actions: 
    PersistCheckpoint(id=[6a84b95f-9585-4464-b302-dff1b1c96b12], checkpoint=Checkpoint(checkpointState=CheckpointState(invocationContext=InvocationContext(origin=RPC(actor=Actor(id=Id(value=Only For Testing), serviceId=AuthServiceId(value=TEST), owningLegalIdentity=O=Mock Company 1, L=London, C=GB)), trace=Trace(invocationId=13121be1-7942-4193-a973-e9f16a3aad92, timestamp: 2023-01-31T07:00:14.594Z, entityType: Invocation, sessionId=13121be1-7942-4193-a973-e9f16a3aad92, timestamp: 2023-01-31T07:00:14.594Z, entityType: Session), actor=Actor(id=Id(value=Only For Testing), serviceId=AuthServiceId(value=TEST), owningLegalIdentity=O=Mock Company 1, L=London, C=GB), externalTrace=null, impersonatedActor=null, arguments=[], clientId=null), ourIdentity=O=Mock Company 1, L=London, C=GB, sessions={SessionId(toLong=-846941239363969924)=Initiated(peerParty=O=Mock Company 3, L=London, C=GB, peerFlowInfo=FlowInfo(flowVersion=1, appName=<unknown>), receivedMessages=[], otherSideErrored=false, peerSinkSessionId=SessionId(toLong=-6111232092193349787), deduplicationSeed=R--846941239363969924--3458992896374643217)}, sessionsToBeClosed=[], subFlowStack=[Initiating(flowClass=class net.corda.samples.obligation.flows.IOUSettleFlow, classToInitiateWith=class net.corda.samples.obligation.flows.IOUSettleFlow, flowInfo=FlowInfo(flowVersion=1, appName=<unknown>), subFlowVersion=CorDappFlow(platformVersion=11, corDappName=workflows-1.0, corDappHash=B699A1A7AEE96EE2270B80DAE7A921F446B5529E562BC1497C4BF0F7569223AA), isEnabledTimedFlow=false), Inlined(flowClass=class net.corda.core.flows.CollectSignatureFlow, subFlowVersion=CoreFlow(platformVersion=11), isEnabledTimedFlow=false)], numberOfSuspends=6, numberOfCommits=7), flowState=Started(flowIORequest=Receive(sessions=[FlowSessionImpl(destination=O=Mock Company 3, L=London, C=GB, sourceSessionId=SessionId(toLong=-846941239363969924))]), frozenFiber=228F2A710A65624C4985AA6775CDD54794B3C458D04E580DFBDE472C913B30B6), errorState=Clean, result=null, status=RUNNABLE, progressStep=Starting, flowIoRequest=Receive, compatible=true), isCheckpointUpdate=true)
    PersistDeduplicationFacts(deduplicationHandlers=[])
    CommitTransaction
    AcknowledgeMessages(deduplicationHandlers=[])
    ScheduleEvent(event=DoRemainingWork)
  Continuation: ProcessEvents
  Diff between previous and next state:
numberOfCommits: 
    6
    7
checkpoint.flowIoRequest: 
    Send
    Receive
checkpoint.flowState.flowIORequest: 
    Send(sessionToMessage={FlowSessionImpl(destination=O=Mock Company 3, L=London, C=GB, sourceSessionId=SessionId(toLong=-846941239363969924))=06B26266643E6DF20F1617B076D5D837601BFCBA2241B7D07F37E91C9253DD79})
    Receive(sessions=[FlowSessionImpl(destination=O=Mock Company 3, L=London, C=GB, sourceSessionId=SessionId(toLong=-846941239363969924))])
checkpoint.flowState.frozenFiber.hash: 
    58E20F2E5FE771AEE330B55B7420F149E4059FDE4170F6DC8CAD4E16331B97C1
    228F2A710A65624C4985AA6775CDD54794B3C458D04E580DFBDE472C913B30B6
checkpoint.checkpointState.numberOfCommits: 
    6
    7
checkpoint.checkpointState.numberOfSuspends: 
    5
    6
checkpoint.timestamp: 
    2023-01-31T07:00:15.304Z
    2023-01-31T07:00:15.306Z
isFlowResumed: 
    true
    false


 --- Transition of flow [6a84b95f-9585-4464-b302-dff1b1c96b12] ---
  Timestamp: 2023-01-31T07:00:15.308Z
  Event: DoRemainingWork
  Actions: 
    
  Continuation: ProcessEvents
  Diff between previous and next state:
null

 --- Transition of flow [6a84b95f-9585-4464-b302-dff1b1c96b12] ---
  Timestamp: 2023-01-31T07:00:15.325Z
  Event: DeliverSessionMessage(sessionMessage=ExistingSessionMessage(recipientSessionId=SessionId(toLong=-846941239363969924), payload=DataSessionMessage(payload=class net.corda.core.serialization.SerializedBytes)), deduplicationHandler=net.corda.testing.node.internal.MockNodeMessagingService$InMemoryDeduplicationHandler@2b9121dc, sender=O=Mock Company 3, L=London, C=GB)
  Actions: 
    ScheduleEvent(event=DoRemainingWork)
  Continuation: ProcessEvents
  Diff between previous and next state:
pendingDeduplicationHandlers: 
    []
    [net.corda.testing.node.internal.MockNodeMessagingService$InMemoryDeduplicationHandler@2b9121dc]
checkpoint.checkpointState.sessions.SessionId(toLong=-846941239363969924).receivedMessages.isEmpty: 
    true
    false
checkpoint.timestamp: 
    2023-01-31T07:00:15.308Z
    2023-01-31T07:00:15.325Z


 --- Transition of flow [6a84b95f-9585-4464-b302-dff1b1c96b12] ---
  Timestamp: 2023-01-31T07:00:15.325Z
  Event: DoRemainingWork
  Actions: 
    CreateTransaction
  Continuation: Resume(result=class java.util.LinkedHashMap)
  Diff between previous and next state:
checkpoint.checkpointState.sessions.SessionId(toLong=-846941239363969924).receivedMessages.isEmpty: 
    false
    true
isFlowResumed: 
    false
    true


 --- Transition of flow [6a84b95f-9585-4464-b302-dff1b1c96b12] ---
  Timestamp: 2023-01-31T07:00:15.325Z
  Event: LeaveSubFlow
  Actions: 
    
  Continuation: ProcessEvents
  Diff between previous and next state:
checkpoint.checkpointState.subFlowStack: 
    [Initiating(flowClass=class net.corda.samples.obligation.flows.IOUSettleFlow, classToInitiateWith=class net.corda.samples.obligation.flows.IOUSettleFlow, flowInfo=FlowInfo(flowVersion=1, appName=<unknown>), subFlowVersion=CorDappFlow(platformVersion=11, corDappName=workflows-1.0, corDappHash=B699A1A7AEE96EE2270B80DAE7A921F446B5529E562BC1497C4BF0F7569223AA), isEnabledTimedFlow=false), Inlined(flowClass=class net.corda.core.flows.CollectSignatureFlow, subFlowVersion=CoreFlow(platformVersion=11), isEnabledTimedFlow=false)]
    [Initiating(flowClass=class net.corda.samples.obligation.flows.IOUSettleFlow, classToInitiateWith=class net.corda.samples.obligation.flows.IOUSettleFlow, flowInfo=FlowInfo(flowVersion=1, appName=<unknown>), subFlowVersion=CorDappFlow(platformVersion=11, corDappName=workflows-1.0, corDappHash=B699A1A7AEE96EE2270B80DAE7A921F446B5529E562BC1497C4BF0F7569223AA), isEnabledTimedFlow=false)]


 --- Transition of flow [6a84b95f-9585-4464-b302-dff1b1c96b12] ---
  Timestamp: 2023-01-31T07:00:15.325Z
  Event: EnterSubFlow(subFlowClass=class net.corda.core.flows.FinalityFlow, subFlowVersion=CoreFlow(platformVersion=11), isEnabledTimedFlow=false)
  Actions: 
    
  Continuation: ProcessEvents
  Diff between previous and next state:
checkpoint.checkpointState.subFlowStack: 
    [Initiating(flowClass=class net.corda.samples.obligation.flows.IOUSettleFlow, classToInitiateWith=class net.corda.samples.obligation.flows.IOUSettleFlow, flowInfo=FlowInfo(flowVersion=1, appName=<unknown>), subFlowVersion=CorDappFlow(platformVersion=11, corDappName=workflows-1.0, corDappHash=B699A1A7AEE96EE2270B80DAE7A921F446B5529E562BC1497C4BF0F7569223AA), isEnabledTimedFlow=false)]
    [Initiating(flowClass=class net.corda.samples.obligation.flows.IOUSettleFlow, classToInitiateWith=class net.corda.samples.obligation.flows.IOUSettleFlow, flowInfo=FlowInfo(flowVersion=1, appName=<unknown>), subFlowVersion=CorDappFlow(platformVersion=11, corDappName=workflows-1.0, corDappHash=B699A1A7AEE96EE2270B80DAE7A921F446B5529E562BC1497C4BF0F7569223AA), isEnabledTimedFlow=false), Initiating(flowClass=class net.corda.core.flows.FinalityFlow, classToInitiateWith=class net.corda.core.flows.FinalityFlow, flowInfo=FlowInfo(flowVersion=1, appName=corda-core-4.9), subFlowVersion=CoreFlow(platformVersion=11), isEnabledTimedFlow=false)]


 --- Transition of flow [6a84b95f-9585-4464-b302-dff1b1c96b12] ---
  Timestamp: 2023-01-31T07:00:15.334Z
  Event: LeaveSubFlow
  Actions: 
    
  Continuation: ProcessEvents
  Diff between previous and next state:
checkpoint.checkpointState.subFlowStack: 
    [Initiating(flowClass=class net.corda.samples.obligation.flows.IOUSettleFlow, classToInitiateWith=class net.corda.samples.obligation.flows.IOUSettleFlow, flowInfo=FlowInfo(flowVersion=1, appName=<unknown>), subFlowVersion=CorDappFlow(platformVersion=11, corDappName=workflows-1.0, corDappHash=B699A1A7AEE96EE2270B80DAE7A921F446B5529E562BC1497C4BF0F7569223AA), isEnabledTimedFlow=false), Initiating(flowClass=class net.corda.core.flows.FinalityFlow, classToInitiateWith=class net.corda.core.flows.FinalityFlow, flowInfo=FlowInfo(flowVersion=1, appName=corda-core-4.9), subFlowVersion=CoreFlow(platformVersion=11), isEnabledTimedFlow=false)]
    [Initiating(flowClass=class net.corda.samples.obligation.flows.IOUSettleFlow, classToInitiateWith=class net.corda.samples.obligation.flows.IOUSettleFlow, flowInfo=FlowInfo(flowVersion=1, appName=<unknown>), subFlowVersion=CorDappFlow(platformVersion=11, corDappName=workflows-1.0, corDappHash=B699A1A7AEE96EE2270B80DAE7A921F446B5529E562BC1497C4BF0F7569223AA), isEnabledTimedFlow=false)]
checkpoint.timestamp: 
    2023-01-31T07:00:15.325Z
    2023-01-31T07:00:15.334Z


 --- Transition of flow [6a84b95f-9585-4464-b302-dff1b1c96b12] ---
  Timestamp: 2023-01-31T07:00:15.346Z
  Event: Error(exception=java.lang.IllegalArgumentException: Could not find Party for Anonymous(DL6v8GxjNPNZLW4xJ9KP77iSgzgnJKysUbmi5t7ntaxFta), rollback=true)
  Actions: 
    RollbackTransaction
    ScheduleEvent(event=DoRemainingWork)
  Continuation: ProcessEvents
  Diff between previous and next state:
checkpoint.errorState: 
    Clean
    Errored(errors=[FlowError(errorId=3188663995452510243, exception=java.lang.IllegalArgumentException: Could not find Party for Anonymous(DL6v8GxjNPNZLW4xJ9KP77iSgzgnJKysUbmi5t7ntaxFta))], propagatedIndex=0, propagating=false)
checkpoint.timestamp: 
    2023-01-31T07:00:15.334Z
    2023-01-31T07:00:15.337Z
isFlowResumed: 
    true
    false


 --- Transition of flow [6a84b95f-9585-4464-b302-dff1b1c96b12] ---
  Timestamp: 2023-01-31T07:00:15.354Z
  Event: DoRemainingWork
  Actions: 
    
  Continuation: ProcessEvents
  Diff between previous and next state:
null

 --- Transition of flow [6a84b95f-9585-4464-b302-dff1b1c96b12] ---
  Timestamp: 2023-01-31T07:00:15.355Z
  Event: StartErrorPropagation
  Actions: 
    ScheduleEvent(event=DoRemainingWork)
  Continuation: ProcessEvents
  Diff between previous and next state:
checkpoint.errorState.propagating: 
    false
    true
checkpoint.timestamp: 
    2023-01-31T07:00:15.337Z
    2023-01-31T07:00:15.355Z
 {actor_id=Only For Testing, actor_owning_identity=O=Mock Company 1, L=London, C=GB, actor_store_id=TEST, fiber-id=10000027, flow-id=6a84b95f-9585-4464-b302-dff1b1c96b12, invocation_id=13121be1-7942-4193-a973-e9f16a3aad92, invocation_timestamp=2023-01-31T07:00:14.594Z, origin=Only For Testing, session_id=13121be1-7942-4193-a973-e9f16a3aad92, session_timestamp=2023-01-31T07:00:14.594Z, thread-id=859, tx_id=B8B88DF526D6289A98FCDCC0D0A5BE69453156D8846C61133778E9B0554C8B59}
[WARN ] 2023-01-31T07:00:15,388Z [Mock network] interceptors.DumpHistoryOnErrorInterceptor. - Flow [6a84b95f-9585-4464-b302-dff1b1c96b12] error {actor_id=Only For Testing, actor_owning_identity=O=Mock Company 1, L=London, C=GB, actor_store_id=TEST, fiber-id=10000027, flow-id=6a84b95f-9585-4464-b302-dff1b1c96b12, invocation_id=13121be1-7942-4193-a973-e9f16a3aad92, invocation_timestamp=2023-01-31T07:00:14.594Z, origin=Only For Testing, session_id=13121be1-7942-4193-a973-e9f16a3aad92, session_timestamp=2023-01-31T07:00:14.594Z, thread-id=859, tx_id=B8B88DF526D6289A98FCDCC0D0A5BE69453156D8846C61133778E9B0554C8B59}
java.lang.IllegalArgumentException: Could not find Party for Anonymous(DL6v8GxjNPNZLW4xJ9KP77iSgzgnJKysUbmi5t7ntaxFta)
	at net.corda.core.identity.IdentityUtils.groupAbstractPartyByWellKnownParty(IdentityUtils.kt:47) ~[corda-core-4.9.jar:?]
	at net.corda.core.identity.IdentityUtils.groupAbstractPartyByWellKnownParty(IdentityUtils.kt:63) ~[corda-core-4.9.jar:?]
	at net.corda.core.flows.FinalityFlow.extractExternalParticipants(FinalityFlow.kt:252) ~[corda-core-4.9.jar:?]
	at net.corda.core.flows.FinalityFlow.call(FinalityFlow.kt:162) ~[corda-core-4.9.jar:?]
	at net.corda.core.flows.FinalityFlow.call(FinalityFlow.kt:43) ~[corda-core-4.9.jar:?]
	at net.corda.node.services.statemachine.FlowStateMachineImpl.subFlow(FlowStateMachineImpl.kt:420) ~[corda-node-4.9.jar:?]
	at net.corda.core.flows.FlowLogic.subFlow(FlowLogic.kt:409) ~[corda-core-4.9.jar:?]
	at net.corda.samples.obligation.flows.IOUSettleFlow.call(IOUSettleFlow.kt:116) ~[main/:?]
	at net.corda.samples.obligation.flows.IOUSettleFlow.call(IOUSettleFlow.kt:30) ~[main/:?]
	at net.corda.node.services.statemachine.FlowStateMachineImpl.run(FlowStateMachineImpl.kt:349) ~[corda-node-4.9.jar:?]
	at net.corda.node.services.statemachine.FlowStateMachineImpl.run(FlowStateMachineImpl.kt:71) ~[corda-node-4.9.jar:?]
	at co.paralleluniverse.fibers.Fiber.run1(Fiber.java:1092) ~[quasar-core-0.7.10.jar:0.7.10]
	at co.paralleluniverse.fibers.Fiber.exec(Fiber.java:788) ~[quasar-core-0.7.10.jar:0.7.10]
	at co.paralleluniverse.fibers.RunnableFiberTask.doExec(RunnableFiberTask.java:100) ~[quasar-core-0.7.10.jar:0.7.10]
	at co.paralleluniverse.fibers.RunnableFiberTask.run(RunnableFiberTask.java:91) ~[quasar-core-0.7.10.jar:0.7.10]
	at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511) ~[?:1.8.0_202]
	at java.util.concurrent.FutureTask.run(FutureTask.java:266) ~[?:1.8.0_202]
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.access$201(ScheduledThreadPoolExecutor.java:180) ~[?:1.8.0_202]
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.run(ScheduledThreadPoolExecutor.java:293) ~[?:1.8.0_202]
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149) ~[?:1.8.0_202]
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624) ~[?:1.8.0_202]
	at net.corda.node.utilities.AffinityExecutor$ServiceAffinityExecutor$1$thread$1.run(AffinityExecutor.kt:63) ~[corda-node-4.9.jar:?]
[WARN ] 2023-01-31T07:00:15,390Z [Mock network] statemachine.ActionExecutorImpl. - Propagating error {actor_id=Only For Testing, actor_owning_identity=O=Mock Company 1, L=London, C=GB, actor_store_id=TEST, fiber-id=10000027, flow-id=6a84b95f-9585-4464-b302-dff1b1c96b12, invocation_id=13121be1-7942-4193-a973-e9f16a3aad92, invocation_timestamp=2023-01-31T07:00:14.594Z, origin=Only For Testing, session_id=13121be1-7942-4193-a973-e9f16a3aad92, session_timestamp=2023-01-31T07:00:14.594Z, thread-id=859, tx_id=B8B88DF526D6289A98FCDCC0D0A5BE69453156D8846C61133778E9B0554C8B59}
[WARN ] 2023-01-31T07:00:15,484Z [Mock network] interceptors.DumpHistoryOnErrorInterceptor. - Flow [6a84b95f-9585-4464-b302-dff1b1c96b12] errored, dumping all transitions:

 --- Transition of flow [6a84b95f-9585-4464-b302-dff1b1c96b12] ---
  Timestamp: 2023-01-31T07:00:14.598Z
  Event: DoRemainingWork
  Actions: 
    CreateTransaction
    PersistCheckpoint(id=[6a84b95f-9585-4464-b302-dff1b1c96b12], checkpoint=Checkpoint(checkpointState=CheckpointState(invocationContext=InvocationContext(origin=RPC(actor=Actor(id=Id(value=Only For Testing), serviceId=AuthServiceId(value=TEST), owningLegalIdentity=O=Mock Company 1, L=London, C=GB)), trace=Trace(invocationId=13121be1-7942-4193-a973-e9f16a3aad92, timestamp: 2023-01-31T07:00:14.594Z, entityType: Invocation, sessionId=13121be1-7942-4193-a973-e9f16a3aad92, timestamp: 2023-01-31T07:00:14.594Z, entityType: Session), actor=Actor(id=Id(value=Only For Testing), serviceId=AuthServiceId(value=TEST), owningLegalIdentity=O=Mock Company 1, L=London, C=GB), externalTrace=null, impersonatedActor=null, arguments=[], clientId=null), ourIdentity=O=Mock Company 1, L=London, C=GB, sessions={}, sessionsToBeClosed=[], subFlowStack=[Initiating(flowClass=class net.corda.samples.obligation.flows.IOUSettleFlow, classToInitiateWith=class net.corda.samples.obligation.flows.IOUSettleFlow, flowInfo=FlowInfo(flowVersion=1, appName=<unknown>), subFlowVersion=CorDappFlow(platformVersion=11, corDappName=workflows-1.0, corDappHash=B699A1A7AEE96EE2270B80DAE7A921F446B5529E562BC1497C4BF0F7569223AA), isEnabledTimedFlow=false)], numberOfSuspends=0, numberOfCommits=1), flowState=Unstarted(flowStart=Explicit, frozenFlowLogic=5DE723D0E9D1391EDC093BDD8A167DF0CE0F886DA8DB399D4F95765FFD2EEF04), errorState=Clean, result=null, status=RUNNABLE, progressStep=null, flowIoRequest=null, compatible=true), isCheckpointUpdate=false)
    PersistDeduplicationFacts(deduplicationHandlers=[net.corda.node.internal.FlowStarterImpl$startFlow$startFlowEvent$1@b4ec0ff])
    CommitTransaction
    AcknowledgeMessages(deduplicationHandlers=[net.corda.node.internal.FlowStarterImpl$startFlow$startFlowEvent$1@b4ec0ff])
    SignalFlowHasStarted(flowId=[6a84b95f-9585-4464-b302-dff1b1c96b12])
    CreateTransaction
  Continuation: Resume(result=null)
  Diff between previous and next state:
pendingDeduplicationHandlers: 
    [net.corda.node.internal.FlowStarterImpl$startFlow$startFlowEvent$1@b4ec0ff]
    []
isAnyCheckpointPersisted: 
    false
    true
isFlowResumed: 
    false
    true


 --- Transition of flow [6a84b95f-9585-4464-b302-dff1b1c96b12] ---
  Timestamp: 2023-01-31T07:00:14.601Z
  Event: EnterSubFlow(subFlowClass=class net.corda.samples.obligation.accountUtil.NewKeyForAccount, subFlowVersion=CorDappFlow(platformVersion=11, corDappName=workflows-1.0, corDappHash=B699A1A7AEE96EE2270B80DAE7A921F446B5529E562BC1497C4BF0F7569223AA), isEnabledTimedFlow=false)
  Actions: 
    
  Continuation: ProcessEvents
  Diff between previous and next state:
checkpoint.checkpointState.subFlowStack: 
    [Initiating(flowClass=class net.corda.samples.obligation.flows.IOUSettleFlow, classToInitiateWith=class net.corda.samples.obligation.flows.IOUSettleFlow, flowInfo=FlowInfo(flowVersion=1, appName=<unknown>), subFlowVersion=CorDappFlow(platformVersion=11, corDappName=workflows-1.0, corDappHash=B699A1A7AEE96EE2270B80DAE7A921F446B5529E562BC1497C4BF0F7569223AA), isEnabledTimedFlow=false)]
    [Initiating(flowClass=class net.corda.samples.obligation.flows.IOUSettleFlow, classToInitiateWith=class net.corda.samples.obligation.flows.IOUSettleFlow, flowInfo=FlowInfo(flowVersion=1, appName=<unknown>), subFlowVersion=CorDappFlow(platformVersion=11, corDappName=workflows-1.0, corDappHash=B699A1A7AEE96EE2270B80DAE7A921F446B5529E562BC1497C4BF0F7569223AA), isEnabledTimedFlow=false), Inlined(flowClass=class net.corda.samples.obligation.accountUtil.NewKeyForAccount, subFlowVersion=CorDappFlow(platformVersion=11, corDappName=workflows-1.0, corDappHash=B699A1A7AEE96EE2270B80DAE7A921F446B5529E562BC1497C4BF0F7569223AA), isEnabledTimedFlow=false)]
checkpoint.timestamp: 
    2023-01-31T07:00:14.595Z
    2023-01-31T07:00:14.601Z


 --- Transition of flow [6a84b95f-9585-4464-b302-dff1b1c96b12] ---
  Timestamp: 2023-01-31T07:00:14.605Z
  Event: LeaveSubFlow
  Actions: 
    
  Continuation: ProcessEvents
  Diff between previous and next state:
checkpoint.checkpointState.subFlowStack: 
    [Initiating(flowClass=class net.corda.samples.obligation.flows.IOUSettleFlow, classToInitiateWith=class net.corda.samples.obligation.flows.IOUSettleFlow, flowInfo=FlowInfo(flowVersion=1, appName=<unknown>), subFlowVersion=CorDappFlow(platformVersion=11, corDappName=workflows-1.0, corDappHash=B699A1A7AEE96EE2270B80DAE7A921F446B5529E562BC1497C4BF0F7569223AA), isEnabledTimedFlow=false), Inlined(flowClass=class net.corda.samples.obligation.accountUtil.NewKeyForAccount, subFlowVersion=CorDappFlow(platformVersion=11, corDappName=workflows-1.0, corDappHash=B699A1A7AEE96EE2270B80DAE7A921F446B5529E562BC1497C4BF0F7569223AA), isEnabledTimedFlow=false)]
    [Initiating(flowClass=class net.corda.samples.obligation.flows.IOUSettleFlow, classToInitiateWith=class net.corda.samples.obligation.flows.IOUSettleFlow, flowInfo=FlowInfo(flowVersion=1, appName=<unknown>), subFlowVersion=CorDappFlow(platformVersion=11, corDappName=workflows-1.0, corDappHash=B699A1A7AEE96EE2270B80DAE7A921F446B5529E562BC1497C4BF0F7569223AA), isEnabledTimedFlow=false)]
checkpoint.timestamp: 
    2023-01-31T07:00:14.601Z
    2023-01-31T07:00:14.605Z


 --- Transition of flow [6a84b95f-9585-4464-b302-dff1b1c96b12] ---
  Timestamp: 2023-01-31T07:00:14.613Z
  Event: EnterSubFlow(subFlowClass=class com.r3.corda.lib.accounts.workflows.flows.RequestKeyForAccount, subFlowVersion=CorDappFlow(platformVersion=11, corDappName=accounts-workflows-1.0, corDappHash=80555705CE83A631D1BDD61E9C14A7C2215BB67FAB1411547C4D4B3D66F8402E), isEnabledTimedFlow=false)
  Actions: 
    
  Continuation: ProcessEvents
  Diff between previous and next state:
checkpoint.checkpointState.subFlowStack: 
    [Initiating(flowClass=class net.corda.samples.obligation.flows.IOUSettleFlow, classToInitiateWith=class net.corda.samples.obligation.flows.IOUSettleFlow, flowInfo=FlowInfo(flowVersion=1, appName=<unknown>), subFlowVersion=CorDappFlow(platformVersion=11, corDappName=workflows-1.0, corDappHash=B699A1A7AEE96EE2270B80DAE7A921F446B5529E562BC1497C4BF0F7569223AA), isEnabledTimedFlow=false)]
    [Initiating(flowClass=class net.corda.samples.obligation.flows.IOUSettleFlow, classToInitiateWith=class net.corda.samples.obligation.flows.IOUSettleFlow, flowInfo=FlowInfo(flowVersion=1, appName=<unknown>), subFlowVersion=CorDappFlow(platformVersion=11, corDappName=workflows-1.0, corDappHash=B699A1A7AEE96EE2270B80DAE7A921F446B5529E562BC1497C4BF0F7569223AA), isEnabledTimedFlow=false), Initiating(flowClass=class com.r3.corda.lib.accounts.workflows.flows.RequestKeyForAccount, classToInitiateWith=class com.r3.corda.lib.accounts.workflows.flows.RequestKeyForAccount, flowInfo=FlowInfo(flowVersion=1, appName=accounts-workflows-1.0), subFlowVersion=CorDappFlow(platformVersion=11, corDappName=accounts-workflows-1.0, corDappHash=80555705CE83A631D1BDD61E9C14A7C2215BB67FAB1411547C4D4B3D66F8402E), isEnabledTimedFlow=false)]
checkpoint.timestamp: 
    2023-01-31T07:00:14.605Z
    2023-01-31T07:00:14.613Z


 --- Transition of flow [6a84b95f-9585-4464-b302-dff1b1c96b12] ---
  Timestamp: 2023-01-31T07:00:14.613Z
  Event: InitiateFlow(destination=O=Mock Company 3, L=London, C=GB, wellKnownParty=O=Mock Company 3, L=London, C=GB)
  Actions: 
    AddSessionBinding(flowId=[6a84b95f-9585-4464-b302-dff1b1c96b12], sessionId=SessionId(toLong=6728904389291810955))
  Continuation: Resume(result=class net.corda.node.services.statemachine.FlowSessionImpl)
  Diff between previous and next state:
checkpoint.checkpointState.sessions.SessionId(toLong=6728904389291810955): 
    null
    Uninitiated(destination=O=Mock Company 3, L=London, C=GB, initiatingSubFlow=Initiating(flowClass=class com.r3.corda.lib.accounts.workflows.flows.RequestKeyForAccount, classToInitiateWith=class com.r3.corda.lib.accounts.workflows.flows.RequestKeyForAccount, flowInfo=FlowInfo(flowVersion=1, appName=accounts-workflows-1.0), subFlowVersion=CorDappFlow(platformVersion=11, corDappName=accounts-workflows-1.0, corDappHash=80555705CE83A631D1BDD61E9C14A7C2215BB67FAB1411547C4D4B3D66F8402E), isEnabledTimedFlow=false), sourceSessionId=SessionId(toLong=6728904389291810955), additionalEntropy=-381495336044722511)


 --- Transition of flow [6a84b95f-9585-4464-b302-dff1b1c96b12] ---
  Timestamp: 2023-01-31T07:00:14.613Z
  Event: EnterSubFlow(subFlowClass=class com.r3.corda.lib.accounts.workflows.flows.RequestKeyForAccountFlow, subFlowVersion=CorDappFlow(platformVersion=11, corDappName=accounts-workflows-1.0, corDappHash=80555705CE83A631D1BDD61E9C14A7C2215BB67FAB1411547C4D4B3D66F8402E), isEnabledTimedFlow=false)
  Actions: 
    
  Continuation: ProcessEvents
  Diff between previous and next state:
checkpoint.checkpointState.subFlowStack: 
    [Initiating(flowClass=class net.corda.samples.obligation.flows.IOUSettleFlow, classToInitiateWith=class net.corda.samples.obligation.flows.IOUSettleFlow, flowInfo=FlowInfo(flowVersion=1, appName=<unknown>), subFlowVersion=CorDappFlow(platformVersion=11, corDappName=workflows-1.0, corDappHash=B699A1A7AEE96EE2270B80DAE7A921F446B5529E562BC1497C4BF0F7569223AA), isEnabledTimedFlow=false), Initiating(flowClass=class com.r3.corda.lib.accounts.workflows.flows.RequestKeyForAccount, classToInitiateWith=class com.r3.corda.lib.accounts.workflows.flows.RequestKeyForAccount, flowInfo=FlowInfo(flowVersion=1, appName=accounts-workflows-1.0), subFlowVersion=CorDappFlow(platformVersion=11, corDappName=accounts-workflows-1.0, corDappHash=80555705CE83A631D1BDD61E9C14A7C2215BB67FAB1411547C4D4B3D66F8402E), isEnabledTimedFlow=false)]
    [Initiating(flowClass=class net.corda.samples.obligation.flows.IOUSettleFlow, classToInitiateWith=class net.corda.samples.obligation.flows.IOUSettleFlow, flowInfo=FlowInfo(flowVersion=1, appName=<unknown>), subFlowVersion=CorDappFlow(platformVersion=11, corDappName=workflows-1.0, corDappHash=B699A1A7AEE96EE2270B80DAE7A921F446B5529E562BC1497C4BF0F7569223AA), isEnabledTimedFlow=false), Initiating(flowClass=class com.r3.corda.lib.accounts.workflows.flows.RequestKeyForAccount, classToInitiateWith=class com.r3.corda.lib.accounts.workflows.flows.RequestKeyForAccount, flowInfo=FlowInfo(flowVersion=1, appName=accounts-workflows-1.0), subFlowVersion=CorDappFlow(platformVersion=11, corDappName=accounts-workflows-1.0, corDappHash=80555705CE83A631D1BDD61E9C14A7C2215BB67FAB1411547C4D4B3D66F8402E), isEnabledTimedFlow=false), Inlined(flowClass=class com.r3.corda.lib.accounts.workflows.flows.RequestKeyForAccountFlow, subFlowVersion=CorDappFlow(platformVersion=11, corDappName=accounts-workflows-1.0, corDappHash=80555705CE83A631D1BDD61E9C14A7C2215BB67FAB1411547C4D4B3D66F8402E), isEnabledTimedFlow=false)]


 --- Transition of flow [6a84b95f-9585-4464-b302-dff1b1c96b12] ---
  Timestamp: 2023-01-31T07:00:14.621Z
  Event: Suspend(ioRequest=SendAndReceive({FlowSessionImpl(destination=O=Mock Company 3, L=London, C=GB, sourceSessionId=SessionId(toLong=6728904389291810955))=FlowSessionImpl(destination=O=Mock Company 3, L=London, C=GB, sourceSessionId=SessionId(toLong=6728904389291810955))=00A0FD77D4D949DA5FA692475B2671D10B18BB1F0A8E923BB2709D45565AF177}, shouldRetrySend=false), maySkipCheckpoint=false, fiber=72EA43EEF5A82DF465B8DA3DADBE59C3922E8EF7C2F9EED9482D7CDE87766E17, currentStep=Starting)
  Actions: 
    PersistCheckpoint(id=[6a84b95f-9585-4464-b302-dff1b1c96b12], checkpoint=Checkpoint(checkpointState=CheckpointState(invocationContext=InvocationContext(origin=RPC(actor=Actor(id=Id(value=Only For Testing), serviceId=AuthServiceId(value=TEST), owningLegalIdentity=O=Mock Company 1, L=London, C=GB)), trace=Trace(invocationId=13121be1-7942-4193-a973-e9f16a3aad92, timestamp: 2023-01-31T07:00:14.594Z, entityType: Invocation, sessionId=13121be1-7942-4193-a973-e9f16a3aad92, timestamp: 2023-01-31T07:00:14.594Z, entityType: Session), actor=Actor(id=Id(value=Only For Testing), serviceId=AuthServiceId(value=TEST), owningLegalIdentity=O=Mock Company 1, L=London, C=GB), externalTrace=null, impersonatedActor=null, arguments=[], clientId=null), ourIdentity=O=Mock Company 1, L=London, C=GB, sessions={SessionId(toLong=6728904389291810955)=Uninitiated(destination=O=Mock Company 3, L=London, C=GB, initiatingSubFlow=Initiating(flowClass=class com.r3.corda.lib.accounts.workflows.flows.RequestKeyForAccount, classToInitiateWith=class com.r3.corda.lib.accounts.workflows.flows.RequestKeyForAccount, flowInfo=FlowInfo(flowVersion=1, appName=accounts-workflows-1.0), subFlowVersion=CorDappFlow(platformVersion=11, corDappName=accounts-workflows-1.0, corDappHash=80555705CE83A631D1BDD61E9C14A7C2215BB67FAB1411547C4D4B3D66F8402E), isEnabledTimedFlow=false), sourceSessionId=SessionId(toLong=6728904389291810955), additionalEntropy=-381495336044722511)}, sessionsToBeClosed=[], subFlowStack=[Initiating(flowClass=class net.corda.samples.obligation.flows.IOUSettleFlow, classToInitiateWith=class net.corda.samples.obligation.flows.IOUSettleFlow, flowInfo=FlowInfo(flowVersion=1, appName=<unknown>), subFlowVersion=CorDappFlow(platformVersion=11, corDappName=workflows-1.0, corDappHash=B699A1A7AEE96EE2270B80DAE7A921F446B5529E562BC1497C4BF0F7569223AA), isEnabledTimedFlow=false), Initiating(flowClass=class com.r3.corda.lib.accounts.workflows.flows.RequestKeyForAccount, classToInitiateWith=class com.r3.corda.lib.accounts.workflows.flows.RequestKeyForAccount, flowInfo=FlowInfo(flowVersion=1, appName=accounts-workflows-1.0), subFlowVersion=CorDappFlow(platformVersion=11, corDappName=accounts-workflows-1.0, corDappHash=80555705CE83A631D1BDD61E9C14A7C2215BB67FAB1411547C4D4B3D66F8402E), isEnabledTimedFlow=false), Inlined(flowClass=class com.r3.corda.lib.accounts.workflows.flows.RequestKeyForAccountFlow, subFlowVersion=CorDappFlow(platformVersion=11, corDappName=accounts-workflows-1.0, corDappHash=80555705CE83A631D1BDD61E9C14A7C2215BB67FAB1411547C4D4B3D66F8402E), isEnabledTimedFlow=false)], numberOfSuspends=1, numberOfCommits=2), flowState=Started(flowIORequest=SendAndReceive({FlowSessionImpl(destination=O=Mock Company 3, L=London, C=GB, sourceSessionId=SessionId(toLong=6728904389291810955))=FlowSessionImpl(destination=O=Mock Company 3, L=London, C=GB, sourceSessionId=SessionId(toLong=6728904389291810955))=00A0FD77D4D949DA5FA692475B2671D10B18BB1F0A8E923BB2709D45565AF177}, shouldRetrySend=false), frozenFiber=72EA43EEF5A82DF465B8DA3DADBE59C3922E8EF7C2F9EED9482D7CDE87766E17), errorState=Clean, result=null, status=RUNNABLE, progressStep=Starting, flowIoRequest=SendAndReceive, compatible=true), isCheckpointUpdate=true)
    PersistDeduplicationFacts(deduplicationHandlers=[])
    CommitTransaction
    AcknowledgeMessages(deduplicationHandlers=[])
    ScheduleEvent(event=DoRemainingWork)
  Continuation: ProcessEvents
  Diff between previous and next state:
numberOfCommits: 
    0
    2
checkpoint.flowIoRequest: 
    null
    SendAndReceive
checkpoint.flowState: 
    Unstarted(flowStart=Explicit, frozenFlowLogic=5DE723D0E9D1391EDC093BDD8A167DF0CE0F886DA8DB399D4F95765FFD2EEF04)
    Started(flowIORequest=SendAndReceive({FlowSessionImpl(destination=O=Mock Company 3, L=London, C=GB, sourceSessionId=SessionId(toLong=6728904389291810955))=FlowSessionImpl(destination=O=Mock Company 3, L=London, C=GB, sourceSessionId=SessionId(toLong=6728904389291810955))=00A0FD77D4D949DA5FA692475B2671D10B18BB1F0A8E923BB2709D45565AF177}, shouldRetrySend=false), frozenFiber=72EA43EEF5A82DF465B8DA3DADBE59C3922E8EF7C2F9EED9482D7CDE87766E17)
checkpoint.checkpointState.numberOfCommits: 
    1
    2
checkpoint.checkpointState.numberOfSuspends: 
    0
    1
checkpoint.progressStep: 
    null
    Starting
checkpoint.timestamp: 
    2023-01-31T07:00:14.613Z
    2023-01-31T07:00:14.619Z
isFlowResumed: 
    true
    false


 --- Transition of flow [6a84b95f-9585-4464-b302-dff1b1c96b12] ---
  Timestamp: 2023-01-31T07:00:14.625Z
  Event: DoRemainingWork
  Actions: 
    SendMultiple(sendInitial=[SendInitial(destination=O=Mock Company 3, L=London, C=GB, initialise=InitialSessionMessage(initiatorSessionId=SessionId(toLong=6728904389291810955), initiationEntropy=-381495336044722511, initiatorFlowClassName=com.r3.corda.lib.accounts.workflows.flows.RequestKeyForAccount, appName=accounts-workflows-1.0, firstPayload=class net.corda.core.serialization.SerializedBytes), deduplicationId=SenderDeduplicationId(deduplicationId=DeduplicationId(toString=N-R-6728904389291810955--381495336044722511-1-0), senderUUID=fed2a79a-ec55-4f8e-b069-bc5cdd6da91d))], sendExisting=[])
  Continuation: ProcessEvents
  Diff between previous and next state:
checkpoint.flowState.flowIORequest: 
    SendAndReceive({FlowSessionImpl(destination=O=Mock Company 3, L=London, C=GB, sourceSessionId=SessionId(toLong=6728904389291810955))=FlowSessionImpl(destination=O=Mock Company 3, L=London, C=GB, sourceSessionId=SessionId(toLong=6728904389291810955))=00A0FD77D4D949DA5FA692475B2671D10B18BB1F0A8E923BB2709D45565AF177}, shouldRetrySend=false)
    Receive(sessions=[FlowSessionImpl(destination=O=Mock Company 3, L=London, C=GB, sourceSessionId=SessionId(toLong=6728904389291810955))])
checkpoint.checkpointState.sessions.SessionId(toLong=6728904389291810955): 
    Uninitiated(destination=O=Mock Company 3, L=London, C=GB, initiatingSubFlow=Initiating(flowClass=class com.r3.corda.lib.accounts.workflows.flows.RequestKeyForAccount, classToInitiateWith=class com.r3.corda.lib.accounts.workflows.flows.RequestKeyForAccount, flowInfo=FlowInfo(flowVersion=1, appName=accounts-workflows-1.0), subFlowVersion=CorDappFlow(platformVersion=11, corDappName=accounts-workflows-1.0, corDappHash=80555705CE83A631D1BDD61E9C14A7C2215BB67FAB1411547C4D4B3D66F8402E), isEnabledTimedFlow=false), sourceSessionId=SessionId(toLong=6728904389291810955), additionalEntropy=-381495336044722511)
    Initiating(bufferedMessages=[], rejectionError=null, deduplicationSeed=R-6728904389291810955--381495336044722511)
checkpoint.timestamp: 
    2023-01-31T07:00:14.619Z
    2023-01-31T07:00:14.621Z


 --- Transition of flow [6a84b95f-9585-4464-b302-dff1b1c96b12] ---
  Timestamp: 2023-01-31T07:00:14.650Z
  Event: DeliverSessionMessage(sessionMessage=ExistingSessionMessage(recipientSessionId=SessionId(toLong=6728904389291810955), payload=ConfirmSessionMessage(initiatedSessionId=SessionId(toLong=-4097024049185308153), initiatedFlowInfo=FlowInfo(flowVersion=1, appName=accounts-workflows-1.0))), deduplicationHandler=net.corda.testing.node.internal.MockNodeMessagingService$InMemoryDeduplicationHandler@18122e02, sender=O=Mock Company 3, L=London, C=GB)
  Actions: 
    ScheduleEvent(event=DoRemainingWork)
  Continuation: ProcessEvents
  Diff between previous and next state:
pendingDeduplicationHandlers: 
    []
    [net.corda.testing.node.internal.MockNodeMessagingService$InMemoryDeduplicationHandler@18122e02]
checkpoint.checkpointState.sessions.SessionId(toLong=6728904389291810955): 
    Initiating(bufferedMessages=[], rejectionError=null, deduplicationSeed=R-6728904389291810955--381495336044722511)
    Initiated(peerParty=O=Mock Company 3, L=London, C=GB, peerFlowInfo=FlowInfo(flowVersion=1, appName=accounts-workflows-1.0), receivedMessages=[], otherSideErrored=false, peerSinkSessionId=SessionId(toLong=-4097024049185308153), deduplicationSeed=R-6728904389291810955--381495336044722511)
checkpoint.timestamp: 
    2023-01-31T07:00:14.621Z
    2023-01-31T07:00:14.650Z


 --- Transition of flow [6a84b95f-9585-4464-b302-dff1b1c96b12] ---
  Timestamp: 2023-01-31T07:00:14.650Z
  Event: DoRemainingWork
  Actions: 
    
  Continuation: ProcessEvents
  Diff between previous and next state:
null

 --- Transition of flow [6a84b95f-9585-4464-b302-dff1b1c96b12] ---
  Timestamp: 2023-01-31T07:00:14.651Z
  Event: DeliverSessionMessage(sessionMessage=ExistingSessionMessage(recipientSessionId=SessionId(toLong=6728904389291810955), payload=DataSessionMessage(payload=class net.corda.core.serialization.SerializedBytes)), deduplicationHandler=net.corda.testing.node.internal.MockNodeMessagingService$InMemoryDeduplicationHandler@4cea9e92, sender=O=Mock Company 3, L=London, C=GB)
  Actions: 
    ScheduleEvent(event=DoRemainingWork)
  Continuation: ProcessEvents
  Diff between previous and next state:
pendingDeduplicationHandlers: 
    [net.corda.testing.node.internal.MockNodeMessagingService$InMemoryDeduplicationHandler@18122e02]
    [net.corda.testing.node.internal.MockNodeMessagingService$InMemoryDeduplicationHandler@18122e02, net.corda.testing.node.internal.MockNodeMessagingService$InMemoryDeduplicationHandler@4cea9e92]
checkpoint.checkpointState.sessions.SessionId(toLong=6728904389291810955).receivedMessages.isEmpty: 
    true
    false
checkpoint.timestamp: 
    2023-01-31T07:00:14.650Z
    2023-01-31T07:00:14.651Z


 --- Transition of flow [6a84b95f-9585-4464-b302-dff1b1c96b12] ---
  Timestamp: 2023-01-31T07:00:14.651Z
  Event: DoRemainingWork
  Actions: 
    CreateTransaction
  Continuation: Resume(result=class java.util.LinkedHashMap)
  Diff between previous and next state:
checkpoint.checkpointState.sessions.SessionId(toLong=6728904389291810955).receivedMessages.isEmpty: 
    false
    true
isFlowResumed: 
    false
    true


 --- Transition of flow [6a84b95f-9585-4464-b302-dff1b1c96b12] ---
  Timestamp: 2023-01-31T07:00:14.652Z
  Event: EnterSubFlow(subFlowClass=class com.r3.corda.lib.ci.workflows.RequestKeyFlow, subFlowVersion=CoreFlow(platformVersion=11), isEnabledTimedFlow=false)
  Actions: 
    
  Continuation: ProcessEvents
  Diff between previous and next state:
checkpoint.checkpointState.subFlowStack: 
    [Initiating(flowClass=class net.corda.samples.obligation.flows.IOUSettleFlow, classToInitiateWith=class net.corda.samples.obligation.flows.IOUSettleFlow, flowInfo=FlowInfo(flowVersion=1, appName=<unknown>), subFlowVersion=CorDappFlow(platformVersion=11, corDappName=workflows-1.0, corDappHash=B699A1A7AEE96EE2270B80DAE7A921F446B5529E562BC1497C4BF0F7569223AA), isEnabledTimedFlow=false), Initiating(flowClass=class com.r3.corda.lib.accounts.workflows.flows.RequestKeyForAccount, classToInitiateWith=class com.r3.corda.lib.accounts.workflows.flows.RequestKeyForAccount, flowInfo=FlowInfo(flowVersion=1, appName=accounts-workflows-1.0), subFlowVersion=CorDappFlow(platformVersion=11, corDappName=accounts-workflows-1.0, corDappHash=80555705CE83A631D1BDD61E9C14A7C2215BB67FAB1411547C4D4B3D66F8402E), isEnabledTimedFlow=false), Inlined(flowClass=class com.r3.corda.lib.accounts.workflows.flows.RequestKeyForAccountFlow, subFlowVersion=CorDappFlow(platformVersion=11, corDappName=accounts-workflows-1.0, corDappHash=80555705CE83A631D1BDD61E9C14A7C2215BB67FAB1411547C4D4B3D66F8402E), isEnabledTimedFlow=false)]
    [Initiating(flowClass=class net.corda.samples.obligation.flows.IOUSettleFlow, classToInitiateWith=class net.corda.samples.obligation.flows.IOUSettleFlow, flowInfo=FlowInfo(flowVersion=1, appName=<unknown>), subFlowVersion=CorDappFlow(platformVersion=11, corDappName=workflows-1.0, corDappHash=B699A1A7AEE96EE2270B80DAE7A921F446B5529E562BC1497C4BF0F7569223AA), isEnabledTimedFlow=false), Initiating(flowClass=class com.r3.corda.lib.accounts.workflows.flows.RequestKeyForAccount, classToInitiateWith=class com.r3.corda.lib.accounts.workflows.flows.RequestKeyForAccount, flowInfo=FlowInfo(flowVersion=1, appName=accounts-workflows-1.0), subFlowVersion=CorDappFlow(platformVersion=11, corDappName=accounts-workflows-1.0, corDappHash=80555705CE83A631D1BDD61E9C14A7C2215BB67FAB1411547C4D4B3D66F8402E), isEnabledTimedFlow=false), Inlined(flowClass=class com.r3.corda.lib.accounts.workflows.flows.RequestKeyForAccountFlow, subFlowVersion=CorDappFlow(platformVersion=11, corDappName=accounts-workflows-1.0, corDappHash=80555705CE83A631D1BDD61E9C14A7C2215BB67FAB1411547C4D4B3D66F8402E), isEnabledTimedFlow=false), Inlined(flowClass=class com.r3.corda.lib.ci.workflows.RequestKeyFlow, subFlowVersion=CoreFlow(platformVersion=11), isEnabledTimedFlow=false)]
checkpoint.timestamp: 
    2023-01-31T07:00:14.651Z
    2023-01-31T07:00:14.652Z


 --- Transition of flow [6a84b95f-9585-4464-b302-dff1b1c96b12] ---
  Timestamp: 2023-01-31T07:00:14.656Z
  Event: Suspend(ioRequest=SendAndReceive({FlowSessionImpl(destination=O=Mock Company 3, L=London, C=GB, sourceSessionId=SessionId(toLong=6728904389291810955))=FlowSessionImpl(destination=O=Mock Company 3, L=London, C=GB, sourceSessionId=SessionId(toLong=6728904389291810955))=4420BD51973C3A034B9DF1B956F5F9205333584CC5C92ADDF3E1704C8B9FD25F}, shouldRetrySend=false), maySkipCheckpoint=false, fiber=888DFA59C02B3826AAE16CC3BA496C2E5E79164411129EB29989060DC9CC955D, currentStep=Starting)
  Actions: 
    PersistCheckpoint(id=[6a84b95f-9585-4464-b302-dff1b1c96b12], checkpoint=Checkpoint(checkpointState=CheckpointState(invocationContext=InvocationContext(origin=RPC(actor=Actor(id=Id(value=Only For Testing), serviceId=AuthServiceId(value=TEST), owningLegalIdentity=O=Mock Company 1, L=London, C=GB)), trace=Trace(invocationId=13121be1-7942-4193-a973-e9f16a3aad92, timestamp: 2023-01-31T07:00:14.594Z, entityType: Invocation, sessionId=13121be1-7942-4193-a973-e9f16a3aad92, timestamp: 2023-01-31T07:00:14.594Z, entityType: Session), actor=Actor(id=Id(value=Only For Testing), serviceId=AuthServiceId(value=TEST), owningLegalIdentity=O=Mock Company 1, L=London, C=GB), externalTrace=null, impersonatedActor=null, arguments=[], clientId=null), ourIdentity=O=Mock Company 1, L=London, C=GB, sessions={SessionId(toLong=6728904389291810955)=Initiated(peerParty=O=Mock Company 3, L=London, C=GB, peerFlowInfo=FlowInfo(flowVersion=1, appName=accounts-workflows-1.0), receivedMessages=[], otherSideErrored=false, peerSinkSessionId=SessionId(toLong=-4097024049185308153), deduplicationSeed=R-6728904389291810955--381495336044722511)}, sessionsToBeClosed=[], subFlowStack=[Initiating(flowClass=class net.corda.samples.obligation.flows.IOUSettleFlow, classToInitiateWith=class net.corda.samples.obligation.flows.IOUSettleFlow, flowInfo=FlowInfo(flowVersion=1, appName=<unknown>), subFlowVersion=CorDappFlow(platformVersion=11, corDappName=workflows-1.0, corDappHash=B699A1A7AEE96EE2270B80DAE7A921F446B5529E562BC1497C4BF0F7569223AA), isEnabledTimedFlow=false), Initiating(flowClass=class com.r3.corda.lib.accounts.workflows.flows.RequestKeyForAccount, classToInitiateWith=class com.r3.corda.lib.accounts.workflows.flows.RequestKeyForAccount, flowInfo=FlowInfo(flowVersion=1, appName=accounts-workflows-1.0), subFlowVersion=CorDappFlow(platformVersion=11, corDappName=accounts-workflows-1.0, corDappHash=80555705CE83A631D1BDD61E9C14A7C2215BB67FAB1411547C4D4B3D66F8402E), isEnabledTimedFlow=false), Inlined(flowClass=class com.r3.corda.lib.accounts.workflows.flows.RequestKeyForAccountFlow, subFlowVersion=CorDappFlow(platformVersion=11, corDappName=accounts-workflows-1.0, corDappHash=80555705CE83A631D1BDD61E9C14A7C2215BB67FAB1411547C4D4B3D66F8402E), isEnabledTimedFlow=false), Inlined(flowClass=class com.r3.corda.lib.ci.workflows.RequestKeyFlow, subFlowVersion=CoreFlow(platformVersion=11), isEnabledTimedFlow=false)], numberOfSuspends=2, numberOfCommits=3), flowState=Started(flowIORequest=SendAndReceive({FlowSessionImpl(destination=O=Mock Company 3, L=London, C=GB, sourceSessionId=SessionId(toLong=6728904389291810955))=FlowSessionImpl(destination=O=Mock Company 3, L=London, C=GB, sourceSessionId=SessionId(toLong=6728904389291810955))=4420BD51973C3A034B9DF1B956F5F9205333584CC5C92ADDF3E1704C8B9FD25F}, shouldRetrySend=false), frozenFiber=888DFA59C02B3826AAE16CC3BA496C2E5E79164411129EB29989060DC9CC955D), errorState=Clean, result=null, status=RUNNABLE, progressStep=Starting, flowIoRequest=SendAndReceive, compatible=true), isCheckpointUpdate=true)
    PersistDeduplicationFacts(deduplicationHandlers=[net.corda.testing.node.internal.MockNodeMessagingService$InMemoryDeduplicationHandler@18122e02, net.corda.testing.node.internal.MockNodeMessagingService$InMemoryDeduplicationHandler@4cea9e92])
    CommitTransaction
    AcknowledgeMessages(deduplicationHandlers=[net.corda.testing.node.internal.MockNodeMessagingService$InMemoryDeduplicationHandler@18122e02, net.corda.testing.node.internal.MockNodeMessagingService$InMemoryDeduplicationHandler@4cea9e92])
    ScheduleEvent(event=DoRemainingWork)
  Continuation: ProcessEvents
  Diff between previous and next state:
pendingDeduplicationHandlers: 
    [net.corda.testing.node.internal.MockNodeMessagingService$InMemoryDeduplicationHandler@18122e02, net.corda.testing.node.internal.MockNodeMessagingService$InMemoryDeduplicationHandler@4cea9e92]
    []
numberOfCommits: 
    2
    3
checkpoint.flowState.flowIORequest: 
    Receive(sessions=[FlowSessionImpl(destination=O=Mock Company 3, L=London, C=GB, sourceSessionId=SessionId(toLong=6728904389291810955))])
    SendAndReceive({FlowSessionImpl(destination=O=Mock Company 3, L=London, C=GB, sourceSessionId=SessionId(toLong=6728904389291810955))=FlowSessionImpl(destination=O=Mock Company 3, L=London, C=GB, sourceSessionId=SessionId(toLong=6728904389291810955))=4420BD51973C3A034B9DF1B956F5F9205333584CC5C92ADDF3E1704C8B9FD25F}, shouldRetrySend=false)
checkpoint.flowState.frozenFiber.hash: 
    72EA43EEF5A82DF465B8DA3DADBE59C3922E8EF7C2F9EED9482D7CDE87766E17
    888DFA59C02B3826AAE16CC3BA496C2E5E79164411129EB29989060DC9CC955D
checkpoint.checkpointState.numberOfCommits: 
    2
    3
checkpoint.checkpointState.numberOfSuspends: 
    1
    2
checkpoint.timestamp: 
    2023-01-31T07:00:14.652Z
    2023-01-31T07:00:14.654Z
isFlowResumed: 
    true
    false


 --- Transition of flow [6a84b95f-9585-4464-b302-dff1b1c96b12] ---
  Timestamp: 2023-01-31T07:00:14.657Z
  Event: DoRemainingWork
  Actions: 
    SendMultiple(sendInitial=[], sendExisting=[SendExisting(peerParty=O=Mock Company 3, L=London, C=GB, message=ExistingSessionMessage(recipientSessionId=SessionId(toLong=-4097024049185308153), payload=DataSessionMessage(payload=class net.corda.core.serialization.SerializedBytes)), deduplicationId=SenderDeduplicationId(deduplicationId=DeduplicationId(toString=N-R-6728904389291810955--381495336044722511-2-0), senderUUID=fed2a79a-ec55-4f8e-b069-bc5cdd6da91d))])
  Continuation: ProcessEvents
  Diff between previous and next state:
checkpoint.flowState.flowIORequest: 
    SendAndReceive({FlowSessionImpl(destination=O=Mock Company 3, L=London, C=GB, sourceSessionId=SessionId(toLong=6728904389291810955))=FlowSessionImpl(destination=O=Mock Company 3, L=London, C=GB, sourceSessionId=SessionId(toLong=6728904389291810955))=4420BD51973C3A034B9DF1B956F5F9205333584CC5C92ADDF3E1704C8B9FD25F}, shouldRetrySend=false)
    Receive(sessions=[FlowSessionImpl(destination=O=Mock Company 3, L=London, C=GB, sourceSessionId=SessionId(toLong=6728904389291810955))])
checkpoint.timestamp: 
    2023-01-31T07:00:14.654Z
    2023-01-31T07:00:14.656Z


 --- Transition of flow [6a84b95f-9585-4464-b302-dff1b1c96b12] ---
  Timestamp: 2023-01-31T07:00:14.670Z
  Event: DeliverSessionMessage(sessionMessage=ExistingSessionMessage(recipientSessionId=SessionId(toLong=6728904389291810955), payload=DataSessionMessage(payload=class net.corda.core.serialization.SerializedBytes)), deduplicationHandler=net.corda.testing.node.internal.MockNodeMessagingService$InMemoryDeduplicationHandler@5ade2399, sender=O=Mock Company 3, L=London, C=GB)
  Actions: 
    ScheduleEvent(event=DoRemainingWork)
  Continuation: ProcessEvents
  Diff between previous and next state:
pendingDeduplicationHandlers: 
    []
    [net.corda.testing.node.internal.MockNodeMessagingService$InMemoryDeduplicationHandler@5ade2399]
checkpoint.checkpointState.sessions.SessionId(toLong=6728904389291810955).receivedMessages.isEmpty: 
    true
    false
checkpoint.timestamp: 
    2023-01-31T07:00:14.656Z
    2023-01-31T07:00:14.670Z


 --- Transition of flow [6a84b95f-9585-4464-b302-dff1b1c96b12] ---
  Timestamp: 2023-01-31T07:00:14.670Z
  Event: DoRemainingWork
  Actions: 
    CreateTransaction
  Continuation: Resume(result=class java.util.LinkedHashMap)
  Diff between previous and next state:
checkpoint.checkpointState.sessions.SessionId(toLong=6728904389291810955).receivedMessages.isEmpty: 
    false
    true
isFlowResumed: 
    false
    true


 --- Transition of flow [6a84b95f-9585-4464-b302-dff1b1c96b12] ---
  Timestamp: 2023-01-31T07:00:14.672Z
  Event: LeaveSubFlow
  Actions: 
    
  Continuation: ProcessEvents
  Diff between previous and next state:
checkpoint.checkpointState.subFlowStack: 
    [Initiating(flowClass=class net.corda.samples.obligation.flows.IOUSettleFlow, classToInitiateWith=class net.corda.samples.obligation.flows.IOUSettleFlow, flowInfo=FlowInfo(flowVersion=1, appName=<unknown>), subFlowVersion=CorDappFlow(platformVersion=11, corDappName=workflows-1.0, corDappHash=B699A1A7AEE96EE2270B80DAE7A921F446B5529E562BC1497C4BF0F7569223AA), isEnabledTimedFlow=false), Initiating(flowClass=class com.r3.corda.lib.accounts.workflows.flows.RequestKeyForAccount, classToInitiateWith=class com.r3.corda.lib.accounts.workflows.flows.RequestKeyForAccount, flowInfo=FlowInfo(flowVersion=1, appName=accounts-workflows-1.0), subFlowVersion=CorDappFlow(platformVersion=11, corDappName=accounts-workflows-1.0, corDappHash=80555705CE83A631D1BDD61E9C14A7C2215BB67FAB1411547C4D4B3D66F8402E), isEnabledTimedFlow=false), Inlined(flowClass=class com.r3.corda.lib.accounts.workflows.flows.RequestKeyForAccountFlow, subFlowVersion=CorDappFlow(platformVersion=11, corDappName=accounts-workflows-1.0, corDappHash=80555705CE83A631D1BDD61E9C14A7C2215BB67FAB1411547C4D4B3D66F8402E), isEnabledTimedFlow=false), Inlined(flowClass=class com.r3.corda.lib.ci.workflows.RequestKeyFlow, subFlowVersion=CoreFlow(platformVersion=11), isEnabledTimedFlow=false)]
    [Initiating(flowClass=class net.corda.samples.obligation.flows.IOUSettleFlow, classToInitiateWith=class net.corda.samples.obligation.flows.IOUSettleFlow, flowInfo=FlowInfo(flowVersion=1, appName=<unknown>), subFlowVersion=CorDappFlow(platformVersion=11, corDappName=workflows-1.0, corDappHash=B699A1A7AEE96EE2270B80DAE7A921F446B5529E562BC1497C4BF0F7569223AA), isEnabledTimedFlow=false), Initiating(flowClass=class com.r3.corda.lib.accounts.workflows.flows.RequestKeyForAccount, classToInitiateWith=class com.r3.corda.lib.accounts.workflows.flows.RequestKeyForAccount, flowInfo=FlowInfo(flowVersion=1, appName=accounts-workflows-1.0), subFlowVersion=CorDappFlow(platformVersion=11, corDappName=accounts-workflows-1.0, corDappHash=80555705CE83A631D1BDD61E9C14A7C2215BB67FAB1411547C4D4B3D66F8402E), isEnabledTimedFlow=false), Inlined(flowClass=class com.r3.corda.lib.accounts.workflows.flows.RequestKeyForAccountFlow, subFlowVersion=CorDappFlow(platformVersion=11, corDappName=accounts-workflows-1.0, corDappHash=80555705CE83A631D1BDD61E9C14A7C2215BB67FAB1411547C4D4B3D66F8402E), isEnabledTimedFlow=false)]
checkpoint.timestamp: 
    2023-01-31T07:00:14.670Z
    2023-01-31T07:00:14.672Z


 --- Transition of flow [6a84b95f-9585-4464-b302-dff1b1c96b12] ---
  Timestamp: 2023-01-31T07:00:14.672Z
  Event: LeaveSubFlow
  Actions: 
    
  Continuation: ProcessEvents
  Diff between previous and next state:
checkpoint.checkpointState.subFlowStack: 
    [Initiating(flowClass=class net.corda.samples.obligation.flows.IOUSettleFlow, classToInitiateWith=class net.corda.samples.obligation.flows.IOUSettleFlow, flowInfo=FlowInfo(flowVersion=1, appName=<unknown>), subFlowVersion=CorDappFlow(platformVersion=11, corDappName=workflows-1.0, corDappHash=B699A1A7AEE96EE2270B80DAE7A921F446B5529E562BC1497C4BF0F7569223AA), isEnabledTimedFlow=false), Initiating(flowClass=class com.r3.corda.lib.accounts.workflows.flows.RequestKeyForAccount, classToInitiateWith=class com.r3.corda.lib.accounts.workflows.flows.RequestKeyForAccount, flowInfo=FlowInfo(flowVersion=1, appName=accounts-workflows-1.0), subFlowVersion=CorDappFlow(platformVersion=11, corDappName=accounts-workflows-1.0, corDappHash=80555705CE83A631D1BDD61E9C14A7C2215BB67FAB1411547C4D4B3D66F8402E), isEnabledTimedFlow=false), Inlined(flowClass=class com.r3.corda.lib.accounts.workflows.flows.RequestKeyForAccountFlow, subFlowVersion=CorDappFlow(platformVersion=11, corDappName=accounts-workflows-1.0, corDappHash=80555705CE83A631D1BDD61E9C14A7C2215BB67FAB1411547C4D4B3D66F8402E), isEnabledTimedFlow=false)]
    [Initiating(flowClass=class net.corda.samples.obligation.flows.IOUSettleFlow, classToInitiateWith=class net.corda.samples.obligation.flows.IOUSettleFlow, flowInfo=FlowInfo(flowVersion=1, appName=<unknown>), subFlowVersion=CorDappFlow(platformVersion=11, corDappName=workflows-1.0, corDappHash=B699A1A7AEE96EE2270B80DAE7A921F446B5529E562BC1497C4BF0F7569223AA), isEnabledTimedFlow=false), Initiating(flowClass=class com.r3.corda.lib.accounts.workflows.flows.RequestKeyForAccount, classToInitiateWith=class com.r3.corda.lib.accounts.workflows.flows.RequestKeyForAccount, flowInfo=FlowInfo(flowVersion=1, appName=accounts-workflows-1.0), subFlowVersion=CorDappFlow(platformVersion=11, corDappName=accounts-workflows-1.0, corDappHash=80555705CE83A631D1BDD61E9C14A7C2215BB67FAB1411547C4D4B3D66F8402E), isEnabledTimedFlow=false)]


 --- Transition of flow [6a84b95f-9585-4464-b302-dff1b1c96b12] ---
  Timestamp: 2023-01-31T07:00:14.672Z
  Event: LeaveSubFlow
  Actions: 
    
  Continuation: ProcessEvents
  Diff between previous and next state:
checkpoint.checkpointState.subFlowStack: 
    [Initiating(flowClass=class net.corda.samples.obligation.flows.IOUSettleFlow, classToInitiateWith=class net.corda.samples.obligation.flows.IOUSettleFlow, flowInfo=FlowInfo(flowVersion=1, appName=<unknown>), subFlowVersion=CorDappFlow(platformVersion=11, corDappName=workflows-1.0, corDappHash=B699A1A7AEE96EE2270B80DAE7A921F446B5529E562BC1497C4BF0F7569223AA), isEnabledTimedFlow=false), Initiating(flowClass=class com.r3.corda.lib.accounts.workflows.flows.RequestKeyForAccount, classToInitiateWith=class com.r3.corda.lib.accounts.workflows.flows.RequestKeyForAccount, flowInfo=FlowInfo(flowVersion=1, appName=accounts-workflows-1.0), subFlowVersion=CorDappFlow(platformVersion=11, corDappName=accounts-workflows-1.0, corDappHash=80555705CE83A631D1BDD61E9C14A7C2215BB67FAB1411547C4D4B3D66F8402E), isEnabledTimedFlow=false)]
    [Initiating(flowClass=class net.corda.samples.obligation.flows.IOUSettleFlow, classToInitiateWith=class net.corda.samples.obligation.flows.IOUSettleFlow, flowInfo=FlowInfo(flowVersion=1, appName=<unknown>), subFlowVersion=CorDappFlow(platformVersion=11, corDappName=workflows-1.0, corDappHash=B699A1A7AEE96EE2270B80DAE7A921F446B5529E562BC1497C4BF0F7569223AA), isEnabledTimedFlow=false)]


 --- Transition of flow [6a84b95f-9585-4464-b302-dff1b1c96b12] ---
  Timestamp: 2023-01-31T07:00:14.875Z
  Event: InitiateFlow(destination=O=Mock Company 3, L=London, C=GB, wellKnownParty=O=Mock Company 3, L=London, C=GB)
  Actions: 
    AddSessionBinding(flowId=[6a84b95f-9585-4464-b302-dff1b1c96b12], sessionId=SessionId(toLong=-846941239363969924))
  Continuation: Resume(result=class net.corda.node.services.statemachine.FlowSessionImpl)
  Diff between previous and next state:
checkpoint.checkpointState.sessions.SessionId(toLong=-846941239363969924): 
    null
    Uninitiated(destination=O=Mock Company 3, L=London, C=GB, initiatingSubFlow=Initiating(flowClass=class net.corda.samples.obligation.flows.IOUSettleFlow, classToInitiateWith=class net.corda.samples.obligation.flows.IOUSettleFlow, flowInfo=FlowInfo(flowVersion=1, appName=<unknown>), subFlowVersion=CorDappFlow(platformVersion=11, corDappName=workflows-1.0, corDappHash=B699A1A7AEE96EE2270B80DAE7A921F446B5529E562BC1497C4BF0F7569223AA), isEnabledTimedFlow=false), sourceSessionId=SessionId(toLong=-846941239363969924), additionalEntropy=-3458992896374643217)
checkpoint.timestamp: 
    2023-01-31T07:00:14.672Z
    2023-01-31T07:00:14.875Z


 --- Transition of flow [6a84b95f-9585-4464-b302-dff1b1c96b12] ---
  Timestamp: 2023-01-31T07:00:14.875Z
  Event: EnterSubFlow(subFlowClass=class net.corda.core.flows.CollectSignatureFlow, subFlowVersion=CoreFlow(platformVersion=11), isEnabledTimedFlow=false)
  Actions: 
    
  Continuation: ProcessEvents
  Diff between previous and next state:
checkpoint.checkpointState.subFlowStack: 
    [Initiating(flowClass=class net.corda.samples.obligation.flows.IOUSettleFlow, classToInitiateWith=class net.corda.samples.obligation.flows.IOUSettleFlow, flowInfo=FlowInfo(flowVersion=1, appName=<unknown>), subFlowVersion=CorDappFlow(platformVersion=11, corDappName=workflows-1.0, corDappHash=B699A1A7AEE96EE2270B80DAE7A921F446B5529E562BC1497C4BF0F7569223AA), isEnabledTimedFlow=false)]
    [Initiating(flowClass=class net.corda.samples.obligation.flows.IOUSettleFlow, classToInitiateWith=class net.corda.samples.obligation.flows.IOUSettleFlow, flowInfo=FlowInfo(flowVersion=1, appName=<unknown>), subFlowVersion=CorDappFlow(platformVersion=11, corDappName=workflows-1.0, corDappHash=B699A1A7AEE96EE2270B80DAE7A921F446B5529E562BC1497C4BF0F7569223AA), isEnabledTimedFlow=false), Inlined(flowClass=class net.corda.core.flows.CollectSignatureFlow, subFlowVersion=CoreFlow(platformVersion=11), isEnabledTimedFlow=false)]


 --- Transition of flow [6a84b95f-9585-4464-b302-dff1b1c96b12] ---
  Timestamp: 2023-01-31T07:00:14.876Z
  Event: EnterSubFlow(subFlowClass=class net.corda.core.flows.SendTransactionFlow, subFlowVersion=CoreFlow(platformVersion=11), isEnabledTimedFlow=false)
  Actions: 
    
  Continuation: ProcessEvents
  Diff between previous and next state:
checkpoint.checkpointState.subFlowStack: 
    [Initiating(flowClass=class net.corda.samples.obligation.flows.IOUSettleFlow, classToInitiateWith=class net.corda.samples.obligation.flows.IOUSettleFlow, flowInfo=FlowInfo(flowVersion=1, appName=<unknown>), subFlowVersion=CorDappFlow(platformVersion=11, corDappName=workflows-1.0, corDappHash=B699A1A7AEE96EE2270B80DAE7A921F446B5529E562BC1497C4BF0F7569223AA), isEnabledTimedFlow=false), Inlined(flowClass=class net.corda.core.flows.CollectSignatureFlow, subFlowVersion=CoreFlow(platformVersion=11), isEnabledTimedFlow=false)]
    [Initiating(flowClass=class net.corda.samples.obligation.flows.IOUSettleFlow, classToInitiateWith=class net.corda.samples.obligation.flows.IOUSettleFlow, flowInfo=FlowInfo(flowVersion=1, appName=<unknown>), subFlowVersion=CorDappFlow(platformVersion=11, corDappName=workflows-1.0, corDappHash=B699A1A7AEE96EE2270B80DAE7A921F446B5529E562BC1497C4BF0F7569223AA), isEnabledTimedFlow=false), Inlined(flowClass=class net.corda.core.flows.CollectSignatureFlow, subFlowVersion=CoreFlow(platformVersion=11), isEnabledTimedFlow=false), Inlined(flowClass=class net.corda.core.flows.SendTransactionFlow, subFlowVersion=CoreFlow(platformVersion=11), isEnabledTimedFlow=false)]
checkpoint.timestamp: 
    2023-01-31T07:00:14.875Z
    2023-01-31T07:00:14.876Z


 --- Transition of flow [6a84b95f-9585-4464-b302-dff1b1c96b12] ---
  Timestamp: 2023-01-31T07:00:14.881Z
  Event: Suspend(ioRequest=SendAndReceive({FlowSessionImpl(destination=O=Mock Company 3, L=London, C=GB, sourceSessionId=SessionId(toLong=-846941239363969924))=FlowSessionImpl(destination=O=Mock Company 3, L=London, C=GB, sourceSessionId=SessionId(toLong=-846941239363969924))=3B2D0FAB19318E56EFD044EB7BA83465D7CBD503E6770785AC8CB296E9C6CFFE}, shouldRetrySend=false), maySkipCheckpoint=false, fiber=8BBF002E883FE0A8121D90F4F14F9E1E7A39871E719748BA95A66828D01C0D42, currentStep=Starting)
  Actions: 
    PersistCheckpoint(id=[6a84b95f-9585-4464-b302-dff1b1c96b12], checkpoint=Checkpoint(checkpointState=CheckpointState(invocationContext=InvocationContext(origin=RPC(actor=Actor(id=Id(value=Only For Testing), serviceId=AuthServiceId(value=TEST), owningLegalIdentity=O=Mock Company 1, L=London, C=GB)), trace=Trace(invocationId=13121be1-7942-4193-a973-e9f16a3aad92, timestamp: 2023-01-31T07:00:14.594Z, entityType: Invocation, sessionId=13121be1-7942-4193-a973-e9f16a3aad92, timestamp: 2023-01-31T07:00:14.594Z, entityType: Session), actor=Actor(id=Id(value=Only For Testing), serviceId=AuthServiceId(value=TEST), owningLegalIdentity=O=Mock Company 1, L=London, C=GB), externalTrace=null, impersonatedActor=null, arguments=[], clientId=null), ourIdentity=O=Mock Company 1, L=London, C=GB, sessions={SessionId(toLong=6728904389291810955)=Initiated(peerParty=O=Mock Company 3, L=London, C=GB, peerFlowInfo=FlowInfo(flowVersion=1, appName=accounts-workflows-1.0), receivedMessages=[], otherSideErrored=false, peerSinkSessionId=SessionId(toLong=-4097024049185308153), deduplicationSeed=R-6728904389291810955--381495336044722511), SessionId(toLong=-846941239363969924)=Uninitiated(destination=O=Mock Company 3, L=London, C=GB, initiatingSubFlow=Initiating(flowClass=class net.corda.samples.obligation.flows.IOUSettleFlow, classToInitiateWith=class net.corda.samples.obligation.flows.IOUSettleFlow, flowInfo=FlowInfo(flowVersion=1, appName=<unknown>), subFlowVersion=CorDappFlow(platformVersion=11, corDappName=workflows-1.0, corDappHash=B699A1A7AEE96EE2270B80DAE7A921F446B5529E562BC1497C4BF0F7569223AA), isEnabledTimedFlow=false), sourceSessionId=SessionId(toLong=-846941239363969924), additionalEntropy=-3458992896374643217)}, sessionsToBeClosed=[], subFlowStack=[Initiating(flowClass=class net.corda.samples.obligation.flows.IOUSettleFlow, classToInitiateWith=class net.corda.samples.obligation.flows.IOUSettleFlow, flowInfo=FlowInfo(flowVersion=1, appName=<unknown>), subFlowVersion=CorDappFlow(platformVersion=11, corDappName=workflows-1.0, corDappHash=B699A1A7AEE96EE2270B80DAE7A921F446B5529E562BC1497C4BF0F7569223AA), isEnabledTimedFlow=false), Inlined(flowClass=class net.corda.core.flows.CollectSignatureFlow, subFlowVersion=CoreFlow(platformVersion=11), isEnabledTimedFlow=false), Inlined(flowClass=class net.corda.core.flows.SendTransactionFlow, subFlowVersion=CoreFlow(platformVersion=11), isEnabledTimedFlow=false)], numberOfSuspends=3, numberOfCommits=4), flowState=Started(flowIORequest=SendAndReceive({FlowSessionImpl(destination=O=Mock Company 3, L=London, C=GB, sourceSessionId=SessionId(toLong=-846941239363969924))=FlowSessionImpl(destination=O=Mock Company 3, L=London, C=GB, sourceSessionId=SessionId(toLong=-846941239363969924))=3B2D0FAB19318E56EFD044EB7BA83465D7CBD503E6770785AC8CB296E9C6CFFE}, shouldRetrySend=false), frozenFiber=8BBF002E883FE0A8121D90F4F14F9E1E7A39871E719748BA95A66828D01C0D42), errorState=Clean, result=null, status=RUNNABLE, progressStep=Starting, flowIoRequest=SendAndReceive, compatible=true), isCheckpointUpdate=true)
    PersistDeduplicationFacts(deduplicationHandlers=[net.corda.testing.node.internal.MockNodeMessagingService$InMemoryDeduplicationHandler@5ade2399])
    CommitTransaction
    AcknowledgeMessages(deduplicationHandlers=[net.corda.testing.node.internal.MockNodeMessagingService$InMemoryDeduplicationHandler@5ade2399])
    ScheduleEvent(event=DoRemainingWork)
  Continuation: ProcessEvents
  Diff between previous and next state:
pendingDeduplicationHandlers: 
    [net.corda.testing.node.internal.MockNodeMessagingService$InMemoryDeduplicationHandler@5ade2399]
    []
numberOfCommits: 
    3
    4
checkpoint.flowState.flowIORequest: 
    Receive(sessions=[FlowSessionImpl(destination=O=Mock Company 3, L=London, C=GB, sourceSessionId=SessionId(toLong=6728904389291810955))])
    SendAndReceive({FlowSessionImpl(destination=O=Mock Company 3, L=London, C=GB, sourceSessionId=SessionId(toLong=-846941239363969924))=FlowSessionImpl(destination=O=Mock Company 3, L=London, C=GB, sourceSessionId=SessionId(toLong=-846941239363969924))=3B2D0FAB19318E56EFD044EB7BA83465D7CBD503E6770785AC8CB296E9C6CFFE}, shouldRetrySend=false)
checkpoint.flowState.frozenFiber.hash: 
    888DFA59C02B3826AAE16CC3BA496C2E5E79164411129EB29989060DC9CC955D
    8BBF002E883FE0A8121D90F4F14F9E1E7A39871E719748BA95A66828D01C0D42
checkpoint.checkpointState.numberOfCommits: 
    3
    4
checkpoint.checkpointState.numberOfSuspends: 
    2
    3
checkpoint.timestamp: 
    2023-01-31T07:00:14.876Z
    2023-01-31T07:00:14.878Z
isFlowResumed: 
    true
    false


 --- Transition of flow [6a84b95f-9585-4464-b302-dff1b1c96b12] ---
  Timestamp: 2023-01-31T07:00:14.881Z
  Event: DoRemainingWork
  Actions: 
    SendMultiple(sendInitial=[SendInitial(destination=O=Mock Company 3, L=London, C=GB, initialise=InitialSessionMessage(initiatorSessionId=SessionId(toLong=-846941239363969924), initiationEntropy=-3458992896374643217, initiatorFlowClassName=net.corda.samples.obligation.flows.IOUSettleFlow, appName=<unknown>, firstPayload=class net.corda.core.serialization.SerializedBytes), deduplicationId=SenderDeduplicationId(deduplicationId=DeduplicationId(toString=N-R--846941239363969924--3458992896374643217-3-0), senderUUID=fed2a79a-ec55-4f8e-b069-bc5cdd6da91d))], sendExisting=[])
  Continuation: ProcessEvents
  Diff between previous and next state:
checkpoint.flowState.flowIORequest: 
    SendAndReceive({FlowSessionImpl(destination=O=Mock Company 3, L=London, C=GB, sourceSessionId=SessionId(toLong=-846941239363969924))=FlowSessionImpl(destination=O=Mock Company 3, L=London, C=GB, sourceSessionId=SessionId(toLong=-846941239363969924))=3B2D0FAB19318E56EFD044EB7BA83465D7CBD503E6770785AC8CB296E9C6CFFE}, shouldRetrySend=false)
    Receive(sessions=[FlowSessionImpl(destination=O=Mock Company 3, L=London, C=GB, sourceSessionId=SessionId(toLong=-846941239363969924))])
checkpoint.checkpointState.sessions.SessionId(toLong=-846941239363969924): 
    Uninitiated(destination=O=Mock Company 3, L=London, C=GB, initiatingSubFlow=Initiating(flowClass=class net.corda.samples.obligation.flows.IOUSettleFlow, classToInitiateWith=class net.corda.samples.obligation.flows.IOUSettleFlow, flowInfo=FlowInfo(flowVersion=1, appName=<unknown>), subFlowVersion=CorDappFlow(platformVersion=11, corDappName=workflows-1.0, corDappHash=B699A1A7AEE96EE2270B80DAE7A921F446B5529E562BC1497C4BF0F7569223AA), isEnabledTimedFlow=false), sourceSessionId=SessionId(toLong=-846941239363969924), additionalEntropy=-3458992896374643217)
    Initiating(bufferedMessages=[], rejectionError=null, deduplicationSeed=R--846941239363969924--3458992896374643217)
checkpoint.timestamp: 
    2023-01-31T07:00:14.878Z
    2023-01-31T07:00:14.881Z


 --- Transition of flow [6a84b95f-9585-4464-b302-dff1b1c96b12] ---
  Timestamp: 2023-01-31T07:00:14.912Z
  Event: DeliverSessionMessage(sessionMessage=ExistingSessionMessage(recipientSessionId=SessionId(toLong=6728904389291810955), payload=net.corda.node.services.statemachine.EndSessionMessage@6613b19c), deduplicationHandler=net.corda.testing.node.internal.MockNodeMessagingService$InMemoryDeduplicationHandler@4438c258, sender=O=Mock Company 3, L=London, C=GB)
  Actions: 
    ScheduleEvent(event=DoRemainingWork)
  Continuation: ProcessEvents
  Diff between previous and next state:
pendingDeduplicationHandlers: 
    []
    [net.corda.testing.node.internal.MockNodeMessagingService$InMemoryDeduplicationHandler@4438c258]
checkpoint.checkpointState.sessions.SessionId(toLong=6728904389291810955).receivedMessages.isEmpty: 
    true
    false
checkpoint.checkpointState.sessionsToBeClosed: 
    []
    [SessionId(toLong=6728904389291810955)]
checkpoint.timestamp: 
    2023-01-31T07:00:14.881Z
    2023-01-31T07:00:14.912Z


 --- Transition of flow [6a84b95f-9585-4464-b302-dff1b1c96b12] ---
  Timestamp: 2023-01-31T07:00:14.912Z
  Event: DoRemainingWork
  Actions: 
    RemoveSessionBindings(sessionIds=[SessionId(toLong=6728904389291810955)])
  Continuation: ProcessEvents
  Diff between previous and next state:
checkpoint.checkpointState.sessions.SessionId(toLong=6728904389291810955): 
    Initiated(peerParty=O=Mock Company 3, L=London, C=GB, peerFlowInfo=FlowInfo(flowVersion=1, appName=accounts-workflows-1.0), receivedMessages=[net.corda.node.services.statemachine.EndSessionMessage@6613b19c], otherSideErrored=false, peerSinkSessionId=SessionId(toLong=-4097024049185308153), deduplicationSeed=R-6728904389291810955--381495336044722511)
    null
checkpoint.checkpointState.sessionsToBeClosed: 
    [SessionId(toLong=6728904389291810955)]
    []


 --- Transition of flow [6a84b95f-9585-4464-b302-dff1b1c96b12] ---
  Timestamp: 2023-01-31T07:00:14.914Z
  Event: DeliverSessionMessage(sessionMessage=ExistingSessionMessage(recipientSessionId=SessionId(toLong=-846941239363969924), payload=ConfirmSessionMessage(initiatedSessionId=SessionId(toLong=-6111232092193349787), initiatedFlowInfo=FlowInfo(flowVersion=1, appName=<unknown>))), deduplicationHandler=net.corda.testing.node.internal.MockNodeMessagingService$InMemoryDeduplicationHandler@4e6f2dea, sender=O=Mock Company 3, L=London, C=GB)
  Actions: 
    ScheduleEvent(event=DoRemainingWork)
  Continuation: ProcessEvents
  Diff between previous and next state:
pendingDeduplicationHandlers: 
    [net.corda.testing.node.internal.MockNodeMessagingService$InMemoryDeduplicationHandler@4438c258]
    [net.corda.testing.node.internal.MockNodeMessagingService$InMemoryDeduplicationHandler@4438c258, net.corda.testing.node.internal.MockNodeMessagingService$InMemoryDeduplicationHandler@4e6f2dea]
checkpoint.checkpointState.sessions.SessionId(toLong=-846941239363969924): 
    Initiating(bufferedMessages=[], rejectionError=null, deduplicationSeed=R--846941239363969924--3458992896374643217)
    Initiated(peerParty=O=Mock Company 3, L=London, C=GB, peerFlowInfo=FlowInfo(flowVersion=1, appName=<unknown>), receivedMessages=[], otherSideErrored=false, peerSinkSessionId=SessionId(toLong=-6111232092193349787), deduplicationSeed=R--846941239363969924--3458992896374643217)
checkpoint.timestamp: 
    2023-01-31T07:00:14.912Z
    2023-01-31T07:00:14.914Z


 --- Transition of flow [6a84b95f-9585-4464-b302-dff1b1c96b12] ---
  Timestamp: 2023-01-31T07:00:14.914Z
  Event: DoRemainingWork
  Actions: 
    
  Continuation: ProcessEvents
  Diff between previous and next state:
null

 --- Transition of flow [6a84b95f-9585-4464-b302-dff1b1c96b12] ---
  Timestamp: 2023-01-31T07:00:14.915Z
  Event: DeliverSessionMessage(sessionMessage=ExistingSessionMessage(recipientSessionId=SessionId(toLong=-846941239363969924), payload=DataSessionMessage(payload=class net.corda.core.serialization.SerializedBytes)), deduplicationHandler=net.corda.testing.node.internal.MockNodeMessagingService$InMemoryDeduplicationHandler@2f2798a4, sender=O=Mock Company 3, L=London, C=GB)
  Actions: 
    ScheduleEvent(event=DoRemainingWork)
  Continuation: ProcessEvents
  Diff between previous and next state:
pendingDeduplicationHandlers: 
    [net.corda.testing.node.internal.MockNodeMessagingService$InMemoryDeduplicationHandler@4438c258, net.corda.testing.node.internal.MockNodeMessagingService$InMemoryDeduplicationHandler@4e6f2dea]
    [net.corda.testing.node.internal.MockNodeMessagingService$InMemoryDeduplicationHandler@4438c258, net.corda.testing.node.internal.MockNodeMessagingService$InMemoryDeduplicationHandler@4e6f2dea, net.corda.testing.node.internal.MockNodeMessagingService$InMemoryDeduplicationHandler@2f2798a4]
checkpoint.checkpointState.sessions.SessionId(toLong=-846941239363969924).receivedMessages.isEmpty: 
    true
    false
checkpoint.timestamp: 
    2023-01-31T07:00:14.914Z
    2023-01-31T07:00:14.915Z


 --- Transition of flow [6a84b95f-9585-4464-b302-dff1b1c96b12] ---
  Timestamp: 2023-01-31T07:00:14.916Z
  Event: DoRemainingWork
  Actions: 
    CreateTransaction
  Continuation: Resume(result=class java.util.LinkedHashMap)
  Diff between previous and next state:
checkpoint.checkpointState.sessions.SessionId(toLong=-846941239363969924).receivedMessages.isEmpty: 
    false
    true
checkpoint.timestamp: 
    2023-01-31T07:00:14.915Z
    2023-01-31T07:00:14.916Z
isFlowResumed: 
    false
    true


 --- Transition of flow [6a84b95f-9585-4464-b302-dff1b1c96b12] ---
  Timestamp: 2023-01-31T07:00:14.922Z
  Event: Suspend(ioRequest=SendAndReceive({FlowSessionImpl(destination=O=Mock Company 3, L=London, C=GB, sourceSessionId=SessionId(toLong=-846941239363969924))=FlowSessionImpl(destination=O=Mock Company 3, L=London, C=GB, sourceSessionId=SessionId(toLong=-846941239363969924))=4B1B7813D1476BEE8874ECD03EA9C7807871EF639382BBA4AA097BCCA3EDA360}, shouldRetrySend=false), maySkipCheckpoint=false, fiber=921C4D933942AA00C433841E0650463FCA42A7A48A2E0C1D738E20F7CB379F07, currentStep=Starting)
  Actions: 
    PersistCheckpoint(id=[6a84b95f-9585-4464-b302-dff1b1c96b12], checkpoint=Checkpoint(checkpointState=CheckpointState(invocationContext=InvocationContext(origin=RPC(actor=Actor(id=Id(value=Only For Testing), serviceId=AuthServiceId(value=TEST), owningLegalIdentity=O=Mock Company 1, L=London, C=GB)), trace=Trace(invocationId=13121be1-7942-4193-a973-e9f16a3aad92, timestamp: 2023-01-31T07:00:14.594Z, entityType: Invocation, sessionId=13121be1-7942-4193-a973-e9f16a3aad92, timestamp: 2023-01-31T07:00:14.594Z, entityType: Session), actor=Actor(id=Id(value=Only For Testing), serviceId=AuthServiceId(value=TEST), owningLegalIdentity=O=Mock Company 1, L=London, C=GB), externalTrace=null, impersonatedActor=null, arguments=[], clientId=null), ourIdentity=O=Mock Company 1, L=London, C=GB, sessions={SessionId(toLong=-846941239363969924)=Initiated(peerParty=O=Mock Company 3, L=London, C=GB, peerFlowInfo=FlowInfo(flowVersion=1, appName=<unknown>), receivedMessages=[], otherSideErrored=false, peerSinkSessionId=SessionId(toLong=-6111232092193349787), deduplicationSeed=R--846941239363969924--3458992896374643217)}, sessionsToBeClosed=[], subFlowStack=[Initiating(flowClass=class net.corda.samples.obligation.flows.IOUSettleFlow, classToInitiateWith=class net.corda.samples.obligation.flows.IOUSettleFlow, flowInfo=FlowInfo(flowVersion=1, appName=<unknown>), subFlowVersion=CorDappFlow(platformVersion=11, corDappName=workflows-1.0, corDappHash=B699A1A7AEE96EE2270B80DAE7A921F446B5529E562BC1497C4BF0F7569223AA), isEnabledTimedFlow=false), Inlined(flowClass=class net.corda.core.flows.CollectSignatureFlow, subFlowVersion=CoreFlow(platformVersion=11), isEnabledTimedFlow=false), Inlined(flowClass=class net.corda.core.flows.SendTransactionFlow, subFlowVersion=CoreFlow(platformVersion=11), isEnabledTimedFlow=false)], numberOfSuspends=4, numberOfCommits=5), flowState=Started(flowIORequest=SendAndReceive({FlowSessionImpl(destination=O=Mock Company 3, L=London, C=GB, sourceSessionId=SessionId(toLong=-846941239363969924))=FlowSessionImpl(destination=O=Mock Company 3, L=London, C=GB, sourceSessionId=SessionId(toLong=-846941239363969924))=4B1B7813D1476BEE8874ECD03EA9C7807871EF639382BBA4AA097BCCA3EDA360}, shouldRetrySend=false), frozenFiber=921C4D933942AA00C433841E0650463FCA42A7A48A2E0C1D738E20F7CB379F07), errorState=Clean, result=null, status=RUNNABLE, progressStep=Starting, flowIoRequest=SendAndReceive, compatible=true), isCheckpointUpdate=true)
    PersistDeduplicationFacts(deduplicationHandlers=[net.corda.testing.node.internal.MockNodeMessagingService$InMemoryDeduplicationHandler@4438c258, net.corda.testing.node.internal.MockNodeMessagingService$InMemoryDeduplicationHandler@4e6f2dea, net.corda.testing.node.internal.MockNodeMessagingService$InMemoryDeduplicationHandler@2f2798a4])
    CommitTransaction
    AcknowledgeMessages(deduplicationHandlers=[net.corda.testing.node.internal.MockNodeMessagingService$InMemoryDeduplicationHandler@4438c258, net.corda.testing.node.internal.MockNodeMessagingService$InMemoryDeduplicationHandler@4e6f2dea, net.corda.testing.node.internal.MockNodeMessagingService$InMemoryDeduplicationHandler@2f2798a4])
    ScheduleEvent(event=DoRemainingWork)
  Continuation: ProcessEvents
  Diff between previous and next state:
pendingDeduplicationHandlers: 
    [net.corda.testing.node.internal.MockNodeMessagingService$InMemoryDeduplicationHandler@4438c258, net.corda.testing.node.internal.MockNodeMessagingService$InMemoryDeduplicationHandler@4e6f2dea, net.corda.testing.node.internal.MockNodeMessagingService$InMemoryDeduplicationHandler@2f2798a4]
    []
numberOfCommits: 
    4
    5
checkpoint.flowState.flowIORequest: 
    Receive(sessions=[FlowSessionImpl(destination=O=Mock Company 3, L=London, C=GB, sourceSessionId=SessionId(toLong=-846941239363969924))])
    SendAndReceive({FlowSessionImpl(destination=O=Mock Company 3, L=London, C=GB, sourceSessionId=SessionId(toLong=-846941239363969924))=FlowSessionImpl(destination=O=Mock Company 3, L=London, C=GB, sourceSessionId=SessionId(toLong=-846941239363969924))=4B1B7813D1476BEE8874ECD03EA9C7807871EF639382BBA4AA097BCCA3EDA360}, shouldRetrySend=false)
checkpoint.flowState.frozenFiber.hash: 
    8BBF002E883FE0A8121D90F4F14F9E1E7A39871E719748BA95A66828D01C0D42
    921C4D933942AA00C433841E0650463FCA42A7A48A2E0C1D738E20F7CB379F07
checkpoint.checkpointState.numberOfCommits: 
    4
    5
checkpoint.checkpointState.numberOfSuspends: 
    3
    4
checkpoint.timestamp: 
    2023-01-31T07:00:14.916Z
    2023-01-31T07:00:14.920Z
isFlowResumed: 
    true
    false


 --- Transition of flow [6a84b95f-9585-4464-b302-dff1b1c96b12] ---
  Timestamp: 2023-01-31T07:00:14.923Z
  Event: DoRemainingWork
  Actions: 
    SendMultiple(sendInitial=[], sendExisting=[SendExisting(peerParty=O=Mock Company 3, L=London, C=GB, message=ExistingSessionMessage(recipientSessionId=SessionId(toLong=-6111232092193349787), payload=DataSessionMessage(payload=class net.corda.core.serialization.SerializedBytes)), deduplicationId=SenderDeduplicationId(deduplicationId=DeduplicationId(toString=N-R--846941239363969924--3458992896374643217-4-0), senderUUID=fed2a79a-ec55-4f8e-b069-bc5cdd6da91d))])
  Continuation: ProcessEvents
  Diff between previous and next state:
checkpoint.flowState.flowIORequest: 
    SendAndReceive({FlowSessionImpl(destination=O=Mock Company 3, L=London, C=GB, sourceSessionId=SessionId(toLong=-846941239363969924))=FlowSessionImpl(destination=O=Mock Company 3, L=London, C=GB, sourceSessionId=SessionId(toLong=-846941239363969924))=4B1B7813D1476BEE8874ECD03EA9C7807871EF639382BBA4AA097BCCA3EDA360}, shouldRetrySend=false)
    Receive(sessions=[FlowSessionImpl(destination=O=Mock Company 3, L=London, C=GB, sourceSessionId=SessionId(toLong=-846941239363969924))])
checkpoint.timestamp: 
    2023-01-31T07:00:14.920Z
    2023-01-31T07:00:14.922Z


 --- Transition of flow [6a84b95f-9585-4464-b302-dff1b1c96b12] ---
  Timestamp: 2023-01-31T07:00:15.300Z
  Event: DeliverSessionMessage(sessionMessage=ExistingSessionMessage(recipientSessionId=SessionId(toLong=-846941239363969924), payload=DataSessionMessage(payload=class net.corda.core.serialization.SerializedBytes)), deduplicationHandler=net.corda.testing.node.internal.MockNodeMessagingService$InMemoryDeduplicationHandler@7e43d359, sender=O=Mock Company 3, L=London, C=GB)
  Actions: 
    ScheduleEvent(event=DoRemainingWork)
  Continuation: ProcessEvents
  Diff between previous and next state:
pendingDeduplicationHandlers: 
    []
    [net.corda.testing.node.internal.MockNodeMessagingService$InMemoryDeduplicationHandler@7e43d359]
checkpoint.checkpointState.sessions.SessionId(toLong=-846941239363969924).receivedMessages.isEmpty: 
    true
    false
checkpoint.timestamp: 
    2023-01-31T07:00:14.922Z
    2023-01-31T07:00:15.300Z


 --- Transition of flow [6a84b95f-9585-4464-b302-dff1b1c96b12] ---
  Timestamp: 2023-01-31T07:00:15.300Z
  Event: DoRemainingWork
  Actions: 
    CreateTransaction
  Continuation: Resume(result=class java.util.LinkedHashMap)
  Diff between previous and next state:
checkpoint.checkpointState.sessions.SessionId(toLong=-846941239363969924).receivedMessages.isEmpty: 
    false
    true
isFlowResumed: 
    false
    true


 --- Transition of flow [6a84b95f-9585-4464-b302-dff1b1c96b12] ---
  Timestamp: 2023-01-31T07:00:15.300Z
  Event: LeaveSubFlow
  Actions: 
    
  Continuation: ProcessEvents
  Diff between previous and next state:
checkpoint.checkpointState.subFlowStack: 
    [Initiating(flowClass=class net.corda.samples.obligation.flows.IOUSettleFlow, classToInitiateWith=class net.corda.samples.obligation.flows.IOUSettleFlow, flowInfo=FlowInfo(flowVersion=1, appName=<unknown>), subFlowVersion=CorDappFlow(platformVersion=11, corDappName=workflows-1.0, corDappHash=B699A1A7AEE96EE2270B80DAE7A921F446B5529E562BC1497C4BF0F7569223AA), isEnabledTimedFlow=false), Inlined(flowClass=class net.corda.core.flows.CollectSignatureFlow, subFlowVersion=CoreFlow(platformVersion=11), isEnabledTimedFlow=false), Inlined(flowClass=class net.corda.core.flows.SendTransactionFlow, subFlowVersion=CoreFlow(platformVersion=11), isEnabledTimedFlow=false)]
    [Initiating(flowClass=class net.corda.samples.obligation.flows.IOUSettleFlow, classToInitiateWith=class net.corda.samples.obligation.flows.IOUSettleFlow, flowInfo=FlowInfo(flowVersion=1, appName=<unknown>), subFlowVersion=CorDappFlow(platformVersion=11, corDappName=workflows-1.0, corDappHash=B699A1A7AEE96EE2270B80DAE7A921F446B5529E562BC1497C4BF0F7569223AA), isEnabledTimedFlow=false), Inlined(flowClass=class net.corda.core.flows.CollectSignatureFlow, subFlowVersion=CoreFlow(platformVersion=11), isEnabledTimedFlow=false)]


 --- Transition of flow [6a84b95f-9585-4464-b302-dff1b1c96b12] ---
  Timestamp: 2023-01-31T07:00:15.304Z
  Event: Suspend(ioRequest=Send(sessionToMessage={FlowSessionImpl(destination=O=Mock Company 3, L=London, C=GB, sourceSessionId=SessionId(toLong=-846941239363969924))=06B26266643E6DF20F1617B076D5D837601BFCBA2241B7D07F37E91C9253DD79}), maySkipCheckpoint=false, fiber=58E20F2E5FE771AEE330B55B7420F149E4059FDE4170F6DC8CAD4E16331B97C1, currentStep=Starting)
  Actions: 
    PersistCheckpoint(id=[6a84b95f-9585-4464-b302-dff1b1c96b12], checkpoint=Checkpoint(checkpointState=CheckpointState(invocationContext=InvocationContext(origin=RPC(actor=Actor(id=Id(value=Only For Testing), serviceId=AuthServiceId(value=TEST), owningLegalIdentity=O=Mock Company 1, L=London, C=GB)), trace=Trace(invocationId=13121be1-7942-4193-a973-e9f16a3aad92, timestamp: 2023-01-31T07:00:14.594Z, entityType: Invocation, sessionId=13121be1-7942-4193-a973-e9f16a3aad92, timestamp: 2023-01-31T07:00:14.594Z, entityType: Session), actor=Actor(id=Id(value=Only For Testing), serviceId=AuthServiceId(value=TEST), owningLegalIdentity=O=Mock Company 1, L=London, C=GB), externalTrace=null, impersonatedActor=null, arguments=[], clientId=null), ourIdentity=O=Mock Company 1, L=London, C=GB, sessions={SessionId(toLong=-846941239363969924)=Initiated(peerParty=O=Mock Company 3, L=London, C=GB, peerFlowInfo=FlowInfo(flowVersion=1, appName=<unknown>), receivedMessages=[], otherSideErrored=false, peerSinkSessionId=SessionId(toLong=-6111232092193349787), deduplicationSeed=R--846941239363969924--3458992896374643217)}, sessionsToBeClosed=[], subFlowStack=[Initiating(flowClass=class net.corda.samples.obligation.flows.IOUSettleFlow, classToInitiateWith=class net.corda.samples.obligation.flows.IOUSettleFlow, flowInfo=FlowInfo(flowVersion=1, appName=<unknown>), subFlowVersion=CorDappFlow(platformVersion=11, corDappName=workflows-1.0, corDappHash=B699A1A7AEE96EE2270B80DAE7A921F446B5529E562BC1497C4BF0F7569223AA), isEnabledTimedFlow=false), Inlined(flowClass=class net.corda.core.flows.CollectSignatureFlow, subFlowVersion=CoreFlow(platformVersion=11), isEnabledTimedFlow=false)], numberOfSuspends=5, numberOfCommits=6), flowState=Started(flowIORequest=Send(sessionToMessage={FlowSessionImpl(destination=O=Mock Company 3, L=London, C=GB, sourceSessionId=SessionId(toLong=-846941239363969924))=06B26266643E6DF20F1617B076D5D837601BFCBA2241B7D07F37E91C9253DD79}), frozenFiber=58E20F2E5FE771AEE330B55B7420F149E4059FDE4170F6DC8CAD4E16331B97C1), errorState=Clean, result=null, status=RUNNABLE, progressStep=Starting, flowIoRequest=Send, compatible=true), isCheckpointUpdate=true)
    PersistDeduplicationFacts(deduplicationHandlers=[net.corda.testing.node.internal.MockNodeMessagingService$InMemoryDeduplicationHandler@7e43d359])
    CommitTransaction
    AcknowledgeMessages(deduplicationHandlers=[net.corda.testing.node.internal.MockNodeMessagingService$InMemoryDeduplicationHandler@7e43d359])
    ScheduleEvent(event=DoRemainingWork)
  Continuation: ProcessEvents
  Diff between previous and next state:
pendingDeduplicationHandlers: 
    [net.corda.testing.node.internal.MockNodeMessagingService$InMemoryDeduplicationHandler@7e43d359]
    []
numberOfCommits: 
    5
    6
checkpoint.flowIoRequest: 
    SendAndReceive
    Send
checkpoint.flowState.flowIORequest: 
    Receive(sessions=[FlowSessionImpl(destination=O=Mock Company 3, L=London, C=GB, sourceSessionId=SessionId(toLong=-846941239363969924))])
    Send(sessionToMessage={FlowSessionImpl(destination=O=Mock Company 3, L=London, C=GB, sourceSessionId=SessionId(toLong=-846941239363969924))=06B26266643E6DF20F1617B076D5D837601BFCBA2241B7D07F37E91C9253DD79})
checkpoint.flowState.frozenFiber.hash: 
    921C4D933942AA00C433841E0650463FCA42A7A48A2E0C1D738E20F7CB379F07
    58E20F2E5FE771AEE330B55B7420F149E4059FDE4170F6DC8CAD4E16331B97C1
checkpoint.checkpointState.numberOfCommits: 
    5
    6
checkpoint.checkpointState.numberOfSuspends: 
    4
    5
checkpoint.timestamp: 
    2023-01-31T07:00:15.300Z
    2023-01-31T07:00:15.302Z
isFlowResumed: 
    true
    false


 --- Transition of flow [6a84b95f-9585-4464-b302-dff1b1c96b12] ---
  Timestamp: 2023-01-31T07:00:15.304Z
  Event: DoRemainingWork
  Actions: 
    SendMultiple(sendInitial=[], sendExisting=[SendExisting(peerParty=O=Mock Company 3, L=London, C=GB, message=ExistingSessionMessage(recipientSessionId=SessionId(toLong=-6111232092193349787), payload=DataSessionMessage(payload=class net.corda.core.serialization.SerializedBytes)), deduplicationId=SenderDeduplicationId(deduplicationId=DeduplicationId(toString=N-R--846941239363969924--3458992896374643217-5-0), senderUUID=fed2a79a-ec55-4f8e-b069-bc5cdd6da91d))])
    CreateTransaction
  Continuation: Resume(result=class kotlin.Unit)
  Diff between previous and next state:
isFlowResumed: 
    false
    true


 --- Transition of flow [6a84b95f-9585-4464-b302-dff1b1c96b12] ---
  Timestamp: 2023-01-31T07:00:15.307Z
  Event: Suspend(ioRequest=Receive(sessions=[FlowSessionImpl(destination=O=Mock Company 3, L=London, C=GB, sourceSessionId=SessionId(toLong=-846941239363969924))]), maySkipCheckpoint=false, fiber=228F2A710A65624C4985AA6775CDD54794B3C458D04E580DFBDE472C913B30B6, currentStep=Starting)
  Actions: 
    PersistCheckpoint(id=[6a84b95f-9585-4464-b302-dff1b1c96b12], checkpoint=Checkpoint(checkpointState=CheckpointState(invocationContext=InvocationContext(origin=RPC(actor=Actor(id=Id(value=Only For Testing), serviceId=AuthServiceId(value=TEST), owningLegalIdentity=O=Mock Company 1, L=London, C=GB)), trace=Trace(invocationId=13121be1-7942-4193-a973-e9f16a3aad92, timestamp: 2023-01-31T07:00:14.594Z, entityType: Invocation, sessionId=13121be1-7942-4193-a973-e9f16a3aad92, timestamp: 2023-01-31T07:00:14.594Z, entityType: Session), actor=Actor(id=Id(value=Only For Testing), serviceId=AuthServiceId(value=TEST), owningLegalIdentity=O=Mock Company 1, L=London, C=GB), externalTrace=null, impersonatedActor=null, arguments=[], clientId=null), ourIdentity=O=Mock Company 1, L=London, C=GB, sessions={SessionId(toLong=-846941239363969924)=Initiated(peerParty=O=Mock Company 3, L=London, C=GB, peerFlowInfo=FlowInfo(flowVersion=1, appName=<unknown>), receivedMessages=[], otherSideErrored=false, peerSinkSessionId=SessionId(toLong=-6111232092193349787), deduplicationSeed=R--846941239363969924--3458992896374643217)}, sessionsToBeClosed=[], subFlowStack=[Initiating(flowClass=class net.corda.samples.obligation.flows.IOUSettleFlow, classToInitiateWith=class net.corda.samples.obligation.flows.IOUSettleFlow, flowInfo=FlowInfo(flowVersion=1, appName=<unknown>), subFlowVersion=CorDappFlow(platformVersion=11, corDappName=workflows-1.0, corDappHash=B699A1A7AEE96EE2270B80DAE7A921F446B5529E562BC1497C4BF0F7569223AA), isEnabledTimedFlow=false), Inlined(flowClass=class net.corda.core.flows.CollectSignatureFlow, subFlowVersion=CoreFlow(platformVersion=11), isEnabledTimedFlow=false)], numberOfSuspends=6, numberOfCommits=7), flowState=Started(flowIORequest=Receive(sessions=[FlowSessionImpl(destination=O=Mock Company 3, L=London, C=GB, sourceSessionId=SessionId(toLong=-846941239363969924))]), frozenFiber=228F2A710A65624C4985AA6775CDD54794B3C458D04E580DFBDE472C913B30B6), errorState=Clean, result=null, status=RUNNABLE, progressStep=Starting, flowIoRequest=Receive, compatible=true), isCheckpointUpdate=true)
    PersistDeduplicationFacts(deduplicationHandlers=[])
    CommitTransaction
    AcknowledgeMessages(deduplicationHandlers=[])
    ScheduleEvent(event=DoRemainingWork)
  Continuation: ProcessEvents
  Diff between previous and next state:
numberOfCommits: 
    6
    7
checkpoint.flowIoRequest: 
    Send
    Receive
checkpoint.flowState.flowIORequest: 
    Send(sessionToMessage={FlowSessionImpl(destination=O=Mock Company 3, L=London, C=GB, sourceSessionId=SessionId(toLong=-846941239363969924))=06B26266643E6DF20F1617B076D5D837601BFCBA2241B7D07F37E91C9253DD79})
    Receive(sessions=[FlowSessionImpl(destination=O=Mock Company 3, L=London, C=GB, sourceSessionId=SessionId(toLong=-846941239363969924))])
checkpoint.flowState.frozenFiber.hash: 
    58E20F2E5FE771AEE330B55B7420F149E4059FDE4170F6DC8CAD4E16331B97C1
    228F2A710A65624C4985AA6775CDD54794B3C458D04E580DFBDE472C913B30B6
checkpoint.checkpointState.numberOfCommits: 
    6
    7
checkpoint.checkpointState.numberOfSuspends: 
    5
    6
checkpoint.timestamp: 
    2023-01-31T07:00:15.304Z
    2023-01-31T07:00:15.306Z
isFlowResumed: 
    true
    false


 --- Transition of flow [6a84b95f-9585-4464-b302-dff1b1c96b12] ---
  Timestamp: 2023-01-31T07:00:15.308Z
  Event: DoRemainingWork
  Actions: 
    
  Continuation: ProcessEvents
  Diff between previous and next state:
null

 --- Transition of flow [6a84b95f-9585-4464-b302-dff1b1c96b12] ---
  Timestamp: 2023-01-31T07:00:15.325Z
  Event: DeliverSessionMessage(sessionMessage=ExistingSessionMessage(recipientSessionId=SessionId(toLong=-846941239363969924), payload=DataSessionMessage(payload=class net.corda.core.serialization.SerializedBytes)), deduplicationHandler=net.corda.testing.node.internal.MockNodeMessagingService$InMemoryDeduplicationHandler@2b9121dc, sender=O=Mock Company 3, L=London, C=GB)
  Actions: 
    ScheduleEvent(event=DoRemainingWork)
  Continuation: ProcessEvents
  Diff between previous and next state:
pendingDeduplicationHandlers: 
    []
    [net.corda.testing.node.internal.MockNodeMessagingService$InMemoryDeduplicationHandler@2b9121dc]
checkpoint.checkpointState.sessions.SessionId(toLong=-846941239363969924).receivedMessages.isEmpty: 
    true
    false
checkpoint.timestamp: 
    2023-01-31T07:00:15.308Z
    2023-01-31T07:00:15.325Z


 --- Transition of flow [6a84b95f-9585-4464-b302-dff1b1c96b12] ---
  Timestamp: 2023-01-31T07:00:15.325Z
  Event: DoRemainingWork
  Actions: 
    CreateTransaction
  Continuation: Resume(result=class java.util.LinkedHashMap)
  Diff between previous and next state:
checkpoint.checkpointState.sessions.SessionId(toLong=-846941239363969924).receivedMessages.isEmpty: 
    false
    true
isFlowResumed: 
    false
    true


 --- Transition of flow [6a84b95f-9585-4464-b302-dff1b1c96b12] ---
  Timestamp: 2023-01-31T07:00:15.325Z
  Event: LeaveSubFlow
  Actions: 
    
  Continuation: ProcessEvents
  Diff between previous and next state:
checkpoint.checkpointState.subFlowStack: 
    [Initiating(flowClass=class net.corda.samples.obligation.flows.IOUSettleFlow, classToInitiateWith=class net.corda.samples.obligation.flows.IOUSettleFlow, flowInfo=FlowInfo(flowVersion=1, appName=<unknown>), subFlowVersion=CorDappFlow(platformVersion=11, corDappName=workflows-1.0, corDappHash=B699A1A7AEE96EE2270B80DAE7A921F446B5529E562BC1497C4BF0F7569223AA), isEnabledTimedFlow=false), Inlined(flowClass=class net.corda.core.flows.CollectSignatureFlow, subFlowVersion=CoreFlow(platformVersion=11), isEnabledTimedFlow=false)]
    [Initiating(flowClass=class net.corda.samples.obligation.flows.IOUSettleFlow, classToInitiateWith=class net.corda.samples.obligation.flows.IOUSettleFlow, flowInfo=FlowInfo(flowVersion=1, appName=<unknown>), subFlowVersion=CorDappFlow(platformVersion=11, corDappName=workflows-1.0, corDappHash=B699A1A7AEE96EE2270B80DAE7A921F446B5529E562BC1497C4BF0F7569223AA), isEnabledTimedFlow=false)]


 --- Transition of flow [6a84b95f-9585-4464-b302-dff1b1c96b12] ---
  Timestamp: 2023-01-31T07:00:15.325Z
  Event: EnterSubFlow(subFlowClass=class net.corda.core.flows.FinalityFlow, subFlowVersion=CoreFlow(platformVersion=11), isEnabledTimedFlow=false)
  Actions: 
    
  Continuation: ProcessEvents
  Diff between previous and next state:
checkpoint.checkpointState.subFlowStack: 
    [Initiating(flowClass=class net.corda.samples.obligation.flows.IOUSettleFlow, classToInitiateWith=class net.corda.samples.obligation.flows.IOUSettleFlow, flowInfo=FlowInfo(flowVersion=1, appName=<unknown>), subFlowVersion=CorDappFlow(platformVersion=11, corDappName=workflows-1.0, corDappHash=B699A1A7AEE96EE2270B80DAE7A921F446B5529E562BC1497C4BF0F7569223AA), isEnabledTimedFlow=false)]
    [Initiating(flowClass=class net.corda.samples.obligation.flows.IOUSettleFlow, classToInitiateWith=class net.corda.samples.obligation.flows.IOUSettleFlow, flowInfo=FlowInfo(flowVersion=1, appName=<unknown>), subFlowVersion=CorDappFlow(platformVersion=11, corDappName=workflows-1.0, corDappHash=B699A1A7AEE96EE2270B80DAE7A921F446B5529E562BC1497C4BF0F7569223AA), isEnabledTimedFlow=false), Initiating(flowClass=class net.corda.core.flows.FinalityFlow, classToInitiateWith=class net.corda.core.flows.FinalityFlow, flowInfo=FlowInfo(flowVersion=1, appName=corda-core-4.9), subFlowVersion=CoreFlow(platformVersion=11), isEnabledTimedFlow=false)]


 --- Transition of flow [6a84b95f-9585-4464-b302-dff1b1c96b12] ---
  Timestamp: 2023-01-31T07:00:15.334Z
  Event: LeaveSubFlow
  Actions: 
    
  Continuation: ProcessEvents
  Diff between previous and next state:
checkpoint.checkpointState.subFlowStack: 
    [Initiating(flowClass=class net.corda.samples.obligation.flows.IOUSettleFlow, classToInitiateWith=class net.corda.samples.obligation.flows.IOUSettleFlow, flowInfo=FlowInfo(flowVersion=1, appName=<unknown>), subFlowVersion=CorDappFlow(platformVersion=11, corDappName=workflows-1.0, corDappHash=B699A1A7AEE96EE2270B80DAE7A921F446B5529E562BC1497C4BF0F7569223AA), isEnabledTimedFlow=false), Initiating(flowClass=class net.corda.core.flows.FinalityFlow, classToInitiateWith=class net.corda.core.flows.FinalityFlow, flowInfo=FlowInfo(flowVersion=1, appName=corda-core-4.9), subFlowVersion=CoreFlow(platformVersion=11), isEnabledTimedFlow=false)]
    [Initiating(flowClass=class net.corda.samples.obligation.flows.IOUSettleFlow, classToInitiateWith=class net.corda.samples.obligation.flows.IOUSettleFlow, flowInfo=FlowInfo(flowVersion=1, appName=<unknown>), subFlowVersion=CorDappFlow(platformVersion=11, corDappName=workflows-1.0, corDappHash=B699A1A7AEE96EE2270B80DAE7A921F446B5529E562BC1497C4BF0F7569223AA), isEnabledTimedFlow=false)]
checkpoint.timestamp: 
    2023-01-31T07:00:15.325Z
    2023-01-31T07:00:15.334Z


 --- Transition of flow [6a84b95f-9585-4464-b302-dff1b1c96b12] ---
  Timestamp: 2023-01-31T07:00:15.346Z
  Event: Error(exception=java.lang.IllegalArgumentException: Could not find Party for Anonymous(DL6v8GxjNPNZLW4xJ9KP77iSgzgnJKysUbmi5t7ntaxFta), rollback=true)
  Actions: 
    RollbackTransaction
    ScheduleEvent(event=DoRemainingWork)
  Continuation: ProcessEvents
  Diff between previous and next state:
checkpoint.errorState: 
    Clean
    Errored(errors=[FlowError(errorId=3188663995452510243, exception=java.lang.IllegalArgumentException: Could not find Party for Anonymous(DL6v8GxjNPNZLW4xJ9KP77iSgzgnJKysUbmi5t7ntaxFta))], propagatedIndex=0, propagating=false)
checkpoint.timestamp: 
    2023-01-31T07:00:15.334Z
    2023-01-31T07:00:15.337Z
isFlowResumed: 
    true
    false


 --- Transition of flow [6a84b95f-9585-4464-b302-dff1b1c96b12] ---
  Timestamp: 2023-01-31T07:00:15.354Z
  Event: DoRemainingWork
  Actions: 
    
  Continuation: ProcessEvents
  Diff between previous and next state:
null

 --- Transition of flow [6a84b95f-9585-4464-b302-dff1b1c96b12] ---
  Timestamp: 2023-01-31T07:00:15.355Z
  Event: StartErrorPropagation
  Actions: 
    ScheduleEvent(event=DoRemainingWork)
  Continuation: ProcessEvents
  Diff between previous and next state:
checkpoint.errorState.propagating: 
    false
    true
checkpoint.timestamp: 
    2023-01-31T07:00:15.337Z
    2023-01-31T07:00:15.355Z


 --- Transition of flow [6a84b95f-9585-4464-b302-dff1b1c96b12] ---
  Timestamp: 2023-01-31T07:00:15.471Z
  Event: DoRemainingWork
  Actions: 
    PropagateErrors(errorMessages=[ErrorSessionMessage(flowException=null, errorId=3188663995452510243)], sessions=[Initiated(peerParty=O=Mock Company 3, L=London, C=GB, peerFlowInfo=FlowInfo(flowVersion=1, appName=<unknown>), receivedMessages=[], otherSideErrored=false, peerSinkSessionId=SessionId(toLong=-6111232092193349787), deduplicationSeed=R--846941239363969924--3458992896374643217)], senderUUID=fed2a79a-ec55-4f8e-b069-bc5cdd6da91d)
    CreateTransaction
    RemoveCheckpoint(id=[6a84b95f-9585-4464-b302-dff1b1c96b12], mayHavePersistentResults=false)
    PersistDeduplicationFacts(deduplicationHandlers=[net.corda.testing.node.internal.MockNodeMessagingService$InMemoryDeduplicationHandler@2b9121dc])
    ReleaseSoftLocks(uuid=6a84b95f-9585-4464-b302-dff1b1c96b12)
    CommitTransaction
    AcknowledgeMessages(deduplicationHandlers=[net.corda.testing.node.internal.MockNodeMessagingService$InMemoryDeduplicationHandler@2b9121dc])
    RemoveSessionBindings(sessionIds=[SessionId(toLong=-846941239363969924)])
    RemoveFlow(flowId=[6a84b95f-9585-4464-b302-dff1b1c96b12], removalReason=ErrorFinish(flowErrors=[FlowError(errorId=3188663995452510243, exception=java.lang.IllegalArgumentException: Could not find Party for Anonymous(DL6v8GxjNPNZLW4xJ9KP77iSgzgnJKysUbmi5t7ntaxFta))]), lastState=StateMachineState(checkpoint=Checkpoint(checkpointState=CheckpointState(invocationContext=InvocationContext(origin=RPC(actor=Actor(id=Id(value=Only For Testing), serviceId=AuthServiceId(value=TEST), owningLegalIdentity=O=Mock Company 1, L=London, C=GB)), trace=Trace(invocationId=13121be1-7942-4193-a973-e9f16a3aad92, timestamp: 2023-01-31T07:00:14.594Z, entityType: Invocation, sessionId=13121be1-7942-4193-a973-e9f16a3aad92, timestamp: 2023-01-31T07:00:14.594Z, entityType: Session), actor=Actor(id=Id(value=Only For Testing), serviceId=AuthServiceId(value=TEST), owningLegalIdentity=O=Mock Company 1, L=London, C=GB), externalTrace=null, impersonatedActor=null, arguments=[], clientId=null), ourIdentity=O=Mock Company 1, L=London, C=GB, sessions={SessionId(toLong=-846941239363969924)=Initiated(peerParty=O=Mock Company 3, L=London, C=GB, peerFlowInfo=FlowInfo(flowVersion=1, appName=<unknown>), receivedMessages=[], otherSideErrored=false, peerSinkSessionId=SessionId(toLong=-6111232092193349787), deduplicationSeed=R--846941239363969924--3458992896374643217)}, sessionsToBeClosed=[], subFlowStack=[Initiating(flowClass=class net.corda.samples.obligation.flows.IOUSettleFlow, classToInitiateWith=class net.corda.samples.obligation.flows.IOUSettleFlow, flowInfo=FlowInfo(flowVersion=1, appName=<unknown>), subFlowVersion=CorDappFlow(platformVersion=11, corDappName=workflows-1.0, corDappHash=B699A1A7AEE96EE2270B80DAE7A921F446B5529E562BC1497C4BF0F7569223AA), isEnabledTimedFlow=false)], numberOfSuspends=6, numberOfCommits=8), flowState=net.corda.node.services.statemachine.FlowState$Finished@c18d805, errorState=Errored(errors=[FlowError(errorId=3188663995452510243, exception=java.lang.IllegalArgumentException: Could not find Party for Anonymous(DL6v8GxjNPNZLW4xJ9KP77iSgzgnJKysUbmi5t7ntaxFta))], propagatedIndex=0, propagating=true), result=null, status=FAILED, progressStep=Starting, flowIoRequest=Receive, compatible=true), flowLogic=net.corda.samples.obligation.flows.IOUSettleFlow@17a23079, pendingDeduplicationHandlers=[], isFlowResumed=false, isWaitingForFuture=false, future=null, isAnyCheckpointPersisted=true, isStartIdempotent=false, isRemoved=true, isKilled=false, isDead=false, senderUUID=fed2a79a-ec55-4f8e-b069-bc5cdd6da91d, reloadCheckpointAfterSuspendCount=null, numberOfCommits=8, lock=java.util.concurrent.Semaphore@5c41ad12[Permits = 0]))
  Continuation: Abort
  Diff between previous and next state:
pendingDeduplicationHandlers: 
    [net.corda.testing.node.internal.MockNodeMessagingService$InMemoryDeduplicationHandler@2b9121dc]
    []
isRemoved: 
    false
    true
numberOfCommits: 
    7
    8
checkpoint.status: 
    RUNNABLE
    FAILED
checkpoint.flowState: 
    Started(flowIORequest=Receive(sessions=[FlowSessionImpl(destination=O=Mock Company 3, L=London, C=GB, sourceSessionId=SessionId(toLong=-846941239363969924))]), frozenFiber=228F2A710A65624C4985AA6775CDD54794B3C458D04E580DFBDE472C913B30B6)
    net.corda.node.services.statemachine.FlowState$Finished@c18d805
checkpoint.checkpointState.numberOfCommits: 
    7
    8
checkpoint.timestamp: 
    2023-01-31T07:00:15.355Z
    2023-01-31T07:00:15.388Z
 {actor_id=Only For Testing, actor_owning_identity=O=Mock Company 1, L=London, C=GB, actor_store_id=TEST, fiber-id=10000027, flow-id=6a84b95f-9585-4464-b302-dff1b1c96b12, invocation_id=13121be1-7942-4193-a973-e9f16a3aad92, invocation_timestamp=2023-01-31T07:00:14.594Z, origin=Only For Testing, session_id=13121be1-7942-4193-a973-e9f16a3aad92, session_timestamp=2023-01-31T07:00:14.594Z, thread-id=859, tx_id=B8B88DF526D6289A98FCDCC0D0A5BE69453156D8846C61133778E9B0554C8B59}
[WARN ] 2023-01-31T07:00:15,484Z [Mock network] interceptors.DumpHistoryOnErrorInterceptor. - Flow [6a84b95f-9585-4464-b302-dff1b1c96b12] error {actor_id=Only For Testing, actor_owning_identity=O=Mock Company 1, L=London, C=GB, actor_store_id=TEST, fiber-id=10000027, flow-id=6a84b95f-9585-4464-b302-dff1b1c96b12, invocation_id=13121be1-7942-4193-a973-e9f16a3aad92, invocation_timestamp=2023-01-31T07:00:14.594Z, origin=Only For Testing, session_id=13121be1-7942-4193-a973-e9f16a3aad92, session_timestamp=2023-01-31T07:00:14.594Z, thread-id=859, tx_id=B8B88DF526D6289A98FCDCC0D0A5BE69453156D8846C61133778E9B0554C8B59}
java.lang.IllegalArgumentException: Could not find Party for Anonymous(DL6v8GxjNPNZLW4xJ9KP77iSgzgnJKysUbmi5t7ntaxFta)
	at net.corda.core.identity.IdentityUtils.groupAbstractPartyByWellKnownParty(IdentityUtils.kt:47) ~[corda-core-4.9.jar:?]
	at net.corda.core.identity.IdentityUtils.groupAbstractPartyByWellKnownParty(IdentityUtils.kt:63) ~[corda-core-4.9.jar:?]
	at net.corda.core.flows.FinalityFlow.extractExternalParticipants(FinalityFlow.kt:252) ~[corda-core-4.9.jar:?]
	at net.corda.core.flows.FinalityFlow.call(FinalityFlow.kt:162) ~[corda-core-4.9.jar:?]
	at net.corda.core.flows.FinalityFlow.call(FinalityFlow.kt:43) ~[corda-core-4.9.jar:?]
	at net.corda.node.services.statemachine.FlowStateMachineImpl.subFlow(FlowStateMachineImpl.kt:420) ~[corda-node-4.9.jar:?]
	at net.corda.core.flows.FlowLogic.subFlow(FlowLogic.kt:409) ~[corda-core-4.9.jar:?]
	at net.corda.samples.obligation.flows.IOUSettleFlow.call(IOUSettleFlow.kt:116) ~[main/:?]
	at net.corda.samples.obligation.flows.IOUSettleFlow.call(IOUSettleFlow.kt:30) ~[main/:?]
	at net.corda.node.services.statemachine.FlowStateMachineImpl.run(FlowStateMachineImpl.kt:349) ~[corda-node-4.9.jar:?]
	at net.corda.node.services.statemachine.FlowStateMachineImpl.run(FlowStateMachineImpl.kt:71) ~[corda-node-4.9.jar:?]
	at co.paralleluniverse.fibers.Fiber.run1(Fiber.java:1092) ~[quasar-core-0.7.10.jar:0.7.10]
	at co.paralleluniverse.fibers.Fiber.exec(Fiber.java:788) ~[quasar-core-0.7.10.jar:0.7.10]
	at co.paralleluniverse.fibers.RunnableFiberTask.doExec(RunnableFiberTask.java:100) ~[quasar-core-0.7.10.jar:0.7.10]
	at co.paralleluniverse.fibers.RunnableFiberTask.run(RunnableFiberTask.java:91) ~[quasar-core-0.7.10.jar:0.7.10]
	at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511) ~[?:1.8.0_202]
	at java.util.concurrent.FutureTask.run(FutureTask.java:266) ~[?:1.8.0_202]
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.access$201(ScheduledThreadPoolExecutor.java:180) ~[?:1.8.0_202]
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.run(ScheduledThreadPoolExecutor.java:293) ~[?:1.8.0_202]
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149) ~[?:1.8.0_202]
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624) ~[?:1.8.0_202]
	at net.corda.node.utilities.AffinityExecutor$ServiceAffinityExecutor$1$thread$1.run(AffinityExecutor.kt:63) ~[corda-node-4.9.jar:?]
[INFO ] 2023-01-31T07:00:15,486Z [Mock network] corda.flow. - Flow raised an error: Counter-flow errored. Sending it to flow hospital to be triaged. {fiber-id=10000029, flow-id=19d5529e-5027-4fa9-b1fb-f606ce138a0e, invocation_id=ecadbadd-d49d-4516-8b4c-2ec4a2bd801c, invocation_timestamp=2023-01-31T07:00:14.883Z, origin=O=Mock Company 1, L=London, C=GB, session_id=ecadbadd-d49d-4516-8b4c-2ec4a2bd801c, session_timestamp=2023-01-31T07:00:14.883Z, thread-id=859, tx_id=B8B88DF526D6289A98FCDCC0D0A5BE69453156D8846C61133778E9B0554C8B59}
[INFO ] 2023-01-31T07:00:15,487Z [Mock network] statemachine.StaffedFlowHospital. - Flow [19d5529e-5027-4fa9-b1fb-f606ce138a0e] admitted to hospital in state StateMachineState(checkpoint=Checkpoint(checkpointState=CheckpointState(invocationContext=InvocationContext(origin=Peer(party=O=Mock Company 1, L=London, C=GB), trace=Trace(invocationId=ecadbadd-d49d-4516-8b4c-2ec4a2bd801c, timestamp: 2023-01-31T07:00:14.883Z, entityType: Invocation, sessionId=ecadbadd-d49d-4516-8b4c-2ec4a2bd801c, timestamp: 2023-01-31T07:00:14.883Z, entityType: Session), actor=null, externalTrace=null, impersonatedActor=null, arguments=[], clientId=null), ourIdentity=O=Mock Company 3, L=London, C=GB, sessions={SessionId(toLong=-6111232092193349787)=Initiated(peerParty=O=Mock Company 1, L=London, C=GB, peerFlowInfo=FlowInfo(flowVersion=1, appName=<unknown>), receivedMessages=[], otherSideErrored=true, peerSinkSessionId=SessionId(toLong=-846941239363969924), deduplicationSeed=D--846941239363969924--3458992896374643217)}, sessionsToBeClosed=[], subFlowStack=[Inlined(flowClass=class net.corda.samples.obligation.flows.IOUSettleFlowResponder, subFlowVersion=CorDappFlow(platformVersion=11, corDappName=workflows-1.0, corDappHash=B699A1A7AEE96EE2270B80DAE7A921F446B5529E562BC1497C4BF0F7569223AA), isEnabledTimedFlow=false)], numberOfSuspends=7, numberOfCommits=8), flowState=Started(flowIORequest=Receive(sessions=[FlowSessionImpl(destination=O=Mock Company 1, L=London, C=GB, sourceSessionId=SessionId(toLong=-6111232092193349787))]), frozenFiber=E8B9014473032C07EA6B41C9BD0F7757B15F7E9AC8374E9AF7C85904623AC60D), errorState=Clean, result=null, status=RUNNABLE, progressStep=Starting, flowIoRequest=Receive, compatible=true), flowLogic=net.corda.samples.obligation.flows.IOUSettleFlowResponder@2060c030, pendingDeduplicationHandlers=[net.corda.testing.node.internal.MockNodeMessagingService$InMemoryDeduplicationHandler@40087492], isFlowResumed=true, isWaitingForFuture=false, future=null, isAnyCheckpointPersisted=true, isStartIdempotent=false, isRemoved=false, isKilled=false, isDead=false, senderUUID=029259cf-bb6a-44e3-8b88-309bd9c28ecc, reloadCheckpointAfterSuspendCount=null, numberOfCommits=8, lock=java.util.concurrent.Semaphore@51f41ef7[Permits = 0]) {fiber-id=10000029, flow-id=19d5529e-5027-4fa9-b1fb-f606ce138a0e, invocation_id=ecadbadd-d49d-4516-8b4c-2ec4a2bd801c, invocation_timestamp=2023-01-31T07:00:14.883Z, origin=O=Mock Company 1, L=London, C=GB, session_id=ecadbadd-d49d-4516-8b4c-2ec4a2bd801c, session_timestamp=2023-01-31T07:00:14.883Z, thread-id=859, tx_id=B8B88DF526D6289A98FCDCC0D0A5BE69453156D8846C61133778E9B0554C8B59}
[INFO ] 2023-01-31T07:00:15,487Z [Mock network] statemachine.StaffedFlowHospital. - Error 1 of 1: {fiber-id=10000029, flow-id=19d5529e-5027-4fa9-b1fb-f606ce138a0e, invocation_id=ecadbadd-d49d-4516-8b4c-2ec4a2bd801c, invocation_timestamp=2023-01-31T07:00:14.883Z, origin=O=Mock Company 1, L=London, C=GB, session_id=ecadbadd-d49d-4516-8b4c-2ec4a2bd801c, session_timestamp=2023-01-31T07:00:14.883Z, thread-id=859, tx_id=B8B88DF526D6289A98FCDCC0D0A5BE69453156D8846C61133778E9B0554C8B59}
net.corda.core.flows.UnexpectedFlowEndException: Counter-flow errored
	at Received unexpected counter-flow exception from peer O=Mock Company 1, L=London, C=GB.() ~[?:?]
	at net.corda.node.services.statemachine.FlowStateMachineImpl.fillInLocalStackTrace(FlowStateMachineImpl.kt:244) ~[corda-node-4.9.jar:?]
	at net.corda.node.services.statemachine.FlowStateMachineImpl.processEventsUntilFlowIsResumed(FlowStateMachineImpl.kt:225) ~[corda-node-4.9.jar:?]
	at net.corda.node.services.statemachine.FlowStateMachineImpl.suspend(FlowStateMachineImpl.kt:577) ~[corda-node-4.9.jar:?]
	at net.corda.node.services.statemachine.FlowSessionImpl.receive(FlowSessionImpl.kt:67) ~[corda-node-4.9.jar:?]
	at net.corda.node.services.statemachine.FlowSessionImpl.receive(FlowSessionImpl.kt:71) ~[corda-node-4.9.jar:?]
	at net.corda.core.flows.ReceiveTransactionFlow.call(ReceiveTransactionFlow.kt:103) ~[corda-core-4.9.jar:?]
	at net.corda.core.flows.ReceiveTransactionFlow.call(ReceiveTransactionFlow.kt:31) ~[corda-core-4.9.jar:?]
	at net.corda.node.services.statemachine.FlowStateMachineImpl.subFlow(FlowStateMachineImpl.kt:420) ~[corda-node-4.9.jar:?]
	at net.corda.core.flows.FlowLogic.subFlow(FlowLogic.kt:409) ~[corda-core-4.9.jar:?]
	at net.corda.core.flows.ReceiveFinalityFlow.call(FinalityFlow.kt:285) ~[corda-core-4.9.jar:?]
	at net.corda.core.flows.ReceiveFinalityFlow.call(FinalityFlow.kt:280) ~[corda-core-4.9.jar:?]
	at net.corda.node.services.statemachine.FlowStateMachineImpl.subFlow(FlowStateMachineImpl.kt:420) ~[corda-node-4.9.jar:?]
	at net.corda.core.flows.FlowLogic.subFlow(FlowLogic.kt:409) ~[corda-core-4.9.jar:?]
	at net.corda.samples.obligation.flows.IOUSettleFlowResponder.call(IOUSettleFlow.kt:139) ~[main/:?]
	at net.corda.samples.obligation.flows.IOUSettleFlowResponder.call(IOUSettleFlow.kt:126) ~[main/:?]
	at net.corda.node.services.statemachine.FlowStateMachineImpl.run(FlowStateMachineImpl.kt:349) ~[corda-node-4.9.jar:?]
	at net.corda.node.services.statemachine.FlowStateMachineImpl.run(FlowStateMachineImpl.kt:71) ~[corda-node-4.9.jar:?]
	at co.paralleluniverse.fibers.Fiber.run1(Fiber.java:1092) ~[quasar-core-0.7.10.jar:0.7.10]
	at co.paralleluniverse.fibers.Fiber.exec(Fiber.java:788) ~[quasar-core-0.7.10.jar:0.7.10]
	at co.paralleluniverse.fibers.RunnableFiberTask.doExec(RunnableFiberTask.java:100) ~[quasar-core-0.7.10.jar:0.7.10]
	at co.paralleluniverse.fibers.RunnableFiberTask.run(RunnableFiberTask.java:91) ~[quasar-core-0.7.10.jar:0.7.10]
	at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511) ~[?:1.8.0_202]
	at java.util.concurrent.FutureTask.run(FutureTask.java:266) ~[?:1.8.0_202]
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.access$201(ScheduledThreadPoolExecutor.java:180) ~[?:1.8.0_202]
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.run(ScheduledThreadPoolExecutor.java:293) ~[?:1.8.0_202]
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149) ~[?:1.8.0_202]
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624) ~[?:1.8.0_202]
	at net.corda.node.utilities.AffinityExecutor$ServiceAffinityExecutor$1$thread$1.run(AffinityExecutor.kt:63) ~[corda-node-4.9.jar:?]
[INFO ] 2023-01-31T07:00:15,487Z [Mock network] statemachine.StaffedFlowHospital. - Flow error allowed to propagate {fiber-id=10000029, flow-id=19d5529e-5027-4fa9-b1fb-f606ce138a0e, invocation_id=ecadbadd-d49d-4516-8b4c-2ec4a2bd801c, invocation_timestamp=2023-01-31T07:00:14.883Z, origin=O=Mock Company 1, L=London, C=GB, session_id=ecadbadd-d49d-4516-8b4c-2ec4a2bd801c, session_timestamp=2023-01-31T07:00:14.883Z, thread-id=859, tx_id=B8B88DF526D6289A98FCDCC0D0A5BE69453156D8846C61133778E9B0554C8B59}
net.corda.core.flows.UnexpectedFlowEndException: Counter-flow errored
	at Received unexpected counter-flow exception from peer O=Mock Company 1, L=London, C=GB.() ~[?:?]
	at net.corda.node.services.statemachine.FlowStateMachineImpl.fillInLocalStackTrace(FlowStateMachineImpl.kt:244) ~[corda-node-4.9.jar:?]
	at net.corda.node.services.statemachine.FlowStateMachineImpl.processEventsUntilFlowIsResumed(FlowStateMachineImpl.kt:225) ~[corda-node-4.9.jar:?]
	at net.corda.node.services.statemachine.FlowStateMachineImpl.suspend(FlowStateMachineImpl.kt:577) ~[corda-node-4.9.jar:?]
	at net.corda.node.services.statemachine.FlowSessionImpl.receive(FlowSessionImpl.kt:67) ~[corda-node-4.9.jar:?]
	at net.corda.node.services.statemachine.FlowSessionImpl.receive(FlowSessionImpl.kt:71) ~[corda-node-4.9.jar:?]
	at net.corda.core.flows.ReceiveTransactionFlow.call(ReceiveTransactionFlow.kt:103) ~[corda-core-4.9.jar:?]
	at net.corda.core.flows.ReceiveTransactionFlow.call(ReceiveTransactionFlow.kt:31) ~[corda-core-4.9.jar:?]
	at net.corda.node.services.statemachine.FlowStateMachineImpl.subFlow(FlowStateMachineImpl.kt:420) ~[corda-node-4.9.jar:?]
	at net.corda.core.flows.FlowLogic.subFlow(FlowLogic.kt:409) ~[corda-core-4.9.jar:?]
	at net.corda.core.flows.ReceiveFinalityFlow.call(FinalityFlow.kt:285) ~[corda-core-4.9.jar:?]
	at net.corda.core.flows.ReceiveFinalityFlow.call(FinalityFlow.kt:280) ~[corda-core-4.9.jar:?]
	at net.corda.node.services.statemachine.FlowStateMachineImpl.subFlow(FlowStateMachineImpl.kt:420) ~[corda-node-4.9.jar:?]
	at net.corda.core.flows.FlowLogic.subFlow(FlowLogic.kt:409) ~[corda-core-4.9.jar:?]
	at net.corda.samples.obligation.flows.IOUSettleFlowResponder.call(IOUSettleFlow.kt:139) ~[main/:?]
	at net.corda.samples.obligation.flows.IOUSettleFlowResponder.call(IOUSettleFlow.kt:126) ~[main/:?]
	at net.corda.node.services.statemachine.FlowStateMachineImpl.run(FlowStateMachineImpl.kt:349) ~[corda-node-4.9.jar:?]
	at net.corda.node.services.statemachine.FlowStateMachineImpl.run(FlowStateMachineImpl.kt:71) ~[corda-node-4.9.jar:?]
	at co.paralleluniverse.fibers.Fiber.run1(Fiber.java:1092) ~[quasar-core-0.7.10.jar:0.7.10]
	at co.paralleluniverse.fibers.Fiber.exec(Fiber.java:788) ~[quasar-core-0.7.10.jar:0.7.10]
	at co.paralleluniverse.fibers.RunnableFiberTask.doExec(RunnableFiberTask.java:100) ~[quasar-core-0.7.10.jar:0.7.10]
	at co.paralleluniverse.fibers.RunnableFiberTask.run(RunnableFiberTask.java:91) ~[quasar-core-0.7.10.jar:0.7.10]
	at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511) ~[?:1.8.0_202]
	at java.util.concurrent.FutureTask.run(FutureTask.java:266) ~[?:1.8.0_202]
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.access$201(ScheduledThreadPoolExecutor.java:180) ~[?:1.8.0_202]
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.run(ScheduledThreadPoolExecutor.java:293) ~[?:1.8.0_202]
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149) ~[?:1.8.0_202]
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624) ~[?:1.8.0_202]
	at net.corda.node.utilities.AffinityExecutor$ServiceAffinityExecutor$1$thread$1.run(AffinityExecutor.kt:63) ~[corda-node-4.9.jar:?]
[WARN ] 2023-01-31T07:00:15,505Z [Mock network] interceptors.DumpHistoryOnErrorInterceptor. - Flow [19d5529e-5027-4fa9-b1fb-f606ce138a0e] errored, dumping all transitions:

 --- Transition of flow [19d5529e-5027-4fa9-b1fb-f606ce138a0e] ---
  Timestamp: 2023-01-31T07:00:14.886Z
  Event: DoRemainingWork
  Actions: 
    CreateTransaction
    PersistCheckpoint(id=[19d5529e-5027-4fa9-b1fb-f606ce138a0e], checkpoint=Checkpoint(checkpointState=CheckpointState(invocationContext=InvocationContext(origin=Peer(party=O=Mock Company 1, L=London, C=GB), trace=Trace(invocationId=ecadbadd-d49d-4516-8b4c-2ec4a2bd801c, timestamp: 2023-01-31T07:00:14.883Z, entityType: Invocation, sessionId=ecadbadd-d49d-4516-8b4c-2ec4a2bd801c, timestamp: 2023-01-31T07:00:14.883Z, entityType: Session), actor=null, externalTrace=null, impersonatedActor=null, arguments=[], clientId=null), ourIdentity=O=Mock Company 3, L=London, C=GB, sessions={}, sessionsToBeClosed=[], subFlowStack=[Inlined(flowClass=class net.corda.samples.obligation.flows.IOUSettleFlowResponder, subFlowVersion=CorDappFlow(platformVersion=11, corDappName=workflows-1.0, corDappHash=B699A1A7AEE96EE2270B80DAE7A921F446B5529E562BC1497C4BF0F7569223AA), isEnabledTimedFlow=false)], numberOfSuspends=0, numberOfCommits=1), flowState=Unstarted(flowStart=Initiated, frozenFlowLogic=E047B9EA62D845F27DB075BD000524C2DD35738B4D70ED6E21FC0DBD904E71C1), errorState=Clean, result=null, status=RUNNABLE, progressStep=null, flowIoRequest=null, compatible=true), isCheckpointUpdate=false)
    PersistDeduplicationFacts(deduplicationHandlers=[net.corda.testing.node.internal.MockNodeMessagingService$InMemoryDeduplicationHandler@349877ca])
    CommitTransaction
    AcknowledgeMessages(deduplicationHandlers=[net.corda.testing.node.internal.MockNodeMessagingService$InMemoryDeduplicationHandler@349877ca])
    SignalFlowHasStarted(flowId=[19d5529e-5027-4fa9-b1fb-f606ce138a0e])
    SendExisting(peerParty=O=Mock Company 1, L=London, C=GB, message=ExistingSessionMessage(recipientSessionId=SessionId(toLong=-846941239363969924), payload=ConfirmSessionMessage(initiatedSessionId=SessionId(toLong=-6111232092193349787), initiatedFlowInfo=FlowInfo(flowVersion=1, appName=<unknown>))), deduplicationId=SenderDeduplicationId(deduplicationId=DeduplicationId(toString=N-D--846941239363969924--3458992896374643217-0-0), senderUUID=029259cf-bb6a-44e3-8b88-309bd9c28ecc))
    CreateTransaction
  Continuation: Resume(result=null)
  Diff between previous and next state:
pendingDeduplicationHandlers: 
    [net.corda.testing.node.internal.MockNodeMessagingService$InMemoryDeduplicationHandler@349877ca]
    []
isAnyCheckpointPersisted: 
    false
    true
checkpoint.checkpointState.sessions.SessionId(toLong=-6111232092193349787): 
    null
    Initiated(peerParty=O=Mock Company 1, L=London, C=GB, peerFlowInfo=FlowInfo(flowVersion=1, appName=<unknown>), receivedMessages=[DataSessionMessage(payload=class net.corda.core.serialization.SerializedBytes)], otherSideErrored=false, peerSinkSessionId=SessionId(toLong=-846941239363969924), deduplicationSeed=D--846941239363969924--3458992896374643217)
isFlowResumed: 
    false
    true


 --- Transition of flow [19d5529e-5027-4fa9-b1fb-f606ce138a0e] ---
  Timestamp: 2023-01-31T07:00:14.888Z
  Event: EnterSubFlow(subFlowClass=class net.corda.samples.obligation.flows.IOUSettleFlowResponder$call$signedTransactionFlow$1, subFlowVersion=CoreFlow(platformVersion=11), isEnabledTimedFlow=false)
  Actions: 
    
  Continuation: ProcessEvents
  Diff between previous and next state:
checkpoint.checkpointState.subFlowStack: 
    [Inlined(flowClass=class net.corda.samples.obligation.flows.IOUSettleFlowResponder, subFlowVersion=CorDappFlow(platformVersion=11, corDappName=workflows-1.0, corDappHash=B699A1A7AEE96EE2270B80DAE7A921F446B5529E562BC1497C4BF0F7569223AA), isEnabledTimedFlow=false)]
    [Inlined(flowClass=class net.corda.samples.obligation.flows.IOUSettleFlowResponder, subFlowVersion=CorDappFlow(platformVersion=11, corDappName=workflows-1.0, corDappHash=B699A1A7AEE96EE2270B80DAE7A921F446B5529E562BC1497C4BF0F7569223AA), isEnabledTimedFlow=false), Inlined(flowClass=class net.corda.samples.obligation.flows.IOUSettleFlowResponder$call$signedTransactionFlow$1, subFlowVersion=CoreFlow(platformVersion=11), isEnabledTimedFlow=false)]
checkpoint.timestamp: 
    2023-01-31T07:00:14.884Z
    2023-01-31T07:00:14.888Z


 --- Transition of flow [19d5529e-5027-4fa9-b1fb-f606ce138a0e] ---
  Timestamp: 2023-01-31T07:00:14.888Z
  Event: EnterSubFlow(subFlowClass=class net.corda.core.flows.ReceiveTransactionFlow, subFlowVersion=CoreFlow(platformVersion=11), isEnabledTimedFlow=false)
  Actions: 
    
  Continuation: ProcessEvents
  Diff between previous and next state:
checkpoint.checkpointState.subFlowStack: 
    [Inlined(flowClass=class net.corda.samples.obligation.flows.IOUSettleFlowResponder, subFlowVersion=CorDappFlow(platformVersion=11, corDappName=workflows-1.0, corDappHash=B699A1A7AEE96EE2270B80DAE7A921F446B5529E562BC1497C4BF0F7569223AA), isEnabledTimedFlow=false), Inlined(flowClass=class net.corda.samples.obligation.flows.IOUSettleFlowResponder$call$signedTransactionFlow$1, subFlowVersion=CoreFlow(platformVersion=11), isEnabledTimedFlow=false)]
    [Inlined(flowClass=class net.corda.samples.obligation.flows.IOUSettleFlowResponder, subFlowVersion=CorDappFlow(platformVersion=11, corDappName=workflows-1.0, corDappHash=B699A1A7AEE96EE2270B80DAE7A921F446B5529E562BC1497C4BF0F7569223AA), isEnabledTimedFlow=false), Inlined(flowClass=class net.corda.samples.obligation.flows.IOUSettleFlowResponder$call$signedTransactionFlow$1, subFlowVersion=CoreFlow(platformVersion=11), isEnabledTimedFlow=false), Inlined(flowClass=class net.corda.core.flows.ReceiveTransactionFlow, subFlowVersion=CoreFlow(platformVersion=11), isEnabledTimedFlow=false)]


 --- Transition of flow [19d5529e-5027-4fa9-b1fb-f606ce138a0e] ---
  Timestamp: 2023-01-31T07:00:14.892Z
  Event: Suspend(ioRequest=Receive(sessions=[FlowSessionImpl(destination=O=Mock Company 1, L=London, C=GB, sourceSessionId=SessionId(toLong=-6111232092193349787))]), maySkipCheckpoint=false, fiber=342A7BE535909EDDBDE82CF63B3921E42B2D1CA1416744C8742642BBBD6CE9F8, currentStep=Starting)
  Actions: 
    PersistCheckpoint(id=[19d5529e-5027-4fa9-b1fb-f606ce138a0e], checkpoint=Checkpoint(checkpointState=CheckpointState(invocationContext=InvocationContext(origin=Peer(party=O=Mock Company 1, L=London, C=GB), trace=Trace(invocationId=ecadbadd-d49d-4516-8b4c-2ec4a2bd801c, timestamp: 2023-01-31T07:00:14.883Z, entityType: Invocation, sessionId=ecadbadd-d49d-4516-8b4c-2ec4a2bd801c, timestamp: 2023-01-31T07:00:14.883Z, entityType: Session), actor=null, externalTrace=null, impersonatedActor=null, arguments=[], clientId=null), ourIdentity=O=Mock Company 3, L=London, C=GB, sessions={SessionId(toLong=-6111232092193349787)=Initiated(peerParty=O=Mock Company 1, L=London, C=GB, peerFlowInfo=FlowInfo(flowVersion=1, appName=<unknown>), receivedMessages=[DataSessionMessage(payload=class net.corda.core.serialization.SerializedBytes)], otherSideErrored=false, peerSinkSessionId=SessionId(toLong=-846941239363969924), deduplicationSeed=D--846941239363969924--3458992896374643217)}, sessionsToBeClosed=[], subFlowStack=[Inlined(flowClass=class net.corda.samples.obligation.flows.IOUSettleFlowResponder, subFlowVersion=CorDappFlow(platformVersion=11, corDappName=workflows-1.0, corDappHash=B699A1A7AEE96EE2270B80DAE7A921F446B5529E562BC1497C4BF0F7569223AA), isEnabledTimedFlow=false), Inlined(flowClass=class net.corda.samples.obligation.flows.IOUSettleFlowResponder$call$signedTransactionFlow$1, subFlowVersion=CoreFlow(platformVersion=11), isEnabledTimedFlow=false), Inlined(flowClass=class net.corda.core.flows.ReceiveTransactionFlow, subFlowVersion=CoreFlow(platformVersion=11), isEnabledTimedFlow=false)], numberOfSuspends=1, numberOfCommits=2), flowState=Started(flowIORequest=Receive(sessions=[FlowSessionImpl(destination=O=Mock Company 1, L=London, C=GB, sourceSessionId=SessionId(toLong=-6111232092193349787))]), frozenFiber=342A7BE535909EDDBDE82CF63B3921E42B2D1CA1416744C8742642BBBD6CE9F8), errorState=Clean, result=null, status=RUNNABLE, progressStep=Starting, flowIoRequest=Receive, compatible=true), isCheckpointUpdate=true)
    PersistDeduplicationFacts(deduplicationHandlers=[])
    CommitTransaction
    AcknowledgeMessages(deduplicationHandlers=[])
    ScheduleEvent(event=DoRemainingWork)
  Continuation: ProcessEvents
  Diff between previous and next state:
numberOfCommits: 
    0
    2
checkpoint.flowIoRequest: 
    null
    Receive
checkpoint.flowState: 
    Unstarted(flowStart=Initiated, frozenFlowLogic=E047B9EA62D845F27DB075BD000524C2DD35738B4D70ED6E21FC0DBD904E71C1)
    Started(flowIORequest=Receive(sessions=[FlowSessionImpl(destination=O=Mock Company 1, L=London, C=GB, sourceSessionId=SessionId(toLong=-6111232092193349787))]), frozenFiber=342A7BE535909EDDBDE82CF63B3921E42B2D1CA1416744C8742642BBBD6CE9F8)
checkpoint.checkpointState.numberOfCommits: 
    1
    2
checkpoint.checkpointState.numberOfSuspends: 
    0
    1
checkpoint.progressStep: 
    null
    Starting
checkpoint.timestamp: 
    2023-01-31T07:00:14.888Z
    2023-01-31T07:00:14.890Z
isFlowResumed: 
    true
    false


 --- Transition of flow [19d5529e-5027-4fa9-b1fb-f606ce138a0e] ---
  Timestamp: 2023-01-31T07:00:14.893Z
  Event: DoRemainingWork
  Actions: 
    CreateTransaction
  Continuation: Resume(result=class java.util.LinkedHashMap)
  Diff between previous and next state:
checkpoint.checkpointState.sessions.SessionId(toLong=-6111232092193349787).receivedMessages.isEmpty: 
    false
    true
checkpoint.timestamp: 
    2023-01-31T07:00:14.890Z
    2023-01-31T07:00:14.893Z
isFlowResumed: 
    false
    true


 --- Transition of flow [19d5529e-5027-4fa9-b1fb-f606ce138a0e] ---
  Timestamp: 2023-01-31T07:00:14.900Z
  Event: EnterSubFlow(subFlowClass=class net.corda.core.internal.ResolveTransactionsFlow, subFlowVersion=CoreFlow(platformVersion=11), isEnabledTimedFlow=false)
  Actions: 
    
  Continuation: ProcessEvents
  Diff between previous and next state:
checkpoint.checkpointState.subFlowStack: 
    [Inlined(flowClass=class net.corda.samples.obligation.flows.IOUSettleFlowResponder, subFlowVersion=CorDappFlow(platformVersion=11, corDappName=workflows-1.0, corDappHash=B699A1A7AEE96EE2270B80DAE7A921F446B5529E562BC1497C4BF0F7569223AA), isEnabledTimedFlow=false), Inlined(flowClass=class net.corda.samples.obligation.flows.IOUSettleFlowResponder$call$signedTransactionFlow$1, subFlowVersion=CoreFlow(platformVersion=11), isEnabledTimedFlow=false), Inlined(flowClass=class net.corda.core.flows.ReceiveTransactionFlow, subFlowVersion=CoreFlow(platformVersion=11), isEnabledTimedFlow=false)]
    [Inlined(flowClass=class net.corda.samples.obligation.flows.IOUSettleFlowResponder, subFlowVersion=CorDappFlow(platformVersion=11, corDappName=workflows-1.0, corDappHash=B699A1A7AEE96EE2270B80DAE7A921F446B5529E562BC1497C4BF0F7569223AA), isEnabledTimedFlow=false), Inlined(flowClass=class net.corda.samples.obligation.flows.IOUSettleFlowResponder$call$signedTransactionFlow$1, subFlowVersion=CoreFlow(platformVersion=11), isEnabledTimedFlow=false), Inlined(flowClass=class net.corda.core.flows.ReceiveTransactionFlow, subFlowVersion=CoreFlow(platformVersion=11), isEnabledTimedFlow=false), Inlined(flowClass=class net.corda.core.internal.ResolveTransactionsFlow, subFlowVersion=CoreFlow(platformVersion=11), isEnabledTimedFlow=false)]
checkpoint.timestamp: 
    2023-01-31T07:00:14.893Z
    2023-01-31T07:00:14.895Z


 --- Transition of flow [19d5529e-5027-4fa9-b1fb-f606ce138a0e] ---
  Timestamp: 2023-01-31T07:00:14.901Z
  Event: EnterSubFlow(subFlowClass=class net.corda.core.internal.FetchAttachmentsFlow, subFlowVersion=CoreFlow(platformVersion=11), isEnabledTimedFlow=false)
  Actions: 
    
  Continuation: ProcessEvents
  Diff between previous and next state:
checkpoint.checkpointState.subFlowStack: 
    [Inlined(flowClass=class net.corda.samples.obligation.flows.IOUSettleFlowResponder, subFlowVersion=CorDappFlow(platformVersion=11, corDappName=workflows-1.0, corDappHash=B699A1A7AEE96EE2270B80DAE7A921F446B5529E562BC1497C4BF0F7569223AA), isEnabledTimedFlow=false), Inlined(flowClass=class net.corda.samples.obligation.flows.IOUSettleFlowResponder$call$signedTransactionFlow$1, subFlowVersion=CoreFlow(platformVersion=11), isEnabledTimedFlow=false), Inlined(flowClass=class net.corda.core.flows.ReceiveTransactionFlow, subFlowVersion=CoreFlow(platformVersion=11), isEnabledTimedFlow=false), Inlined(flowClass=class net.corda.core.internal.ResolveTransactionsFlow, subFlowVersion=CoreFlow(platformVersion=11), isEnabledTimedFlow=false)]
    [Inlined(flowClass=class net.corda.samples.obligation.flows.IOUSettleFlowResponder, subFlowVersion=CorDappFlow(platformVersion=11, corDappName=workflows-1.0, corDappHash=B699A1A7AEE96EE2270B80DAE7A921F446B5529E562BC1497C4BF0F7569223AA), isEnabledTimedFlow=false), Inlined(flowClass=class net.corda.samples.obligation.flows.IOUSettleFlowResponder$call$signedTransactionFlow$1, subFlowVersion=CoreFlow(platformVersion=11), isEnabledTimedFlow=false), Inlined(flowClass=class net.corda.core.flows.ReceiveTransactionFlow, subFlowVersion=CoreFlow(platformVersion=11), isEnabledTimedFlow=false), Inlined(flowClass=class net.corda.core.internal.ResolveTransactionsFlow, subFlowVersion=CoreFlow(platformVersion=11), isEnabledTimedFlow=false), Inlined(flowClass=class net.corda.core.internal.FetchAttachmentsFlow, subFlowVersion=CoreFlow(platformVersion=11), isEnabledTimedFlow=false)]
checkpoint.timestamp: 
    2023-01-31T07:00:14.895Z
    2023-01-31T07:00:14.901Z


 --- Transition of flow [19d5529e-5027-4fa9-b1fb-f606ce138a0e] ---
  Timestamp: 2023-01-31T07:00:14.903Z
  Event: LeaveSubFlow
  Actions: 
    
  Continuation: ProcessEvents
  Diff between previous and next state:
checkpoint.checkpointState.subFlowStack: 
    [Inlined(flowClass=class net.corda.samples.obligation.flows.IOUSettleFlowResponder, subFlowVersion=CorDappFlow(platformVersion=11, corDappName=workflows-1.0, corDappHash=B699A1A7AEE96EE2270B80DAE7A921F446B5529E562BC1497C4BF0F7569223AA), isEnabledTimedFlow=false), Inlined(flowClass=class net.corda.samples.obligation.flows.IOUSettleFlowResponder$call$signedTransactionFlow$1, subFlowVersion=CoreFlow(platformVersion=11), isEnabledTimedFlow=false), Inlined(flowClass=class net.corda.core.flows.ReceiveTransactionFlow, subFlowVersion=CoreFlow(platformVersion=11), isEnabledTimedFlow=false), Inlined(flowClass=class net.corda.core.internal.ResolveTransactionsFlow, subFlowVersion=CoreFlow(platformVersion=11), isEnabledTimedFlow=false), Inlined(flowClass=class net.corda.core.internal.FetchAttachmentsFlow, subFlowVersion=CoreFlow(platformVersion=11), isEnabledTimedFlow=false)]
    [Inlined(flowClass=class net.corda.samples.obligation.flows.IOUSettleFlowResponder, subFlowVersion=CorDappFlow(platformVersion=11, corDappName=workflows-1.0, corDappHash=B699A1A7AEE96EE2270B80DAE7A921F446B5529E562BC1497C4BF0F7569223AA), isEnabledTimedFlow=false), Inlined(flowClass=class net.corda.samples.obligation.flows.IOUSettleFlowResponder$call$signedTransactionFlow$1, subFlowVersion=CoreFlow(platformVersion=11), isEnabledTimedFlow=false), Inlined(flowClass=class net.corda.core.flows.ReceiveTransactionFlow, subFlowVersion=CoreFlow(platformVersion=11), isEnabledTimedFlow=false), Inlined(flowClass=class net.corda.core.internal.ResolveTransactionsFlow, subFlowVersion=CoreFlow(platformVersion=11), isEnabledTimedFlow=false)]
checkpoint.timestamp: 
    2023-01-31T07:00:14.901Z
    2023-01-31T07:00:14.903Z


 --- Transition of flow [19d5529e-5027-4fa9-b1fb-f606ce138a0e] ---
  Timestamp: 2023-01-31T07:00:14.903Z
  Event: EnterSubFlow(subFlowClass=class net.corda.core.internal.FetchNetworkParametersFlow, subFlowVersion=CoreFlow(platformVersion=11), isEnabledTimedFlow=false)
  Actions: 
    
  Continuation: ProcessEvents
  Diff between previous and next state:
checkpoint.checkpointState.subFlowStack: 
    [Inlined(flowClass=class net.corda.samples.obligation.flows.IOUSettleFlowResponder, subFlowVersion=CorDappFlow(platformVersion=11, corDappName=workflows-1.0, corDappHash=B699A1A7AEE96EE2270B80DAE7A921F446B5529E562BC1497C4BF0F7569223AA), isEnabledTimedFlow=false), Inlined(flowClass=class net.corda.samples.obligation.flows.IOUSettleFlowResponder$call$signedTransactionFlow$1, subFlowVersion=CoreFlow(platformVersion=11), isEnabledTimedFlow=false), Inlined(flowClass=class net.corda.core.flows.ReceiveTransactionFlow, subFlowVersion=CoreFlow(platformVersion=11), isEnabledTimedFlow=false), Inlined(flowClass=class net.corda.core.internal.ResolveTransactionsFlow, subFlowVersion=CoreFlow(platformVersion=11), isEnabledTimedFlow=false)]
    [Inlined(flowClass=class net.corda.samples.obligation.flows.IOUSettleFlowResponder, subFlowVersion=CorDappFlow(platformVersion=11, corDappName=workflows-1.0, corDappHash=B699A1A7AEE96EE2270B80DAE7A921F446B5529E562BC1497C4BF0F7569223AA), isEnabledTimedFlow=false), Inlined(flowClass=class net.corda.samples.obligation.flows.IOUSettleFlowResponder$call$signedTransactionFlow$1, subFlowVersion=CoreFlow(platformVersion=11), isEnabledTimedFlow=false), Inlined(flowClass=class net.corda.core.flows.ReceiveTransactionFlow, subFlowVersion=CoreFlow(platformVersion=11), isEnabledTimedFlow=false), Inlined(flowClass=class net.corda.core.internal.ResolveTransactionsFlow, subFlowVersion=CoreFlow(platformVersion=11), isEnabledTimedFlow=false), Inlined(flowClass=class net.corda.core.internal.FetchNetworkParametersFlow, subFlowVersion=CoreFlow(platformVersion=11), isEnabledTimedFlow=false)]


 --- Transition of flow [19d5529e-5027-4fa9-b1fb-f606ce138a0e] ---
  Timestamp: 2023-01-31T07:00:14.904Z
  Event: LeaveSubFlow
  Actions: 
    
  Continuation: ProcessEvents
  Diff between previous and next state:
checkpoint.checkpointState.subFlowStack: 
    [Inlined(flowClass=class net.corda.samples.obligation.flows.IOUSettleFlowResponder, subFlowVersion=CorDappFlow(platformVersion=11, corDappName=workflows-1.0, corDappHash=B699A1A7AEE96EE2270B80DAE7A921F446B5529E562BC1497C4BF0F7569223AA), isEnabledTimedFlow=false), Inlined(flowClass=class net.corda.samples.obligation.flows.IOUSettleFlowResponder$call$signedTransactionFlow$1, subFlowVersion=CoreFlow(platformVersion=11), isEnabledTimedFlow=false), Inlined(flowClass=class net.corda.core.flows.ReceiveTransactionFlow, subFlowVersion=CoreFlow(platformVersion=11), isEnabledTimedFlow=false), Inlined(flowClass=class net.corda.core.internal.ResolveTransactionsFlow, subFlowVersion=CoreFlow(platformVersion=11), isEnabledTimedFlow=false), Inlined(flowClass=class net.corda.core.internal.FetchNetworkParametersFlow, subFlowVersion=CoreFlow(platformVersion=11), isEnabledTimedFlow=false)]
    [Inlined(flowClass=class net.corda.samples.obligation.flows.IOUSettleFlowResponder, subFlowVersion=CorDappFlow(platformVersion=11, corDappName=workflows-1.0, corDappHash=B699A1A7AEE96EE2270B80DAE7A921F446B5529E562BC1497C4BF0F7569223AA), isEnabledTimedFlow=false), Inlined(flowClass=class net.corda.samples.obligation.flows.IOUSettleFlowResponder$call$signedTransactionFlow$1, subFlowVersion=CoreFlow(platformVersion=11), isEnabledTimedFlow=false), Inlined(flowClass=class net.corda.core.flows.ReceiveTransactionFlow, subFlowVersion=CoreFlow(platformVersion=11), isEnabledTimedFlow=false), Inlined(flowClass=class net.corda.core.internal.ResolveTransactionsFlow, subFlowVersion=CoreFlow(platformVersion=11), isEnabledTimedFlow=false)]
checkpoint.timestamp: 
    2023-01-31T07:00:14.903Z
    2023-01-31T07:00:14.904Z


 --- Transition of flow [19d5529e-5027-4fa9-b1fb-f606ce138a0e] ---
  Timestamp: 2023-01-31T07:00:14.904Z
  Event: EnterSubFlow(subFlowClass=class net.corda.core.internal.FetchTransactionsFlow, subFlowVersion=CoreFlow(platformVersion=11), isEnabledTimedFlow=false)
  Actions: 
    
  Continuation: ProcessEvents
  Diff between previous and next state:
checkpoint.checkpointState.subFlowStack: 
    [Inlined(flowClass=class net.corda.samples.obligation.flows.IOUSettleFlowResponder, subFlowVersion=CorDappFlow(platformVersion=11, corDappName=workflows-1.0, corDappHash=B699A1A7AEE96EE2270B80DAE7A921F446B5529E562BC1497C4BF0F7569223AA), isEnabledTimedFlow=false), Inlined(flowClass=class net.corda.samples.obligation.flows.IOUSettleFlowResponder$call$signedTransactionFlow$1, subFlowVersion=CoreFlow(platformVersion=11), isEnabledTimedFlow=false), Inlined(flowClass=class net.corda.core.flows.ReceiveTransactionFlow, subFlowVersion=CoreFlow(platformVersion=11), isEnabledTimedFlow=false), Inlined(flowClass=class net.corda.core.internal.ResolveTransactionsFlow, subFlowVersion=CoreFlow(platformVersion=11), isEnabledTimedFlow=false)]
    [Inlined(flowClass=class net.corda.samples.obligation.flows.IOUSettleFlowResponder, subFlowVersion=CorDappFlow(platformVersion=11, corDappName=workflows-1.0, corDappHash=B699A1A7AEE96EE2270B80DAE7A921F446B5529E562BC1497C4BF0F7569223AA), isEnabledTimedFlow=false), Inlined(flowClass=class net.corda.samples.obligation.flows.IOUSettleFlowResponder$call$signedTransactionFlow$1, subFlowVersion=CoreFlow(platformVersion=11), isEnabledTimedFlow=false), Inlined(flowClass=class net.corda.core.flows.ReceiveTransactionFlow, subFlowVersion=CoreFlow(platformVersion=11), isEnabledTimedFlow=false), Inlined(flowClass=class net.corda.core.internal.ResolveTransactionsFlow, subFlowVersion=CoreFlow(platformVersion=11), isEnabledTimedFlow=false), Inlined(flowClass=class net.corda.core.internal.FetchTransactionsFlow, subFlowVersion=CoreFlow(platformVersion=11), isEnabledTimedFlow=false)]


 --- Transition of flow [19d5529e-5027-4fa9-b1fb-f606ce138a0e] ---
  Timestamp: 2023-01-31T07:00:14.909Z
  Event: Suspend(ioRequest=SendAndReceive({FlowSessionImpl(destination=O=Mock Company 1, L=London, C=GB, sourceSessionId=SessionId(toLong=-6111232092193349787))=FlowSessionImpl(destination=O=Mock Company 1, L=London, C=GB, sourceSessionId=SessionId(toLong=-6111232092193349787))=EE05605337B669421E0209244EB9F8BA45B8C67B7A817369C761E46DEF85D194}, shouldRetrySend=false), maySkipCheckpoint=false, fiber=E97EDA5D2375299EC73CAA8DD1EFC777489F86401E9EDF57D24CB453AFADD68E, currentStep=Starting)
  Actions: 
    PersistCheckpoint(id=[19d5529e-5027-4fa9-b1fb-f606ce138a0e], checkpoint=Checkpoint(checkpointState=CheckpointState(invocationContext=InvocationContext(origin=Peer(party=O=Mock Company 1, L=London, C=GB), trace=Trace(invocationId=ecadbadd-d49d-4516-8b4c-2ec4a2bd801c, timestamp: 2023-01-31T07:00:14.883Z, entityType: Invocation, sessionId=ecadbadd-d49d-4516-8b4c-2ec4a2bd801c, timestamp: 2023-01-31T07:00:14.883Z, entityType: Session), actor=null, externalTrace=null, impersonatedActor=null, arguments=[], clientId=null), ourIdentity=O=Mock Company 3, L=London, C=GB, sessions={SessionId(toLong=-6111232092193349787)=Initiated(peerParty=O=Mock Company 1, L=London, C=GB, peerFlowInfo=FlowInfo(flowVersion=1, appName=<unknown>), receivedMessages=[], otherSideErrored=false, peerSinkSessionId=SessionId(toLong=-846941239363969924), deduplicationSeed=D--846941239363969924--3458992896374643217)}, sessionsToBeClosed=[], subFlowStack=[Inlined(flowClass=class net.corda.samples.obligation.flows.IOUSettleFlowResponder, subFlowVersion=CorDappFlow(platformVersion=11, corDappName=workflows-1.0, corDappHash=B699A1A7AEE96EE2270B80DAE7A921F446B5529E562BC1497C4BF0F7569223AA), isEnabledTimedFlow=false), Inlined(flowClass=class net.corda.samples.obligation.flows.IOUSettleFlowResponder$call$signedTransactionFlow$1, subFlowVersion=CoreFlow(platformVersion=11), isEnabledTimedFlow=false), Inlined(flowClass=class net.corda.core.flows.ReceiveTransactionFlow, subFlowVersion=CoreFlow(platformVersion=11), isEnabledTimedFlow=false), Inlined(flowClass=class net.corda.core.internal.ResolveTransactionsFlow, subFlowVersion=CoreFlow(platformVersion=11), isEnabledTimedFlow=false), Inlined(flowClass=class net.corda.core.internal.FetchTransactionsFlow, subFlowVersion=CoreFlow(platformVersion=11), isEnabledTimedFlow=false)], numberOfSuspends=2, numberOfCommits=3), flowState=Started(flowIORequest=SendAndReceive({FlowSessionImpl(destination=O=Mock Company 1, L=London, C=GB, sourceSessionId=SessionId(toLong=-6111232092193349787))=FlowSessionImpl(destination=O=Mock Company 1, L=London, C=GB, sourceSessionId=SessionId(toLong=-6111232092193349787))=EE05605337B669421E0209244EB9F8BA45B8C67B7A817369C761E46DEF85D194}, shouldRetrySend=false), frozenFiber=E97EDA5D2375299EC73CAA8DD1EFC777489F86401E9EDF57D24CB453AFADD68E), errorState=Clean, result=null, status=RUNNABLE, progressStep=Starting, flowIoRequest=SendAndReceive, compatible=true), isCheckpointUpdate=true)
    PersistDeduplicationFacts(deduplicationHandlers=[])
    CommitTransaction
    AcknowledgeMessages(deduplicationHandlers=[])
    ScheduleEvent(event=DoRemainingWork)
  Continuation: ProcessEvents
  Diff between previous and next state:
numberOfCommits: 
    2
    3
checkpoint.flowIoRequest: 
    Receive
    SendAndReceive
checkpoint.flowState.flowIORequest: 
    Receive(sessions=[FlowSessionImpl(destination=O=Mock Company 1, L=London, C=GB, sourceSessionId=SessionId(toLong=-6111232092193349787))])
    SendAndReceive({FlowSessionImpl(destination=O=Mock Company 1, L=London, C=GB, sourceSessionId=SessionId(toLong=-6111232092193349787))=FlowSessionImpl(destination=O=Mock Company 1, L=London, C=GB, sourceSessionId=SessionId(toLong=-6111232092193349787))=EE05605337B669421E0209244EB9F8BA45B8C67B7A817369C761E46DEF85D194}, shouldRetrySend=false)
checkpoint.flowState.frozenFiber.hash: 
    342A7BE535909EDDBDE82CF63B3921E42B2D1CA1416744C8742642BBBD6CE9F8
    E97EDA5D2375299EC73CAA8DD1EFC777489F86401E9EDF57D24CB453AFADD68E
checkpoint.checkpointState.numberOfCommits: 
    2
    3
checkpoint.checkpointState.numberOfSuspends: 
    1
    2
checkpoint.timestamp: 
    2023-01-31T07:00:14.904Z
    2023-01-31T07:00:14.908Z
isFlowResumed: 
    true
    false


 --- Transition of flow [19d5529e-5027-4fa9-b1fb-f606ce138a0e] ---
  Timestamp: 2023-01-31T07:00:14.910Z
  Event: DoRemainingWork
  Actions: 
    SendMultiple(sendInitial=[], sendExisting=[SendExisting(peerParty=O=Mock Company 1, L=London, C=GB, message=ExistingSessionMessage(recipientSessionId=SessionId(toLong=-846941239363969924), payload=DataSessionMessage(payload=class net.corda.core.serialization.SerializedBytes)), deduplicationId=SenderDeduplicationId(deduplicationId=DeduplicationId(toString=N-D--846941239363969924--3458992896374643217-2-0), senderUUID=029259cf-bb6a-44e3-8b88-309bd9c28ecc))])
  Continuation: ProcessEvents
  Diff between previous and next state:
checkpoint.flowState.flowIORequest: 
    SendAndReceive({FlowSessionImpl(destination=O=Mock Company 1, L=London, C=GB, sourceSessionId=SessionId(toLong=-6111232092193349787))=FlowSessionImpl(destination=O=Mock Company 1, L=London, C=GB, sourceSessionId=SessionId(toLong=-6111232092193349787))=EE05605337B669421E0209244EB9F8BA45B8C67B7A817369C761E46DEF85D194}, shouldRetrySend=false)
    Receive(sessions=[FlowSessionImpl(destination=O=Mock Company 1, L=London, C=GB, sourceSessionId=SessionId(toLong=-6111232092193349787))])
checkpoint.timestamp: 
    2023-01-31T07:00:14.908Z
    2023-01-31T07:00:14.910Z


 --- Transition of flow [19d5529e-5027-4fa9-b1fb-f606ce138a0e] ---
  Timestamp: 2023-01-31T07:00:14.924Z
  Event: DeliverSessionMessage(sessionMessage=ExistingSessionMessage(recipientSessionId=SessionId(toLong=-6111232092193349787), payload=DataSessionMessage(payload=class net.corda.core.serialization.SerializedBytes)), deduplicationHandler=net.corda.testing.node.internal.MockNodeMessagingService$InMemoryDeduplicationHandler@37b7392f, sender=O=Mock Company 1, L=London, C=GB)
  Actions: 
    ScheduleEvent(event=DoRemainingWork)
  Continuation: ProcessEvents
  Diff between previous and next state:
pendingDeduplicationHandlers: 
    []
    [net.corda.testing.node.internal.MockNodeMessagingService$InMemoryDeduplicationHandler@37b7392f]
checkpoint.checkpointState.sessions.SessionId(toLong=-6111232092193349787).receivedMessages.isEmpty: 
    true
    false
checkpoint.timestamp: 
    2023-01-31T07:00:14.910Z
    2023-01-31T07:00:14.924Z


 --- Transition of flow [19d5529e-5027-4fa9-b1fb-f606ce138a0e] ---
  Timestamp: 2023-01-31T07:00:14.924Z
  Event: DoRemainingWork
  Actions: 
    CreateTransaction
  Continuation: Resume(result=class java.util.LinkedHashMap)
  Diff between previous and next state:
checkpoint.checkpointState.sessions.SessionId(toLong=-6111232092193349787).receivedMessages.isEmpty: 
    false
    true
isFlowResumed: 
    false
    true


 --- Transition of flow [19d5529e-5027-4fa9-b1fb-f606ce138a0e] ---
  Timestamp: 2023-01-31T07:00:14.925Z
  Event: LeaveSubFlow
  Actions: 
    
  Continuation: ProcessEvents
  Diff between previous and next state:
checkpoint.checkpointState.subFlowStack: 
    [Inlined(flowClass=class net.corda.samples.obligation.flows.IOUSettleFlowResponder, subFlowVersion=CorDappFlow(platformVersion=11, corDappName=workflows-1.0, corDappHash=B699A1A7AEE96EE2270B80DAE7A921F446B5529E562BC1497C4BF0F7569223AA), isEnabledTimedFlow=false), Inlined(flowClass=class net.corda.samples.obligation.flows.IOUSettleFlowResponder$call$signedTransactionFlow$1, subFlowVersion=CoreFlow(platformVersion=11), isEnabledTimedFlow=false), Inlined(flowClass=class net.corda.core.flows.ReceiveTransactionFlow, subFlowVersion=CoreFlow(platformVersion=11), isEnabledTimedFlow=false), Inlined(flowClass=class net.corda.core.internal.ResolveTransactionsFlow, subFlowVersion=CoreFlow(platformVersion=11), isEnabledTimedFlow=false), Inlined(flowClass=class net.corda.core.internal.FetchTransactionsFlow, subFlowVersion=CoreFlow(platformVersion=11), isEnabledTimedFlow=false)]
    [Inlined(flowClass=class net.corda.samples.obligation.flows.IOUSettleFlowResponder, subFlowVersion=CorDappFlow(platformVersion=11, corDappName=workflows-1.0, corDappHash=B699A1A7AEE96EE2270B80DAE7A921F446B5529E562BC1497C4BF0F7569223AA), isEnabledTimedFlow=false), Inlined(flowClass=class net.corda.samples.obligation.flows.IOUSettleFlowResponder$call$signedTransactionFlow$1, subFlowVersion=CoreFlow(platformVersion=11), isEnabledTimedFlow=false), Inlined(flowClass=class net.corda.core.flows.ReceiveTransactionFlow, subFlowVersion=CoreFlow(platformVersion=11), isEnabledTimedFlow=false), Inlined(flowClass=class net.corda.core.internal.ResolveTransactionsFlow, subFlowVersion=CoreFlow(platformVersion=11), isEnabledTimedFlow=false)]
checkpoint.timestamp: 
    2023-01-31T07:00:14.924Z
    2023-01-31T07:00:14.925Z


 --- Transition of flow [19d5529e-5027-4fa9-b1fb-f606ce138a0e] ---
  Timestamp: 2023-01-31T07:00:14.927Z
  Event: EnterSubFlow(subFlowClass=class net.corda.core.internal.FetchAttachmentsFlow, subFlowVersion=CoreFlow(platformVersion=11), isEnabledTimedFlow=false)
  Actions: 
    
  Continuation: ProcessEvents
  Diff between previous and next state:
checkpoint.checkpointState.subFlowStack: 
    [Inlined(flowClass=class net.corda.samples.obligation.flows.IOUSettleFlowResponder, subFlowVersion=CorDappFlow(platformVersion=11, corDappName=workflows-1.0, corDappHash=B699A1A7AEE96EE2270B80DAE7A921F446B5529E562BC1497C4BF0F7569223AA), isEnabledTimedFlow=false), Inlined(flowClass=class net.corda.samples.obligation.flows.IOUSettleFlowResponder$call$signedTransactionFlow$1, subFlowVersion=CoreFlow(platformVersion=11), isEnabledTimedFlow=false), Inlined(flowClass=class net.corda.core.flows.ReceiveTransactionFlow, subFlowVersion=CoreFlow(platformVersion=11), isEnabledTimedFlow=false), Inlined(flowClass=class net.corda.core.internal.ResolveTransactionsFlow, subFlowVersion=CoreFlow(platformVersion=11), isEnabledTimedFlow=false)]
    [Inlined(flowClass=class net.corda.samples.obligation.flows.IOUSettleFlowResponder, subFlowVersion=CorDappFlow(platformVersion=11, corDappName=workflows-1.0, corDappHash=B699A1A7AEE96EE2270B80DAE7A921F446B5529E562BC1497C4BF0F7569223AA), isEnabledTimedFlow=false), Inlined(flowClass=class net.corda.samples.obligation.flows.IOUSettleFlowResponder$call$signedTransactionFlow$1, subFlowVersion=CoreFlow(platformVersion=11), isEnabledTimedFlow=false), Inlined(flowClass=class net.corda.core.flows.ReceiveTransactionFlow, subFlowVersion=CoreFlow(platformVersion=11), isEnabledTimedFlow=false), Inlined(flowClass=class net.corda.core.internal.ResolveTransactionsFlow, subFlowVersion=CoreFlow(platformVersion=11), isEnabledTimedFlow=false), Inlined(flowClass=class net.corda.core.internal.FetchAttachmentsFlow, subFlowVersion=CoreFlow(platformVersion=11), isEnabledTimedFlow=false)]
checkpoint.timestamp: 
    2023-01-31T07:00:14.925Z
    2023-01-31T07:00:14.927Z


 --- Transition of flow [19d5529e-5027-4fa9-b1fb-f606ce138a0e] ---
  Timestamp: 2023-01-31T07:00:14.927Z
  Event: LeaveSubFlow
  Actions: 
    
  Continuation: ProcessEvents
  Diff between previous and next state:
checkpoint.checkpointState.subFlowStack: 
    [Inlined(flowClass=class net.corda.samples.obligation.flows.IOUSettleFlowResponder, subFlowVersion=CorDappFlow(platformVersion=11, corDappName=workflows-1.0, corDappHash=B699A1A7AEE96EE2270B80DAE7A921F446B5529E562BC1497C4BF0F7569223AA), isEnabledTimedFlow=false), Inlined(flowClass=class net.corda.samples.obligation.flows.IOUSettleFlowResponder$call$signedTransactionFlow$1, subFlowVersion=CoreFlow(platformVersion=11), isEnabledTimedFlow=false), Inlined(flowClass=class net.corda.core.flows.ReceiveTransactionFlow, subFlowVersion=CoreFlow(platformVersion=11), isEnabledTimedFlow=false), Inlined(flowClass=class net.corda.core.internal.ResolveTransactionsFlow, subFlowVersion=CoreFlow(platformVersion=11), isEnabledTimedFlow=false), Inlined(flowClass=class net.corda.core.internal.FetchAttachmentsFlow, subFlowVersion=CoreFlow(platformVersion=11), isEnabledTimedFlow=false)]
    [Inlined(flowClass=class net.corda.samples.obligation.flows.IOUSettleFlowResponder, subFlowVersion=CorDappFlow(platformVersion=11, corDappName=workflows-1.0, corDappHash=B699A1A7AEE96EE2270B80DAE7A921F446B5529E562BC1497C4BF0F7569223AA), isEnabledTimedFlow=false), Inlined(flowClass=class net.corda.samples.obligation.flows.IOUSettleFlowResponder$call$signedTransactionFlow$1, subFlowVersion=CoreFlow(platformVersion=11), isEnabledTimedFlow=false), Inlined(flowClass=class net.corda.core.flows.ReceiveTransactionFlow, subFlowVersion=CoreFlow(platformVersion=11), isEnabledTimedFlow=false), Inlined(flowClass=class net.corda.core.internal.ResolveTransactionsFlow, subFlowVersion=CoreFlow(platformVersion=11), isEnabledTimedFlow=false)]


 --- Transition of flow [19d5529e-5027-4fa9-b1fb-f606ce138a0e] ---
  Timestamp: 2023-01-31T07:00:14.928Z
  Event: EnterSubFlow(subFlowClass=class net.corda.core.internal.FetchNetworkParametersFlow, subFlowVersion=CoreFlow(platformVersion=11), isEnabledTimedFlow=false)
  Actions: 
    
  Continuation: ProcessEvents
  Diff between previous and next state:
checkpoint.checkpointState.subFlowStack: 
    [Inlined(flowClass=class net.corda.samples.obligation.flows.IOUSettleFlowResponder, subFlowVersion=CorDappFlow(platformVersion=11, corDappName=workflows-1.0, corDappHash=B699A1A7AEE96EE2270B80DAE7A921F446B5529E562BC1497C4BF0F7569223AA), isEnabledTimedFlow=false), Inlined(flowClass=class net.corda.samples.obligation.flows.IOUSettleFlowResponder$call$signedTransactionFlow$1, subFlowVersion=CoreFlow(platformVersion=11), isEnabledTimedFlow=false), Inlined(flowClass=class net.corda.core.flows.ReceiveTransactionFlow, subFlowVersion=CoreFlow(platformVersion=11), isEnabledTimedFlow=false), Inlined(flowClass=class net.corda.core.internal.ResolveTransactionsFlow, subFlowVersion=CoreFlow(platformVersion=11), isEnabledTimedFlow=false)]
    [Inlined(flowClass=class net.corda.samples.obligation.flows.IOUSettleFlowResponder, subFlowVersion=CorDappFlow(platformVersion=11, corDappName=workflows-1.0, corDappHash=B699A1A7AEE96EE2270B80DAE7A921F446B5529E562BC1497C4BF0F7569223AA), isEnabledTimedFlow=false), Inlined(flowClass=class net.corda.samples.obligation.flows.IOUSettleFlowResponder$call$signedTransactionFlow$1, subFlowVersion=CoreFlow(platformVersion=11), isEnabledTimedFlow=false), Inlined(flowClass=class net.corda.core.flows.ReceiveTransactionFlow, subFlowVersion=CoreFlow(platformVersion=11), isEnabledTimedFlow=false), Inlined(flowClass=class net.corda.core.internal.ResolveTransactionsFlow, subFlowVersion=CoreFlow(platformVersion=11), isEnabledTimedFlow=false), Inlined(flowClass=class net.corda.core.internal.FetchNetworkParametersFlow, subFlowVersion=CoreFlow(platformVersion=11), isEnabledTimedFlow=false)]
checkpoint.timestamp: 
    2023-01-31T07:00:14.927Z
    2023-01-31T07:00:14.928Z


 --- Transition of flow [19d5529e-5027-4fa9-b1fb-f606ce138a0e] ---
  Timestamp: 2023-01-31T07:00:14.928Z
  Event: LeaveSubFlow
  Actions: 
    
  Continuation: ProcessEvents
  Diff between previous and next state:
checkpoint.checkpointState.subFlowStack: 
    [Inlined(flowClass=class net.corda.samples.obligation.flows.IOUSettleFlowResponder, subFlowVersion=CorDappFlow(platformVersion=11, corDappName=workflows-1.0, corDappHash=B699A1A7AEE96EE2270B80DAE7A921F446B5529E562BC1497C4BF0F7569223AA), isEnabledTimedFlow=false), Inlined(flowClass=class net.corda.samples.obligation.flows.IOUSettleFlowResponder$call$signedTransactionFlow$1, subFlowVersion=CoreFlow(platformVersion=11), isEnabledTimedFlow=false), Inlined(flowClass=class net.corda.core.flows.ReceiveTransactionFlow, subFlowVersion=CoreFlow(platformVersion=11), isEnabledTimedFlow=false), Inlined(flowClass=class net.corda.core.internal.ResolveTransactionsFlow, subFlowVersion=CoreFlow(platformVersion=11), isEnabledTimedFlow=false), Inlined(flowClass=class net.corda.core.internal.FetchNetworkParametersFlow, subFlowVersion=CoreFlow(platformVersion=11), isEnabledTimedFlow=false)]
    [Inlined(flowClass=class net.corda.samples.obligation.flows.IOUSettleFlowResponder, subFlowVersion=CorDappFlow(platformVersion=11, corDappName=workflows-1.0, corDappHash=B699A1A7AEE96EE2270B80DAE7A921F446B5529E562BC1497C4BF0F7569223AA), isEnabledTimedFlow=false), Inlined(flowClass=class net.corda.samples.obligation.flows.IOUSettleFlowResponder$call$signedTransactionFlow$1, subFlowVersion=CoreFlow(platformVersion=11), isEnabledTimedFlow=false), Inlined(flowClass=class net.corda.core.flows.ReceiveTransactionFlow, subFlowVersion=CoreFlow(platformVersion=11), isEnabledTimedFlow=false), Inlined(flowClass=class net.corda.core.internal.ResolveTransactionsFlow, subFlowVersion=CoreFlow(platformVersion=11), isEnabledTimedFlow=false)]


 --- Transition of flow [19d5529e-5027-4fa9-b1fb-f606ce138a0e] ---
  Timestamp: 2023-01-31T07:00:14.932Z
  Event: Suspend(ioRequest=Sleep(wakeUpAfter=2023-01-31T07:00:14.928Z), maySkipCheckpoint=false, fiber=29087CBD0FB821D900753EF1132C2C064BC9CEBD3AB837B4A25ECDD7A72585F5, currentStep=Starting)
  Actions: 
    PersistCheckpoint(id=[19d5529e-5027-4fa9-b1fb-f606ce138a0e], checkpoint=Checkpoint(checkpointState=CheckpointState(invocationContext=InvocationContext(origin=Peer(party=O=Mock Company 1, L=London, C=GB), trace=Trace(invocationId=ecadbadd-d49d-4516-8b4c-2ec4a2bd801c, timestamp: 2023-01-31T07:00:14.883Z, entityType: Invocation, sessionId=ecadbadd-d49d-4516-8b4c-2ec4a2bd801c, timestamp: 2023-01-31T07:00:14.883Z, entityType: Session), actor=null, externalTrace=null, impersonatedActor=null, arguments=[], clientId=null), ourIdentity=O=Mock Company 3, L=London, C=GB, sessions={SessionId(toLong=-6111232092193349787)=Initiated(peerParty=O=Mock Company 1, L=London, C=GB, peerFlowInfo=FlowInfo(flowVersion=1, appName=<unknown>), receivedMessages=[], otherSideErrored=false, peerSinkSessionId=SessionId(toLong=-846941239363969924), deduplicationSeed=D--846941239363969924--3458992896374643217)}, sessionsToBeClosed=[], subFlowStack=[Inlined(flowClass=class net.corda.samples.obligation.flows.IOUSettleFlowResponder, subFlowVersion=CorDappFlow(platformVersion=11, corDappName=workflows-1.0, corDappHash=B699A1A7AEE96EE2270B80DAE7A921F446B5529E562BC1497C4BF0F7569223AA), isEnabledTimedFlow=false), Inlined(flowClass=class net.corda.samples.obligation.flows.IOUSettleFlowResponder$call$signedTransactionFlow$1, subFlowVersion=CoreFlow(platformVersion=11), isEnabledTimedFlow=false), Inlined(flowClass=class net.corda.core.flows.ReceiveTransactionFlow, subFlowVersion=CoreFlow(platformVersion=11), isEnabledTimedFlow=false), Inlined(flowClass=class net.corda.core.internal.ResolveTransactionsFlow, subFlowVersion=CoreFlow(platformVersion=11), isEnabledTimedFlow=false)], numberOfSuspends=3, numberOfCommits=4), flowState=Started(flowIORequest=Sleep(wakeUpAfter=2023-01-31T07:00:14.928Z), frozenFiber=29087CBD0FB821D900753EF1132C2C064BC9CEBD3AB837B4A25ECDD7A72585F5), errorState=Clean, result=null, status=RUNNABLE, progressStep=Starting, flowIoRequest=Sleep, compatible=true), isCheckpointUpdate=true)
    PersistDeduplicationFacts(deduplicationHandlers=[net.corda.testing.node.internal.MockNodeMessagingService$InMemoryDeduplicationHandler@37b7392f])
    CommitTransaction
    AcknowledgeMessages(deduplicationHandlers=[net.corda.testing.node.internal.MockNodeMessagingService$InMemoryDeduplicationHandler@37b7392f])
    ScheduleEvent(event=DoRemainingWork)
  Continuation: ProcessEvents
  Diff between previous and next state:
pendingDeduplicationHandlers: 
    [net.corda.testing.node.internal.MockNodeMessagingService$InMemoryDeduplicationHandler@37b7392f]
    []
numberOfCommits: 
    3
    4
checkpoint.flowIoRequest: 
    SendAndReceive
    Sleep
checkpoint.flowState.flowIORequest: 
    Receive(sessions=[FlowSessionImpl(destination=O=Mock Company 1, L=London, C=GB, sourceSessionId=SessionId(toLong=-6111232092193349787))])
    Sleep(wakeUpAfter=2023-01-31T07:00:14.928Z)
checkpoint.flowState.frozenFiber.hash: 
    E97EDA5D2375299EC73CAA8DD1EFC777489F86401E9EDF57D24CB453AFADD68E
    29087CBD0FB821D900753EF1132C2C064BC9CEBD3AB837B4A25ECDD7A72585F5
checkpoint.checkpointState.numberOfCommits: 
    3
    4
checkpoint.checkpointState.numberOfSuspends: 
    2
    3
checkpoint.timestamp: 
    2023-01-31T07:00:14.928Z
    2023-01-31T07:00:14.930Z
isFlowResumed: 
    true
    false


 --- Transition of flow [19d5529e-5027-4fa9-b1fb-f606ce138a0e] ---
  Timestamp: 2023-01-31T07:00:14.932Z
  Event: DoRemainingWork
  Actions: 
    SleepUntil(currentState=StateMachineState(checkpoint=Checkpoint(checkpointState=CheckpointState(invocationContext=InvocationContext(origin=Peer(party=O=Mock Company 1, L=London, C=GB), trace=Trace(invocationId=ecadbadd-d49d-4516-8b4c-2ec4a2bd801c, timestamp: 2023-01-31T07:00:14.883Z, entityType: Invocation, sessionId=ecadbadd-d49d-4516-8b4c-2ec4a2bd801c, timestamp: 2023-01-31T07:00:14.883Z, entityType: Session), actor=null, externalTrace=null, impersonatedActor=null, arguments=[], clientId=null), ourIdentity=O=Mock Company 3, L=London, C=GB, sessions={SessionId(toLong=-6111232092193349787)=Initiated(peerParty=O=Mock Company 1, L=London, C=GB, peerFlowInfo=FlowInfo(flowVersion=1, appName=<unknown>), receivedMessages=[], otherSideErrored=false, peerSinkSessionId=SessionId(toLong=-846941239363969924), deduplicationSeed=D--846941239363969924--3458992896374643217)}, sessionsToBeClosed=[], subFlowStack=[Inlined(flowClass=class net.corda.samples.obligation.flows.IOUSettleFlowResponder, subFlowVersion=CorDappFlow(platformVersion=11, corDappName=workflows-1.0, corDappHash=B699A1A7AEE96EE2270B80DAE7A921F446B5529E562BC1497C4BF0F7569223AA), isEnabledTimedFlow=false), Inlined(flowClass=class net.corda.samples.obligation.flows.IOUSettleFlowResponder$call$signedTransactionFlow$1, subFlowVersion=CoreFlow(platformVersion=11), isEnabledTimedFlow=false), Inlined(flowClass=class net.corda.core.flows.ReceiveTransactionFlow, subFlowVersion=CoreFlow(platformVersion=11), isEnabledTimedFlow=false), Inlined(flowClass=class net.corda.core.internal.ResolveTransactionsFlow, subFlowVersion=CoreFlow(platformVersion=11), isEnabledTimedFlow=false)], numberOfSuspends=3, numberOfCommits=4), flowState=Started(flowIORequest=Sleep(wakeUpAfter=2023-01-31T07:00:14.928Z), frozenFiber=29087CBD0FB821D900753EF1132C2C064BC9CEBD3AB837B4A25ECDD7A72585F5), errorState=Clean, result=null, status=RUNNABLE, progressStep=Starting, flowIoRequest=Sleep, compatible=true), flowLogic=net.corda.samples.obligation.flows.IOUSettleFlowResponder@2060c030, pendingDeduplicationHandlers=[], isFlowResumed=false, isWaitingForFuture=true, future=java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask@46458a88, isAnyCheckpointPersisted=true, isStartIdempotent=false, isRemoved=false, isKilled=false, isDead=false, senderUUID=029259cf-bb6a-44e3-8b88-309bd9c28ecc, reloadCheckpointAfterSuspendCount=null, numberOfCommits=4, lock=java.util.concurrent.Semaphore@51f41ef7[Permits = 0]), time=2023-01-31T07:00:14.928Z)
  Continuation: ProcessEvents
  Diff between previous and next state:
future: 
    null
    java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask@46458a88
isWaitingForFuture: 
    false
    true


 --- Transition of flow [19d5529e-5027-4fa9-b1fb-f606ce138a0e] ---
  Timestamp: 2023-01-31T07:00:14.933Z
  Event: WakeUpSleepyFlow
  Actions: 
    CreateTransaction
  Continuation: Resume(result=class kotlin.Unit)
  Diff between previous and next state:
future: 
    java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask@46458a88
    null
isFlowResumed: 
    false
    true
isWaitingForFuture: 
    true
    false


 --- Transition of flow [19d5529e-5027-4fa9-b1fb-f606ce138a0e] ---
  Timestamp: 2023-01-31T07:00:14.934Z
  Event: EnterSubFlow(subFlowClass=class net.corda.core.internal.FetchTransactionsFlow, subFlowVersion=CoreFlow(platformVersion=11), isEnabledTimedFlow=false)
  Actions: 
    
  Continuation: ProcessEvents
  Diff between previous and next state:
checkpoint.checkpointState.subFlowStack: 
    [Inlined(flowClass=class net.corda.samples.obligation.flows.IOUSettleFlowResponder, subFlowVersion=CorDappFlow(platformVersion=11, corDappName=workflows-1.0, corDappHash=B699A1A7AEE96EE2270B80DAE7A921F446B5529E562BC1497C4BF0F7569223AA), isEnabledTimedFlow=false), Inlined(flowClass=class net.corda.samples.obligation.flows.IOUSettleFlowResponder$call$signedTransactionFlow$1, subFlowVersion=CoreFlow(platformVersion=11), isEnabledTimedFlow=false), Inlined(flowClass=class net.corda.core.flows.ReceiveTransactionFlow, subFlowVersion=CoreFlow(platformVersion=11), isEnabledTimedFlow=false), Inlined(flowClass=class net.corda.core.internal.ResolveTransactionsFlow, subFlowVersion=CoreFlow(platformVersion=11), isEnabledTimedFlow=false)]
    [Inlined(flowClass=class net.corda.samples.obligation.flows.IOUSettleFlowResponder, subFlowVersion=CorDappFlow(platformVersion=11, corDappName=workflows-1.0, corDappHash=B699A1A7AEE96EE2270B80DAE7A921F446B5529E562BC1497C4BF0F7569223AA), isEnabledTimedFlow=false), Inlined(flowClass=class net.corda.samples.obligation.flows.IOUSettleFlowResponder$call$signedTransactionFlow$1, subFlowVersion=CoreFlow(platformVersion=11), isEnabledTimedFlow=false), Inlined(flowClass=class net.corda.core.flows.ReceiveTransactionFlow, subFlowVersion=CoreFlow(platformVersion=11), isEnabledTimedFlow=false), Inlined(flowClass=class net.corda.core.internal.ResolveTransactionsFlow, subFlowVersion=CoreFlow(platformVersion=11), isEnabledTimedFlow=false), Inlined(flowClass=class net.corda.core.internal.FetchTransactionsFlow, subFlowVersion=CoreFlow(platformVersion=11), isEnabledTimedFlow=false)]
checkpoint.timestamp: 
    2023-01-31T07:00:14.930Z
    2023-01-31T07:00:14.934Z


 --- Transition of flow [19d5529e-5027-4fa9-b1fb-f606ce138a0e] ---
  Timestamp: 2023-01-31T07:00:14.934Z
  Event: LeaveSubFlow
  Actions: 
    
  Continuation: ProcessEvents
  Diff between previous and next state:
checkpoint.checkpointState.subFlowStack: 
    [Inlined(flowClass=class net.corda.samples.obligation.flows.IOUSettleFlowResponder, subFlowVersion=CorDappFlow(platformVersion=11, corDappName=workflows-1.0, corDappHash=B699A1A7AEE96EE2270B80DAE7A921F446B5529E562BC1497C4BF0F7569223AA), isEnabledTimedFlow=false), Inlined(flowClass=class net.corda.samples.obligation.flows.IOUSettleFlowResponder$call$signedTransactionFlow$1, subFlowVersion=CoreFlow(platformVersion=11), isEnabledTimedFlow=false), Inlined(flowClass=class net.corda.core.flows.ReceiveTransactionFlow, subFlowVersion=CoreFlow(platformVersion=11), isEnabledTimedFlow=false), Inlined(flowClass=class net.corda.core.internal.ResolveTransactionsFlow, subFlowVersion=CoreFlow(platformVersion=11), isEnabledTimedFlow=false), Inlined(flowClass=class net.corda.core.internal.FetchTransactionsFlow, subFlowVersion=CoreFlow(platformVersion=11), isEnabledTimedFlow=false)]
    [Inlined(flowClass=class net.corda.samples.obligation.flows.IOUSettleFlowResponder, subFlowVersion=CorDappFlow(platformVersion=11, corDappName=workflows-1.0, corDappHash=B699A1A7AEE96EE2270B80DAE7A921F446B5529E562BC1497C4BF0F7569223AA), isEnabledTimedFlow=false), Inlined(flowClass=class net.corda.samples.obligation.flows.IOUSettleFlowResponder$call$signedTransactionFlow$1, subFlowVersion=CoreFlow(platformVersion=11), isEnabledTimedFlow=false), Inlined(flowClass=class net.corda.core.flows.ReceiveTransactionFlow, subFlowVersion=CoreFlow(platformVersion=11), isEnabledTimedFlow=false), Inlined(flowClass=class net.corda.core.internal.ResolveTransactionsFlow, subFlowVersion=CoreFlow(platformVersion=11), isEnabledTimedFlow=false)]


 --- Transition of flow [19d5529e-5027-4fa9-b1fb-f606ce138a0e] ---
  Timestamp: 2023-01-31T07:00:14.939Z
  Event: Suspend(ioRequest=Send(sessionToMessage={FlowSessionImpl(destination=O=Mock Company 1, L=London, C=GB, sourceSessionId=SessionId(toLong=-6111232092193349787))=768AED61FD2A58D74D7316731407E0600065080E1F3E6397EE4FA5AEFEE79295}), maySkipCheckpoint=false, fiber=2CE5EA5F42E1844E309309FE58BFD7F678FFFD4DBB123FAA6DC1A2603A38DAC3, currentStep=Starting)
  Actions: 
    PersistCheckpoint(id=[19d5529e-5027-4fa9-b1fb-f606ce138a0e], checkpoint=Checkpoint(checkpointState=CheckpointState(invocationContext=InvocationContext(origin=Peer(party=O=Mock Company 1, L=London, C=GB), trace=Trace(invocationId=ecadbadd-d49d-4516-8b4c-2ec4a2bd801c, timestamp: 2023-01-31T07:00:14.883Z, entityType: Invocation, sessionId=ecadbadd-d49d-4516-8b4c-2ec4a2bd801c, timestamp: 2023-01-31T07:00:14.883Z, entityType: Session), actor=null, externalTrace=null, impersonatedActor=null, arguments=[], clientId=null), ourIdentity=O=Mock Company 3, L=London, C=GB, sessions={SessionId(toLong=-6111232092193349787)=Initiated(peerParty=O=Mock Company 1, L=London, C=GB, peerFlowInfo=FlowInfo(flowVersion=1, appName=<unknown>), receivedMessages=[], otherSideErrored=false, peerSinkSessionId=SessionId(toLong=-846941239363969924), deduplicationSeed=D--846941239363969924--3458992896374643217)}, sessionsToBeClosed=[], subFlowStack=[Inlined(flowClass=class net.corda.samples.obligation.flows.IOUSettleFlowResponder, subFlowVersion=CorDappFlow(platformVersion=11, corDappName=workflows-1.0, corDappHash=B699A1A7AEE96EE2270B80DAE7A921F446B5529E562BC1497C4BF0F7569223AA), isEnabledTimedFlow=false), Inlined(flowClass=class net.corda.samples.obligation.flows.IOUSettleFlowResponder$call$signedTransactionFlow$1, subFlowVersion=CoreFlow(platformVersion=11), isEnabledTimedFlow=false), Inlined(flowClass=class net.corda.core.flows.ReceiveTransactionFlow, subFlowVersion=CoreFlow(platformVersion=11), isEnabledTimedFlow=false), Inlined(flowClass=class net.corda.core.internal.ResolveTransactionsFlow, subFlowVersion=CoreFlow(platformVersion=11), isEnabledTimedFlow=false)], numberOfSuspends=4, numberOfCommits=5), flowState=Started(flowIORequest=Send(sessionToMessage={FlowSessionImpl(destination=O=Mock Company 1, L=London, C=GB, sourceSessionId=SessionId(toLong=-6111232092193349787))=768AED61FD2A58D74D7316731407E0600065080E1F3E6397EE4FA5AEFEE79295}), frozenFiber=2CE5EA5F42E1844E309309FE58BFD7F678FFFD4DBB123FAA6DC1A2603A38DAC3), errorState=Clean, result=null, status=RUNNABLE, progressStep=Starting, flowIoRequest=Send, compatible=true), isCheckpointUpdate=true)
    PersistDeduplicationFacts(deduplicationHandlers=[])
    CommitTransaction
    AcknowledgeMessages(deduplicationHandlers=[])
    ScheduleEvent(event=DoRemainingWork)
  Continuation: ProcessEvents
  Diff between previous and next state:
numberOfCommits: 
    4
    5
checkpoint.flowIoRequest: 
    Sleep
    Send
checkpoint.flowState.flowIORequest: 
    Sleep(wakeUpAfter=2023-01-31T07:00:14.928Z)
    Send(sessionToMessage={FlowSessionImpl(destination=O=Mock Company 1, L=London, C=GB, sourceSessionId=SessionId(toLong=-6111232092193349787))=768AED61FD2A58D74D7316731407E0600065080E1F3E6397EE4FA5AEFEE79295})
checkpoint.flowState.frozenFiber.hash: 
    29087CBD0FB821D900753EF1132C2C064BC9CEBD3AB837B4A25ECDD7A72585F5
    2CE5EA5F42E1844E309309FE58BFD7F678FFFD4DBB123FAA6DC1A2603A38DAC3
checkpoint.checkpointState.numberOfCommits: 
    4
    5
checkpoint.checkpointState.numberOfSuspends: 
    3
    4
checkpoint.timestamp: 
    2023-01-31T07:00:14.934Z
    2023-01-31T07:00:14.936Z
isFlowResumed: 
    true
    false


 --- Transition of flow [19d5529e-5027-4fa9-b1fb-f606ce138a0e] ---
  Timestamp: 2023-01-31T07:00:14.939Z
  Event: DoRemainingWork
  Actions: 
    SendMultiple(sendInitial=[], sendExisting=[SendExisting(peerParty=O=Mock Company 1, L=London, C=GB, message=ExistingSessionMessage(recipientSessionId=SessionId(toLong=-846941239363969924), payload=DataSessionMessage(payload=class net.corda.core.serialization.SerializedBytes)), deduplicationId=SenderDeduplicationId(deduplicationId=DeduplicationId(toString=N-D--846941239363969924--3458992896374643217-4-0), senderUUID=029259cf-bb6a-44e3-8b88-309bd9c28ecc))])
    CreateTransaction
  Continuation: Resume(result=class kotlin.Unit)
  Diff between previous and next state:
isFlowResumed: 
    false
    true


 --- Transition of flow [19d5529e-5027-4fa9-b1fb-f606ce138a0e] ---
  Timestamp: 2023-01-31T07:00:15.003Z
  Event: LeaveSubFlow
  Actions: 
    
  Continuation: ProcessEvents
  Diff between previous and next state:
checkpoint.checkpointState.subFlowStack: 
    [Inlined(flowClass=class net.corda.samples.obligation.flows.IOUSettleFlowResponder, subFlowVersion=CorDappFlow(platformVersion=11, corDappName=workflows-1.0, corDappHash=B699A1A7AEE96EE2270B80DAE7A921F446B5529E562BC1497C4BF0F7569223AA), isEnabledTimedFlow=false), Inlined(flowClass=class net.corda.samples.obligation.flows.IOUSettleFlowResponder$call$signedTransactionFlow$1, subFlowVersion=CoreFlow(platformVersion=11), isEnabledTimedFlow=false), Inlined(flowClass=class net.corda.core.flows.ReceiveTransactionFlow, subFlowVersion=CoreFlow(platformVersion=11), isEnabledTimedFlow=false), Inlined(flowClass=class net.corda.core.internal.ResolveTransactionsFlow, subFlowVersion=CoreFlow(platformVersion=11), isEnabledTimedFlow=false)]
    [Inlined(flowClass=class net.corda.samples.obligation.flows.IOUSettleFlowResponder, subFlowVersion=CorDappFlow(platformVersion=11, corDappName=workflows-1.0, corDappHash=B699A1A7AEE96EE2270B80DAE7A921F446B5529E562BC1497C4BF0F7569223AA), isEnabledTimedFlow=false), Inlined(flowClass=class net.corda.samples.obligation.flows.IOUSettleFlowResponder$call$signedTransactionFlow$1, subFlowVersion=CoreFlow(platformVersion=11), isEnabledTimedFlow=false), Inlined(flowClass=class net.corda.core.flows.ReceiveTransactionFlow, subFlowVersion=CoreFlow(platformVersion=11), isEnabledTimedFlow=false)]
checkpoint.timestamp: 
    2023-01-31T07:00:14.939Z
    2023-01-31T07:00:15.003Z


 --- Transition of flow [19d5529e-5027-4fa9-b1fb-f606ce138a0e] ---
  Timestamp: 2023-01-31T07:00:15.294Z
  Event: LeaveSubFlow
  Actions: 
    
  Continuation: ProcessEvents
  Diff between previous and next state:
checkpoint.checkpointState.subFlowStack: 
    [Inlined(flowClass=class net.corda.samples.obligation.flows.IOUSettleFlowResponder, subFlowVersion=CorDappFlow(platformVersion=11, corDappName=workflows-1.0, corDappHash=B699A1A7AEE96EE2270B80DAE7A921F446B5529E562BC1497C4BF0F7569223AA), isEnabledTimedFlow=false), Inlined(flowClass=class net.corda.samples.obligation.flows.IOUSettleFlowResponder$call$signedTransactionFlow$1, subFlowVersion=CoreFlow(platformVersion=11), isEnabledTimedFlow=false), Inlined(flowClass=class net.corda.core.flows.ReceiveTransactionFlow, subFlowVersion=CoreFlow(platformVersion=11), isEnabledTimedFlow=false)]
    [Inlined(flowClass=class net.corda.samples.obligation.flows.IOUSettleFlowResponder, subFlowVersion=CorDappFlow(platformVersion=11, corDappName=workflows-1.0, corDappHash=B699A1A7AEE96EE2270B80DAE7A921F446B5529E562BC1497C4BF0F7569223AA), isEnabledTimedFlow=false), Inlined(flowClass=class net.corda.samples.obligation.flows.IOUSettleFlowResponder$call$signedTransactionFlow$1, subFlowVersion=CoreFlow(platformVersion=11), isEnabledTimedFlow=false)]
checkpoint.timestamp: 
    2023-01-31T07:00:15.003Z
    2023-01-31T07:00:15.294Z


 --- Transition of flow [19d5529e-5027-4fa9-b1fb-f606ce138a0e] ---
  Timestamp: 2023-01-31T07:00:15.298Z
  Event: Suspend(ioRequest=Receive(sessions=[FlowSessionImpl(destination=O=Mock Company 1, L=London, C=GB, sourceSessionId=SessionId(toLong=-6111232092193349787))]), maySkipCheckpoint=false, fiber=67B8B3BB7BC23F4FAB833AEA2BC7751915CC5A189991BC11A3589360C9C6C944, currentStep=Starting)
  Actions: 
    PersistCheckpoint(id=[19d5529e-5027-4fa9-b1fb-f606ce138a0e], checkpoint=Checkpoint(checkpointState=CheckpointState(invocationContext=InvocationContext(origin=Peer(party=O=Mock Company 1, L=London, C=GB), trace=Trace(invocationId=ecadbadd-d49d-4516-8b4c-2ec4a2bd801c, timestamp: 2023-01-31T07:00:14.883Z, entityType: Invocation, sessionId=ecadbadd-d49d-4516-8b4c-2ec4a2bd801c, timestamp: 2023-01-31T07:00:14.883Z, entityType: Session), actor=null, externalTrace=null, impersonatedActor=null, arguments=[], clientId=null), ourIdentity=O=Mock Company 3, L=London, C=GB, sessions={SessionId(toLong=-6111232092193349787)=Initiated(peerParty=O=Mock Company 1, L=London, C=GB, peerFlowInfo=FlowInfo(flowVersion=1, appName=<unknown>), receivedMessages=[], otherSideErrored=false, peerSinkSessionId=SessionId(toLong=-846941239363969924), deduplicationSeed=D--846941239363969924--3458992896374643217)}, sessionsToBeClosed=[], subFlowStack=[Inlined(flowClass=class net.corda.samples.obligation.flows.IOUSettleFlowResponder, subFlowVersion=CorDappFlow(platformVersion=11, corDappName=workflows-1.0, corDappHash=B699A1A7AEE96EE2270B80DAE7A921F446B5529E562BC1497C4BF0F7569223AA), isEnabledTimedFlow=false), Inlined(flowClass=class net.corda.samples.obligation.flows.IOUSettleFlowResponder$call$signedTransactionFlow$1, subFlowVersion=CoreFlow(platformVersion=11), isEnabledTimedFlow=false)], numberOfSuspends=5, numberOfCommits=6), flowState=Started(flowIORequest=Receive(sessions=[FlowSessionImpl(destination=O=Mock Company 1, L=London, C=GB, sourceSessionId=SessionId(toLong=-6111232092193349787))]), frozenFiber=67B8B3BB7BC23F4FAB833AEA2BC7751915CC5A189991BC11A3589360C9C6C944), errorState=Clean, result=null, status=RUNNABLE, progressStep=Starting, flowIoRequest=Receive, compatible=true), isCheckpointUpdate=true)
    PersistDeduplicationFacts(deduplicationHandlers=[])
    CommitTransaction
    AcknowledgeMessages(deduplicationHandlers=[])
    ScheduleEvent(event=DoRemainingWork)
  Continuation: ProcessEvents
  Diff between previous and next state:
numberOfCommits: 
    5
    6
checkpoint.flowIoRequest: 
    Send
    Receive
checkpoint.flowState.flowIORequest: 
    Send(sessionToMessage={FlowSessionImpl(destination=O=Mock Company 1, L=London, C=GB, sourceSessionId=SessionId(toLong=-6111232092193349787))=768AED61FD2A58D74D7316731407E0600065080E1F3E6397EE4FA5AEFEE79295})
    Receive(sessions=[FlowSessionImpl(destination=O=Mock Company 1, L=London, C=GB, sourceSessionId=SessionId(toLong=-6111232092193349787))])
checkpoint.flowState.frozenFiber.hash: 
    2CE5EA5F42E1844E309309FE58BFD7F678FFFD4DBB123FAA6DC1A2603A38DAC3
    67B8B3BB7BC23F4FAB833AEA2BC7751915CC5A189991BC11A3589360C9C6C944
checkpoint.checkpointState.numberOfCommits: 
    5
    6
checkpoint.checkpointState.numberOfSuspends: 
    4
    5
checkpoint.timestamp: 
    2023-01-31T07:00:15.294Z
    2023-01-31T07:00:15.295Z
isFlowResumed: 
    true
    false


 --- Transition of flow [19d5529e-5027-4fa9-b1fb-f606ce138a0e] ---
  Timestamp: 2023-01-31T07:00:15.298Z
  Event: DoRemainingWork
  Actions: 
    
  Continuation: ProcessEvents
  Diff between previous and next state:
null

 --- Transition of flow [19d5529e-5027-4fa9-b1fb-f606ce138a0e] ---
  Timestamp: 2023-01-31T07:00:15.309Z
  Event: DeliverSessionMessage(sessionMessage=ExistingSessionMessage(recipientSessionId=SessionId(toLong=-6111232092193349787), payload=DataSessionMessage(payload=class net.corda.core.serialization.SerializedBytes)), deduplicationHandler=net.corda.testing.node.internal.MockNodeMessagingService$InMemoryDeduplicationHandler@31a55919, sender=O=Mock Company 1, L=London, C=GB)
  Actions: 
    ScheduleEvent(event=DoRemainingWork)
  Continuation: ProcessEvents
  Diff between previous and next state:
pendingDeduplicationHandlers: 
    []
    [net.corda.testing.node.internal.MockNodeMessagingService$InMemoryDeduplicationHandler@31a55919]
checkpoint.checkpointState.sessions.SessionId(toLong=-6111232092193349787).receivedMessages.isEmpty: 
    true
    false
checkpoint.timestamp: 
    2023-01-31T07:00:15.298Z
    2023-01-31T07:00:15.309Z


 --- Transition of flow [19d5529e-5027-4fa9-b1fb-f606ce138a0e] ---
  Timestamp: 2023-01-31T07:00:15.309Z
  Event: DoRemainingWork
  Actions: 
    CreateTransaction
  Continuation: Resume(result=class java.util.LinkedHashMap)
  Diff between previous and next state:
checkpoint.checkpointState.sessions.SessionId(toLong=-6111232092193349787).receivedMessages.isEmpty: 
    false
    true
isFlowResumed: 
    false
    true


 --- Transition of flow [19d5529e-5027-4fa9-b1fb-f606ce138a0e] ---
  Timestamp: 2023-01-31T07:00:15.320Z
  Event: Suspend(ioRequest=Send(sessionToMessage={FlowSessionImpl(destination=O=Mock Company 1, L=London, C=GB, sourceSessionId=SessionId(toLong=-6111232092193349787))=5A4ACCA876E182E6A7DFE903152E54ECD0BAAA64CEC40DD908C1185F4DC762CF}), maySkipCheckpoint=false, fiber=7752CCCCD55AB58F8011BD26787FAB412B34AF2D2A5228AE54ED094C93D04574, currentStep=Starting)
  Actions: 
    PersistCheckpoint(id=[19d5529e-5027-4fa9-b1fb-f606ce138a0e], checkpoint=Checkpoint(checkpointState=CheckpointState(invocationContext=InvocationContext(origin=Peer(party=O=Mock Company 1, L=London, C=GB), trace=Trace(invocationId=ecadbadd-d49d-4516-8b4c-2ec4a2bd801c, timestamp: 2023-01-31T07:00:14.883Z, entityType: Invocation, sessionId=ecadbadd-d49d-4516-8b4c-2ec4a2bd801c, timestamp: 2023-01-31T07:00:14.883Z, entityType: Session), actor=null, externalTrace=null, impersonatedActor=null, arguments=[], clientId=null), ourIdentity=O=Mock Company 3, L=London, C=GB, sessions={SessionId(toLong=-6111232092193349787)=Initiated(peerParty=O=Mock Company 1, L=London, C=GB, peerFlowInfo=FlowInfo(flowVersion=1, appName=<unknown>), receivedMessages=[], otherSideErrored=false, peerSinkSessionId=SessionId(toLong=-846941239363969924), deduplicationSeed=D--846941239363969924--3458992896374643217)}, sessionsToBeClosed=[], subFlowStack=[Inlined(flowClass=class net.corda.samples.obligation.flows.IOUSettleFlowResponder, subFlowVersion=CorDappFlow(platformVersion=11, corDappName=workflows-1.0, corDappHash=B699A1A7AEE96EE2270B80DAE7A921F446B5529E562BC1497C4BF0F7569223AA), isEnabledTimedFlow=false), Inlined(flowClass=class net.corda.samples.obligation.flows.IOUSettleFlowResponder$call$signedTransactionFlow$1, subFlowVersion=CoreFlow(platformVersion=11), isEnabledTimedFlow=false)], numberOfSuspends=6, numberOfCommits=7), flowState=Started(flowIORequest=Send(sessionToMessage={FlowSessionImpl(destination=O=Mock Company 1, L=London, C=GB, sourceSessionId=SessionId(toLong=-6111232092193349787))=5A4ACCA876E182E6A7DFE903152E54ECD0BAAA64CEC40DD908C1185F4DC762CF}), frozenFiber=7752CCCCD55AB58F8011BD26787FAB412B34AF2D2A5228AE54ED094C93D04574), errorState=Clean, result=null, status=RUNNABLE, progressStep=Starting, flowIoRequest=Send, compatible=true), isCheckpointUpdate=true)
    PersistDeduplicationFacts(deduplicationHandlers=[net.corda.testing.node.internal.MockNodeMessagingService$InMemoryDeduplicationHandler@31a55919])
    CommitTransaction
    AcknowledgeMessages(deduplicationHandlers=[net.corda.testing.node.internal.MockNodeMessagingService$InMemoryDeduplicationHandler@31a55919])
    ScheduleEvent(event=DoRemainingWork)
  Continuation: ProcessEvents
  Diff between previous and next state:
pendingDeduplicationHandlers: 
    [net.corda.testing.node.internal.MockNodeMessagingService$InMemoryDeduplicationHandler@31a55919]
    []
numberOfCommits: 
    6
    7
checkpoint.flowIoRequest: 
    Receive
    Send
checkpoint.flowState.flowIORequest: 
    Receive(sessions=[FlowSessionImpl(destination=O=Mock Company 1, L=London, C=GB, sourceSessionId=SessionId(toLong=-6111232092193349787))])
    Send(sessionToMessage={FlowSessionImpl(destination=O=Mock Company 1, L=London, C=GB, sourceSessionId=SessionId(toLong=-6111232092193349787))=5A4ACCA876E182E6A7DFE903152E54ECD0BAAA64CEC40DD908C1185F4DC762CF})
checkpoint.flowState.frozenFiber.hash: 
    67B8B3BB7BC23F4FAB833AEA2BC7751915CC5A189991BC11A3589360C9C6C944
    7752CCCCD55AB58F8011BD26787FAB412B34AF2D2A5228AE54ED094C93D04574
checkpoint.checkpointState.numberOfCommits: 
    6
    7
checkpoint.checkpointState.numberOfSuspends: 
    5
    6
checkpoint.timestamp: 
    2023-01-31T07:00:15.309Z
    2023-01-31T07:00:15.318Z
isFlowResumed: 
    true
    false


 --- Transition of flow [19d5529e-5027-4fa9-b1fb-f606ce138a0e] ---
  Timestamp: 2023-01-31T07:00:15.320Z
  Event: DoRemainingWork
  Actions: 
    SendMultiple(sendInitial=[], sendExisting=[SendExisting(peerParty=O=Mock Company 1, L=London, C=GB, message=ExistingSessionMessage(recipientSessionId=SessionId(toLong=-846941239363969924), payload=DataSessionMessage(payload=class net.corda.core.serialization.SerializedBytes)), deduplicationId=SenderDeduplicationId(deduplicationId=DeduplicationId(toString=N-D--846941239363969924--3458992896374643217-6-0), senderUUID=029259cf-bb6a-44e3-8b88-309bd9c28ecc))])
    CreateTransaction
  Continuation: Resume(result=class kotlin.Unit)
  Diff between previous and next state:
isFlowResumed: 
    false
    true


 --- Transition of flow [19d5529e-5027-4fa9-b1fb-f606ce138a0e] ---
  Timestamp: 2023-01-31T07:00:15.320Z
  Event: LeaveSubFlow
  Actions: 
    
  Continuation: ProcessEvents
  Diff between previous and next state:
checkpoint.checkpointState.subFlowStack: 
    [Inlined(flowClass=class net.corda.samples.obligation.flows.IOUSettleFlowResponder, subFlowVersion=CorDappFlow(platformVersion=11, corDappName=workflows-1.0, corDappHash=B699A1A7AEE96EE2270B80DAE7A921F446B5529E562BC1497C4BF0F7569223AA), isEnabledTimedFlow=false), Inlined(flowClass=class net.corda.samples.obligation.flows.IOUSettleFlowResponder$call$signedTransactionFlow$1, subFlowVersion=CoreFlow(platformVersion=11), isEnabledTimedFlow=false)]
    [Inlined(flowClass=class net.corda.samples.obligation.flows.IOUSettleFlowResponder, subFlowVersion=CorDappFlow(platformVersion=11, corDappName=workflows-1.0, corDappHash=B699A1A7AEE96EE2270B80DAE7A921F446B5529E562BC1497C4BF0F7569223AA), isEnabledTimedFlow=false)]


 --- Transition of flow [19d5529e-5027-4fa9-b1fb-f606ce138a0e] ---
  Timestamp: 2023-01-31T07:00:15.320Z
  Event: EnterSubFlow(subFlowClass=class net.corda.core.flows.ReceiveFinalityFlow, subFlowVersion=CoreFlow(platformVersion=11), isEnabledTimedFlow=false)
  Actions: 
    
  Continuation: ProcessEvents
  Diff between previous and next state:
checkpoint.checkpointState.subFlowStack: 
    [Inlined(flowClass=class net.corda.samples.obligation.flows.IOUSettleFlowResponder, subFlowVersion=CorDappFlow(platformVersion=11, corDappName=workflows-1.0, corDappHash=B699A1A7AEE96EE2270B80DAE7A921F446B5529E562BC1497C4BF0F7569223AA), isEnabledTimedFlow=false)]
    [Inlined(flowClass=class net.corda.samples.obligation.flows.IOUSettleFlowResponder, subFlowVersion=CorDappFlow(platformVersion=11, corDappName=workflows-1.0, corDappHash=B699A1A7AEE96EE2270B80DAE7A921F446B5529E562BC1497C4BF0F7569223AA), isEnabledTimedFlow=false), Inlined(flowClass=class net.corda.core.flows.ReceiveFinalityFlow, subFlowVersion=CoreFlow(platformVersion=11), isEnabledTimedFlow=false)]


 --- Transition of flow [19d5529e-5027-4fa9-b1fb-f606ce138a0e] ---
  Timestamp: 2023-01-31T07:00:15.321Z
  Event: EnterSubFlow(subFlowClass=class net.corda.core.flows.ReceiveFinalityFlow$call$1, subFlowVersion=CoreFlow(platformVersion=11), isEnabledTimedFlow=false)
  Actions: 
    
  Continuation: ProcessEvents
  Diff between previous and next state:
checkpoint.checkpointState.subFlowStack: 
    [Inlined(flowClass=class net.corda.samples.obligation.flows.IOUSettleFlowResponder, subFlowVersion=CorDappFlow(platformVersion=11, corDappName=workflows-1.0, corDappHash=B699A1A7AEE96EE2270B80DAE7A921F446B5529E562BC1497C4BF0F7569223AA), isEnabledTimedFlow=false), Inlined(flowClass=class net.corda.core.flows.ReceiveFinalityFlow, subFlowVersion=CoreFlow(platformVersion=11), isEnabledTimedFlow=false)]
    [Inlined(flowClass=class net.corda.samples.obligation.flows.IOUSettleFlowResponder, subFlowVersion=CorDappFlow(platformVersion=11, corDappName=workflows-1.0, corDappHash=B699A1A7AEE96EE2270B80DAE7A921F446B5529E562BC1497C4BF0F7569223AA), isEnabledTimedFlow=false), Inlined(flowClass=class net.corda.core.flows.ReceiveFinalityFlow, subFlowVersion=CoreFlow(platformVersion=11), isEnabledTimedFlow=false), Inlined(flowClass=class net.corda.core.flows.ReceiveFinalityFlow$call$1, subFlowVersion=CoreFlow(platformVersion=11), isEnabledTimedFlow=false)]
checkpoint.timestamp: 
    2023-01-31T07:00:15.320Z
    2023-01-31T07:00:15.321Z


 --- Transition of flow [19d5529e-5027-4fa9-b1fb-f606ce138a0e] ---
  Timestamp: 2023-01-31T07:00:15.323Z
  Event: Suspend(ioRequest=Receive(sessions=[FlowSessionImpl(destination=O=Mock Company 1, L=London, C=GB, sourceSessionId=SessionId(toLong=-6111232092193349787))]), maySkipCheckpoint=false, fiber=E8B9014473032C07EA6B41C9BD0F7757B15F7E9AC8374E9AF7C85904623AC60D, currentStep=Starting)
  Actions: 
    PersistCheckpoint(id=[19d5529e-5027-4fa9-b1fb-f606ce138a0e], checkpoint=Checkpoint(checkpointState=CheckpointState(invocationContext=InvocationContext(origin=Peer(party=O=Mock Company 1, L=London, C=GB), trace=Trace(invocationId=ecadbadd-d49d-4516-8b4c-2ec4a2bd801c, timestamp: 2023-01-31T07:00:14.883Z, entityType: Invocation, sessionId=ecadbadd-d49d-4516-8b4c-2ec4a2bd801c, timestamp: 2023-01-31T07:00:14.883Z, entityType: Session), actor=null, externalTrace=null, impersonatedActor=null, arguments=[], clientId=null), ourIdentity=O=Mock Company 3, L=London, C=GB, sessions={SessionId(toLong=-6111232092193349787)=Initiated(peerParty=O=Mock Company 1, L=London, C=GB, peerFlowInfo=FlowInfo(flowVersion=1, appName=<unknown>), receivedMessages=[], otherSideErrored=false, peerSinkSessionId=SessionId(toLong=-846941239363969924), deduplicationSeed=D--846941239363969924--3458992896374643217)}, sessionsToBeClosed=[], subFlowStack=[Inlined(flowClass=class net.corda.samples.obligation.flows.IOUSettleFlowResponder, subFlowVersion=CorDappFlow(platformVersion=11, corDappName=workflows-1.0, corDappHash=B699A1A7AEE96EE2270B80DAE7A921F446B5529E562BC1497C4BF0F7569223AA), isEnabledTimedFlow=false), Inlined(flowClass=class net.corda.core.flows.ReceiveFinalityFlow, subFlowVersion=CoreFlow(platformVersion=11), isEnabledTimedFlow=false), Inlined(flowClass=class net.corda.core.flows.ReceiveFinalityFlow$call$1, subFlowVersion=CoreFlow(platformVersion=11), isEnabledTimedFlow=false)], numberOfSuspends=7, numberOfCommits=8), flowState=Started(flowIORequest=Receive(sessions=[FlowSessionImpl(destination=O=Mock Company 1, L=London, C=GB, sourceSessionId=SessionId(toLong=-6111232092193349787))]), frozenFiber=E8B9014473032C07EA6B41C9BD0F7757B15F7E9AC8374E9AF7C85904623AC60D), errorState=Clean, result=null, status=RUNNABLE, progressStep=Starting, flowIoRequest=Receive, compatible=true), isCheckpointUpdate=true)
    PersistDeduplicationFacts(deduplicationHandlers=[])
    CommitTransaction
    AcknowledgeMessages(deduplicationHandlers=[])
    ScheduleEvent(event=DoRemainingWork)
  Continuation: ProcessEvents
  Diff between previous and next state:
numberOfCommits: 
    7
    8
checkpoint.flowIoRequest: 
    Send
    Receive
checkpoint.flowState.flowIORequest: 
    Send(sessionToMessage={FlowSessionImpl(destination=O=Mock Company 1, L=London, C=GB, sourceSessionId=SessionId(toLong=-6111232092193349787))=5A4ACCA876E182E6A7DFE903152E54ECD0BAAA64CEC40DD908C1185F4DC762CF})
    Receive(sessions=[FlowSessionImpl(destination=O=Mock Company 1, L=London, C=GB, sourceSessionId=SessionId(toLong=-6111232092193349787))])
checkpoint.flowState.frozenFiber.hash: 
    7752CCCCD55AB58F8011BD26787FAB412B34AF2D2A5228AE54ED094C93D04574
    E8B9014473032C07EA6B41C9BD0F7757B15F7E9AC8374E9AF7C85904623AC60D
checkpoint.checkpointState.numberOfCommits: 
    7
    8
checkpoint.checkpointState.numberOfSuspends: 
    6
    7
checkpoint.timestamp: 
    2023-01-31T07:00:15.321Z
    2023-01-31T07:00:15.322Z
isFlowResumed: 
    true
    false


 --- Transition of flow [19d5529e-5027-4fa9-b1fb-f606ce138a0e] ---
  Timestamp: 2023-01-31T07:00:15.324Z
  Event: DoRemainingWork
  Actions: 
    
  Continuation: ProcessEvents
  Diff between previous and next state:
null

 --- Transition of flow [19d5529e-5027-4fa9-b1fb-f606ce138a0e] ---
  Timestamp: 2023-01-31T07:00:15.485Z
  Event: DeliverSessionMessage(sessionMessage=ExistingSessionMessage(recipientSessionId=SessionId(toLong=-6111232092193349787), payload=ErrorSessionMessage(flowException=null, errorId=3188663995452510243)), deduplicationHandler=net.corda.testing.node.internal.MockNodeMessagingService$InMemoryDeduplicationHandler@40087492, sender=O=Mock Company 1, L=London, C=GB)
  Actions: 
    ScheduleEvent(event=DoRemainingWork)
  Continuation: ProcessEvents
  Diff between previous and next state:
pendingDeduplicationHandlers: 
    []
    [net.corda.testing.node.internal.MockNodeMessagingService$InMemoryDeduplicationHandler@40087492]
checkpoint.checkpointState.sessions.SessionId(toLong=-6111232092193349787).receivedMessages.isEmpty: 
    true
    false
checkpoint.timestamp: 
    2023-01-31T07:00:15.323Z
    2023-01-31T07:00:15.485Z


 --- Transition of flow [19d5529e-5027-4fa9-b1fb-f606ce138a0e] ---
  Timestamp: 2023-01-31T07:00:15.486Z
  Event: DoRemainingWork
  Actions: 
    CreateTransaction
  Continuation: Throw(throwable=net.corda.core.flows.UnexpectedFlowEndException: Counter-flow errored)
  Diff between previous and next state:
checkpoint.checkpointState.sessions.SessionId(toLong=-6111232092193349787).receivedMessages.isEmpty: 
    false
    true
checkpoint.checkpointState.sessions.SessionId(toLong=-6111232092193349787).otherSideErrored: 
    false
    true
isFlowResumed: 
    false
    true


 --- Transition of flow [19d5529e-5027-4fa9-b1fb-f606ce138a0e] ---
  Timestamp: 2023-01-31T07:00:15.486Z
  Event: LeaveSubFlow
  Actions: 
    
  Continuation: ProcessEvents
  Diff between previous and next state:
checkpoint.checkpointState.subFlowStack: 
    [Inlined(flowClass=class net.corda.samples.obligation.flows.IOUSettleFlowResponder, subFlowVersion=CorDappFlow(platformVersion=11, corDappName=workflows-1.0, corDappHash=B699A1A7AEE96EE2270B80DAE7A921F446B5529E562BC1497C4BF0F7569223AA), isEnabledTimedFlow=false), Inlined(flowClass=class net.corda.core.flows.ReceiveFinalityFlow, subFlowVersion=CoreFlow(platformVersion=11), isEnabledTimedFlow=false), Inlined(flowClass=class net.corda.core.flows.ReceiveFinalityFlow$call$1, subFlowVersion=CoreFlow(platformVersion=11), isEnabledTimedFlow=false)]
    [Inlined(flowClass=class net.corda.samples.obligation.flows.IOUSettleFlowResponder, subFlowVersion=CorDappFlow(platformVersion=11, corDappName=workflows-1.0, corDappHash=B699A1A7AEE96EE2270B80DAE7A921F446B5529E562BC1497C4BF0F7569223AA), isEnabledTimedFlow=false), Inlined(flowClass=class net.corda.core.flows.ReceiveFinalityFlow, subFlowVersion=CoreFlow(platformVersion=11), isEnabledTimedFlow=false)]
checkpoint.timestamp: 
    2023-01-31T07:00:15.485Z
    2023-01-31T07:00:15.486Z


 --- Transition of flow [19d5529e-5027-4fa9-b1fb-f606ce138a0e] ---
  Timestamp: 2023-01-31T07:00:15.486Z
  Event: LeaveSubFlow
  Actions: 
    
  Continuation: ProcessEvents
  Diff between previous and next state:
checkpoint.checkpointState.subFlowStack: 
    [Inlined(flowClass=class net.corda.samples.obligation.flows.IOUSettleFlowResponder, subFlowVersion=CorDappFlow(platformVersion=11, corDappName=workflows-1.0, corDappHash=B699A1A7AEE96EE2270B80DAE7A921F446B5529E562BC1497C4BF0F7569223AA), isEnabledTimedFlow=false), Inlined(flowClass=class net.corda.core.flows.ReceiveFinalityFlow, subFlowVersion=CoreFlow(platformVersion=11), isEnabledTimedFlow=false)]
    [Inlined(flowClass=class net.corda.samples.obligation.flows.IOUSettleFlowResponder, subFlowVersion=CorDappFlow(platformVersion=11, corDappName=workflows-1.0, corDappHash=B699A1A7AEE96EE2270B80DAE7A921F446B5529E562BC1497C4BF0F7569223AA), isEnabledTimedFlow=false)]


 --- Transition of flow [19d5529e-5027-4fa9-b1fb-f606ce138a0e] ---
  Timestamp: 2023-01-31T07:00:15.487Z
  Event: Error(exception=net.corda.core.flows.UnexpectedFlowEndException: Counter-flow errored, rollback=true)
  Actions: 
    RollbackTransaction
    ScheduleEvent(event=DoRemainingWork)
  Continuation: ProcessEvents
  Diff between previous and next state:
checkpoint.errorState: 
    Clean
    Errored(errors=[FlowError(errorId=3188663995452510243, exception=net.corda.core.flows.UnexpectedFlowEndException: Counter-flow errored)], propagatedIndex=0, propagating=false)
isFlowResumed: 
    true
    false


 --- Transition of flow [19d5529e-5027-4fa9-b1fb-f606ce138a0e] ---
  Timestamp: 2023-01-31T07:00:15.487Z
  Event: DoRemainingWork
  Actions: 
    
  Continuation: ProcessEvents
  Diff between previous and next state:
null

 --- Transition of flow [19d5529e-5027-4fa9-b1fb-f606ce138a0e] ---
  Timestamp: 2023-01-31T07:00:15.487Z
  Event: StartErrorPropagation
  Actions: 
    ScheduleEvent(event=DoRemainingWork)
  Continuation: ProcessEvents
  Diff between previous and next state:
checkpoint.errorState.propagating: 
    false
    true
checkpoint.timestamp: 
    2023-01-31T07:00:15.486Z
    2023-01-31T07:00:15.487Z
 {fiber-id=10000029, flow-id=19d5529e-5027-4fa9-b1fb-f606ce138a0e, invocation_id=ecadbadd-d49d-4516-8b4c-2ec4a2bd801c, invocation_timestamp=2023-01-31T07:00:14.883Z, origin=O=Mock Company 1, L=London, C=GB, session_id=ecadbadd-d49d-4516-8b4c-2ec4a2bd801c, session_timestamp=2023-01-31T07:00:14.883Z, thread-id=859, tx_id=B8B88DF526D6289A98FCDCC0D0A5BE69453156D8846C61133778E9B0554C8B59}
[WARN ] 2023-01-31T07:00:15,505Z [Mock network] interceptors.DumpHistoryOnErrorInterceptor. - Flow [19d5529e-5027-4fa9-b1fb-f606ce138a0e] error {fiber-id=10000029, flow-id=19d5529e-5027-4fa9-b1fb-f606ce138a0e, invocation_id=ecadbadd-d49d-4516-8b4c-2ec4a2bd801c, invocation_timestamp=2023-01-31T07:00:14.883Z, origin=O=Mock Company 1, L=London, C=GB, session_id=ecadbadd-d49d-4516-8b4c-2ec4a2bd801c, session_timestamp=2023-01-31T07:00:14.883Z, thread-id=859, tx_id=B8B88DF526D6289A98FCDCC0D0A5BE69453156D8846C61133778E9B0554C8B59}
net.corda.core.flows.UnexpectedFlowEndException: Counter-flow errored
	at Received unexpected counter-flow exception from peer O=Mock Company 1, L=London, C=GB.() ~[?:?]
	at net.corda.node.services.statemachine.FlowStateMachineImpl.fillInLocalStackTrace(FlowStateMachineImpl.kt:244) ~[corda-node-4.9.jar:?]
	at net.corda.node.services.statemachine.FlowStateMachineImpl.processEventsUntilFlowIsResumed(FlowStateMachineImpl.kt:225) ~[corda-node-4.9.jar:?]
	at net.corda.node.services.statemachine.FlowStateMachineImpl.suspend(FlowStateMachineImpl.kt:577) ~[corda-node-4.9.jar:?]
	at net.corda.node.services.statemachine.FlowSessionImpl.receive(FlowSessionImpl.kt:67) ~[corda-node-4.9.jar:?]
	at net.corda.node.services.statemachine.FlowSessionImpl.receive(FlowSessionImpl.kt:71) ~[corda-node-4.9.jar:?]
	at net.corda.core.flows.ReceiveTransactionFlow.call(ReceiveTransactionFlow.kt:103) ~[corda-core-4.9.jar:?]
	at net.corda.core.flows.ReceiveTransactionFlow.call(ReceiveTransactionFlow.kt:31) ~[corda-core-4.9.jar:?]
	at net.corda.node.services.statemachine.FlowStateMachineImpl.subFlow(FlowStateMachineImpl.kt:420) ~[corda-node-4.9.jar:?]
	at net.corda.core.flows.FlowLogic.subFlow(FlowLogic.kt:409) ~[corda-core-4.9.jar:?]
	at net.corda.core.flows.ReceiveFinalityFlow.call(FinalityFlow.kt:285) ~[corda-core-4.9.jar:?]
	at net.corda.core.flows.ReceiveFinalityFlow.call(FinalityFlow.kt:280) ~[corda-core-4.9.jar:?]
	at net.corda.node.services.statemachine.FlowStateMachineImpl.subFlow(FlowStateMachineImpl.kt:420) ~[corda-node-4.9.jar:?]
	at net.corda.core.flows.FlowLogic.subFlow(FlowLogic.kt:409) ~[corda-core-4.9.jar:?]
	at net.corda.samples.obligation.flows.IOUSettleFlowResponder.call(IOUSettleFlow.kt:139) ~[main/:?]
	at net.corda.samples.obligation.flows.IOUSettleFlowResponder.call(IOUSettleFlow.kt:126) ~[main/:?]
	at net.corda.node.services.statemachine.FlowStateMachineImpl.run(FlowStateMachineImpl.kt:349) ~[corda-node-4.9.jar:?]
	at net.corda.node.services.statemachine.FlowStateMachineImpl.run(FlowStateMachineImpl.kt:71) ~[corda-node-4.9.jar:?]
	at co.paralleluniverse.fibers.Fiber.run1(Fiber.java:1092) ~[quasar-core-0.7.10.jar:0.7.10]
	at co.paralleluniverse.fibers.Fiber.exec(Fiber.java:788) ~[quasar-core-0.7.10.jar:0.7.10]
	at co.paralleluniverse.fibers.RunnableFiberTask.doExec(RunnableFiberTask.java:100) ~[quasar-core-0.7.10.jar:0.7.10]
	at co.paralleluniverse.fibers.RunnableFiberTask.run(RunnableFiberTask.java:91) ~[quasar-core-0.7.10.jar:0.7.10]
	at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511) ~[?:1.8.0_202]
	at java.util.concurrent.FutureTask.run(FutureTask.java:266) ~[?:1.8.0_202]
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.access$201(ScheduledThreadPoolExecutor.java:180) ~[?:1.8.0_202]
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.run(ScheduledThreadPoolExecutor.java:293) ~[?:1.8.0_202]
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149) ~[?:1.8.0_202]
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624) ~[?:1.8.0_202]
	at net.corda.node.utilities.AffinityExecutor$ServiceAffinityExecutor$1$thread$1.run(AffinityExecutor.kt:63) ~[corda-node-4.9.jar:?]
[WARN ] 2023-01-31T07:00:15,505Z [Mock network] statemachine.ActionExecutorImpl. - Propagating error {fiber-id=10000029, flow-id=19d5529e-5027-4fa9-b1fb-f606ce138a0e, invocation_id=ecadbadd-d49d-4516-8b4c-2ec4a2bd801c, invocation_timestamp=2023-01-31T07:00:14.883Z, origin=O=Mock Company 1, L=London, C=GB, session_id=ecadbadd-d49d-4516-8b4c-2ec4a2bd801c, session_timestamp=2023-01-31T07:00:14.883Z, thread-id=859, tx_id=B8B88DF526D6289A98FCDCC0D0A5BE69453156D8846C61133778E9B0554C8B59}
[WARN ] 2023-01-31T07:00:15,528Z [Mock network] interceptors.DumpHistoryOnErrorInterceptor. - Flow [19d5529e-5027-4fa9-b1fb-f606ce138a0e] errored, dumping all transitions:

 --- Transition of flow [19d5529e-5027-4fa9-b1fb-f606ce138a0e] ---
  Timestamp: 2023-01-31T07:00:14.886Z
  Event: DoRemainingWork
  Actions: 
    CreateTransaction
    PersistCheckpoint(id=[19d5529e-5027-4fa9-b1fb-f606ce138a0e], checkpoint=Checkpoint(checkpointState=CheckpointState(invocationContext=InvocationContext(origin=Peer(party=O=Mock Company 1, L=London, C=GB), trace=Trace(invocationId=ecadbadd-d49d-4516-8b4c-2ec4a2bd801c, timestamp: 2023-01-31T07:00:14.883Z, entityType: Invocation, sessionId=ecadbadd-d49d-4516-8b4c-2ec4a2bd801c, timestamp: 2023-01-31T07:00:14.883Z, entityType: Session), actor=null, externalTrace=null, impersonatedActor=null, arguments=[], clientId=null), ourIdentity=O=Mock Company 3, L=London, C=GB, sessions={}, sessionsToBeClosed=[], subFlowStack=[Inlined(flowClass=class net.corda.samples.obligation.flows.IOUSettleFlowResponder, subFlowVersion=CorDappFlow(platformVersion=11, corDappName=workflows-1.0, corDappHash=B699A1A7AEE96EE2270B80DAE7A921F446B5529E562BC1497C4BF0F7569223AA), isEnabledTimedFlow=false)], numberOfSuspends=0, numberOfCommits=1), flowState=Unstarted(flowStart=Initiated, frozenFlowLogic=E047B9EA62D845F27DB075BD000524C2DD35738B4D70ED6E21FC0DBD904E71C1), errorState=Clean, result=null, status=RUNNABLE, progressStep=null, flowIoRequest=null, compatible=true), isCheckpointUpdate=false)
    PersistDeduplicationFacts(deduplicationHandlers=[net.corda.testing.node.internal.MockNodeMessagingService$InMemoryDeduplicationHandler@349877ca])
    CommitTransaction
    AcknowledgeMessages(deduplicationHandlers=[net.corda.testing.node.internal.MockNodeMessagingService$InMemoryDeduplicationHandler@349877ca])
    SignalFlowHasStarted(flowId=[19d5529e-5027-4fa9-b1fb-f606ce138a0e])
    SendExisting(peerParty=O=Mock Company 1, L=London, C=GB, message=ExistingSessionMessage(recipientSessionId=SessionId(toLong=-846941239363969924), payload=ConfirmSessionMessage(initiatedSessionId=SessionId(toLong=-6111232092193349787), initiatedFlowInfo=FlowInfo(flowVersion=1, appName=<unknown>))), deduplicationId=SenderDeduplicationId(deduplicationId=DeduplicationId(toString=N-D--846941239363969924--3458992896374643217-0-0), senderUUID=029259cf-bb6a-44e3-8b88-309bd9c28ecc))
    CreateTransaction
  Continuation: Resume(result=null)
  Diff between previous and next state:
pendingDeduplicationHandlers: 
    [net.corda.testing.node.internal.MockNodeMessagingService$InMemoryDeduplicationHandler@349877ca]
    []
isAnyCheckpointPersisted: 
    false
    true
checkpoint.checkpointState.sessions.SessionId(toLong=-6111232092193349787): 
    null
    Initiated(peerParty=O=Mock Company 1, L=London, C=GB, peerFlowInfo=FlowInfo(flowVersion=1, appName=<unknown>), receivedMessages=[DataSessionMessage(payload=class net.corda.core.serialization.SerializedBytes)], otherSideErrored=false, peerSinkSessionId=SessionId(toLong=-846941239363969924), deduplicationSeed=D--846941239363969924--3458992896374643217)
isFlowResumed: 
    false
    true


 --- Transition of flow [19d5529e-5027-4fa9-b1fb-f606ce138a0e] ---
  Timestamp: 2023-01-31T07:00:14.888Z
  Event: EnterSubFlow(subFlowClass=class net.corda.samples.obligation.flows.IOUSettleFlowResponder$call$signedTransactionFlow$1, subFlowVersion=CoreFlow(platformVersion=11), isEnabledTimedFlow=false)
  Actions: 
    
  Continuation: ProcessEvents
  Diff between previous and next state:
checkpoint.checkpointState.subFlowStack: 
    [Inlined(flowClass=class net.corda.samples.obligation.flows.IOUSettleFlowResponder, subFlowVersion=CorDappFlow(platformVersion=11, corDappName=workflows-1.0, corDappHash=B699A1A7AEE96EE2270B80DAE7A921F446B5529E562BC1497C4BF0F7569223AA), isEnabledTimedFlow=false)]
    [Inlined(flowClass=class net.corda.samples.obligation.flows.IOUSettleFlowResponder, subFlowVersion=CorDappFlow(platformVersion=11, corDappName=workflows-1.0, corDappHash=B699A1A7AEE96EE2270B80DAE7A921F446B5529E562BC1497C4BF0F7569223AA), isEnabledTimedFlow=false), Inlined(flowClass=class net.corda.samples.obligation.flows.IOUSettleFlowResponder$call$signedTransactionFlow$1, subFlowVersion=CoreFlow(platformVersion=11), isEnabledTimedFlow=false)]
checkpoint.timestamp: 
    2023-01-31T07:00:14.884Z
    2023-01-31T07:00:14.888Z


 --- Transition of flow [19d5529e-5027-4fa9-b1fb-f606ce138a0e] ---
  Timestamp: 2023-01-31T07:00:14.888Z
  Event: EnterSubFlow(subFlowClass=class net.corda.core.flows.ReceiveTransactionFlow, subFlowVersion=CoreFlow(platformVersion=11), isEnabledTimedFlow=false)
  Actions: 
    
  Continuation: ProcessEvents
  Diff between previous and next state:
checkpoint.checkpointState.subFlowStack: 
    [Inlined(flowClass=class net.corda.samples.obligation.flows.IOUSettleFlowResponder, subFlowVersion=CorDappFlow(platformVersion=11, corDappName=workflows-1.0, corDappHash=B699A1A7AEE96EE2270B80DAE7A921F446B5529E562BC1497C4BF0F7569223AA), isEnabledTimedFlow=false), Inlined(flowClass=class net.corda.samples.obligation.flows.IOUSettleFlowResponder$call$signedTransactionFlow$1, subFlowVersion=CoreFlow(platformVersion=11), isEnabledTimedFlow=false)]
    [Inlined(flowClass=class net.corda.samples.obligation.flows.IOUSettleFlowResponder, subFlowVersion=CorDappFlow(platformVersion=11, corDappName=workflows-1.0, corDappHash=B699A1A7AEE96EE2270B80DAE7A921F446B5529E562BC1497C4BF0F7569223AA), isEnabledTimedFlow=false), Inlined(flowClass=class net.corda.samples.obligation.flows.IOUSettleFlowResponder$call$signedTransactionFlow$1, subFlowVersion=CoreFlow(platformVersion=11), isEnabledTimedFlow=false), Inlined(flowClass=class net.corda.core.flows.ReceiveTransactionFlow, subFlowVersion=CoreFlow(platformVersion=11), isEnabledTimedFlow=false)]


 --- Transition of flow [19d5529e-5027-4fa9-b1fb-f606ce138a0e] ---
  Timestamp: 2023-01-31T07:00:14.892Z
  Event: Suspend(ioRequest=Receive(sessions=[FlowSessionImpl(destination=O=Mock Company 1, L=London, C=GB, sourceSessionId=SessionId(toLong=-6111232092193349787))]), maySkipCheckpoint=false, fiber=342A7BE535909EDDBDE82CF63B3921E42B2D1CA1416744C8742642BBBD6CE9F8, currentStep=Starting)
  Actions: 
    PersistCheckpoint(id=[19d5529e-5027-4fa9-b1fb-f606ce138a0e], checkpoint=Checkpoint(checkpointState=CheckpointState(invocationContext=InvocationContext(origin=Peer(party=O=Mock Company 1, L=London, C=GB), trace=Trace(invocationId=ecadbadd-d49d-4516-8b4c-2ec4a2bd801c, timestamp: 2023-01-31T07:00:14.883Z, entityType: Invocation, sessionId=ecadbadd-d49d-4516-8b4c-2ec4a2bd801c, timestamp: 2023-01-31T07:00:14.883Z, entityType: Session), actor=null, externalTrace=null, impersonatedActor=null, arguments=[], clientId=null), ourIdentity=O=Mock Company 3, L=London, C=GB, sessions={SessionId(toLong=-6111232092193349787)=Initiated(peerParty=O=Mock Company 1, L=London, C=GB, peerFlowInfo=FlowInfo(flowVersion=1, appName=<unknown>), receivedMessages=[DataSessionMessage(payload=class net.corda.core.serialization.SerializedBytes)], otherSideErrored=false, peerSinkSessionId=SessionId(toLong=-846941239363969924), deduplicationSeed=D--846941239363969924--3458992896374643217)}, sessionsToBeClosed=[], subFlowStack=[Inlined(flowClass=class net.corda.samples.obligation.flows.IOUSettleFlowResponder, subFlowVersion=CorDappFlow(platformVersion=11, corDappName=workflows-1.0, corDappHash=B699A1A7AEE96EE2270B80DAE7A921F446B5529E562BC1497C4BF0F7569223AA), isEnabledTimedFlow=false), Inlined(flowClass=class net.corda.samples.obligation.flows.IOUSettleFlowResponder$call$signedTransactionFlow$1, subFlowVersion=CoreFlow(platformVersion=11), isEnabledTimedFlow=false), Inlined(flowClass=class net.corda.core.flows.ReceiveTransactionFlow, subFlowVersion=CoreFlow(platformVersion=11), isEnabledTimedFlow=false)], numberOfSuspends=1, numberOfCommits=2), flowState=Started(flowIORequest=Receive(sessions=[FlowSessionImpl(destination=O=Mock Company 1, L=London, C=GB, sourceSessionId=SessionId(toLong=-6111232092193349787))]), frozenFiber=342A7BE535909EDDBDE82CF63B3921E42B2D1CA1416744C8742642BBBD6CE9F8), errorState=Clean, result=null, status=RUNNABLE, progressStep=Starting, flowIoRequest=Receive, compatible=true), isCheckpointUpdate=true)
    PersistDeduplicationFacts(deduplicationHandlers=[])
    CommitTransaction
    AcknowledgeMessages(deduplicationHandlers=[])
    ScheduleEvent(event=DoRemainingWork)
  Continuation: ProcessEvents
  Diff between previous and next state:
numberOfCommits: 
    0
    2
checkpoint.flowIoRequest: 
    null
    Receive
checkpoint.flowState: 
    Unstarted(flowStart=Initiated, frozenFlowLogic=E047B9EA62D845F27DB075BD000524C2DD35738B4D70ED6E21FC0DBD904E71C1)
    Started(flowIORequest=Receive(sessions=[FlowSessionImpl(destination=O=Mock Company 1, L=London, C=GB, sourceSessionId=SessionId(toLong=-6111232092193349787))]), frozenFiber=342A7BE535909EDDBDE82CF63B3921E42B2D1CA1416744C8742642BBBD6CE9F8)
checkpoint.checkpointState.numberOfCommits: 
    1
    2
checkpoint.checkpointState.numberOfSuspends: 
    0
    1
checkpoint.progressStep: 
    null
    Starting
checkpoint.timestamp: 
    2023-01-31T07:00:14.888Z
    2023-01-31T07:00:14.890Z
isFlowResumed: 
    true
    false


 --- Transition of flow [19d5529e-5027-4fa9-b1fb-f606ce138a0e] ---
  Timestamp: 2023-01-31T07:00:14.893Z
  Event: DoRemainingWork
  Actions: 
    CreateTransaction
  Continuation: Resume(result=class java.util.LinkedHashMap)
  Diff between previous and next state:
checkpoint.checkpointState.sessions.SessionId(toLong=-6111232092193349787).receivedMessages.isEmpty: 
    false
    true
checkpoint.timestamp: 
    2023-01-31T07:00:14.890Z
    2023-01-31T07:00:14.893Z
isFlowResumed: 
    false
    true


 --- Transition of flow [19d5529e-5027-4fa9-b1fb-f606ce138a0e] ---
  Timestamp: 2023-01-31T07:00:14.900Z
  Event: EnterSubFlow(subFlowClass=class net.corda.core.internal.ResolveTransactionsFlow, subFlowVersion=CoreFlow(platformVersion=11), isEnabledTimedFlow=false)
  Actions: 
    
  Continuation: ProcessEvents
  Diff between previous and next state:
checkpoint.checkpointState.subFlowStack: 
    [Inlined(flowClass=class net.corda.samples.obligation.flows.IOUSettleFlowResponder, subFlowVersion=CorDappFlow(platformVersion=11, corDappName=workflows-1.0, corDappHash=B699A1A7AEE96EE2270B80DAE7A921F446B5529E562BC1497C4BF0F7569223AA), isEnabledTimedFlow=false), Inlined(flowClass=class net.corda.samples.obligation.flows.IOUSettleFlowResponder$call$signedTransactionFlow$1, subFlowVersion=CoreFlow(platformVersion=11), isEnabledTimedFlow=false), Inlined(flowClass=class net.corda.core.flows.ReceiveTransactionFlow, subFlowVersion=CoreFlow(platformVersion=11), isEnabledTimedFlow=false)]
    [Inlined(flowClass=class net.corda.samples.obligation.flows.IOUSettleFlowResponder, subFlowVersion=CorDappFlow(platformVersion=11, corDappName=workflows-1.0, corDappHash=B699A1A7AEE96EE2270B80DAE7A921F446B5529E562BC1497C4BF0F7569223AA), isEnabledTimedFlow=false), Inlined(flowClass=class net.corda.samples.obligation.flows.IOUSettleFlowResponder$call$signedTransactionFlow$1, subFlowVersion=CoreFlow(platformVersion=11), isEnabledTimedFlow=false), Inlined(flowClass=class net.corda.core.flows.ReceiveTransactionFlow, subFlowVersion=CoreFlow(platformVersion=11), isEnabledTimedFlow=false), Inlined(flowClass=class net.corda.core.internal.ResolveTransactionsFlow, subFlowVersion=CoreFlow(platformVersion=11), isEnabledTimedFlow=false)]
checkpoint.timestamp: 
    2023-01-31T07:00:14.893Z
    2023-01-31T07:00:14.895Z


 --- Transition of flow [19d5529e-5027-4fa9-b1fb-f606ce138a0e] ---
  Timestamp: 2023-01-31T07:00:14.901Z
  Event: EnterSubFlow(subFlowClass=class net.corda.core.internal.FetchAttachmentsFlow, subFlowVersion=CoreFlow(platformVersion=11), isEnabledTimedFlow=false)
  Actions: 
    
  Continuation: ProcessEvents
  Diff between previous and next state:
checkpoint.checkpointState.subFlowStack: 
    [Inlined(flowClass=class net.corda.samples.obligation.flows.IOUSettleFlowResponder, subFlowVersion=CorDappFlow(platformVersion=11, corDappName=workflows-1.0, corDappHash=B699A1A7AEE96EE2270B80DAE7A921F446B5529E562BC1497C4BF0F7569223AA), isEnabledTimedFlow=false), Inlined(flowClass=class net.corda.samples.obligation.flows.IOUSettleFlowResponder$call$signedTransactionFlow$1, subFlowVersion=CoreFlow(platformVersion=11), isEnabledTimedFlow=false), Inlined(flowClass=class net.corda.core.flows.ReceiveTransactionFlow, subFlowVersion=CoreFlow(platformVersion=11), isEnabledTimedFlow=false), Inlined(flowClass=class net.corda.core.internal.ResolveTransactionsFlow, subFlowVersion=CoreFlow(platformVersion=11), isEnabledTimedFlow=false)]
    [Inlined(flowClass=class net.corda.samples.obligation.flows.IOUSettleFlowResponder, subFlowVersion=CorDappFlow(platformVersion=11, corDappName=workflows-1.0, corDappHash=B699A1A7AEE96EE2270B80DAE7A921F446B5529E562BC1497C4BF0F7569223AA), isEnabledTimedFlow=false), Inlined(flowClass=class net.corda.samples.obligation.flows.IOUSettleFlowResponder$call$signedTransactionFlow$1, subFlowVersion=CoreFlow(platformVersion=11), isEnabledTimedFlow=false), Inlined(flowClass=class net.corda.core.flows.ReceiveTransactionFlow, subFlowVersion=CoreFlow(platformVersion=11), isEnabledTimedFlow=false), Inlined(flowClass=class net.corda.core.internal.ResolveTransactionsFlow, subFlowVersion=CoreFlow(platformVersion=11), isEnabledTimedFlow=false), Inlined(flowClass=class net.corda.core.internal.FetchAttachmentsFlow, subFlowVersion=CoreFlow(platformVersion=11), isEnabledTimedFlow=false)]
checkpoint.timestamp: 
    2023-01-31T07:00:14.895Z
    2023-01-31T07:00:14.901Z


 --- Transition of flow [19d5529e-5027-4fa9-b1fb-f606ce138a0e] ---
  Timestamp: 2023-01-31T07:00:14.903Z
  Event: LeaveSubFlow
  Actions: 
    
  Continuation: ProcessEvents
  Diff between previous and next state:
checkpoint.checkpointState.subFlowStack: 
    [Inlined(flowClass=class net.corda.samples.obligation.flows.IOUSettleFlowResponder, subFlowVersion=CorDappFlow(platformVersion=11, corDappName=workflows-1.0, corDappHash=B699A1A7AEE96EE2270B80DAE7A921F446B5529E562BC1497C4BF0F7569223AA), isEnabledTimedFlow=false), Inlined(flowClass=class net.corda.samples.obligation.flows.IOUSettleFlowResponder$call$signedTransactionFlow$1, subFlowVersion=CoreFlow(platformVersion=11), isEnabledTimedFlow=false), Inlined(flowClass=class net.corda.core.flows.ReceiveTransactionFlow, subFlowVersion=CoreFlow(platformVersion=11), isEnabledTimedFlow=false), Inlined(flowClass=class net.corda.core.internal.ResolveTransactionsFlow, subFlowVersion=CoreFlow(platformVersion=11), isEnabledTimedFlow=false), Inlined(flowClass=class net.corda.core.internal.FetchAttachmentsFlow, subFlowVersion=CoreFlow(platformVersion=11), isEnabledTimedFlow=false)]
    [Inlined(flowClass=class net.corda.samples.obligation.flows.IOUSettleFlowResponder, subFlowVersion=CorDappFlow(platformVersion=11, corDappName=workflows-1.0, corDappHash=B699A1A7AEE96EE2270B80DAE7A921F446B5529E562BC1497C4BF0F7569223AA), isEnabledTimedFlow=false), Inlined(flowClass=class net.corda.samples.obligation.flows.IOUSettleFlowResponder$call$signedTransactionFlow$1, subFlowVersion=CoreFlow(platformVersion=11), isEnabledTimedFlow=false), Inlined(flowClass=class net.corda.core.flows.ReceiveTransactionFlow, subFlowVersion=CoreFlow(platformVersion=11), isEnabledTimedFlow=false), Inlined(flowClass=class net.corda.core.internal.ResolveTransactionsFlow, subFlowVersion=CoreFlow(platformVersion=11), isEnabledTimedFlow=false)]
checkpoint.timestamp: 
    2023-01-31T07:00:14.901Z
    2023-01-31T07:00:14.903Z


 --- Transition of flow [19d5529e-5027-4fa9-b1fb-f606ce138a0e] ---
  Timestamp: 2023-01-31T07:00:14.903Z
  Event: EnterSubFlow(subFlowClass=class net.corda.core.internal.FetchNetworkParametersFlow, subFlowVersion=CoreFlow(platformVersion=11), isEnabledTimedFlow=false)
  Actions: 
    
  Continuation: ProcessEvents
  Diff between previous and next state:
checkpoint.checkpointState.subFlowStack: 
    [Inlined(flowClass=class net.corda.samples.obligation.flows.IOUSettleFlowResponder, subFlowVersion=CorDappFlow(platformVersion=11, corDappName=workflows-1.0, corDappHash=B699A1A7AEE96EE2270B80DAE7A921F446B5529E562BC1497C4BF0F7569223AA), isEnabledTimedFlow=false), Inlined(flowClass=class net.corda.samples.obligation.flows.IOUSettleFlowResponder$call$signedTransactionFlow$1, subFlowVersion=CoreFlow(platformVersion=11), isEnabledTimedFlow=false), Inlined(flowClass=class net.corda.core.flows.ReceiveTransactionFlow, subFlowVersion=CoreFlow(platformVersion=11), isEnabledTimedFlow=false), Inlined(flowClass=class net.corda.core.internal.ResolveTransactionsFlow, subFlowVersion=CoreFlow(platformVersion=11), isEnabledTimedFlow=false)]
    [Inlined(flowClass=class net.corda.samples.obligation.flows.IOUSettleFlowResponder, subFlowVersion=CorDappFlow(platformVersion=11, corDappName=workflows-1.0, corDappHash=B699A1A7AEE96EE2270B80DAE7A921F446B5529E562BC1497C4BF0F7569223AA), isEnabledTimedFlow=false), Inlined(flowClass=class net.corda.samples.obligation.flows.IOUSettleFlowResponder$call$signedTransactionFlow$1, subFlowVersion=CoreFlow(platformVersion=11), isEnabledTimedFlow=false), Inlined(flowClass=class net.corda.core.flows.ReceiveTransactionFlow, subFlowVersion=CoreFlow(platformVersion=11), isEnabledTimedFlow=false), Inlined(flowClass=class net.corda.core.internal.ResolveTransactionsFlow, subFlowVersion=CoreFlow(platformVersion=11), isEnabledTimedFlow=false), Inlined(flowClass=class net.corda.core.internal.FetchNetworkParametersFlow, subFlowVersion=CoreFlow(platformVersion=11), isEnabledTimedFlow=false)]


 --- Transition of flow [19d5529e-5027-4fa9-b1fb-f606ce138a0e] ---
  Timestamp: 2023-01-31T07:00:14.904Z
  Event: LeaveSubFlow
  Actions: 
    
  Continuation: ProcessEvents
  Diff between previous and next state:
checkpoint.checkpointState.subFlowStack: 
    [Inlined(flowClass=class net.corda.samples.obligation.flows.IOUSettleFlowResponder, subFlowVersion=CorDappFlow(platformVersion=11, corDappName=workflows-1.0, corDappHash=B699A1A7AEE96EE2270B80DAE7A921F446B5529E562BC1497C4BF0F7569223AA), isEnabledTimedFlow=false), Inlined(flowClass=class net.corda.samples.obligation.flows.IOUSettleFlowResponder$call$signedTransactionFlow$1, subFlowVersion=CoreFlow(platformVersion=11), isEnabledTimedFlow=false), Inlined(flowClass=class net.corda.core.flows.ReceiveTransactionFlow, subFlowVersion=CoreFlow(platformVersion=11), isEnabledTimedFlow=false), Inlined(flowClass=class net.corda.core.internal.ResolveTransactionsFlow, subFlowVersion=CoreFlow(platformVersion=11), isEnabledTimedFlow=false), Inlined(flowClass=class net.corda.core.internal.FetchNetworkParametersFlow, subFlowVersion=CoreFlow(platformVersion=11), isEnabledTimedFlow=false)]
    [Inlined(flowClass=class net.corda.samples.obligation.flows.IOUSettleFlowResponder, subFlowVersion=CorDappFlow(platformVersion=11, corDappName=workflows-1.0, corDappHash=B699A1A7AEE96EE2270B80DAE7A921F446B5529E562BC1497C4BF0F7569223AA), isEnabledTimedFlow=false), Inlined(flowClass=class net.corda.samples.obligation.flows.IOUSettleFlowResponder$call$signedTransactionFlow$1, subFlowVersion=CoreFlow(platformVersion=11), isEnabledTimedFlow=false), Inlined(flowClass=class net.corda.core.flows.ReceiveTransactionFlow, subFlowVersion=CoreFlow(platformVersion=11), isEnabledTimedFlow=false), Inlined(flowClass=class net.corda.core.internal.ResolveTransactionsFlow, subFlowVersion=CoreFlow(platformVersion=11), isEnabledTimedFlow=false)]
checkpoint.timestamp: 
    2023-01-31T07:00:14.903Z
    2023-01-31T07:00:14.904Z


 --- Transition of flow [19d5529e-5027-4fa9-b1fb-f606ce138a0e] ---
  Timestamp: 2023-01-31T07:00:14.904Z
  Event: EnterSubFlow(subFlowClass=class net.corda.core.internal.FetchTransactionsFlow, subFlowVersion=CoreFlow(platformVersion=11), isEnabledTimedFlow=false)
  Actions: 
    
  Continuation: ProcessEvents
  Diff between previous and next state:
checkpoint.checkpointState.subFlowStack: 
    [Inlined(flowClass=class net.corda.samples.obligation.flows.IOUSettleFlowResponder, subFlowVersion=CorDappFlow(platformVersion=11, corDappName=workflows-1.0, corDappHash=B699A1A7AEE96EE2270B80DAE7A921F446B5529E562BC1497C4BF0F7569223AA), isEnabledTimedFlow=false), Inlined(flowClass=class net.corda.samples.obligation.flows.IOUSettleFlowResponder$call$signedTransactionFlow$1, subFlowVersion=CoreFlow(platformVersion=11), isEnabledTimedFlow=false), Inlined(flowClass=class net.corda.core.flows.ReceiveTransactionFlow, subFlowVersion=CoreFlow(platformVersion=11), isEnabledTimedFlow=false), Inlined(flowClass=class net.corda.core.internal.ResolveTransactionsFlow, subFlowVersion=CoreFlow(platformVersion=11), isEnabledTimedFlow=false)]
    [Inlined(flowClass=class net.corda.samples.obligation.flows.IOUSettleFlowResponder, subFlowVersion=CorDappFlow(platformVersion=11, corDappName=workflows-1.0, corDappHash=B699A1A7AEE96EE2270B80DAE7A921F446B5529E562BC1497C4BF0F7569223AA), isEnabledTimedFlow=false), Inlined(flowClass=class net.corda.samples.obligation.flows.IOUSettleFlowResponder$call$signedTransactionFlow$1, subFlowVersion=CoreFlow(platformVersion=11), isEnabledTimedFlow=false), Inlined(flowClass=class net.corda.core.flows.ReceiveTransactionFlow, subFlowVersion=CoreFlow(platformVersion=11), isEnabledTimedFlow=false), Inlined(flowClass=class net.corda.core.internal.ResolveTransactionsFlow, subFlowVersion=CoreFlow(platformVersion=11), isEnabledTimedFlow=false), Inlined(flowClass=class net.corda.core.internal.FetchTransactionsFlow, subFlowVersion=CoreFlow(platformVersion=11), isEnabledTimedFlow=false)]


 --- Transition of flow [19d5529e-5027-4fa9-b1fb-f606ce138a0e] ---
  Timestamp: 2023-01-31T07:00:14.909Z
  Event: Suspend(ioRequest=SendAndReceive({FlowSessionImpl(destination=O=Mock Company 1, L=London, C=GB, sourceSessionId=SessionId(toLong=-6111232092193349787))=FlowSessionImpl(destination=O=Mock Company 1, L=London, C=GB, sourceSessionId=SessionId(toLong=-6111232092193349787))=EE05605337B669421E0209244EB9F8BA45B8C67B7A817369C761E46DEF85D194}, shouldRetrySend=false), maySkipCheckpoint=false, fiber=E97EDA5D2375299EC73CAA8DD1EFC777489F86401E9EDF57D24CB453AFADD68E, currentStep=Starting)
  Actions: 
    PersistCheckpoint(id=[19d5529e-5027-4fa9-b1fb-f606ce138a0e], checkpoint=Checkpoint(checkpointState=CheckpointState(invocationContext=InvocationContext(origin=Peer(party=O=Mock Company 1, L=London, C=GB), trace=Trace(invocationId=ecadbadd-d49d-4516-8b4c-2ec4a2bd801c, timestamp: 2023-01-31T07:00:14.883Z, entityType: Invocation, sessionId=ecadbadd-d49d-4516-8b4c-2ec4a2bd801c, timestamp: 2023-01-31T07:00:14.883Z, entityType: Session), actor=null, externalTrace=null, impersonatedActor=null, arguments=[], clientId=null), ourIdentity=O=Mock Company 3, L=London, C=GB, sessions={SessionId(toLong=-6111232092193349787)=Initiated(peerParty=O=Mock Company 1, L=London, C=GB, peerFlowInfo=FlowInfo(flowVersion=1, appName=<unknown>), receivedMessages=[], otherSideErrored=false, peerSinkSessionId=SessionId(toLong=-846941239363969924), deduplicationSeed=D--846941239363969924--3458992896374643217)}, sessionsToBeClosed=[], subFlowStack=[Inlined(flowClass=class net.corda.samples.obligation.flows.IOUSettleFlowResponder, subFlowVersion=CorDappFlow(platformVersion=11, corDappName=workflows-1.0, corDappHash=B699A1A7AEE96EE2270B80DAE7A921F446B5529E562BC1497C4BF0F7569223AA), isEnabledTimedFlow=false), Inlined(flowClass=class net.corda.samples.obligation.flows.IOUSettleFlowResponder$call$signedTransactionFlow$1, subFlowVersion=CoreFlow(platformVersion=11), isEnabledTimedFlow=false), Inlined(flowClass=class net.corda.core.flows.ReceiveTransactionFlow, subFlowVersion=CoreFlow(platformVersion=11), isEnabledTimedFlow=false), Inlined(flowClass=class net.corda.core.internal.ResolveTransactionsFlow, subFlowVersion=CoreFlow(platformVersion=11), isEnabledTimedFlow=false), Inlined(flowClass=class net.corda.core.internal.FetchTransactionsFlow, subFlowVersion=CoreFlow(platformVersion=11), isEnabledTimedFlow=false)], numberOfSuspends=2, numberOfCommits=3), flowState=Started(flowIORequest=SendAndReceive({FlowSessionImpl(destination=O=Mock Company 1, L=London, C=GB, sourceSessionId=SessionId(toLong=-6111232092193349787))=FlowSessionImpl(destination=O=Mock Company 1, L=London, C=GB, sourceSessionId=SessionId(toLong=-6111232092193349787))=EE05605337B669421E0209244EB9F8BA45B8C67B7A817369C761E46DEF85D194}, shouldRetrySend=false), frozenFiber=E97EDA5D2375299EC73CAA8DD1EFC777489F86401E9EDF57D24CB453AFADD68E), errorState=Clean, result=null, status=RUNNABLE, progressStep=Starting, flowIoRequest=SendAndReceive, compatible=true), isCheckpointUpdate=true)
    PersistDeduplicationFacts(deduplicationHandlers=[])
    CommitTransaction
    AcknowledgeMessages(deduplicationHandlers=[])
    ScheduleEvent(event=DoRemainingWork)
  Continuation: ProcessEvents
  Diff between previous and next state:
numberOfCommits: 
    2
    3
checkpoint.flowIoRequest: 
    Receive
    SendAndReceive
checkpoint.flowState.flowIORequest: 
    Receive(sessions=[FlowSessionImpl(destination=O=Mock Company 1, L=London, C=GB, sourceSessionId=SessionId(toLong=-6111232092193349787))])
    SendAndReceive({FlowSessionImpl(destination=O=Mock Company 1, L=London, C=GB, sourceSessionId=SessionId(toLong=-6111232092193349787))=FlowSessionImpl(destination=O=Mock Company 1, L=London, C=GB, sourceSessionId=SessionId(toLong=-6111232092193349787))=EE05605337B669421E0209244EB9F8BA45B8C67B7A817369C761E46DEF85D194}, shouldRetrySend=false)
checkpoint.flowState.frozenFiber.hash: 
    342A7BE535909EDDBDE82CF63B3921E42B2D1CA1416744C8742642BBBD6CE9F8
    E97EDA5D2375299EC73CAA8DD1EFC777489F86401E9EDF57D24CB453AFADD68E
checkpoint.checkpointState.numberOfCommits: 
    2
    3
checkpoint.checkpointState.numberOfSuspends: 
    1
    2
checkpoint.timestamp: 
    2023-01-31T07:00:14.904Z
    2023-01-31T07:00:14.908Z
isFlowResumed: 
    true
    false


 --- Transition of flow [19d5529e-5027-4fa9-b1fb-f606ce138a0e] ---
  Timestamp: 2023-01-31T07:00:14.910Z
  Event: DoRemainingWork
  Actions: 
    SendMultiple(sendInitial=[], sendExisting=[SendExisting(peerParty=O=Mock Company 1, L=London, C=GB, message=ExistingSessionMessage(recipientSessionId=SessionId(toLong=-846941239363969924), payload=DataSessionMessage(payload=class net.corda.core.serialization.SerializedBytes)), deduplicationId=SenderDeduplicationId(deduplicationId=DeduplicationId(toString=N-D--846941239363969924--3458992896374643217-2-0), senderUUID=029259cf-bb6a-44e3-8b88-309bd9c28ecc))])
  Continuation: ProcessEvents
  Diff between previous and next state:
checkpoint.flowState.flowIORequest: 
    SendAndReceive({FlowSessionImpl(destination=O=Mock Company 1, L=London, C=GB, sourceSessionId=SessionId(toLong=-6111232092193349787))=FlowSessionImpl(destination=O=Mock Company 1, L=London, C=GB, sourceSessionId=SessionId(toLong=-6111232092193349787))=EE05605337B669421E0209244EB9F8BA45B8C67B7A817369C761E46DEF85D194}, shouldRetrySend=false)
    Receive(sessions=[FlowSessionImpl(destination=O=Mock Company 1, L=London, C=GB, sourceSessionId=SessionId(toLong=-6111232092193349787))])
checkpoint.timestamp: 
    2023-01-31T07:00:14.908Z
    2023-01-31T07:00:14.910Z


 --- Transition of flow [19d5529e-5027-4fa9-b1fb-f606ce138a0e] ---
  Timestamp: 2023-01-31T07:00:14.924Z
  Event: DeliverSessionMessage(sessionMessage=ExistingSessionMessage(recipientSessionId=SessionId(toLong=-6111232092193349787), payload=DataSessionMessage(payload=class net.corda.core.serialization.SerializedBytes)), deduplicationHandler=net.corda.testing.node.internal.MockNodeMessagingService$InMemoryDeduplicationHandler@37b7392f, sender=O=Mock Company 1, L=London, C=GB)
  Actions: 
    ScheduleEvent(event=DoRemainingWork)
  Continuation: ProcessEvents
  Diff between previous and next state:
pendingDeduplicationHandlers: 
    []
    [net.corda.testing.node.internal.MockNodeMessagingService$InMemoryDeduplicationHandler@37b7392f]
checkpoint.checkpointState.sessions.SessionId(toLong=-6111232092193349787).receivedMessages.isEmpty: 
    true
    false
checkpoint.timestamp: 
    2023-01-31T07:00:14.910Z
    2023-01-31T07:00:14.924Z


 --- Transition of flow [19d5529e-5027-4fa9-b1fb-f606ce138a0e] ---
  Timestamp: 2023-01-31T07:00:14.924Z
  Event: DoRemainingWork
  Actions: 
    CreateTransaction
  Continuation: Resume(result=class java.util.LinkedHashMap)
  Diff between previous and next state:
checkpoint.checkpointState.sessions.SessionId(toLong=-6111232092193349787).receivedMessages.isEmpty: 
    false
    true
isFlowResumed: 
    false
    true


 --- Transition of flow [19d5529e-5027-4fa9-b1fb-f606ce138a0e] ---
  Timestamp: 2023-01-31T07:00:14.925Z
  Event: LeaveSubFlow
  Actions: 
    
  Continuation: ProcessEvents
  Diff between previous and next state:
checkpoint.checkpointState.subFlowStack: 
    [Inlined(flowClass=class net.corda.samples.obligation.flows.IOUSettleFlowResponder, subFlowVersion=CorDappFlow(platformVersion=11, corDappName=workflows-1.0, corDappHash=B699A1A7AEE96EE2270B80DAE7A921F446B5529E562BC1497C4BF0F7569223AA), isEnabledTimedFlow=false), Inlined(flowClass=class net.corda.samples.obligation.flows.IOUSettleFlowResponder$call$signedTransactionFlow$1, subFlowVersion=CoreFlow(platformVersion=11), isEnabledTimedFlow=false), Inlined(flowClass=class net.corda.core.flows.ReceiveTransactionFlow, subFlowVersion=CoreFlow(platformVersion=11), isEnabledTimedFlow=false), Inlined(flowClass=class net.corda.core.internal.ResolveTransactionsFlow, subFlowVersion=CoreFlow(platformVersion=11), isEnabledTimedFlow=false), Inlined(flowClass=class net.corda.core.internal.FetchTransactionsFlow, subFlowVersion=CoreFlow(platformVersion=11), isEnabledTimedFlow=false)]
    [Inlined(flowClass=class net.corda.samples.obligation.flows.IOUSettleFlowResponder, subFlowVersion=CorDappFlow(platformVersion=11, corDappName=workflows-1.0, corDappHash=B699A1A7AEE96EE2270B80DAE7A921F446B5529E562BC1497C4BF0F7569223AA), isEnabledTimedFlow=false), Inlined(flowClass=class net.corda.samples.obligation.flows.IOUSettleFlowResponder$call$signedTransactionFlow$1, subFlowVersion=CoreFlow(platformVersion=11), isEnabledTimedFlow=false), Inlined(flowClass=class net.corda.core.flows.ReceiveTransactionFlow, subFlowVersion=CoreFlow(platformVersion=11), isEnabledTimedFlow=false), Inlined(flowClass=class net.corda.core.internal.ResolveTransactionsFlow, subFlowVersion=CoreFlow(platformVersion=11), isEnabledTimedFlow=false)]
checkpoint.timestamp: 
    2023-01-31T07:00:14.924Z
    2023-01-31T07:00:14.925Z


 --- Transition of flow [19d5529e-5027-4fa9-b1fb-f606ce138a0e] ---
  Timestamp: 2023-01-31T07:00:14.927Z
  Event: EnterSubFlow(subFlowClass=class net.corda.core.internal.FetchAttachmentsFlow, subFlowVersion=CoreFlow(platformVersion=11), isEnabledTimedFlow=false)
  Actions: 
    
  Continuation: ProcessEvents
  Diff between previous and next state:
checkpoint.checkpointState.subFlowStack: 
    [Inlined(flowClass=class net.corda.samples.obligation.flows.IOUSettleFlowResponder, subFlowVersion=CorDappFlow(platformVersion=11, corDappName=workflows-1.0, corDappHash=B699A1A7AEE96EE2270B80DAE7A921F446B5529E562BC1497C4BF0F7569223AA), isEnabledTimedFlow=false), Inlined(flowClass=class net.corda.samples.obligation.flows.IOUSettleFlowResponder$call$signedTransactionFlow$1, subFlowVersion=CoreFlow(platformVersion=11), isEnabledTimedFlow=false), Inlined(flowClass=class net.corda.core.flows.ReceiveTransactionFlow, subFlowVersion=CoreFlow(platformVersion=11), isEnabledTimedFlow=false), Inlined(flowClass=class net.corda.core.internal.ResolveTransactionsFlow, subFlowVersion=CoreFlow(platformVersion=11), isEnabledTimedFlow=false)]
    [Inlined(flowClass=class net.corda.samples.obligation.flows.IOUSettleFlowResponder, subFlowVersion=CorDappFlow(platformVersion=11, corDappName=workflows-1.0, corDappHash=B699A1A7AEE96EE2270B80DAE7A921F446B5529E562BC1497C4BF0F7569223AA), isEnabledTimedFlow=false), Inlined(flowClass=class net.corda.samples.obligation.flows.IOUSettleFlowResponder$call$signedTransactionFlow$1, subFlowVersion=CoreFlow(platformVersion=11), isEnabledTimedFlow=false), Inlined(flowClass=class net.corda.core.flows.ReceiveTransactionFlow, subFlowVersion=CoreFlow(platformVersion=11), isEnabledTimedFlow=false), Inlined(flowClass=class net.corda.core.internal.ResolveTransactionsFlow, subFlowVersion=CoreFlow(platformVersion=11), isEnabledTimedFlow=false), Inlined(flowClass=class net.corda.core.internal.FetchAttachmentsFlow, subFlowVersion=CoreFlow(platformVersion=11), isEnabledTimedFlow=false)]
checkpoint.timestamp: 
    2023-01-31T07:00:14.925Z
    2023-01-31T07:00:14.927Z


 --- Transition of flow [19d5529e-5027-4fa9-b1fb-f606ce138a0e] ---
  Timestamp: 2023-01-31T07:00:14.927Z
  Event: LeaveSubFlow
  Actions: 
    
  Continuation: ProcessEvents
  Diff between previous and next state:
checkpoint.checkpointState.subFlowStack: 
    [Inlined(flowClass=class net.corda.samples.obligation.flows.IOUSettleFlowResponder, subFlowVersion=CorDappFlow(platformVersion=11, corDappName=workflows-1.0, corDappHash=B699A1A7AEE96EE2270B80DAE7A921F446B5529E562BC1497C4BF0F7569223AA), isEnabledTimedFlow=false), Inlined(flowClass=class net.corda.samples.obligation.flows.IOUSettleFlowResponder$call$signedTransactionFlow$1, subFlowVersion=CoreFlow(platformVersion=11), isEnabledTimedFlow=false), Inlined(flowClass=class net.corda.core.flows.ReceiveTransactionFlow, subFlowVersion=CoreFlow(platformVersion=11), isEnabledTimedFlow=false), Inlined(flowClass=class net.corda.core.internal.ResolveTransactionsFlow, subFlowVersion=CoreFlow(platformVersion=11), isEnabledTimedFlow=false), Inlined(flowClass=class net.corda.core.internal.FetchAttachmentsFlow, subFlowVersion=CoreFlow(platformVersion=11), isEnabledTimedFlow=false)]
    [Inlined(flowClass=class net.corda.samples.obligation.flows.IOUSettleFlowResponder, subFlowVersion=CorDappFlow(platformVersion=11, corDappName=workflows-1.0, corDappHash=B699A1A7AEE96EE2270B80DAE7A921F446B5529E562BC1497C4BF0F7569223AA), isEnabledTimedFlow=false), Inlined(flowClass=class net.corda.samples.obligation.flows.IOUSettleFlowResponder$call$signedTransactionFlow$1, subFlowVersion=CoreFlow(platformVersion=11), isEnabledTimedFlow=false), Inlined(flowClass=class net.corda.core.flows.ReceiveTransactionFlow, subFlowVersion=CoreFlow(platformVersion=11), isEnabledTimedFlow=false), Inlined(flowClass=class net.corda.core.internal.ResolveTransactionsFlow, subFlowVersion=CoreFlow(platformVersion=11), isEnabledTimedFlow=false)]


 --- Transition of flow [19d5529e-5027-4fa9-b1fb-f606ce138a0e] ---
  Timestamp: 2023-01-31T07:00:14.928Z
  Event: EnterSubFlow(subFlowClass=class net.corda.core.internal.FetchNetworkParametersFlow, subFlowVersion=CoreFlow(platformVersion=11), isEnabledTimedFlow=false)
  Actions: 
    
  Continuation: ProcessEvents
  Diff between previous and next state:
checkpoint.checkpointState.subFlowStack: 
    [Inlined(flowClass=class net.corda.samples.obligation.flows.IOUSettleFlowResponder, subFlowVersion=CorDappFlow(platformVersion=11, corDappName=workflows-1.0, corDappHash=B699A1A7AEE96EE2270B80DAE7A921F446B5529E562BC1497C4BF0F7569223AA), isEnabledTimedFlow=false), Inlined(flowClass=class net.corda.samples.obligation.flows.IOUSettleFlowResponder$call$signedTransactionFlow$1, subFlowVersion=CoreFlow(platformVersion=11), isEnabledTimedFlow=false), Inlined(flowClass=class net.corda.core.flows.ReceiveTransactionFlow, subFlowVersion=CoreFlow(platformVersion=11), isEnabledTimedFlow=false), Inlined(flowClass=class net.corda.core.internal.ResolveTransactionsFlow, subFlowVersion=CoreFlow(platformVersion=11), isEnabledTimedFlow=false)]
    [Inlined(flowClass=class net.corda.samples.obligation.flows.IOUSettleFlowResponder, subFlowVersion=CorDappFlow(platformVersion=11, corDappName=workflows-1.0, corDappHash=B699A1A7AEE96EE2270B80DAE7A921F446B5529E562BC1497C4BF0F7569223AA), isEnabledTimedFlow=false), Inlined(flowClass=class net.corda.samples.obligation.flows.IOUSettleFlowResponder$call$signedTransactionFlow$1, subFlowVersion=CoreFlow(platformVersion=11), isEnabledTimedFlow=false), Inlined(flowClass=class net.corda.core.flows.ReceiveTransactionFlow, subFlowVersion=CoreFlow(platformVersion=11), isEnabledTimedFlow=false), Inlined(flowClass=class net.corda.core.internal.ResolveTransactionsFlow, subFlowVersion=CoreFlow(platformVersion=11), isEnabledTimedFlow=false), Inlined(flowClass=class net.corda.core.internal.FetchNetworkParametersFlow, subFlowVersion=CoreFlow(platformVersion=11), isEnabledTimedFlow=false)]
checkpoint.timestamp: 
    2023-01-31T07:00:14.927Z
    2023-01-31T07:00:14.928Z


 --- Transition of flow [19d5529e-5027-4fa9-b1fb-f606ce138a0e] ---
  Timestamp: 2023-01-31T07:00:14.928Z
  Event: LeaveSubFlow
  Actions: 
    
  Continuation: ProcessEvents
  Diff between previous and next state:
checkpoint.checkpointState.subFlowStack: 
    [Inlined(flowClass=class net.corda.samples.obligation.flows.IOUSettleFlowResponder, subFlowVersion=CorDappFlow(platformVersion=11, corDappName=workflows-1.0, corDappHash=B699A1A7AEE96EE2270B80DAE7A921F446B5529E562BC1497C4BF0F7569223AA), isEnabledTimedFlow=false), Inlined(flowClass=class net.corda.samples.obligation.flows.IOUSettleFlowResponder$call$signedTransactionFlow$1, subFlowVersion=CoreFlow(platformVersion=11), isEnabledTimedFlow=false), Inlined(flowClass=class net.corda.core.flows.ReceiveTransactionFlow, subFlowVersion=CoreFlow(platformVersion=11), isEnabledTimedFlow=false), Inlined(flowClass=class net.corda.core.internal.ResolveTransactionsFlow, subFlowVersion=CoreFlow(platformVersion=11), isEnabledTimedFlow=false), Inlined(flowClass=class net.corda.core.internal.FetchNetworkParametersFlow, subFlowVersion=CoreFlow(platformVersion=11), isEnabledTimedFlow=false)]
    [Inlined(flowClass=class net.corda.samples.obligation.flows.IOUSettleFlowResponder, subFlowVersion=CorDappFlow(platformVersion=11, corDappName=workflows-1.0, corDappHash=B699A1A7AEE96EE2270B80DAE7A921F446B5529E562BC1497C4BF0F7569223AA), isEnabledTimedFlow=false), Inlined(flowClass=class net.corda.samples.obligation.flows.IOUSettleFlowResponder$call$signedTransactionFlow$1, subFlowVersion=CoreFlow(platformVersion=11), isEnabledTimedFlow=false), Inlined(flowClass=class net.corda.core.flows.ReceiveTransactionFlow, subFlowVersion=CoreFlow(platformVersion=11), isEnabledTimedFlow=false), Inlined(flowClass=class net.corda.core.internal.ResolveTransactionsFlow, subFlowVersion=CoreFlow(platformVersion=11), isEnabledTimedFlow=false)]


 --- Transition of flow [19d5529e-5027-4fa9-b1fb-f606ce138a0e] ---
  Timestamp: 2023-01-31T07:00:14.932Z
  Event: Suspend(ioRequest=Sleep(wakeUpAfter=2023-01-31T07:00:14.928Z), maySkipCheckpoint=false, fiber=29087CBD0FB821D900753EF1132C2C064BC9CEBD3AB837B4A25ECDD7A72585F5, currentStep=Starting)
  Actions: 
    PersistCheckpoint(id=[19d5529e-5027-4fa9-b1fb-f606ce138a0e], checkpoint=Checkpoint(checkpointState=CheckpointState(invocationContext=InvocationContext(origin=Peer(party=O=Mock Company 1, L=London, C=GB), trace=Trace(invocationId=ecadbadd-d49d-4516-8b4c-2ec4a2bd801c, timestamp: 2023-01-31T07:00:14.883Z, entityType: Invocation, sessionId=ecadbadd-d49d-4516-8b4c-2ec4a2bd801c, timestamp: 2023-01-31T07:00:14.883Z, entityType: Session), actor=null, externalTrace=null, impersonatedActor=null, arguments=[], clientId=null), ourIdentity=O=Mock Company 3, L=London, C=GB, sessions={SessionId(toLong=-6111232092193349787)=Initiated(peerParty=O=Mock Company 1, L=London, C=GB, peerFlowInfo=FlowInfo(flowVersion=1, appName=<unknown>), receivedMessages=[], otherSideErrored=false, peerSinkSessionId=SessionId(toLong=-846941239363969924), deduplicationSeed=D--846941239363969924--3458992896374643217)}, sessionsToBeClosed=[], subFlowStack=[Inlined(flowClass=class net.corda.samples.obligation.flows.IOUSettleFlowResponder, subFlowVersion=CorDappFlow(platformVersion=11, corDappName=workflows-1.0, corDappHash=B699A1A7AEE96EE2270B80DAE7A921F446B5529E562BC1497C4BF0F7569223AA), isEnabledTimedFlow=false), Inlined(flowClass=class net.corda.samples.obligation.flows.IOUSettleFlowResponder$call$signedTransactionFlow$1, subFlowVersion=CoreFlow(platformVersion=11), isEnabledTimedFlow=false), Inlined(flowClass=class net.corda.core.flows.ReceiveTransactionFlow, subFlowVersion=CoreFlow(platformVersion=11), isEnabledTimedFlow=false), Inlined(flowClass=class net.corda.core.internal.ResolveTransactionsFlow, subFlowVersion=CoreFlow(platformVersion=11), isEnabledTimedFlow=false)], numberOfSuspends=3, numberOfCommits=4), flowState=Started(flowIORequest=Sleep(wakeUpAfter=2023-01-31T07:00:14.928Z), frozenFiber=29087CBD0FB821D900753EF1132C2C064BC9CEBD3AB837B4A25ECDD7A72585F5), errorState=Clean, result=null, status=RUNNABLE, progressStep=Starting, flowIoRequest=Sleep, compatible=true), isCheckpointUpdate=true)
    PersistDeduplicationFacts(deduplicationHandlers=[net.corda.testing.node.internal.MockNodeMessagingService$InMemoryDeduplicationHandler@37b7392f])
    CommitTransaction
    AcknowledgeMessages(deduplicationHandlers=[net.corda.testing.node.internal.MockNodeMessagingService$InMemoryDeduplicationHandler@37b7392f])
    ScheduleEvent(event=DoRemainingWork)
  Continuation: ProcessEvents
  Diff between previous and next state:
pendingDeduplicationHandlers: 
    [net.corda.testing.node.internal.MockNodeMessagingService$InMemoryDeduplicationHandler@37b7392f]
    []
numberOfCommits: 
    3
    4
checkpoint.flowIoRequest: 
    SendAndReceive
    Sleep
checkpoint.flowState.flowIORequest: 
    Receive(sessions=[FlowSessionImpl(destination=O=Mock Company 1, L=London, C=GB, sourceSessionId=SessionId(toLong=-6111232092193349787))])
    Sleep(wakeUpAfter=2023-01-31T07:00:14.928Z)
checkpoint.flowState.frozenFiber.hash: 
    E97EDA5D2375299EC73CAA8DD1EFC777489F86401E9EDF57D24CB453AFADD68E
    29087CBD0FB821D900753EF1132C2C064BC9CEBD3AB837B4A25ECDD7A72585F5
checkpoint.checkpointState.numberOfCommits: 
    3
    4
checkpoint.checkpointState.numberOfSuspends: 
    2
    3
checkpoint.timestamp: 
    2023-01-31T07:00:14.928Z
    2023-01-31T07:00:14.930Z
isFlowResumed: 
    true
    false


 --- Transition of flow [19d5529e-5027-4fa9-b1fb-f606ce138a0e] ---
  Timestamp: 2023-01-31T07:00:14.932Z
  Event: DoRemainingWork
  Actions: 
    SleepUntil(currentState=StateMachineState(checkpoint=Checkpoint(checkpointState=CheckpointState(invocationContext=InvocationContext(origin=Peer(party=O=Mock Company 1, L=London, C=GB), trace=Trace(invocationId=ecadbadd-d49d-4516-8b4c-2ec4a2bd801c, timestamp: 2023-01-31T07:00:14.883Z, entityType: Invocation, sessionId=ecadbadd-d49d-4516-8b4c-2ec4a2bd801c, timestamp: 2023-01-31T07:00:14.883Z, entityType: Session), actor=null, externalTrace=null, impersonatedActor=null, arguments=[], clientId=null), ourIdentity=O=Mock Company 3, L=London, C=GB, sessions={SessionId(toLong=-6111232092193349787)=Initiated(peerParty=O=Mock Company 1, L=London, C=GB, peerFlowInfo=FlowInfo(flowVersion=1, appName=<unknown>), receivedMessages=[], otherSideErrored=false, peerSinkSessionId=SessionId(toLong=-846941239363969924), deduplicationSeed=D--846941239363969924--3458992896374643217)}, sessionsToBeClosed=[], subFlowStack=[Inlined(flowClass=class net.corda.samples.obligation.flows.IOUSettleFlowResponder, subFlowVersion=CorDappFlow(platformVersion=11, corDappName=workflows-1.0, corDappHash=B699A1A7AEE96EE2270B80DAE7A921F446B5529E562BC1497C4BF0F7569223AA), isEnabledTimedFlow=false), Inlined(flowClass=class net.corda.samples.obligation.flows.IOUSettleFlowResponder$call$signedTransactionFlow$1, subFlowVersion=CoreFlow(platformVersion=11), isEnabledTimedFlow=false), Inlined(flowClass=class net.corda.core.flows.ReceiveTransactionFlow, subFlowVersion=CoreFlow(platformVersion=11), isEnabledTimedFlow=false), Inlined(flowClass=class net.corda.core.internal.ResolveTransactionsFlow, subFlowVersion=CoreFlow(platformVersion=11), isEnabledTimedFlow=false)], numberOfSuspends=3, numberOfCommits=4), flowState=Started(flowIORequest=Sleep(wakeUpAfter=2023-01-31T07:00:14.928Z), frozenFiber=29087CBD0FB821D900753EF1132C2C064BC9CEBD3AB837B4A25ECDD7A72585F5), errorState=Clean, result=null, status=RUNNABLE, progressStep=Starting, flowIoRequest=Sleep, compatible=true), flowLogic=net.corda.samples.obligation.flows.IOUSettleFlowResponder@2060c030, pendingDeduplicationHandlers=[], isFlowResumed=false, isWaitingForFuture=true, future=java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask@46458a88, isAnyCheckpointPersisted=true, isStartIdempotent=false, isRemoved=false, isKilled=false, isDead=false, senderUUID=029259cf-bb6a-44e3-8b88-309bd9c28ecc, reloadCheckpointAfterSuspendCount=null, numberOfCommits=4, lock=java.util.concurrent.Semaphore@51f41ef7[Permits = 0]), time=2023-01-31T07:00:14.928Z)
  Continuation: ProcessEvents
  Diff between previous and next state:
future: 
    null
    java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask@46458a88
isWaitingForFuture: 
    false
    true


 --- Transition of flow [19d5529e-5027-4fa9-b1fb-f606ce138a0e] ---
  Timestamp: 2023-01-31T07:00:14.933Z
  Event: WakeUpSleepyFlow
  Actions: 
    CreateTransaction
  Continuation: Resume(result=class kotlin.Unit)
  Diff between previous and next state:
future: 
    java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask@46458a88
    null
isFlowResumed: 
    false
    true
isWaitingForFuture: 
    true
    false


 --- Transition of flow [19d5529e-5027-4fa9-b1fb-f606ce138a0e] ---
  Timestamp: 2023-01-31T07:00:14.934Z
  Event: EnterSubFlow(subFlowClass=class net.corda.core.internal.FetchTransactionsFlow, subFlowVersion=CoreFlow(platformVersion=11), isEnabledTimedFlow=false)
  Actions: 
    
  Continuation: ProcessEvents
  Diff between previous and next state:
checkpoint.checkpointState.subFlowStack: 
    [Inlined(flowClass=class net.corda.samples.obligation.flows.IOUSettleFlowResponder, subFlowVersion=CorDappFlow(platformVersion=11, corDappName=workflows-1.0, corDappHash=B699A1A7AEE96EE2270B80DAE7A921F446B5529E562BC1497C4BF0F7569223AA), isEnabledTimedFlow=false), Inlined(flowClass=class net.corda.samples.obligation.flows.IOUSettleFlowResponder$call$signedTransactionFlow$1, subFlowVersion=CoreFlow(platformVersion=11), isEnabledTimedFlow=false), Inlined(flowClass=class net.corda.core.flows.ReceiveTransactionFlow, subFlowVersion=CoreFlow(platformVersion=11), isEnabledTimedFlow=false), Inlined(flowClass=class net.corda.core.internal.ResolveTransactionsFlow, subFlowVersion=CoreFlow(platformVersion=11), isEnabledTimedFlow=false)]
    [Inlined(flowClass=class net.corda.samples.obligation.flows.IOUSettleFlowResponder, subFlowVersion=CorDappFlow(platformVersion=11, corDappName=workflows-1.0, corDappHash=B699A1A7AEE96EE2270B80DAE7A921F446B5529E562BC1497C4BF0F7569223AA), isEnabledTimedFlow=false), Inlined(flowClass=class net.corda.samples.obligation.flows.IOUSettleFlowResponder$call$signedTransactionFlow$1, subFlowVersion=CoreFlow(platformVersion=11), isEnabledTimedFlow=false), Inlined(flowClass=class net.corda.core.flows.ReceiveTransactionFlow, subFlowVersion=CoreFlow(platformVersion=11), isEnabledTimedFlow=false), Inlined(flowClass=class net.corda.core.internal.ResolveTransactionsFlow, subFlowVersion=CoreFlow(platformVersion=11), isEnabledTimedFlow=false), Inlined(flowClass=class net.corda.core.internal.FetchTransactionsFlow, subFlowVersion=CoreFlow(platformVersion=11), isEnabledTimedFlow=false)]
checkpoint.timestamp: 
    2023-01-31T07:00:14.930Z
    2023-01-31T07:00:14.934Z


 --- Transition of flow [19d5529e-5027-4fa9-b1fb-f606ce138a0e] ---
  Timestamp: 2023-01-31T07:00:14.934Z
  Event: LeaveSubFlow
  Actions: 
    
  Continuation: ProcessEvents
  Diff between previous and next state:
checkpoint.checkpointState.subFlowStack: 
    [Inlined(flowClass=class net.corda.samples.obligation.flows.IOUSettleFlowResponder, subFlowVersion=CorDappFlow(platformVersion=11, corDappName=workflows-1.0, corDappHash=B699A1A7AEE96EE2270B80DAE7A921F446B5529E562BC1497C4BF0F7569223AA), isEnabledTimedFlow=false), Inlined(flowClass=class net.corda.samples.obligation.flows.IOUSettleFlowResponder$call$signedTransactionFlow$1, subFlowVersion=CoreFlow(platformVersion=11), isEnabledTimedFlow=false), Inlined(flowClass=class net.corda.core.flows.ReceiveTransactionFlow, subFlowVersion=CoreFlow(platformVersion=11), isEnabledTimedFlow=false), Inlined(flowClass=class net.corda.core.internal.ResolveTransactionsFlow, subFlowVersion=CoreFlow(platformVersion=11), isEnabledTimedFlow=false), Inlined(flowClass=class net.corda.core.internal.FetchTransactionsFlow, subFlowVersion=CoreFlow(platformVersion=11), isEnabledTimedFlow=false)]
    [Inlined(flowClass=class net.corda.samples.obligation.flows.IOUSettleFlowResponder, subFlowVersion=CorDappFlow(platformVersion=11, corDappName=workflows-1.0, corDappHash=B699A1A7AEE96EE2270B80DAE7A921F446B5529E562BC1497C4BF0F7569223AA), isEnabledTimedFlow=false), Inlined(flowClass=class net.corda.samples.obligation.flows.IOUSettleFlowResponder$call$signedTransactionFlow$1, subFlowVersion=CoreFlow(platformVersion=11), isEnabledTimedFlow=false), Inlined(flowClass=class net.corda.core.flows.ReceiveTransactionFlow, subFlowVersion=CoreFlow(platformVersion=11), isEnabledTimedFlow=false), Inlined(flowClass=class net.corda.core.internal.ResolveTransactionsFlow, subFlowVersion=CoreFlow(platformVersion=11), isEnabledTimedFlow=false)]


 --- Transition of flow [19d5529e-5027-4fa9-b1fb-f606ce138a0e] ---
  Timestamp: 2023-01-31T07:00:14.939Z
  Event: Suspend(ioRequest=Send(sessionToMessage={FlowSessionImpl(destination=O=Mock Company 1, L=London, C=GB, sourceSessionId=SessionId(toLong=-6111232092193349787))=768AED61FD2A58D74D7316731407E0600065080E1F3E6397EE4FA5AEFEE79295}), maySkipCheckpoint=false, fiber=2CE5EA5F42E1844E309309FE58BFD7F678FFFD4DBB123FAA6DC1A2603A38DAC3, currentStep=Starting)
  Actions: 
    PersistCheckpoint(id=[19d5529e-5027-4fa9-b1fb-f606ce138a0e], checkpoint=Checkpoint(checkpointState=CheckpointState(invocationContext=InvocationContext(origin=Peer(party=O=Mock Company 1, L=London, C=GB), trace=Trace(invocationId=ecadbadd-d49d-4516-8b4c-2ec4a2bd801c, timestamp: 2023-01-31T07:00:14.883Z, entityType: Invocation, sessionId=ecadbadd-d49d-4516-8b4c-2ec4a2bd801c, timestamp: 2023-01-31T07:00:14.883Z, entityType: Session), actor=null, externalTrace=null, impersonatedActor=null, arguments=[], clientId=null), ourIdentity=O=Mock Company 3, L=London, C=GB, sessions={SessionId(toLong=-6111232092193349787)=Initiated(peerParty=O=Mock Company 1, L=London, C=GB, peerFlowInfo=FlowInfo(flowVersion=1, appName=<unknown>), receivedMessages=[], otherSideErrored=false, peerSinkSessionId=SessionId(toLong=-846941239363969924), deduplicationSeed=D--846941239363969924--3458992896374643217)}, sessionsToBeClosed=[], subFlowStack=[Inlined(flowClass=class net.corda.samples.obligation.flows.IOUSettleFlowResponder, subFlowVersion=CorDappFlow(platformVersion=11, corDappName=workflows-1.0, corDappHash=B699A1A7AEE96EE2270B80DAE7A921F446B5529E562BC1497C4BF0F7569223AA), isEnabledTimedFlow=false), Inlined(flowClass=class net.corda.samples.obligation.flows.IOUSettleFlowResponder$call$signedTransactionFlow$1, subFlowVersion=CoreFlow(platformVersion=11), isEnabledTimedFlow=false), Inlined(flowClass=class net.corda.core.flows.ReceiveTransactionFlow, subFlowVersion=CoreFlow(platformVersion=11), isEnabledTimedFlow=false), Inlined(flowClass=class net.corda.core.internal.ResolveTransactionsFlow, subFlowVersion=CoreFlow(platformVersion=11), isEnabledTimedFlow=false)], numberOfSuspends=4, numberOfCommits=5), flowState=Started(flowIORequest=Send(sessionToMessage={FlowSessionImpl(destination=O=Mock Company 1, L=London, C=GB, sourceSessionId=SessionId(toLong=-6111232092193349787))=768AED61FD2A58D74D7316731407E0600065080E1F3E6397EE4FA5AEFEE79295}), frozenFiber=2CE5EA5F42E1844E309309FE58BFD7F678FFFD4DBB123FAA6DC1A2603A38DAC3), errorState=Clean, result=null, status=RUNNABLE, progressStep=Starting, flowIoRequest=Send, compatible=true), isCheckpointUpdate=true)
    PersistDeduplicationFacts(deduplicationHandlers=[])
    CommitTransaction
    AcknowledgeMessages(deduplicationHandlers=[])
    ScheduleEvent(event=DoRemainingWork)
  Continuation: ProcessEvents
  Diff between previous and next state:
numberOfCommits: 
    4
    5
checkpoint.flowIoRequest: 
    Sleep
    Send
checkpoint.flowState.flowIORequest: 
    Sleep(wakeUpAfter=2023-01-31T07:00:14.928Z)
    Send(sessionToMessage={FlowSessionImpl(destination=O=Mock Company 1, L=London, C=GB, sourceSessionId=SessionId(toLong=-6111232092193349787))=768AED61FD2A58D74D7316731407E0600065080E1F3E6397EE4FA5AEFEE79295})
checkpoint.flowState.frozenFiber.hash: 
    29087CBD0FB821D900753EF1132C2C064BC9CEBD3AB837B4A25ECDD7A72585F5
    2CE5EA5F42E1844E309309FE58BFD7F678FFFD4DBB123FAA6DC1A2603A38DAC3
checkpoint.checkpointState.numberOfCommits: 
    4
    5
checkpoint.checkpointState.numberOfSuspends: 
    3
    4
checkpoint.timestamp: 
    2023-01-31T07:00:14.934Z
    2023-01-31T07:00:14.936Z
isFlowResumed: 
    true
    false


 --- Transition of flow [19d5529e-5027-4fa9-b1fb-f606ce138a0e] ---
  Timestamp: 2023-01-31T07:00:14.939Z
  Event: DoRemainingWork
  Actions: 
    SendMultiple(sendInitial=[], sendExisting=[SendExisting(peerParty=O=Mock Company 1, L=London, C=GB, message=ExistingSessionMessage(recipientSessionId=SessionId(toLong=-846941239363969924), payload=DataSessionMessage(payload=class net.corda.core.serialization.SerializedBytes)), deduplicationId=SenderDeduplicationId(deduplicationId=DeduplicationId(toString=N-D--846941239363969924--3458992896374643217-4-0), senderUUID=029259cf-bb6a-44e3-8b88-309bd9c28ecc))])
    CreateTransaction
  Continuation: Resume(result=class kotlin.Unit)
  Diff between previous and next state:
isFlowResumed: 
    false
    true


 --- Transition of flow [19d5529e-5027-4fa9-b1fb-f606ce138a0e] ---
  Timestamp: 2023-01-31T07:00:15.003Z
  Event: LeaveSubFlow
  Actions: 
    
  Continuation: ProcessEvents
  Diff between previous and next state:
checkpoint.checkpointState.subFlowStack: 
    [Inlined(flowClass=class net.corda.samples.obligation.flows.IOUSettleFlowResponder, subFlowVersion=CorDappFlow(platformVersion=11, corDappName=workflows-1.0, corDappHash=B699A1A7AEE96EE2270B80DAE7A921F446B5529E562BC1497C4BF0F7569223AA), isEnabledTimedFlow=false), Inlined(flowClass=class net.corda.samples.obligation.flows.IOUSettleFlowResponder$call$signedTransactionFlow$1, subFlowVersion=CoreFlow(platformVersion=11), isEnabledTimedFlow=false), Inlined(flowClass=class net.corda.core.flows.ReceiveTransactionFlow, subFlowVersion=CoreFlow(platformVersion=11), isEnabledTimedFlow=false), Inlined(flowClass=class net.corda.core.internal.ResolveTransactionsFlow, subFlowVersion=CoreFlow(platformVersion=11), isEnabledTimedFlow=false)]
    [Inlined(flowClass=class net.corda.samples.obligation.flows.IOUSettleFlowResponder, subFlowVersion=CorDappFlow(platformVersion=11, corDappName=workflows-1.0, corDappHash=B699A1A7AEE96EE2270B80DAE7A921F446B5529E562BC1497C4BF0F7569223AA), isEnabledTimedFlow=false), Inlined(flowClass=class net.corda.samples.obligation.flows.IOUSettleFlowResponder$call$signedTransactionFlow$1, subFlowVersion=CoreFlow(platformVersion=11), isEnabledTimedFlow=false), Inlined(flowClass=class net.corda.core.flows.ReceiveTransactionFlow, subFlowVersion=CoreFlow(platformVersion=11), isEnabledTimedFlow=false)]
checkpoint.timestamp: 
    2023-01-31T07:00:14.939Z
    2023-01-31T07:00:15.003Z


 --- Transition of flow [19d5529e-5027-4fa9-b1fb-f606ce138a0e] ---
  Timestamp: 2023-01-31T07:00:15.294Z
  Event: LeaveSubFlow
  Actions: 
    
  Continuation: ProcessEvents
  Diff between previous and next state:
checkpoint.checkpointState.subFlowStack: 
    [Inlined(flowClass=class net.corda.samples.obligation.flows.IOUSettleFlowResponder, subFlowVersion=CorDappFlow(platformVersion=11, corDappName=workflows-1.0, corDappHash=B699A1A7AEE96EE2270B80DAE7A921F446B5529E562BC1497C4BF0F7569223AA), isEnabledTimedFlow=false), Inlined(flowClass=class net.corda.samples.obligation.flows.IOUSettleFlowResponder$call$signedTransactionFlow$1, subFlowVersion=CoreFlow(platformVersion=11), isEnabledTimedFlow=false), Inlined(flowClass=class net.corda.core.flows.ReceiveTransactionFlow, subFlowVersion=CoreFlow(platformVersion=11), isEnabledTimedFlow=false)]
    [Inlined(flowClass=class net.corda.samples.obligation.flows.IOUSettleFlowResponder, subFlowVersion=CorDappFlow(platformVersion=11, corDappName=workflows-1.0, corDappHash=B699A1A7AEE96EE2270B80DAE7A921F446B5529E562BC1497C4BF0F7569223AA), isEnabledTimedFlow=false), Inlined(flowClass=class net.corda.samples.obligation.flows.IOUSettleFlowResponder$call$signedTransactionFlow$1, subFlowVersion=CoreFlow(platformVersion=11), isEnabledTimedFlow=false)]
checkpoint.timestamp: 
    2023-01-31T07:00:15.003Z
    2023-01-31T07:00:15.294Z


 --- Transition of flow [19d5529e-5027-4fa9-b1fb-f606ce138a0e] ---
  Timestamp: 2023-01-31T07:00:15.298Z
  Event: Suspend(ioRequest=Receive(sessions=[FlowSessionImpl(destination=O=Mock Company 1, L=London, C=GB, sourceSessionId=SessionId(toLong=-6111232092193349787))]), maySkipCheckpoint=false, fiber=67B8B3BB7BC23F4FAB833AEA2BC7751915CC5A189991BC11A3589360C9C6C944, currentStep=Starting)
  Actions: 
    PersistCheckpoint(id=[19d5529e-5027-4fa9-b1fb-f606ce138a0e], checkpoint=Checkpoint(checkpointState=CheckpointState(invocationContext=InvocationContext(origin=Peer(party=O=Mock Company 1, L=London, C=GB), trace=Trace(invocationId=ecadbadd-d49d-4516-8b4c-2ec4a2bd801c, timestamp: 2023-01-31T07:00:14.883Z, entityType: Invocation, sessionId=ecadbadd-d49d-4516-8b4c-2ec4a2bd801c, timestamp: 2023-01-31T07:00:14.883Z, entityType: Session), actor=null, externalTrace=null, impersonatedActor=null, arguments=[], clientId=null), ourIdentity=O=Mock Company 3, L=London, C=GB, sessions={SessionId(toLong=-6111232092193349787)=Initiated(peerParty=O=Mock Company 1, L=London, C=GB, peerFlowInfo=FlowInfo(flowVersion=1, appName=<unknown>), receivedMessages=[], otherSideErrored=false, peerSinkSessionId=SessionId(toLong=-846941239363969924), deduplicationSeed=D--846941239363969924--3458992896374643217)}, sessionsToBeClosed=[], subFlowStack=[Inlined(flowClass=class net.corda.samples.obligation.flows.IOUSettleFlowResponder, subFlowVersion=CorDappFlow(platformVersion=11, corDappName=workflows-1.0, corDappHash=B699A1A7AEE96EE2270B80DAE7A921F446B5529E562BC1497C4BF0F7569223AA), isEnabledTimedFlow=false), Inlined(flowClass=class net.corda.samples.obligation.flows.IOUSettleFlowResponder$call$signedTransactionFlow$1, subFlowVersion=CoreFlow(platformVersion=11), isEnabledTimedFlow=false)], numberOfSuspends=5, numberOfCommits=6), flowState=Started(flowIORequest=Receive(sessions=[FlowSessionImpl(destination=O=Mock Company 1, L=London, C=GB, sourceSessionId=SessionId(toLong=-6111232092193349787))]), frozenFiber=67B8B3BB7BC23F4FAB833AEA2BC7751915CC5A189991BC11A3589360C9C6C944), errorState=Clean, result=null, status=RUNNABLE, progressStep=Starting, flowIoRequest=Receive, compatible=true), isCheckpointUpdate=true)
    PersistDeduplicationFacts(deduplicationHandlers=[])
    CommitTransaction
    AcknowledgeMessages(deduplicationHandlers=[])
    ScheduleEvent(event=DoRemainingWork)
  Continuation: ProcessEvents
  Diff between previous and next state:
numberOfCommits: 
    5
    6
checkpoint.flowIoRequest: 
    Send
    Receive
checkpoint.flowState.flowIORequest: 
    Send(sessionToMessage={FlowSessionImpl(destination=O=Mock Company 1, L=London, C=GB, sourceSessionId=SessionId(toLong=-6111232092193349787))=768AED61FD2A58D74D7316731407E0600065080E1F3E6397EE4FA5AEFEE79295})
    Receive(sessions=[FlowSessionImpl(destination=O=Mock Company 1, L=London, C=GB, sourceSessionId=SessionId(toLong=-6111232092193349787))])
checkpoint.flowState.frozenFiber.hash: 
    2CE5EA5F42E1844E309309FE58BFD7F678FFFD4DBB123FAA6DC1A2603A38DAC3
    67B8B3BB7BC23F4FAB833AEA2BC7751915CC5A189991BC11A3589360C9C6C944
checkpoint.checkpointState.numberOfCommits: 
    5
    6
checkpoint.checkpointState.numberOfSuspends: 
    4
    5
checkpoint.timestamp: 
    2023-01-31T07:00:15.294Z
    2023-01-31T07:00:15.295Z
isFlowResumed: 
    true
    false


 --- Transition of flow [19d5529e-5027-4fa9-b1fb-f606ce138a0e] ---
  Timestamp: 2023-01-31T07:00:15.298Z
  Event: DoRemainingWork
  Actions: 
    
  Continuation: ProcessEvents
  Diff between previous and next state:
null

 --- Transition of flow [19d5529e-5027-4fa9-b1fb-f606ce138a0e] ---
  Timestamp: 2023-01-31T07:00:15.309Z
  Event: DeliverSessionMessage(sessionMessage=ExistingSessionMessage(recipientSessionId=SessionId(toLong=-6111232092193349787), payload=DataSessionMessage(payload=class net.corda.core.serialization.SerializedBytes)), deduplicationHandler=net.corda.testing.node.internal.MockNodeMessagingService$InMemoryDeduplicationHandler@31a55919, sender=O=Mock Company 1, L=London, C=GB)
  Actions: 
    ScheduleEvent(event=DoRemainingWork)
  Continuation: ProcessEvents
  Diff between previous and next state:
pendingDeduplicationHandlers: 
    []
    [net.corda.testing.node.internal.MockNodeMessagingService$InMemoryDeduplicationHandler@31a55919]
checkpoint.checkpointState.sessions.SessionId(toLong=-6111232092193349787).receivedMessages.isEmpty: 
    true
    false
checkpoint.timestamp: 
    2023-01-31T07:00:15.298Z
    2023-01-31T07:00:15.309Z


 --- Transition of flow [19d5529e-5027-4fa9-b1fb-f606ce138a0e] ---
  Timestamp: 2023-01-31T07:00:15.309Z
  Event: DoRemainingWork
  Actions: 
    CreateTransaction
  Continuation: Resume(result=class java.util.LinkedHashMap)
  Diff between previous and next state:
checkpoint.checkpointState.sessions.SessionId(toLong=-6111232092193349787).receivedMessages.isEmpty: 
    false
    true
isFlowResumed: 
    false
    true


 --- Transition of flow [19d5529e-5027-4fa9-b1fb-f606ce138a0e] ---
  Timestamp: 2023-01-31T07:00:15.320Z
  Event: Suspend(ioRequest=Send(sessionToMessage={FlowSessionImpl(destination=O=Mock Company 1, L=London, C=GB, sourceSessionId=SessionId(toLong=-6111232092193349787))=5A4ACCA876E182E6A7DFE903152E54ECD0BAAA64CEC40DD908C1185F4DC762CF}), maySkipCheckpoint=false, fiber=7752CCCCD55AB58F8011BD26787FAB412B34AF2D2A5228AE54ED094C93D04574, currentStep=Starting)
  Actions: 
    PersistCheckpoint(id=[19d5529e-5027-4fa9-b1fb-f606ce138a0e], checkpoint=Checkpoint(checkpointState=CheckpointState(invocationContext=InvocationContext(origin=Peer(party=O=Mock Company 1, L=London, C=GB), trace=Trace(invocationId=ecadbadd-d49d-4516-8b4c-2ec4a2bd801c, timestamp: 2023-01-31T07:00:14.883Z, entityType: Invocation, sessionId=ecadbadd-d49d-4516-8b4c-2ec4a2bd801c, timestamp: 2023-01-31T07:00:14.883Z, entityType: Session), actor=null, externalTrace=null, impersonatedActor=null, arguments=[], clientId=null), ourIdentity=O=Mock Company 3, L=London, C=GB, sessions={SessionId(toLong=-6111232092193349787)=Initiated(peerParty=O=Mock Company 1, L=London, C=GB, peerFlowInfo=FlowInfo(flowVersion=1, appName=<unknown>), receivedMessages=[], otherSideErrored=false, peerSinkSessionId=SessionId(toLong=-846941239363969924), deduplicationSeed=D--846941239363969924--3458992896374643217)}, sessionsToBeClosed=[], subFlowStack=[Inlined(flowClass=class net.corda.samples.obligation.flows.IOUSettleFlowResponder, subFlowVersion=CorDappFlow(platformVersion=11, corDappName=workflows-1.0, corDappHash=B699A1A7AEE96EE2270B80DAE7A921F446B5529E562BC1497C4BF0F7569223AA), isEnabledTimedFlow=false), Inlined(flowClass=class net.corda.samples.obligation.flows.IOUSettleFlowResponder$call$signedTransactionFlow$1, subFlowVersion=CoreFlow(platformVersion=11), isEnabledTimedFlow=false)], numberOfSuspends=6, numberOfCommits=7), flowState=Started(flowIORequest=Send(sessionToMessage={FlowSessionImpl(destination=O=Mock Company 1, L=London, C=GB, sourceSessionId=SessionId(toLong=-6111232092193349787))=5A4ACCA876E182E6A7DFE903152E54ECD0BAAA64CEC40DD908C1185F4DC762CF}), frozenFiber=7752CCCCD55AB58F8011BD26787FAB412B34AF2D2A5228AE54ED094C93D04574), errorState=Clean, result=null, status=RUNNABLE, progressStep=Starting, flowIoRequest=Send, compatible=true), isCheckpointUpdate=true)
    PersistDeduplicationFacts(deduplicationHandlers=[net.corda.testing.node.internal.MockNodeMessagingService$InMemoryDeduplicationHandler@31a55919])
    CommitTransaction
    AcknowledgeMessages(deduplicationHandlers=[net.corda.testing.node.internal.MockNodeMessagingService$InMemoryDeduplicationHandler@31a55919])
    ScheduleEvent(event=DoRemainingWork)
  Continuation: ProcessEvents
  Diff between previous and next state:
pendingDeduplicationHandlers: 
    [net.corda.testing.node.internal.MockNodeMessagingService$InMemoryDeduplicationHandler@31a55919]
    []
numberOfCommits: 
    6
    7
checkpoint.flowIoRequest: 
    Receive
    Send
checkpoint.flowState.flowIORequest: 
    Receive(sessions=[FlowSessionImpl(destination=O=Mock Company 1, L=London, C=GB, sourceSessionId=SessionId(toLong=-6111232092193349787))])
    Send(sessionToMessage={FlowSessionImpl(destination=O=Mock Company 1, L=London, C=GB, sourceSessionId=SessionId(toLong=-6111232092193349787))=5A4ACCA876E182E6A7DFE903152E54ECD0BAAA64CEC40DD908C1185F4DC762CF})
checkpoint.flowState.frozenFiber.hash: 
    67B8B3BB7BC23F4FAB833AEA2BC7751915CC5A189991BC11A3589360C9C6C944
    7752CCCCD55AB58F8011BD26787FAB412B34AF2D2A5228AE54ED094C93D04574
checkpoint.checkpointState.numberOfCommits: 
    6
    7
checkpoint.checkpointState.numberOfSuspends: 
    5
    6
checkpoint.timestamp: 
    2023-01-31T07:00:15.309Z
    2023-01-31T07:00:15.318Z
isFlowResumed: 
    true
    false


 --- Transition of flow [19d5529e-5027-4fa9-b1fb-f606ce138a0e] ---
  Timestamp: 2023-01-31T07:00:15.320Z
  Event: DoRemainingWork
  Actions: 
    SendMultiple(sendInitial=[], sendExisting=[SendExisting(peerParty=O=Mock Company 1, L=London, C=GB, message=ExistingSessionMessage(recipientSessionId=SessionId(toLong=-846941239363969924), payload=DataSessionMessage(payload=class net.corda.core.serialization.SerializedBytes)), deduplicationId=SenderDeduplicationId(deduplicationId=DeduplicationId(toString=N-D--846941239363969924--3458992896374643217-6-0), senderUUID=029259cf-bb6a-44e3-8b88-309bd9c28ecc))])
    CreateTransaction
  Continuation: Resume(result=class kotlin.Unit)
  Diff between previous and next state:
isFlowResumed: 
    false
    true


 --- Transition of flow [19d5529e-5027-4fa9-b1fb-f606ce138a0e] ---
  Timestamp: 2023-01-31T07:00:15.320Z
  Event: LeaveSubFlow
  Actions: 
    
  Continuation: ProcessEvents
  Diff between previous and next state:
checkpoint.checkpointState.subFlowStack: 
    [Inlined(flowClass=class net.corda.samples.obligation.flows.IOUSettleFlowResponder, subFlowVersion=CorDappFlow(platformVersion=11, corDappName=workflows-1.0, corDappHash=B699A1A7AEE96EE2270B80DAE7A921F446B5529E562BC1497C4BF0F7569223AA), isEnabledTimedFlow=false), Inlined(flowClass=class net.corda.samples.obligation.flows.IOUSettleFlowResponder$call$signedTransactionFlow$1, subFlowVersion=CoreFlow(platformVersion=11), isEnabledTimedFlow=false)]
    [Inlined(flowClass=class net.corda.samples.obligation.flows.IOUSettleFlowResponder, subFlowVersion=CorDappFlow(platformVersion=11, corDappName=workflows-1.0, corDappHash=B699A1A7AEE96EE2270B80DAE7A921F446B5529E562BC1497C4BF0F7569223AA), isEnabledTimedFlow=false)]


 --- Transition of flow [19d5529e-5027-4fa9-b1fb-f606ce138a0e] ---
  Timestamp: 2023-01-31T07:00:15.320Z
  Event: EnterSubFlow(subFlowClass=class net.corda.core.flows.ReceiveFinalityFlow, subFlowVersion=CoreFlow(platformVersion=11), isEnabledTimedFlow=false)
  Actions: 
    
  Continuation: ProcessEvents
  Diff between previous and next state:
checkpoint.checkpointState.subFlowStack: 
    [Inlined(flowClass=class net.corda.samples.obligation.flows.IOUSettleFlowResponder, subFlowVersion=CorDappFlow(platformVersion=11, corDappName=workflows-1.0, corDappHash=B699A1A7AEE96EE2270B80DAE7A921F446B5529E562BC1497C4BF0F7569223AA), isEnabledTimedFlow=false)]
    [Inlined(flowClass=class net.corda.samples.obligation.flows.IOUSettleFlowResponder, subFlowVersion=CorDappFlow(platformVersion=11, corDappName=workflows-1.0, corDappHash=B699A1A7AEE96EE2270B80DAE7A921F446B5529E562BC1497C4BF0F7569223AA), isEnabledTimedFlow=false), Inlined(flowClass=class net.corda.core.flows.ReceiveFinalityFlow, subFlowVersion=CoreFlow(platformVersion=11), isEnabledTimedFlow=false)]


 --- Transition of flow [19d5529e-5027-4fa9-b1fb-f606ce138a0e] ---
  Timestamp: 2023-01-31T07:00:15.321Z
  Event: EnterSubFlow(subFlowClass=class net.corda.core.flows.ReceiveFinalityFlow$call$1, subFlowVersion=CoreFlow(platformVersion=11), isEnabledTimedFlow=false)
  Actions: 
    
  Continuation: ProcessEvents
  Diff between previous and next state:
checkpoint.checkpointState.subFlowStack: 
    [Inlined(flowClass=class net.corda.samples.obligation.flows.IOUSettleFlowResponder, subFlowVersion=CorDappFlow(platformVersion=11, corDappName=workflows-1.0, corDappHash=B699A1A7AEE96EE2270B80DAE7A921F446B5529E562BC1497C4BF0F7569223AA), isEnabledTimedFlow=false), Inlined(flowClass=class net.corda.core.flows.ReceiveFinalityFlow, subFlowVersion=CoreFlow(platformVersion=11), isEnabledTimedFlow=false)]
    [Inlined(flowClass=class net.corda.samples.obligation.flows.IOUSettleFlowResponder, subFlowVersion=CorDappFlow(platformVersion=11, corDappName=workflows-1.0, corDappHash=B699A1A7AEE96EE2270B80DAE7A921F446B5529E562BC1497C4BF0F7569223AA), isEnabledTimedFlow=false), Inlined(flowClass=class net.corda.core.flows.ReceiveFinalityFlow, subFlowVersion=CoreFlow(platformVersion=11), isEnabledTimedFlow=false), Inlined(flowClass=class net.corda.core.flows.ReceiveFinalityFlow$call$1, subFlowVersion=CoreFlow(platformVersion=11), isEnabledTimedFlow=false)]
checkpoint.timestamp: 
    2023-01-31T07:00:15.320Z
    2023-01-31T07:00:15.321Z


 --- Transition of flow [19d5529e-5027-4fa9-b1fb-f606ce138a0e] ---
  Timestamp: 2023-01-31T07:00:15.323Z
  Event: Suspend(ioRequest=Receive(sessions=[FlowSessionImpl(destination=O=Mock Company 1, L=London, C=GB, sourceSessionId=SessionId(toLong=-6111232092193349787))]), maySkipCheckpoint=false, fiber=E8B9014473032C07EA6B41C9BD0F7757B15F7E9AC8374E9AF7C85904623AC60D, currentStep=Starting)
  Actions: 
    PersistCheckpoint(id=[19d5529e-5027-4fa9-b1fb-f606ce138a0e], checkpoint=Checkpoint(checkpointState=CheckpointState(invocationContext=InvocationContext(origin=Peer(party=O=Mock Company 1, L=London, C=GB), trace=Trace(invocationId=ecadbadd-d49d-4516-8b4c-2ec4a2bd801c, timestamp: 2023-01-31T07:00:14.883Z, entityType: Invocation, sessionId=ecadbadd-d49d-4516-8b4c-2ec4a2bd801c, timestamp: 2023-01-31T07:00:14.883Z, entityType: Session), actor=null, externalTrace=null, impersonatedActor=null, arguments=[], clientId=null), ourIdentity=O=Mock Company 3, L=London, C=GB, sessions={SessionId(toLong=-6111232092193349787)=Initiated(peerParty=O=Mock Company 1, L=London, C=GB, peerFlowInfo=FlowInfo(flowVersion=1, appName=<unknown>), receivedMessages=[], otherSideErrored=false, peerSinkSessionId=SessionId(toLong=-846941239363969924), deduplicationSeed=D--846941239363969924--3458992896374643217)}, sessionsToBeClosed=[], subFlowStack=[Inlined(flowClass=class net.corda.samples.obligation.flows.IOUSettleFlowResponder, subFlowVersion=CorDappFlow(platformVersion=11, corDappName=workflows-1.0, corDappHash=B699A1A7AEE96EE2270B80DAE7A921F446B5529E562BC1497C4BF0F7569223AA), isEnabledTimedFlow=false), Inlined(flowClass=class net.corda.core.flows.ReceiveFinalityFlow, subFlowVersion=CoreFlow(platformVersion=11), isEnabledTimedFlow=false), Inlined(flowClass=class net.corda.core.flows.ReceiveFinalityFlow$call$1, subFlowVersion=CoreFlow(platformVersion=11), isEnabledTimedFlow=false)], numberOfSuspends=7, numberOfCommits=8), flowState=Started(flowIORequest=Receive(sessions=[FlowSessionImpl(destination=O=Mock Company 1, L=London, C=GB, sourceSessionId=SessionId(toLong=-6111232092193349787))]), frozenFiber=E8B9014473032C07EA6B41C9BD0F7757B15F7E9AC8374E9AF7C85904623AC60D), errorState=Clean, result=null, status=RUNNABLE, progressStep=Starting, flowIoRequest=Receive, compatible=true), isCheckpointUpdate=true)
    PersistDeduplicationFacts(deduplicationHandlers=[])
    CommitTransaction
    AcknowledgeMessages(deduplicationHandlers=[])
    ScheduleEvent(event=DoRemainingWork)
  Continuation: ProcessEvents
  Diff between previous and next state:
numberOfCommits: 
    7
    8
checkpoint.flowIoRequest: 
    Send
    Receive
checkpoint.flowState.flowIORequest: 
    Send(sessionToMessage={FlowSessionImpl(destination=O=Mock Company 1, L=London, C=GB, sourceSessionId=SessionId(toLong=-6111232092193349787))=5A4ACCA876E182E6A7DFE903152E54ECD0BAAA64CEC40DD908C1185F4DC762CF})
    Receive(sessions=[FlowSessionImpl(destination=O=Mock Company 1, L=London, C=GB, sourceSessionId=SessionId(toLong=-6111232092193349787))])
checkpoint.flowState.frozenFiber.hash: 
    7752CCCCD55AB58F8011BD26787FAB412B34AF2D2A5228AE54ED094C93D04574
    E8B9014473032C07EA6B41C9BD0F7757B15F7E9AC8374E9AF7C85904623AC60D
checkpoint.checkpointState.numberOfCommits: 
    7
    8
checkpoint.checkpointState.numberOfSuspends: 
    6
    7
checkpoint.timestamp: 
    2023-01-31T07:00:15.321Z
    2023-01-31T07:00:15.322Z
isFlowResumed: 
    true
    false


 --- Transition of flow [19d5529e-5027-4fa9-b1fb-f606ce138a0e] ---
  Timestamp: 2023-01-31T07:00:15.324Z
  Event: DoRemainingWork
  Actions: 
    
  Continuation: ProcessEvents
  Diff between previous and next state:
null

 --- Transition of flow [19d5529e-5027-4fa9-b1fb-f606ce138a0e] ---
  Timestamp: 2023-01-31T07:00:15.485Z
  Event: DeliverSessionMessage(sessionMessage=ExistingSessionMessage(recipientSessionId=SessionId(toLong=-6111232092193349787), payload=ErrorSessionMessage(flowException=null, errorId=3188663995452510243)), deduplicationHandler=net.corda.testing.node.internal.MockNodeMessagingService$InMemoryDeduplicationHandler@40087492, sender=O=Mock Company 1, L=London, C=GB)
  Actions: 
    ScheduleEvent(event=DoRemainingWork)
  Continuation: ProcessEvents
  Diff between previous and next state:
pendingDeduplicationHandlers: 
    []
    [net.corda.testing.node.internal.MockNodeMessagingService$InMemoryDeduplicationHandler@40087492]
checkpoint.checkpointState.sessions.SessionId(toLong=-6111232092193349787).receivedMessages.isEmpty: 
    true
    false
checkpoint.timestamp: 
    2023-01-31T07:00:15.323Z
    2023-01-31T07:00:15.485Z


 --- Transition of flow [19d5529e-5027-4fa9-b1fb-f606ce138a0e] ---
  Timestamp: 2023-01-31T07:00:15.486Z
  Event: DoRemainingWork
  Actions: 
    CreateTransaction
  Continuation: Throw(throwable=net.corda.core.flows.UnexpectedFlowEndException: Counter-flow errored)
  Diff between previous and next state:
checkpoint.checkpointState.sessions.SessionId(toLong=-6111232092193349787).receivedMessages.isEmpty: 
    false
    true
checkpoint.checkpointState.sessions.SessionId(toLong=-6111232092193349787).otherSideErrored: 
    false
    true
isFlowResumed: 
    false
    true


 --- Transition of flow [19d5529e-5027-4fa9-b1fb-f606ce138a0e] ---
  Timestamp: 2023-01-31T07:00:15.486Z
  Event: LeaveSubFlow
  Actions: 
    
  Continuation: ProcessEvents
  Diff between previous and next state:
checkpoint.checkpointState.subFlowStack: 
    [Inlined(flowClass=class net.corda.samples.obligation.flows.IOUSettleFlowResponder, subFlowVersion=CorDappFlow(platformVersion=11, corDappName=workflows-1.0, corDappHash=B699A1A7AEE96EE2270B80DAE7A921F446B5529E562BC1497C4BF0F7569223AA), isEnabledTimedFlow=false), Inlined(flowClass=class net.corda.core.flows.ReceiveFinalityFlow, subFlowVersion=CoreFlow(platformVersion=11), isEnabledTimedFlow=false), Inlined(flowClass=class net.corda.core.flows.ReceiveFinalityFlow$call$1, subFlowVersion=CoreFlow(platformVersion=11), isEnabledTimedFlow=false)]
    [Inlined(flowClass=class net.corda.samples.obligation.flows.IOUSettleFlowResponder, subFlowVersion=CorDappFlow(platformVersion=11, corDappName=workflows-1.0, corDappHash=B699A1A7AEE96EE2270B80DAE7A921F446B5529E562BC1497C4BF0F7569223AA), isEnabledTimedFlow=false), Inlined(flowClass=class net.corda.core.flows.ReceiveFinalityFlow, subFlowVersion=CoreFlow(platformVersion=11), isEnabledTimedFlow=false)]
checkpoint.timestamp: 
    2023-01-31T07:00:15.485Z
    2023-01-31T07:00:15.486Z


 --- Transition of flow [19d5529e-5027-4fa9-b1fb-f606ce138a0e] ---
  Timestamp: 2023-01-31T07:00:15.486Z
  Event: LeaveSubFlow
  Actions: 
    
  Continuation: ProcessEvents
  Diff between previous and next state:
checkpoint.checkpointState.subFlowStack: 
    [Inlined(flowClass=class net.corda.samples.obligation.flows.IOUSettleFlowResponder, subFlowVersion=CorDappFlow(platformVersion=11, corDappName=workflows-1.0, corDappHash=B699A1A7AEE96EE2270B80DAE7A921F446B5529E562BC1497C4BF0F7569223AA), isEnabledTimedFlow=false), Inlined(flowClass=class net.corda.core.flows.ReceiveFinalityFlow, subFlowVersion=CoreFlow(platformVersion=11), isEnabledTimedFlow=false)]
    [Inlined(flowClass=class net.corda.samples.obligation.flows.IOUSettleFlowResponder, subFlowVersion=CorDappFlow(platformVersion=11, corDappName=workflows-1.0, corDappHash=B699A1A7AEE96EE2270B80DAE7A921F446B5529E562BC1497C4BF0F7569223AA), isEnabledTimedFlow=false)]


 --- Transition of flow [19d5529e-5027-4fa9-b1fb-f606ce138a0e] ---
  Timestamp: 2023-01-31T07:00:15.487Z
  Event: Error(exception=net.corda.core.flows.UnexpectedFlowEndException: Counter-flow errored, rollback=true)
  Actions: 
    RollbackTransaction
    ScheduleEvent(event=DoRemainingWork)
  Continuation: ProcessEvents
  Diff between previous and next state:
checkpoint.errorState: 
    Clean
    Errored(errors=[FlowError(errorId=3188663995452510243, exception=net.corda.core.flows.UnexpectedFlowEndException: Counter-flow errored)], propagatedIndex=0, propagating=false)
isFlowResumed: 
    true
    false


 --- Transition of flow [19d5529e-5027-4fa9-b1fb-f606ce138a0e] ---
  Timestamp: 2023-01-31T07:00:15.487Z
  Event: DoRemainingWork
  Actions: 
    
  Continuation: ProcessEvents
  Diff between previous and next state:
null

 --- Transition of flow [19d5529e-5027-4fa9-b1fb-f606ce138a0e] ---
  Timestamp: 2023-01-31T07:00:15.487Z
  Event: StartErrorPropagation
  Actions: 
    ScheduleEvent(event=DoRemainingWork)
  Continuation: ProcessEvents
  Diff between previous and next state:
checkpoint.errorState.propagating: 
    false
    true
checkpoint.timestamp: 
    2023-01-31T07:00:15.486Z
    2023-01-31T07:00:15.487Z


 --- Transition of flow [19d5529e-5027-4fa9-b1fb-f606ce138a0e] ---
  Timestamp: 2023-01-31T07:00:15.513Z
  Event: DoRemainingWork
  Actions: 
    PropagateErrors(errorMessages=[ErrorSessionMessage(flowException=null, errorId=3188663995452510243)], sessions=[], senderUUID=029259cf-bb6a-44e3-8b88-309bd9c28ecc)
    CreateTransaction
    RemoveCheckpoint(id=[19d5529e-5027-4fa9-b1fb-f606ce138a0e], mayHavePersistentResults=false)
    PersistDeduplicationFacts(deduplicationHandlers=[net.corda.testing.node.internal.MockNodeMessagingService$InMemoryDeduplicationHandler@40087492])
    ReleaseSoftLocks(uuid=19d5529e-5027-4fa9-b1fb-f606ce138a0e)
    CommitTransaction
    AcknowledgeMessages(deduplicationHandlers=[net.corda.testing.node.internal.MockNodeMessagingService$InMemoryDeduplicationHandler@40087492])
    RemoveSessionBindings(sessionIds=[SessionId(toLong=-6111232092193349787)])
    RemoveFlow(flowId=[19d5529e-5027-4fa9-b1fb-f606ce138a0e], removalReason=ErrorFinish(flowErrors=[FlowError(errorId=3188663995452510243, exception=net.corda.core.flows.UnexpectedFlowEndException: Counter-flow errored)]), lastState=StateMachineState(checkpoint=Checkpoint(checkpointState=CheckpointState(invocationContext=InvocationContext(origin=Peer(party=O=Mock Company 1, L=London, C=GB), trace=Trace(invocationId=ecadbadd-d49d-4516-8b4c-2ec4a2bd801c, timestamp: 2023-01-31T07:00:14.883Z, entityType: Invocation, sessionId=ecadbadd-d49d-4516-8b4c-2ec4a2bd801c, timestamp: 2023-01-31T07:00:14.883Z, entityType: Session), actor=null, externalTrace=null, impersonatedActor=null, arguments=[], clientId=null), ourIdentity=O=Mock Company 3, L=London, C=GB, sessions={SessionId(toLong=-6111232092193349787)=Initiated(peerParty=O=Mock Company 1, L=London, C=GB, peerFlowInfo=FlowInfo(flowVersion=1, appName=<unknown>), receivedMessages=[], otherSideErrored=true, peerSinkSessionId=SessionId(toLong=-846941239363969924), deduplicationSeed=D--846941239363969924--3458992896374643217)}, sessionsToBeClosed=[], subFlowStack=[Inlined(flowClass=class net.corda.samples.obligation.flows.IOUSettleFlowResponder, subFlowVersion=CorDappFlow(platformVersion=11, corDappName=workflows-1.0, corDappHash=B699A1A7AEE96EE2270B80DAE7A921F446B5529E562BC1497C4BF0F7569223AA), isEnabledTimedFlow=false)], numberOfSuspends=7, numberOfCommits=9), flowState=net.corda.node.services.statemachine.FlowState$Finished@c18d805, errorState=Errored(errors=[FlowError(errorId=3188663995452510243, exception=net.corda.core.flows.UnexpectedFlowEndException: Counter-flow errored)], propagatedIndex=0, propagating=true), result=null, status=FAILED, progressStep=Starting, flowIoRequest=Receive, compatible=true), flowLogic=net.corda.samples.obligation.flows.IOUSettleFlowResponder@2060c030, pendingDeduplicationHandlers=[], isFlowResumed=false, isWaitingForFuture=false, future=null, isAnyCheckpointPersisted=true, isStartIdempotent=false, isRemoved=true, isKilled=false, isDead=false, senderUUID=029259cf-bb6a-44e3-8b88-309bd9c28ecc, reloadCheckpointAfterSuspendCount=null, numberOfCommits=9, lock=java.util.concurrent.Semaphore@51f41ef7[Permits = 0]))
  Continuation: Abort
  Diff between previous and next state:
pendingDeduplicationHandlers: 
    [net.corda.testing.node.internal.MockNodeMessagingService$InMemoryDeduplicationHandler@40087492]
    []
isRemoved: 
    false
    true
numberOfCommits: 
    8
    9
checkpoint.status: 
    RUNNABLE
    FAILED
checkpoint.flowState: 
    Started(flowIORequest=Receive(sessions=[FlowSessionImpl(destination=O=Mock Company 1, L=London, C=GB, sourceSessionId=SessionId(toLong=-6111232092193349787))]), frozenFiber=E8B9014473032C07EA6B41C9BD0F7757B15F7E9AC8374E9AF7C85904623AC60D)
    net.corda.node.services.statemachine.FlowState$Finished@c18d805
checkpoint.checkpointState.numberOfCommits: 
    8
    9
checkpoint.timestamp: 
    2023-01-31T07:00:15.487Z
    2023-01-31T07:00:15.505Z
 {fiber-id=10000029, flow-id=19d5529e-5027-4fa9-b1fb-f606ce138a0e, invocation_id=ecadbadd-d49d-4516-8b4c-2ec4a2bd801c, invocation_timestamp=2023-01-31T07:00:14.883Z, origin=O=Mock Company 1, L=London, C=GB, session_id=ecadbadd-d49d-4516-8b4c-2ec4a2bd801c, session_timestamp=2023-01-31T07:00:14.883Z, thread-id=859, tx_id=B8B88DF526D6289A98FCDCC0D0A5BE69453156D8846C61133778E9B0554C8B59}
[WARN ] 2023-01-31T07:00:15,528Z [Mock network] interceptors.DumpHistoryOnErrorInterceptor. - Flow [19d5529e-5027-4fa9-b1fb-f606ce138a0e] error {fiber-id=10000029, flow-id=19d5529e-5027-4fa9-b1fb-f606ce138a0e, invocation_id=ecadbadd-d49d-4516-8b4c-2ec4a2bd801c, invocation_timestamp=2023-01-31T07:00:14.883Z, origin=O=Mock Company 1, L=London, C=GB, session_id=ecadbadd-d49d-4516-8b4c-2ec4a2bd801c, session_timestamp=2023-01-31T07:00:14.883Z, thread-id=859, tx_id=B8B88DF526D6289A98FCDCC0D0A5BE69453156D8846C61133778E9B0554C8B59}
net.corda.core.flows.UnexpectedFlowEndException: Counter-flow errored
	at Received unexpected counter-flow exception from peer O=Mock Company 1, L=London, C=GB.() ~[?:?]
	at net.corda.node.services.statemachine.FlowStateMachineImpl.fillInLocalStackTrace(FlowStateMachineImpl.kt:244) ~[corda-node-4.9.jar:?]
	at net.corda.node.services.statemachine.FlowStateMachineImpl.processEventsUntilFlowIsResumed(FlowStateMachineImpl.kt:225) ~[corda-node-4.9.jar:?]
	at net.corda.node.services.statemachine.FlowStateMachineImpl.suspend(FlowStateMachineImpl.kt:577) ~[corda-node-4.9.jar:?]
	at net.corda.node.services.statemachine.FlowSessionImpl.receive(FlowSessionImpl.kt:67) ~[corda-node-4.9.jar:?]
	at net.corda.node.services.statemachine.FlowSessionImpl.receive(FlowSessionImpl.kt:71) ~[corda-node-4.9.jar:?]
	at net.corda.core.flows.ReceiveTransactionFlow.call(ReceiveTransactionFlow.kt:103) ~[corda-core-4.9.jar:?]
	at net.corda.core.flows.ReceiveTransactionFlow.call(ReceiveTransactionFlow.kt:31) ~[corda-core-4.9.jar:?]
	at net.corda.node.services.statemachine.FlowStateMachineImpl.subFlow(FlowStateMachineImpl.kt:420) ~[corda-node-4.9.jar:?]
	at net.corda.core.flows.FlowLogic.subFlow(FlowLogic.kt:409) ~[corda-core-4.9.jar:?]
	at net.corda.core.flows.ReceiveFinalityFlow.call(FinalityFlow.kt:285) ~[corda-core-4.9.jar:?]
	at net.corda.core.flows.ReceiveFinalityFlow.call(FinalityFlow.kt:280) ~[corda-core-4.9.jar:?]
	at net.corda.node.services.statemachine.FlowStateMachineImpl.subFlow(FlowStateMachineImpl.kt:420) ~[corda-node-4.9.jar:?]
	at net.corda.core.flows.FlowLogic.subFlow(FlowLogic.kt:409) ~[corda-core-4.9.jar:?]
	at net.corda.samples.obligation.flows.IOUSettleFlowResponder.call(IOUSettleFlow.kt:139) ~[main/:?]
	at net.corda.samples.obligation.flows.IOUSettleFlowResponder.call(IOUSettleFlow.kt:126) ~[main/:?]
	at net.corda.node.services.statemachine.FlowStateMachineImpl.run(FlowStateMachineImpl.kt:349) ~[corda-node-4.9.jar:?]
	at net.corda.node.services.statemachine.FlowStateMachineImpl.run(FlowStateMachineImpl.kt:71) ~[corda-node-4.9.jar:?]
	at co.paralleluniverse.fibers.Fiber.run1(Fiber.java:1092) ~[quasar-core-0.7.10.jar:0.7.10]
	at co.paralleluniverse.fibers.Fiber.exec(Fiber.java:788) ~[quasar-core-0.7.10.jar:0.7.10]
	at co.paralleluniverse.fibers.RunnableFiberTask.doExec(RunnableFiberTask.java:100) ~[quasar-core-0.7.10.jar:0.7.10]
	at co.paralleluniverse.fibers.RunnableFiberTask.run(RunnableFiberTask.java:91) ~[quasar-core-0.7.10.jar:0.7.10]
	at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511) ~[?:1.8.0_202]
	at java.util.concurrent.FutureTask.run(FutureTask.java:266) ~[?:1.8.0_202]
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.access$201(ScheduledThreadPoolExecutor.java:180) ~[?:1.8.0_202]
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.run(ScheduledThreadPoolExecutor.java:293) ~[?:1.8.0_202]
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149) ~[?:1.8.0_202]
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624) ~[?:1.8.0_202]
	at net.corda.node.utilities.AffinityExecutor$ServiceAffinityExecutor$1$thread$1.run(AffinityExecutor.kt:63) ~[corda-node-4.9.jar:?]
[INFO ] 2023-01-31T07:00:15,545Z [Test worker] persistence.CordaPersistence. - Closing HikariDataSource (HikariPool-1) {}
[INFO ] 2023-01-31T07:00:15,582Z [Test worker] internal.MockNodeMessagingService. - Status change to false {}
[INFO ] 2023-01-31T07:00:15,582Z [Test worker] internal.InternalMockNetwork$MockNode. - MessagingService active change to: false {}
[INFO ] 2023-01-31T07:00:15,586Z [Test worker] persistence.CordaPersistence. - Closing HikariDataSource (HikariPool-2) {}
[INFO ] 2023-01-31T07:00:15,610Z [Test worker] internal.MockNodeMessagingService. - Status change to false {}
[INFO ] 2023-01-31T07:00:15,610Z [Test worker] internal.InternalMockNetwork$MockNode. - MessagingService active change to: false {}
[INFO ] 2023-01-31T07:00:15,612Z [Test worker] persistence.CordaPersistence. - Closing HikariDataSource (HikariPool-3) {}
[INFO ] 2023-01-31T07:00:15,630Z [Test worker] internal.MockNodeMessagingService. - Status change to false {}
[INFO ] 2023-01-31T07:00:15,630Z [Test worker] internal.InternalMockNetwork$MockNode. - MessagingService active change to: false {}
[INFO ] 2023-01-31T07:00:15,632Z [Test worker] persistence.CordaPersistence. - Closing HikariDataSource (HikariPool-4) {}
[INFO ] 2023-01-31T07:00:15,647Z [Test worker] internal.MockNodeMessagingService. - Status change to false {}
[INFO ] 2023-01-31T07:00:15,647Z [Test worker] internal.InternalMockNetwork$MockNode. - MessagingService active change to: false {}
[INFO ] 2023-01-31T07:08:01,408Z [Test worker] internal.TestCordappImpl. - Generating CorDapp jar from local project in /Users/peter.li/Desktop/obligation-cordapp/workflows ... {}
[INFO ] 2023-01-31T07:08:01,561Z [Connection worker] internal.TestCordappImpl. - Build {}
[INFO ] 2023-01-31T07:08:03,230Z [Connection worker] internal.TestCordappImpl. - Starting Gradle Daemon {}
[INFO ] 2023-01-31T07:08:04,030Z [Connection worker] internal.TestCordappImpl. - Connecting to Gradle Daemon {}
[INFO ] 2023-01-31T07:08:04,043Z [Connection worker] internal.TestCordappImpl. - Starting Gradle Daemon {}
[INFO ] 2023-01-31T07:08:04,043Z [Connection worker] internal.TestCordappImpl. - Build {}
[INFO ] 2023-01-31T07:08:04,544Z [Connection worker] internal.TestCordappImpl. - Run build {}
[INFO ] 2023-01-31T07:08:04,566Z [Connection worker] internal.TestCordappImpl. - Evaluate settings {}
[INFO ] 2023-01-31T07:08:04,996Z [Connection worker] internal.TestCordappImpl. - Run build {}
[INFO ] 2023-01-31T07:08:05,006Z [Connection worker] internal.TestCordappImpl. - Configure build {}
[INFO ] 2023-01-31T07:08:05,006Z [Connection worker] internal.TestCordappImpl. - Load projects {}
[INFO ] 2023-01-31T07:08:05,162Z [Connection worker] internal.TestCordappImpl. - Configure build {}
[INFO ] 2023-01-31T07:08:05,172Z [Connection worker] internal.TestCordappImpl. - Configure project : {}
[INFO ] 2023-01-31T07:08:05,748Z [Connection worker] internal.TestCordappImpl. - Resolve dependencies of :classpath {}
[INFO ] 2023-01-31T07:08:06,123Z [Connection worker] internal.TestCordappImpl. - Configure project : {}
[INFO ] 2023-01-31T07:08:06,134Z [Connection worker] internal.TestCordappImpl. - Resolve files of :classpath {}
[INFO ] 2023-01-31T07:08:06,167Z [Connection worker] internal.TestCordappImpl. - Configure project : {}
[INFO ] 2023-01-31T07:08:06,167Z [Connection worker] internal.TestCordappImpl. - Resolve files of :classpath {}
[INFO ] 2023-01-31T07:08:06,167Z [Connection worker] internal.TestCordappImpl. - Configure project : {}
[INFO ] 2023-01-31T07:08:07,382Z [Connection worker] internal.TestCordappImpl. - Configure build {}
[INFO ] 2023-01-31T07:08:07,382Z [Connection worker] internal.TestCordappImpl. - Configure project :clients {}
[INFO ] 2023-01-31T07:08:07,551Z [Connection worker] internal.TestCordappImpl. - Configure build {}
[INFO ] 2023-01-31T07:08:07,552Z [Connection worker] internal.TestCordappImpl. - Configure project :contracts {}
[INFO ] 2023-01-31T07:08:07,594Z [Connection worker] internal.TestCordappImpl. - Configure build {}
[INFO ] 2023-01-31T07:08:07,595Z [Connection worker] internal.TestCordappImpl. - Configure project :workflows {}
[INFO ] 2023-01-31T07:08:07,770Z [Connection worker] internal.TestCordappImpl. - Configure build {}
[INFO ] 2023-01-31T07:08:07,771Z [Connection worker] internal.TestCordappImpl. - Run build {}
[INFO ] 2023-01-31T07:08:07,867Z [Connection worker] internal.TestCordappImpl. - Resolve dependencies of :workflows:kotlinCompilerClasspath {}
[INFO ] 2023-01-31T07:08:07,878Z [Connection worker] internal.TestCordappImpl. - Run build {}
[INFO ] 2023-01-31T07:08:07,878Z [Connection worker] internal.TestCordappImpl. - Resolve files of :workflows:kotlinCompilerClasspath {}
[INFO ] 2023-01-31T07:08:07,878Z [Connection worker] internal.TestCordappImpl. - Run build {}
[INFO ] 2023-01-31T07:08:07,879Z [Connection worker] internal.TestCordappImpl. - Resolve dependencies of :contracts:kotlinCompilerClasspath {}
[INFO ] 2023-01-31T07:08:07,889Z [Connection worker] internal.TestCordappImpl. - Run build {}
[INFO ] 2023-01-31T07:08:07,889Z [Connection worker] internal.TestCordappImpl. - Resolve files of :contracts:kotlinCompilerClasspath {}
[INFO ] 2023-01-31T07:08:07,889Z [Connection worker] internal.TestCordappImpl. - Run build {}
[INFO ] 2023-01-31T07:08:07,889Z [Connection worker] internal.TestCordappImpl. - Run tasks {}
[INFO ] 2023-01-31T07:08:07,922Z [Connection worker] internal.TestCordappImpl. - Task :contracts:compileKotlin {}
[INFO ] 2023-01-31T07:08:07,922Z [Connection worker] internal.TestCordappImpl. - Resolve files of :contracts:kotlinCompilerClasspath {}
[INFO ] 2023-01-31T07:08:07,922Z [Connection worker] internal.TestCordappImpl. - Task :contracts:compileKotlin {}
[INFO ] 2023-01-31T07:08:07,993Z [Connection worker] internal.TestCordappImpl. - Resolve dependencies of :contracts:kotlinCompilerPluginClasspath {}
[INFO ] 2023-01-31T07:08:08,004Z [Connection worker] internal.TestCordappImpl. - Task :contracts:compileKotlin {}
[INFO ] 2023-01-31T07:08:08,004Z [Connection worker] internal.TestCordappImpl. - Resolve files of :contracts:kotlinCompilerPluginClasspath {}
[INFO ] 2023-01-31T07:08:08,004Z [Connection worker] internal.TestCordappImpl. - Task :contracts:compileKotlin {}
[INFO ] 2023-01-31T07:08:08,004Z [Connection worker] internal.TestCordappImpl. - Resolve dependencies of :contracts:compileClasspath {}
[INFO ] 2023-01-31T07:08:08,110Z [Connection worker] internal.TestCordappImpl. - Task :contracts:compileKotlin {}
[INFO ] 2023-01-31T07:08:08,110Z [Connection worker] internal.TestCordappImpl. - Resolve files of :contracts:compileClasspath {}
[INFO ] 2023-01-31T07:08:08,110Z [Connection worker] internal.TestCordappImpl. - Task :contracts:compileKotlin {}
[INFO ] 2023-01-31T07:08:08,532Z [Connection worker] internal.TestCordappImpl. - Resolve files of :contracts:compileClasspath {}
[INFO ] 2023-01-31T07:08:08,532Z [Connection worker] internal.TestCordappImpl. - Task :contracts:compileKotlin {}
[INFO ] 2023-01-31T07:08:08,544Z [Connection worker] internal.TestCordappImpl. - Resolve files of :contracts:kotlinCompilerPluginClasspath {}
[INFO ] 2023-01-31T07:08:08,544Z [Connection worker] internal.TestCordappImpl. - Task :contracts:compileKotlin {}
[INFO ] 2023-01-31T07:08:08,580Z [Connection worker] internal.TestCordappImpl. - Run tasks {}
[INFO ] 2023-01-31T07:08:08,580Z [Connection worker] internal.TestCordappImpl. - Task :contracts:compileJava {}
[INFO ] 2023-01-31T07:08:08,580Z [Connection worker] internal.TestCordappImpl. - Run tasks {}
[INFO ] 2023-01-31T07:08:08,580Z [Connection worker] internal.TestCordappImpl. - Task :contracts:processResources {}
[INFO ] 2023-01-31T07:08:08,591Z [Connection worker] internal.TestCordappImpl. - Run tasks {}
[INFO ] 2023-01-31T07:08:08,591Z [Connection worker] internal.TestCordappImpl. - Task :contracts:classes {}
[INFO ] 2023-01-31T07:08:08,591Z [Connection worker] internal.TestCordappImpl. - Run tasks {}
[INFO ] 2023-01-31T07:08:08,591Z [Connection worker] internal.TestCordappImpl. - Task :contracts:configureCordappFatJar {}
[INFO ] 2023-01-31T07:08:08,603Z [Connection worker] internal.TestCordappImpl. - Resolve dependencies of :contracts:runtime {}
[INFO ] 2023-01-31T07:08:08,639Z [Connection worker] internal.TestCordappImpl. - Task :contracts:configureCordappFatJar {}
[INFO ] 2023-01-31T07:08:08,639Z [Connection worker] internal.TestCordappImpl. - Resolve files of :contracts:runtime {}
[INFO ] 2023-01-31T07:08:08,649Z [Connection worker] internal.TestCordappImpl. - Task :contracts:configureCordappFatJar {}
[INFO ] 2023-01-31T07:08:08,649Z [Connection worker] internal.TestCordappImpl. - Resolve files of :contracts:runtime {}
[INFO ] 2023-01-31T07:08:08,649Z [Connection worker] internal.TestCordappImpl. - Task :contracts:configureCordappFatJar {}
[INFO ] 2023-01-31T07:08:08,649Z [Connection worker] internal.TestCordappImpl. - Resolve files of :contracts:runtime {}
[INFO ] 2023-01-31T07:08:08,649Z [Connection worker] internal.TestCordappImpl. - Task :contracts:configureCordappFatJar {}
[INFO ] 2023-01-31T07:08:08,649Z [Connection worker] internal.TestCordappImpl. - Resolve files of :contracts:runtime {}
[INFO ] 2023-01-31T07:08:08,649Z [Connection worker] internal.TestCordappImpl. - Task :contracts:configureCordappFatJar {}
[INFO ] 2023-01-31T07:08:08,649Z [Connection worker] internal.TestCordappImpl. - Resolve files of :contracts:runtime {}
[INFO ] 2023-01-31T07:08:08,649Z [Connection worker] internal.TestCordappImpl. - Task :contracts:configureCordappFatJar {}
[INFO ] 2023-01-31T07:08:08,660Z [Connection worker] internal.TestCordappImpl. - Run tasks {}
[INFO ] 2023-01-31T07:08:08,660Z [Connection worker] internal.TestCordappImpl. - Task :contracts:inspectClassesForKotlinIC {}
[INFO ] 2023-01-31T07:08:08,670Z [Connection worker] internal.TestCordappImpl. - Run tasks {}
[INFO ] 2023-01-31T07:08:08,670Z [Connection worker] internal.TestCordappImpl. - Task :contracts:jar {}
[INFO ] 2023-01-31T07:08:08,681Z [Connection worker] internal.TestCordappImpl. - Run tasks {}
[INFO ] 2023-01-31T07:08:08,691Z [Connection worker] internal.TestCordappImpl. - Task :workflows:compileKotlin {}
[INFO ] 2023-01-31T07:08:08,692Z [Connection worker] internal.TestCordappImpl. - Resolve files of :workflows:kotlinCompilerClasspath {}
[INFO ] 2023-01-31T07:08:08,692Z [Connection worker] internal.TestCordappImpl. - Task :workflows:compileKotlin {}
[INFO ] 2023-01-31T07:08:08,703Z [Connection worker] internal.TestCordappImpl. - Resolve dependencies of :workflows:kotlinCompilerPluginClasspath {}
[INFO ] 2023-01-31T07:08:08,714Z [Connection worker] internal.TestCordappImpl. - Task :workflows:compileKotlin {}
[INFO ] 2023-01-31T07:08:08,714Z [Connection worker] internal.TestCordappImpl. - Resolve files of :workflows:kotlinCompilerPluginClasspath {}
[INFO ] 2023-01-31T07:08:08,714Z [Connection worker] internal.TestCordappImpl. - Task :workflows:compileKotlin {}
[INFO ] 2023-01-31T07:08:08,714Z [Connection worker] internal.TestCordappImpl. - Resolve dependencies of :workflows:compileClasspath {}
[INFO ] 2023-01-31T07:08:08,745Z [Connection worker] internal.TestCordappImpl. - Task :workflows:compileKotlin {}
[INFO ] 2023-01-31T07:08:08,745Z [Connection worker] internal.TestCordappImpl. - Resolve files of :workflows:compileClasspath {}
[INFO ] 2023-01-31T07:08:08,745Z [Connection worker] internal.TestCordappImpl. - Task :workflows:compileKotlin {}
[INFO ] 2023-01-31T07:08:08,745Z [Connection worker] internal.TestCordappImpl. - Resolve files of :workflows:compileClasspath {}
[INFO ] 2023-01-31T07:08:08,745Z [Connection worker] internal.TestCordappImpl. - Task :workflows:compileKotlin {}
[INFO ] 2023-01-31T07:08:08,745Z [Connection worker] internal.TestCordappImpl. - Resolve files of :workflows:kotlinCompilerPluginClasspath {}
[INFO ] 2023-01-31T07:08:08,745Z [Connection worker] internal.TestCordappImpl. - Task :workflows:compileKotlin {}
[INFO ] 2023-01-31T07:08:08,755Z [Connection worker] internal.TestCordappImpl. - Run tasks {}
[INFO ] 2023-01-31T07:08:08,756Z [Connection worker] internal.TestCordappImpl. - Task :workflows:compileJava {}
[INFO ] 2023-01-31T07:08:08,756Z [Connection worker] internal.TestCordappImpl. - Run tasks {}
[INFO ] 2023-01-31T07:08:08,756Z [Connection worker] internal.TestCordappImpl. - Task :workflows:processResources {}
[INFO ] 2023-01-31T07:08:08,768Z [Connection worker] internal.TestCordappImpl. - Run tasks {}
[INFO ] 2023-01-31T07:08:08,768Z [Connection worker] internal.TestCordappImpl. - Task :workflows:classes {}
[INFO ] 2023-01-31T07:08:08,768Z [Connection worker] internal.TestCordappImpl. - Run tasks {}
[INFO ] 2023-01-31T07:08:08,768Z [Connection worker] internal.TestCordappImpl. - Task :workflows:configureCordappFatJar {}
[INFO ] 2023-01-31T07:08:08,768Z [Connection worker] internal.TestCordappImpl. - Resolve dependencies of :workflows:runtime {}
[INFO ] 2023-01-31T07:08:08,809Z [Connection worker] internal.TestCordappImpl. - Task :workflows:configureCordappFatJar {}
[INFO ] 2023-01-31T07:08:08,810Z [Connection worker] internal.TestCordappImpl. - Resolve files of :workflows:runtime {}
[INFO ] 2023-01-31T07:08:08,810Z [Connection worker] internal.TestCordappImpl. - Task :workflows:configureCordappFatJar {}
[INFO ] 2023-01-31T07:08:08,820Z [Connection worker] internal.TestCordappImpl. - Resolve files of :workflows:runtime {}
[INFO ] 2023-01-31T07:08:08,820Z [Connection worker] internal.TestCordappImpl. - Task :workflows:configureCordappFatJar {}
[INFO ] 2023-01-31T07:08:08,820Z [Connection worker] internal.TestCordappImpl. - Resolve files of :workflows:runtime {}
[INFO ] 2023-01-31T07:08:08,820Z [Connection worker] internal.TestCordappImpl. - Task :workflows:configureCordappFatJar {}
[INFO ] 2023-01-31T07:08:08,820Z [Connection worker] internal.TestCordappImpl. - Resolve files of :workflows:runtime {}
[INFO ] 2023-01-31T07:08:08,820Z [Connection worker] internal.TestCordappImpl. - Task :workflows:configureCordappFatJar {}
[INFO ] 2023-01-31T07:08:08,821Z [Connection worker] internal.TestCordappImpl. - Resolve files of :workflows:runtime {}
[INFO ] 2023-01-31T07:08:08,821Z [Connection worker] internal.TestCordappImpl. - Task :workflows:configureCordappFatJar {}
[INFO ] 2023-01-31T07:08:08,821Z [Connection worker] internal.TestCordappImpl. - Resolve files of :workflows:runtime {}
[INFO ] 2023-01-31T07:08:08,821Z [Connection worker] internal.TestCordappImpl. - Task :workflows:configureCordappFatJar {}
[INFO ] 2023-01-31T07:08:08,821Z [Connection worker] internal.TestCordappImpl. - Resolve files of :workflows:runtime {}
[INFO ] 2023-01-31T07:08:08,821Z [Connection worker] internal.TestCordappImpl. - Task :workflows:configureCordappFatJar {}
[INFO ] 2023-01-31T07:08:08,821Z [Connection worker] internal.TestCordappImpl. - Resolve files of :workflows:runtime {}
[INFO ] 2023-01-31T07:08:08,821Z [Connection worker] internal.TestCordappImpl. - Task :workflows:configureCordappFatJar {}
[INFO ] 2023-01-31T07:08:08,821Z [Connection worker] internal.TestCordappImpl. - Run tasks {}
[INFO ] 2023-01-31T07:08:08,821Z [Connection worker] internal.TestCordappImpl. - Task :workflows:inspectClassesForKotlinIC {}
[INFO ] 2023-01-31T07:08:08,852Z [Connection worker] internal.TestCordappImpl. - Run tasks {}
[INFO ] 2023-01-31T07:08:08,852Z [Connection worker] internal.TestCordappImpl. - Task :workflows:jar {}
[INFO ] 2023-01-31T07:08:10,525Z [Connection worker] internal.TestCordappImpl. - Run tasks {}
[INFO ] 2023-01-31T07:08:10,538Z [Connection worker] internal.TestCordappImpl. - Run build {}
[INFO ] 2023-01-31T07:08:10,538Z [Connection worker] internal.TestCordappImpl. - Build model 'java.lang.Void' for project ':workflows' {}
[INFO ] 2023-01-31T07:08:10,538Z [Connection worker] internal.TestCordappImpl. - Run build {}
[INFO ] 2023-01-31T07:08:10,545Z [Connection worker] internal.TestCordappImpl. - Build {}
[INFO ] 2023-01-31T07:08:10,561Z [Connection worker] internal.TestCordappImpl. - Deleting unused version-specific caches in /Users/peter.li/Desktop/obligation-cordapp/.gradle {}
[INFO ] 2023-01-31T07:08:10,561Z [Connection worker] internal.TestCordappImpl. - Build {}
[INFO ] 2023-01-31T07:08:10,590Z [Connection worker] internal.TestCordappImpl. -  {}
[INFO ] 2023-01-31T07:08:15,189Z [Test worker] cordapp.JarScanningCordappLoader. - Looking for CorDapps in [build/mock-network/20230131-070800.711-E3B87C8B56CFEBDE/nodes/0/cordapps] {}
[INFO ] 2023-01-31T07:08:15,197Z [Test worker] cordapp.JarScanningCordappLoader. - Loading CorDapps from RestrictedURL(url=file:/Users/peter.li/Desktop/obligation-cordapp/workflows/build/mock-network/20230131-070800.711-E3B87C8B56CFEBDE/nodes/0/cordapps/accounts-contracts-1.0.jar, rootPackageName=null), RestrictedURL(url=file:/Users/peter.li/Desktop/obligation-cordapp/workflows/build/mock-network/20230131-070800.711-E3B87C8B56CFEBDE/nodes/0/cordapps/accounts-workflows-1.0.jar, rootPackageName=null), RestrictedURL(url=file:/Users/peter.li/Desktop/obligation-cordapp/workflows/build/mock-network/20230131-070800.711-E3B87C8B56CFEBDE/nodes/0/cordapps/corda-finance-contracts-4.9.jar, rootPackageName=null), RestrictedURL(url=file:/Users/peter.li/Desktop/obligation-cordapp/workflows/build/mock-network/20230131-070800.711-E3B87C8B56CFEBDE/nodes/0/cordapps/contracts-1.0.jar, rootPackageName=null), RestrictedURL(url=file:/Users/peter.li/Desktop/obligation-cordapp/workflows/build/mock-network/20230131-070800.711-E3B87C8B56CFEBDE/nodes/0/cordapps/workflows-1.0.jar, rootPackageName=null) {}
[INFO ] 2023-01-31T07:08:15,205Z [Test worker] cordapp.JarScanningCordappLoader. - Scanning CorDapp in file:/Users/peter.li/Desktop/obligation-cordapp/workflows/build/mock-network/20230131-070800.711-E3B87C8B56CFEBDE/nodes/0/cordapps/accounts-contracts-1.0.jar {}
[INFO ] 2023-01-31T07:08:15,318Z [Test worker] cordapp.JarScanningCordappLoader. - Scanning CorDapp in file:/Users/peter.li/Desktop/obligation-cordapp/workflows/build/mock-network/20230131-070800.711-E3B87C8B56CFEBDE/nodes/0/cordapps/accounts-workflows-1.0.jar {}
[INFO ] 2023-01-31T07:08:15,500Z [Test worker] cordapp.JarScanningCordappLoader. - Scanning CorDapp in file:/Users/peter.li/Desktop/obligation-cordapp/workflows/build/mock-network/20230131-070800.711-E3B87C8B56CFEBDE/nodes/0/cordapps/corda-finance-contracts-4.9.jar {}
[INFO ] 2023-01-31T07:08:15,626Z [Test worker] cordapp.JarScanningCordappLoader. - Scanning CorDapp in file:/Users/peter.li/Desktop/obligation-cordapp/workflows/build/mock-network/20230131-070800.711-E3B87C8B56CFEBDE/nodes/0/cordapps/contracts-1.0.jar {}
[INFO ] 2023-01-31T07:08:15,637Z [Test worker] cordapp.JarScanningCordappLoader. - Scanning CorDapp in file:/Users/peter.li/Desktop/obligation-cordapp/workflows/build/mock-network/20230131-070800.711-E3B87C8B56CFEBDE/nodes/0/cordapps/workflows-1.0.jar {}
[INFO ] 2023-01-31T07:08:16,777Z [Test worker] internal.InternalMockNetwork$MockNode. - MessagingService active change to: false {}
[INFO ] 2023-01-31T07:08:16,993Z [Test worker] internal.InternalMockNetwork$MockNode. - Flow external operation executor has a max of 2 threads {}
[INFO ] 2023-01-31T07:08:17,049Z [Test worker] internal.InternalMockNetwork$MockNode. - Node starting up ... {}
[INFO ] 2023-01-31T07:08:17,068Z [Test worker] internal.KeyStoreHandler. - Loaded trusted root certificate: DL7fwxLm5xbiMD8adUuYTsPZHAict46Ng4w6RNcySt5vAw, alias: cordarootca {}
[INFO ] 2023-01-31T07:08:17,072Z [Test worker] internal.KeyStoreHandler. - Loaded node identity key: DLBwBwhcv7GZJhCqzi9UMdUp2ph3eG3qdpCkGs5A26jqX6, alias: identity-private-key {}
[INFO ] 2023-01-31T07:08:17,179Z [Test worker] internal.NodeFlowManager. - Registered com.r3.corda.lib.accounts.workflows.flows.ShareStateAndSyncAccounts to initiate com.r3.corda.lib.accounts.workflows.flows.ReceiveStateAndSyncAccounts (version 1) {}
[INFO ] 2023-01-31T07:08:17,180Z [Test worker] internal.NodeFlowManager. - Registered com.r3.corda.lib.accounts.workflows.flows.ShareStateWithAccount to initiate com.r3.corda.lib.accounts.workflows.flows.ReceiveStateForAccount (version 1) {}
[INFO ] 2023-01-31T07:08:17,180Z [Test worker] internal.NodeFlowManager. - Registered com.r3.corda.lib.accounts.workflows.flows.RequestAccountInfo to initiate com.r3.corda.lib.accounts.workflows.flows.RequestAccountInfoHandler (version 1) {}
[INFO ] 2023-01-31T07:08:17,181Z [Test worker] internal.NodeFlowManager. - Registered com.r3.corda.lib.accounts.workflows.flows.RequestKeyForAccount to initiate com.r3.corda.lib.accounts.workflows.flows.SendKeyForAccount (version 1) {}
[INFO ] 2023-01-31T07:08:17,181Z [Test worker] internal.NodeFlowManager. - Registered com.r3.corda.lib.accounts.workflows.flows.ShareAccountInfo to initiate com.r3.corda.lib.accounts.workflows.flows.ShareAccountInfoHandler (version 1) {}
[INFO ] 2023-01-31T07:08:17,182Z [Test worker] internal.NodeFlowManager. - Registered net.corda.samples.obligation.flows.IOUIssueFlow to initiate net.corda.samples.obligation.flows.IOUIssueFlowResponder (version 1) {}
[INFO ] 2023-01-31T07:08:17,182Z [Test worker] internal.NodeFlowManager. - Registered net.corda.samples.obligation.flows.IOUSettleFlow to initiate net.corda.samples.obligation.flows.IOUSettleFlowResponder (version 1) {}
[INFO ] 2023-01-31T07:08:17,183Z [Test worker] internal.NodeFlowManager. - Registered net.corda.samples.obligation.flows.IOUTransferFlow to initiate net.corda.samples.obligation.flows.IOUTransferFlowResponder (version 1) {}
[INFO ] 2023-01-31T07:08:17,183Z [Test worker] internal.NodeFlowManager. - Registered net.corda.samples.obligation.flows.SyncKey to initiate net.corda.samples.obligation.flows.SyncKeyResponder (version 1) {}
[INFO ] 2023-01-31T07:08:17,246Z [Test worker] internal.InternalMockNetwork$MockNode. - Loaded network parameters: NetworkParameters {
      minimumPlatformVersion=4
      notaries=[NotaryInfo(identity=O=Notary, L=London, C=GB, validating=true)]
      maxMessageSize=10485760
      maxTransactionSize=524288000
      whitelistedContractImplementations {
        
      }
      eventHorizon=PT720H
      packageOwnership {
        
      }
      modifiedTime=2023-01-31T07:08:00.429Z
      epoch=1
  } {}
[INFO ] 2023-01-31T07:08:21,730Z [Test worker] internal.InternalMockNetwork$MockNode. - Connected to H2 database. {}
[INFO ] 2023-01-31T07:08:21,788Z [Test worker] persistence.HibernateConfiguration. - Init HibernateConfiguration for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1), AccountsContractsSchemaV1(name=com.r3.corda.lib.accounts.contracts.internal.schemas.AccountsContractsSchema, version=1), AccountsWorkflowsSchemaV1(name=com.r3.corda.lib.accounts.workflows.internal.schemas.AccountsWorkflowsSchema, version=1), CashSchemaV1(name=net.corda.finance.schemas.CashSchema, version=1), CommercialPaperSchemaV1(name=net.corda.finance.schemas.CommercialPaperSchema, version=1), JPANotarySchemaV1(name=net.corda.notary.jpa.JPANotarySchema, version=1)] {}
[INFO ] 2023-01-31T07:08:21,793Z [Test worker] factory.BaseSessionFactoryFactory. - Creating session factory for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1), AccountsContractsSchemaV1(name=com.r3.corda.lib.accounts.contracts.internal.schemas.AccountsContractsSchema, version=1), AccountsWorkflowsSchemaV1(name=com.r3.corda.lib.accounts.workflows.internal.schemas.AccountsWorkflowsSchema, version=1), CashSchemaV1(name=net.corda.finance.schemas.CashSchema, version=1), CommercialPaperSchemaV1(name=net.corda.finance.schemas.CommercialPaperSchema, version=1), JPANotarySchemaV1(name=net.corda.notary.jpa.JPANotarySchema, version=1)] {}
[INFO ] 2023-01-31T07:08:24,073Z [Test worker] factory.BaseSessionFactoryFactory. - Created session factory for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1), AccountsContractsSchemaV1(name=com.r3.corda.lib.accounts.contracts.internal.schemas.AccountsContractsSchema, version=1), AccountsWorkflowsSchemaV1(name=com.r3.corda.lib.accounts.workflows.internal.schemas.AccountsWorkflowsSchema, version=1), CashSchemaV1(name=net.corda.finance.schemas.CashSchema, version=1), CommercialPaperSchemaV1(name=net.corda.finance.schemas.CommercialPaperSchema, version=1), JPANotarySchemaV1(name=net.corda.notary.jpa.JPANotarySchema, version=1)] {}
[INFO ] 2023-01-31T07:08:24,345Z [Test worker] internal.InternalMockNetwork$MockNode. - Node-info has changed so submitting update. Old node-info was null {}
[INFO ] 2023-01-31T07:08:24,353Z [Test worker] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Notary, L=London, C=GB], platformVersion=11, serial=1675148904345), owningKey=DLBwBwhcv7GZJhCqzi9UMdUp2ph3eG3qdpCkGs5A26jqX6 {}
[INFO ] 2023-01-31T07:08:24,353Z [Test worker] network.PersistentNetworkMapCache. - No previous node found for O=Notary, L=London, C=GB {}
[INFO ] 2023-01-31T07:08:24,511Z [Test worker] internal.InternalMockNetwork$MockNode. - New node-info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Notary, L=London, C=GB], platformVersion=11, serial=1675148904345) {}
[INFO ] 2023-01-31T07:08:24,564Z [Test worker] network.NetworkMapUpdater. - Auto-accept enabled for network parameter changes which modify only: [epoch, modifiedTime, packageOwnership, whitelistedContractImplementations] {}
[INFO ] 2023-01-31T07:08:24,595Z [Test worker] internal.MockNodeMessagingService. - Status change to true {}
[INFO ] 2023-01-31T07:08:24,597Z [Test worker] internal.InternalMockNetwork$MockNode. - MessagingService active change to: true {}
[INFO ] 2023-01-31T07:08:24,634Z [MockNode-1-2] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Notary, L=London, C=GB], platformVersion=11, serial=1675148904345), owningKey=DLBwBwhcv7GZJhCqzi9UMdUp2ph3eG3qdpCkGs5A26jqX6 {}
[INFO ] 2023-01-31T07:08:24,634Z [MockNode-1-2] network.PersistentNetworkMapCache. - Previous node was identical to incoming one - doing nothing {}
[INFO ] 2023-01-31T07:08:24,726Z [Test worker] persistence.NodeAttachmentService. - Stored new attachment: id=D370FD972C7E07CE73F4F9B7886D226807F6B16C4EE287398B9C69384109DC14 uploader=app filename=Accounts SDK - States and Contracts {}
[INFO ] 2023-01-31T07:08:24,768Z [Test worker] persistence.NodeAttachmentService. - Stored new attachment: id=BD0C932EAF8B1FE96DCBBF275B914BCD776D14EDC8F97DCEBF7E15DA09C606AE uploader=app filename=Corda Finance Demo {}
[INFO ] 2023-01-31T07:08:24,784Z [Test worker] persistence.NodeAttachmentService. - Stored new attachment: id=8D797B45F40704FA4FD70921F5BC6E2D7B34450D345CE6788D2A87859EF63BD8 uploader=app filename=Obligation Contracts {}
[INFO ] 2023-01-31T07:08:24,798Z [Test worker] internal.InternalMockNetwork$MockNode. - Installed com.r3.corda.lib.accounts.workflows.services.KeyManagementBackedAccountService Corda service {}
[INFO ] 2023-01-31T07:08:24,799Z [Test worker] utilities.NotaryLoader. - Starting notary service: class net.corda.notary.jpa.JPANotaryService {}
[INFO ] 2023-01-31T07:08:25,507Z [Test worker] statemachine.SingleThreadedStateMachineManager. - Node ready, info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Notary, L=London, C=GB], platformVersion=11, serial=1675148904345) {}
[INFO ] 2023-01-31T07:08:25,515Z [Test worker] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Notary, L=London, C=GB], platformVersion=11, serial=1675148904345), owningKey=DLBwBwhcv7GZJhCqzi9UMdUp2ph3eG3qdpCkGs5A26jqX6 {}
[INFO ] 2023-01-31T07:08:25,515Z [Test worker] network.PersistentNetworkMapCache. - Previous node was identical to incoming one - doing nothing {}
[INFO ] 2023-01-31T07:08:25,516Z [Test worker] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Notary, L=London, C=GB], platformVersion=11, serial=1675148904345), owningKey=DLBwBwhcv7GZJhCqzi9UMdUp2ph3eG3qdpCkGs5A26jqX6 {}
[INFO ] 2023-01-31T07:08:25,516Z [Test worker] network.PersistentNetworkMapCache. - Previous node was identical to incoming one - doing nothing {}
[INFO ] 2023-01-31T07:08:25,532Z [Test worker] cordapp.JarScanningCordappLoader. - Looking for CorDapps in [build/mock-network/20230131-070800.711-E3B87C8B56CFEBDE/nodes/1/cordapps] {}
[INFO ] 2023-01-31T07:08:25,533Z [Test worker] cordapp.JarScanningCordappLoader. - Loading CorDapps from RestrictedURL(url=file:/Users/peter.li/Desktop/obligation-cordapp/workflows/build/mock-network/20230131-070800.711-E3B87C8B56CFEBDE/nodes/1/cordapps/accounts-contracts-1.0.jar, rootPackageName=null), RestrictedURL(url=file:/Users/peter.li/Desktop/obligation-cordapp/workflows/build/mock-network/20230131-070800.711-E3B87C8B56CFEBDE/nodes/1/cordapps/accounts-workflows-1.0.jar, rootPackageName=null), RestrictedURL(url=file:/Users/peter.li/Desktop/obligation-cordapp/workflows/build/mock-network/20230131-070800.711-E3B87C8B56CFEBDE/nodes/1/cordapps/corda-finance-contracts-4.9.jar, rootPackageName=null), RestrictedURL(url=file:/Users/peter.li/Desktop/obligation-cordapp/workflows/build/mock-network/20230131-070800.711-E3B87C8B56CFEBDE/nodes/1/cordapps/contracts-1.0.jar, rootPackageName=null), RestrictedURL(url=file:/Users/peter.li/Desktop/obligation-cordapp/workflows/build/mock-network/20230131-070800.711-E3B87C8B56CFEBDE/nodes/1/cordapps/workflows-1.0.jar, rootPackageName=null) {}
[INFO ] 2023-01-31T07:08:25,533Z [Test worker] cordapp.JarScanningCordappLoader. - Scanning CorDapp in file:/Users/peter.li/Desktop/obligation-cordapp/workflows/build/mock-network/20230131-070800.711-E3B87C8B56CFEBDE/nodes/1/cordapps/accounts-contracts-1.0.jar {}
[INFO ] 2023-01-31T07:08:25,559Z [Test worker] cordapp.JarScanningCordappLoader. - Scanning CorDapp in file:/Users/peter.li/Desktop/obligation-cordapp/workflows/build/mock-network/20230131-070800.711-E3B87C8B56CFEBDE/nodes/1/cordapps/accounts-workflows-1.0.jar {}
[INFO ] 2023-01-31T07:08:25,569Z [Test worker] cordapp.JarScanningCordappLoader. - Scanning CorDapp in file:/Users/peter.li/Desktop/obligation-cordapp/workflows/build/mock-network/20230131-070800.711-E3B87C8B56CFEBDE/nodes/1/cordapps/corda-finance-contracts-4.9.jar {}
[INFO ] 2023-01-31T07:08:25,584Z [Test worker] cordapp.JarScanningCordappLoader. - Scanning CorDapp in file:/Users/peter.li/Desktop/obligation-cordapp/workflows/build/mock-network/20230131-070800.711-E3B87C8B56CFEBDE/nodes/1/cordapps/contracts-1.0.jar {}
[INFO ] 2023-01-31T07:08:25,591Z [Test worker] cordapp.JarScanningCordappLoader. - Scanning CorDapp in file:/Users/peter.li/Desktop/obligation-cordapp/workflows/build/mock-network/20230131-070800.711-E3B87C8B56CFEBDE/nodes/1/cordapps/workflows-1.0.jar {}
[INFO ] 2023-01-31T07:08:25,624Z [Test worker] internal.InternalMockNetwork$MockNode. - MessagingService active change to: false {}
[INFO ] 2023-01-31T07:08:25,625Z [Test worker] internal.InternalMockNetwork$MockNode. - Flow external operation executor has a max of 2 threads {}
[INFO ] 2023-01-31T07:08:25,627Z [Test worker] internal.InternalMockNetwork$MockNode. - Node starting up ... {}
[INFO ] 2023-01-31T07:08:25,675Z [Test worker] internal.KeyStoreHandler. - Loaded trusted root certificate: DL7fwxLm5xbiMD8adUuYTsPZHAict46Ng4w6RNcySt5vAw, alias: cordarootca {}
[INFO ] 2023-01-31T07:08:25,675Z [Test worker] internal.KeyStoreHandler. - Loaded node identity key: DL2nyr9epsLpUHcUFi5W2ZPettYBzomyh1Lp2draiFbGeu, alias: identity-private-key {}
[INFO ] 2023-01-31T07:08:25,682Z [Test worker] internal.NodeFlowManager. - Registered com.r3.corda.lib.accounts.workflows.flows.ShareStateAndSyncAccounts to initiate com.r3.corda.lib.accounts.workflows.flows.ReceiveStateAndSyncAccounts (version 1) {}
[INFO ] 2023-01-31T07:08:25,682Z [Test worker] internal.NodeFlowManager. - Registered com.r3.corda.lib.accounts.workflows.flows.ShareStateWithAccount to initiate com.r3.corda.lib.accounts.workflows.flows.ReceiveStateForAccount (version 1) {}
[INFO ] 2023-01-31T07:08:25,682Z [Test worker] internal.NodeFlowManager. - Registered com.r3.corda.lib.accounts.workflows.flows.RequestAccountInfo to initiate com.r3.corda.lib.accounts.workflows.flows.RequestAccountInfoHandler (version 1) {}
[INFO ] 2023-01-31T07:08:25,682Z [Test worker] internal.NodeFlowManager. - Registered com.r3.corda.lib.accounts.workflows.flows.RequestKeyForAccount to initiate com.r3.corda.lib.accounts.workflows.flows.SendKeyForAccount (version 1) {}
[INFO ] 2023-01-31T07:08:25,682Z [Test worker] internal.NodeFlowManager. - Registered com.r3.corda.lib.accounts.workflows.flows.ShareAccountInfo to initiate com.r3.corda.lib.accounts.workflows.flows.ShareAccountInfoHandler (version 1) {}
[INFO ] 2023-01-31T07:08:25,682Z [Test worker] internal.NodeFlowManager. - Registered net.corda.samples.obligation.flows.IOUIssueFlow to initiate net.corda.samples.obligation.flows.IOUIssueFlowResponder (version 1) {}
[INFO ] 2023-01-31T07:08:25,682Z [Test worker] internal.NodeFlowManager. - Registered net.corda.samples.obligation.flows.IOUSettleFlow to initiate net.corda.samples.obligation.flows.IOUSettleFlowResponder (version 1) {}
[INFO ] 2023-01-31T07:08:25,682Z [Test worker] internal.NodeFlowManager. - Registered net.corda.samples.obligation.flows.IOUTransferFlow to initiate net.corda.samples.obligation.flows.IOUTransferFlowResponder (version 1) {}
[INFO ] 2023-01-31T07:08:25,683Z [Test worker] internal.NodeFlowManager. - Registered net.corda.samples.obligation.flows.SyncKey to initiate net.corda.samples.obligation.flows.SyncKeyResponder (version 1) {}
[INFO ] 2023-01-31T07:08:25,688Z [Test worker] internal.InternalMockNetwork$MockNode. - Loaded network parameters: NetworkParameters {
      minimumPlatformVersion=4
      notaries=[NotaryInfo(identity=O=Notary, L=London, C=GB, validating=true)]
      maxMessageSize=10485760
      maxTransactionSize=524288000
      whitelistedContractImplementations {
        
      }
      eventHorizon=PT720H
      packageOwnership {
        
      }
      modifiedTime=2023-01-31T07:08:00.429Z
      epoch=1
  } {}
[INFO ] 2023-01-31T07:08:26,464Z [Test worker] internal.InternalMockNetwork$MockNode. - Connected to H2 database. {}
[INFO ] 2023-01-31T07:08:26,466Z [Test worker] persistence.HibernateConfiguration. - Init HibernateConfiguration for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1), AccountsContractsSchemaV1(name=com.r3.corda.lib.accounts.contracts.internal.schemas.AccountsContractsSchema, version=1), AccountsWorkflowsSchemaV1(name=com.r3.corda.lib.accounts.workflows.internal.schemas.AccountsWorkflowsSchema, version=1), CashSchemaV1(name=net.corda.finance.schemas.CashSchema, version=1), CommercialPaperSchemaV1(name=net.corda.finance.schemas.CommercialPaperSchema, version=1)] {}
[INFO ] 2023-01-31T07:08:26,466Z [Test worker] factory.BaseSessionFactoryFactory. - Creating session factory for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1), AccountsContractsSchemaV1(name=com.r3.corda.lib.accounts.contracts.internal.schemas.AccountsContractsSchema, version=1), AccountsWorkflowsSchemaV1(name=com.r3.corda.lib.accounts.workflows.internal.schemas.AccountsWorkflowsSchema, version=1), CashSchemaV1(name=net.corda.finance.schemas.CashSchema, version=1), CommercialPaperSchemaV1(name=net.corda.finance.schemas.CommercialPaperSchema, version=1)] {}
[INFO ] 2023-01-31T07:08:26,625Z [Test worker] factory.BaseSessionFactoryFactory. - Created session factory for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1), AccountsContractsSchemaV1(name=com.r3.corda.lib.accounts.contracts.internal.schemas.AccountsContractsSchema, version=1), AccountsWorkflowsSchemaV1(name=com.r3.corda.lib.accounts.workflows.internal.schemas.AccountsWorkflowsSchema, version=1), CashSchemaV1(name=net.corda.finance.schemas.CashSchema, version=1), CommercialPaperSchemaV1(name=net.corda.finance.schemas.CommercialPaperSchema, version=1)] {}
[INFO ] 2023-01-31T07:08:26,629Z [Test worker] internal.InternalMockNetwork$MockNode. - Node-info has changed so submitting update. Old node-info was null {}
[INFO ] 2023-01-31T07:08:26,634Z [Test worker] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 1, L=London, C=GB], platformVersion=11, serial=1675148906629), owningKey=DL2nyr9epsLpUHcUFi5W2ZPettYBzomyh1Lp2draiFbGeu {}
[INFO ] 2023-01-31T07:08:26,634Z [Test worker] network.PersistentNetworkMapCache. - No previous node found for O=Mock Company 1, L=London, C=GB {}
[INFO ] 2023-01-31T07:08:26,642Z [Test worker] internal.InternalMockNetwork$MockNode. - New node-info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 1, L=London, C=GB], platformVersion=11, serial=1675148906629) {}
[INFO ] 2023-01-31T07:08:26,650Z [Test worker] network.NetworkMapUpdater. - Auto-accept enabled for network parameter changes which modify only: [epoch, modifiedTime, packageOwnership, whitelistedContractImplementations] {}
[INFO ] 2023-01-31T07:08:26,651Z [Test worker] internal.MockNodeMessagingService. - Status change to true {}
[INFO ] 2023-01-31T07:08:26,651Z [Test worker] internal.InternalMockNetwork$MockNode. - MessagingService active change to: true {}
[INFO ] 2023-01-31T07:08:26,660Z [MockNode-2-2] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 1, L=London, C=GB], platformVersion=11, serial=1675148906629), owningKey=DL2nyr9epsLpUHcUFi5W2ZPettYBzomyh1Lp2draiFbGeu {}
[INFO ] 2023-01-31T07:08:26,660Z [MockNode-2-2] network.PersistentNetworkMapCache. - Previous node was identical to incoming one - doing nothing {}
[INFO ] 2023-01-31T07:08:26,684Z [Test worker] persistence.NodeAttachmentService. - Stored new attachment: id=D370FD972C7E07CE73F4F9B7886D226807F6B16C4EE287398B9C69384109DC14 uploader=app filename=Accounts SDK - States and Contracts {}
[INFO ] 2023-01-31T07:08:26,734Z [Test worker] persistence.NodeAttachmentService. - Stored new attachment: id=BD0C932EAF8B1FE96DCBBF275B914BCD776D14EDC8F97DCEBF7E15DA09C606AE uploader=app filename=Corda Finance Demo {}
[INFO ] 2023-01-31T07:08:26,753Z [Test worker] persistence.NodeAttachmentService. - Stored new attachment: id=8D797B45F40704FA4FD70921F5BC6E2D7B34450D345CE6788D2A87859EF63BD8 uploader=app filename=Obligation Contracts {}
[INFO ] 2023-01-31T07:08:26,757Z [Test worker] internal.InternalMockNetwork$MockNode. - Installed com.r3.corda.lib.accounts.workflows.services.KeyManagementBackedAccountService Corda service {}
[INFO ] 2023-01-31T07:08:26,786Z [Test worker] statemachine.SingleThreadedStateMachineManager. - Node ready, info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 1, L=London, C=GB], platformVersion=11, serial=1675148906629) {}
[INFO ] 2023-01-31T07:08:26,788Z [Test worker] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Notary, L=London, C=GB], platformVersion=11, serial=1675148904345), owningKey=DLBwBwhcv7GZJhCqzi9UMdUp2ph3eG3qdpCkGs5A26jqX6 {}
[INFO ] 2023-01-31T07:08:26,788Z [Test worker] network.PersistentNetworkMapCache. - No previous node found for O=Notary, L=London, C=GB {}
[INFO ] 2023-01-31T07:08:26,800Z [Test worker] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 1, L=London, C=GB], platformVersion=11, serial=1675148906629), owningKey=DL2nyr9epsLpUHcUFi5W2ZPettYBzomyh1Lp2draiFbGeu {}
[INFO ] 2023-01-31T07:08:26,800Z [Test worker] network.PersistentNetworkMapCache. - No previous node found for O=Mock Company 1, L=London, C=GB {}
[INFO ] 2023-01-31T07:08:26,810Z [Test worker] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 1, L=London, C=GB], platformVersion=11, serial=1675148906629), owningKey=DL2nyr9epsLpUHcUFi5W2ZPettYBzomyh1Lp2draiFbGeu {}
[INFO ] 2023-01-31T07:08:26,810Z [Test worker] network.PersistentNetworkMapCache. - Previous node was identical to incoming one - doing nothing {}
[INFO ] 2023-01-31T07:08:26,810Z [Test worker] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 1, L=London, C=GB], platformVersion=11, serial=1675148906629), owningKey=DL2nyr9epsLpUHcUFi5W2ZPettYBzomyh1Lp2draiFbGeu {}
[INFO ] 2023-01-31T07:08:26,810Z [Test worker] network.PersistentNetworkMapCache. - Previous node was identical to incoming one - doing nothing {}
[INFO ] 2023-01-31T07:08:26,823Z [Test worker] cordapp.JarScanningCordappLoader. - Looking for CorDapps in [build/mock-network/20230131-070800.711-E3B87C8B56CFEBDE/nodes/2/cordapps] {}
[INFO ] 2023-01-31T07:08:26,824Z [Test worker] cordapp.JarScanningCordappLoader. - Loading CorDapps from RestrictedURL(url=file:/Users/peter.li/Desktop/obligation-cordapp/workflows/build/mock-network/20230131-070800.711-E3B87C8B56CFEBDE/nodes/2/cordapps/accounts-contracts-1.0.jar, rootPackageName=null), RestrictedURL(url=file:/Users/peter.li/Desktop/obligation-cordapp/workflows/build/mock-network/20230131-070800.711-E3B87C8B56CFEBDE/nodes/2/cordapps/accounts-workflows-1.0.jar, rootPackageName=null), RestrictedURL(url=file:/Users/peter.li/Desktop/obligation-cordapp/workflows/build/mock-network/20230131-070800.711-E3B87C8B56CFEBDE/nodes/2/cordapps/corda-finance-contracts-4.9.jar, rootPackageName=null), RestrictedURL(url=file:/Users/peter.li/Desktop/obligation-cordapp/workflows/build/mock-network/20230131-070800.711-E3B87C8B56CFEBDE/nodes/2/cordapps/contracts-1.0.jar, rootPackageName=null), RestrictedURL(url=file:/Users/peter.li/Desktop/obligation-cordapp/workflows/build/mock-network/20230131-070800.711-E3B87C8B56CFEBDE/nodes/2/cordapps/workflows-1.0.jar, rootPackageName=null) {}
[INFO ] 2023-01-31T07:08:26,824Z [Test worker] cordapp.JarScanningCordappLoader. - Scanning CorDapp in file:/Users/peter.li/Desktop/obligation-cordapp/workflows/build/mock-network/20230131-070800.711-E3B87C8B56CFEBDE/nodes/2/cordapps/accounts-contracts-1.0.jar {}
[INFO ] 2023-01-31T07:08:26,848Z [Test worker] cordapp.JarScanningCordappLoader. - Scanning CorDapp in file:/Users/peter.li/Desktop/obligation-cordapp/workflows/build/mock-network/20230131-070800.711-E3B87C8B56CFEBDE/nodes/2/cordapps/accounts-workflows-1.0.jar {}
[INFO ] 2023-01-31T07:08:26,861Z [Test worker] cordapp.JarScanningCordappLoader. - Scanning CorDapp in file:/Users/peter.li/Desktop/obligation-cordapp/workflows/build/mock-network/20230131-070800.711-E3B87C8B56CFEBDE/nodes/2/cordapps/corda-finance-contracts-4.9.jar {}
[INFO ] 2023-01-31T07:08:26,872Z [Test worker] cordapp.JarScanningCordappLoader. - Scanning CorDapp in file:/Users/peter.li/Desktop/obligation-cordapp/workflows/build/mock-network/20230131-070800.711-E3B87C8B56CFEBDE/nodes/2/cordapps/contracts-1.0.jar {}
[INFO ] 2023-01-31T07:08:26,878Z [Test worker] cordapp.JarScanningCordappLoader. - Scanning CorDapp in file:/Users/peter.li/Desktop/obligation-cordapp/workflows/build/mock-network/20230131-070800.711-E3B87C8B56CFEBDE/nodes/2/cordapps/workflows-1.0.jar {}
[INFO ] 2023-01-31T07:08:26,904Z [Test worker] internal.InternalMockNetwork$MockNode. - MessagingService active change to: false {}
[INFO ] 2023-01-31T07:08:26,905Z [Test worker] internal.InternalMockNetwork$MockNode. - Flow external operation executor has a max of 2 threads {}
[INFO ] 2023-01-31T07:08:26,906Z [Test worker] internal.InternalMockNetwork$MockNode. - Node starting up ... {}
[INFO ] 2023-01-31T07:08:26,942Z [Test worker] internal.KeyStoreHandler. - Loaded trusted root certificate: DL7fwxLm5xbiMD8adUuYTsPZHAict46Ng4w6RNcySt5vAw, alias: cordarootca {}
[INFO ] 2023-01-31T07:08:26,943Z [Test worker] internal.KeyStoreHandler. - Loaded node identity key: DL4J7Sry2WwajWgiiev23uz4ZHU681rKVaRaWb4FYn73Z4, alias: identity-private-key {}
[INFO ] 2023-01-31T07:08:26,950Z [Test worker] internal.NodeFlowManager. - Registered com.r3.corda.lib.accounts.workflows.flows.ShareStateAndSyncAccounts to initiate com.r3.corda.lib.accounts.workflows.flows.ReceiveStateAndSyncAccounts (version 1) {}
[INFO ] 2023-01-31T07:08:26,950Z [Test worker] internal.NodeFlowManager. - Registered com.r3.corda.lib.accounts.workflows.flows.ShareStateWithAccount to initiate com.r3.corda.lib.accounts.workflows.flows.ReceiveStateForAccount (version 1) {}
[INFO ] 2023-01-31T07:08:26,950Z [Test worker] internal.NodeFlowManager. - Registered com.r3.corda.lib.accounts.workflows.flows.RequestAccountInfo to initiate com.r3.corda.lib.accounts.workflows.flows.RequestAccountInfoHandler (version 1) {}
[INFO ] 2023-01-31T07:08:26,950Z [Test worker] internal.NodeFlowManager. - Registered com.r3.corda.lib.accounts.workflows.flows.RequestKeyForAccount to initiate com.r3.corda.lib.accounts.workflows.flows.SendKeyForAccount (version 1) {}
[INFO ] 2023-01-31T07:08:26,950Z [Test worker] internal.NodeFlowManager. - Registered com.r3.corda.lib.accounts.workflows.flows.ShareAccountInfo to initiate com.r3.corda.lib.accounts.workflows.flows.ShareAccountInfoHandler (version 1) {}
[INFO ] 2023-01-31T07:08:26,950Z [Test worker] internal.NodeFlowManager. - Registered net.corda.samples.obligation.flows.IOUIssueFlow to initiate net.corda.samples.obligation.flows.IOUIssueFlowResponder (version 1) {}
[INFO ] 2023-01-31T07:08:26,950Z [Test worker] internal.NodeFlowManager. - Registered net.corda.samples.obligation.flows.IOUSettleFlow to initiate net.corda.samples.obligation.flows.IOUSettleFlowResponder (version 1) {}
[INFO ] 2023-01-31T07:08:26,950Z [Test worker] internal.NodeFlowManager. - Registered net.corda.samples.obligation.flows.IOUTransferFlow to initiate net.corda.samples.obligation.flows.IOUTransferFlowResponder (version 1) {}
[INFO ] 2023-01-31T07:08:26,950Z [Test worker] internal.NodeFlowManager. - Registered net.corda.samples.obligation.flows.SyncKey to initiate net.corda.samples.obligation.flows.SyncKeyResponder (version 1) {}
[INFO ] 2023-01-31T07:08:26,956Z [Test worker] internal.InternalMockNetwork$MockNode. - Loaded network parameters: NetworkParameters {
      minimumPlatformVersion=4
      notaries=[NotaryInfo(identity=O=Notary, L=London, C=GB, validating=true)]
      maxMessageSize=10485760
      maxTransactionSize=524288000
      whitelistedContractImplementations {
        
      }
      eventHorizon=PT720H
      packageOwnership {
        
      }
      modifiedTime=2023-01-31T07:08:00.429Z
      epoch=1
  } {}
[INFO ] 2023-01-31T07:08:27,684Z [Test worker] internal.InternalMockNetwork$MockNode. - Connected to H2 database. {}
[INFO ] 2023-01-31T07:08:27,685Z [Test worker] persistence.HibernateConfiguration. - Init HibernateConfiguration for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1), AccountsContractsSchemaV1(name=com.r3.corda.lib.accounts.contracts.internal.schemas.AccountsContractsSchema, version=1), AccountsWorkflowsSchemaV1(name=com.r3.corda.lib.accounts.workflows.internal.schemas.AccountsWorkflowsSchema, version=1), CashSchemaV1(name=net.corda.finance.schemas.CashSchema, version=1), CommercialPaperSchemaV1(name=net.corda.finance.schemas.CommercialPaperSchema, version=1)] {}
[INFO ] 2023-01-31T07:08:27,685Z [Test worker] factory.BaseSessionFactoryFactory. - Creating session factory for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1), AccountsContractsSchemaV1(name=com.r3.corda.lib.accounts.contracts.internal.schemas.AccountsContractsSchema, version=1), AccountsWorkflowsSchemaV1(name=com.r3.corda.lib.accounts.workflows.internal.schemas.AccountsWorkflowsSchema, version=1), CashSchemaV1(name=net.corda.finance.schemas.CashSchema, version=1), CommercialPaperSchemaV1(name=net.corda.finance.schemas.CommercialPaperSchema, version=1)] {}
[INFO ] 2023-01-31T07:08:27,846Z [Test worker] factory.BaseSessionFactoryFactory. - Created session factory for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1), AccountsContractsSchemaV1(name=com.r3.corda.lib.accounts.contracts.internal.schemas.AccountsContractsSchema, version=1), AccountsWorkflowsSchemaV1(name=com.r3.corda.lib.accounts.workflows.internal.schemas.AccountsWorkflowsSchema, version=1), CashSchemaV1(name=net.corda.finance.schemas.CashSchema, version=1), CommercialPaperSchemaV1(name=net.corda.finance.schemas.CommercialPaperSchema, version=1)] {}
[INFO ] 2023-01-31T07:08:27,850Z [Test worker] internal.InternalMockNetwork$MockNode. - Node-info has changed so submitting update. Old node-info was null {}
[INFO ] 2023-01-31T07:08:27,853Z [Test worker] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 2, L=London, C=GB], platformVersion=11, serial=1675148907850), owningKey=DL4J7Sry2WwajWgiiev23uz4ZHU681rKVaRaWb4FYn73Z4 {}
[INFO ] 2023-01-31T07:08:27,853Z [Test worker] network.PersistentNetworkMapCache. - No previous node found for O=Mock Company 2, L=London, C=GB {}
[INFO ] 2023-01-31T07:08:27,860Z [Test worker] internal.InternalMockNetwork$MockNode. - New node-info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 2, L=London, C=GB], platformVersion=11, serial=1675148907850) {}
[INFO ] 2023-01-31T07:08:27,867Z [Test worker] network.NetworkMapUpdater. - Auto-accept enabled for network parameter changes which modify only: [epoch, modifiedTime, packageOwnership, whitelistedContractImplementations] {}
[INFO ] 2023-01-31T07:08:27,867Z [Test worker] internal.MockNodeMessagingService. - Status change to true {}
[INFO ] 2023-01-31T07:08:27,867Z [Test worker] internal.InternalMockNetwork$MockNode. - MessagingService active change to: true {}
[INFO ] 2023-01-31T07:08:27,877Z [MockNode-3-2] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 2, L=London, C=GB], platformVersion=11, serial=1675148907850), owningKey=DL4J7Sry2WwajWgiiev23uz4ZHU681rKVaRaWb4FYn73Z4 {}
[INFO ] 2023-01-31T07:08:27,877Z [MockNode-3-2] network.PersistentNetworkMapCache. - Previous node was identical to incoming one - doing nothing {}
[INFO ] 2023-01-31T07:08:27,909Z [Test worker] persistence.NodeAttachmentService. - Stored new attachment: id=D370FD972C7E07CE73F4F9B7886D226807F6B16C4EE287398B9C69384109DC14 uploader=app filename=Accounts SDK - States and Contracts {}
[INFO ] 2023-01-31T07:08:27,968Z [Test worker] persistence.NodeAttachmentService. - Stored new attachment: id=BD0C932EAF8B1FE96DCBBF275B914BCD776D14EDC8F97DCEBF7E15DA09C606AE uploader=app filename=Corda Finance Demo {}
[INFO ] 2023-01-31T07:08:27,997Z [Test worker] persistence.NodeAttachmentService. - Stored new attachment: id=8D797B45F40704FA4FD70921F5BC6E2D7B34450D345CE6788D2A87859EF63BD8 uploader=app filename=Obligation Contracts {}
[INFO ] 2023-01-31T07:08:28,001Z [Test worker] internal.InternalMockNetwork$MockNode. - Installed com.r3.corda.lib.accounts.workflows.services.KeyManagementBackedAccountService Corda service {}
[INFO ] 2023-01-31T07:08:28,022Z [Test worker] statemachine.SingleThreadedStateMachineManager. - Node ready, info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 2, L=London, C=GB], platformVersion=11, serial=1675148907850) {}
[INFO ] 2023-01-31T07:08:28,025Z [Test worker] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Notary, L=London, C=GB], platformVersion=11, serial=1675148904345), owningKey=DLBwBwhcv7GZJhCqzi9UMdUp2ph3eG3qdpCkGs5A26jqX6 {}
[INFO ] 2023-01-31T07:08:28,025Z [Test worker] network.PersistentNetworkMapCache. - No previous node found for O=Notary, L=London, C=GB {}
[INFO ] 2023-01-31T07:08:28,035Z [Test worker] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 2, L=London, C=GB], platformVersion=11, serial=1675148907850), owningKey=DL4J7Sry2WwajWgiiev23uz4ZHU681rKVaRaWb4FYn73Z4 {}
[INFO ] 2023-01-31T07:08:28,035Z [Test worker] network.PersistentNetworkMapCache. - No previous node found for O=Mock Company 2, L=London, C=GB {}
[INFO ] 2023-01-31T07:08:28,051Z [Test worker] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 1, L=London, C=GB], platformVersion=11, serial=1675148906629), owningKey=DL2nyr9epsLpUHcUFi5W2ZPettYBzomyh1Lp2draiFbGeu {}
[INFO ] 2023-01-31T07:08:28,051Z [Test worker] network.PersistentNetworkMapCache. - No previous node found for O=Mock Company 1, L=London, C=GB {}
[INFO ] 2023-01-31T07:08:28,061Z [Test worker] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 2, L=London, C=GB], platformVersion=11, serial=1675148907850), owningKey=DL4J7Sry2WwajWgiiev23uz4ZHU681rKVaRaWb4FYn73Z4 {}
[INFO ] 2023-01-31T07:08:28,061Z [Test worker] network.PersistentNetworkMapCache. - No previous node found for O=Mock Company 2, L=London, C=GB {}
[INFO ] 2023-01-31T07:08:28,069Z [Test worker] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 2, L=London, C=GB], platformVersion=11, serial=1675148907850), owningKey=DL4J7Sry2WwajWgiiev23uz4ZHU681rKVaRaWb4FYn73Z4 {}
[INFO ] 2023-01-31T07:08:28,069Z [Test worker] network.PersistentNetworkMapCache. - Previous node was identical to incoming one - doing nothing {}
[INFO ] 2023-01-31T07:08:28,070Z [Test worker] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 2, L=London, C=GB], platformVersion=11, serial=1675148907850), owningKey=DL4J7Sry2WwajWgiiev23uz4ZHU681rKVaRaWb4FYn73Z4 {}
[INFO ] 2023-01-31T07:08:28,070Z [Test worker] network.PersistentNetworkMapCache. - Previous node was identical to incoming one - doing nothing {}
[INFO ] 2023-01-31T07:08:28,082Z [Test worker] cordapp.JarScanningCordappLoader. - Looking for CorDapps in [build/mock-network/20230131-070800.711-E3B87C8B56CFEBDE/nodes/3/cordapps] {}
[INFO ] 2023-01-31T07:08:28,083Z [Test worker] cordapp.JarScanningCordappLoader. - Loading CorDapps from RestrictedURL(url=file:/Users/peter.li/Desktop/obligation-cordapp/workflows/build/mock-network/20230131-070800.711-E3B87C8B56CFEBDE/nodes/3/cordapps/accounts-contracts-1.0.jar, rootPackageName=null), RestrictedURL(url=file:/Users/peter.li/Desktop/obligation-cordapp/workflows/build/mock-network/20230131-070800.711-E3B87C8B56CFEBDE/nodes/3/cordapps/accounts-workflows-1.0.jar, rootPackageName=null), RestrictedURL(url=file:/Users/peter.li/Desktop/obligation-cordapp/workflows/build/mock-network/20230131-070800.711-E3B87C8B56CFEBDE/nodes/3/cordapps/corda-finance-contracts-4.9.jar, rootPackageName=null), RestrictedURL(url=file:/Users/peter.li/Desktop/obligation-cordapp/workflows/build/mock-network/20230131-070800.711-E3B87C8B56CFEBDE/nodes/3/cordapps/contracts-1.0.jar, rootPackageName=null), RestrictedURL(url=file:/Users/peter.li/Desktop/obligation-cordapp/workflows/build/mock-network/20230131-070800.711-E3B87C8B56CFEBDE/nodes/3/cordapps/workflows-1.0.jar, rootPackageName=null) {}
[INFO ] 2023-01-31T07:08:28,084Z [Test worker] cordapp.JarScanningCordappLoader. - Scanning CorDapp in file:/Users/peter.li/Desktop/obligation-cordapp/workflows/build/mock-network/20230131-070800.711-E3B87C8B56CFEBDE/nodes/3/cordapps/accounts-contracts-1.0.jar {}
[INFO ] 2023-01-31T07:08:28,110Z [Test worker] cordapp.JarScanningCordappLoader. - Scanning CorDapp in file:/Users/peter.li/Desktop/obligation-cordapp/workflows/build/mock-network/20230131-070800.711-E3B87C8B56CFEBDE/nodes/3/cordapps/accounts-workflows-1.0.jar {}
[INFO ] 2023-01-31T07:08:28,120Z [Test worker] cordapp.JarScanningCordappLoader. - Scanning CorDapp in file:/Users/peter.li/Desktop/obligation-cordapp/workflows/build/mock-network/20230131-070800.711-E3B87C8B56CFEBDE/nodes/3/cordapps/corda-finance-contracts-4.9.jar {}
[INFO ] 2023-01-31T07:08:28,132Z [Test worker] cordapp.JarScanningCordappLoader. - Scanning CorDapp in file:/Users/peter.li/Desktop/obligation-cordapp/workflows/build/mock-network/20230131-070800.711-E3B87C8B56CFEBDE/nodes/3/cordapps/contracts-1.0.jar {}
[INFO ] 2023-01-31T07:08:28,138Z [Test worker] cordapp.JarScanningCordappLoader. - Scanning CorDapp in file:/Users/peter.li/Desktop/obligation-cordapp/workflows/build/mock-network/20230131-070800.711-E3B87C8B56CFEBDE/nodes/3/cordapps/workflows-1.0.jar {}
[INFO ] 2023-01-31T07:08:28,164Z [Test worker] internal.InternalMockNetwork$MockNode. - MessagingService active change to: false {}
[INFO ] 2023-01-31T07:08:28,165Z [Test worker] internal.InternalMockNetwork$MockNode. - Flow external operation executor has a max of 2 threads {}
[INFO ] 2023-01-31T07:08:28,167Z [Test worker] internal.InternalMockNetwork$MockNode. - Node starting up ... {}
[INFO ] 2023-01-31T07:08:28,211Z [Test worker] internal.KeyStoreHandler. - Loaded trusted root certificate: DL7fwxLm5xbiMD8adUuYTsPZHAict46Ng4w6RNcySt5vAw, alias: cordarootca {}
[INFO ] 2023-01-31T07:08:28,211Z [Test worker] internal.KeyStoreHandler. - Loaded node identity key: DLDNkgyjvHaAygT5NQMFNrcjidGiiGpNFJWmd5hw8LCM3P, alias: identity-private-key {}
[INFO ] 2023-01-31T07:08:28,218Z [Test worker] internal.NodeFlowManager. - Registered com.r3.corda.lib.accounts.workflows.flows.ShareStateAndSyncAccounts to initiate com.r3.corda.lib.accounts.workflows.flows.ReceiveStateAndSyncAccounts (version 1) {}
[INFO ] 2023-01-31T07:08:28,218Z [Test worker] internal.NodeFlowManager. - Registered com.r3.corda.lib.accounts.workflows.flows.ShareStateWithAccount to initiate com.r3.corda.lib.accounts.workflows.flows.ReceiveStateForAccount (version 1) {}
[INFO ] 2023-01-31T07:08:28,218Z [Test worker] internal.NodeFlowManager. - Registered com.r3.corda.lib.accounts.workflows.flows.RequestAccountInfo to initiate com.r3.corda.lib.accounts.workflows.flows.RequestAccountInfoHandler (version 1) {}
[INFO ] 2023-01-31T07:08:28,218Z [Test worker] internal.NodeFlowManager. - Registered com.r3.corda.lib.accounts.workflows.flows.RequestKeyForAccount to initiate com.r3.corda.lib.accounts.workflows.flows.SendKeyForAccount (version 1) {}
[INFO ] 2023-01-31T07:08:28,218Z [Test worker] internal.NodeFlowManager. - Registered com.r3.corda.lib.accounts.workflows.flows.ShareAccountInfo to initiate com.r3.corda.lib.accounts.workflows.flows.ShareAccountInfoHandler (version 1) {}
[INFO ] 2023-01-31T07:08:28,219Z [Test worker] internal.NodeFlowManager. - Registered net.corda.samples.obligation.flows.IOUIssueFlow to initiate net.corda.samples.obligation.flows.IOUIssueFlowResponder (version 1) {}
[INFO ] 2023-01-31T07:08:28,219Z [Test worker] internal.NodeFlowManager. - Registered net.corda.samples.obligation.flows.IOUSettleFlow to initiate net.corda.samples.obligation.flows.IOUSettleFlowResponder (version 1) {}
[INFO ] 2023-01-31T07:08:28,219Z [Test worker] internal.NodeFlowManager. - Registered net.corda.samples.obligation.flows.IOUTransferFlow to initiate net.corda.samples.obligation.flows.IOUTransferFlowResponder (version 1) {}
[INFO ] 2023-01-31T07:08:28,219Z [Test worker] internal.NodeFlowManager. - Registered net.corda.samples.obligation.flows.SyncKey to initiate net.corda.samples.obligation.flows.SyncKeyResponder (version 1) {}
[INFO ] 2023-01-31T07:08:28,224Z [Test worker] internal.InternalMockNetwork$MockNode. - Loaded network parameters: NetworkParameters {
      minimumPlatformVersion=4
      notaries=[NotaryInfo(identity=O=Notary, L=London, C=GB, validating=true)]
      maxMessageSize=10485760
      maxTransactionSize=524288000
      whitelistedContractImplementations {
        
      }
      eventHorizon=PT720H
      packageOwnership {
        
      }
      modifiedTime=2023-01-31T07:08:00.429Z
      epoch=1
  } {}
[INFO ] 2023-01-31T07:08:28,806Z [Test worker] internal.InternalMockNetwork$MockNode. - Connected to H2 database. {}
[INFO ] 2023-01-31T07:08:28,807Z [Test worker] persistence.HibernateConfiguration. - Init HibernateConfiguration for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1), AccountsContractsSchemaV1(name=com.r3.corda.lib.accounts.contracts.internal.schemas.AccountsContractsSchema, version=1), AccountsWorkflowsSchemaV1(name=com.r3.corda.lib.accounts.workflows.internal.schemas.AccountsWorkflowsSchema, version=1), CashSchemaV1(name=net.corda.finance.schemas.CashSchema, version=1), CommercialPaperSchemaV1(name=net.corda.finance.schemas.CommercialPaperSchema, version=1)] {}
[INFO ] 2023-01-31T07:08:28,807Z [Test worker] factory.BaseSessionFactoryFactory. - Creating session factory for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1), AccountsContractsSchemaV1(name=com.r3.corda.lib.accounts.contracts.internal.schemas.AccountsContractsSchema, version=1), AccountsWorkflowsSchemaV1(name=com.r3.corda.lib.accounts.workflows.internal.schemas.AccountsWorkflowsSchema, version=1), CashSchemaV1(name=net.corda.finance.schemas.CashSchema, version=1), CommercialPaperSchemaV1(name=net.corda.finance.schemas.CommercialPaperSchema, version=1)] {}
[INFO ] 2023-01-31T07:08:28,950Z [Test worker] factory.BaseSessionFactoryFactory. - Created session factory for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1), AccountsContractsSchemaV1(name=com.r3.corda.lib.accounts.contracts.internal.schemas.AccountsContractsSchema, version=1), AccountsWorkflowsSchemaV1(name=com.r3.corda.lib.accounts.workflows.internal.schemas.AccountsWorkflowsSchema, version=1), CashSchemaV1(name=net.corda.finance.schemas.CashSchema, version=1), CommercialPaperSchemaV1(name=net.corda.finance.schemas.CommercialPaperSchema, version=1)] {}
[INFO ] 2023-01-31T07:08:28,957Z [Test worker] internal.InternalMockNetwork$MockNode. - Node-info has changed so submitting update. Old node-info was null {}
[INFO ] 2023-01-31T07:08:28,961Z [Test worker] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 3, L=London, C=GB], platformVersion=11, serial=1675148908957), owningKey=DLDNkgyjvHaAygT5NQMFNrcjidGiiGpNFJWmd5hw8LCM3P {}
[INFO ] 2023-01-31T07:08:28,961Z [Test worker] network.PersistentNetworkMapCache. - No previous node found for O=Mock Company 3, L=London, C=GB {}
[INFO ] 2023-01-31T07:08:28,971Z [Test worker] internal.InternalMockNetwork$MockNode. - New node-info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 3, L=London, C=GB], platformVersion=11, serial=1675148908957) {}
[INFO ] 2023-01-31T07:08:28,978Z [Test worker] network.NetworkMapUpdater. - Auto-accept enabled for network parameter changes which modify only: [epoch, modifiedTime, packageOwnership, whitelistedContractImplementations] {}
[INFO ] 2023-01-31T07:08:28,979Z [Test worker] internal.MockNodeMessagingService. - Status change to true {}
[INFO ] 2023-01-31T07:08:28,979Z [Test worker] internal.InternalMockNetwork$MockNode. - MessagingService active change to: true {}
[INFO ] 2023-01-31T07:08:28,991Z [MockNode-4-2] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 3, L=London, C=GB], platformVersion=11, serial=1675148908957), owningKey=DLDNkgyjvHaAygT5NQMFNrcjidGiiGpNFJWmd5hw8LCM3P {}
[INFO ] 2023-01-31T07:08:28,991Z [MockNode-4-2] network.PersistentNetworkMapCache. - Previous node was identical to incoming one - doing nothing {}
[INFO ] 2023-01-31T07:08:29,016Z [Test worker] persistence.NodeAttachmentService. - Stored new attachment: id=D370FD972C7E07CE73F4F9B7886D226807F6B16C4EE287398B9C69384109DC14 uploader=app filename=Accounts SDK - States and Contracts {}
[INFO ] 2023-01-31T07:08:29,051Z [Test worker] persistence.NodeAttachmentService. - Stored new attachment: id=BD0C932EAF8B1FE96DCBBF275B914BCD776D14EDC8F97DCEBF7E15DA09C606AE uploader=app filename=Corda Finance Demo {}
[INFO ] 2023-01-31T07:08:29,063Z [Test worker] persistence.NodeAttachmentService. - Stored new attachment: id=8D797B45F40704FA4FD70921F5BC6E2D7B34450D345CE6788D2A87859EF63BD8 uploader=app filename=Obligation Contracts {}
[INFO ] 2023-01-31T07:08:29,065Z [Test worker] internal.InternalMockNetwork$MockNode. - Installed com.r3.corda.lib.accounts.workflows.services.KeyManagementBackedAccountService Corda service {}
[INFO ] 2023-01-31T07:08:29,083Z [Test worker] statemachine.SingleThreadedStateMachineManager. - Node ready, info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 3, L=London, C=GB], platformVersion=11, serial=1675148908957) {}
[INFO ] 2023-01-31T07:08:29,085Z [Test worker] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Notary, L=London, C=GB], platformVersion=11, serial=1675148904345), owningKey=DLBwBwhcv7GZJhCqzi9UMdUp2ph3eG3qdpCkGs5A26jqX6 {}
[INFO ] 2023-01-31T07:08:29,085Z [Test worker] network.PersistentNetworkMapCache. - No previous node found for O=Notary, L=London, C=GB {}
[INFO ] 2023-01-31T07:08:29,094Z [Test worker] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 3, L=London, C=GB], platformVersion=11, serial=1675148908957), owningKey=DLDNkgyjvHaAygT5NQMFNrcjidGiiGpNFJWmd5hw8LCM3P {}
[INFO ] 2023-01-31T07:08:29,094Z [Test worker] network.PersistentNetworkMapCache. - No previous node found for O=Mock Company 3, L=London, C=GB {}
[INFO ] 2023-01-31T07:08:29,113Z [Test worker] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 1, L=London, C=GB], platformVersion=11, serial=1675148906629), owningKey=DL2nyr9epsLpUHcUFi5W2ZPettYBzomyh1Lp2draiFbGeu {}
[INFO ] 2023-01-31T07:08:29,113Z [Test worker] network.PersistentNetworkMapCache. - No previous node found for O=Mock Company 1, L=London, C=GB {}
[INFO ] 2023-01-31T07:08:29,124Z [Test worker] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 3, L=London, C=GB], platformVersion=11, serial=1675148908957), owningKey=DLDNkgyjvHaAygT5NQMFNrcjidGiiGpNFJWmd5hw8LCM3P {}
[INFO ] 2023-01-31T07:08:29,124Z [Test worker] network.PersistentNetworkMapCache. - No previous node found for O=Mock Company 3, L=London, C=GB {}
[INFO ] 2023-01-31T07:08:29,137Z [Test worker] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 2, L=London, C=GB], platformVersion=11, serial=1675148907850), owningKey=DL4J7Sry2WwajWgiiev23uz4ZHU681rKVaRaWb4FYn73Z4 {}
[INFO ] 2023-01-31T07:08:29,137Z [Test worker] network.PersistentNetworkMapCache. - No previous node found for O=Mock Company 2, L=London, C=GB {}
[INFO ] 2023-01-31T07:08:29,148Z [Test worker] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 3, L=London, C=GB], platformVersion=11, serial=1675148908957), owningKey=DLDNkgyjvHaAygT5NQMFNrcjidGiiGpNFJWmd5hw8LCM3P {}
[INFO ] 2023-01-31T07:08:29,148Z [Test worker] network.PersistentNetworkMapCache. - No previous node found for O=Mock Company 3, L=London, C=GB {}
[INFO ] 2023-01-31T07:08:29,158Z [Test worker] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 3, L=London, C=GB], platformVersion=11, serial=1675148908957), owningKey=DLDNkgyjvHaAygT5NQMFNrcjidGiiGpNFJWmd5hw8LCM3P {}
[INFO ] 2023-01-31T07:08:29,158Z [Test worker] network.PersistentNetworkMapCache. - Previous node was identical to incoming one - doing nothing {}
[INFO ] 2023-01-31T07:08:29,158Z [Test worker] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 3, L=London, C=GB], platformVersion=11, serial=1675148908957), owningKey=DLDNkgyjvHaAygT5NQMFNrcjidGiiGpNFJWmd5hw8LCM3P {}
[INFO ] 2023-01-31T07:08:29,158Z [Test worker] network.PersistentNetworkMapCache. - Previous node was identical to incoming one - doing nothing {}
[WARN ] 2023-01-31T07:08:29,160Z [Test worker] internal.NodeFlowManager. - Multiple flows are registered for InitiatingFlow: class net.corda.samples.obligation.flows.IOUIssueFlow, currently using: class net.corda.samples.obligation.flows.IOUIssueFlowResponder {}
[INFO ] 2023-01-31T07:08:29,160Z [Test worker] internal.NodeFlowManager. - Registered net.corda.samples.obligation.flows.IOUIssueFlow to initiate net.corda.samples.obligation.flows.IOUIssueFlowResponder (version 1) {}
[WARN ] 2023-01-31T07:08:29,163Z [Test worker] internal.NodeFlowManager. - Multiple flows are registered for InitiatingFlow: class net.corda.samples.obligation.flows.IOUIssueFlow, currently using: class net.corda.samples.obligation.flows.IOUIssueFlowResponder {}
[INFO ] 2023-01-31T07:08:29,163Z [Test worker] internal.NodeFlowManager. - Registered net.corda.samples.obligation.flows.IOUIssueFlow to initiate net.corda.samples.obligation.flows.IOUIssueFlowResponder (version 1) {}
[WARN ] 2023-01-31T07:08:29,164Z [Test worker] internal.NodeFlowManager. - Multiple flows are registered for InitiatingFlow: class net.corda.samples.obligation.flows.IOUIssueFlow, currently using: class net.corda.samples.obligation.flows.IOUIssueFlowResponder {}
[INFO ] 2023-01-31T07:08:29,164Z [Test worker] internal.NodeFlowManager. - Registered net.corda.samples.obligation.flows.IOUIssueFlow to initiate net.corda.samples.obligation.flows.IOUIssueFlowResponder (version 1) {}
[WARN ] 2023-01-31T07:08:29,164Z [Test worker] internal.NodeFlowManager. - Multiple flows are registered for InitiatingFlow: class net.corda.samples.obligation.flows.IOUSettleFlow, currently using: class net.corda.samples.obligation.flows.IOUSettleFlowResponder {}
[INFO ] 2023-01-31T07:08:29,164Z [Test worker] internal.NodeFlowManager. - Registered net.corda.samples.obligation.flows.IOUSettleFlow to initiate net.corda.samples.obligation.flows.IOUSettleFlowResponder (version 1) {}
[WARN ] 2023-01-31T07:08:29,164Z [Test worker] internal.NodeFlowManager. - Multiple flows are registered for InitiatingFlow: class net.corda.samples.obligation.flows.IOUSettleFlow, currently using: class net.corda.samples.obligation.flows.IOUSettleFlowResponder {}
[INFO ] 2023-01-31T07:08:29,164Z [Test worker] internal.NodeFlowManager. - Registered net.corda.samples.obligation.flows.IOUSettleFlow to initiate net.corda.samples.obligation.flows.IOUSettleFlowResponder (version 1) {}
[WARN ] 2023-01-31T07:08:29,164Z [Test worker] internal.NodeFlowManager. - Multiple flows are registered for InitiatingFlow: class net.corda.samples.obligation.flows.IOUSettleFlow, currently using: class net.corda.samples.obligation.flows.IOUSettleFlowResponder {}
[INFO ] 2023-01-31T07:08:29,164Z [Test worker] internal.NodeFlowManager. - Registered net.corda.samples.obligation.flows.IOUSettleFlow to initiate net.corda.samples.obligation.flows.IOUSettleFlowResponder (version 1) {}
[INFO ] 2023-01-31T07:08:30,058Z [Mock network] corda.flow. - No need to notarise this transaction. {actor_id=Only For Testing, actor_owning_identity=O=Mock Company 1, L=London, C=GB, actor_store_id=TEST, fiber-id=10000001, flow-id=7635190a-d9b8-4eba-b48d-42ffd73bc9ae, invocation_id=a4d781dc-e398-49b8-b0b4-a0dae216246f, invocation_timestamp=2023-01-31T07:08:29.194Z, origin=Only For Testing, session_id=a4d781dc-e398-49b8-b0b4-a0dae216246f, session_timestamp=2023-01-31T07:08:29.194Z, thread-id=854, tx_id=65CD0F31393E80992D51904FBE7624FFF80B3010D47D03E5C49B3BB1929FA624}
[INFO ] 2023-01-31T07:08:30,058Z [Mock network] corda.flow. - Recording transaction locally. {actor_id=Only For Testing, actor_owning_identity=O=Mock Company 1, L=London, C=GB, actor_store_id=TEST, fiber-id=10000001, flow-id=7635190a-d9b8-4eba-b48d-42ffd73bc9ae, invocation_id=a4d781dc-e398-49b8-b0b4-a0dae216246f, invocation_timestamp=2023-01-31T07:08:29.194Z, origin=Only For Testing, session_id=a4d781dc-e398-49b8-b0b4-a0dae216246f, session_timestamp=2023-01-31T07:08:29.194Z, thread-id=854, tx_id=65CD0F31393E80992D51904FBE7624FFF80B3010D47D03E5C49B3BB1929FA624}
[INFO ] 2023-01-31T07:08:30,163Z [Mock network] corda.flow. - Recorded transaction locally successfully. {actor_id=Only For Testing, actor_owning_identity=O=Mock Company 1, L=London, C=GB, actor_store_id=TEST, fiber-id=10000001, flow-id=7635190a-d9b8-4eba-b48d-42ffd73bc9ae, invocation_id=a4d781dc-e398-49b8-b0b4-a0dae216246f, invocation_timestamp=2023-01-31T07:08:29.194Z, origin=Only For Testing, session_id=a4d781dc-e398-49b8-b0b4-a0dae216246f, session_timestamp=2023-01-31T07:08:29.194Z, thread-id=854, tx_id=65CD0F31393E80992D51904FBE7624FFF80B3010D47D03E5C49B3BB1929FA624}
[INFO ] 2023-01-31T07:08:30,163Z [Mock network] corda.flow. - All parties received the transaction successfully. {actor_id=Only For Testing, actor_owning_identity=O=Mock Company 1, L=London, C=GB, actor_store_id=TEST, fiber-id=10000001, flow-id=7635190a-d9b8-4eba-b48d-42ffd73bc9ae, invocation_id=a4d781dc-e398-49b8-b0b4-a0dae216246f, invocation_timestamp=2023-01-31T07:08:29.194Z, origin=Only For Testing, session_id=a4d781dc-e398-49b8-b0b4-a0dae216246f, session_timestamp=2023-01-31T07:08:29.194Z, thread-id=854, tx_id=65CD0F31393E80992D51904FBE7624FFF80B3010D47D03E5C49B3BB1929FA624}
[INFO ] 2023-01-31T07:08:30,366Z [Mock network] corda.flow. - Received transaction acknowledgement request from party O=Mock Company 1, L=London, C=GB. {fiber-id=10000002, flow-id=e099e119-e8c7-4cbd-8f37-55cf77cb1498, invocation_id=7e6051f5-3397-4fe6-b66e-34e46a5f7e74, invocation_timestamp=2023-01-31T07:08:30.325Z, origin=O=Mock Company 1, L=London, C=GB, session_id=7e6051f5-3397-4fe6-b66e-34e46a5f7e74, session_timestamp=2023-01-31T07:08:30.325Z, thread-id=854, tx_id=65CD0F31393E80992D51904FBE7624FFF80B3010D47D03E5C49B3BB1929FA624}
[INFO ] 2023-01-31T07:08:30,448Z [Mock network] corda.flow. - Transaction dependencies resolution completed. {fiber-id=10000002, flow-id=e099e119-e8c7-4cbd-8f37-55cf77cb1498, invocation_id=7e6051f5-3397-4fe6-b66e-34e46a5f7e74, invocation_timestamp=2023-01-31T07:08:30.325Z, origin=O=Mock Company 1, L=London, C=GB, session_id=7e6051f5-3397-4fe6-b66e-34e46a5f7e74, session_timestamp=2023-01-31T07:08:30.325Z, thread-id=854, tx_id=65CD0F31393E80992D51904FBE7624FFF80B3010D47D03E5C49B3BB1929FA624}
[INFO ] 2023-01-31T07:08:30,555Z [Mock network] corda.flow. - Successfully received fully signed tx. Sending it to the vault for processing. {fiber-id=10000002, flow-id=e099e119-e8c7-4cbd-8f37-55cf77cb1498, invocation_id=7e6051f5-3397-4fe6-b66e-34e46a5f7e74, invocation_timestamp=2023-01-31T07:08:30.325Z, origin=O=Mock Company 1, L=London, C=GB, session_id=7e6051f5-3397-4fe6-b66e-34e46a5f7e74, session_timestamp=2023-01-31T07:08:30.325Z, thread-id=854, tx_id=65CD0F31393E80992D51904FBE7624FFF80B3010D47D03E5C49B3BB1929FA624}
[INFO ] 2023-01-31T07:08:30,563Z [Mock network] corda.flow. - Successfully recorded received transaction locally. {fiber-id=10000002, flow-id=e099e119-e8c7-4cbd-8f37-55cf77cb1498, invocation_id=7e6051f5-3397-4fe6-b66e-34e46a5f7e74, invocation_timestamp=2023-01-31T07:08:30.325Z, origin=O=Mock Company 1, L=London, C=GB, session_id=7e6051f5-3397-4fe6-b66e-34e46a5f7e74, session_timestamp=2023-01-31T07:08:30.325Z, thread-id=854, tx_id=65CD0F31393E80992D51904FBE7624FFF80B3010D47D03E5C49B3BB1929FA624}
[INFO ] 2023-01-31T07:08:30,639Z [Mock network] corda.flow. - Received transaction acknowledgement request from party O=Mock Company 1, L=London, C=GB. {fiber-id=10000003, flow-id=d06c1335-86b9-4654-b966-e2fc96a58aba, invocation_id=0602f537-57b7-4455-b34b-2f4b2943193b, invocation_timestamp=2023-01-31T07:08:30.625Z, origin=O=Mock Company 1, L=London, C=GB, session_id=0602f537-57b7-4455-b34b-2f4b2943193b, session_timestamp=2023-01-31T07:08:30.625Z, thread-id=854, tx_id=65CD0F31393E80992D51904FBE7624FFF80B3010D47D03E5C49B3BB1929FA624}
[INFO ] 2023-01-31T07:08:30,648Z [Mock network] corda.flow. - Transaction dependencies resolution completed. {fiber-id=10000003, flow-id=d06c1335-86b9-4654-b966-e2fc96a58aba, invocation_id=0602f537-57b7-4455-b34b-2f4b2943193b, invocation_timestamp=2023-01-31T07:08:30.625Z, origin=O=Mock Company 1, L=London, C=GB, session_id=0602f537-57b7-4455-b34b-2f4b2943193b, session_timestamp=2023-01-31T07:08:30.625Z, thread-id=854, tx_id=65CD0F31393E80992D51904FBE7624FFF80B3010D47D03E5C49B3BB1929FA624}
[INFO ] 2023-01-31T07:08:30,715Z [Mock network] corda.flow. - Successfully received fully signed tx. Sending it to the vault for processing. {fiber-id=10000003, flow-id=d06c1335-86b9-4654-b966-e2fc96a58aba, invocation_id=0602f537-57b7-4455-b34b-2f4b2943193b, invocation_timestamp=2023-01-31T07:08:30.625Z, origin=O=Mock Company 1, L=London, C=GB, session_id=0602f537-57b7-4455-b34b-2f4b2943193b, session_timestamp=2023-01-31T07:08:30.625Z, thread-id=854, tx_id=65CD0F31393E80992D51904FBE7624FFF80B3010D47D03E5C49B3BB1929FA624}
[INFO ] 2023-01-31T07:08:30,725Z [Mock network] corda.flow. - Successfully recorded received transaction locally. {fiber-id=10000003, flow-id=d06c1335-86b9-4654-b966-e2fc96a58aba, invocation_id=0602f537-57b7-4455-b34b-2f4b2943193b, invocation_timestamp=2023-01-31T07:08:30.625Z, origin=O=Mock Company 1, L=London, C=GB, session_id=0602f537-57b7-4455-b34b-2f4b2943193b, session_timestamp=2023-01-31T07:08:30.625Z, thread-id=854, tx_id=65CD0F31393E80992D51904FBE7624FFF80B3010D47D03E5C49B3BB1929FA624}
[INFO ] 2023-01-31T07:08:30,773Z [Mock network] corda.flow. - No need to notarise this transaction. {actor_id=Only For Testing, actor_owning_identity=O=Mock Company 2, L=London, C=GB, actor_store_id=TEST, fiber-id=10000004, flow-id=1d30d93a-51ad-43d5-8d7c-f36667bb7c2d, invocation_id=fd3f9a64-10a9-4568-8814-7a5e3739c62f, invocation_timestamp=2023-01-31T07:08:30.754Z, origin=Only For Testing, session_id=fd3f9a64-10a9-4568-8814-7a5e3739c62f, session_timestamp=2023-01-31T07:08:30.754Z, thread-id=854, tx_id=C5D1E867067595F5B05C44FAA21E0DA7398813400E3E5C7B13D69F36D360F99D}
[INFO ] 2023-01-31T07:08:30,773Z [Mock network] corda.flow. - Recording transaction locally. {actor_id=Only For Testing, actor_owning_identity=O=Mock Company 2, L=London, C=GB, actor_store_id=TEST, fiber-id=10000004, flow-id=1d30d93a-51ad-43d5-8d7c-f36667bb7c2d, invocation_id=fd3f9a64-10a9-4568-8814-7a5e3739c62f, invocation_timestamp=2023-01-31T07:08:30.754Z, origin=Only For Testing, session_id=fd3f9a64-10a9-4568-8814-7a5e3739c62f, session_timestamp=2023-01-31T07:08:30.754Z, thread-id=854, tx_id=C5D1E867067595F5B05C44FAA21E0DA7398813400E3E5C7B13D69F36D360F99D}
[INFO ] 2023-01-31T07:08:30,776Z [Mock network] corda.flow. - Recorded transaction locally successfully. {actor_id=Only For Testing, actor_owning_identity=O=Mock Company 2, L=London, C=GB, actor_store_id=TEST, fiber-id=10000004, flow-id=1d30d93a-51ad-43d5-8d7c-f36667bb7c2d, invocation_id=fd3f9a64-10a9-4568-8814-7a5e3739c62f, invocation_timestamp=2023-01-31T07:08:30.754Z, origin=Only For Testing, session_id=fd3f9a64-10a9-4568-8814-7a5e3739c62f, session_timestamp=2023-01-31T07:08:30.754Z, thread-id=854, tx_id=C5D1E867067595F5B05C44FAA21E0DA7398813400E3E5C7B13D69F36D360F99D}
[INFO ] 2023-01-31T07:08:30,776Z [Mock network] corda.flow. - All parties received the transaction successfully. {actor_id=Only For Testing, actor_owning_identity=O=Mock Company 2, L=London, C=GB, actor_store_id=TEST, fiber-id=10000004, flow-id=1d30d93a-51ad-43d5-8d7c-f36667bb7c2d, invocation_id=fd3f9a64-10a9-4568-8814-7a5e3739c62f, invocation_timestamp=2023-01-31T07:08:30.754Z, origin=Only For Testing, session_id=fd3f9a64-10a9-4568-8814-7a5e3739c62f, session_timestamp=2023-01-31T07:08:30.754Z, thread-id=854, tx_id=C5D1E867067595F5B05C44FAA21E0DA7398813400E3E5C7B13D69F36D360F99D}
[INFO ] 2023-01-31T07:08:30,802Z [Mock network] corda.flow. - Received transaction acknowledgement request from party O=Mock Company 2, L=London, C=GB. {fiber-id=10000005, flow-id=8bb44902-83c7-4f7c-9884-e1d2a4764326, invocation_id=393216a2-c0d2-41c6-b5f3-0baf7c56c165, invocation_timestamp=2023-01-31T07:08:30.791Z, origin=O=Mock Company 2, L=London, C=GB, session_id=393216a2-c0d2-41c6-b5f3-0baf7c56c165, session_timestamp=2023-01-31T07:08:30.791Z, thread-id=854, tx_id=C5D1E867067595F5B05C44FAA21E0DA7398813400E3E5C7B13D69F36D360F99D}
[INFO ] 2023-01-31T07:08:30,809Z [Mock network] corda.flow. - Transaction dependencies resolution completed. {fiber-id=10000005, flow-id=8bb44902-83c7-4f7c-9884-e1d2a4764326, invocation_id=393216a2-c0d2-41c6-b5f3-0baf7c56c165, invocation_timestamp=2023-01-31T07:08:30.791Z, origin=O=Mock Company 2, L=London, C=GB, session_id=393216a2-c0d2-41c6-b5f3-0baf7c56c165, session_timestamp=2023-01-31T07:08:30.791Z, thread-id=854, tx_id=C5D1E867067595F5B05C44FAA21E0DA7398813400E3E5C7B13D69F36D360F99D}
[INFO ] 2023-01-31T07:08:30,812Z [Mock network] corda.flow. - Successfully received fully signed tx. Sending it to the vault for processing. {fiber-id=10000005, flow-id=8bb44902-83c7-4f7c-9884-e1d2a4764326, invocation_id=393216a2-c0d2-41c6-b5f3-0baf7c56c165, invocation_timestamp=2023-01-31T07:08:30.791Z, origin=O=Mock Company 2, L=London, C=GB, session_id=393216a2-c0d2-41c6-b5f3-0baf7c56c165, session_timestamp=2023-01-31T07:08:30.791Z, thread-id=854, tx_id=C5D1E867067595F5B05C44FAA21E0DA7398813400E3E5C7B13D69F36D360F99D}
[INFO ] 2023-01-31T07:08:30,818Z [Mock network] corda.flow. - Successfully recorded received transaction locally. {fiber-id=10000005, flow-id=8bb44902-83c7-4f7c-9884-e1d2a4764326, invocation_id=393216a2-c0d2-41c6-b5f3-0baf7c56c165, invocation_timestamp=2023-01-31T07:08:30.791Z, origin=O=Mock Company 2, L=London, C=GB, session_id=393216a2-c0d2-41c6-b5f3-0baf7c56c165, session_timestamp=2023-01-31T07:08:30.791Z, thread-id=854, tx_id=C5D1E867067595F5B05C44FAA21E0DA7398813400E3E5C7B13D69F36D360F99D}
[INFO ] 2023-01-31T07:08:30,875Z [Mock network] corda.flow. - Received transaction acknowledgement request from party O=Mock Company 2, L=London, C=GB. {fiber-id=10000006, flow-id=5fc8bcc3-fb3f-4ea8-b387-f9efd891822a, invocation_id=c081daca-d55e-46ac-a0ee-b1daa6bdd1ff, invocation_timestamp=2023-01-31T07:08:30.859Z, origin=O=Mock Company 2, L=London, C=GB, session_id=c081daca-d55e-46ac-a0ee-b1daa6bdd1ff, session_timestamp=2023-01-31T07:08:30.859Z, thread-id=854, tx_id=C5D1E867067595F5B05C44FAA21E0DA7398813400E3E5C7B13D69F36D360F99D}
[INFO ] 2023-01-31T07:08:30,881Z [Mock network] corda.flow. - Transaction dependencies resolution completed. {fiber-id=10000006, flow-id=5fc8bcc3-fb3f-4ea8-b387-f9efd891822a, invocation_id=c081daca-d55e-46ac-a0ee-b1daa6bdd1ff, invocation_timestamp=2023-01-31T07:08:30.859Z, origin=O=Mock Company 2, L=London, C=GB, session_id=c081daca-d55e-46ac-a0ee-b1daa6bdd1ff, session_timestamp=2023-01-31T07:08:30.859Z, thread-id=854, tx_id=C5D1E867067595F5B05C44FAA21E0DA7398813400E3E5C7B13D69F36D360F99D}
[INFO ] 2023-01-31T07:08:30,885Z [Mock network] corda.flow. - Successfully received fully signed tx. Sending it to the vault for processing. {fiber-id=10000006, flow-id=5fc8bcc3-fb3f-4ea8-b387-f9efd891822a, invocation_id=c081daca-d55e-46ac-a0ee-b1daa6bdd1ff, invocation_timestamp=2023-01-31T07:08:30.859Z, origin=O=Mock Company 2, L=London, C=GB, session_id=c081daca-d55e-46ac-a0ee-b1daa6bdd1ff, session_timestamp=2023-01-31T07:08:30.859Z, thread-id=854, tx_id=C5D1E867067595F5B05C44FAA21E0DA7398813400E3E5C7B13D69F36D360F99D}
[INFO ] 2023-01-31T07:08:30,890Z [Mock network] corda.flow. - Successfully recorded received transaction locally. {fiber-id=10000006, flow-id=5fc8bcc3-fb3f-4ea8-b387-f9efd891822a, invocation_id=c081daca-d55e-46ac-a0ee-b1daa6bdd1ff, invocation_timestamp=2023-01-31T07:08:30.859Z, origin=O=Mock Company 2, L=London, C=GB, session_id=c081daca-d55e-46ac-a0ee-b1daa6bdd1ff, session_timestamp=2023-01-31T07:08:30.859Z, thread-id=854, tx_id=C5D1E867067595F5B05C44FAA21E0DA7398813400E3E5C7B13D69F36D360F99D}
[INFO ] 2023-01-31T07:08:30,927Z [Mock network] corda.flow. - No need to notarise this transaction. {actor_id=Only For Testing, actor_owning_identity=O=Mock Company 3, L=London, C=GB, actor_store_id=TEST, fiber-id=10000007, flow-id=cc9c0f8c-43fc-4e2a-a877-0043b52d2fef, invocation_id=1f3f8a4f-8348-468f-b281-44dd05fba24e, invocation_timestamp=2023-01-31T07:08:30.909Z, origin=Only For Testing, session_id=1f3f8a4f-8348-468f-b281-44dd05fba24e, session_timestamp=2023-01-31T07:08:30.909Z, thread-id=854, tx_id=7F6BD94194DB7F16D8FF7EC2E922CF0CE4E5FC35900101EB33584930A11ADE94}
[INFO ] 2023-01-31T07:08:30,927Z [Mock network] corda.flow. - Recording transaction locally. {actor_id=Only For Testing, actor_owning_identity=O=Mock Company 3, L=London, C=GB, actor_store_id=TEST, fiber-id=10000007, flow-id=cc9c0f8c-43fc-4e2a-a877-0043b52d2fef, invocation_id=1f3f8a4f-8348-468f-b281-44dd05fba24e, invocation_timestamp=2023-01-31T07:08:30.909Z, origin=Only For Testing, session_id=1f3f8a4f-8348-468f-b281-44dd05fba24e, session_timestamp=2023-01-31T07:08:30.909Z, thread-id=854, tx_id=7F6BD94194DB7F16D8FF7EC2E922CF0CE4E5FC35900101EB33584930A11ADE94}
[INFO ] 2023-01-31T07:08:30,929Z [Mock network] corda.flow. - Recorded transaction locally successfully. {actor_id=Only For Testing, actor_owning_identity=O=Mock Company 3, L=London, C=GB, actor_store_id=TEST, fiber-id=10000007, flow-id=cc9c0f8c-43fc-4e2a-a877-0043b52d2fef, invocation_id=1f3f8a4f-8348-468f-b281-44dd05fba24e, invocation_timestamp=2023-01-31T07:08:30.909Z, origin=Only For Testing, session_id=1f3f8a4f-8348-468f-b281-44dd05fba24e, session_timestamp=2023-01-31T07:08:30.909Z, thread-id=854, tx_id=7F6BD94194DB7F16D8FF7EC2E922CF0CE4E5FC35900101EB33584930A11ADE94}
[INFO ] 2023-01-31T07:08:30,930Z [Mock network] corda.flow. - All parties received the transaction successfully. {actor_id=Only For Testing, actor_owning_identity=O=Mock Company 3, L=London, C=GB, actor_store_id=TEST, fiber-id=10000007, flow-id=cc9c0f8c-43fc-4e2a-a877-0043b52d2fef, invocation_id=1f3f8a4f-8348-468f-b281-44dd05fba24e, invocation_timestamp=2023-01-31T07:08:30.909Z, origin=Only For Testing, session_id=1f3f8a4f-8348-468f-b281-44dd05fba24e, session_timestamp=2023-01-31T07:08:30.909Z, thread-id=854, tx_id=7F6BD94194DB7F16D8FF7EC2E922CF0CE4E5FC35900101EB33584930A11ADE94}
[INFO ] 2023-01-31T07:08:30,952Z [Mock network] corda.flow. - Received transaction acknowledgement request from party O=Mock Company 3, L=London, C=GB. {fiber-id=10000008, flow-id=26633c50-4406-4463-956f-c0e24df79250, invocation_id=fd488c3b-ad66-4c4e-8980-cf567f58ef7f, invocation_timestamp=2023-01-31T07:08:30.943Z, origin=O=Mock Company 3, L=London, C=GB, session_id=fd488c3b-ad66-4c4e-8980-cf567f58ef7f, session_timestamp=2023-01-31T07:08:30.943Z, thread-id=854, tx_id=7F6BD94194DB7F16D8FF7EC2E922CF0CE4E5FC35900101EB33584930A11ADE94}
[INFO ] 2023-01-31T07:08:30,959Z [Mock network] corda.flow. - Transaction dependencies resolution completed. {fiber-id=10000008, flow-id=26633c50-4406-4463-956f-c0e24df79250, invocation_id=fd488c3b-ad66-4c4e-8980-cf567f58ef7f, invocation_timestamp=2023-01-31T07:08:30.943Z, origin=O=Mock Company 3, L=London, C=GB, session_id=fd488c3b-ad66-4c4e-8980-cf567f58ef7f, session_timestamp=2023-01-31T07:08:30.943Z, thread-id=854, tx_id=7F6BD94194DB7F16D8FF7EC2E922CF0CE4E5FC35900101EB33584930A11ADE94}
[INFO ] 2023-01-31T07:08:30,962Z [Mock network] corda.flow. - Successfully received fully signed tx. Sending it to the vault for processing. {fiber-id=10000008, flow-id=26633c50-4406-4463-956f-c0e24df79250, invocation_id=fd488c3b-ad66-4c4e-8980-cf567f58ef7f, invocation_timestamp=2023-01-31T07:08:30.943Z, origin=O=Mock Company 3, L=London, C=GB, session_id=fd488c3b-ad66-4c4e-8980-cf567f58ef7f, session_timestamp=2023-01-31T07:08:30.943Z, thread-id=854, tx_id=7F6BD94194DB7F16D8FF7EC2E922CF0CE4E5FC35900101EB33584930A11ADE94}
[INFO ] 2023-01-31T07:08:30,966Z [Mock network] corda.flow. - Successfully recorded received transaction locally. {fiber-id=10000008, flow-id=26633c50-4406-4463-956f-c0e24df79250, invocation_id=fd488c3b-ad66-4c4e-8980-cf567f58ef7f, invocation_timestamp=2023-01-31T07:08:30.943Z, origin=O=Mock Company 3, L=London, C=GB, session_id=fd488c3b-ad66-4c4e-8980-cf567f58ef7f, session_timestamp=2023-01-31T07:08:30.943Z, thread-id=854, tx_id=7F6BD94194DB7F16D8FF7EC2E922CF0CE4E5FC35900101EB33584930A11ADE94}
[INFO ] 2023-01-31T07:08:31,007Z [Mock network] corda.flow. - Received transaction acknowledgement request from party O=Mock Company 3, L=London, C=GB. {fiber-id=10000009, flow-id=a2af74c2-e234-4f52-a34e-5bf59ae5ddef, invocation_id=1253e56a-ce47-41d1-b261-6a8bc8db70a9, invocation_timestamp=2023-01-31T07:08:30.993Z, origin=O=Mock Company 3, L=London, C=GB, session_id=1253e56a-ce47-41d1-b261-6a8bc8db70a9, session_timestamp=2023-01-31T07:08:30.993Z, thread-id=854, tx_id=7F6BD94194DB7F16D8FF7EC2E922CF0CE4E5FC35900101EB33584930A11ADE94}
[INFO ] 2023-01-31T07:08:31,014Z [Mock network] corda.flow. - Transaction dependencies resolution completed. {fiber-id=10000009, flow-id=a2af74c2-e234-4f52-a34e-5bf59ae5ddef, invocation_id=1253e56a-ce47-41d1-b261-6a8bc8db70a9, invocation_timestamp=2023-01-31T07:08:30.993Z, origin=O=Mock Company 3, L=London, C=GB, session_id=1253e56a-ce47-41d1-b261-6a8bc8db70a9, session_timestamp=2023-01-31T07:08:30.993Z, thread-id=854, tx_id=7F6BD94194DB7F16D8FF7EC2E922CF0CE4E5FC35900101EB33584930A11ADE94}
[INFO ] 2023-01-31T07:08:31,018Z [Mock network] corda.flow. - Successfully received fully signed tx. Sending it to the vault for processing. {fiber-id=10000009, flow-id=a2af74c2-e234-4f52-a34e-5bf59ae5ddef, invocation_id=1253e56a-ce47-41d1-b261-6a8bc8db70a9, invocation_timestamp=2023-01-31T07:08:30.993Z, origin=O=Mock Company 3, L=London, C=GB, session_id=1253e56a-ce47-41d1-b261-6a8bc8db70a9, session_timestamp=2023-01-31T07:08:30.993Z, thread-id=854, tx_id=7F6BD94194DB7F16D8FF7EC2E922CF0CE4E5FC35900101EB33584930A11ADE94}
[INFO ] 2023-01-31T07:08:31,024Z [Mock network] corda.flow. - Successfully recorded received transaction locally. {fiber-id=10000009, flow-id=a2af74c2-e234-4f52-a34e-5bf59ae5ddef, invocation_id=1253e56a-ce47-41d1-b261-6a8bc8db70a9, invocation_timestamp=2023-01-31T07:08:30.993Z, origin=O=Mock Company 3, L=London, C=GB, session_id=1253e56a-ce47-41d1-b261-6a8bc8db70a9, session_timestamp=2023-01-31T07:08:30.993Z, thread-id=854, tx_id=7F6BD94194DB7F16D8FF7EC2E922CF0CE4E5FC35900101EB33584930A11ADE94}
[INFO ] 2023-01-31T07:08:31,078Z [Mock network] identity.PersistentIdentityService. - Linking: 342E39BBE6BEC3392FD5A4BC8F7C510044E10D3E0F531403A3E24AA5DDDD6C7E to O=Mock Company 1, L=London, C=GB {actor_id=Only For Testing, actor_owning_identity=O=Mock Company 1, L=London, C=GB, actor_store_id=TEST, fiber-id=10000011, flow-id=41d04f7f-1240-46b3-8777-2c58bafaa09d, invocation_id=1bc0394f-6f50-49f1-9fce-0e76d60b258d, invocation_timestamp=2023-01-31T07:08:31.065Z, origin=Only For Testing, session_id=1bc0394f-6f50-49f1-9fce-0e76d60b258d, session_timestamp=2023-01-31T07:08:31.065Z, thread-id=854}
[INFO ] 2023-01-31T07:08:31,163Z [Mock network] identity.PersistentIdentityService. - Linking: F4C1992B54FFFCF1B569F2B36C075D0741269F5B50B91DD1E7245902E40F51AB to O=Mock Company 2, L=London, C=GB {fiber-id=10000012, flow-id=b3defb52-e74e-49bc-b49c-b5319c93a0bc, invocation_id=b6d829fd-fbc1-4b30-87b2-a4d608f865e8, invocation_timestamp=2023-01-31T07:08:31.093Z, origin=O=Mock Company 1, L=London, C=GB, session_id=b6d829fd-fbc1-4b30-87b2-a4d608f865e8, session_timestamp=2023-01-31T07:08:31.093Z, thread-id=854}
[INFO ] 2023-01-31T07:08:31,190Z [Mock network] identity.PersistentIdentityService. - Linking: F4C1992B54FFFCF1B569F2B36C075D0741269F5B50B91DD1E7245902E40F51AB to O=Mock Company 2, L=London, C=GB {actor_id=Only For Testing, actor_owning_identity=O=Mock Company 1, L=London, C=GB, actor_store_id=TEST, fiber-id=10000011, flow-id=41d04f7f-1240-46b3-8777-2c58bafaa09d, invocation_id=1bc0394f-6f50-49f1-9fce-0e76d60b258d, invocation_timestamp=2023-01-31T07:08:31.065Z, origin=Only For Testing, session_id=1bc0394f-6f50-49f1-9fce-0e76d60b258d, session_timestamp=2023-01-31T07:08:31.065Z, thread-id=854}
[INFO ] 2023-01-31T07:08:31,315Z [Mock network] corda.flow. - Received transaction acknowledgement request from party O=Mock Company 1, L=London, C=GB. {fiber-id=10000013, flow-id=e2b3cc24-4d3e-47a3-8b80-584d86dde9de, invocation_id=cc168f90-5458-4739-b2e8-91fade38602d, invocation_timestamp=2023-01-31T07:08:31.297Z, origin=O=Mock Company 1, L=London, C=GB, session_id=cc168f90-5458-4739-b2e8-91fade38602d, session_timestamp=2023-01-31T07:08:31.297Z, thread-id=854, tx_id=36C16BADD7758188EA872AA8181BAD388A1EDF9FDACCFF8E93FC21EA687481CD}
[INFO ] 2023-01-31T07:08:31,322Z [Mock network] corda.flow. - Transaction dependencies resolution completed. {fiber-id=10000013, flow-id=e2b3cc24-4d3e-47a3-8b80-584d86dde9de, invocation_id=cc168f90-5458-4739-b2e8-91fade38602d, invocation_timestamp=2023-01-31T07:08:31.297Z, origin=O=Mock Company 1, L=London, C=GB, session_id=cc168f90-5458-4739-b2e8-91fade38602d, session_timestamp=2023-01-31T07:08:31.297Z, thread-id=854, tx_id=36C16BADD7758188EA872AA8181BAD388A1EDF9FDACCFF8E93FC21EA687481CD}
[INFO ] 2023-01-31T07:08:31,400Z [Mock network] corda.flow. - No need to notarise this transaction. {actor_id=Only For Testing, actor_owning_identity=O=Mock Company 1, L=London, C=GB, actor_store_id=TEST, fiber-id=10000011, flow-id=41d04f7f-1240-46b3-8777-2c58bafaa09d, invocation_id=1bc0394f-6f50-49f1-9fce-0e76d60b258d, invocation_timestamp=2023-01-31T07:08:31.065Z, origin=Only For Testing, session_id=1bc0394f-6f50-49f1-9fce-0e76d60b258d, session_timestamp=2023-01-31T07:08:31.065Z, thread-id=854, tx_id=36C16BADD7758188EA872AA8181BAD388A1EDF9FDACCFF8E93FC21EA687481CD}
[INFO ] 2023-01-31T07:08:31,400Z [Mock network] corda.flow. - Recording transaction locally. {actor_id=Only For Testing, actor_owning_identity=O=Mock Company 1, L=London, C=GB, actor_store_id=TEST, fiber-id=10000011, flow-id=41d04f7f-1240-46b3-8777-2c58bafaa09d, invocation_id=1bc0394f-6f50-49f1-9fce-0e76d60b258d, invocation_timestamp=2023-01-31T07:08:31.065Z, origin=Only For Testing, session_id=1bc0394f-6f50-49f1-9fce-0e76d60b258d, session_timestamp=2023-01-31T07:08:31.065Z, thread-id=854, tx_id=36C16BADD7758188EA872AA8181BAD388A1EDF9FDACCFF8E93FC21EA687481CD}
[INFO ] 2023-01-31T07:08:31,404Z [Mock network] corda.flow. - Recorded transaction locally successfully. {actor_id=Only For Testing, actor_owning_identity=O=Mock Company 1, L=London, C=GB, actor_store_id=TEST, fiber-id=10000011, flow-id=41d04f7f-1240-46b3-8777-2c58bafaa09d, invocation_id=1bc0394f-6f50-49f1-9fce-0e76d60b258d, invocation_timestamp=2023-01-31T07:08:31.065Z, origin=Only For Testing, session_id=1bc0394f-6f50-49f1-9fce-0e76d60b258d, session_timestamp=2023-01-31T07:08:31.065Z, thread-id=854, tx_id=36C16BADD7758188EA872AA8181BAD388A1EDF9FDACCFF8E93FC21EA687481CD}
[INFO ] 2023-01-31T07:08:31,424Z [Mock network] corda.flow. - Received transaction acknowledgement request from party O=Mock Company 1, L=London, C=GB. {fiber-id=10000013, flow-id=e2b3cc24-4d3e-47a3-8b80-584d86dde9de, invocation_id=cc168f90-5458-4739-b2e8-91fade38602d, invocation_timestamp=2023-01-31T07:08:31.297Z, origin=O=Mock Company 1, L=London, C=GB, session_id=cc168f90-5458-4739-b2e8-91fade38602d, session_timestamp=2023-01-31T07:08:31.297Z, thread-id=854, tx_id=36C16BADD7758188EA872AA8181BAD388A1EDF9FDACCFF8E93FC21EA687481CD}
[INFO ] 2023-01-31T07:08:31,429Z [Mock network] corda.flow. - Transaction dependencies resolution completed. {fiber-id=10000013, flow-id=e2b3cc24-4d3e-47a3-8b80-584d86dde9de, invocation_id=cc168f90-5458-4739-b2e8-91fade38602d, invocation_timestamp=2023-01-31T07:08:31.297Z, origin=O=Mock Company 1, L=London, C=GB, session_id=cc168f90-5458-4739-b2e8-91fade38602d, session_timestamp=2023-01-31T07:08:31.297Z, thread-id=854, tx_id=36C16BADD7758188EA872AA8181BAD388A1EDF9FDACCFF8E93FC21EA687481CD}
[INFO ] 2023-01-31T07:08:31,432Z [Mock network] corda.flow. - Successfully received fully signed tx. Sending it to the vault for processing. {fiber-id=10000013, flow-id=e2b3cc24-4d3e-47a3-8b80-584d86dde9de, invocation_id=cc168f90-5458-4739-b2e8-91fade38602d, invocation_timestamp=2023-01-31T07:08:31.297Z, origin=O=Mock Company 1, L=London, C=GB, session_id=cc168f90-5458-4739-b2e8-91fade38602d, session_timestamp=2023-01-31T07:08:31.297Z, thread-id=854, tx_id=36C16BADD7758188EA872AA8181BAD388A1EDF9FDACCFF8E93FC21EA687481CD}
[INFO ] 2023-01-31T07:08:31,436Z [Mock network] corda.flow. - Successfully recorded received transaction locally. {fiber-id=10000013, flow-id=e2b3cc24-4d3e-47a3-8b80-584d86dde9de, invocation_id=cc168f90-5458-4739-b2e8-91fade38602d, invocation_timestamp=2023-01-31T07:08:31.297Z, origin=O=Mock Company 1, L=London, C=GB, session_id=cc168f90-5458-4739-b2e8-91fade38602d, session_timestamp=2023-01-31T07:08:31.297Z, thread-id=854, tx_id=36C16BADD7758188EA872AA8181BAD388A1EDF9FDACCFF8E93FC21EA687481CD}
[WARN ] 2023-01-31T07:08:31,438Z [Mock network] persistence.AbstractPartyToX500NameAsStringConverter. - Identity service unable to resolve AbstractParty: Anonymous(DL4Wh5n6Xxw8ZQgTgqpxBFzDVwQQX2rrgbwanqdQN2rsXK) {actor_id=Only For Testing, actor_owning_identity=O=Mock Company 1, L=London, C=GB, actor_store_id=TEST, fiber-id=10000013, flow-id=e2b3cc24-4d3e-47a3-8b80-584d86dde9de, invocation_id=cc168f90-5458-4739-b2e8-91fade38602d, invocation_timestamp=2023-01-31T07:08:31.297Z, origin=O=Mock Company 1, L=London, C=GB, session_id=cc168f90-5458-4739-b2e8-91fade38602d, session_timestamp=2023-01-31T07:08:31.297Z, thread-id=854}
[INFO ] 2023-01-31T07:08:31,442Z [Mock network] corda.flow. - Party O=Mock Company 2, L=London, C=GB received the transaction. {actor_id=Only For Testing, actor_owning_identity=O=Mock Company 1, L=London, C=GB, actor_store_id=TEST, fiber-id=10000011, flow-id=41d04f7f-1240-46b3-8777-2c58bafaa09d, invocation_id=1bc0394f-6f50-49f1-9fce-0e76d60b258d, invocation_timestamp=2023-01-31T07:08:31.065Z, origin=Only For Testing, session_id=1bc0394f-6f50-49f1-9fce-0e76d60b258d, session_timestamp=2023-01-31T07:08:31.065Z, thread-id=854, tx_id=36C16BADD7758188EA872AA8181BAD388A1EDF9FDACCFF8E93FC21EA687481CD}
[INFO ] 2023-01-31T07:08:31,442Z [Mock network] corda.flow. - All parties received the transaction successfully. {actor_id=Only For Testing, actor_owning_identity=O=Mock Company 1, L=London, C=GB, actor_store_id=TEST, fiber-id=10000011, flow-id=41d04f7f-1240-46b3-8777-2c58bafaa09d, invocation_id=1bc0394f-6f50-49f1-9fce-0e76d60b258d, invocation_timestamp=2023-01-31T07:08:31.065Z, origin=Only For Testing, session_id=1bc0394f-6f50-49f1-9fce-0e76d60b258d, session_timestamp=2023-01-31T07:08:31.065Z, thread-id=854, tx_id=36C16BADD7758188EA872AA8181BAD388A1EDF9FDACCFF8E93FC21EA687481CD}
[INFO ] 2023-01-31T07:08:31,505Z [Mock network] corda.flow. - Received transaction acknowledgement request from party O=Mock Company 1, L=London, C=GB. {fiber-id=10000014, flow-id=9022dc41-8970-4f83-afde-c2ad58963100, invocation_id=0a240117-c20c-48bc-a439-19411d469e12, invocation_timestamp=2023-01-31T07:08:31.483Z, origin=O=Mock Company 1, L=London, C=GB, session_id=0a240117-c20c-48bc-a439-19411d469e12, session_timestamp=2023-01-31T07:08:31.483Z, thread-id=854, tx_id=C5D1E867067595F5B05C44FAA21E0DA7398813400E3E5C7B13D69F36D360F99D}
[INFO ] 2023-01-31T07:08:31,513Z [Mock network] corda.flow. - Transaction dependencies resolution completed. {fiber-id=10000014, flow-id=9022dc41-8970-4f83-afde-c2ad58963100, invocation_id=0a240117-c20c-48bc-a439-19411d469e12, invocation_timestamp=2023-01-31T07:08:31.483Z, origin=O=Mock Company 1, L=London, C=GB, session_id=0a240117-c20c-48bc-a439-19411d469e12, session_timestamp=2023-01-31T07:08:31.483Z, thread-id=854, tx_id=C5D1E867067595F5B05C44FAA21E0DA7398813400E3E5C7B13D69F36D360F99D}
[INFO ] 2023-01-31T07:08:31,517Z [Mock network] corda.flow. - Successfully received fully signed tx. Sending it to the vault for processing. {fiber-id=10000014, flow-id=9022dc41-8970-4f83-afde-c2ad58963100, invocation_id=0a240117-c20c-48bc-a439-19411d469e12, invocation_timestamp=2023-01-31T07:08:31.483Z, origin=O=Mock Company 1, L=London, C=GB, session_id=0a240117-c20c-48bc-a439-19411d469e12, session_timestamp=2023-01-31T07:08:31.483Z, thread-id=854, tx_id=C5D1E867067595F5B05C44FAA21E0DA7398813400E3E5C7B13D69F36D360F99D}
[INFO ] 2023-01-31T07:08:31,522Z [Mock network] corda.flow. - Successfully recorded received transaction locally. {fiber-id=10000014, flow-id=9022dc41-8970-4f83-afde-c2ad58963100, invocation_id=0a240117-c20c-48bc-a439-19411d469e12, invocation_timestamp=2023-01-31T07:08:31.483Z, origin=O=Mock Company 1, L=London, C=GB, session_id=0a240117-c20c-48bc-a439-19411d469e12, session_timestamp=2023-01-31T07:08:31.483Z, thread-id=854, tx_id=C5D1E867067595F5B05C44FAA21E0DA7398813400E3E5C7B13D69F36D360F99D}
[INFO ] 2023-01-31T07:08:31,543Z [Mock network] identity.PersistentIdentityService. - An existing entry for DLHURhTgcogpg7Wxc42FPrJUrMEFfxwn5vXobo33PhcAUJ already exists. {fiber-id=10000014, flow-id=9022dc41-8970-4f83-afde-c2ad58963100, invocation_id=0a240117-c20c-48bc-a439-19411d469e12, invocation_timestamp=2023-01-31T07:08:31.483Z, origin=O=Mock Company 1, L=London, C=GB, session_id=0a240117-c20c-48bc-a439-19411d469e12, session_timestamp=2023-01-31T07:08:31.483Z, thread-id=854, tx_id=C5D1E867067595F5B05C44FAA21E0DA7398813400E3E5C7B13D69F36D360F99D}
[INFO ] 2023-01-31T07:08:31,552Z [Mock network] corda.flow. - Received transaction acknowledgement request from party O=Mock Company 1, L=London, C=GB. {fiber-id=10000014, flow-id=9022dc41-8970-4f83-afde-c2ad58963100, invocation_id=0a240117-c20c-48bc-a439-19411d469e12, invocation_timestamp=2023-01-31T07:08:31.483Z, origin=O=Mock Company 1, L=London, C=GB, session_id=0a240117-c20c-48bc-a439-19411d469e12, session_timestamp=2023-01-31T07:08:31.483Z, thread-id=854, tx_id=65CD0F31393E80992D51904FBE7624FFF80B3010D47D03E5C49B3BB1929FA624}
[INFO ] 2023-01-31T07:08:31,559Z [Mock network] corda.flow. - Transaction dependencies resolution completed. {fiber-id=10000014, flow-id=9022dc41-8970-4f83-afde-c2ad58963100, invocation_id=0a240117-c20c-48bc-a439-19411d469e12, invocation_timestamp=2023-01-31T07:08:31.483Z, origin=O=Mock Company 1, L=London, C=GB, session_id=0a240117-c20c-48bc-a439-19411d469e12, session_timestamp=2023-01-31T07:08:31.483Z, thread-id=854, tx_id=65CD0F31393E80992D51904FBE7624FFF80B3010D47D03E5C49B3BB1929FA624}
[INFO ] 2023-01-31T07:08:31,563Z [Mock network] corda.flow. - Successfully received fully signed tx. Sending it to the vault for processing. {fiber-id=10000014, flow-id=9022dc41-8970-4f83-afde-c2ad58963100, invocation_id=0a240117-c20c-48bc-a439-19411d469e12, invocation_timestamp=2023-01-31T07:08:31.483Z, origin=O=Mock Company 1, L=London, C=GB, session_id=0a240117-c20c-48bc-a439-19411d469e12, session_timestamp=2023-01-31T07:08:31.483Z, thread-id=854, tx_id=65CD0F31393E80992D51904FBE7624FFF80B3010D47D03E5C49B3BB1929FA624}
[INFO ] 2023-01-31T07:08:31,569Z [Mock network] corda.flow. - Successfully recorded received transaction locally. {fiber-id=10000014, flow-id=9022dc41-8970-4f83-afde-c2ad58963100, invocation_id=0a240117-c20c-48bc-a439-19411d469e12, invocation_timestamp=2023-01-31T07:08:31.483Z, origin=O=Mock Company 1, L=London, C=GB, session_id=0a240117-c20c-48bc-a439-19411d469e12, session_timestamp=2023-01-31T07:08:31.483Z, thread-id=854, tx_id=65CD0F31393E80992D51904FBE7624FFF80B3010D47D03E5C49B3BB1929FA624}
[INFO ] 2023-01-31T07:08:31,591Z [Mock network] identity.PersistentIdentityService. - Linking: 342E39BBE6BEC3392FD5A4BC8F7C510044E10D3E0F531403A3E24AA5DDDD6C7E to O=Mock Company 1, L=London, C=GB {fiber-id=10000014, flow-id=9022dc41-8970-4f83-afde-c2ad58963100, invocation_id=0a240117-c20c-48bc-a439-19411d469e12, invocation_timestamp=2023-01-31T07:08:31.483Z, origin=O=Mock Company 1, L=London, C=GB, session_id=0a240117-c20c-48bc-a439-19411d469e12, session_timestamp=2023-01-31T07:08:31.483Z, thread-id=854, tx_id=65CD0F31393E80992D51904FBE7624FFF80B3010D47D03E5C49B3BB1929FA624}
[INFO ] 2023-01-31T07:08:31,599Z [Mock network] corda.flow. - Received transaction acknowledgement request from party O=Mock Company 1, L=London, C=GB. {fiber-id=10000014, flow-id=9022dc41-8970-4f83-afde-c2ad58963100, invocation_id=0a240117-c20c-48bc-a439-19411d469e12, invocation_timestamp=2023-01-31T07:08:31.483Z, origin=O=Mock Company 1, L=London, C=GB, session_id=0a240117-c20c-48bc-a439-19411d469e12, session_timestamp=2023-01-31T07:08:31.483Z, thread-id=854, tx_id=36C16BADD7758188EA872AA8181BAD388A1EDF9FDACCFF8E93FC21EA687481CD}
[INFO ] 2023-01-31T07:08:31,606Z [Mock network] corda.flow. - Transaction dependencies resolution completed. {fiber-id=10000014, flow-id=9022dc41-8970-4f83-afde-c2ad58963100, invocation_id=0a240117-c20c-48bc-a439-19411d469e12, invocation_timestamp=2023-01-31T07:08:31.483Z, origin=O=Mock Company 1, L=London, C=GB, session_id=0a240117-c20c-48bc-a439-19411d469e12, session_timestamp=2023-01-31T07:08:31.483Z, thread-id=854, tx_id=36C16BADD7758188EA872AA8181BAD388A1EDF9FDACCFF8E93FC21EA687481CD}
[INFO ] 2023-01-31T07:08:31,610Z [Mock network] corda.flow. - Successfully received fully signed tx. Sending it to the vault for processing. {fiber-id=10000014, flow-id=9022dc41-8970-4f83-afde-c2ad58963100, invocation_id=0a240117-c20c-48bc-a439-19411d469e12, invocation_timestamp=2023-01-31T07:08:31.483Z, origin=O=Mock Company 1, L=London, C=GB, session_id=0a240117-c20c-48bc-a439-19411d469e12, session_timestamp=2023-01-31T07:08:31.483Z, thread-id=854, tx_id=36C16BADD7758188EA872AA8181BAD388A1EDF9FDACCFF8E93FC21EA687481CD}
[INFO ] 2023-01-31T07:08:31,614Z [Mock network] corda.flow. - Successfully recorded received transaction locally. {fiber-id=10000014, flow-id=9022dc41-8970-4f83-afde-c2ad58963100, invocation_id=0a240117-c20c-48bc-a439-19411d469e12, invocation_timestamp=2023-01-31T07:08:31.483Z, origin=O=Mock Company 1, L=London, C=GB, session_id=0a240117-c20c-48bc-a439-19411d469e12, session_timestamp=2023-01-31T07:08:31.483Z, thread-id=854, tx_id=36C16BADD7758188EA872AA8181BAD388A1EDF9FDACCFF8E93FC21EA687481CD}
[INFO ] 2023-01-31T07:08:31,723Z [Mock network] identity.PersistentIdentityService. - Linking: 4A603736A4247E5C7B209C84D00982A7C085D295D1B986F46FE11A743BF79D73 to O=Mock Company 1, L=London, C=GB {fiber-id=10000017, flow-id=83828309-ebbb-41bf-94d3-bbe04c8d3aed, invocation_id=3521353c-2396-45e5-9c35-35e706f216f0, invocation_timestamp=2023-01-31T07:08:31.693Z, origin=O=Mock Company 2, L=London, C=GB, session_id=3521353c-2396-45e5-9c35-35e706f216f0, session_timestamp=2023-01-31T07:08:31.693Z, thread-id=854}
[INFO ] 2023-01-31T07:08:31,733Z [Mock network] identity.PersistentIdentityService. - Linking: 4A603736A4247E5C7B209C84D00982A7C085D295D1B986F46FE11A743BF79D73 to O=Mock Company 1, L=London, C=GB {actor_id=Only For Testing, actor_owning_identity=O=Mock Company 2, L=London, C=GB, actor_store_id=TEST, fiber-id=10000016, flow-id=7c6cca45-ebf4-4d8f-ba63-3d0e6733d717, invocation_id=c84ada32-84e9-4d08-a5c7-74cac88168f9, invocation_timestamp=2023-01-31T07:08:31.669Z, origin=Only For Testing, session_id=c84ada32-84e9-4d08-a5c7-74cac88168f9, session_timestamp=2023-01-31T07:08:31.669Z, thread-id=854}
[INFO ] 2023-01-31T07:08:31,738Z [Mock network] identity.PersistentIdentityService. - Linking: 7FA5C5F79E39E56F7310448029DA0BB84C238317AAABF51D581E2E0B820E6022 to O=Mock Company 2, L=London, C=GB {actor_id=Only For Testing, actor_owning_identity=O=Mock Company 2, L=London, C=GB, actor_store_id=TEST, fiber-id=10000016, flow-id=7c6cca45-ebf4-4d8f-ba63-3d0e6733d717, invocation_id=c84ada32-84e9-4d08-a5c7-74cac88168f9, invocation_timestamp=2023-01-31T07:08:31.669Z, origin=Only For Testing, session_id=c84ada32-84e9-4d08-a5c7-74cac88168f9, session_timestamp=2023-01-31T07:08:31.669Z, thread-id=854}
[INFO ] 2023-01-31T07:08:31,779Z [Mock network] identity.PersistentIdentityService. - Linking: 927297417EC4D4B8A67E375938147E2871171BE764F176369A120B843223BEBA to O=Mock Company 3, L=London, C=GB {fiber-id=10000018, flow-id=07e5fcd1-5877-4338-82e2-c8a9c6d5c3a2, invocation_id=3a92c9d4-4830-43b5-a1be-14d6ca30dc21, invocation_timestamp=2023-01-31T07:08:31.747Z, origin=O=Mock Company 2, L=London, C=GB, session_id=3a92c9d4-4830-43b5-a1be-14d6ca30dc21, session_timestamp=2023-01-31T07:08:31.747Z, thread-id=854}
[INFO ] 2023-01-31T07:08:31,796Z [Mock network] identity.PersistentIdentityService. - Linking: 927297417EC4D4B8A67E375938147E2871171BE764F176369A120B843223BEBA to O=Mock Company 3, L=London, C=GB {actor_id=Only For Testing, actor_owning_identity=O=Mock Company 2, L=London, C=GB, actor_store_id=TEST, fiber-id=10000016, flow-id=7c6cca45-ebf4-4d8f-ba63-3d0e6733d717, invocation_id=c84ada32-84e9-4d08-a5c7-74cac88168f9, invocation_timestamp=2023-01-31T07:08:31.669Z, origin=Only For Testing, session_id=c84ada32-84e9-4d08-a5c7-74cac88168f9, session_timestamp=2023-01-31T07:08:31.669Z, thread-id=854}
[INFO ] 2023-01-31T07:08:31,852Z [Mock network] corda.flow. - Received transaction acknowledgement request from party O=Mock Company 2, L=London, C=GB. {fiber-id=10000019, flow-id=8569bac7-01f2-4829-85ed-456d790c15c2, invocation_id=52d57ab0-7f79-4572-9771-9e7869c0d99a, invocation_timestamp=2023-01-31T07:08:31.829Z, origin=O=Mock Company 2, L=London, C=GB, session_id=52d57ab0-7f79-4572-9771-9e7869c0d99a, session_timestamp=2023-01-31T07:08:31.829Z, thread-id=854, tx_id=C5D1E867067595F5B05C44FAA21E0DA7398813400E3E5C7B13D69F36D360F99D}
[INFO ] 2023-01-31T07:08:31,858Z [Mock network] corda.flow. - Transaction dependencies resolution completed. {fiber-id=10000019, flow-id=8569bac7-01f2-4829-85ed-456d790c15c2, invocation_id=52d57ab0-7f79-4572-9771-9e7869c0d99a, invocation_timestamp=2023-01-31T07:08:31.829Z, origin=O=Mock Company 2, L=London, C=GB, session_id=52d57ab0-7f79-4572-9771-9e7869c0d99a, session_timestamp=2023-01-31T07:08:31.829Z, thread-id=854, tx_id=C5D1E867067595F5B05C44FAA21E0DA7398813400E3E5C7B13D69F36D360F99D}
[INFO ] 2023-01-31T07:08:31,862Z [Mock network] corda.flow. - Successfully received fully signed tx. Sending it to the vault for processing. {fiber-id=10000019, flow-id=8569bac7-01f2-4829-85ed-456d790c15c2, invocation_id=52d57ab0-7f79-4572-9771-9e7869c0d99a, invocation_timestamp=2023-01-31T07:08:31.829Z, origin=O=Mock Company 2, L=London, C=GB, session_id=52d57ab0-7f79-4572-9771-9e7869c0d99a, session_timestamp=2023-01-31T07:08:31.829Z, thread-id=854, tx_id=C5D1E867067595F5B05C44FAA21E0DA7398813400E3E5C7B13D69F36D360F99D}
[INFO ] 2023-01-31T07:08:31,866Z [Mock network] corda.flow. - Successfully recorded received transaction locally. {fiber-id=10000019, flow-id=8569bac7-01f2-4829-85ed-456d790c15c2, invocation_id=52d57ab0-7f79-4572-9771-9e7869c0d99a, invocation_timestamp=2023-01-31T07:08:31.829Z, origin=O=Mock Company 2, L=London, C=GB, session_id=52d57ab0-7f79-4572-9771-9e7869c0d99a, session_timestamp=2023-01-31T07:08:31.829Z, thread-id=854, tx_id=C5D1E867067595F5B05C44FAA21E0DA7398813400E3E5C7B13D69F36D360F99D}
[INFO ] 2023-01-31T07:08:31,899Z [Mock network] identity.PersistentIdentityService. - An existing entry for DLHURhTgcogpg7Wxc42FPrJUrMEFfxwn5vXobo33PhcAUJ already exists. {fiber-id=10000019, flow-id=8569bac7-01f2-4829-85ed-456d790c15c2, invocation_id=52d57ab0-7f79-4572-9771-9e7869c0d99a, invocation_timestamp=2023-01-31T07:08:31.829Z, origin=O=Mock Company 2, L=London, C=GB, session_id=52d57ab0-7f79-4572-9771-9e7869c0d99a, session_timestamp=2023-01-31T07:08:31.829Z, thread-id=854, tx_id=C5D1E867067595F5B05C44FAA21E0DA7398813400E3E5C7B13D69F36D360F99D}
[INFO ] 2023-01-31T07:08:31,908Z [Mock network] corda.flow. - Received transaction acknowledgement request from party O=Mock Company 2, L=London, C=GB. {fiber-id=10000019, flow-id=8569bac7-01f2-4829-85ed-456d790c15c2, invocation_id=52d57ab0-7f79-4572-9771-9e7869c0d99a, invocation_timestamp=2023-01-31T07:08:31.829Z, origin=O=Mock Company 2, L=London, C=GB, session_id=52d57ab0-7f79-4572-9771-9e7869c0d99a, session_timestamp=2023-01-31T07:08:31.829Z, thread-id=854, tx_id=65CD0F31393E80992D51904FBE7624FFF80B3010D47D03E5C49B3BB1929FA624}
[INFO ] 2023-01-31T07:08:31,913Z [Mock network] corda.flow. - Transaction dependencies resolution completed. {fiber-id=10000019, flow-id=8569bac7-01f2-4829-85ed-456d790c15c2, invocation_id=52d57ab0-7f79-4572-9771-9e7869c0d99a, invocation_timestamp=2023-01-31T07:08:31.829Z, origin=O=Mock Company 2, L=London, C=GB, session_id=52d57ab0-7f79-4572-9771-9e7869c0d99a, session_timestamp=2023-01-31T07:08:31.829Z, thread-id=854, tx_id=65CD0F31393E80992D51904FBE7624FFF80B3010D47D03E5C49B3BB1929FA624}
[INFO ] 2023-01-31T07:08:31,916Z [Mock network] corda.flow. - Successfully received fully signed tx. Sending it to the vault for processing. {fiber-id=10000019, flow-id=8569bac7-01f2-4829-85ed-456d790c15c2, invocation_id=52d57ab0-7f79-4572-9771-9e7869c0d99a, invocation_timestamp=2023-01-31T07:08:31.829Z, origin=O=Mock Company 2, L=London, C=GB, session_id=52d57ab0-7f79-4572-9771-9e7869c0d99a, session_timestamp=2023-01-31T07:08:31.829Z, thread-id=854, tx_id=65CD0F31393E80992D51904FBE7624FFF80B3010D47D03E5C49B3BB1929FA624}
[INFO ] 2023-01-31T07:08:31,920Z [Mock network] corda.flow. - Successfully recorded received transaction locally. {fiber-id=10000019, flow-id=8569bac7-01f2-4829-85ed-456d790c15c2, invocation_id=52d57ab0-7f79-4572-9771-9e7869c0d99a, invocation_timestamp=2023-01-31T07:08:31.829Z, origin=O=Mock Company 2, L=London, C=GB, session_id=52d57ab0-7f79-4572-9771-9e7869c0d99a, session_timestamp=2023-01-31T07:08:31.829Z, thread-id=854, tx_id=65CD0F31393E80992D51904FBE7624FFF80B3010D47D03E5C49B3BB1929FA624}
[INFO ] 2023-01-31T07:08:31,939Z [Mock network] identity.PersistentIdentityService. - An existing entry for DL4Wh5n6Xxw8ZQgTgqpxBFzDVwQQX2rrgbwanqdQN2rsXK already exists. {fiber-id=10000019, flow-id=8569bac7-01f2-4829-85ed-456d790c15c2, invocation_id=52d57ab0-7f79-4572-9771-9e7869c0d99a, invocation_timestamp=2023-01-31T07:08:31.829Z, origin=O=Mock Company 2, L=London, C=GB, session_id=52d57ab0-7f79-4572-9771-9e7869c0d99a, session_timestamp=2023-01-31T07:08:31.829Z, thread-id=854, tx_id=65CD0F31393E80992D51904FBE7624FFF80B3010D47D03E5C49B3BB1929FA624}
[INFO ] 2023-01-31T07:08:31,945Z [Mock network] corda.flow. - Received transaction acknowledgement request from party O=Mock Company 2, L=London, C=GB. {fiber-id=10000019, flow-id=8569bac7-01f2-4829-85ed-456d790c15c2, invocation_id=52d57ab0-7f79-4572-9771-9e7869c0d99a, invocation_timestamp=2023-01-31T07:08:31.829Z, origin=O=Mock Company 2, L=London, C=GB, session_id=52d57ab0-7f79-4572-9771-9e7869c0d99a, session_timestamp=2023-01-31T07:08:31.829Z, thread-id=854, tx_id=36C16BADD7758188EA872AA8181BAD388A1EDF9FDACCFF8E93FC21EA687481CD}
[INFO ] 2023-01-31T07:08:31,950Z [Mock network] corda.flow. - Transaction dependencies resolution completed. {fiber-id=10000019, flow-id=8569bac7-01f2-4829-85ed-456d790c15c2, invocation_id=52d57ab0-7f79-4572-9771-9e7869c0d99a, invocation_timestamp=2023-01-31T07:08:31.829Z, origin=O=Mock Company 2, L=London, C=GB, session_id=52d57ab0-7f79-4572-9771-9e7869c0d99a, session_timestamp=2023-01-31T07:08:31.829Z, thread-id=854, tx_id=36C16BADD7758188EA872AA8181BAD388A1EDF9FDACCFF8E93FC21EA687481CD}
[INFO ] 2023-01-31T07:08:31,955Z [Mock network] corda.flow. - Successfully received fully signed tx. Sending it to the vault for processing. {fiber-id=10000019, flow-id=8569bac7-01f2-4829-85ed-456d790c15c2, invocation_id=52d57ab0-7f79-4572-9771-9e7869c0d99a, invocation_timestamp=2023-01-31T07:08:31.829Z, origin=O=Mock Company 2, L=London, C=GB, session_id=52d57ab0-7f79-4572-9771-9e7869c0d99a, session_timestamp=2023-01-31T07:08:31.829Z, thread-id=854, tx_id=36C16BADD7758188EA872AA8181BAD388A1EDF9FDACCFF8E93FC21EA687481CD}
[INFO ] 2023-01-31T07:08:31,958Z [Mock network] corda.flow. - Successfully recorded received transaction locally. {fiber-id=10000019, flow-id=8569bac7-01f2-4829-85ed-456d790c15c2, invocation_id=52d57ab0-7f79-4572-9771-9e7869c0d99a, invocation_timestamp=2023-01-31T07:08:31.829Z, origin=O=Mock Company 2, L=London, C=GB, session_id=52d57ab0-7f79-4572-9771-9e7869c0d99a, session_timestamp=2023-01-31T07:08:31.829Z, thread-id=854, tx_id=36C16BADD7758188EA872AA8181BAD388A1EDF9FDACCFF8E93FC21EA687481CD}
[INFO ] 2023-01-31T07:08:32,046Z [Mock network] corda.flow. - Received transaction acknowledgement request from party O=Mock Company 2, L=London, C=GB. {fiber-id=10000020, flow-id=068fc398-c964-4014-a764-d43fe6b3345d, invocation_id=6a8273e4-8028-42f8-bc52-093fe0829bc0, invocation_timestamp=2023-01-31T07:08:32.029Z, origin=O=Mock Company 2, L=London, C=GB, session_id=6a8273e4-8028-42f8-bc52-093fe0829bc0, session_timestamp=2023-01-31T07:08:32.029Z, thread-id=854, tx_id=397C4051A6566160E265F28907DAD16B96F48C20AA8F39811F4E4DF810C2B409}
[INFO ] 2023-01-31T07:08:32,179Z [Mock network] corda.flow. - Transaction dependencies resolution completed. {fiber-id=10000020, flow-id=068fc398-c964-4014-a764-d43fe6b3345d, invocation_id=6a8273e4-8028-42f8-bc52-093fe0829bc0, invocation_timestamp=2023-01-31T07:08:32.029Z, origin=O=Mock Company 2, L=London, C=GB, session_id=6a8273e4-8028-42f8-bc52-093fe0829bc0, session_timestamp=2023-01-31T07:08:32.029Z, thread-id=854, tx_id=397C4051A6566160E265F28907DAD16B96F48C20AA8F39811F4E4DF810C2B409}
[INFO ] 2023-01-31T07:08:32,231Z [Mock network] corda.flow. - Received transaction acknowledgement request from party O=Mock Company 2, L=London, C=GB. {fiber-id=10000021, flow-id=b762f74e-3fe3-4f98-89a4-b25b5b79a559, invocation_id=737a04ae-1d7c-4abc-a88d-44a347f6be63, invocation_timestamp=2023-01-31T07:08:32.224Z, origin=O=Mock Company 2, L=London, C=GB, session_id=737a04ae-1d7c-4abc-a88d-44a347f6be63, session_timestamp=2023-01-31T07:08:32.224Z, thread-id=854, tx_id=397C4051A6566160E265F28907DAD16B96F48C20AA8F39811F4E4DF810C2B409}
[INFO ] 2023-01-31T07:08:32,238Z [Mock network] corda.flow. - Transaction dependencies resolution completed. {fiber-id=10000021, flow-id=b762f74e-3fe3-4f98-89a4-b25b5b79a559, invocation_id=737a04ae-1d7c-4abc-a88d-44a347f6be63, invocation_timestamp=2023-01-31T07:08:32.224Z, origin=O=Mock Company 2, L=London, C=GB, session_id=737a04ae-1d7c-4abc-a88d-44a347f6be63, session_timestamp=2023-01-31T07:08:32.224Z, thread-id=854, tx_id=397C4051A6566160E265F28907DAD16B96F48C20AA8F39811F4E4DF810C2B409}
[INFO ] 2023-01-31T07:08:32,308Z [Mock network] corda.flow. - Sending transaction to notary: O=Notary, L=London, C=GB. {actor_id=Only For Testing, actor_owning_identity=O=Mock Company 2, L=London, C=GB, actor_store_id=TEST, fiber-id=10000016, flow-id=7c6cca45-ebf4-4d8f-ba63-3d0e6733d717, invocation_id=c84ada32-84e9-4d08-a5c7-74cac88168f9, invocation_timestamp=2023-01-31T07:08:31.669Z, origin=Only For Testing, session_id=c84ada32-84e9-4d08-a5c7-74cac88168f9, session_timestamp=2023-01-31T07:08:31.669Z, thread-id=854, tx_id=397C4051A6566160E265F28907DAD16B96F48C20AA8F39811F4E4DF810C2B409}
[INFO ] 2023-01-31T07:08:32,349Z [Mock network] corda.flow. - Received a notarisation request for Tx [397C4051A6566160E265F28907DAD16B96F48C20AA8F39811F4E4DF810C2B409] from [O=Mock Company 2, L=London, C=GB] {fiber-id=10000022, flow-id=c9f01d73-7680-49e8-bb38-96de283774a8, invocation_id=464a45df-573f-4008-8028-549b366188f3, invocation_timestamp=2023-01-31T07:08:32.334Z, origin=O=Mock Company 2, L=London, C=GB, session_id=464a45df-573f-4008-8028-549b366188f3, session_timestamp=2023-01-31T07:08:32.334Z, thread-id=854}
[INFO ] 2023-01-31T07:08:32,828Z [Notary request queue processor] jpa.JPAUniquenessProvider. - Processing notarization requests with 1 input states and 0 references {}
[INFO ] 2023-01-31T07:08:32,858Z [Mock network] corda.flow. - Transaction [397C4051A6566160E265F28907DAD16B96F48C20AA8F39811F4E4DF810C2B409] successfully notarised, sending signature back to [O=Mock Company 2, L=London, C=GB] {fiber-id=10000022, flow-id=c9f01d73-7680-49e8-bb38-96de283774a8, invocation_id=464a45df-573f-4008-8028-549b366188f3, invocation_timestamp=2023-01-31T07:08:32.334Z, origin=O=Mock Company 2, L=London, C=GB, session_id=464a45df-573f-4008-8028-549b366188f3, session_timestamp=2023-01-31T07:08:32.334Z, thread-id=854}
[INFO ] 2023-01-31T07:08:32,885Z [Mock network] corda.flow. - Notary responded (O=Notary, L=London, C=GB). {actor_id=Only For Testing, actor_owning_identity=O=Mock Company 2, L=London, C=GB, actor_store_id=TEST, fiber-id=10000016, flow-id=7c6cca45-ebf4-4d8f-ba63-3d0e6733d717, invocation_id=c84ada32-84e9-4d08-a5c7-74cac88168f9, invocation_timestamp=2023-01-31T07:08:31.669Z, origin=Only For Testing, session_id=c84ada32-84e9-4d08-a5c7-74cac88168f9, session_timestamp=2023-01-31T07:08:31.669Z, thread-id=854, tx_id=397C4051A6566160E265F28907DAD16B96F48C20AA8F39811F4E4DF810C2B409}
[INFO ] 2023-01-31T07:08:32,886Z [Mock network] corda.flow. - Recording transaction locally. {actor_id=Only For Testing, actor_owning_identity=O=Mock Company 2, L=London, C=GB, actor_store_id=TEST, fiber-id=10000016, flow-id=7c6cca45-ebf4-4d8f-ba63-3d0e6733d717, invocation_id=c84ada32-84e9-4d08-a5c7-74cac88168f9, invocation_timestamp=2023-01-31T07:08:31.669Z, origin=Only For Testing, session_id=c84ada32-84e9-4d08-a5c7-74cac88168f9, session_timestamp=2023-01-31T07:08:31.669Z, thread-id=854, tx_id=397C4051A6566160E265F28907DAD16B96F48C20AA8F39811F4E4DF810C2B409}
[INFO ] 2023-01-31T07:08:32,895Z [Mock network] corda.flow. - Recorded transaction locally successfully. {actor_id=Only For Testing, actor_owning_identity=O=Mock Company 2, L=London, C=GB, actor_store_id=TEST, fiber-id=10000016, flow-id=7c6cca45-ebf4-4d8f-ba63-3d0e6733d717, invocation_id=c84ada32-84e9-4d08-a5c7-74cac88168f9, invocation_timestamp=2023-01-31T07:08:31.669Z, origin=Only For Testing, session_id=c84ada32-84e9-4d08-a5c7-74cac88168f9, session_timestamp=2023-01-31T07:08:31.669Z, thread-id=854, tx_id=397C4051A6566160E265F28907DAD16B96F48C20AA8F39811F4E4DF810C2B409}
[INFO ] 2023-01-31T07:08:32,904Z [Mock network] corda.flow. - Received transaction acknowledgement request from party O=Mock Company 2, L=London, C=GB. {fiber-id=10000020, flow-id=068fc398-c964-4014-a764-d43fe6b3345d, invocation_id=6a8273e4-8028-42f8-bc52-093fe0829bc0, invocation_timestamp=2023-01-31T07:08:32.029Z, origin=O=Mock Company 2, L=London, C=GB, session_id=6a8273e4-8028-42f8-bc52-093fe0829bc0, session_timestamp=2023-01-31T07:08:32.029Z, thread-id=854, tx_id=397C4051A6566160E265F28907DAD16B96F48C20AA8F39811F4E4DF810C2B409}
[INFO ] 2023-01-31T07:08:32,910Z [Mock network] corda.flow. - Transaction dependencies resolution completed. {fiber-id=10000020, flow-id=068fc398-c964-4014-a764-d43fe6b3345d, invocation_id=6a8273e4-8028-42f8-bc52-093fe0829bc0, invocation_timestamp=2023-01-31T07:08:32.029Z, origin=O=Mock Company 2, L=London, C=GB, session_id=6a8273e4-8028-42f8-bc52-093fe0829bc0, session_timestamp=2023-01-31T07:08:32.029Z, thread-id=854, tx_id=397C4051A6566160E265F28907DAD16B96F48C20AA8F39811F4E4DF810C2B409}
[INFO ] 2023-01-31T07:08:32,916Z [Mock network] corda.flow. - Successfully received fully signed tx. Sending it to the vault for processing. {fiber-id=10000020, flow-id=068fc398-c964-4014-a764-d43fe6b3345d, invocation_id=6a8273e4-8028-42f8-bc52-093fe0829bc0, invocation_timestamp=2023-01-31T07:08:32.029Z, origin=O=Mock Company 2, L=London, C=GB, session_id=6a8273e4-8028-42f8-bc52-093fe0829bc0, session_timestamp=2023-01-31T07:08:32.029Z, thread-id=854, tx_id=397C4051A6566160E265F28907DAD16B96F48C20AA8F39811F4E4DF810C2B409}
[INFO ] 2023-01-31T07:08:32,920Z [Mock network] corda.flow. - Successfully recorded received transaction locally. {fiber-id=10000020, flow-id=068fc398-c964-4014-a764-d43fe6b3345d, invocation_id=6a8273e4-8028-42f8-bc52-093fe0829bc0, invocation_timestamp=2023-01-31T07:08:32.029Z, origin=O=Mock Company 2, L=London, C=GB, session_id=6a8273e4-8028-42f8-bc52-093fe0829bc0, session_timestamp=2023-01-31T07:08:32.029Z, thread-id=854, tx_id=397C4051A6566160E265F28907DAD16B96F48C20AA8F39811F4E4DF810C2B409}
[WARN ] 2023-01-31T07:08:32,923Z [Mock network] persistence.AbstractPartyToX500NameAsStringConverter. - Identity service unable to resolve AbstractParty: Anonymous(DL4Wh5n6Xxw8ZQgTgqpxBFzDVwQQX2rrgbwanqdQN2rsXK) {actor_id=Only For Testing, actor_owning_identity=O=Mock Company 2, L=London, C=GB, actor_store_id=TEST, fiber-id=10000020, flow-id=068fc398-c964-4014-a764-d43fe6b3345d, invocation_id=6a8273e4-8028-42f8-bc52-093fe0829bc0, invocation_timestamp=2023-01-31T07:08:32.029Z, origin=O=Mock Company 2, L=London, C=GB, session_id=6a8273e4-8028-42f8-bc52-093fe0829bc0, session_timestamp=2023-01-31T07:08:32.029Z, thread-id=854}
[INFO ] 2023-01-31T07:08:32,927Z [Mock network] corda.flow. - Party O=Mock Company 3, L=London, C=GB received the transaction. {actor_id=Only For Testing, actor_owning_identity=O=Mock Company 2, L=London, C=GB, actor_store_id=TEST, fiber-id=10000016, flow-id=7c6cca45-ebf4-4d8f-ba63-3d0e6733d717, invocation_id=c84ada32-84e9-4d08-a5c7-74cac88168f9, invocation_timestamp=2023-01-31T07:08:31.669Z, origin=Only For Testing, session_id=c84ada32-84e9-4d08-a5c7-74cac88168f9, session_timestamp=2023-01-31T07:08:31.669Z, thread-id=854, tx_id=397C4051A6566160E265F28907DAD16B96F48C20AA8F39811F4E4DF810C2B409}
[INFO ] 2023-01-31T07:08:32,934Z [Mock network] corda.flow. - Received transaction acknowledgement request from party O=Mock Company 2, L=London, C=GB. {fiber-id=10000021, flow-id=b762f74e-3fe3-4f98-89a4-b25b5b79a559, invocation_id=737a04ae-1d7c-4abc-a88d-44a347f6be63, invocation_timestamp=2023-01-31T07:08:32.224Z, origin=O=Mock Company 2, L=London, C=GB, session_id=737a04ae-1d7c-4abc-a88d-44a347f6be63, session_timestamp=2023-01-31T07:08:32.224Z, thread-id=854, tx_id=397C4051A6566160E265F28907DAD16B96F48C20AA8F39811F4E4DF810C2B409}
[INFO ] 2023-01-31T07:08:32,940Z [Mock network] corda.flow. - Transaction dependencies resolution completed. {fiber-id=10000021, flow-id=b762f74e-3fe3-4f98-89a4-b25b5b79a559, invocation_id=737a04ae-1d7c-4abc-a88d-44a347f6be63, invocation_timestamp=2023-01-31T07:08:32.224Z, origin=O=Mock Company 2, L=London, C=GB, session_id=737a04ae-1d7c-4abc-a88d-44a347f6be63, session_timestamp=2023-01-31T07:08:32.224Z, thread-id=854, tx_id=397C4051A6566160E265F28907DAD16B96F48C20AA8F39811F4E4DF810C2B409}
[INFO ] 2023-01-31T07:08:32,946Z [Mock network] corda.flow. - Successfully received fully signed tx. Sending it to the vault for processing. {fiber-id=10000021, flow-id=b762f74e-3fe3-4f98-89a4-b25b5b79a559, invocation_id=737a04ae-1d7c-4abc-a88d-44a347f6be63, invocation_timestamp=2023-01-31T07:08:32.224Z, origin=O=Mock Company 2, L=London, C=GB, session_id=737a04ae-1d7c-4abc-a88d-44a347f6be63, session_timestamp=2023-01-31T07:08:32.224Z, thread-id=854, tx_id=397C4051A6566160E265F28907DAD16B96F48C20AA8F39811F4E4DF810C2B409}
[INFO ] 2023-01-31T07:08:32,953Z [Mock network] corda.flow. - Successfully recorded received transaction locally. {fiber-id=10000021, flow-id=b762f74e-3fe3-4f98-89a4-b25b5b79a559, invocation_id=737a04ae-1d7c-4abc-a88d-44a347f6be63, invocation_timestamp=2023-01-31T07:08:32.224Z, origin=O=Mock Company 2, L=London, C=GB, session_id=737a04ae-1d7c-4abc-a88d-44a347f6be63, session_timestamp=2023-01-31T07:08:32.224Z, thread-id=854, tx_id=397C4051A6566160E265F28907DAD16B96F48C20AA8F39811F4E4DF810C2B409}
[WARN ] 2023-01-31T07:08:32,955Z [Mock network] persistence.AbstractPartyToX500NameAsStringConverter. - Identity service unable to resolve AbstractParty: Anonymous(DLArfsNxSrxYiD4Af7N7nfgykJNFEEwG1qYGU5Msgn9Khs) {actor_id=Only For Testing, actor_owning_identity=O=Mock Company 2, L=London, C=GB, actor_store_id=TEST, fiber-id=10000021, flow-id=b762f74e-3fe3-4f98-89a4-b25b5b79a559, invocation_id=737a04ae-1d7c-4abc-a88d-44a347f6be63, invocation_timestamp=2023-01-31T07:08:32.224Z, origin=O=Mock Company 2, L=London, C=GB, session_id=737a04ae-1d7c-4abc-a88d-44a347f6be63, session_timestamp=2023-01-31T07:08:32.224Z, thread-id=854}
[INFO ] 2023-01-31T07:08:32,961Z [Mock network] corda.flow. - Party O=Mock Company 1, L=London, C=GB received the transaction. {actor_id=Only For Testing, actor_owning_identity=O=Mock Company 2, L=London, C=GB, actor_store_id=TEST, fiber-id=10000016, flow-id=7c6cca45-ebf4-4d8f-ba63-3d0e6733d717, invocation_id=c84ada32-84e9-4d08-a5c7-74cac88168f9, invocation_timestamp=2023-01-31T07:08:31.669Z, origin=Only For Testing, session_id=c84ada32-84e9-4d08-a5c7-74cac88168f9, session_timestamp=2023-01-31T07:08:31.669Z, thread-id=854, tx_id=397C4051A6566160E265F28907DAD16B96F48C20AA8F39811F4E4DF810C2B409}
[INFO ] 2023-01-31T07:08:32,961Z [Mock network] corda.flow. - All parties received the transaction successfully. {actor_id=Only For Testing, actor_owning_identity=O=Mock Company 2, L=London, C=GB, actor_store_id=TEST, fiber-id=10000016, flow-id=7c6cca45-ebf4-4d8f-ba63-3d0e6733d717, invocation_id=c84ada32-84e9-4d08-a5c7-74cac88168f9, invocation_timestamp=2023-01-31T07:08:31.669Z, origin=Only For Testing, session_id=c84ada32-84e9-4d08-a5c7-74cac88168f9, session_timestamp=2023-01-31T07:08:31.669Z, thread-id=854, tx_id=397C4051A6566160E265F28907DAD16B96F48C20AA8F39811F4E4DF810C2B409}
[INFO ] 2023-01-31T07:08:32,984Z [Mock network] identity.PersistentIdentityService. - Linking: 173DA311F62CC6155158384A66D590F4D26225967CFCC73662E72FF07F2D83D3 to O=Mock Company 1, L=London, C=GB {actor_id=Only For Testing, actor_owning_identity=O=Mock Company 1, L=London, C=GB, actor_store_id=TEST, fiber-id=10000024, flow-id=b80b658b-b255-4b48-9455-ec9dc5755972, invocation_id=a30d5623-5913-4cbb-983c-dda19a95f1aa, invocation_timestamp=2023-01-31T07:08:32.979Z, origin=Only For Testing, session_id=a30d5623-5913-4cbb-983c-dda19a95f1aa, session_timestamp=2023-01-31T07:08:32.979Z, thread-id=854}
[INFO ] 2023-01-31T07:08:33,103Z [Mock network] corda.flow. - No need to notarise this transaction. {actor_id=Only For Testing, actor_owning_identity=O=Mock Company 1, L=London, C=GB, actor_store_id=TEST, fiber-id=10000024, flow-id=b80b658b-b255-4b48-9455-ec9dc5755972, invocation_id=a30d5623-5913-4cbb-983c-dda19a95f1aa, invocation_timestamp=2023-01-31T07:08:32.979Z, origin=Only For Testing, session_id=a30d5623-5913-4cbb-983c-dda19a95f1aa, session_timestamp=2023-01-31T07:08:32.979Z, thread-id=854, tx_id=AD8279DD8214BAD7FE6BFFC770B6CDB85895224726E38BCAE4A4476FB0F94F8F}
[INFO ] 2023-01-31T07:08:33,103Z [Mock network] corda.flow. - Recording transaction locally. {actor_id=Only For Testing, actor_owning_identity=O=Mock Company 1, L=London, C=GB, actor_store_id=TEST, fiber-id=10000024, flow-id=b80b658b-b255-4b48-9455-ec9dc5755972, invocation_id=a30d5623-5913-4cbb-983c-dda19a95f1aa, invocation_timestamp=2023-01-31T07:08:32.979Z, origin=Only For Testing, session_id=a30d5623-5913-4cbb-983c-dda19a95f1aa, session_timestamp=2023-01-31T07:08:32.979Z, thread-id=854, tx_id=AD8279DD8214BAD7FE6BFFC770B6CDB85895224726E38BCAE4A4476FB0F94F8F}
[INFO ] 2023-01-31T07:08:33,121Z [Mock network] corda.flow. - Recorded transaction locally successfully. {actor_id=Only For Testing, actor_owning_identity=O=Mock Company 1, L=London, C=GB, actor_store_id=TEST, fiber-id=10000024, flow-id=b80b658b-b255-4b48-9455-ec9dc5755972, invocation_id=a30d5623-5913-4cbb-983c-dda19a95f1aa, invocation_timestamp=2023-01-31T07:08:32.979Z, origin=Only For Testing, session_id=a30d5623-5913-4cbb-983c-dda19a95f1aa, session_timestamp=2023-01-31T07:08:32.979Z, thread-id=854, tx_id=AD8279DD8214BAD7FE6BFFC770B6CDB85895224726E38BCAE4A4476FB0F94F8F}
[INFO ] 2023-01-31T07:08:33,121Z [Mock network] corda.flow. - All parties received the transaction successfully. {actor_id=Only For Testing, actor_owning_identity=O=Mock Company 1, L=London, C=GB, actor_store_id=TEST, fiber-id=10000024, flow-id=b80b658b-b255-4b48-9455-ec9dc5755972, invocation_id=a30d5623-5913-4cbb-983c-dda19a95f1aa, invocation_timestamp=2023-01-31T07:08:32.979Z, origin=Only For Testing, session_id=a30d5623-5913-4cbb-983c-dda19a95f1aa, session_timestamp=2023-01-31T07:08:32.979Z, thread-id=854, tx_id=AD8279DD8214BAD7FE6BFFC770B6CDB85895224726E38BCAE4A4476FB0F94F8F}
[INFO ] 2023-01-31T07:08:33,140Z [Mock network] identity.PersistentIdentityService. - Linking: 9AD13A70255B0A24C9F2520EEF78285AE071629668389F6DE77CBE79FFE0E450 to O=Mock Company 1, L=London, C=GB {actor_id=Only For Testing, actor_owning_identity=O=Mock Company 1, L=London, C=GB, actor_store_id=TEST, fiber-id=10000025, flow-id=e44a858f-53b9-4246-8461-75280cce4796, invocation_id=a9cdf8e3-f2a3-4d44-8c5c-cb5b10068d10, invocation_timestamp=2023-01-31T07:08:33.137Z, origin=Only For Testing, session_id=a9cdf8e3-f2a3-4d44-8c5c-cb5b10068d10, session_timestamp=2023-01-31T07:08:33.137Z, thread-id=854}
[INFO ] 2023-01-31T07:08:33,152Z [Mock network] corda.flow. - No need to notarise this transaction. {actor_id=Only For Testing, actor_owning_identity=O=Mock Company 1, L=London, C=GB, actor_store_id=TEST, fiber-id=10000025, flow-id=e44a858f-53b9-4246-8461-75280cce4796, invocation_id=a9cdf8e3-f2a3-4d44-8c5c-cb5b10068d10, invocation_timestamp=2023-01-31T07:08:33.137Z, origin=Only For Testing, session_id=a9cdf8e3-f2a3-4d44-8c5c-cb5b10068d10, session_timestamp=2023-01-31T07:08:33.137Z, thread-id=854, tx_id=6952154D84C2DFF2C5214EADEFC064FA50A31F1AC4DC839F06B1656F2E1513D8}
[INFO ] 2023-01-31T07:08:33,152Z [Mock network] corda.flow. - Recording transaction locally. {actor_id=Only For Testing, actor_owning_identity=O=Mock Company 1, L=London, C=GB, actor_store_id=TEST, fiber-id=10000025, flow-id=e44a858f-53b9-4246-8461-75280cce4796, invocation_id=a9cdf8e3-f2a3-4d44-8c5c-cb5b10068d10, invocation_timestamp=2023-01-31T07:08:33.137Z, origin=Only For Testing, session_id=a9cdf8e3-f2a3-4d44-8c5c-cb5b10068d10, session_timestamp=2023-01-31T07:08:33.137Z, thread-id=854, tx_id=6952154D84C2DFF2C5214EADEFC064FA50A31F1AC4DC839F06B1656F2E1513D8}
[INFO ] 2023-01-31T07:08:33,157Z [Mock network] corda.flow. - Recorded transaction locally successfully. {actor_id=Only For Testing, actor_owning_identity=O=Mock Company 1, L=London, C=GB, actor_store_id=TEST, fiber-id=10000025, flow-id=e44a858f-53b9-4246-8461-75280cce4796, invocation_id=a9cdf8e3-f2a3-4d44-8c5c-cb5b10068d10, invocation_timestamp=2023-01-31T07:08:33.137Z, origin=Only For Testing, session_id=a9cdf8e3-f2a3-4d44-8c5c-cb5b10068d10, session_timestamp=2023-01-31T07:08:33.137Z, thread-id=854, tx_id=6952154D84C2DFF2C5214EADEFC064FA50A31F1AC4DC839F06B1656F2E1513D8}
[INFO ] 2023-01-31T07:08:33,157Z [Mock network] corda.flow. - All parties received the transaction successfully. {actor_id=Only For Testing, actor_owning_identity=O=Mock Company 1, L=London, C=GB, actor_store_id=TEST, fiber-id=10000025, flow-id=e44a858f-53b9-4246-8461-75280cce4796, invocation_id=a9cdf8e3-f2a3-4d44-8c5c-cb5b10068d10, invocation_timestamp=2023-01-31T07:08:33.137Z, origin=Only For Testing, session_id=a9cdf8e3-f2a3-4d44-8c5c-cb5b10068d10, session_timestamp=2023-01-31T07:08:33.137Z, thread-id=854, tx_id=6952154D84C2DFF2C5214EADEFC064FA50A31F1AC4DC839F06B1656F2E1513D8}
[INFO ] 2023-01-31T07:08:33,189Z [Mock network] identity.PersistentIdentityService. - Linking: 4F9815106D3AAB89D765120D0F72129BD8045C59BEEAC8EBEC73B585E57EEF72 to O=Mock Company 1, L=London, C=GB {actor_id=Only For Testing, actor_owning_identity=O=Mock Company 1, L=London, C=GB, actor_store_id=TEST, fiber-id=10000027, flow-id=22fcb1c3-b5fb-4384-a563-f056a848c9bf, invocation_id=a44904ba-ec75-4986-be2c-5a017403c704, invocation_timestamp=2023-01-31T07:08:33.182Z, origin=Only For Testing, session_id=a44904ba-ec75-4986-be2c-5a017403c704, session_timestamp=2023-01-31T07:08:33.182Z, thread-id=854}
[INFO ] 2023-01-31T07:08:33,234Z [Mock network] identity.PersistentIdentityService. - Linking: 62B5033BFA5440F1CB1FB0DBAEB9DC2133E729C9A7436D0A4FA6BAABC170B0FE to O=Mock Company 3, L=London, C=GB {fiber-id=10000028, flow-id=c4b0bb28-d440-47c9-b137-53a95301fd6a, invocation_id=ee412b3f-24a8-41bd-b080-e1e86aa1bb19, invocation_timestamp=2023-01-31T07:08:33.210Z, origin=O=Mock Company 1, L=London, C=GB, session_id=ee412b3f-24a8-41bd-b080-e1e86aa1bb19, session_timestamp=2023-01-31T07:08:33.210Z, thread-id=854}
[INFO ] 2023-01-31T07:08:33,244Z [Mock network] identity.PersistentIdentityService. - Linking: 62B5033BFA5440F1CB1FB0DBAEB9DC2133E729C9A7436D0A4FA6BAABC170B0FE to O=Mock Company 3, L=London, C=GB {actor_id=Only For Testing, actor_owning_identity=O=Mock Company 1, L=London, C=GB, actor_store_id=TEST, fiber-id=10000027, flow-id=22fcb1c3-b5fb-4384-a563-f056a848c9bf, invocation_id=a44904ba-ec75-4986-be2c-5a017403c704, invocation_timestamp=2023-01-31T07:08:33.182Z, origin=Only For Testing, session_id=a44904ba-ec75-4986-be2c-5a017403c704, session_timestamp=2023-01-31T07:08:33.182Z, thread-id=854}
[INFO ] 2023-01-31T07:08:33,662Z [Mock network] corda.flow. - Received transaction acknowledgement request from party O=Mock Company 1, L=London, C=GB. {fiber-id=10000029, flow-id=cae64fda-d94b-4030-8562-3cb8f97a87f1, invocation_id=e0c93ab2-f782-484f-a5df-68a019267e50, invocation_timestamp=2023-01-31T07:08:33.651Z, origin=O=Mock Company 1, L=London, C=GB, session_id=e0c93ab2-f782-484f-a5df-68a019267e50, session_timestamp=2023-01-31T07:08:33.651Z, thread-id=854, tx_id=0DFF1D65C786D2F8443A0291C9DD252856A4D061214F27B9FC98D7C999E3139E}
[INFO ] 2023-01-31T07:08:33,922Z [Mock network] corda.flow. - Transaction dependencies resolution completed. {fiber-id=10000029, flow-id=cae64fda-d94b-4030-8562-3cb8f97a87f1, invocation_id=e0c93ab2-f782-484f-a5df-68a019267e50, invocation_timestamp=2023-01-31T07:08:33.651Z, origin=O=Mock Company 1, L=London, C=GB, session_id=e0c93ab2-f782-484f-a5df-68a019267e50, session_timestamp=2023-01-31T07:08:33.651Z, thread-id=854, tx_id=0DFF1D65C786D2F8443A0291C9DD252856A4D061214F27B9FC98D7C999E3139E}
[INFO ] 2023-01-31T07:08:34,023Z [Mock network] corda.flow. - Flow raised an error: Could not find Party for Anonymous(DLArfsNxSrxYiD4Af7N7nfgykJNFEEwG1qYGU5Msgn9Khs). Sending it to flow hospital to be triaged. {actor_id=Only For Testing, actor_owning_identity=O=Mock Company 1, L=London, C=GB, actor_store_id=TEST, fiber-id=10000027, flow-id=22fcb1c3-b5fb-4384-a563-f056a848c9bf, invocation_id=a44904ba-ec75-4986-be2c-5a017403c704, invocation_timestamp=2023-01-31T07:08:33.182Z, origin=Only For Testing, session_id=a44904ba-ec75-4986-be2c-5a017403c704, session_timestamp=2023-01-31T07:08:33.182Z, thread-id=854, tx_id=0DFF1D65C786D2F8443A0291C9DD252856A4D061214F27B9FC98D7C999E3139E}
[INFO ] 2023-01-31T07:08:34,030Z [Mock network] statemachine.StaffedFlowHospital. - Flow [22fcb1c3-b5fb-4384-a563-f056a848c9bf] admitted to hospital in state StateMachineState(checkpoint=Checkpoint(checkpointState=CheckpointState(invocationContext=InvocationContext(origin=RPC(actor=Actor(id=Id(value=Only For Testing), serviceId=AuthServiceId(value=TEST), owningLegalIdentity=O=Mock Company 1, L=London, C=GB)), trace=Trace(invocationId=a44904ba-ec75-4986-be2c-5a017403c704, timestamp: 2023-01-31T07:08:33.182Z, entityType: Invocation, sessionId=a44904ba-ec75-4986-be2c-5a017403c704, timestamp: 2023-01-31T07:08:33.182Z, entityType: Session), actor=Actor(id=Id(value=Only For Testing), serviceId=AuthServiceId(value=TEST), owningLegalIdentity=O=Mock Company 1, L=London, C=GB), externalTrace=null, impersonatedActor=null, arguments=[], clientId=null), ourIdentity=O=Mock Company 1, L=London, C=GB, sessions={SessionId(toLong=-5366150003449329455)=Initiated(peerParty=O=Mock Company 3, L=London, C=GB, peerFlowInfo=FlowInfo(flowVersion=1, appName=<unknown>), receivedMessages=[], otherSideErrored=false, peerSinkSessionId=SessionId(toLong=-8071260149716765667), deduplicationSeed=R--5366150003449329455--6169107910265396549)}, sessionsToBeClosed=[], subFlowStack=[Initiating(flowClass=class net.corda.samples.obligation.flows.IOUSettleFlow, classToInitiateWith=class net.corda.samples.obligation.flows.IOUSettleFlow, flowInfo=FlowInfo(flowVersion=1, appName=<unknown>), subFlowVersion=CorDappFlow(platformVersion=11, corDappName=workflows-1.0, corDappHash=C516E48A6E6E70A0AB3D8BD39F2350C2FEFECFE936F017EBB2142877462D44D3), isEnabledTimedFlow=false)], numberOfSuspends=6, numberOfCommits=7), flowState=Started(flowIORequest=Receive(sessions=[FlowSessionImpl(destination=O=Mock Company 3, L=London, C=GB, sourceSessionId=SessionId(toLong=-5366150003449329455))]), frozenFiber=C035A1309FE585750ED12DDFAD73E66663397EC0D1334F075FD37DF06B5F8048), errorState=Clean, result=null, status=RUNNABLE, progressStep=Starting, flowIoRequest=Receive, compatible=true), flowLogic=net.corda.samples.obligation.flows.IOUSettleFlow@290e5cae, pendingDeduplicationHandlers=[net.corda.testing.node.internal.MockNodeMessagingService$InMemoryDeduplicationHandler@a8aadcd], isFlowResumed=true, isWaitingForFuture=false, future=null, isAnyCheckpointPersisted=true, isStartIdempotent=false, isRemoved=false, isKilled=false, isDead=false, senderUUID=6085e859-0547-41f5-8009-8ac07555639a, reloadCheckpointAfterSuspendCount=null, numberOfCommits=7, lock=java.util.concurrent.Semaphore@168b50ad[Permits = 0]) {actor_id=Only For Testing, actor_owning_identity=O=Mock Company 1, L=London, C=GB, actor_store_id=TEST, fiber-id=10000027, flow-id=22fcb1c3-b5fb-4384-a563-f056a848c9bf, invocation_id=a44904ba-ec75-4986-be2c-5a017403c704, invocation_timestamp=2023-01-31T07:08:33.182Z, origin=Only For Testing, session_id=a44904ba-ec75-4986-be2c-5a017403c704, session_timestamp=2023-01-31T07:08:33.182Z, thread-id=854, tx_id=0DFF1D65C786D2F8443A0291C9DD252856A4D061214F27B9FC98D7C999E3139E}
[INFO ] 2023-01-31T07:08:34,033Z [Mock network] statemachine.StaffedFlowHospital. - Error 1 of 1: {actor_id=Only For Testing, actor_owning_identity=O=Mock Company 1, L=London, C=GB, actor_store_id=TEST, fiber-id=10000027, flow-id=22fcb1c3-b5fb-4384-a563-f056a848c9bf, invocation_id=a44904ba-ec75-4986-be2c-5a017403c704, invocation_timestamp=2023-01-31T07:08:33.182Z, origin=Only For Testing, session_id=a44904ba-ec75-4986-be2c-5a017403c704, session_timestamp=2023-01-31T07:08:33.182Z, thread-id=854, tx_id=0DFF1D65C786D2F8443A0291C9DD252856A4D061214F27B9FC98D7C999E3139E}
java.lang.IllegalArgumentException: Could not find Party for Anonymous(DLArfsNxSrxYiD4Af7N7nfgykJNFEEwG1qYGU5Msgn9Khs)
	at net.corda.core.identity.IdentityUtils.groupAbstractPartyByWellKnownParty(IdentityUtils.kt:47) ~[corda-core-4.9.jar:?]
	at net.corda.core.identity.IdentityUtils.groupAbstractPartyByWellKnownParty(IdentityUtils.kt:63) ~[corda-core-4.9.jar:?]
	at net.corda.core.flows.FinalityFlow.extractExternalParticipants(FinalityFlow.kt:252) ~[corda-core-4.9.jar:?]
	at net.corda.core.flows.FinalityFlow.call(FinalityFlow.kt:162) ~[corda-core-4.9.jar:?]
	at net.corda.core.flows.FinalityFlow.call(FinalityFlow.kt:43) ~[corda-core-4.9.jar:?]
	at net.corda.node.services.statemachine.FlowStateMachineImpl.subFlow(FlowStateMachineImpl.kt:420) ~[corda-node-4.9.jar:?]
	at net.corda.core.flows.FlowLogic.subFlow(FlowLogic.kt:409) ~[corda-core-4.9.jar:?]
	at net.corda.samples.obligation.flows.IOUSettleFlow.call(IOUSettleFlow.kt:116) ~[main/:?]
	at net.corda.samples.obligation.flows.IOUSettleFlow.call(IOUSettleFlow.kt:30) ~[main/:?]
	at net.corda.node.services.statemachine.FlowStateMachineImpl.run(FlowStateMachineImpl.kt:349) ~[corda-node-4.9.jar:?]
	at net.corda.node.services.statemachine.FlowStateMachineImpl.run(FlowStateMachineImpl.kt:71) ~[corda-node-4.9.jar:?]
	at co.paralleluniverse.fibers.Fiber.run1(Fiber.java:1092) ~[quasar-core-0.7.10.jar:0.7.10]
	at co.paralleluniverse.fibers.Fiber.exec(Fiber.java:788) ~[quasar-core-0.7.10.jar:0.7.10]
	at co.paralleluniverse.fibers.RunnableFiberTask.doExec(RunnableFiberTask.java:100) ~[quasar-core-0.7.10.jar:0.7.10]
	at co.paralleluniverse.fibers.RunnableFiberTask.run(RunnableFiberTask.java:91) ~[quasar-core-0.7.10.jar:0.7.10]
	at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511) ~[?:1.8.0_202]
	at java.util.concurrent.FutureTask.run(FutureTask.java:266) ~[?:1.8.0_202]
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.access$201(ScheduledThreadPoolExecutor.java:180) ~[?:1.8.0_202]
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.run(ScheduledThreadPoolExecutor.java:293) ~[?:1.8.0_202]
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149) ~[?:1.8.0_202]
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624) ~[?:1.8.0_202]
	at net.corda.node.utilities.AffinityExecutor$ServiceAffinityExecutor$1$thread$1.run(AffinityExecutor.kt:63) ~[corda-node-4.9.jar:?]
[INFO ] 2023-01-31T07:08:34,037Z [Mock network] statemachine.StaffedFlowHospital. - Flow error allowed to propagate {actor_id=Only For Testing, actor_owning_identity=O=Mock Company 1, L=London, C=GB, actor_store_id=TEST, fiber-id=10000027, flow-id=22fcb1c3-b5fb-4384-a563-f056a848c9bf, invocation_id=a44904ba-ec75-4986-be2c-5a017403c704, invocation_timestamp=2023-01-31T07:08:33.182Z, origin=Only For Testing, session_id=a44904ba-ec75-4986-be2c-5a017403c704, session_timestamp=2023-01-31T07:08:33.182Z, thread-id=854, tx_id=0DFF1D65C786D2F8443A0291C9DD252856A4D061214F27B9FC98D7C999E3139E}
java.lang.IllegalArgumentException: Could not find Party for Anonymous(DLArfsNxSrxYiD4Af7N7nfgykJNFEEwG1qYGU5Msgn9Khs)
	at net.corda.core.identity.IdentityUtils.groupAbstractPartyByWellKnownParty(IdentityUtils.kt:47) ~[corda-core-4.9.jar:?]
	at net.corda.core.identity.IdentityUtils.groupAbstractPartyByWellKnownParty(IdentityUtils.kt:63) ~[corda-core-4.9.jar:?]
	at net.corda.core.flows.FinalityFlow.extractExternalParticipants(FinalityFlow.kt:252) ~[corda-core-4.9.jar:?]
	at net.corda.core.flows.FinalityFlow.call(FinalityFlow.kt:162) ~[corda-core-4.9.jar:?]
	at net.corda.core.flows.FinalityFlow.call(FinalityFlow.kt:43) ~[corda-core-4.9.jar:?]
	at net.corda.node.services.statemachine.FlowStateMachineImpl.subFlow(FlowStateMachineImpl.kt:420) ~[corda-node-4.9.jar:?]
	at net.corda.core.flows.FlowLogic.subFlow(FlowLogic.kt:409) ~[corda-core-4.9.jar:?]
	at net.corda.samples.obligation.flows.IOUSettleFlow.call(IOUSettleFlow.kt:116) ~[main/:?]
	at net.corda.samples.obligation.flows.IOUSettleFlow.call(IOUSettleFlow.kt:30) ~[main/:?]
	at net.corda.node.services.statemachine.FlowStateMachineImpl.run(FlowStateMachineImpl.kt:349) ~[corda-node-4.9.jar:?]
	at net.corda.node.services.statemachine.FlowStateMachineImpl.run(FlowStateMachineImpl.kt:71) ~[corda-node-4.9.jar:?]
	at co.paralleluniverse.fibers.Fiber.run1(Fiber.java:1092) ~[quasar-core-0.7.10.jar:0.7.10]
	at co.paralleluniverse.fibers.Fiber.exec(Fiber.java:788) ~[quasar-core-0.7.10.jar:0.7.10]
	at co.paralleluniverse.fibers.RunnableFiberTask.doExec(RunnableFiberTask.java:100) ~[quasar-core-0.7.10.jar:0.7.10]
	at co.paralleluniverse.fibers.RunnableFiberTask.run(RunnableFiberTask.java:91) ~[quasar-core-0.7.10.jar:0.7.10]
	at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511) ~[?:1.8.0_202]
	at java.util.concurrent.FutureTask.run(FutureTask.java:266) ~[?:1.8.0_202]
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.access$201(ScheduledThreadPoolExecutor.java:180) ~[?:1.8.0_202]
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.run(ScheduledThreadPoolExecutor.java:293) ~[?:1.8.0_202]
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149) ~[?:1.8.0_202]
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624) ~[?:1.8.0_202]
	at net.corda.node.utilities.AffinityExecutor$ServiceAffinityExecutor$1$thread$1.run(AffinityExecutor.kt:63) ~[corda-node-4.9.jar:?]
[WARN ] 2023-01-31T07:08:34,071Z [Mock network] interceptors.DumpHistoryOnErrorInterceptor. - Flow [22fcb1c3-b5fb-4384-a563-f056a848c9bf] errored, dumping all transitions:

 --- Transition of flow [22fcb1c3-b5fb-4384-a563-f056a848c9bf] ---
  Timestamp: 2023-01-31T07:08:33.185Z
  Event: DoRemainingWork
  Actions: 
    CreateTransaction
    PersistCheckpoint(id=[22fcb1c3-b5fb-4384-a563-f056a848c9bf], checkpoint=Checkpoint(checkpointState=CheckpointState(invocationContext=InvocationContext(origin=RPC(actor=Actor(id=Id(value=Only For Testing), serviceId=AuthServiceId(value=TEST), owningLegalIdentity=O=Mock Company 1, L=London, C=GB)), trace=Trace(invocationId=a44904ba-ec75-4986-be2c-5a017403c704, timestamp: 2023-01-31T07:08:33.182Z, entityType: Invocation, sessionId=a44904ba-ec75-4986-be2c-5a017403c704, timestamp: 2023-01-31T07:08:33.182Z, entityType: Session), actor=Actor(id=Id(value=Only For Testing), serviceId=AuthServiceId(value=TEST), owningLegalIdentity=O=Mock Company 1, L=London, C=GB), externalTrace=null, impersonatedActor=null, arguments=[], clientId=null), ourIdentity=O=Mock Company 1, L=London, C=GB, sessions={}, sessionsToBeClosed=[], subFlowStack=[Initiating(flowClass=class net.corda.samples.obligation.flows.IOUSettleFlow, classToInitiateWith=class net.corda.samples.obligation.flows.IOUSettleFlow, flowInfo=FlowInfo(flowVersion=1, appName=<unknown>), subFlowVersion=CorDappFlow(platformVersion=11, corDappName=workflows-1.0, corDappHash=C516E48A6E6E70A0AB3D8BD39F2350C2FEFECFE936F017EBB2142877462D44D3), isEnabledTimedFlow=false)], numberOfSuspends=0, numberOfCommits=1), flowState=Unstarted(flowStart=Explicit, frozenFlowLogic=4FBAA4D7968AB6F06AB201FECA8EBC6663A6EFD0B75D98B6FFFB39906D1C5777), errorState=Clean, result=null, status=RUNNABLE, progressStep=null, flowIoRequest=null, compatible=true), isCheckpointUpdate=false)
    PersistDeduplicationFacts(deduplicationHandlers=[net.corda.node.internal.FlowStarterImpl$startFlow$startFlowEvent$1@e1e8bb6])
    CommitTransaction
    AcknowledgeMessages(deduplicationHandlers=[net.corda.node.internal.FlowStarterImpl$startFlow$startFlowEvent$1@e1e8bb6])
    SignalFlowHasStarted(flowId=[22fcb1c3-b5fb-4384-a563-f056a848c9bf])
    CreateTransaction
  Continuation: Resume(result=null)
  Diff between previous and next state:
pendingDeduplicationHandlers: 
    [net.corda.node.internal.FlowStarterImpl$startFlow$startFlowEvent$1@e1e8bb6]
    []
isAnyCheckpointPersisted: 
    false
    true
isFlowResumed: 
    false
    true


 --- Transition of flow [22fcb1c3-b5fb-4384-a563-f056a848c9bf] ---
  Timestamp: 2023-01-31T07:08:33.188Z
  Event: EnterSubFlow(subFlowClass=class net.corda.samples.obligation.accountUtil.NewKeyForAccount, subFlowVersion=CorDappFlow(platformVersion=11, corDappName=workflows-1.0, corDappHash=C516E48A6E6E70A0AB3D8BD39F2350C2FEFECFE936F017EBB2142877462D44D3), isEnabledTimedFlow=false)
  Actions: 
    
  Continuation: ProcessEvents
  Diff between previous and next state:
checkpoint.checkpointState.subFlowStack: 
    [Initiating(flowClass=class net.corda.samples.obligation.flows.IOUSettleFlow, classToInitiateWith=class net.corda.samples.obligation.flows.IOUSettleFlow, flowInfo=FlowInfo(flowVersion=1, appName=<unknown>), subFlowVersion=CorDappFlow(platformVersion=11, corDappName=workflows-1.0, corDappHash=C516E48A6E6E70A0AB3D8BD39F2350C2FEFECFE936F017EBB2142877462D44D3), isEnabledTimedFlow=false)]
    [Initiating(flowClass=class net.corda.samples.obligation.flows.IOUSettleFlow, classToInitiateWith=class net.corda.samples.obligation.flows.IOUSettleFlow, flowInfo=FlowInfo(flowVersion=1, appName=<unknown>), subFlowVersion=CorDappFlow(platformVersion=11, corDappName=workflows-1.0, corDappHash=C516E48A6E6E70A0AB3D8BD39F2350C2FEFECFE936F017EBB2142877462D44D3), isEnabledTimedFlow=false), Inlined(flowClass=class net.corda.samples.obligation.accountUtil.NewKeyForAccount, subFlowVersion=CorDappFlow(platformVersion=11, corDappName=workflows-1.0, corDappHash=C516E48A6E6E70A0AB3D8BD39F2350C2FEFECFE936F017EBB2142877462D44D3), isEnabledTimedFlow=false)]
checkpoint.timestamp: 
    2023-01-31T07:08:33.183Z
    2023-01-31T07:08:33.188Z


 --- Transition of flow [22fcb1c3-b5fb-4384-a563-f056a848c9bf] ---
  Timestamp: 2023-01-31T07:08:33.196Z
  Event: LeaveSubFlow
  Actions: 
    
  Continuation: ProcessEvents
  Diff between previous and next state:
checkpoint.checkpointState.subFlowStack: 
    [Initiating(flowClass=class net.corda.samples.obligation.flows.IOUSettleFlow, classToInitiateWith=class net.corda.samples.obligation.flows.IOUSettleFlow, flowInfo=FlowInfo(flowVersion=1, appName=<unknown>), subFlowVersion=CorDappFlow(platformVersion=11, corDappName=workflows-1.0, corDappHash=C516E48A6E6E70A0AB3D8BD39F2350C2FEFECFE936F017EBB2142877462D44D3), isEnabledTimedFlow=false), Inlined(flowClass=class net.corda.samples.obligation.accountUtil.NewKeyForAccount, subFlowVersion=CorDappFlow(platformVersion=11, corDappName=workflows-1.0, corDappHash=C516E48A6E6E70A0AB3D8BD39F2350C2FEFECFE936F017EBB2142877462D44D3), isEnabledTimedFlow=false)]
    [Initiating(flowClass=class net.corda.samples.obligation.flows.IOUSettleFlow, classToInitiateWith=class net.corda.samples.obligation.flows.IOUSettleFlow, flowInfo=FlowInfo(flowVersion=1, appName=<unknown>), subFlowVersion=CorDappFlow(platformVersion=11, corDappName=workflows-1.0, corDappHash=C516E48A6E6E70A0AB3D8BD39F2350C2FEFECFE936F017EBB2142877462D44D3), isEnabledTimedFlow=false)]
checkpoint.timestamp: 
    2023-01-31T07:08:33.188Z
    2023-01-31T07:08:33.196Z


 --- Transition of flow [22fcb1c3-b5fb-4384-a563-f056a848c9bf] ---
  Timestamp: 2023-01-31T07:08:33.201Z
  Event: EnterSubFlow(subFlowClass=class com.r3.corda.lib.accounts.workflows.flows.RequestKeyForAccount, subFlowVersion=CorDappFlow(platformVersion=11, corDappName=accounts-workflows-1.0, corDappHash=80555705CE83A631D1BDD61E9C14A7C2215BB67FAB1411547C4D4B3D66F8402E), isEnabledTimedFlow=false)
  Actions: 
    
  Continuation: ProcessEvents
  Diff between previous and next state:
checkpoint.checkpointState.subFlowStack: 
    [Initiating(flowClass=class net.corda.samples.obligation.flows.IOUSettleFlow, classToInitiateWith=class net.corda.samples.obligation.flows.IOUSettleFlow, flowInfo=FlowInfo(flowVersion=1, appName=<unknown>), subFlowVersion=CorDappFlow(platformVersion=11, corDappName=workflows-1.0, corDappHash=C516E48A6E6E70A0AB3D8BD39F2350C2FEFECFE936F017EBB2142877462D44D3), isEnabledTimedFlow=false)]
    [Initiating(flowClass=class net.corda.samples.obligation.flows.IOUSettleFlow, classToInitiateWith=class net.corda.samples.obligation.flows.IOUSettleFlow, flowInfo=FlowInfo(flowVersion=1, appName=<unknown>), subFlowVersion=CorDappFlow(platformVersion=11, corDappName=workflows-1.0, corDappHash=C516E48A6E6E70A0AB3D8BD39F2350C2FEFECFE936F017EBB2142877462D44D3), isEnabledTimedFlow=false), Initiating(flowClass=class com.r3.corda.lib.accounts.workflows.flows.RequestKeyForAccount, classToInitiateWith=class com.r3.corda.lib.accounts.workflows.flows.RequestKeyForAccount, flowInfo=FlowInfo(flowVersion=1, appName=accounts-workflows-1.0), subFlowVersion=CorDappFlow(platformVersion=11, corDappName=accounts-workflows-1.0, corDappHash=80555705CE83A631D1BDD61E9C14A7C2215BB67FAB1411547C4D4B3D66F8402E), isEnabledTimedFlow=false)]
checkpoint.timestamp: 
    2023-01-31T07:08:33.196Z
    2023-01-31T07:08:33.201Z


 --- Transition of flow [22fcb1c3-b5fb-4384-a563-f056a848c9bf] ---
  Timestamp: 2023-01-31T07:08:33.201Z
  Event: InitiateFlow(destination=O=Mock Company 3, L=London, C=GB, wellKnownParty=O=Mock Company 3, L=London, C=GB)
  Actions: 
    AddSessionBinding(flowId=[22fcb1c3-b5fb-4384-a563-f056a848c9bf], sessionId=SessionId(toLong=-5120188446144110538))
  Continuation: Resume(result=class net.corda.node.services.statemachine.FlowSessionImpl)
  Diff between previous and next state:
checkpoint.checkpointState.sessions.SessionId(toLong=-5120188446144110538): 
    null
    Uninitiated(destination=O=Mock Company 3, L=London, C=GB, initiatingSubFlow=Initiating(flowClass=class com.r3.corda.lib.accounts.workflows.flows.RequestKeyForAccount, classToInitiateWith=class com.r3.corda.lib.accounts.workflows.flows.RequestKeyForAccount, flowInfo=FlowInfo(flowVersion=1, appName=accounts-workflows-1.0), subFlowVersion=CorDappFlow(platformVersion=11, corDappName=accounts-workflows-1.0, corDappHash=80555705CE83A631D1BDD61E9C14A7C2215BB67FAB1411547C4D4B3D66F8402E), isEnabledTimedFlow=false), sourceSessionId=SessionId(toLong=-5120188446144110538), additionalEntropy=8166144839349113546)


 --- Transition of flow [22fcb1c3-b5fb-4384-a563-f056a848c9bf] ---
  Timestamp: 2023-01-31T07:08:33.201Z
  Event: EnterSubFlow(subFlowClass=class com.r3.corda.lib.accounts.workflows.flows.RequestKeyForAccountFlow, subFlowVersion=CorDappFlow(platformVersion=11, corDappName=accounts-workflows-1.0, corDappHash=80555705CE83A631D1BDD61E9C14A7C2215BB67FAB1411547C4D4B3D66F8402E), isEnabledTimedFlow=false)
  Actions: 
    
  Continuation: ProcessEvents
  Diff between previous and next state:
checkpoint.checkpointState.subFlowStack: 
    [Initiating(flowClass=class net.corda.samples.obligation.flows.IOUSettleFlow, classToInitiateWith=class net.corda.samples.obligation.flows.IOUSettleFlow, flowInfo=FlowInfo(flowVersion=1, appName=<unknown>), subFlowVersion=CorDappFlow(platformVersion=11, corDappName=workflows-1.0, corDappHash=C516E48A6E6E70A0AB3D8BD39F2350C2FEFECFE936F017EBB2142877462D44D3), isEnabledTimedFlow=false), Initiating(flowClass=class com.r3.corda.lib.accounts.workflows.flows.RequestKeyForAccount, classToInitiateWith=class com.r3.corda.lib.accounts.workflows.flows.RequestKeyForAccount, flowInfo=FlowInfo(flowVersion=1, appName=accounts-workflows-1.0), subFlowVersion=CorDappFlow(platformVersion=11, corDappName=accounts-workflows-1.0, corDappHash=80555705CE83A631D1BDD61E9C14A7C2215BB67FAB1411547C4D4B3D66F8402E), isEnabledTimedFlow=false)]
    [Initiating(flowClass=class net.corda.samples.obligation.flows.IOUSettleFlow, classToInitiateWith=class net.corda.samples.obligation.flows.IOUSettleFlow, flowInfo=FlowInfo(flowVersion=1, appName=<unknown>), subFlowVersion=CorDappFlow(platformVersion=11, corDappName=workflows-1.0, corDappHash=C516E48A6E6E70A0AB3D8BD39F2350C2FEFECFE936F017EBB2142877462D44D3), isEnabledTimedFlow=false), Initiating(flowClass=class com.r3.corda.lib.accounts.workflows.flows.RequestKeyForAccount, classToInitiateWith=class com.r3.corda.lib.accounts.workflows.flows.RequestKeyForAccount, flowInfo=FlowInfo(flowVersion=1, appName=accounts-workflows-1.0), subFlowVersion=CorDappFlow(platformVersion=11, corDappName=accounts-workflows-1.0, corDappHash=80555705CE83A631D1BDD61E9C14A7C2215BB67FAB1411547C4D4B3D66F8402E), isEnabledTimedFlow=false), Inlined(flowClass=class com.r3.corda.lib.accounts.workflows.flows.RequestKeyForAccountFlow, subFlowVersion=CorDappFlow(platformVersion=11, corDappName=accounts-workflows-1.0, corDappHash=80555705CE83A631D1BDD61E9C14A7C2215BB67FAB1411547C4D4B3D66F8402E), isEnabledTimedFlow=false)]


 --- Transition of flow [22fcb1c3-b5fb-4384-a563-f056a848c9bf] ---
  Timestamp: 2023-01-31T07:08:33.207Z
  Event: Suspend(ioRequest=SendAndReceive({FlowSessionImpl(destination=O=Mock Company 3, L=London, C=GB, sourceSessionId=SessionId(toLong=-5120188446144110538))=FlowSessionImpl(destination=O=Mock Company 3, L=London, C=GB, sourceSessionId=SessionId(toLong=-5120188446144110538))=6F191307681163CD70D1E5BB8BE9524EC2F1904B52B62F15E018009993AE8736}, shouldRetrySend=false), maySkipCheckpoint=false, fiber=9DB83010E63043CAD4C7CC6ABC8FFB3C724B38054E52904519CF9785E1A975EF, currentStep=Starting)
  Actions: 
    PersistCheckpoint(id=[22fcb1c3-b5fb-4384-a563-f056a848c9bf], checkpoint=Checkpoint(checkpointState=CheckpointState(invocationContext=InvocationContext(origin=RPC(actor=Actor(id=Id(value=Only For Testing), serviceId=AuthServiceId(value=TEST), owningLegalIdentity=O=Mock Company 1, L=London, C=GB)), trace=Trace(invocationId=a44904ba-ec75-4986-be2c-5a017403c704, timestamp: 2023-01-31T07:08:33.182Z, entityType: Invocation, sessionId=a44904ba-ec75-4986-be2c-5a017403c704, timestamp: 2023-01-31T07:08:33.182Z, entityType: Session), actor=Actor(id=Id(value=Only For Testing), serviceId=AuthServiceId(value=TEST), owningLegalIdentity=O=Mock Company 1, L=London, C=GB), externalTrace=null, impersonatedActor=null, arguments=[], clientId=null), ourIdentity=O=Mock Company 1, L=London, C=GB, sessions={SessionId(toLong=-5120188446144110538)=Uninitiated(destination=O=Mock Company 3, L=London, C=GB, initiatingSubFlow=Initiating(flowClass=class com.r3.corda.lib.accounts.workflows.flows.RequestKeyForAccount, classToInitiateWith=class com.r3.corda.lib.accounts.workflows.flows.RequestKeyForAccount, flowInfo=FlowInfo(flowVersion=1, appName=accounts-workflows-1.0), subFlowVersion=CorDappFlow(platformVersion=11, corDappName=accounts-workflows-1.0, corDappHash=80555705CE83A631D1BDD61E9C14A7C2215BB67FAB1411547C4D4B3D66F8402E), isEnabledTimedFlow=false), sourceSessionId=SessionId(toLong=-5120188446144110538), additionalEntropy=8166144839349113546)}, sessionsToBeClosed=[], subFlowStack=[Initiating(flowClass=class net.corda.samples.obligation.flows.IOUSettleFlow, classToInitiateWith=class net.corda.samples.obligation.flows.IOUSettleFlow, flowInfo=FlowInfo(flowVersion=1, appName=<unknown>), subFlowVersion=CorDappFlow(platformVersion=11, corDappName=workflows-1.0, corDappHash=C516E48A6E6E70A0AB3D8BD39F2350C2FEFECFE936F017EBB2142877462D44D3), isEnabledTimedFlow=false), Initiating(flowClass=class com.r3.corda.lib.accounts.workflows.flows.RequestKeyForAccount, classToInitiateWith=class com.r3.corda.lib.accounts.workflows.flows.RequestKeyForAccount, flowInfo=FlowInfo(flowVersion=1, appName=accounts-workflows-1.0), subFlowVersion=CorDappFlow(platformVersion=11, corDappName=accounts-workflows-1.0, corDappHash=80555705CE83A631D1BDD61E9C14A7C2215BB67FAB1411547C4D4B3D66F8402E), isEnabledTimedFlow=false), Inlined(flowClass=class com.r3.corda.lib.accounts.workflows.flows.RequestKeyForAccountFlow, subFlowVersion=CorDappFlow(platformVersion=11, corDappName=accounts-workflows-1.0, corDappHash=80555705CE83A631D1BDD61E9C14A7C2215BB67FAB1411547C4D4B3D66F8402E), isEnabledTimedFlow=false)], numberOfSuspends=1, numberOfCommits=2), flowState=Started(flowIORequest=SendAndReceive({FlowSessionImpl(destination=O=Mock Company 3, L=London, C=GB, sourceSessionId=SessionId(toLong=-5120188446144110538))=FlowSessionImpl(destination=O=Mock Company 3, L=London, C=GB, sourceSessionId=SessionId(toLong=-5120188446144110538))=6F191307681163CD70D1E5BB8BE9524EC2F1904B52B62F15E018009993AE8736}, shouldRetrySend=false), frozenFiber=9DB83010E63043CAD4C7CC6ABC8FFB3C724B38054E52904519CF9785E1A975EF), errorState=Clean, result=null, status=RUNNABLE, progressStep=Starting, flowIoRequest=SendAndReceive, compatible=true), isCheckpointUpdate=true)
    PersistDeduplicationFacts(deduplicationHandlers=[])
    CommitTransaction
    AcknowledgeMessages(deduplicationHandlers=[])
    ScheduleEvent(event=DoRemainingWork)
  Continuation: ProcessEvents
  Diff between previous and next state:
checkpoint.progressStep: 
    null
    Starting
checkpoint.flowState: 
    Unstarted(flowStart=Explicit, frozenFlowLogic=4FBAA4D7968AB6F06AB201FECA8EBC6663A6EFD0B75D98B6FFFB39906D1C5777)
    Started(flowIORequest=SendAndReceive({FlowSessionImpl(destination=O=Mock Company 3, L=London, C=GB, sourceSessionId=SessionId(toLong=-5120188446144110538))=FlowSessionImpl(destination=O=Mock Company 3, L=London, C=GB, sourceSessionId=SessionId(toLong=-5120188446144110538))=6F191307681163CD70D1E5BB8BE9524EC2F1904B52B62F15E018009993AE8736}, shouldRetrySend=false), frozenFiber=9DB83010E63043CAD4C7CC6ABC8FFB3C724B38054E52904519CF9785E1A975EF)
checkpoint.flowIoRequest: 
    null
    SendAndReceive
checkpoint.checkpointState.numberOfSuspends: 
    0
    1
checkpoint.checkpointState.numberOfCommits: 
    1
    2
checkpoint.timestamp: 
    2023-01-31T07:08:33.201Z
    2023-01-31T07:08:33.206Z
isFlowResumed: 
    true
    false
numberOfCommits: 
    0
    2


 --- Transition of flow [22fcb1c3-b5fb-4384-a563-f056a848c9bf] ---
  Timestamp: 2023-01-31T07:08:33.209Z
  Event: DoRemainingWork
  Actions: 
    SendMultiple(sendInitial=[SendInitial(destination=O=Mock Company 3, L=London, C=GB, initialise=InitialSessionMessage(initiatorSessionId=SessionId(toLong=-5120188446144110538), initiationEntropy=8166144839349113546, initiatorFlowClassName=com.r3.corda.lib.accounts.workflows.flows.RequestKeyForAccount, appName=accounts-workflows-1.0, firstPayload=class net.corda.core.serialization.SerializedBytes), deduplicationId=SenderDeduplicationId(deduplicationId=DeduplicationId(toString=N-R--5120188446144110538-8166144839349113546-1-0), senderUUID=6085e859-0547-41f5-8009-8ac07555639a))], sendExisting=[])
  Continuation: ProcessEvents
  Diff between previous and next state:
checkpoint.flowState.flowIORequest: 
    SendAndReceive({FlowSessionImpl(destination=O=Mock Company 3, L=London, C=GB, sourceSessionId=SessionId(toLong=-5120188446144110538))=FlowSessionImpl(destination=O=Mock Company 3, L=London, C=GB, sourceSessionId=SessionId(toLong=-5120188446144110538))=6F191307681163CD70D1E5BB8BE9524EC2F1904B52B62F15E018009993AE8736}, shouldRetrySend=false)
    Receive(sessions=[FlowSessionImpl(destination=O=Mock Company 3, L=London, C=GB, sourceSessionId=SessionId(toLong=-5120188446144110538))])
checkpoint.checkpointState.sessions.SessionId(toLong=-5120188446144110538): 
    Uninitiated(destination=O=Mock Company 3, L=London, C=GB, initiatingSubFlow=Initiating(flowClass=class com.r3.corda.lib.accounts.workflows.flows.RequestKeyForAccount, classToInitiateWith=class com.r3.corda.lib.accounts.workflows.flows.RequestKeyForAccount, flowInfo=FlowInfo(flowVersion=1, appName=accounts-workflows-1.0), subFlowVersion=CorDappFlow(platformVersion=11, corDappName=accounts-workflows-1.0, corDappHash=80555705CE83A631D1BDD61E9C14A7C2215BB67FAB1411547C4D4B3D66F8402E), isEnabledTimedFlow=false), sourceSessionId=SessionId(toLong=-5120188446144110538), additionalEntropy=8166144839349113546)
    Initiating(bufferedMessages=[], rejectionError=null, deduplicationSeed=R--5120188446144110538-8166144839349113546)
checkpoint.timestamp: 
    2023-01-31T07:08:33.206Z
    2023-01-31T07:08:33.208Z


 --- Transition of flow [22fcb1c3-b5fb-4384-a563-f056a848c9bf] ---
  Timestamp: 2023-01-31T07:08:33.226Z
  Event: DeliverSessionMessage(sessionMessage=ExistingSessionMessage(recipientSessionId=SessionId(toLong=-5120188446144110538), payload=ConfirmSessionMessage(initiatedSessionId=SessionId(toLong=-2879998342928925846), initiatedFlowInfo=FlowInfo(flowVersion=1, appName=accounts-workflows-1.0))), deduplicationHandler=net.corda.testing.node.internal.MockNodeMessagingService$InMemoryDeduplicationHandler@2d20bd4a, sender=O=Mock Company 3, L=London, C=GB)
  Actions: 
    ScheduleEvent(event=DoRemainingWork)
  Continuation: ProcessEvents
  Diff between previous and next state:
pendingDeduplicationHandlers: 
    []
    [net.corda.testing.node.internal.MockNodeMessagingService$InMemoryDeduplicationHandler@2d20bd4a]
checkpoint.checkpointState.sessions.SessionId(toLong=-5120188446144110538): 
    Initiating(bufferedMessages=[], rejectionError=null, deduplicationSeed=R--5120188446144110538-8166144839349113546)
    Initiated(peerParty=O=Mock Company 3, L=London, C=GB, peerFlowInfo=FlowInfo(flowVersion=1, appName=accounts-workflows-1.0), receivedMessages=[], otherSideErrored=false, peerSinkSessionId=SessionId(toLong=-2879998342928925846), deduplicationSeed=R--5120188446144110538-8166144839349113546)
checkpoint.timestamp: 
    2023-01-31T07:08:33.208Z
    2023-01-31T07:08:33.226Z


 --- Transition of flow [22fcb1c3-b5fb-4384-a563-f056a848c9bf] ---
  Timestamp: 2023-01-31T07:08:33.227Z
  Event: DoRemainingWork
  Actions: 
    
  Continuation: ProcessEvents
  Diff between previous and next state:
null

 --- Transition of flow [22fcb1c3-b5fb-4384-a563-f056a848c9bf] ---
  Timestamp: 2023-01-31T07:08:33.228Z
  Event: DeliverSessionMessage(sessionMessage=ExistingSessionMessage(recipientSessionId=SessionId(toLong=-5120188446144110538), payload=DataSessionMessage(payload=class net.corda.core.serialization.SerializedBytes)), deduplicationHandler=net.corda.testing.node.internal.MockNodeMessagingService$InMemoryDeduplicationHandler@6e909f81, sender=O=Mock Company 3, L=London, C=GB)
  Actions: 
    ScheduleEvent(event=DoRemainingWork)
  Continuation: ProcessEvents
  Diff between previous and next state:
pendingDeduplicationHandlers: 
    [net.corda.testing.node.internal.MockNodeMessagingService$InMemoryDeduplicationHandler@2d20bd4a]
    [net.corda.testing.node.internal.MockNodeMessagingService$InMemoryDeduplicationHandler@2d20bd4a, net.corda.testing.node.internal.MockNodeMessagingService$InMemoryDeduplicationHandler@6e909f81]
checkpoint.checkpointState.sessions.SessionId(toLong=-5120188446144110538).receivedMessages.isEmpty: 
    true
    false
checkpoint.timestamp: 
    2023-01-31T07:08:33.227Z
    2023-01-31T07:08:33.228Z


 --- Transition of flow [22fcb1c3-b5fb-4384-a563-f056a848c9bf] ---
  Timestamp: 2023-01-31T07:08:33.228Z
  Event: DoRemainingWork
  Actions: 
    CreateTransaction
  Continuation: Resume(result=class java.util.LinkedHashMap)
  Diff between previous and next state:
checkpoint.checkpointState.sessions.SessionId(toLong=-5120188446144110538).receivedMessages.isEmpty: 
    false
    true
isFlowResumed: 
    false
    true


 --- Transition of flow [22fcb1c3-b5fb-4384-a563-f056a848c9bf] ---
  Timestamp: 2023-01-31T07:08:33.228Z
  Event: EnterSubFlow(subFlowClass=class com.r3.corda.lib.ci.workflows.RequestKeyFlow, subFlowVersion=CoreFlow(platformVersion=11), isEnabledTimedFlow=false)
  Actions: 
    
  Continuation: ProcessEvents
  Diff between previous and next state:
checkpoint.checkpointState.subFlowStack: 
    [Initiating(flowClass=class net.corda.samples.obligation.flows.IOUSettleFlow, classToInitiateWith=class net.corda.samples.obligation.flows.IOUSettleFlow, flowInfo=FlowInfo(flowVersion=1, appName=<unknown>), subFlowVersion=CorDappFlow(platformVersion=11, corDappName=workflows-1.0, corDappHash=C516E48A6E6E70A0AB3D8BD39F2350C2FEFECFE936F017EBB2142877462D44D3), isEnabledTimedFlow=false), Initiating(flowClass=class com.r3.corda.lib.accounts.workflows.flows.RequestKeyForAccount, classToInitiateWith=class com.r3.corda.lib.accounts.workflows.flows.RequestKeyForAccount, flowInfo=FlowInfo(flowVersion=1, appName=accounts-workflows-1.0), subFlowVersion=CorDappFlow(platformVersion=11, corDappName=accounts-workflows-1.0, corDappHash=80555705CE83A631D1BDD61E9C14A7C2215BB67FAB1411547C4D4B3D66F8402E), isEnabledTimedFlow=false), Inlined(flowClass=class com.r3.corda.lib.accounts.workflows.flows.RequestKeyForAccountFlow, subFlowVersion=CorDappFlow(platformVersion=11, corDappName=accounts-workflows-1.0, corDappHash=80555705CE83A631D1BDD61E9C14A7C2215BB67FAB1411547C4D4B3D66F8402E), isEnabledTimedFlow=false)]
    [Initiating(flowClass=class net.corda.samples.obligation.flows.IOUSettleFlow, classToInitiateWith=class net.corda.samples.obligation.flows.IOUSettleFlow, flowInfo=FlowInfo(flowVersion=1, appName=<unknown>), subFlowVersion=CorDappFlow(platformVersion=11, corDappName=workflows-1.0, corDappHash=C516E48A6E6E70A0AB3D8BD39F2350C2FEFECFE936F017EBB2142877462D44D3), isEnabledTimedFlow=false), Initiating(flowClass=class com.r3.corda.lib.accounts.workflows.flows.RequestKeyForAccount, classToInitiateWith=class com.r3.corda.lib.accounts.workflows.flows.RequestKeyForAccount, flowInfo=FlowInfo(flowVersion=1, appName=accounts-workflows-1.0), subFlowVersion=CorDappFlow(platformVersion=11, corDappName=accounts-workflows-1.0, corDappHash=80555705CE83A631D1BDD61E9C14A7C2215BB67FAB1411547C4D4B3D66F8402E), isEnabledTimedFlow=false), Inlined(flowClass=class com.r3.corda.lib.accounts.workflows.flows.RequestKeyForAccountFlow, subFlowVersion=CorDappFlow(platformVersion=11, corDappName=accounts-workflows-1.0, corDappHash=80555705CE83A631D1BDD61E9C14A7C2215BB67FAB1411547C4D4B3D66F8402E), isEnabledTimedFlow=false), Inlined(flowClass=class com.r3.corda.lib.ci.workflows.RequestKeyFlow, subFlowVersion=CoreFlow(platformVersion=11), isEnabledTimedFlow=false)]


 --- Transition of flow [22fcb1c3-b5fb-4384-a563-f056a848c9bf] ---
  Timestamp: 2023-01-31T07:08:33.232Z
  Event: Suspend(ioRequest=SendAndReceive({FlowSessionImpl(destination=O=Mock Company 3, L=London, C=GB, sourceSessionId=SessionId(toLong=-5120188446144110538))=FlowSessionImpl(destination=O=Mock Company 3, L=London, C=GB, sourceSessionId=SessionId(toLong=-5120188446144110538))=E9D050F4FFA0102FB981A5DE1651B2DF87EE1BCB8F1052FEE00E9936B0EAF804}, shouldRetrySend=false), maySkipCheckpoint=false, fiber=D38478FF707B110750CD6AC04200B119FCA04BEDAD9BA1AA138ECBF6B33F3796, currentStep=Starting)
  Actions: 
    PersistCheckpoint(id=[22fcb1c3-b5fb-4384-a563-f056a848c9bf], checkpoint=Checkpoint(checkpointState=CheckpointState(invocationContext=InvocationContext(origin=RPC(actor=Actor(id=Id(value=Only For Testing), serviceId=AuthServiceId(value=TEST), owningLegalIdentity=O=Mock Company 1, L=London, C=GB)), trace=Trace(invocationId=a44904ba-ec75-4986-be2c-5a017403c704, timestamp: 2023-01-31T07:08:33.182Z, entityType: Invocation, sessionId=a44904ba-ec75-4986-be2c-5a017403c704, timestamp: 2023-01-31T07:08:33.182Z, entityType: Session), actor=Actor(id=Id(value=Only For Testing), serviceId=AuthServiceId(value=TEST), owningLegalIdentity=O=Mock Company 1, L=London, C=GB), externalTrace=null, impersonatedActor=null, arguments=[], clientId=null), ourIdentity=O=Mock Company 1, L=London, C=GB, sessions={SessionId(toLong=-5120188446144110538)=Initiated(peerParty=O=Mock Company 3, L=London, C=GB, peerFlowInfo=FlowInfo(flowVersion=1, appName=accounts-workflows-1.0), receivedMessages=[], otherSideErrored=false, peerSinkSessionId=SessionId(toLong=-2879998342928925846), deduplicationSeed=R--5120188446144110538-8166144839349113546)}, sessionsToBeClosed=[], subFlowStack=[Initiating(flowClass=class net.corda.samples.obligation.flows.IOUSettleFlow, classToInitiateWith=class net.corda.samples.obligation.flows.IOUSettleFlow, flowInfo=FlowInfo(flowVersion=1, appName=<unknown>), subFlowVersion=CorDappFlow(platformVersion=11, corDappName=workflows-1.0, corDappHash=C516E48A6E6E70A0AB3D8BD39F2350C2FEFECFE936F017EBB2142877462D44D3), isEnabledTimedFlow=false), Initiating(flowClass=class com.r3.corda.lib.accounts.workflows.flows.RequestKeyForAccount, classToInitiateWith=class com.r3.corda.lib.accounts.workflows.flows.RequestKeyForAccount, flowInfo=FlowInfo(flowVersion=1, appName=accounts-workflows-1.0), subFlowVersion=CorDappFlow(platformVersion=11, corDappName=accounts-workflows-1.0, corDappHash=80555705CE83A631D1BDD61E9C14A7C2215BB67FAB1411547C4D4B3D66F8402E), isEnabledTimedFlow=false), Inlined(flowClass=class com.r3.corda.lib.accounts.workflows.flows.RequestKeyForAccountFlow, subFlowVersion=CorDappFlow(platformVersion=11, corDappName=accounts-workflows-1.0, corDappHash=80555705CE83A631D1BDD61E9C14A7C2215BB67FAB1411547C4D4B3D66F8402E), isEnabledTimedFlow=false), Inlined(flowClass=class com.r3.corda.lib.ci.workflows.RequestKeyFlow, subFlowVersion=CoreFlow(platformVersion=11), isEnabledTimedFlow=false)], numberOfSuspends=2, numberOfCommits=3), flowState=Started(flowIORequest=SendAndReceive({FlowSessionImpl(destination=O=Mock Company 3, L=London, C=GB, sourceSessionId=SessionId(toLong=-5120188446144110538))=FlowSessionImpl(destination=O=Mock Company 3, L=London, C=GB, sourceSessionId=SessionId(toLong=-5120188446144110538))=E9D050F4FFA0102FB981A5DE1651B2DF87EE1BCB8F1052FEE00E9936B0EAF804}, shouldRetrySend=false), frozenFiber=D38478FF707B110750CD6AC04200B119FCA04BEDAD9BA1AA138ECBF6B33F3796), errorState=Clean, result=null, status=RUNNABLE, progressStep=Starting, flowIoRequest=SendAndReceive, compatible=true), isCheckpointUpdate=true)
    PersistDeduplicationFacts(deduplicationHandlers=[net.corda.testing.node.internal.MockNodeMessagingService$InMemoryDeduplicationHandler@2d20bd4a, net.corda.testing.node.internal.MockNodeMessagingService$InMemoryDeduplicationHandler@6e909f81])
    CommitTransaction
    AcknowledgeMessages(deduplicationHandlers=[net.corda.testing.node.internal.MockNodeMessagingService$InMemoryDeduplicationHandler@2d20bd4a, net.corda.testing.node.internal.MockNodeMessagingService$InMemoryDeduplicationHandler@6e909f81])
    ScheduleEvent(event=DoRemainingWork)
  Continuation: ProcessEvents
  Diff between previous and next state:
pendingDeduplicationHandlers: 
    [net.corda.testing.node.internal.MockNodeMessagingService$InMemoryDeduplicationHandler@2d20bd4a, net.corda.testing.node.internal.MockNodeMessagingService$InMemoryDeduplicationHandler@6e909f81]
    []
checkpoint.flowState.flowIORequest: 
    Receive(sessions=[FlowSessionImpl(destination=O=Mock Company 3, L=London, C=GB, sourceSessionId=SessionId(toLong=-5120188446144110538))])
    SendAndReceive({FlowSessionImpl(destination=O=Mock Company 3, L=London, C=GB, sourceSessionId=SessionId(toLong=-5120188446144110538))=FlowSessionImpl(destination=O=Mock Company 3, L=London, C=GB, sourceSessionId=SessionId(toLong=-5120188446144110538))=E9D050F4FFA0102FB981A5DE1651B2DF87EE1BCB8F1052FEE00E9936B0EAF804}, shouldRetrySend=false)
checkpoint.flowState.frozenFiber.hash: 
    9DB83010E63043CAD4C7CC6ABC8FFB3C724B38054E52904519CF9785E1A975EF
    D38478FF707B110750CD6AC04200B119FCA04BEDAD9BA1AA138ECBF6B33F3796
checkpoint.checkpointState.numberOfSuspends: 
    1
    2
checkpoint.checkpointState.numberOfCommits: 
    2
    3
checkpoint.timestamp: 
    2023-01-31T07:08:33.228Z
    2023-01-31T07:08:33.230Z
isFlowResumed: 
    true
    false
numberOfCommits: 
    2
    3


 --- Transition of flow [22fcb1c3-b5fb-4384-a563-f056a848c9bf] ---
  Timestamp: 2023-01-31T07:08:33.232Z
  Event: DoRemainingWork
  Actions: 
    SendMultiple(sendInitial=[], sendExisting=[SendExisting(peerParty=O=Mock Company 3, L=London, C=GB, message=ExistingSessionMessage(recipientSessionId=SessionId(toLong=-2879998342928925846), payload=DataSessionMessage(payload=class net.corda.core.serialization.SerializedBytes)), deduplicationId=SenderDeduplicationId(deduplicationId=DeduplicationId(toString=N-R--5120188446144110538-8166144839349113546-2-0), senderUUID=6085e859-0547-41f5-8009-8ac07555639a))])
  Continuation: ProcessEvents
  Diff between previous and next state:
checkpoint.flowState.flowIORequest: 
    SendAndReceive({FlowSessionImpl(destination=O=Mock Company 3, L=London, C=GB, sourceSessionId=SessionId(toLong=-5120188446144110538))=FlowSessionImpl(destination=O=Mock Company 3, L=London, C=GB, sourceSessionId=SessionId(toLong=-5120188446144110538))=E9D050F4FFA0102FB981A5DE1651B2DF87EE1BCB8F1052FEE00E9936B0EAF804}, shouldRetrySend=false)
    Receive(sessions=[FlowSessionImpl(destination=O=Mock Company 3, L=London, C=GB, sourceSessionId=SessionId(toLong=-5120188446144110538))])
checkpoint.timestamp: 
    2023-01-31T07:08:33.230Z
    2023-01-31T07:08:33.232Z


 --- Transition of flow [22fcb1c3-b5fb-4384-a563-f056a848c9bf] ---
  Timestamp: 2023-01-31T07:08:33.242Z
  Event: DeliverSessionMessage(sessionMessage=ExistingSessionMessage(recipientSessionId=SessionId(toLong=-5120188446144110538), payload=DataSessionMessage(payload=class net.corda.core.serialization.SerializedBytes)), deduplicationHandler=net.corda.testing.node.internal.MockNodeMessagingService$InMemoryDeduplicationHandler@35b19650, sender=O=Mock Company 3, L=London, C=GB)
  Actions: 
    ScheduleEvent(event=DoRemainingWork)
  Continuation: ProcessEvents
  Diff between previous and next state:
pendingDeduplicationHandlers: 
    []
    [net.corda.testing.node.internal.MockNodeMessagingService$InMemoryDeduplicationHandler@35b19650]
checkpoint.checkpointState.sessions.SessionId(toLong=-5120188446144110538).receivedMessages.isEmpty: 
    true
    false
checkpoint.timestamp: 
    2023-01-31T07:08:33.232Z
    2023-01-31T07:08:33.242Z


 --- Transition of flow [22fcb1c3-b5fb-4384-a563-f056a848c9bf] ---
  Timestamp: 2023-01-31T07:08:33.242Z
  Event: DoRemainingWork
  Actions: 
    CreateTransaction
  Continuation: Resume(result=class java.util.LinkedHashMap)
  Diff between previous and next state:
checkpoint.checkpointState.sessions.SessionId(toLong=-5120188446144110538).receivedMessages.isEmpty: 
    false
    true
isFlowResumed: 
    false
    true


 --- Transition of flow [22fcb1c3-b5fb-4384-a563-f056a848c9bf] ---
  Timestamp: 2023-01-31T07:08:33.244Z
  Event: LeaveSubFlow
  Actions: 
    
  Continuation: ProcessEvents
  Diff between previous and next state:
checkpoint.checkpointState.subFlowStack: 
    [Initiating(flowClass=class net.corda.samples.obligation.flows.IOUSettleFlow, classToInitiateWith=class net.corda.samples.obligation.flows.IOUSettleFlow, flowInfo=FlowInfo(flowVersion=1, appName=<unknown>), subFlowVersion=CorDappFlow(platformVersion=11, corDappName=workflows-1.0, corDappHash=C516E48A6E6E70A0AB3D8BD39F2350C2FEFECFE936F017EBB2142877462D44D3), isEnabledTimedFlow=false), Initiating(flowClass=class com.r3.corda.lib.accounts.workflows.flows.RequestKeyForAccount, classToInitiateWith=class com.r3.corda.lib.accounts.workflows.flows.RequestKeyForAccount, flowInfo=FlowInfo(flowVersion=1, appName=accounts-workflows-1.0), subFlowVersion=CorDappFlow(platformVersion=11, corDappName=accounts-workflows-1.0, corDappHash=80555705CE83A631D1BDD61E9C14A7C2215BB67FAB1411547C4D4B3D66F8402E), isEnabledTimedFlow=false), Inlined(flowClass=class com.r3.corda.lib.accounts.workflows.flows.RequestKeyForAccountFlow, subFlowVersion=CorDappFlow(platformVersion=11, corDappName=accounts-workflows-1.0, corDappHash=80555705CE83A631D1BDD61E9C14A7C2215BB67FAB1411547C4D4B3D66F8402E), isEnabledTimedFlow=false), Inlined(flowClass=class com.r3.corda.lib.ci.workflows.RequestKeyFlow, subFlowVersion=CoreFlow(platformVersion=11), isEnabledTimedFlow=false)]
    [Initiating(flowClass=class net.corda.samples.obligation.flows.IOUSettleFlow, classToInitiateWith=class net.corda.samples.obligation.flows.IOUSettleFlow, flowInfo=FlowInfo(flowVersion=1, appName=<unknown>), subFlowVersion=CorDappFlow(platformVersion=11, corDappName=workflows-1.0, corDappHash=C516E48A6E6E70A0AB3D8BD39F2350C2FEFECFE936F017EBB2142877462D44D3), isEnabledTimedFlow=false), Initiating(flowClass=class com.r3.corda.lib.accounts.workflows.flows.RequestKeyForAccount, classToInitiateWith=class com.r3.corda.lib.accounts.workflows.flows.RequestKeyForAccount, flowInfo=FlowInfo(flowVersion=1, appName=accounts-workflows-1.0), subFlowVersion=CorDappFlow(platformVersion=11, corDappName=accounts-workflows-1.0, corDappHash=80555705CE83A631D1BDD61E9C14A7C2215BB67FAB1411547C4D4B3D66F8402E), isEnabledTimedFlow=false), Inlined(flowClass=class com.r3.corda.lib.accounts.workflows.flows.RequestKeyForAccountFlow, subFlowVersion=CorDappFlow(platformVersion=11, corDappName=accounts-workflows-1.0, corDappHash=80555705CE83A631D1BDD61E9C14A7C2215BB67FAB1411547C4D4B3D66F8402E), isEnabledTimedFlow=false)]
checkpoint.timestamp: 
    2023-01-31T07:08:33.242Z
    2023-01-31T07:08:33.244Z


 --- Transition of flow [22fcb1c3-b5fb-4384-a563-f056a848c9bf] ---
  Timestamp: 2023-01-31T07:08:33.244Z
  Event: LeaveSubFlow
  Actions: 
    
  Continuation: ProcessEvents
  Diff between previous and next state:
checkpoint.checkpointState.subFlowStack: 
    [Initiating(flowClass=class net.corda.samples.obligation.flows.IOUSettleFlow, classToInitiateWith=class net.corda.samples.obligation.flows.IOUSettleFlow, flowInfo=FlowInfo(flowVersion=1, appName=<unknown>), subFlowVersion=CorDappFlow(platformVersion=11, corDappName=workflows-1.0, corDappHash=C516E48A6E6E70A0AB3D8BD39F2350C2FEFECFE936F017EBB2142877462D44D3), isEnabledTimedFlow=false), Initiating(flowClass=class com.r3.corda.lib.accounts.workflows.flows.RequestKeyForAccount, classToInitiateWith=class com.r3.corda.lib.accounts.workflows.flows.RequestKeyForAccount, flowInfo=FlowInfo(flowVersion=1, appName=accounts-workflows-1.0), subFlowVersion=CorDappFlow(platformVersion=11, corDappName=accounts-workflows-1.0, corDappHash=80555705CE83A631D1BDD61E9C14A7C2215BB67FAB1411547C4D4B3D66F8402E), isEnabledTimedFlow=false), Inlined(flowClass=class com.r3.corda.lib.accounts.workflows.flows.RequestKeyForAccountFlow, subFlowVersion=CorDappFlow(platformVersion=11, corDappName=accounts-workflows-1.0, corDappHash=80555705CE83A631D1BDD61E9C14A7C2215BB67FAB1411547C4D4B3D66F8402E), isEnabledTimedFlow=false)]
    [Initiating(flowClass=class net.corda.samples.obligation.flows.IOUSettleFlow, classToInitiateWith=class net.corda.samples.obligation.flows.IOUSettleFlow, flowInfo=FlowInfo(flowVersion=1, appName=<unknown>), subFlowVersion=CorDappFlow(platformVersion=11, corDappName=workflows-1.0, corDappHash=C516E48A6E6E70A0AB3D8BD39F2350C2FEFECFE936F017EBB2142877462D44D3), isEnabledTimedFlow=false), Initiating(flowClass=class com.r3.corda.lib.accounts.workflows.flows.RequestKeyForAccount, classToInitiateWith=class com.r3.corda.lib.accounts.workflows.flows.RequestKeyForAccount, flowInfo=FlowInfo(flowVersion=1, appName=accounts-workflows-1.0), subFlowVersion=CorDappFlow(platformVersion=11, corDappName=accounts-workflows-1.0, corDappHash=80555705CE83A631D1BDD61E9C14A7C2215BB67FAB1411547C4D4B3D66F8402E), isEnabledTimedFlow=false)]


 --- Transition of flow [22fcb1c3-b5fb-4384-a563-f056a848c9bf] ---
  Timestamp: 2023-01-31T07:08:33.244Z
  Event: LeaveSubFlow
  Actions: 
    
  Continuation: ProcessEvents
  Diff between previous and next state:
checkpoint.checkpointState.subFlowStack: 
    [Initiating(flowClass=class net.corda.samples.obligation.flows.IOUSettleFlow, classToInitiateWith=class net.corda.samples.obligation.flows.IOUSettleFlow, flowInfo=FlowInfo(flowVersion=1, appName=<unknown>), subFlowVersion=CorDappFlow(platformVersion=11, corDappName=workflows-1.0, corDappHash=C516E48A6E6E70A0AB3D8BD39F2350C2FEFECFE936F017EBB2142877462D44D3), isEnabledTimedFlow=false), Initiating(flowClass=class com.r3.corda.lib.accounts.workflows.flows.RequestKeyForAccount, classToInitiateWith=class com.r3.corda.lib.accounts.workflows.flows.RequestKeyForAccount, flowInfo=FlowInfo(flowVersion=1, appName=accounts-workflows-1.0), subFlowVersion=CorDappFlow(platformVersion=11, corDappName=accounts-workflows-1.0, corDappHash=80555705CE83A631D1BDD61E9C14A7C2215BB67FAB1411547C4D4B3D66F8402E), isEnabledTimedFlow=false)]
    [Initiating(flowClass=class net.corda.samples.obligation.flows.IOUSettleFlow, classToInitiateWith=class net.corda.samples.obligation.flows.IOUSettleFlow, flowInfo=FlowInfo(flowVersion=1, appName=<unknown>), subFlowVersion=CorDappFlow(platformVersion=11, corDappName=workflows-1.0, corDappHash=C516E48A6E6E70A0AB3D8BD39F2350C2FEFECFE936F017EBB2142877462D44D3), isEnabledTimedFlow=false)]


 --- Transition of flow [22fcb1c3-b5fb-4384-a563-f056a848c9bf] ---
  Timestamp: 2023-01-31T07:08:33.643Z
  Event: InitiateFlow(destination=O=Mock Company 3, L=London, C=GB, wellKnownParty=O=Mock Company 3, L=London, C=GB)
  Actions: 
    AddSessionBinding(flowId=[22fcb1c3-b5fb-4384-a563-f056a848c9bf], sessionId=SessionId(toLong=-5366150003449329455))
  Continuation: Resume(result=class net.corda.node.services.statemachine.FlowSessionImpl)
  Diff between previous and next state:
checkpoint.checkpointState.sessions.SessionId(toLong=-5366150003449329455): 
    null
    Uninitiated(destination=O=Mock Company 3, L=London, C=GB, initiatingSubFlow=Initiating(flowClass=class net.corda.samples.obligation.flows.IOUSettleFlow, classToInitiateWith=class net.corda.samples.obligation.flows.IOUSettleFlow, flowInfo=FlowInfo(flowVersion=1, appName=<unknown>), subFlowVersion=CorDappFlow(platformVersion=11, corDappName=workflows-1.0, corDappHash=C516E48A6E6E70A0AB3D8BD39F2350C2FEFECFE936F017EBB2142877462D44D3), isEnabledTimedFlow=false), sourceSessionId=SessionId(toLong=-5366150003449329455), additionalEntropy=-6169107910265396549)
checkpoint.timestamp: 
    2023-01-31T07:08:33.244Z
    2023-01-31T07:08:33.643Z


 --- Transition of flow [22fcb1c3-b5fb-4384-a563-f056a848c9bf] ---
  Timestamp: 2023-01-31T07:08:33.644Z
  Event: EnterSubFlow(subFlowClass=class net.corda.core.flows.CollectSignatureFlow, subFlowVersion=CoreFlow(platformVersion=11), isEnabledTimedFlow=false)
  Actions: 
    
  Continuation: ProcessEvents
  Diff between previous and next state:
checkpoint.checkpointState.subFlowStack: 
    [Initiating(flowClass=class net.corda.samples.obligation.flows.IOUSettleFlow, classToInitiateWith=class net.corda.samples.obligation.flows.IOUSettleFlow, flowInfo=FlowInfo(flowVersion=1, appName=<unknown>), subFlowVersion=CorDappFlow(platformVersion=11, corDappName=workflows-1.0, corDappHash=C516E48A6E6E70A0AB3D8BD39F2350C2FEFECFE936F017EBB2142877462D44D3), isEnabledTimedFlow=false)]
    [Initiating(flowClass=class net.corda.samples.obligation.flows.IOUSettleFlow, classToInitiateWith=class net.corda.samples.obligation.flows.IOUSettleFlow, flowInfo=FlowInfo(flowVersion=1, appName=<unknown>), subFlowVersion=CorDappFlow(platformVersion=11, corDappName=workflows-1.0, corDappHash=C516E48A6E6E70A0AB3D8BD39F2350C2FEFECFE936F017EBB2142877462D44D3), isEnabledTimedFlow=false), Inlined(flowClass=class net.corda.core.flows.CollectSignatureFlow, subFlowVersion=CoreFlow(platformVersion=11), isEnabledTimedFlow=false)]
checkpoint.timestamp: 
    2023-01-31T07:08:33.643Z
    2023-01-31T07:08:33.644Z


 --- Transition of flow [22fcb1c3-b5fb-4384-a563-f056a848c9bf] ---
  Timestamp: 2023-01-31T07:08:33.644Z
  Event: EnterSubFlow(subFlowClass=class net.corda.core.flows.SendTransactionFlow, subFlowVersion=CoreFlow(platformVersion=11), isEnabledTimedFlow=false)
  Actions: 
    
  Continuation: ProcessEvents
  Diff between previous and next state:
checkpoint.checkpointState.subFlowStack: 
    [Initiating(flowClass=class net.corda.samples.obligation.flows.IOUSettleFlow, classToInitiateWith=class net.corda.samples.obligation.flows.IOUSettleFlow, flowInfo=FlowInfo(flowVersion=1, appName=<unknown>), subFlowVersion=CorDappFlow(platformVersion=11, corDappName=workflows-1.0, corDappHash=C516E48A6E6E70A0AB3D8BD39F2350C2FEFECFE936F017EBB2142877462D44D3), isEnabledTimedFlow=false), Inlined(flowClass=class net.corda.core.flows.CollectSignatureFlow, subFlowVersion=CoreFlow(platformVersion=11), isEnabledTimedFlow=false)]
    [Initiating(flowClass=class net.corda.samples.obligation.flows.IOUSettleFlow, classToInitiateWith=class net.corda.samples.obligation.flows.IOUSettleFlow, flowInfo=FlowInfo(flowVersion=1, appName=<unknown>), subFlowVersion=CorDappFlow(platformVersion=11, corDappName=workflows-1.0, corDappHash=C516E48A6E6E70A0AB3D8BD39F2350C2FEFECFE936F017EBB2142877462D44D3), isEnabledTimedFlow=false), Inlined(flowClass=class net.corda.core.flows.CollectSignatureFlow, subFlowVersion=CoreFlow(platformVersion=11), isEnabledTimedFlow=false), Inlined(flowClass=class net.corda.core.flows.SendTransactionFlow, subFlowVersion=CoreFlow(platformVersion=11), isEnabledTimedFlow=false)]


 --- Transition of flow [22fcb1c3-b5fb-4384-a563-f056a848c9bf] ---
  Timestamp: 2023-01-31T07:08:33.649Z
  Event: Suspend(ioRequest=SendAndReceive({FlowSessionImpl(destination=O=Mock Company 3, L=London, C=GB, sourceSessionId=SessionId(toLong=-5366150003449329455))=FlowSessionImpl(destination=O=Mock Company 3, L=London, C=GB, sourceSessionId=SessionId(toLong=-5366150003449329455))=85F6C6CF64868F70037CA2C6CA9FEA6EACE859A31BBC357A1324A3A5285B070C}, shouldRetrySend=false), maySkipCheckpoint=false, fiber=13E3226CE4C72E99467A39AAEF3D4C45C83A22FE3021F6945E2A5E5F95D6CBED, currentStep=Starting)
  Actions: 
    PersistCheckpoint(id=[22fcb1c3-b5fb-4384-a563-f056a848c9bf], checkpoint=Checkpoint(checkpointState=CheckpointState(invocationContext=InvocationContext(origin=RPC(actor=Actor(id=Id(value=Only For Testing), serviceId=AuthServiceId(value=TEST), owningLegalIdentity=O=Mock Company 1, L=London, C=GB)), trace=Trace(invocationId=a44904ba-ec75-4986-be2c-5a017403c704, timestamp: 2023-01-31T07:08:33.182Z, entityType: Invocation, sessionId=a44904ba-ec75-4986-be2c-5a017403c704, timestamp: 2023-01-31T07:08:33.182Z, entityType: Session), actor=Actor(id=Id(value=Only For Testing), serviceId=AuthServiceId(value=TEST), owningLegalIdentity=O=Mock Company 1, L=London, C=GB), externalTrace=null, impersonatedActor=null, arguments=[], clientId=null), ourIdentity=O=Mock Company 1, L=London, C=GB, sessions={SessionId(toLong=-5120188446144110538)=Initiated(peerParty=O=Mock Company 3, L=London, C=GB, peerFlowInfo=FlowInfo(flowVersion=1, appName=accounts-workflows-1.0), receivedMessages=[], otherSideErrored=false, peerSinkSessionId=SessionId(toLong=-2879998342928925846), deduplicationSeed=R--5120188446144110538-8166144839349113546), SessionId(toLong=-5366150003449329455)=Uninitiated(destination=O=Mock Company 3, L=London, C=GB, initiatingSubFlow=Initiating(flowClass=class net.corda.samples.obligation.flows.IOUSettleFlow, classToInitiateWith=class net.corda.samples.obligation.flows.IOUSettleFlow, flowInfo=FlowInfo(flowVersion=1, appName=<unknown>), subFlowVersion=CorDappFlow(platformVersion=11, corDappName=workflows-1.0, corDappHash=C516E48A6E6E70A0AB3D8BD39F2350C2FEFECFE936F017EBB2142877462D44D3), isEnabledTimedFlow=false), sourceSessionId=SessionId(toLong=-5366150003449329455), additionalEntropy=-6169107910265396549)}, sessionsToBeClosed=[], subFlowStack=[Initiating(flowClass=class net.corda.samples.obligation.flows.IOUSettleFlow, classToInitiateWith=class net.corda.samples.obligation.flows.IOUSettleFlow, flowInfo=FlowInfo(flowVersion=1, appName=<unknown>), subFlowVersion=CorDappFlow(platformVersion=11, corDappName=workflows-1.0, corDappHash=C516E48A6E6E70A0AB3D8BD39F2350C2FEFECFE936F017EBB2142877462D44D3), isEnabledTimedFlow=false), Inlined(flowClass=class net.corda.core.flows.CollectSignatureFlow, subFlowVersion=CoreFlow(platformVersion=11), isEnabledTimedFlow=false), Inlined(flowClass=class net.corda.core.flows.SendTransactionFlow, subFlowVersion=CoreFlow(platformVersion=11), isEnabledTimedFlow=false)], numberOfSuspends=3, numberOfCommits=4), flowState=Started(flowIORequest=SendAndReceive({FlowSessionImpl(destination=O=Mock Company 3, L=London, C=GB, sourceSessionId=SessionId(toLong=-5366150003449329455))=FlowSessionImpl(destination=O=Mock Company 3, L=London, C=GB, sourceSessionId=SessionId(toLong=-5366150003449329455))=85F6C6CF64868F70037CA2C6CA9FEA6EACE859A31BBC357A1324A3A5285B070C}, shouldRetrySend=false), frozenFiber=13E3226CE4C72E99467A39AAEF3D4C45C83A22FE3021F6945E2A5E5F95D6CBED), errorState=Clean, result=null, status=RUNNABLE, progressStep=Starting, flowIoRequest=SendAndReceive, compatible=true), isCheckpointUpdate=true)
    PersistDeduplicationFacts(deduplicationHandlers=[net.corda.testing.node.internal.MockNodeMessagingService$InMemoryDeduplicationHandler@35b19650])
    CommitTransaction
    AcknowledgeMessages(deduplicationHandlers=[net.corda.testing.node.internal.MockNodeMessagingService$InMemoryDeduplicationHandler@35b19650])
    ScheduleEvent(event=DoRemainingWork)
  Continuation: ProcessEvents
  Diff between previous and next state:
pendingDeduplicationHandlers: 
    [net.corda.testing.node.internal.MockNodeMessagingService$InMemoryDeduplicationHandler@35b19650]
    []
checkpoint.flowState.flowIORequest: 
    Receive(sessions=[FlowSessionImpl(destination=O=Mock Company 3, L=London, C=GB, sourceSessionId=SessionId(toLong=-5120188446144110538))])
    SendAndReceive({FlowSessionImpl(destination=O=Mock Company 3, L=London, C=GB, sourceSessionId=SessionId(toLong=-5366150003449329455))=FlowSessionImpl(destination=O=Mock Company 3, L=London, C=GB, sourceSessionId=SessionId(toLong=-5366150003449329455))=85F6C6CF64868F70037CA2C6CA9FEA6EACE859A31BBC357A1324A3A5285B070C}, shouldRetrySend=false)
checkpoint.flowState.frozenFiber.hash: 
    D38478FF707B110750CD6AC04200B119FCA04BEDAD9BA1AA138ECBF6B33F3796
    13E3226CE4C72E99467A39AAEF3D4C45C83A22FE3021F6945E2A5E5F95D6CBED
checkpoint.checkpointState.numberOfSuspends: 
    2
    3
checkpoint.checkpointState.numberOfCommits: 
    3
    4
checkpoint.timestamp: 
    2023-01-31T07:08:33.644Z
    2023-01-31T07:08:33.647Z
isFlowResumed: 
    true
    false
numberOfCommits: 
    3
    4


 --- Transition of flow [22fcb1c3-b5fb-4384-a563-f056a848c9bf] ---
  Timestamp: 2023-01-31T07:08:33.650Z
  Event: DoRemainingWork
  Actions: 
    SendMultiple(sendInitial=[SendInitial(destination=O=Mock Company 3, L=London, C=GB, initialise=InitialSessionMessage(initiatorSessionId=SessionId(toLong=-5366150003449329455), initiationEntropy=-6169107910265396549, initiatorFlowClassName=net.corda.samples.obligation.flows.IOUSettleFlow, appName=<unknown>, firstPayload=class net.corda.core.serialization.SerializedBytes), deduplicationId=SenderDeduplicationId(deduplicationId=DeduplicationId(toString=N-R--5366150003449329455--6169107910265396549-3-0), senderUUID=6085e859-0547-41f5-8009-8ac07555639a))], sendExisting=[])
  Continuation: ProcessEvents
  Diff between previous and next state:
checkpoint.flowState.flowIORequest: 
    SendAndReceive({FlowSessionImpl(destination=O=Mock Company 3, L=London, C=GB, sourceSessionId=SessionId(toLong=-5366150003449329455))=FlowSessionImpl(destination=O=Mock Company 3, L=London, C=GB, sourceSessionId=SessionId(toLong=-5366150003449329455))=85F6C6CF64868F70037CA2C6CA9FEA6EACE859A31BBC357A1324A3A5285B070C}, shouldRetrySend=false)
    Receive(sessions=[FlowSessionImpl(destination=O=Mock Company 3, L=London, C=GB, sourceSessionId=SessionId(toLong=-5366150003449329455))])
checkpoint.checkpointState.sessions.SessionId(toLong=-5366150003449329455): 
    Uninitiated(destination=O=Mock Company 3, L=London, C=GB, initiatingSubFlow=Initiating(flowClass=class net.corda.samples.obligation.flows.IOUSettleFlow, classToInitiateWith=class net.corda.samples.obligation.flows.IOUSettleFlow, flowInfo=FlowInfo(flowVersion=1, appName=<unknown>), subFlowVersion=CorDappFlow(platformVersion=11, corDappName=workflows-1.0, corDappHash=C516E48A6E6E70A0AB3D8BD39F2350C2FEFECFE936F017EBB2142877462D44D3), isEnabledTimedFlow=false), sourceSessionId=SessionId(toLong=-5366150003449329455), additionalEntropy=-6169107910265396549)
    Initiating(bufferedMessages=[], rejectionError=null, deduplicationSeed=R--5366150003449329455--6169107910265396549)
checkpoint.timestamp: 
    2023-01-31T07:08:33.647Z
    2023-01-31T07:08:33.649Z


 --- Transition of flow [22fcb1c3-b5fb-4384-a563-f056a848c9bf] ---
  Timestamp: 2023-01-31T07:08:33.671Z
  Event: DeliverSessionMessage(sessionMessage=ExistingSessionMessage(recipientSessionId=SessionId(toLong=-5120188446144110538), payload=net.corda.node.services.statemachine.EndSessionMessage@2a9a85ce), deduplicationHandler=net.corda.testing.node.internal.MockNodeMessagingService$InMemoryDeduplicationHandler@5623ecdb, sender=O=Mock Company 3, L=London, C=GB)
  Actions: 
    ScheduleEvent(event=DoRemainingWork)
  Continuation: ProcessEvents
  Diff between previous and next state:
pendingDeduplicationHandlers: 
    []
    [net.corda.testing.node.internal.MockNodeMessagingService$InMemoryDeduplicationHandler@5623ecdb]
checkpoint.checkpointState.sessions.SessionId(toLong=-5120188446144110538).receivedMessages.isEmpty: 
    true
    false
checkpoint.checkpointState.sessionsToBeClosed: 
    []
    [SessionId(toLong=-5120188446144110538)]
checkpoint.timestamp: 
    2023-01-31T07:08:33.649Z
    2023-01-31T07:08:33.671Z


 --- Transition of flow [22fcb1c3-b5fb-4384-a563-f056a848c9bf] ---
  Timestamp: 2023-01-31T07:08:33.671Z
  Event: DoRemainingWork
  Actions: 
    RemoveSessionBindings(sessionIds=[SessionId(toLong=-5120188446144110538)])
  Continuation: ProcessEvents
  Diff between previous and next state:
checkpoint.checkpointState.sessions.SessionId(toLong=-5120188446144110538): 
    Initiated(peerParty=O=Mock Company 3, L=London, C=GB, peerFlowInfo=FlowInfo(flowVersion=1, appName=accounts-workflows-1.0), receivedMessages=[net.corda.node.services.statemachine.EndSessionMessage@2a9a85ce], otherSideErrored=false, peerSinkSessionId=SessionId(toLong=-2879998342928925846), deduplicationSeed=R--5120188446144110538-8166144839349113546)
    null
checkpoint.checkpointState.sessionsToBeClosed: 
    [SessionId(toLong=-5120188446144110538)]
    []


 --- Transition of flow [22fcb1c3-b5fb-4384-a563-f056a848c9bf] ---
  Timestamp: 2023-01-31T07:08:33.673Z
  Event: DeliverSessionMessage(sessionMessage=ExistingSessionMessage(recipientSessionId=SessionId(toLong=-5366150003449329455), payload=ConfirmSessionMessage(initiatedSessionId=SessionId(toLong=-8071260149716765667), initiatedFlowInfo=FlowInfo(flowVersion=1, appName=<unknown>))), deduplicationHandler=net.corda.testing.node.internal.MockNodeMessagingService$InMemoryDeduplicationHandler@2f9747a7, sender=O=Mock Company 3, L=London, C=GB)
  Actions: 
    ScheduleEvent(event=DoRemainingWork)
  Continuation: ProcessEvents
  Diff between previous and next state:
pendingDeduplicationHandlers: 
    [net.corda.testing.node.internal.MockNodeMessagingService$InMemoryDeduplicationHandler@5623ecdb]
    [net.corda.testing.node.internal.MockNodeMessagingService$InMemoryDeduplicationHandler@5623ecdb, net.corda.testing.node.internal.MockNodeMessagingService$InMemoryDeduplicationHandler@2f9747a7]
checkpoint.checkpointState.sessions.SessionId(toLong=-5366150003449329455): 
    Initiating(bufferedMessages=[], rejectionError=null, deduplicationSeed=R--5366150003449329455--6169107910265396549)
    Initiated(peerParty=O=Mock Company 3, L=London, C=GB, peerFlowInfo=FlowInfo(flowVersion=1, appName=<unknown>), receivedMessages=[], otherSideErrored=false, peerSinkSessionId=SessionId(toLong=-8071260149716765667), deduplicationSeed=R--5366150003449329455--6169107910265396549)
checkpoint.timestamp: 
    2023-01-31T07:08:33.671Z
    2023-01-31T07:08:33.673Z


 --- Transition of flow [22fcb1c3-b5fb-4384-a563-f056a848c9bf] ---
  Timestamp: 2023-01-31T07:08:33.673Z
  Event: DoRemainingWork
  Actions: 
    
  Continuation: ProcessEvents
  Diff between previous and next state:
null

 --- Transition of flow [22fcb1c3-b5fb-4384-a563-f056a848c9bf] ---
  Timestamp: 2023-01-31T07:08:33.674Z
  Event: DeliverSessionMessage(sessionMessage=ExistingSessionMessage(recipientSessionId=SessionId(toLong=-5366150003449329455), payload=DataSessionMessage(payload=class net.corda.core.serialization.SerializedBytes)), deduplicationHandler=net.corda.testing.node.internal.MockNodeMessagingService$InMemoryDeduplicationHandler@5dd52523, sender=O=Mock Company 3, L=London, C=GB)
  Actions: 
    ScheduleEvent(event=DoRemainingWork)
  Continuation: ProcessEvents
  Diff between previous and next state:
pendingDeduplicationHandlers: 
    [net.corda.testing.node.internal.MockNodeMessagingService$InMemoryDeduplicationHandler@5623ecdb, net.corda.testing.node.internal.MockNodeMessagingService$InMemoryDeduplicationHandler@2f9747a7]
    [net.corda.testing.node.internal.MockNodeMessagingService$InMemoryDeduplicationHandler@5623ecdb, net.corda.testing.node.internal.MockNodeMessagingService$InMemoryDeduplicationHandler@2f9747a7, net.corda.testing.node.internal.MockNodeMessagingService$InMemoryDeduplicationHandler@5dd52523]
checkpoint.checkpointState.sessions.SessionId(toLong=-5366150003449329455).receivedMessages.isEmpty: 
    true
    false
checkpoint.timestamp: 
    2023-01-31T07:08:33.673Z
    2023-01-31T07:08:33.674Z


 --- Transition of flow [22fcb1c3-b5fb-4384-a563-f056a848c9bf] ---
  Timestamp: 2023-01-31T07:08:33.674Z
  Event: DoRemainingWork
  Actions: 
    CreateTransaction
  Continuation: Resume(result=class java.util.LinkedHashMap)
  Diff between previous and next state:
checkpoint.checkpointState.sessions.SessionId(toLong=-5366150003449329455).receivedMessages.isEmpty: 
    false
    true
isFlowResumed: 
    false
    true


 --- Transition of flow [22fcb1c3-b5fb-4384-a563-f056a848c9bf] ---
  Timestamp: 2023-01-31T07:08:33.678Z
  Event: Suspend(ioRequest=SendAndReceive({FlowSessionImpl(destination=O=Mock Company 3, L=London, C=GB, sourceSessionId=SessionId(toLong=-5366150003449329455))=FlowSessionImpl(destination=O=Mock Company 3, L=London, C=GB, sourceSessionId=SessionId(toLong=-5366150003449329455))=2A8BD9FC79E810170F0C13B73B96DCCFABD817F669EC7E084F8A3FAB021EBB82}, shouldRetrySend=false), maySkipCheckpoint=false, fiber=676EBA282EA52AB950831FCE7B30387BAD127F8DA492617AB930D450FC0B3281, currentStep=Starting)
  Actions: 
    PersistCheckpoint(id=[22fcb1c3-b5fb-4384-a563-f056a848c9bf], checkpoint=Checkpoint(checkpointState=CheckpointState(invocationContext=InvocationContext(origin=RPC(actor=Actor(id=Id(value=Only For Testing), serviceId=AuthServiceId(value=TEST), owningLegalIdentity=O=Mock Company 1, L=London, C=GB)), trace=Trace(invocationId=a44904ba-ec75-4986-be2c-5a017403c704, timestamp: 2023-01-31T07:08:33.182Z, entityType: Invocation, sessionId=a44904ba-ec75-4986-be2c-5a017403c704, timestamp: 2023-01-31T07:08:33.182Z, entityType: Session), actor=Actor(id=Id(value=Only For Testing), serviceId=AuthServiceId(value=TEST), owningLegalIdentity=O=Mock Company 1, L=London, C=GB), externalTrace=null, impersonatedActor=null, arguments=[], clientId=null), ourIdentity=O=Mock Company 1, L=London, C=GB, sessions={SessionId(toLong=-5366150003449329455)=Initiated(peerParty=O=Mock Company 3, L=London, C=GB, peerFlowInfo=FlowInfo(flowVersion=1, appName=<unknown>), receivedMessages=[], otherSideErrored=false, peerSinkSessionId=SessionId(toLong=-8071260149716765667), deduplicationSeed=R--5366150003449329455--6169107910265396549)}, sessionsToBeClosed=[], subFlowStack=[Initiating(flowClass=class net.corda.samples.obligation.flows.IOUSettleFlow, classToInitiateWith=class net.corda.samples.obligation.flows.IOUSettleFlow, flowInfo=FlowInfo(flowVersion=1, appName=<unknown>), subFlowVersion=CorDappFlow(platformVersion=11, corDappName=workflows-1.0, corDappHash=C516E48A6E6E70A0AB3D8BD39F2350C2FEFECFE936F017EBB2142877462D44D3), isEnabledTimedFlow=false), Inlined(flowClass=class net.corda.core.flows.CollectSignatureFlow, subFlowVersion=CoreFlow(platformVersion=11), isEnabledTimedFlow=false), Inlined(flowClass=class net.corda.core.flows.SendTransactionFlow, subFlowVersion=CoreFlow(platformVersion=11), isEnabledTimedFlow=false)], numberOfSuspends=4, numberOfCommits=5), flowState=Started(flowIORequest=SendAndReceive({FlowSessionImpl(destination=O=Mock Company 3, L=London, C=GB, sourceSessionId=SessionId(toLong=-5366150003449329455))=FlowSessionImpl(destination=O=Mock Company 3, L=London, C=GB, sourceSessionId=SessionId(toLong=-5366150003449329455))=2A8BD9FC79E810170F0C13B73B96DCCFABD817F669EC7E084F8A3FAB021EBB82}, shouldRetrySend=false), frozenFiber=676EBA282EA52AB950831FCE7B30387BAD127F8DA492617AB930D450FC0B3281), errorState=Clean, result=null, status=RUNNABLE, progressStep=Starting, flowIoRequest=SendAndReceive, compatible=true), isCheckpointUpdate=true)
    PersistDeduplicationFacts(deduplicationHandlers=[net.corda.testing.node.internal.MockNodeMessagingService$InMemoryDeduplicationHandler@5623ecdb, net.corda.testing.node.internal.MockNodeMessagingService$InMemoryDeduplicationHandler@2f9747a7, net.corda.testing.node.internal.MockNodeMessagingService$InMemoryDeduplicationHandler@5dd52523])
    CommitTransaction
    AcknowledgeMessages(deduplicationHandlers=[net.corda.testing.node.internal.MockNodeMessagingService$InMemoryDeduplicationHandler@5623ecdb, net.corda.testing.node.internal.MockNodeMessagingService$InMemoryDeduplicationHandler@2f9747a7, net.corda.testing.node.internal.MockNodeMessagingService$InMemoryDeduplicationHandler@5dd52523])
    ScheduleEvent(event=DoRemainingWork)
  Continuation: ProcessEvents
  Diff between previous and next state:
pendingDeduplicationHandlers: 
    [net.corda.testing.node.internal.MockNodeMessagingService$InMemoryDeduplicationHandler@5623ecdb, net.corda.testing.node.internal.MockNodeMessagingService$InMemoryDeduplicationHandler@2f9747a7, net.corda.testing.node.internal.MockNodeMessagingService$InMemoryDeduplicationHandler@5dd52523]
    []
checkpoint.flowState.flowIORequest: 
    Receive(sessions=[FlowSessionImpl(destination=O=Mock Company 3, L=London, C=GB, sourceSessionId=SessionId(toLong=-5366150003449329455))])
    SendAndReceive({FlowSessionImpl(destination=O=Mock Company 3, L=London, C=GB, sourceSessionId=SessionId(toLong=-5366150003449329455))=FlowSessionImpl(destination=O=Mock Company 3, L=London, C=GB, sourceSessionId=SessionId(toLong=-5366150003449329455))=2A8BD9FC79E810170F0C13B73B96DCCFABD817F669EC7E084F8A3FAB021EBB82}, shouldRetrySend=false)
checkpoint.flowState.frozenFiber.hash: 
    13E3226CE4C72E99467A39AAEF3D4C45C83A22FE3021F6945E2A5E5F95D6CBED
    676EBA282EA52AB950831FCE7B30387BAD127F8DA492617AB930D450FC0B3281
checkpoint.checkpointState.numberOfSuspends: 
    3
    4
checkpoint.checkpointState.numberOfCommits: 
    4
    5
checkpoint.timestamp: 
    2023-01-31T07:08:33.674Z
    2023-01-31T07:08:33.677Z
isFlowResumed: 
    true
    false
numberOfCommits: 
    4
    5


 --- Transition of flow [22fcb1c3-b5fb-4384-a563-f056a848c9bf] ---
  Timestamp: 2023-01-31T07:08:33.679Z
  Event: DoRemainingWork
  Actions: 
    SendMultiple(sendInitial=[], sendExisting=[SendExisting(peerParty=O=Mock Company 3, L=London, C=GB, message=ExistingSessionMessage(recipientSessionId=SessionId(toLong=-8071260149716765667), payload=DataSessionMessage(payload=class net.corda.core.serialization.SerializedBytes)), deduplicationId=SenderDeduplicationId(deduplicationId=DeduplicationId(toString=N-R--5366150003449329455--6169107910265396549-4-0), senderUUID=6085e859-0547-41f5-8009-8ac07555639a))])
  Continuation: ProcessEvents
  Diff between previous and next state:
checkpoint.flowState.flowIORequest: 
    SendAndReceive({FlowSessionImpl(destination=O=Mock Company 3, L=London, C=GB, sourceSessionId=SessionId(toLong=-5366150003449329455))=FlowSessionImpl(destination=O=Mock Company 3, L=London, C=GB, sourceSessionId=SessionId(toLong=-5366150003449329455))=2A8BD9FC79E810170F0C13B73B96DCCFABD817F669EC7E084F8A3FAB021EBB82}, shouldRetrySend=false)
    Receive(sessions=[FlowSessionImpl(destination=O=Mock Company 3, L=London, C=GB, sourceSessionId=SessionId(toLong=-5366150003449329455))])
checkpoint.timestamp: 
    2023-01-31T07:08:33.677Z
    2023-01-31T07:08:33.679Z


 --- Transition of flow [22fcb1c3-b5fb-4384-a563-f056a848c9bf] ---
  Timestamp: 2023-01-31T07:08:33.993Z
  Event: DeliverSessionMessage(sessionMessage=ExistingSessionMessage(recipientSessionId=SessionId(toLong=-5366150003449329455), payload=DataSessionMessage(payload=class net.corda.core.serialization.SerializedBytes)), deduplicationHandler=net.corda.testing.node.internal.MockNodeMessagingService$InMemoryDeduplicationHandler@3eee0fda, sender=O=Mock Company 3, L=London, C=GB)
  Actions: 
    ScheduleEvent(event=DoRemainingWork)
  Continuation: ProcessEvents
  Diff between previous and next state:
pendingDeduplicationHandlers: 
    []
    [net.corda.testing.node.internal.MockNodeMessagingService$InMemoryDeduplicationHandler@3eee0fda]
checkpoint.checkpointState.sessions.SessionId(toLong=-5366150003449329455).receivedMessages.isEmpty: 
    true
    false
checkpoint.timestamp: 
    2023-01-31T07:08:33.679Z
    2023-01-31T07:08:33.993Z


 --- Transition of flow [22fcb1c3-b5fb-4384-a563-f056a848c9bf] ---
  Timestamp: 2023-01-31T07:08:33.993Z
  Event: DoRemainingWork
  Actions: 
    CreateTransaction
  Continuation: Resume(result=class java.util.LinkedHashMap)
  Diff between previous and next state:
checkpoint.checkpointState.sessions.SessionId(toLong=-5366150003449329455).receivedMessages.isEmpty: 
    false
    true
isFlowResumed: 
    false
    true


 --- Transition of flow [22fcb1c3-b5fb-4384-a563-f056a848c9bf] ---
  Timestamp: 2023-01-31T07:08:33.994Z
  Event: LeaveSubFlow
  Actions: 
    
  Continuation: ProcessEvents
  Diff between previous and next state:
checkpoint.checkpointState.subFlowStack: 
    [Initiating(flowClass=class net.corda.samples.obligation.flows.IOUSettleFlow, classToInitiateWith=class net.corda.samples.obligation.flows.IOUSettleFlow, flowInfo=FlowInfo(flowVersion=1, appName=<unknown>), subFlowVersion=CorDappFlow(platformVersion=11, corDappName=workflows-1.0, corDappHash=C516E48A6E6E70A0AB3D8BD39F2350C2FEFECFE936F017EBB2142877462D44D3), isEnabledTimedFlow=false), Inlined(flowClass=class net.corda.core.flows.CollectSignatureFlow, subFlowVersion=CoreFlow(platformVersion=11), isEnabledTimedFlow=false), Inlined(flowClass=class net.corda.core.flows.SendTransactionFlow, subFlowVersion=CoreFlow(platformVersion=11), isEnabledTimedFlow=false)]
    [Initiating(flowClass=class net.corda.samples.obligation.flows.IOUSettleFlow, classToInitiateWith=class net.corda.samples.obligation.flows.IOUSettleFlow, flowInfo=FlowInfo(flowVersion=1, appName=<unknown>), subFlowVersion=CorDappFlow(platformVersion=11, corDappName=workflows-1.0, corDappHash=C516E48A6E6E70A0AB3D8BD39F2350C2FEFECFE936F017EBB2142877462D44D3), isEnabledTimedFlow=false), Inlined(flowClass=class net.corda.core.flows.CollectSignatureFlow, subFlowVersion=CoreFlow(platformVersion=11), isEnabledTimedFlow=false)]
checkpoint.timestamp: 
    2023-01-31T07:08:33.993Z
    2023-01-31T07:08:33.994Z


 --- Transition of flow [22fcb1c3-b5fb-4384-a563-f056a848c9bf] ---
  Timestamp: 2023-01-31T07:08:33.997Z
  Event: Suspend(ioRequest=Send(sessionToMessage={FlowSessionImpl(destination=O=Mock Company 3, L=London, C=GB, sourceSessionId=SessionId(toLong=-5366150003449329455))=8C56A564DD55409F8334D8F5ADE1503A634CEF4A8EF50C3C248AC67674699983}), maySkipCheckpoint=false, fiber=3B3C56BC9D59FDA411F35B57FFBBA60002C78B7D4DCC944748CE90686469B836, currentStep=Starting)
  Actions: 
    PersistCheckpoint(id=[22fcb1c3-b5fb-4384-a563-f056a848c9bf], checkpoint=Checkpoint(checkpointState=CheckpointState(invocationContext=InvocationContext(origin=RPC(actor=Actor(id=Id(value=Only For Testing), serviceId=AuthServiceId(value=TEST), owningLegalIdentity=O=Mock Company 1, L=London, C=GB)), trace=Trace(invocationId=a44904ba-ec75-4986-be2c-5a017403c704, timestamp: 2023-01-31T07:08:33.182Z, entityType: Invocation, sessionId=a44904ba-ec75-4986-be2c-5a017403c704, timestamp: 2023-01-31T07:08:33.182Z, entityType: Session), actor=Actor(id=Id(value=Only For Testing), serviceId=AuthServiceId(value=TEST), owningLegalIdentity=O=Mock Company 1, L=London, C=GB), externalTrace=null, impersonatedActor=null, arguments=[], clientId=null), ourIdentity=O=Mock Company 1, L=London, C=GB, sessions={SessionId(toLong=-5366150003449329455)=Initiated(peerParty=O=Mock Company 3, L=London, C=GB, peerFlowInfo=FlowInfo(flowVersion=1, appName=<unknown>), receivedMessages=[], otherSideErrored=false, peerSinkSessionId=SessionId(toLong=-8071260149716765667), deduplicationSeed=R--5366150003449329455--6169107910265396549)}, sessionsToBeClosed=[], subFlowStack=[Initiating(flowClass=class net.corda.samples.obligation.flows.IOUSettleFlow, classToInitiateWith=class net.corda.samples.obligation.flows.IOUSettleFlow, flowInfo=FlowInfo(flowVersion=1, appName=<unknown>), subFlowVersion=CorDappFlow(platformVersion=11, corDappName=workflows-1.0, corDappHash=C516E48A6E6E70A0AB3D8BD39F2350C2FEFECFE936F017EBB2142877462D44D3), isEnabledTimedFlow=false), Inlined(flowClass=class net.corda.core.flows.CollectSignatureFlow, subFlowVersion=CoreFlow(platformVersion=11), isEnabledTimedFlow=false)], numberOfSuspends=5, numberOfCommits=6), flowState=Started(flowIORequest=Send(sessionToMessage={FlowSessionImpl(destination=O=Mock Company 3, L=London, C=GB, sourceSessionId=SessionId(toLong=-5366150003449329455))=8C56A564DD55409F8334D8F5ADE1503A634CEF4A8EF50C3C248AC67674699983}), frozenFiber=3B3C56BC9D59FDA411F35B57FFBBA60002C78B7D4DCC944748CE90686469B836), errorState=Clean, result=null, status=RUNNABLE, progressStep=Starting, flowIoRequest=Send, compatible=true), isCheckpointUpdate=true)
    PersistDeduplicationFacts(deduplicationHandlers=[net.corda.testing.node.internal.MockNodeMessagingService$InMemoryDeduplicationHandler@3eee0fda])
    CommitTransaction
    AcknowledgeMessages(deduplicationHandlers=[net.corda.testing.node.internal.MockNodeMessagingService$InMemoryDeduplicationHandler@3eee0fda])
    ScheduleEvent(event=DoRemainingWork)
  Continuation: ProcessEvents
  Diff between previous and next state:
pendingDeduplicationHandlers: 
    [net.corda.testing.node.internal.MockNodeMessagingService$InMemoryDeduplicationHandler@3eee0fda]
    []
checkpoint.flowState.flowIORequest: 
    Receive(sessions=[FlowSessionImpl(destination=O=Mock Company 3, L=London, C=GB, sourceSessionId=SessionId(toLong=-5366150003449329455))])
    Send(sessionToMessage={FlowSessionImpl(destination=O=Mock Company 3, L=London, C=GB, sourceSessionId=SessionId(toLong=-5366150003449329455))=8C56A564DD55409F8334D8F5ADE1503A634CEF4A8EF50C3C248AC67674699983})
checkpoint.flowState.frozenFiber.hash: 
    676EBA282EA52AB950831FCE7B30387BAD127F8DA492617AB930D450FC0B3281
    3B3C56BC9D59FDA411F35B57FFBBA60002C78B7D4DCC944748CE90686469B836
checkpoint.flowIoRequest: 
    SendAndReceive
    Send
checkpoint.checkpointState.numberOfSuspends: 
    4
    5
checkpoint.checkpointState.numberOfCommits: 
    5
    6
checkpoint.timestamp: 
    2023-01-31T07:08:33.994Z
    2023-01-31T07:08:33.995Z
isFlowResumed: 
    true
    false
numberOfCommits: 
    5
    6


 --- Transition of flow [22fcb1c3-b5fb-4384-a563-f056a848c9bf] ---
  Timestamp: 2023-01-31T07:08:33.997Z
  Event: DoRemainingWork
  Actions: 
    SendMultiple(sendInitial=[], sendExisting=[SendExisting(peerParty=O=Mock Company 3, L=London, C=GB, message=ExistingSessionMessage(recipientSessionId=SessionId(toLong=-8071260149716765667), payload=DataSessionMessage(payload=class net.corda.core.serialization.SerializedBytes)), deduplicationId=SenderDeduplicationId(deduplicationId=DeduplicationId(toString=N-R--5366150003449329455--6169107910265396549-5-0), senderUUID=6085e859-0547-41f5-8009-8ac07555639a))])
    CreateTransaction
  Continuation: Resume(result=class kotlin.Unit)
  Diff between previous and next state:
isFlowResumed: 
    false
    true


 --- Transition of flow [22fcb1c3-b5fb-4384-a563-f056a848c9bf] ---
  Timestamp: 2023-01-31T07:08:34Z
  Event: Suspend(ioRequest=Receive(sessions=[FlowSessionImpl(destination=O=Mock Company 3, L=London, C=GB, sourceSessionId=SessionId(toLong=-5366150003449329455))]), maySkipCheckpoint=false, fiber=C035A1309FE585750ED12DDFAD73E66663397EC0D1334F075FD37DF06B5F8048, currentStep=Starting)
  Actions: 
    PersistCheckpoint(id=[22fcb1c3-b5fb-4384-a563-f056a848c9bf], checkpoint=Checkpoint(checkpointState=CheckpointState(invocationContext=InvocationContext(origin=RPC(actor=Actor(id=Id(value=Only For Testing), serviceId=AuthServiceId(value=TEST), owningLegalIdentity=O=Mock Company 1, L=London, C=GB)), trace=Trace(invocationId=a44904ba-ec75-4986-be2c-5a017403c704, timestamp: 2023-01-31T07:08:33.182Z, entityType: Invocation, sessionId=a44904ba-ec75-4986-be2c-5a017403c704, timestamp: 2023-01-31T07:08:33.182Z, entityType: Session), actor=Actor(id=Id(value=Only For Testing), serviceId=AuthServiceId(value=TEST), owningLegalIdentity=O=Mock Company 1, L=London, C=GB), externalTrace=null, impersonatedActor=null, arguments=[], clientId=null), ourIdentity=O=Mock Company 1, L=London, C=GB, sessions={SessionId(toLong=-5366150003449329455)=Initiated(peerParty=O=Mock Company 3, L=London, C=GB, peerFlowInfo=FlowInfo(flowVersion=1, appName=<unknown>), receivedMessages=[], otherSideErrored=false, peerSinkSessionId=SessionId(toLong=-8071260149716765667), deduplicationSeed=R--5366150003449329455--6169107910265396549)}, sessionsToBeClosed=[], subFlowStack=[Initiating(flowClass=class net.corda.samples.obligation.flows.IOUSettleFlow, classToInitiateWith=class net.corda.samples.obligation.flows.IOUSettleFlow, flowInfo=FlowInfo(flowVersion=1, appName=<unknown>), subFlowVersion=CorDappFlow(platformVersion=11, corDappName=workflows-1.0, corDappHash=C516E48A6E6E70A0AB3D8BD39F2350C2FEFECFE936F017EBB2142877462D44D3), isEnabledTimedFlow=false), Inlined(flowClass=class net.corda.core.flows.CollectSignatureFlow, subFlowVersion=CoreFlow(platformVersion=11), isEnabledTimedFlow=false)], numberOfSuspends=6, numberOfCommits=7), flowState=Started(flowIORequest=Receive(sessions=[FlowSessionImpl(destination=O=Mock Company 3, L=London, C=GB, sourceSessionId=SessionId(toLong=-5366150003449329455))]), frozenFiber=C035A1309FE585750ED12DDFAD73E66663397EC0D1334F075FD37DF06B5F8048), errorState=Clean, result=null, status=RUNNABLE, progressStep=Starting, flowIoRequest=Receive, compatible=true), isCheckpointUpdate=true)
    PersistDeduplicationFacts(deduplicationHandlers=[])
    CommitTransaction
    AcknowledgeMessages(deduplicationHandlers=[])
    ScheduleEvent(event=DoRemainingWork)
  Continuation: ProcessEvents
  Diff between previous and next state:
checkpoint.flowState.flowIORequest: 
    Send(sessionToMessage={FlowSessionImpl(destination=O=Mock Company 3, L=London, C=GB, sourceSessionId=SessionId(toLong=-5366150003449329455))=8C56A564DD55409F8334D8F5ADE1503A634CEF4A8EF50C3C248AC67674699983})
    Receive(sessions=[FlowSessionImpl(destination=O=Mock Company 3, L=London, C=GB, sourceSessionId=SessionId(toLong=-5366150003449329455))])
checkpoint.flowState.frozenFiber.hash: 
    3B3C56BC9D59FDA411F35B57FFBBA60002C78B7D4DCC944748CE90686469B836
    C035A1309FE585750ED12DDFAD73E66663397EC0D1334F075FD37DF06B5F8048
checkpoint.flowIoRequest: 
    Send
    Receive
checkpoint.checkpointState.numberOfSuspends: 
    5
    6
checkpoint.checkpointState.numberOfCommits: 
    6
    7
checkpoint.timestamp: 
    2023-01-31T07:08:33.997Z
    2023-01-31T07:08:33.999Z
isFlowResumed: 
    true
    false
numberOfCommits: 
    6
    7


 --- Transition of flow [22fcb1c3-b5fb-4384-a563-f056a848c9bf] ---
  Timestamp: 2023-01-31T07:08:34.001Z
  Event: DoRemainingWork
  Actions: 
    
  Continuation: ProcessEvents
  Diff between previous and next state:
null

 --- Transition of flow [22fcb1c3-b5fb-4384-a563-f056a848c9bf] ---
  Timestamp: 2023-01-31T07:08:34.014Z
  Event: DeliverSessionMessage(sessionMessage=ExistingSessionMessage(recipientSessionId=SessionId(toLong=-5366150003449329455), payload=DataSessionMessage(payload=class net.corda.core.serialization.SerializedBytes)), deduplicationHandler=net.corda.testing.node.internal.MockNodeMessagingService$InMemoryDeduplicationHandler@a8aadcd, sender=O=Mock Company 3, L=London, C=GB)
  Actions: 
    ScheduleEvent(event=DoRemainingWork)
  Continuation: ProcessEvents
  Diff between previous and next state:
pendingDeduplicationHandlers: 
    []
    [net.corda.testing.node.internal.MockNodeMessagingService$InMemoryDeduplicationHandler@a8aadcd]
checkpoint.checkpointState.sessions.SessionId(toLong=-5366150003449329455).receivedMessages.isEmpty: 
    true
    false
checkpoint.timestamp: 
    2023-01-31T07:08:34.001Z
    2023-01-31T07:08:34.014Z


 --- Transition of flow [22fcb1c3-b5fb-4384-a563-f056a848c9bf] ---
  Timestamp: 2023-01-31T07:08:34.014Z
  Event: DoRemainingWork
  Actions: 
    CreateTransaction
  Continuation: Resume(result=class java.util.LinkedHashMap)
  Diff between previous and next state:
checkpoint.checkpointState.sessions.SessionId(toLong=-5366150003449329455).receivedMessages.isEmpty: 
    false
    true
isFlowResumed: 
    false
    true


 --- Transition of flow [22fcb1c3-b5fb-4384-a563-f056a848c9bf] ---
  Timestamp: 2023-01-31T07:08:34.015Z
  Event: LeaveSubFlow
  Actions: 
    
  Continuation: ProcessEvents
  Diff between previous and next state:
checkpoint.checkpointState.subFlowStack: 
    [Initiating(flowClass=class net.corda.samples.obligation.flows.IOUSettleFlow, classToInitiateWith=class net.corda.samples.obligation.flows.IOUSettleFlow, flowInfo=FlowInfo(flowVersion=1, appName=<unknown>), subFlowVersion=CorDappFlow(platformVersion=11, corDappName=workflows-1.0, corDappHash=C516E48A6E6E70A0AB3D8BD39F2350C2FEFECFE936F017EBB2142877462D44D3), isEnabledTimedFlow=false), Inlined(flowClass=class net.corda.core.flows.CollectSignatureFlow, subFlowVersion=CoreFlow(platformVersion=11), isEnabledTimedFlow=false)]
    [Initiating(flowClass=class net.corda.samples.obligation.flows.IOUSettleFlow, classToInitiateWith=class net.corda.samples.obligation.flows.IOUSettleFlow, flowInfo=FlowInfo(flowVersion=1, appName=<unknown>), subFlowVersion=CorDappFlow(platformVersion=11, corDappName=workflows-1.0, corDappHash=C516E48A6E6E70A0AB3D8BD39F2350C2FEFECFE936F017EBB2142877462D44D3), isEnabledTimedFlow=false)]
checkpoint.timestamp: 
    2023-01-31T07:08:34.014Z
    2023-01-31T07:08:34.015Z


 --- Transition of flow [22fcb1c3-b5fb-4384-a563-f056a848c9bf] ---
  Timestamp: 2023-01-31T07:08:34.015Z
  Event: EnterSubFlow(subFlowClass=class net.corda.core.flows.FinalityFlow, subFlowVersion=CoreFlow(platformVersion=11), isEnabledTimedFlow=false)
  Actions: 
    
  Continuation: ProcessEvents
  Diff between previous and next state:
checkpoint.checkpointState.subFlowStack: 
    [Initiating(flowClass=class net.corda.samples.obligation.flows.IOUSettleFlow, classToInitiateWith=class net.corda.samples.obligation.flows.IOUSettleFlow, flowInfo=FlowInfo(flowVersion=1, appName=<unknown>), subFlowVersion=CorDappFlow(platformVersion=11, corDappName=workflows-1.0, corDappHash=C516E48A6E6E70A0AB3D8BD39F2350C2FEFECFE936F017EBB2142877462D44D3), isEnabledTimedFlow=false)]
    [Initiating(flowClass=class net.corda.samples.obligation.flows.IOUSettleFlow, classToInitiateWith=class net.corda.samples.obligation.flows.IOUSettleFlow, flowInfo=FlowInfo(flowVersion=1, appName=<unknown>), subFlowVersion=CorDappFlow(platformVersion=11, corDappName=workflows-1.0, corDappHash=C516E48A6E6E70A0AB3D8BD39F2350C2FEFECFE936F017EBB2142877462D44D3), isEnabledTimedFlow=false), Initiating(flowClass=class net.corda.core.flows.FinalityFlow, classToInitiateWith=class net.corda.core.flows.FinalityFlow, flowInfo=FlowInfo(flowVersion=1, appName=corda-core-4.9), subFlowVersion=CoreFlow(platformVersion=11), isEnabledTimedFlow=false)]


 --- Transition of flow [22fcb1c3-b5fb-4384-a563-f056a848c9bf] ---
  Timestamp: 2023-01-31T07:08:34.023Z
  Event: LeaveSubFlow
  Actions: 
    
  Continuation: ProcessEvents
  Diff between previous and next state:
checkpoint.checkpointState.subFlowStack: 
    [Initiating(flowClass=class net.corda.samples.obligation.flows.IOUSettleFlow, classToInitiateWith=class net.corda.samples.obligation.flows.IOUSettleFlow, flowInfo=FlowInfo(flowVersion=1, appName=<unknown>), subFlowVersion=CorDappFlow(platformVersion=11, corDappName=workflows-1.0, corDappHash=C516E48A6E6E70A0AB3D8BD39F2350C2FEFECFE936F017EBB2142877462D44D3), isEnabledTimedFlow=false), Initiating(flowClass=class net.corda.core.flows.FinalityFlow, classToInitiateWith=class net.corda.core.flows.FinalityFlow, flowInfo=FlowInfo(flowVersion=1, appName=corda-core-4.9), subFlowVersion=CoreFlow(platformVersion=11), isEnabledTimedFlow=false)]
    [Initiating(flowClass=class net.corda.samples.obligation.flows.IOUSettleFlow, classToInitiateWith=class net.corda.samples.obligation.flows.IOUSettleFlow, flowInfo=FlowInfo(flowVersion=1, appName=<unknown>), subFlowVersion=CorDappFlow(platformVersion=11, corDappName=workflows-1.0, corDappHash=C516E48A6E6E70A0AB3D8BD39F2350C2FEFECFE936F017EBB2142877462D44D3), isEnabledTimedFlow=false)]
checkpoint.timestamp: 
    2023-01-31T07:08:34.015Z
    2023-01-31T07:08:34.023Z


 --- Transition of flow [22fcb1c3-b5fb-4384-a563-f056a848c9bf] ---
  Timestamp: 2023-01-31T07:08:34.038Z
  Event: Error(exception=java.lang.IllegalArgumentException: Could not find Party for Anonymous(DLArfsNxSrxYiD4Af7N7nfgykJNFEEwG1qYGU5Msgn9Khs), rollback=true)
  Actions: 
    RollbackTransaction
    ScheduleEvent(event=DoRemainingWork)
  Continuation: ProcessEvents
  Diff between previous and next state:
checkpoint.errorState: 
    Clean
    Errored(errors=[FlowError(errorId=-870222702024413628, exception=java.lang.IllegalArgumentException: Could not find Party for Anonymous(DLArfsNxSrxYiD4Af7N7nfgykJNFEEwG1qYGU5Msgn9Khs))], propagatedIndex=0, propagating=false)
checkpoint.timestamp: 
    2023-01-31T07:08:34.023Z
    2023-01-31T07:08:34.025Z
isFlowResumed: 
    true
    false


 --- Transition of flow [22fcb1c3-b5fb-4384-a563-f056a848c9bf] ---
  Timestamp: 2023-01-31T07:08:34.042Z
  Event: DoRemainingWork
  Actions: 
    
  Continuation: ProcessEvents
  Diff between previous and next state:
null

 --- Transition of flow [22fcb1c3-b5fb-4384-a563-f056a848c9bf] ---
  Timestamp: 2023-01-31T07:08:34.043Z
  Event: StartErrorPropagation
  Actions: 
    ScheduleEvent(event=DoRemainingWork)
  Continuation: ProcessEvents
  Diff between previous and next state:
checkpoint.errorState.propagating: 
    false
    true
checkpoint.timestamp: 
    2023-01-31T07:08:34.025Z
    2023-01-31T07:08:34.043Z
 {actor_id=Only For Testing, actor_owning_identity=O=Mock Company 1, L=London, C=GB, actor_store_id=TEST, fiber-id=10000027, flow-id=22fcb1c3-b5fb-4384-a563-f056a848c9bf, invocation_id=a44904ba-ec75-4986-be2c-5a017403c704, invocation_timestamp=2023-01-31T07:08:33.182Z, origin=Only For Testing, session_id=a44904ba-ec75-4986-be2c-5a017403c704, session_timestamp=2023-01-31T07:08:33.182Z, thread-id=854, tx_id=0DFF1D65C786D2F8443A0291C9DD252856A4D061214F27B9FC98D7C999E3139E}
[WARN ] 2023-01-31T07:08:34,071Z [Mock network] interceptors.DumpHistoryOnErrorInterceptor. - Flow [22fcb1c3-b5fb-4384-a563-f056a848c9bf] error {actor_id=Only For Testing, actor_owning_identity=O=Mock Company 1, L=London, C=GB, actor_store_id=TEST, fiber-id=10000027, flow-id=22fcb1c3-b5fb-4384-a563-f056a848c9bf, invocation_id=a44904ba-ec75-4986-be2c-5a017403c704, invocation_timestamp=2023-01-31T07:08:33.182Z, origin=Only For Testing, session_id=a44904ba-ec75-4986-be2c-5a017403c704, session_timestamp=2023-01-31T07:08:33.182Z, thread-id=854, tx_id=0DFF1D65C786D2F8443A0291C9DD252856A4D061214F27B9FC98D7C999E3139E}
java.lang.IllegalArgumentException: Could not find Party for Anonymous(DLArfsNxSrxYiD4Af7N7nfgykJNFEEwG1qYGU5Msgn9Khs)
	at net.corda.core.identity.IdentityUtils.groupAbstractPartyByWellKnownParty(IdentityUtils.kt:47) ~[corda-core-4.9.jar:?]
	at net.corda.core.identity.IdentityUtils.groupAbstractPartyByWellKnownParty(IdentityUtils.kt:63) ~[corda-core-4.9.jar:?]
	at net.corda.core.flows.FinalityFlow.extractExternalParticipants(FinalityFlow.kt:252) ~[corda-core-4.9.jar:?]
	at net.corda.core.flows.FinalityFlow.call(FinalityFlow.kt:162) ~[corda-core-4.9.jar:?]
	at net.corda.core.flows.FinalityFlow.call(FinalityFlow.kt:43) ~[corda-core-4.9.jar:?]
	at net.corda.node.services.statemachine.FlowStateMachineImpl.subFlow(FlowStateMachineImpl.kt:420) ~[corda-node-4.9.jar:?]
	at net.corda.core.flows.FlowLogic.subFlow(FlowLogic.kt:409) ~[corda-core-4.9.jar:?]
	at net.corda.samples.obligation.flows.IOUSettleFlow.call(IOUSettleFlow.kt:116) ~[main/:?]
	at net.corda.samples.obligation.flows.IOUSettleFlow.call(IOUSettleFlow.kt:30) ~[main/:?]
	at net.corda.node.services.statemachine.FlowStateMachineImpl.run(FlowStateMachineImpl.kt:349) ~[corda-node-4.9.jar:?]
	at net.corda.node.services.statemachine.FlowStateMachineImpl.run(FlowStateMachineImpl.kt:71) ~[corda-node-4.9.jar:?]
	at co.paralleluniverse.fibers.Fiber.run1(Fiber.java:1092) ~[quasar-core-0.7.10.jar:0.7.10]
	at co.paralleluniverse.fibers.Fiber.exec(Fiber.java:788) ~[quasar-core-0.7.10.jar:0.7.10]
	at co.paralleluniverse.fibers.RunnableFiberTask.doExec(RunnableFiberTask.java:100) ~[quasar-core-0.7.10.jar:0.7.10]
	at co.paralleluniverse.fibers.RunnableFiberTask.run(RunnableFiberTask.java:91) ~[quasar-core-0.7.10.jar:0.7.10]
	at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511) ~[?:1.8.0_202]
	at java.util.concurrent.FutureTask.run(FutureTask.java:266) ~[?:1.8.0_202]
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.access$201(ScheduledThreadPoolExecutor.java:180) ~[?:1.8.0_202]
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.run(ScheduledThreadPoolExecutor.java:293) ~[?:1.8.0_202]
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149) ~[?:1.8.0_202]
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624) ~[?:1.8.0_202]
	at net.corda.node.utilities.AffinityExecutor$ServiceAffinityExecutor$1$thread$1.run(AffinityExecutor.kt:63) ~[corda-node-4.9.jar:?]
[WARN ] 2023-01-31T07:08:34,072Z [Mock network] statemachine.ActionExecutorImpl. - Propagating error {actor_id=Only For Testing, actor_owning_identity=O=Mock Company 1, L=London, C=GB, actor_store_id=TEST, fiber-id=10000027, flow-id=22fcb1c3-b5fb-4384-a563-f056a848c9bf, invocation_id=a44904ba-ec75-4986-be2c-5a017403c704, invocation_timestamp=2023-01-31T07:08:33.182Z, origin=Only For Testing, session_id=a44904ba-ec75-4986-be2c-5a017403c704, session_timestamp=2023-01-31T07:08:33.182Z, thread-id=854, tx_id=0DFF1D65C786D2F8443A0291C9DD252856A4D061214F27B9FC98D7C999E3139E}
[WARN ] 2023-01-31T07:08:34,150Z [Mock network] interceptors.DumpHistoryOnErrorInterceptor. - Flow [22fcb1c3-b5fb-4384-a563-f056a848c9bf] errored, dumping all transitions:

 --- Transition of flow [22fcb1c3-b5fb-4384-a563-f056a848c9bf] ---
  Timestamp: 2023-01-31T07:08:33.185Z
  Event: DoRemainingWork
  Actions: 
    CreateTransaction
    PersistCheckpoint(id=[22fcb1c3-b5fb-4384-a563-f056a848c9bf], checkpoint=Checkpoint(checkpointState=CheckpointState(invocationContext=InvocationContext(origin=RPC(actor=Actor(id=Id(value=Only For Testing), serviceId=AuthServiceId(value=TEST), owningLegalIdentity=O=Mock Company 1, L=London, C=GB)), trace=Trace(invocationId=a44904ba-ec75-4986-be2c-5a017403c704, timestamp: 2023-01-31T07:08:33.182Z, entityType: Invocation, sessionId=a44904ba-ec75-4986-be2c-5a017403c704, timestamp: 2023-01-31T07:08:33.182Z, entityType: Session), actor=Actor(id=Id(value=Only For Testing), serviceId=AuthServiceId(value=TEST), owningLegalIdentity=O=Mock Company 1, L=London, C=GB), externalTrace=null, impersonatedActor=null, arguments=[], clientId=null), ourIdentity=O=Mock Company 1, L=London, C=GB, sessions={}, sessionsToBeClosed=[], subFlowStack=[Initiating(flowClass=class net.corda.samples.obligation.flows.IOUSettleFlow, classToInitiateWith=class net.corda.samples.obligation.flows.IOUSettleFlow, flowInfo=FlowInfo(flowVersion=1, appName=<unknown>), subFlowVersion=CorDappFlow(platformVersion=11, corDappName=workflows-1.0, corDappHash=C516E48A6E6E70A0AB3D8BD39F2350C2FEFECFE936F017EBB2142877462D44D3), isEnabledTimedFlow=false)], numberOfSuspends=0, numberOfCommits=1), flowState=Unstarted(flowStart=Explicit, frozenFlowLogic=4FBAA4D7968AB6F06AB201FECA8EBC6663A6EFD0B75D98B6FFFB39906D1C5777), errorState=Clean, result=null, status=RUNNABLE, progressStep=null, flowIoRequest=null, compatible=true), isCheckpointUpdate=false)
    PersistDeduplicationFacts(deduplicationHandlers=[net.corda.node.internal.FlowStarterImpl$startFlow$startFlowEvent$1@e1e8bb6])
    CommitTransaction
    AcknowledgeMessages(deduplicationHandlers=[net.corda.node.internal.FlowStarterImpl$startFlow$startFlowEvent$1@e1e8bb6])
    SignalFlowHasStarted(flowId=[22fcb1c3-b5fb-4384-a563-f056a848c9bf])
    CreateTransaction
  Continuation: Resume(result=null)
  Diff between previous and next state:
pendingDeduplicationHandlers: 
    [net.corda.node.internal.FlowStarterImpl$startFlow$startFlowEvent$1@e1e8bb6]
    []
isAnyCheckpointPersisted: 
    false
    true
isFlowResumed: 
    false
    true


 --- Transition of flow [22fcb1c3-b5fb-4384-a563-f056a848c9bf] ---
  Timestamp: 2023-01-31T07:08:33.188Z
  Event: EnterSubFlow(subFlowClass=class net.corda.samples.obligation.accountUtil.NewKeyForAccount, subFlowVersion=CorDappFlow(platformVersion=11, corDappName=workflows-1.0, corDappHash=C516E48A6E6E70A0AB3D8BD39F2350C2FEFECFE936F017EBB2142877462D44D3), isEnabledTimedFlow=false)
  Actions: 
    
  Continuation: ProcessEvents
  Diff between previous and next state:
checkpoint.checkpointState.subFlowStack: 
    [Initiating(flowClass=class net.corda.samples.obligation.flows.IOUSettleFlow, classToInitiateWith=class net.corda.samples.obligation.flows.IOUSettleFlow, flowInfo=FlowInfo(flowVersion=1, appName=<unknown>), subFlowVersion=CorDappFlow(platformVersion=11, corDappName=workflows-1.0, corDappHash=C516E48A6E6E70A0AB3D8BD39F2350C2FEFECFE936F017EBB2142877462D44D3), isEnabledTimedFlow=false)]
    [Initiating(flowClass=class net.corda.samples.obligation.flows.IOUSettleFlow, classToInitiateWith=class net.corda.samples.obligation.flows.IOUSettleFlow, flowInfo=FlowInfo(flowVersion=1, appName=<unknown>), subFlowVersion=CorDappFlow(platformVersion=11, corDappName=workflows-1.0, corDappHash=C516E48A6E6E70A0AB3D8BD39F2350C2FEFECFE936F017EBB2142877462D44D3), isEnabledTimedFlow=false), Inlined(flowClass=class net.corda.samples.obligation.accountUtil.NewKeyForAccount, subFlowVersion=CorDappFlow(platformVersion=11, corDappName=workflows-1.0, corDappHash=C516E48A6E6E70A0AB3D8BD39F2350C2FEFECFE936F017EBB2142877462D44D3), isEnabledTimedFlow=false)]
checkpoint.timestamp: 
    2023-01-31T07:08:33.183Z
    2023-01-31T07:08:33.188Z


 --- Transition of flow [22fcb1c3-b5fb-4384-a563-f056a848c9bf] ---
  Timestamp: 2023-01-31T07:08:33.196Z
  Event: LeaveSubFlow
  Actions: 
    
  Continuation: ProcessEvents
  Diff between previous and next state:
checkpoint.checkpointState.subFlowStack: 
    [Initiating(flowClass=class net.corda.samples.obligation.flows.IOUSettleFlow, classToInitiateWith=class net.corda.samples.obligation.flows.IOUSettleFlow, flowInfo=FlowInfo(flowVersion=1, appName=<unknown>), subFlowVersion=CorDappFlow(platformVersion=11, corDappName=workflows-1.0, corDappHash=C516E48A6E6E70A0AB3D8BD39F2350C2FEFECFE936F017EBB2142877462D44D3), isEnabledTimedFlow=false), Inlined(flowClass=class net.corda.samples.obligation.accountUtil.NewKeyForAccount, subFlowVersion=CorDappFlow(platformVersion=11, corDappName=workflows-1.0, corDappHash=C516E48A6E6E70A0AB3D8BD39F2350C2FEFECFE936F017EBB2142877462D44D3), isEnabledTimedFlow=false)]
    [Initiating(flowClass=class net.corda.samples.obligation.flows.IOUSettleFlow, classToInitiateWith=class net.corda.samples.obligation.flows.IOUSettleFlow, flowInfo=FlowInfo(flowVersion=1, appName=<unknown>), subFlowVersion=CorDappFlow(platformVersion=11, corDappName=workflows-1.0, corDappHash=C516E48A6E6E70A0AB3D8BD39F2350C2FEFECFE936F017EBB2142877462D44D3), isEnabledTimedFlow=false)]
checkpoint.timestamp: 
    2023-01-31T07:08:33.188Z
    2023-01-31T07:08:33.196Z


 --- Transition of flow [22fcb1c3-b5fb-4384-a563-f056a848c9bf] ---
  Timestamp: 2023-01-31T07:08:33.201Z
  Event: EnterSubFlow(subFlowClass=class com.r3.corda.lib.accounts.workflows.flows.RequestKeyForAccount, subFlowVersion=CorDappFlow(platformVersion=11, corDappName=accounts-workflows-1.0, corDappHash=80555705CE83A631D1BDD61E9C14A7C2215BB67FAB1411547C4D4B3D66F8402E), isEnabledTimedFlow=false)
  Actions: 
    
  Continuation: ProcessEvents
  Diff between previous and next state:
checkpoint.checkpointState.subFlowStack: 
    [Initiating(flowClass=class net.corda.samples.obligation.flows.IOUSettleFlow, classToInitiateWith=class net.corda.samples.obligation.flows.IOUSettleFlow, flowInfo=FlowInfo(flowVersion=1, appName=<unknown>), subFlowVersion=CorDappFlow(platformVersion=11, corDappName=workflows-1.0, corDappHash=C516E48A6E6E70A0AB3D8BD39F2350C2FEFECFE936F017EBB2142877462D44D3), isEnabledTimedFlow=false)]
    [Initiating(flowClass=class net.corda.samples.obligation.flows.IOUSettleFlow, classToInitiateWith=class net.corda.samples.obligation.flows.IOUSettleFlow, flowInfo=FlowInfo(flowVersion=1, appName=<unknown>), subFlowVersion=CorDappFlow(platformVersion=11, corDappName=workflows-1.0, corDappHash=C516E48A6E6E70A0AB3D8BD39F2350C2FEFECFE936F017EBB2142877462D44D3), isEnabledTimedFlow=false), Initiating(flowClass=class com.r3.corda.lib.accounts.workflows.flows.RequestKeyForAccount, classToInitiateWith=class com.r3.corda.lib.accounts.workflows.flows.RequestKeyForAccount, flowInfo=FlowInfo(flowVersion=1, appName=accounts-workflows-1.0), subFlowVersion=CorDappFlow(platformVersion=11, corDappName=accounts-workflows-1.0, corDappHash=80555705CE83A631D1BDD61E9C14A7C2215BB67FAB1411547C4D4B3D66F8402E), isEnabledTimedFlow=false)]
checkpoint.timestamp: 
    2023-01-31T07:08:33.196Z
    2023-01-31T07:08:33.201Z


 --- Transition of flow [22fcb1c3-b5fb-4384-a563-f056a848c9bf] ---
  Timestamp: 2023-01-31T07:08:33.201Z
  Event: InitiateFlow(destination=O=Mock Company 3, L=London, C=GB, wellKnownParty=O=Mock Company 3, L=London, C=GB)
  Actions: 
    AddSessionBinding(flowId=[22fcb1c3-b5fb-4384-a563-f056a848c9bf], sessionId=SessionId(toLong=-5120188446144110538))
  Continuation: Resume(result=class net.corda.node.services.statemachine.FlowSessionImpl)
  Diff between previous and next state:
checkpoint.checkpointState.sessions.SessionId(toLong=-5120188446144110538): 
    null
    Uninitiated(destination=O=Mock Company 3, L=London, C=GB, initiatingSubFlow=Initiating(flowClass=class com.r3.corda.lib.accounts.workflows.flows.RequestKeyForAccount, classToInitiateWith=class com.r3.corda.lib.accounts.workflows.flows.RequestKeyForAccount, flowInfo=FlowInfo(flowVersion=1, appName=accounts-workflows-1.0), subFlowVersion=CorDappFlow(platformVersion=11, corDappName=accounts-workflows-1.0, corDappHash=80555705CE83A631D1BDD61E9C14A7C2215BB67FAB1411547C4D4B3D66F8402E), isEnabledTimedFlow=false), sourceSessionId=SessionId(toLong=-5120188446144110538), additionalEntropy=8166144839349113546)


 --- Transition of flow [22fcb1c3-b5fb-4384-a563-f056a848c9bf] ---
  Timestamp: 2023-01-31T07:08:33.201Z
  Event: EnterSubFlow(subFlowClass=class com.r3.corda.lib.accounts.workflows.flows.RequestKeyForAccountFlow, subFlowVersion=CorDappFlow(platformVersion=11, corDappName=accounts-workflows-1.0, corDappHash=80555705CE83A631D1BDD61E9C14A7C2215BB67FAB1411547C4D4B3D66F8402E), isEnabledTimedFlow=false)
  Actions: 
    
  Continuation: ProcessEvents
  Diff between previous and next state:
checkpoint.checkpointState.subFlowStack: 
    [Initiating(flowClass=class net.corda.samples.obligation.flows.IOUSettleFlow, classToInitiateWith=class net.corda.samples.obligation.flows.IOUSettleFlow, flowInfo=FlowInfo(flowVersion=1, appName=<unknown>), subFlowVersion=CorDappFlow(platformVersion=11, corDappName=workflows-1.0, corDappHash=C516E48A6E6E70A0AB3D8BD39F2350C2FEFECFE936F017EBB2142877462D44D3), isEnabledTimedFlow=false), Initiating(flowClass=class com.r3.corda.lib.accounts.workflows.flows.RequestKeyForAccount, classToInitiateWith=class com.r3.corda.lib.accounts.workflows.flows.RequestKeyForAccount, flowInfo=FlowInfo(flowVersion=1, appName=accounts-workflows-1.0), subFlowVersion=CorDappFlow(platformVersion=11, corDappName=accounts-workflows-1.0, corDappHash=80555705CE83A631D1BDD61E9C14A7C2215BB67FAB1411547C4D4B3D66F8402E), isEnabledTimedFlow=false)]
    [Initiating(flowClass=class net.corda.samples.obligation.flows.IOUSettleFlow, classToInitiateWith=class net.corda.samples.obligation.flows.IOUSettleFlow, flowInfo=FlowInfo(flowVersion=1, appName=<unknown>), subFlowVersion=CorDappFlow(platformVersion=11, corDappName=workflows-1.0, corDappHash=C516E48A6E6E70A0AB3D8BD39F2350C2FEFECFE936F017EBB2142877462D44D3), isEnabledTimedFlow=false), Initiating(flowClass=class com.r3.corda.lib.accounts.workflows.flows.RequestKeyForAccount, classToInitiateWith=class com.r3.corda.lib.accounts.workflows.flows.RequestKeyForAccount, flowInfo=FlowInfo(flowVersion=1, appName=accounts-workflows-1.0), subFlowVersion=CorDappFlow(platformVersion=11, corDappName=accounts-workflows-1.0, corDappHash=80555705CE83A631D1BDD61E9C14A7C2215BB67FAB1411547C4D4B3D66F8402E), isEnabledTimedFlow=false), Inlined(flowClass=class com.r3.corda.lib.accounts.workflows.flows.RequestKeyForAccountFlow, subFlowVersion=CorDappFlow(platformVersion=11, corDappName=accounts-workflows-1.0, corDappHash=80555705CE83A631D1BDD61E9C14A7C2215BB67FAB1411547C4D4B3D66F8402E), isEnabledTimedFlow=false)]


 --- Transition of flow [22fcb1c3-b5fb-4384-a563-f056a848c9bf] ---
  Timestamp: 2023-01-31T07:08:33.207Z
  Event: Suspend(ioRequest=SendAndReceive({FlowSessionImpl(destination=O=Mock Company 3, L=London, C=GB, sourceSessionId=SessionId(toLong=-5120188446144110538))=FlowSessionImpl(destination=O=Mock Company 3, L=London, C=GB, sourceSessionId=SessionId(toLong=-5120188446144110538))=6F191307681163CD70D1E5BB8BE9524EC2F1904B52B62F15E018009993AE8736}, shouldRetrySend=false), maySkipCheckpoint=false, fiber=9DB83010E63043CAD4C7CC6ABC8FFB3C724B38054E52904519CF9785E1A975EF, currentStep=Starting)
  Actions: 
    PersistCheckpoint(id=[22fcb1c3-b5fb-4384-a563-f056a848c9bf], checkpoint=Checkpoint(checkpointState=CheckpointState(invocationContext=InvocationContext(origin=RPC(actor=Actor(id=Id(value=Only For Testing), serviceId=AuthServiceId(value=TEST), owningLegalIdentity=O=Mock Company 1, L=London, C=GB)), trace=Trace(invocationId=a44904ba-ec75-4986-be2c-5a017403c704, timestamp: 2023-01-31T07:08:33.182Z, entityType: Invocation, sessionId=a44904ba-ec75-4986-be2c-5a017403c704, timestamp: 2023-01-31T07:08:33.182Z, entityType: Session), actor=Actor(id=Id(value=Only For Testing), serviceId=AuthServiceId(value=TEST), owningLegalIdentity=O=Mock Company 1, L=London, C=GB), externalTrace=null, impersonatedActor=null, arguments=[], clientId=null), ourIdentity=O=Mock Company 1, L=London, C=GB, sessions={SessionId(toLong=-5120188446144110538)=Uninitiated(destination=O=Mock Company 3, L=London, C=GB, initiatingSubFlow=Initiating(flowClass=class com.r3.corda.lib.accounts.workflows.flows.RequestKeyForAccount, classToInitiateWith=class com.r3.corda.lib.accounts.workflows.flows.RequestKeyForAccount, flowInfo=FlowInfo(flowVersion=1, appName=accounts-workflows-1.0), subFlowVersion=CorDappFlow(platformVersion=11, corDappName=accounts-workflows-1.0, corDappHash=80555705CE83A631D1BDD61E9C14A7C2215BB67FAB1411547C4D4B3D66F8402E), isEnabledTimedFlow=false), sourceSessionId=SessionId(toLong=-5120188446144110538), additionalEntropy=8166144839349113546)}, sessionsToBeClosed=[], subFlowStack=[Initiating(flowClass=class net.corda.samples.obligation.flows.IOUSettleFlow, classToInitiateWith=class net.corda.samples.obligation.flows.IOUSettleFlow, flowInfo=FlowInfo(flowVersion=1, appName=<unknown>), subFlowVersion=CorDappFlow(platformVersion=11, corDappName=workflows-1.0, corDappHash=C516E48A6E6E70A0AB3D8BD39F2350C2FEFECFE936F017EBB2142877462D44D3), isEnabledTimedFlow=false), Initiating(flowClass=class com.r3.corda.lib.accounts.workflows.flows.RequestKeyForAccount, classToInitiateWith=class com.r3.corda.lib.accounts.workflows.flows.RequestKeyForAccount, flowInfo=FlowInfo(flowVersion=1, appName=accounts-workflows-1.0), subFlowVersion=CorDappFlow(platformVersion=11, corDappName=accounts-workflows-1.0, corDappHash=80555705CE83A631D1BDD61E9C14A7C2215BB67FAB1411547C4D4B3D66F8402E), isEnabledTimedFlow=false), Inlined(flowClass=class com.r3.corda.lib.accounts.workflows.flows.RequestKeyForAccountFlow, subFlowVersion=CorDappFlow(platformVersion=11, corDappName=accounts-workflows-1.0, corDappHash=80555705CE83A631D1BDD61E9C14A7C2215BB67FAB1411547C4D4B3D66F8402E), isEnabledTimedFlow=false)], numberOfSuspends=1, numberOfCommits=2), flowState=Started(flowIORequest=SendAndReceive({FlowSessionImpl(destination=O=Mock Company 3, L=London, C=GB, sourceSessionId=SessionId(toLong=-5120188446144110538))=FlowSessionImpl(destination=O=Mock Company 3, L=London, C=GB, sourceSessionId=SessionId(toLong=-5120188446144110538))=6F191307681163CD70D1E5BB8BE9524EC2F1904B52B62F15E018009993AE8736}, shouldRetrySend=false), frozenFiber=9DB83010E63043CAD4C7CC6ABC8FFB3C724B38054E52904519CF9785E1A975EF), errorState=Clean, result=null, status=RUNNABLE, progressStep=Starting, flowIoRequest=SendAndReceive, compatible=true), isCheckpointUpdate=true)
    PersistDeduplicationFacts(deduplicationHandlers=[])
    CommitTransaction
    AcknowledgeMessages(deduplicationHandlers=[])
    ScheduleEvent(event=DoRemainingWork)
  Continuation: ProcessEvents
  Diff between previous and next state:
checkpoint.progressStep: 
    null
    Starting
checkpoint.flowState: 
    Unstarted(flowStart=Explicit, frozenFlowLogic=4FBAA4D7968AB6F06AB201FECA8EBC6663A6EFD0B75D98B6FFFB39906D1C5777)
    Started(flowIORequest=SendAndReceive({FlowSessionImpl(destination=O=Mock Company 3, L=London, C=GB, sourceSessionId=SessionId(toLong=-5120188446144110538))=FlowSessionImpl(destination=O=Mock Company 3, L=London, C=GB, sourceSessionId=SessionId(toLong=-5120188446144110538))=6F191307681163CD70D1E5BB8BE9524EC2F1904B52B62F15E018009993AE8736}, shouldRetrySend=false), frozenFiber=9DB83010E63043CAD4C7CC6ABC8FFB3C724B38054E52904519CF9785E1A975EF)
checkpoint.flowIoRequest: 
    null
    SendAndReceive
checkpoint.checkpointState.numberOfSuspends: 
    0
    1
checkpoint.checkpointState.numberOfCommits: 
    1
    2
checkpoint.timestamp: 
    2023-01-31T07:08:33.201Z
    2023-01-31T07:08:33.206Z
isFlowResumed: 
    true
    false
numberOfCommits: 
    0
    2


 --- Transition of flow [22fcb1c3-b5fb-4384-a563-f056a848c9bf] ---
  Timestamp: 2023-01-31T07:08:33.209Z
  Event: DoRemainingWork
  Actions: 
    SendMultiple(sendInitial=[SendInitial(destination=O=Mock Company 3, L=London, C=GB, initialise=InitialSessionMessage(initiatorSessionId=SessionId(toLong=-5120188446144110538), initiationEntropy=8166144839349113546, initiatorFlowClassName=com.r3.corda.lib.accounts.workflows.flows.RequestKeyForAccount, appName=accounts-workflows-1.0, firstPayload=class net.corda.core.serialization.SerializedBytes), deduplicationId=SenderDeduplicationId(deduplicationId=DeduplicationId(toString=N-R--5120188446144110538-8166144839349113546-1-0), senderUUID=6085e859-0547-41f5-8009-8ac07555639a))], sendExisting=[])
  Continuation: ProcessEvents
  Diff between previous and next state:
checkpoint.flowState.flowIORequest: 
    SendAndReceive({FlowSessionImpl(destination=O=Mock Company 3, L=London, C=GB, sourceSessionId=SessionId(toLong=-5120188446144110538))=FlowSessionImpl(destination=O=Mock Company 3, L=London, C=GB, sourceSessionId=SessionId(toLong=-5120188446144110538))=6F191307681163CD70D1E5BB8BE9524EC2F1904B52B62F15E018009993AE8736}, shouldRetrySend=false)
    Receive(sessions=[FlowSessionImpl(destination=O=Mock Company 3, L=London, C=GB, sourceSessionId=SessionId(toLong=-5120188446144110538))])
checkpoint.checkpointState.sessions.SessionId(toLong=-5120188446144110538): 
    Uninitiated(destination=O=Mock Company 3, L=London, C=GB, initiatingSubFlow=Initiating(flowClass=class com.r3.corda.lib.accounts.workflows.flows.RequestKeyForAccount, classToInitiateWith=class com.r3.corda.lib.accounts.workflows.flows.RequestKeyForAccount, flowInfo=FlowInfo(flowVersion=1, appName=accounts-workflows-1.0), subFlowVersion=CorDappFlow(platformVersion=11, corDappName=accounts-workflows-1.0, corDappHash=80555705CE83A631D1BDD61E9C14A7C2215BB67FAB1411547C4D4B3D66F8402E), isEnabledTimedFlow=false), sourceSessionId=SessionId(toLong=-5120188446144110538), additionalEntropy=8166144839349113546)
    Initiating(bufferedMessages=[], rejectionError=null, deduplicationSeed=R--5120188446144110538-8166144839349113546)
checkpoint.timestamp: 
    2023-01-31T07:08:33.206Z
    2023-01-31T07:08:33.208Z


 --- Transition of flow [22fcb1c3-b5fb-4384-a563-f056a848c9bf] ---
  Timestamp: 2023-01-31T07:08:33.226Z
  Event: DeliverSessionMessage(sessionMessage=ExistingSessionMessage(recipientSessionId=SessionId(toLong=-5120188446144110538), payload=ConfirmSessionMessage(initiatedSessionId=SessionId(toLong=-2879998342928925846), initiatedFlowInfo=FlowInfo(flowVersion=1, appName=accounts-workflows-1.0))), deduplicationHandler=net.corda.testing.node.internal.MockNodeMessagingService$InMemoryDeduplicationHandler@2d20bd4a, sender=O=Mock Company 3, L=London, C=GB)
  Actions: 
    ScheduleEvent(event=DoRemainingWork)
  Continuation: ProcessEvents
  Diff between previous and next state:
pendingDeduplicationHandlers: 
    []
    [net.corda.testing.node.internal.MockNodeMessagingService$InMemoryDeduplicationHandler@2d20bd4a]
checkpoint.checkpointState.sessions.SessionId(toLong=-5120188446144110538): 
    Initiating(bufferedMessages=[], rejectionError=null, deduplicationSeed=R--5120188446144110538-8166144839349113546)
    Initiated(peerParty=O=Mock Company 3, L=London, C=GB, peerFlowInfo=FlowInfo(flowVersion=1, appName=accounts-workflows-1.0), receivedMessages=[], otherSideErrored=false, peerSinkSessionId=SessionId(toLong=-2879998342928925846), deduplicationSeed=R--5120188446144110538-8166144839349113546)
checkpoint.timestamp: 
    2023-01-31T07:08:33.208Z
    2023-01-31T07:08:33.226Z


 --- Transition of flow [22fcb1c3-b5fb-4384-a563-f056a848c9bf] ---
  Timestamp: 2023-01-31T07:08:33.227Z
  Event: DoRemainingWork
  Actions: 
    
  Continuation: ProcessEvents
  Diff between previous and next state:
null

 --- Transition of flow [22fcb1c3-b5fb-4384-a563-f056a848c9bf] ---
  Timestamp: 2023-01-31T07:08:33.228Z
  Event: DeliverSessionMessage(sessionMessage=ExistingSessionMessage(recipientSessionId=SessionId(toLong=-5120188446144110538), payload=DataSessionMessage(payload=class net.corda.core.serialization.SerializedBytes)), deduplicationHandler=net.corda.testing.node.internal.MockNodeMessagingService$InMemoryDeduplicationHandler@6e909f81, sender=O=Mock Company 3, L=London, C=GB)
  Actions: 
    ScheduleEvent(event=DoRemainingWork)
  Continuation: ProcessEvents
  Diff between previous and next state:
pendingDeduplicationHandlers: 
    [net.corda.testing.node.internal.MockNodeMessagingService$InMemoryDeduplicationHandler@2d20bd4a]
    [net.corda.testing.node.internal.MockNodeMessagingService$InMemoryDeduplicationHandler@2d20bd4a, net.corda.testing.node.internal.MockNodeMessagingService$InMemoryDeduplicationHandler@6e909f81]
checkpoint.checkpointState.sessions.SessionId(toLong=-5120188446144110538).receivedMessages.isEmpty: 
    true
    false
checkpoint.timestamp: 
    2023-01-31T07:08:33.227Z
    2023-01-31T07:08:33.228Z


 --- Transition of flow [22fcb1c3-b5fb-4384-a563-f056a848c9bf] ---
  Timestamp: 2023-01-31T07:08:33.228Z
  Event: DoRemainingWork
  Actions: 
    CreateTransaction
  Continuation: Resume(result=class java.util.LinkedHashMap)
  Diff between previous and next state:
checkpoint.checkpointState.sessions.SessionId(toLong=-5120188446144110538).receivedMessages.isEmpty: 
    false
    true
isFlowResumed: 
    false
    true


 --- Transition of flow [22fcb1c3-b5fb-4384-a563-f056a848c9bf] ---
  Timestamp: 2023-01-31T07:08:33.228Z
  Event: EnterSubFlow(subFlowClass=class com.r3.corda.lib.ci.workflows.RequestKeyFlow, subFlowVersion=CoreFlow(platformVersion=11), isEnabledTimedFlow=false)
  Actions: 
    
  Continuation: ProcessEvents
  Diff between previous and next state:
checkpoint.checkpointState.subFlowStack: 
    [Initiating(flowClass=class net.corda.samples.obligation.flows.IOUSettleFlow, classToInitiateWith=class net.corda.samples.obligation.flows.IOUSettleFlow, flowInfo=FlowInfo(flowVersion=1, appName=<unknown>), subFlowVersion=CorDappFlow(platformVersion=11, corDappName=workflows-1.0, corDappHash=C516E48A6E6E70A0AB3D8BD39F2350C2FEFECFE936F017EBB2142877462D44D3), isEnabledTimedFlow=false), Initiating(flowClass=class com.r3.corda.lib.accounts.workflows.flows.RequestKeyForAccount, classToInitiateWith=class com.r3.corda.lib.accounts.workflows.flows.RequestKeyForAccount, flowInfo=FlowInfo(flowVersion=1, appName=accounts-workflows-1.0), subFlowVersion=CorDappFlow(platformVersion=11, corDappName=accounts-workflows-1.0, corDappHash=80555705CE83A631D1BDD61E9C14A7C2215BB67FAB1411547C4D4B3D66F8402E), isEnabledTimedFlow=false), Inlined(flowClass=class com.r3.corda.lib.accounts.workflows.flows.RequestKeyForAccountFlow, subFlowVersion=CorDappFlow(platformVersion=11, corDappName=accounts-workflows-1.0, corDappHash=80555705CE83A631D1BDD61E9C14A7C2215BB67FAB1411547C4D4B3D66F8402E), isEnabledTimedFlow=false)]
    [Initiating(flowClass=class net.corda.samples.obligation.flows.IOUSettleFlow, classToInitiateWith=class net.corda.samples.obligation.flows.IOUSettleFlow, flowInfo=FlowInfo(flowVersion=1, appName=<unknown>), subFlowVersion=CorDappFlow(platformVersion=11, corDappName=workflows-1.0, corDappHash=C516E48A6E6E70A0AB3D8BD39F2350C2FEFECFE936F017EBB2142877462D44D3), isEnabledTimedFlow=false), Initiating(flowClass=class com.r3.corda.lib.accounts.workflows.flows.RequestKeyForAccount, classToInitiateWith=class com.r3.corda.lib.accounts.workflows.flows.RequestKeyForAccount, flowInfo=FlowInfo(flowVersion=1, appName=accounts-workflows-1.0), subFlowVersion=CorDappFlow(platformVersion=11, corDappName=accounts-workflows-1.0, corDappHash=80555705CE83A631D1BDD61E9C14A7C2215BB67FAB1411547C4D4B3D66F8402E), isEnabledTimedFlow=false), Inlined(flowClass=class com.r3.corda.lib.accounts.workflows.flows.RequestKeyForAccountFlow, subFlowVersion=CorDappFlow(platformVersion=11, corDappName=accounts-workflows-1.0, corDappHash=80555705CE83A631D1BDD61E9C14A7C2215BB67FAB1411547C4D4B3D66F8402E), isEnabledTimedFlow=false), Inlined(flowClass=class com.r3.corda.lib.ci.workflows.RequestKeyFlow, subFlowVersion=CoreFlow(platformVersion=11), isEnabledTimedFlow=false)]


 --- Transition of flow [22fcb1c3-b5fb-4384-a563-f056a848c9bf] ---
  Timestamp: 2023-01-31T07:08:33.232Z
  Event: Suspend(ioRequest=SendAndReceive({FlowSessionImpl(destination=O=Mock Company 3, L=London, C=GB, sourceSessionId=SessionId(toLong=-5120188446144110538))=FlowSessionImpl(destination=O=Mock Company 3, L=London, C=GB, sourceSessionId=SessionId(toLong=-5120188446144110538))=E9D050F4FFA0102FB981A5DE1651B2DF87EE1BCB8F1052FEE00E9936B0EAF804}, shouldRetrySend=false), maySkipCheckpoint=false, fiber=D38478FF707B110750CD6AC04200B119FCA04BEDAD9BA1AA138ECBF6B33F3796, currentStep=Starting)
  Actions: 
    PersistCheckpoint(id=[22fcb1c3-b5fb-4384-a563-f056a848c9bf], checkpoint=Checkpoint(checkpointState=CheckpointState(invocationContext=InvocationContext(origin=RPC(actor=Actor(id=Id(value=Only For Testing), serviceId=AuthServiceId(value=TEST), owningLegalIdentity=O=Mock Company 1, L=London, C=GB)), trace=Trace(invocationId=a44904ba-ec75-4986-be2c-5a017403c704, timestamp: 2023-01-31T07:08:33.182Z, entityType: Invocation, sessionId=a44904ba-ec75-4986-be2c-5a017403c704, timestamp: 2023-01-31T07:08:33.182Z, entityType: Session), actor=Actor(id=Id(value=Only For Testing), serviceId=AuthServiceId(value=TEST), owningLegalIdentity=O=Mock Company 1, L=London, C=GB), externalTrace=null, impersonatedActor=null, arguments=[], clientId=null), ourIdentity=O=Mock Company 1, L=London, C=GB, sessions={SessionId(toLong=-5120188446144110538)=Initiated(peerParty=O=Mock Company 3, L=London, C=GB, peerFlowInfo=FlowInfo(flowVersion=1, appName=accounts-workflows-1.0), receivedMessages=[], otherSideErrored=false, peerSinkSessionId=SessionId(toLong=-2879998342928925846), deduplicationSeed=R--5120188446144110538-8166144839349113546)}, sessionsToBeClosed=[], subFlowStack=[Initiating(flowClass=class net.corda.samples.obligation.flows.IOUSettleFlow, classToInitiateWith=class net.corda.samples.obligation.flows.IOUSettleFlow, flowInfo=FlowInfo(flowVersion=1, appName=<unknown>), subFlowVersion=CorDappFlow(platformVersion=11, corDappName=workflows-1.0, corDappHash=C516E48A6E6E70A0AB3D8BD39F2350C2FEFECFE936F017EBB2142877462D44D3), isEnabledTimedFlow=false), Initiating(flowClass=class com.r3.corda.lib.accounts.workflows.flows.RequestKeyForAccount, classToInitiateWith=class com.r3.corda.lib.accounts.workflows.flows.RequestKeyForAccount, flowInfo=FlowInfo(flowVersion=1, appName=accounts-workflows-1.0), subFlowVersion=CorDappFlow(platformVersion=11, corDappName=accounts-workflows-1.0, corDappHash=80555705CE83A631D1BDD61E9C14A7C2215BB67FAB1411547C4D4B3D66F8402E), isEnabledTimedFlow=false), Inlined(flowClass=class com.r3.corda.lib.accounts.workflows.flows.RequestKeyForAccountFlow, subFlowVersion=CorDappFlow(platformVersion=11, corDappName=accounts-workflows-1.0, corDappHash=80555705CE83A631D1BDD61E9C14A7C2215BB67FAB1411547C4D4B3D66F8402E), isEnabledTimedFlow=false), Inlined(flowClass=class com.r3.corda.lib.ci.workflows.RequestKeyFlow, subFlowVersion=CoreFlow(platformVersion=11), isEnabledTimedFlow=false)], numberOfSuspends=2, numberOfCommits=3), flowState=Started(flowIORequest=SendAndReceive({FlowSessionImpl(destination=O=Mock Company 3, L=London, C=GB, sourceSessionId=SessionId(toLong=-5120188446144110538))=FlowSessionImpl(destination=O=Mock Company 3, L=London, C=GB, sourceSessionId=SessionId(toLong=-5120188446144110538))=E9D050F4FFA0102FB981A5DE1651B2DF87EE1BCB8F1052FEE00E9936B0EAF804}, shouldRetrySend=false), frozenFiber=D38478FF707B110750CD6AC04200B119FCA04BEDAD9BA1AA138ECBF6B33F3796), errorState=Clean, result=null, status=RUNNABLE, progressStep=Starting, flowIoRequest=SendAndReceive, compatible=true), isCheckpointUpdate=true)
    PersistDeduplicationFacts(deduplicationHandlers=[net.corda.testing.node.internal.MockNodeMessagingService$InMemoryDeduplicationHandler@2d20bd4a, net.corda.testing.node.internal.MockNodeMessagingService$InMemoryDeduplicationHandler@6e909f81])
    CommitTransaction
    AcknowledgeMessages(deduplicationHandlers=[net.corda.testing.node.internal.MockNodeMessagingService$InMemoryDeduplicationHandler@2d20bd4a, net.corda.testing.node.internal.MockNodeMessagingService$InMemoryDeduplicationHandler@6e909f81])
    ScheduleEvent(event=DoRemainingWork)
  Continuation: ProcessEvents
  Diff between previous and next state:
pendingDeduplicationHandlers: 
    [net.corda.testing.node.internal.MockNodeMessagingService$InMemoryDeduplicationHandler@2d20bd4a, net.corda.testing.node.internal.MockNodeMessagingService$InMemoryDeduplicationHandler@6e909f81]
    []
checkpoint.flowState.flowIORequest: 
    Receive(sessions=[FlowSessionImpl(destination=O=Mock Company 3, L=London, C=GB, sourceSessionId=SessionId(toLong=-5120188446144110538))])
    SendAndReceive({FlowSessionImpl(destination=O=Mock Company 3, L=London, C=GB, sourceSessionId=SessionId(toLong=-5120188446144110538))=FlowSessionImpl(destination=O=Mock Company 3, L=London, C=GB, sourceSessionId=SessionId(toLong=-5120188446144110538))=E9D050F4FFA0102FB981A5DE1651B2DF87EE1BCB8F1052FEE00E9936B0EAF804}, shouldRetrySend=false)
checkpoint.flowState.frozenFiber.hash: 
    9DB83010E63043CAD4C7CC6ABC8FFB3C724B38054E52904519CF9785E1A975EF
    D38478FF707B110750CD6AC04200B119FCA04BEDAD9BA1AA138ECBF6B33F3796
checkpoint.checkpointState.numberOfSuspends: 
    1
    2
checkpoint.checkpointState.numberOfCommits: 
    2
    3
checkpoint.timestamp: 
    2023-01-31T07:08:33.228Z
    2023-01-31T07:08:33.230Z
isFlowResumed: 
    true
    false
numberOfCommits: 
    2
    3


 --- Transition of flow [22fcb1c3-b5fb-4384-a563-f056a848c9bf] ---
  Timestamp: 2023-01-31T07:08:33.232Z
  Event: DoRemainingWork
  Actions: 
    SendMultiple(sendInitial=[], sendExisting=[SendExisting(peerParty=O=Mock Company 3, L=London, C=GB, message=ExistingSessionMessage(recipientSessionId=SessionId(toLong=-2879998342928925846), payload=DataSessionMessage(payload=class net.corda.core.serialization.SerializedBytes)), deduplicationId=SenderDeduplicationId(deduplicationId=DeduplicationId(toString=N-R--5120188446144110538-8166144839349113546-2-0), senderUUID=6085e859-0547-41f5-8009-8ac07555639a))])
  Continuation: ProcessEvents
  Diff between previous and next state:
checkpoint.flowState.flowIORequest: 
    SendAndReceive({FlowSessionImpl(destination=O=Mock Company 3, L=London, C=GB, sourceSessionId=SessionId(toLong=-5120188446144110538))=FlowSessionImpl(destination=O=Mock Company 3, L=London, C=GB, sourceSessionId=SessionId(toLong=-5120188446144110538))=E9D050F4FFA0102FB981A5DE1651B2DF87EE1BCB8F1052FEE00E9936B0EAF804}, shouldRetrySend=false)
    Receive(sessions=[FlowSessionImpl(destination=O=Mock Company 3, L=London, C=GB, sourceSessionId=SessionId(toLong=-5120188446144110538))])
checkpoint.timestamp: 
    2023-01-31T07:08:33.230Z
    2023-01-31T07:08:33.232Z


 --- Transition of flow [22fcb1c3-b5fb-4384-a563-f056a848c9bf] ---
  Timestamp: 2023-01-31T07:08:33.242Z
  Event: DeliverSessionMessage(sessionMessage=ExistingSessionMessage(recipientSessionId=SessionId(toLong=-5120188446144110538), payload=DataSessionMessage(payload=class net.corda.core.serialization.SerializedBytes)), deduplicationHandler=net.corda.testing.node.internal.MockNodeMessagingService$InMemoryDeduplicationHandler@35b19650, sender=O=Mock Company 3, L=London, C=GB)
  Actions: 
    ScheduleEvent(event=DoRemainingWork)
  Continuation: ProcessEvents
  Diff between previous and next state:
pendingDeduplicationHandlers: 
    []
    [net.corda.testing.node.internal.MockNodeMessagingService$InMemoryDeduplicationHandler@35b19650]
checkpoint.checkpointState.sessions.SessionId(toLong=-5120188446144110538).receivedMessages.isEmpty: 
    true
    false
checkpoint.timestamp: 
    2023-01-31T07:08:33.232Z
    2023-01-31T07:08:33.242Z


 --- Transition of flow [22fcb1c3-b5fb-4384-a563-f056a848c9bf] ---
  Timestamp: 2023-01-31T07:08:33.242Z
  Event: DoRemainingWork
  Actions: 
    CreateTransaction
  Continuation: Resume(result=class java.util.LinkedHashMap)
  Diff between previous and next state:
checkpoint.checkpointState.sessions.SessionId(toLong=-5120188446144110538).receivedMessages.isEmpty: 
    false
    true
isFlowResumed: 
    false
    true


 --- Transition of flow [22fcb1c3-b5fb-4384-a563-f056a848c9bf] ---
  Timestamp: 2023-01-31T07:08:33.244Z
  Event: LeaveSubFlow
  Actions: 
    
  Continuation: ProcessEvents
  Diff between previous and next state:
checkpoint.checkpointState.subFlowStack: 
    [Initiating(flowClass=class net.corda.samples.obligation.flows.IOUSettleFlow, classToInitiateWith=class net.corda.samples.obligation.flows.IOUSettleFlow, flowInfo=FlowInfo(flowVersion=1, appName=<unknown>), subFlowVersion=CorDappFlow(platformVersion=11, corDappName=workflows-1.0, corDappHash=C516E48A6E6E70A0AB3D8BD39F2350C2FEFECFE936F017EBB2142877462D44D3), isEnabledTimedFlow=false), Initiating(flowClass=class com.r3.corda.lib.accounts.workflows.flows.RequestKeyForAccount, classToInitiateWith=class com.r3.corda.lib.accounts.workflows.flows.RequestKeyForAccount, flowInfo=FlowInfo(flowVersion=1, appName=accounts-workflows-1.0), subFlowVersion=CorDappFlow(platformVersion=11, corDappName=accounts-workflows-1.0, corDappHash=80555705CE83A631D1BDD61E9C14A7C2215BB67FAB1411547C4D4B3D66F8402E), isEnabledTimedFlow=false), Inlined(flowClass=class com.r3.corda.lib.accounts.workflows.flows.RequestKeyForAccountFlow, subFlowVersion=CorDappFlow(platformVersion=11, corDappName=accounts-workflows-1.0, corDappHash=80555705CE83A631D1BDD61E9C14A7C2215BB67FAB1411547C4D4B3D66F8402E), isEnabledTimedFlow=false), Inlined(flowClass=class com.r3.corda.lib.ci.workflows.RequestKeyFlow, subFlowVersion=CoreFlow(platformVersion=11), isEnabledTimedFlow=false)]
    [Initiating(flowClass=class net.corda.samples.obligation.flows.IOUSettleFlow, classToInitiateWith=class net.corda.samples.obligation.flows.IOUSettleFlow, flowInfo=FlowInfo(flowVersion=1, appName=<unknown>), subFlowVersion=CorDappFlow(platformVersion=11, corDappName=workflows-1.0, corDappHash=C516E48A6E6E70A0AB3D8BD39F2350C2FEFECFE936F017EBB2142877462D44D3), isEnabledTimedFlow=false), Initiating(flowClass=class com.r3.corda.lib.accounts.workflows.flows.RequestKeyForAccount, classToInitiateWith=class com.r3.corda.lib.accounts.workflows.flows.RequestKeyForAccount, flowInfo=FlowInfo(flowVersion=1, appName=accounts-workflows-1.0), subFlowVersion=CorDappFlow(platformVersion=11, corDappName=accounts-workflows-1.0, corDappHash=80555705CE83A631D1BDD61E9C14A7C2215BB67FAB1411547C4D4B3D66F8402E), isEnabledTimedFlow=false), Inlined(flowClass=class com.r3.corda.lib.accounts.workflows.flows.RequestKeyForAccountFlow, subFlowVersion=CorDappFlow(platformVersion=11, corDappName=accounts-workflows-1.0, corDappHash=80555705CE83A631D1BDD61E9C14A7C2215BB67FAB1411547C4D4B3D66F8402E), isEnabledTimedFlow=false)]
checkpoint.timestamp: 
    2023-01-31T07:08:33.242Z
    2023-01-31T07:08:33.244Z


 --- Transition of flow [22fcb1c3-b5fb-4384-a563-f056a848c9bf] ---
  Timestamp: 2023-01-31T07:08:33.244Z
  Event: LeaveSubFlow
  Actions: 
    
  Continuation: ProcessEvents
  Diff between previous and next state:
checkpoint.checkpointState.subFlowStack: 
    [Initiating(flowClass=class net.corda.samples.obligation.flows.IOUSettleFlow, classToInitiateWith=class net.corda.samples.obligation.flows.IOUSettleFlow, flowInfo=FlowInfo(flowVersion=1, appName=<unknown>), subFlowVersion=CorDappFlow(platformVersion=11, corDappName=workflows-1.0, corDappHash=C516E48A6E6E70A0AB3D8BD39F2350C2FEFECFE936F017EBB2142877462D44D3), isEnabledTimedFlow=false), Initiating(flowClass=class com.r3.corda.lib.accounts.workflows.flows.RequestKeyForAccount, classToInitiateWith=class com.r3.corda.lib.accounts.workflows.flows.RequestKeyForAccount, flowInfo=FlowInfo(flowVersion=1, appName=accounts-workflows-1.0), subFlowVersion=CorDappFlow(platformVersion=11, corDappName=accounts-workflows-1.0, corDappHash=80555705CE83A631D1BDD61E9C14A7C2215BB67FAB1411547C4D4B3D66F8402E), isEnabledTimedFlow=false), Inlined(flowClass=class com.r3.corda.lib.accounts.workflows.flows.RequestKeyForAccountFlow, subFlowVersion=CorDappFlow(platformVersion=11, corDappName=accounts-workflows-1.0, corDappHash=80555705CE83A631D1BDD61E9C14A7C2215BB67FAB1411547C4D4B3D66F8402E), isEnabledTimedFlow=false)]
    [Initiating(flowClass=class net.corda.samples.obligation.flows.IOUSettleFlow, classToInitiateWith=class net.corda.samples.obligation.flows.IOUSettleFlow, flowInfo=FlowInfo(flowVersion=1, appName=<unknown>), subFlowVersion=CorDappFlow(platformVersion=11, corDappName=workflows-1.0, corDappHash=C516E48A6E6E70A0AB3D8BD39F2350C2FEFECFE936F017EBB2142877462D44D3), isEnabledTimedFlow=false), Initiating(flowClass=class com.r3.corda.lib.accounts.workflows.flows.RequestKeyForAccount, classToInitiateWith=class com.r3.corda.lib.accounts.workflows.flows.RequestKeyForAccount, flowInfo=FlowInfo(flowVersion=1, appName=accounts-workflows-1.0), subFlowVersion=CorDappFlow(platformVersion=11, corDappName=accounts-workflows-1.0, corDappHash=80555705CE83A631D1BDD61E9C14A7C2215BB67FAB1411547C4D4B3D66F8402E), isEnabledTimedFlow=false)]


 --- Transition of flow [22fcb1c3-b5fb-4384-a563-f056a848c9bf] ---
  Timestamp: 2023-01-31T07:08:33.244Z
  Event: LeaveSubFlow
  Actions: 
    
  Continuation: ProcessEvents
  Diff between previous and next state:
checkpoint.checkpointState.subFlowStack: 
    [Initiating(flowClass=class net.corda.samples.obligation.flows.IOUSettleFlow, classToInitiateWith=class net.corda.samples.obligation.flows.IOUSettleFlow, flowInfo=FlowInfo(flowVersion=1, appName=<unknown>), subFlowVersion=CorDappFlow(platformVersion=11, corDappName=workflows-1.0, corDappHash=C516E48A6E6E70A0AB3D8BD39F2350C2FEFECFE936F017EBB2142877462D44D3), isEnabledTimedFlow=false), Initiating(flowClass=class com.r3.corda.lib.accounts.workflows.flows.RequestKeyForAccount, classToInitiateWith=class com.r3.corda.lib.accounts.workflows.flows.RequestKeyForAccount, flowInfo=FlowInfo(flowVersion=1, appName=accounts-workflows-1.0), subFlowVersion=CorDappFlow(platformVersion=11, corDappName=accounts-workflows-1.0, corDappHash=80555705CE83A631D1BDD61E9C14A7C2215BB67FAB1411547C4D4B3D66F8402E), isEnabledTimedFlow=false)]
    [Initiating(flowClass=class net.corda.samples.obligation.flows.IOUSettleFlow, classToInitiateWith=class net.corda.samples.obligation.flows.IOUSettleFlow, flowInfo=FlowInfo(flowVersion=1, appName=<unknown>), subFlowVersion=CorDappFlow(platformVersion=11, corDappName=workflows-1.0, corDappHash=C516E48A6E6E70A0AB3D8BD39F2350C2FEFECFE936F017EBB2142877462D44D3), isEnabledTimedFlow=false)]


 --- Transition of flow [22fcb1c3-b5fb-4384-a563-f056a848c9bf] ---
  Timestamp: 2023-01-31T07:08:33.643Z
  Event: InitiateFlow(destination=O=Mock Company 3, L=London, C=GB, wellKnownParty=O=Mock Company 3, L=London, C=GB)
  Actions: 
    AddSessionBinding(flowId=[22fcb1c3-b5fb-4384-a563-f056a848c9bf], sessionId=SessionId(toLong=-5366150003449329455))
  Continuation: Resume(result=class net.corda.node.services.statemachine.FlowSessionImpl)
  Diff between previous and next state:
checkpoint.checkpointState.sessions.SessionId(toLong=-5366150003449329455): 
    null
    Uninitiated(destination=O=Mock Company 3, L=London, C=GB, initiatingSubFlow=Initiating(flowClass=class net.corda.samples.obligation.flows.IOUSettleFlow, classToInitiateWith=class net.corda.samples.obligation.flows.IOUSettleFlow, flowInfo=FlowInfo(flowVersion=1, appName=<unknown>), subFlowVersion=CorDappFlow(platformVersion=11, corDappName=workflows-1.0, corDappHash=C516E48A6E6E70A0AB3D8BD39F2350C2FEFECFE936F017EBB2142877462D44D3), isEnabledTimedFlow=false), sourceSessionId=SessionId(toLong=-5366150003449329455), additionalEntropy=-6169107910265396549)
checkpoint.timestamp: 
    2023-01-31T07:08:33.244Z
    2023-01-31T07:08:33.643Z


 --- Transition of flow [22fcb1c3-b5fb-4384-a563-f056a848c9bf] ---
  Timestamp: 2023-01-31T07:08:33.644Z
  Event: EnterSubFlow(subFlowClass=class net.corda.core.flows.CollectSignatureFlow, subFlowVersion=CoreFlow(platformVersion=11), isEnabledTimedFlow=false)
  Actions: 
    
  Continuation: ProcessEvents
  Diff between previous and next state:
checkpoint.checkpointState.subFlowStack: 
    [Initiating(flowClass=class net.corda.samples.obligation.flows.IOUSettleFlow, classToInitiateWith=class net.corda.samples.obligation.flows.IOUSettleFlow, flowInfo=FlowInfo(flowVersion=1, appName=<unknown>), subFlowVersion=CorDappFlow(platformVersion=11, corDappName=workflows-1.0, corDappHash=C516E48A6E6E70A0AB3D8BD39F2350C2FEFECFE936F017EBB2142877462D44D3), isEnabledTimedFlow=false)]
    [Initiating(flowClass=class net.corda.samples.obligation.flows.IOUSettleFlow, classToInitiateWith=class net.corda.samples.obligation.flows.IOUSettleFlow, flowInfo=FlowInfo(flowVersion=1, appName=<unknown>), subFlowVersion=CorDappFlow(platformVersion=11, corDappName=workflows-1.0, corDappHash=C516E48A6E6E70A0AB3D8BD39F2350C2FEFECFE936F017EBB2142877462D44D3), isEnabledTimedFlow=false), Inlined(flowClass=class net.corda.core.flows.CollectSignatureFlow, subFlowVersion=CoreFlow(platformVersion=11), isEnabledTimedFlow=false)]
checkpoint.timestamp: 
    2023-01-31T07:08:33.643Z
    2023-01-31T07:08:33.644Z


 --- Transition of flow [22fcb1c3-b5fb-4384-a563-f056a848c9bf] ---
  Timestamp: 2023-01-31T07:08:33.644Z
  Event: EnterSubFlow(subFlowClass=class net.corda.core.flows.SendTransactionFlow, subFlowVersion=CoreFlow(platformVersion=11), isEnabledTimedFlow=false)
  Actions: 
    
  Continuation: ProcessEvents
  Diff between previous and next state:
checkpoint.checkpointState.subFlowStack: 
    [Initiating(flowClass=class net.corda.samples.obligation.flows.IOUSettleFlow, classToInitiateWith=class net.corda.samples.obligation.flows.IOUSettleFlow, flowInfo=FlowInfo(flowVersion=1, appName=<unknown>), subFlowVersion=CorDappFlow(platformVersion=11, corDappName=workflows-1.0, corDappHash=C516E48A6E6E70A0AB3D8BD39F2350C2FEFECFE936F017EBB2142877462D44D3), isEnabledTimedFlow=false), Inlined(flowClass=class net.corda.core.flows.CollectSignatureFlow, subFlowVersion=CoreFlow(platformVersion=11), isEnabledTimedFlow=false)]
    [Initiating(flowClass=class net.corda.samples.obligation.flows.IOUSettleFlow, classToInitiateWith=class net.corda.samples.obligation.flows.IOUSettleFlow, flowInfo=FlowInfo(flowVersion=1, appName=<unknown>), subFlowVersion=CorDappFlow(platformVersion=11, corDappName=workflows-1.0, corDappHash=C516E48A6E6E70A0AB3D8BD39F2350C2FEFECFE936F017EBB2142877462D44D3), isEnabledTimedFlow=false), Inlined(flowClass=class net.corda.core.flows.CollectSignatureFlow, subFlowVersion=CoreFlow(platformVersion=11), isEnabledTimedFlow=false), Inlined(flowClass=class net.corda.core.flows.SendTransactionFlow, subFlowVersion=CoreFlow(platformVersion=11), isEnabledTimedFlow=false)]


 --- Transition of flow [22fcb1c3-b5fb-4384-a563-f056a848c9bf] ---
  Timestamp: 2023-01-31T07:08:33.649Z
  Event: Suspend(ioRequest=SendAndReceive({FlowSessionImpl(destination=O=Mock Company 3, L=London, C=GB, sourceSessionId=SessionId(toLong=-5366150003449329455))=FlowSessionImpl(destination=O=Mock Company 3, L=London, C=GB, sourceSessionId=SessionId(toLong=-5366150003449329455))=85F6C6CF64868F70037CA2C6CA9FEA6EACE859A31BBC357A1324A3A5285B070C}, shouldRetrySend=false), maySkipCheckpoint=false, fiber=13E3226CE4C72E99467A39AAEF3D4C45C83A22FE3021F6945E2A5E5F95D6CBED, currentStep=Starting)
  Actions: 
    PersistCheckpoint(id=[22fcb1c3-b5fb-4384-a563-f056a848c9bf], checkpoint=Checkpoint(checkpointState=CheckpointState(invocationContext=InvocationContext(origin=RPC(actor=Actor(id=Id(value=Only For Testing), serviceId=AuthServiceId(value=TEST), owningLegalIdentity=O=Mock Company 1, L=London, C=GB)), trace=Trace(invocationId=a44904ba-ec75-4986-be2c-5a017403c704, timestamp: 2023-01-31T07:08:33.182Z, entityType: Invocation, sessionId=a44904ba-ec75-4986-be2c-5a017403c704, timestamp: 2023-01-31T07:08:33.182Z, entityType: Session), actor=Actor(id=Id(value=Only For Testing), serviceId=AuthServiceId(value=TEST), owningLegalIdentity=O=Mock Company 1, L=London, C=GB), externalTrace=null, impersonatedActor=null, arguments=[], clientId=null), ourIdentity=O=Mock Company 1, L=London, C=GB, sessions={SessionId(toLong=-5120188446144110538)=Initiated(peerParty=O=Mock Company 3, L=London, C=GB, peerFlowInfo=FlowInfo(flowVersion=1, appName=accounts-workflows-1.0), receivedMessages=[], otherSideErrored=false, peerSinkSessionId=SessionId(toLong=-2879998342928925846), deduplicationSeed=R--5120188446144110538-8166144839349113546), SessionId(toLong=-5366150003449329455)=Uninitiated(destination=O=Mock Company 3, L=London, C=GB, initiatingSubFlow=Initiating(flowClass=class net.corda.samples.obligation.flows.IOUSettleFlow, classToInitiateWith=class net.corda.samples.obligation.flows.IOUSettleFlow, flowInfo=FlowInfo(flowVersion=1, appName=<unknown>), subFlowVersion=CorDappFlow(platformVersion=11, corDappName=workflows-1.0, corDappHash=C516E48A6E6E70A0AB3D8BD39F2350C2FEFECFE936F017EBB2142877462D44D3), isEnabledTimedFlow=false), sourceSessionId=SessionId(toLong=-5366150003449329455), additionalEntropy=-6169107910265396549)}, sessionsToBeClosed=[], subFlowStack=[Initiating(flowClass=class net.corda.samples.obligation.flows.IOUSettleFlow, classToInitiateWith=class net.corda.samples.obligation.flows.IOUSettleFlow, flowInfo=FlowInfo(flowVersion=1, appName=<unknown>), subFlowVersion=CorDappFlow(platformVersion=11, corDappName=workflows-1.0, corDappHash=C516E48A6E6E70A0AB3D8BD39F2350C2FEFECFE936F017EBB2142877462D44D3), isEnabledTimedFlow=false), Inlined(flowClass=class net.corda.core.flows.CollectSignatureFlow, subFlowVersion=CoreFlow(platformVersion=11), isEnabledTimedFlow=false), Inlined(flowClass=class net.corda.core.flows.SendTransactionFlow, subFlowVersion=CoreFlow(platformVersion=11), isEnabledTimedFlow=false)], numberOfSuspends=3, numberOfCommits=4), flowState=Started(flowIORequest=SendAndReceive({FlowSessionImpl(destination=O=Mock Company 3, L=London, C=GB, sourceSessionId=SessionId(toLong=-5366150003449329455))=FlowSessionImpl(destination=O=Mock Company 3, L=London, C=GB, sourceSessionId=SessionId(toLong=-5366150003449329455))=85F6C6CF64868F70037CA2C6CA9FEA6EACE859A31BBC357A1324A3A5285B070C}, shouldRetrySend=false), frozenFiber=13E3226CE4C72E99467A39AAEF3D4C45C83A22FE3021F6945E2A5E5F95D6CBED), errorState=Clean, result=null, status=RUNNABLE, progressStep=Starting, flowIoRequest=SendAndReceive, compatible=true), isCheckpointUpdate=true)
    PersistDeduplicationFacts(deduplicationHandlers=[net.corda.testing.node.internal.MockNodeMessagingService$InMemoryDeduplicationHandler@35b19650])
    CommitTransaction
    AcknowledgeMessages(deduplicationHandlers=[net.corda.testing.node.internal.MockNodeMessagingService$InMemoryDeduplicationHandler@35b19650])
    ScheduleEvent(event=DoRemainingWork)
  Continuation: ProcessEvents
  Diff between previous and next state:
pendingDeduplicationHandlers: 
    [net.corda.testing.node.internal.MockNodeMessagingService$InMemoryDeduplicationHandler@35b19650]
    []
checkpoint.flowState.flowIORequest: 
    Receive(sessions=[FlowSessionImpl(destination=O=Mock Company 3, L=London, C=GB, sourceSessionId=SessionId(toLong=-5120188446144110538))])
    SendAndReceive({FlowSessionImpl(destination=O=Mock Company 3, L=London, C=GB, sourceSessionId=SessionId(toLong=-5366150003449329455))=FlowSessionImpl(destination=O=Mock Company 3, L=London, C=GB, sourceSessionId=SessionId(toLong=-5366150003449329455))=85F6C6CF64868F70037CA2C6CA9FEA6EACE859A31BBC357A1324A3A5285B070C}, shouldRetrySend=false)
checkpoint.flowState.frozenFiber.hash: 
    D38478FF707B110750CD6AC04200B119FCA04BEDAD9BA1AA138ECBF6B33F3796
    13E3226CE4C72E99467A39AAEF3D4C45C83A22FE3021F6945E2A5E5F95D6CBED
checkpoint.checkpointState.numberOfSuspends: 
    2
    3
checkpoint.checkpointState.numberOfCommits: 
    3
    4
checkpoint.timestamp: 
    2023-01-31T07:08:33.644Z
    2023-01-31T07:08:33.647Z
isFlowResumed: 
    true
    false
numberOfCommits: 
    3
    4


 --- Transition of flow [22fcb1c3-b5fb-4384-a563-f056a848c9bf] ---
  Timestamp: 2023-01-31T07:08:33.650Z
  Event: DoRemainingWork
  Actions: 
    SendMultiple(sendInitial=[SendInitial(destination=O=Mock Company 3, L=London, C=GB, initialise=InitialSessionMessage(initiatorSessionId=SessionId(toLong=-5366150003449329455), initiationEntropy=-6169107910265396549, initiatorFlowClassName=net.corda.samples.obligation.flows.IOUSettleFlow, appName=<unknown>, firstPayload=class net.corda.core.serialization.SerializedBytes), deduplicationId=SenderDeduplicationId(deduplicationId=DeduplicationId(toString=N-R--5366150003449329455--6169107910265396549-3-0), senderUUID=6085e859-0547-41f5-8009-8ac07555639a))], sendExisting=[])
  Continuation: ProcessEvents
  Diff between previous and next state:
checkpoint.flowState.flowIORequest: 
    SendAndReceive({FlowSessionImpl(destination=O=Mock Company 3, L=London, C=GB, sourceSessionId=SessionId(toLong=-5366150003449329455))=FlowSessionImpl(destination=O=Mock Company 3, L=London, C=GB, sourceSessionId=SessionId(toLong=-5366150003449329455))=85F6C6CF64868F70037CA2C6CA9FEA6EACE859A31BBC357A1324A3A5285B070C}, shouldRetrySend=false)
    Receive(sessions=[FlowSessionImpl(destination=O=Mock Company 3, L=London, C=GB, sourceSessionId=SessionId(toLong=-5366150003449329455))])
checkpoint.checkpointState.sessions.SessionId(toLong=-5366150003449329455): 
    Uninitiated(destination=O=Mock Company 3, L=London, C=GB, initiatingSubFlow=Initiating(flowClass=class net.corda.samples.obligation.flows.IOUSettleFlow, classToInitiateWith=class net.corda.samples.obligation.flows.IOUSettleFlow, flowInfo=FlowInfo(flowVersion=1, appName=<unknown>), subFlowVersion=CorDappFlow(platformVersion=11, corDappName=workflows-1.0, corDappHash=C516E48A6E6E70A0AB3D8BD39F2350C2FEFECFE936F017EBB2142877462D44D3), isEnabledTimedFlow=false), sourceSessionId=SessionId(toLong=-5366150003449329455), additionalEntropy=-6169107910265396549)
    Initiating(bufferedMessages=[], rejectionError=null, deduplicationSeed=R--5366150003449329455--6169107910265396549)
checkpoint.timestamp: 
    2023-01-31T07:08:33.647Z
    2023-01-31T07:08:33.649Z


 --- Transition of flow [22fcb1c3-b5fb-4384-a563-f056a848c9bf] ---
  Timestamp: 2023-01-31T07:08:33.671Z
  Event: DeliverSessionMessage(sessionMessage=ExistingSessionMessage(recipientSessionId=SessionId(toLong=-5120188446144110538), payload=net.corda.node.services.statemachine.EndSessionMessage@2a9a85ce), deduplicationHandler=net.corda.testing.node.internal.MockNodeMessagingService$InMemoryDeduplicationHandler@5623ecdb, sender=O=Mock Company 3, L=London, C=GB)
  Actions: 
    ScheduleEvent(event=DoRemainingWork)
  Continuation: ProcessEvents
  Diff between previous and next state:
pendingDeduplicationHandlers: 
    []
    [net.corda.testing.node.internal.MockNodeMessagingService$InMemoryDeduplicationHandler@5623ecdb]
checkpoint.checkpointState.sessions.SessionId(toLong=-5120188446144110538).receivedMessages.isEmpty: 
    true
    false
checkpoint.checkpointState.sessionsToBeClosed: 
    []
    [SessionId(toLong=-5120188446144110538)]
checkpoint.timestamp: 
    2023-01-31T07:08:33.649Z
    2023-01-31T07:08:33.671Z


 --- Transition of flow [22fcb1c3-b5fb-4384-a563-f056a848c9bf] ---
  Timestamp: 2023-01-31T07:08:33.671Z
  Event: DoRemainingWork
  Actions: 
    RemoveSessionBindings(sessionIds=[SessionId(toLong=-5120188446144110538)])
  Continuation: ProcessEvents
  Diff between previous and next state:
checkpoint.checkpointState.sessions.SessionId(toLong=-5120188446144110538): 
    Initiated(peerParty=O=Mock Company 3, L=London, C=GB, peerFlowInfo=FlowInfo(flowVersion=1, appName=accounts-workflows-1.0), receivedMessages=[net.corda.node.services.statemachine.EndSessionMessage@2a9a85ce], otherSideErrored=false, peerSinkSessionId=SessionId(toLong=-2879998342928925846), deduplicationSeed=R--5120188446144110538-8166144839349113546)
    null
checkpoint.checkpointState.sessionsToBeClosed: 
    [SessionId(toLong=-5120188446144110538)]
    []


 --- Transition of flow [22fcb1c3-b5fb-4384-a563-f056a848c9bf] ---
  Timestamp: 2023-01-31T07:08:33.673Z
  Event: DeliverSessionMessage(sessionMessage=ExistingSessionMessage(recipientSessionId=SessionId(toLong=-5366150003449329455), payload=ConfirmSessionMessage(initiatedSessionId=SessionId(toLong=-8071260149716765667), initiatedFlowInfo=FlowInfo(flowVersion=1, appName=<unknown>))), deduplicationHandler=net.corda.testing.node.internal.MockNodeMessagingService$InMemoryDeduplicationHandler@2f9747a7, sender=O=Mock Company 3, L=London, C=GB)
  Actions: 
    ScheduleEvent(event=DoRemainingWork)
  Continuation: ProcessEvents
  Diff between previous and next state:
pendingDeduplicationHandlers: 
    [net.corda.testing.node.internal.MockNodeMessagingService$InMemoryDeduplicationHandler@5623ecdb]
    [net.corda.testing.node.internal.MockNodeMessagingService$InMemoryDeduplicationHandler@5623ecdb, net.corda.testing.node.internal.MockNodeMessagingService$InMemoryDeduplicationHandler@2f9747a7]
checkpoint.checkpointState.sessions.SessionId(toLong=-5366150003449329455): 
    Initiating(bufferedMessages=[], rejectionError=null, deduplicationSeed=R--5366150003449329455--6169107910265396549)
    Initiated(peerParty=O=Mock Company 3, L=London, C=GB, peerFlowInfo=FlowInfo(flowVersion=1, appName=<unknown>), receivedMessages=[], otherSideErrored=false, peerSinkSessionId=SessionId(toLong=-8071260149716765667), deduplicationSeed=R--5366150003449329455--6169107910265396549)
checkpoint.timestamp: 
    2023-01-31T07:08:33.671Z
    2023-01-31T07:08:33.673Z


 --- Transition of flow [22fcb1c3-b5fb-4384-a563-f056a848c9bf] ---
  Timestamp: 2023-01-31T07:08:33.673Z
  Event: DoRemainingWork
  Actions: 
    
  Continuation: ProcessEvents
  Diff between previous and next state:
null

 --- Transition of flow [22fcb1c3-b5fb-4384-a563-f056a848c9bf] ---
  Timestamp: 2023-01-31T07:08:33.674Z
  Event: DeliverSessionMessage(sessionMessage=ExistingSessionMessage(recipientSessionId=SessionId(toLong=-5366150003449329455), payload=DataSessionMessage(payload=class net.corda.core.serialization.SerializedBytes)), deduplicationHandler=net.corda.testing.node.internal.MockNodeMessagingService$InMemoryDeduplicationHandler@5dd52523, sender=O=Mock Company 3, L=London, C=GB)
  Actions: 
    ScheduleEvent(event=DoRemainingWork)
  Continuation: ProcessEvents
  Diff between previous and next state:
pendingDeduplicationHandlers: 
    [net.corda.testing.node.internal.MockNodeMessagingService$InMemoryDeduplicationHandler@5623ecdb, net.corda.testing.node.internal.MockNodeMessagingService$InMemoryDeduplicationHandler@2f9747a7]
    [net.corda.testing.node.internal.MockNodeMessagingService$InMemoryDeduplicationHandler@5623ecdb, net.corda.testing.node.internal.MockNodeMessagingService$InMemoryDeduplicationHandler@2f9747a7, net.corda.testing.node.internal.MockNodeMessagingService$InMemoryDeduplicationHandler@5dd52523]
checkpoint.checkpointState.sessions.SessionId(toLong=-5366150003449329455).receivedMessages.isEmpty: 
    true
    false
checkpoint.timestamp: 
    2023-01-31T07:08:33.673Z
    2023-01-31T07:08:33.674Z


 --- Transition of flow [22fcb1c3-b5fb-4384-a563-f056a848c9bf] ---
  Timestamp: 2023-01-31T07:08:33.674Z
  Event: DoRemainingWork
  Actions: 
    CreateTransaction
  Continuation: Resume(result=class java.util.LinkedHashMap)
  Diff between previous and next state:
checkpoint.checkpointState.sessions.SessionId(toLong=-5366150003449329455).receivedMessages.isEmpty: 
    false
    true
isFlowResumed: 
    false
    true


 --- Transition of flow [22fcb1c3-b5fb-4384-a563-f056a848c9bf] ---
  Timestamp: 2023-01-31T07:08:33.678Z
  Event: Suspend(ioRequest=SendAndReceive({FlowSessionImpl(destination=O=Mock Company 3, L=London, C=GB, sourceSessionId=SessionId(toLong=-5366150003449329455))=FlowSessionImpl(destination=O=Mock Company 3, L=London, C=GB, sourceSessionId=SessionId(toLong=-5366150003449329455))=2A8BD9FC79E810170F0C13B73B96DCCFABD817F669EC7E084F8A3FAB021EBB82}, shouldRetrySend=false), maySkipCheckpoint=false, fiber=676EBA282EA52AB950831FCE7B30387BAD127F8DA492617AB930D450FC0B3281, currentStep=Starting)
  Actions: 
    PersistCheckpoint(id=[22fcb1c3-b5fb-4384-a563-f056a848c9bf], checkpoint=Checkpoint(checkpointState=CheckpointState(invocationContext=InvocationContext(origin=RPC(actor=Actor(id=Id(value=Only For Testing), serviceId=AuthServiceId(value=TEST), owningLegalIdentity=O=Mock Company 1, L=London, C=GB)), trace=Trace(invocationId=a44904ba-ec75-4986-be2c-5a017403c704, timestamp: 2023-01-31T07:08:33.182Z, entityType: Invocation, sessionId=a44904ba-ec75-4986-be2c-5a017403c704, timestamp: 2023-01-31T07:08:33.182Z, entityType: Session), actor=Actor(id=Id(value=Only For Testing), serviceId=AuthServiceId(value=TEST), owningLegalIdentity=O=Mock Company 1, L=London, C=GB), externalTrace=null, impersonatedActor=null, arguments=[], clientId=null), ourIdentity=O=Mock Company 1, L=London, C=GB, sessions={SessionId(toLong=-5366150003449329455)=Initiated(peerParty=O=Mock Company 3, L=London, C=GB, peerFlowInfo=FlowInfo(flowVersion=1, appName=<unknown>), receivedMessages=[], otherSideErrored=false, peerSinkSessionId=SessionId(toLong=-8071260149716765667), deduplicationSeed=R--5366150003449329455--6169107910265396549)}, sessionsToBeClosed=[], subFlowStack=[Initiating(flowClass=class net.corda.samples.obligation.flows.IOUSettleFlow, classToInitiateWith=class net.corda.samples.obligation.flows.IOUSettleFlow, flowInfo=FlowInfo(flowVersion=1, appName=<unknown>), subFlowVersion=CorDappFlow(platformVersion=11, corDappName=workflows-1.0, corDappHash=C516E48A6E6E70A0AB3D8BD39F2350C2FEFECFE936F017EBB2142877462D44D3), isEnabledTimedFlow=false), Inlined(flowClass=class net.corda.core.flows.CollectSignatureFlow, subFlowVersion=CoreFlow(platformVersion=11), isEnabledTimedFlow=false), Inlined(flowClass=class net.corda.core.flows.SendTransactionFlow, subFlowVersion=CoreFlow(platformVersion=11), isEnabledTimedFlow=false)], numberOfSuspends=4, numberOfCommits=5), flowState=Started(flowIORequest=SendAndReceive({FlowSessionImpl(destination=O=Mock Company 3, L=London, C=GB, sourceSessionId=SessionId(toLong=-5366150003449329455))=FlowSessionImpl(destination=O=Mock Company 3, L=London, C=GB, sourceSessionId=SessionId(toLong=-5366150003449329455))=2A8BD9FC79E810170F0C13B73B96DCCFABD817F669EC7E084F8A3FAB021EBB82}, shouldRetrySend=false), frozenFiber=676EBA282EA52AB950831FCE7B30387BAD127F8DA492617AB930D450FC0B3281), errorState=Clean, result=null, status=RUNNABLE, progressStep=Starting, flowIoRequest=SendAndReceive, compatible=true), isCheckpointUpdate=true)
    PersistDeduplicationFacts(deduplicationHandlers=[net.corda.testing.node.internal.MockNodeMessagingService$InMemoryDeduplicationHandler@5623ecdb, net.corda.testing.node.internal.MockNodeMessagingService$InMemoryDeduplicationHandler@2f9747a7, net.corda.testing.node.internal.MockNodeMessagingService$InMemoryDeduplicationHandler@5dd52523])
    CommitTransaction
    AcknowledgeMessages(deduplicationHandlers=[net.corda.testing.node.internal.MockNodeMessagingService$InMemoryDeduplicationHandler@5623ecdb, net.corda.testing.node.internal.MockNodeMessagingService$InMemoryDeduplicationHandler@2f9747a7, net.corda.testing.node.internal.MockNodeMessagingService$InMemoryDeduplicationHandler@5dd52523])
    ScheduleEvent(event=DoRemainingWork)
  Continuation: ProcessEvents
  Diff between previous and next state:
pendingDeduplicationHandlers: 
    [net.corda.testing.node.internal.MockNodeMessagingService$InMemoryDeduplicationHandler@5623ecdb, net.corda.testing.node.internal.MockNodeMessagingService$InMemoryDeduplicationHandler@2f9747a7, net.corda.testing.node.internal.MockNodeMessagingService$InMemoryDeduplicationHandler@5dd52523]
    []
checkpoint.flowState.flowIORequest: 
    Receive(sessions=[FlowSessionImpl(destination=O=Mock Company 3, L=London, C=GB, sourceSessionId=SessionId(toLong=-5366150003449329455))])
    SendAndReceive({FlowSessionImpl(destination=O=Mock Company 3, L=London, C=GB, sourceSessionId=SessionId(toLong=-5366150003449329455))=FlowSessionImpl(destination=O=Mock Company 3, L=London, C=GB, sourceSessionId=SessionId(toLong=-5366150003449329455))=2A8BD9FC79E810170F0C13B73B96DCCFABD817F669EC7E084F8A3FAB021EBB82}, shouldRetrySend=false)
checkpoint.flowState.frozenFiber.hash: 
    13E3226CE4C72E99467A39AAEF3D4C45C83A22FE3021F6945E2A5E5F95D6CBED
    676EBA282EA52AB950831FCE7B30387BAD127F8DA492617AB930D450FC0B3281
checkpoint.checkpointState.numberOfSuspends: 
    3
    4
checkpoint.checkpointState.numberOfCommits: 
    4
    5
checkpoint.timestamp: 
    2023-01-31T07:08:33.674Z
    2023-01-31T07:08:33.677Z
isFlowResumed: 
    true
    false
numberOfCommits: 
    4
    5


 --- Transition of flow [22fcb1c3-b5fb-4384-a563-f056a848c9bf] ---
  Timestamp: 2023-01-31T07:08:33.679Z
  Event: DoRemainingWork
  Actions: 
    SendMultiple(sendInitial=[], sendExisting=[SendExisting(peerParty=O=Mock Company 3, L=London, C=GB, message=ExistingSessionMessage(recipientSessionId=SessionId(toLong=-8071260149716765667), payload=DataSessionMessage(payload=class net.corda.core.serialization.SerializedBytes)), deduplicationId=SenderDeduplicationId(deduplicationId=DeduplicationId(toString=N-R--5366150003449329455--6169107910265396549-4-0), senderUUID=6085e859-0547-41f5-8009-8ac07555639a))])
  Continuation: ProcessEvents
  Diff between previous and next state:
checkpoint.flowState.flowIORequest: 
    SendAndReceive({FlowSessionImpl(destination=O=Mock Company 3, L=London, C=GB, sourceSessionId=SessionId(toLong=-5366150003449329455))=FlowSessionImpl(destination=O=Mock Company 3, L=London, C=GB, sourceSessionId=SessionId(toLong=-5366150003449329455))=2A8BD9FC79E810170F0C13B73B96DCCFABD817F669EC7E084F8A3FAB021EBB82}, shouldRetrySend=false)
    Receive(sessions=[FlowSessionImpl(destination=O=Mock Company 3, L=London, C=GB, sourceSessionId=SessionId(toLong=-5366150003449329455))])
checkpoint.timestamp: 
    2023-01-31T07:08:33.677Z
    2023-01-31T07:08:33.679Z


 --- Transition of flow [22fcb1c3-b5fb-4384-a563-f056a848c9bf] ---
  Timestamp: 2023-01-31T07:08:33.993Z
  Event: DeliverSessionMessage(sessionMessage=ExistingSessionMessage(recipientSessionId=SessionId(toLong=-5366150003449329455), payload=DataSessionMessage(payload=class net.corda.core.serialization.SerializedBytes)), deduplicationHandler=net.corda.testing.node.internal.MockNodeMessagingService$InMemoryDeduplicationHandler@3eee0fda, sender=O=Mock Company 3, L=London, C=GB)
  Actions: 
    ScheduleEvent(event=DoRemainingWork)
  Continuation: ProcessEvents
  Diff between previous and next state:
pendingDeduplicationHandlers: 
    []
    [net.corda.testing.node.internal.MockNodeMessagingService$InMemoryDeduplicationHandler@3eee0fda]
checkpoint.checkpointState.sessions.SessionId(toLong=-5366150003449329455).receivedMessages.isEmpty: 
    true
    false
checkpoint.timestamp: 
    2023-01-31T07:08:33.679Z
    2023-01-31T07:08:33.993Z


 --- Transition of flow [22fcb1c3-b5fb-4384-a563-f056a848c9bf] ---
  Timestamp: 2023-01-31T07:08:33.993Z
  Event: DoRemainingWork
  Actions: 
    CreateTransaction
  Continuation: Resume(result=class java.util.LinkedHashMap)
  Diff between previous and next state:
checkpoint.checkpointState.sessions.SessionId(toLong=-5366150003449329455).receivedMessages.isEmpty: 
    false
    true
isFlowResumed: 
    false
    true


 --- Transition of flow [22fcb1c3-b5fb-4384-a563-f056a848c9bf] ---
  Timestamp: 2023-01-31T07:08:33.994Z
  Event: LeaveSubFlow
  Actions: 
    
  Continuation: ProcessEvents
  Diff between previous and next state:
checkpoint.checkpointState.subFlowStack: 
    [Initiating(flowClass=class net.corda.samples.obligation.flows.IOUSettleFlow, classToInitiateWith=class net.corda.samples.obligation.flows.IOUSettleFlow, flowInfo=FlowInfo(flowVersion=1, appName=<unknown>), subFlowVersion=CorDappFlow(platformVersion=11, corDappName=workflows-1.0, corDappHash=C516E48A6E6E70A0AB3D8BD39F2350C2FEFECFE936F017EBB2142877462D44D3), isEnabledTimedFlow=false), Inlined(flowClass=class net.corda.core.flows.CollectSignatureFlow, subFlowVersion=CoreFlow(platformVersion=11), isEnabledTimedFlow=false), Inlined(flowClass=class net.corda.core.flows.SendTransactionFlow, subFlowVersion=CoreFlow(platformVersion=11), isEnabledTimedFlow=false)]
    [Initiating(flowClass=class net.corda.samples.obligation.flows.IOUSettleFlow, classToInitiateWith=class net.corda.samples.obligation.flows.IOUSettleFlow, flowInfo=FlowInfo(flowVersion=1, appName=<unknown>), subFlowVersion=CorDappFlow(platformVersion=11, corDappName=workflows-1.0, corDappHash=C516E48A6E6E70A0AB3D8BD39F2350C2FEFECFE936F017EBB2142877462D44D3), isEnabledTimedFlow=false), Inlined(flowClass=class net.corda.core.flows.CollectSignatureFlow, subFlowVersion=CoreFlow(platformVersion=11), isEnabledTimedFlow=false)]
checkpoint.timestamp: 
    2023-01-31T07:08:33.993Z
    2023-01-31T07:08:33.994Z


 --- Transition of flow [22fcb1c3-b5fb-4384-a563-f056a848c9bf] ---
  Timestamp: 2023-01-31T07:08:33.997Z
  Event: Suspend(ioRequest=Send(sessionToMessage={FlowSessionImpl(destination=O=Mock Company 3, L=London, C=GB, sourceSessionId=SessionId(toLong=-5366150003449329455))=8C56A564DD55409F8334D8F5ADE1503A634CEF4A8EF50C3C248AC67674699983}), maySkipCheckpoint=false, fiber=3B3C56BC9D59FDA411F35B57FFBBA60002C78B7D4DCC944748CE90686469B836, currentStep=Starting)
  Actions: 
    PersistCheckpoint(id=[22fcb1c3-b5fb-4384-a563-f056a848c9bf], checkpoint=Checkpoint(checkpointState=CheckpointState(invocationContext=InvocationContext(origin=RPC(actor=Actor(id=Id(value=Only For Testing), serviceId=AuthServiceId(value=TEST), owningLegalIdentity=O=Mock Company 1, L=London, C=GB)), trace=Trace(invocationId=a44904ba-ec75-4986-be2c-5a017403c704, timestamp: 2023-01-31T07:08:33.182Z, entityType: Invocation, sessionId=a44904ba-ec75-4986-be2c-5a017403c704, timestamp: 2023-01-31T07:08:33.182Z, entityType: Session), actor=Actor(id=Id(value=Only For Testing), serviceId=AuthServiceId(value=TEST), owningLegalIdentity=O=Mock Company 1, L=London, C=GB), externalTrace=null, impersonatedActor=null, arguments=[], clientId=null), ourIdentity=O=Mock Company 1, L=London, C=GB, sessions={SessionId(toLong=-5366150003449329455)=Initiated(peerParty=O=Mock Company 3, L=London, C=GB, peerFlowInfo=FlowInfo(flowVersion=1, appName=<unknown>), receivedMessages=[], otherSideErrored=false, peerSinkSessionId=SessionId(toLong=-8071260149716765667), deduplicationSeed=R--5366150003449329455--6169107910265396549)}, sessionsToBeClosed=[], subFlowStack=[Initiating(flowClass=class net.corda.samples.obligation.flows.IOUSettleFlow, classToInitiateWith=class net.corda.samples.obligation.flows.IOUSettleFlow, flowInfo=FlowInfo(flowVersion=1, appName=<unknown>), subFlowVersion=CorDappFlow(platformVersion=11, corDappName=workflows-1.0, corDappHash=C516E48A6E6E70A0AB3D8BD39F2350C2FEFECFE936F017EBB2142877462D44D3), isEnabledTimedFlow=false), Inlined(flowClass=class net.corda.core.flows.CollectSignatureFlow, subFlowVersion=CoreFlow(platformVersion=11), isEnabledTimedFlow=false)], numberOfSuspends=5, numberOfCommits=6), flowState=Started(flowIORequest=Send(sessionToMessage={FlowSessionImpl(destination=O=Mock Company 3, L=London, C=GB, sourceSessionId=SessionId(toLong=-5366150003449329455))=8C56A564DD55409F8334D8F5ADE1503A634CEF4A8EF50C3C248AC67674699983}), frozenFiber=3B3C56BC9D59FDA411F35B57FFBBA60002C78B7D4DCC944748CE90686469B836), errorState=Clean, result=null, status=RUNNABLE, progressStep=Starting, flowIoRequest=Send, compatible=true), isCheckpointUpdate=true)
    PersistDeduplicationFacts(deduplicationHandlers=[net.corda.testing.node.internal.MockNodeMessagingService$InMemoryDeduplicationHandler@3eee0fda])
    CommitTransaction
    AcknowledgeMessages(deduplicationHandlers=[net.corda.testing.node.internal.MockNodeMessagingService$InMemoryDeduplicationHandler@3eee0fda])
    ScheduleEvent(event=DoRemainingWork)
  Continuation: ProcessEvents
  Diff between previous and next state:
pendingDeduplicationHandlers: 
    [net.corda.testing.node.internal.MockNodeMessagingService$InMemoryDeduplicationHandler@3eee0fda]
    []
checkpoint.flowState.flowIORequest: 
    Receive(sessions=[FlowSessionImpl(destination=O=Mock Company 3, L=London, C=GB, sourceSessionId=SessionId(toLong=-5366150003449329455))])
    Send(sessionToMessage={FlowSessionImpl(destination=O=Mock Company 3, L=London, C=GB, sourceSessionId=SessionId(toLong=-5366150003449329455))=8C56A564DD55409F8334D8F5ADE1503A634CEF4A8EF50C3C248AC67674699983})
checkpoint.flowState.frozenFiber.hash: 
    676EBA282EA52AB950831FCE7B30387BAD127F8DA492617AB930D450FC0B3281
    3B3C56BC9D59FDA411F35B57FFBBA60002C78B7D4DCC944748CE90686469B836
checkpoint.flowIoRequest: 
    SendAndReceive
    Send
checkpoint.checkpointState.numberOfSuspends: 
    4
    5
checkpoint.checkpointState.numberOfCommits: 
    5
    6
checkpoint.timestamp: 
    2023-01-31T07:08:33.994Z
    2023-01-31T07:08:33.995Z
isFlowResumed: 
    true
    false
numberOfCommits: 
    5
    6


 --- Transition of flow [22fcb1c3-b5fb-4384-a563-f056a848c9bf] ---
  Timestamp: 2023-01-31T07:08:33.997Z
  Event: DoRemainingWork
  Actions: 
    SendMultiple(sendInitial=[], sendExisting=[SendExisting(peerParty=O=Mock Company 3, L=London, C=GB, message=ExistingSessionMessage(recipientSessionId=SessionId(toLong=-8071260149716765667), payload=DataSessionMessage(payload=class net.corda.core.serialization.SerializedBytes)), deduplicationId=SenderDeduplicationId(deduplicationId=DeduplicationId(toString=N-R--5366150003449329455--6169107910265396549-5-0), senderUUID=6085e859-0547-41f5-8009-8ac07555639a))])
    CreateTransaction
  Continuation: Resume(result=class kotlin.Unit)
  Diff between previous and next state:
isFlowResumed: 
    false
    true


 --- Transition of flow [22fcb1c3-b5fb-4384-a563-f056a848c9bf] ---
  Timestamp: 2023-01-31T07:08:34Z
  Event: Suspend(ioRequest=Receive(sessions=[FlowSessionImpl(destination=O=Mock Company 3, L=London, C=GB, sourceSessionId=SessionId(toLong=-5366150003449329455))]), maySkipCheckpoint=false, fiber=C035A1309FE585750ED12DDFAD73E66663397EC0D1334F075FD37DF06B5F8048, currentStep=Starting)
  Actions: 
    PersistCheckpoint(id=[22fcb1c3-b5fb-4384-a563-f056a848c9bf], checkpoint=Checkpoint(checkpointState=CheckpointState(invocationContext=InvocationContext(origin=RPC(actor=Actor(id=Id(value=Only For Testing), serviceId=AuthServiceId(value=TEST), owningLegalIdentity=O=Mock Company 1, L=London, C=GB)), trace=Trace(invocationId=a44904ba-ec75-4986-be2c-5a017403c704, timestamp: 2023-01-31T07:08:33.182Z, entityType: Invocation, sessionId=a44904ba-ec75-4986-be2c-5a017403c704, timestamp: 2023-01-31T07:08:33.182Z, entityType: Session), actor=Actor(id=Id(value=Only For Testing), serviceId=AuthServiceId(value=TEST), owningLegalIdentity=O=Mock Company 1, L=London, C=GB), externalTrace=null, impersonatedActor=null, arguments=[], clientId=null), ourIdentity=O=Mock Company 1, L=London, C=GB, sessions={SessionId(toLong=-5366150003449329455)=Initiated(peerParty=O=Mock Company 3, L=London, C=GB, peerFlowInfo=FlowInfo(flowVersion=1, appName=<unknown>), receivedMessages=[], otherSideErrored=false, peerSinkSessionId=SessionId(toLong=-8071260149716765667), deduplicationSeed=R--5366150003449329455--6169107910265396549)}, sessionsToBeClosed=[], subFlowStack=[Initiating(flowClass=class net.corda.samples.obligation.flows.IOUSettleFlow, classToInitiateWith=class net.corda.samples.obligation.flows.IOUSettleFlow, flowInfo=FlowInfo(flowVersion=1, appName=<unknown>), subFlowVersion=CorDappFlow(platformVersion=11, corDappName=workflows-1.0, corDappHash=C516E48A6E6E70A0AB3D8BD39F2350C2FEFECFE936F017EBB2142877462D44D3), isEnabledTimedFlow=false), Inlined(flowClass=class net.corda.core.flows.CollectSignatureFlow, subFlowVersion=CoreFlow(platformVersion=11), isEnabledTimedFlow=false)], numberOfSuspends=6, numberOfCommits=7), flowState=Started(flowIORequest=Receive(sessions=[FlowSessionImpl(destination=O=Mock Company 3, L=London, C=GB, sourceSessionId=SessionId(toLong=-5366150003449329455))]), frozenFiber=C035A1309FE585750ED12DDFAD73E66663397EC0D1334F075FD37DF06B5F8048), errorState=Clean, result=null, status=RUNNABLE, progressStep=Starting, flowIoRequest=Receive, compatible=true), isCheckpointUpdate=true)
    PersistDeduplicationFacts(deduplicationHandlers=[])
    CommitTransaction
    AcknowledgeMessages(deduplicationHandlers=[])
    ScheduleEvent(event=DoRemainingWork)
  Continuation: ProcessEvents
  Diff between previous and next state:
checkpoint.flowState.flowIORequest: 
    Send(sessionToMessage={FlowSessionImpl(destination=O=Mock Company 3, L=London, C=GB, sourceSessionId=SessionId(toLong=-5366150003449329455))=8C56A564DD55409F8334D8F5ADE1503A634CEF4A8EF50C3C248AC67674699983})
    Receive(sessions=[FlowSessionImpl(destination=O=Mock Company 3, L=London, C=GB, sourceSessionId=SessionId(toLong=-5366150003449329455))])
checkpoint.flowState.frozenFiber.hash: 
    3B3C56BC9D59FDA411F35B57FFBBA60002C78B7D4DCC944748CE90686469B836
    C035A1309FE585750ED12DDFAD73E66663397EC0D1334F075FD37DF06B5F8048
checkpoint.flowIoRequest: 
    Send
    Receive
checkpoint.checkpointState.numberOfSuspends: 
    5
    6
checkpoint.checkpointState.numberOfCommits: 
    6
    7
checkpoint.timestamp: 
    2023-01-31T07:08:33.997Z
    2023-01-31T07:08:33.999Z
isFlowResumed: 
    true
    false
numberOfCommits: 
    6
    7


 --- Transition of flow [22fcb1c3-b5fb-4384-a563-f056a848c9bf] ---
  Timestamp: 2023-01-31T07:08:34.001Z
  Event: DoRemainingWork
  Actions: 
    
  Continuation: ProcessEvents
  Diff between previous and next state:
null

 --- Transition of flow [22fcb1c3-b5fb-4384-a563-f056a848c9bf] ---
  Timestamp: 2023-01-31T07:08:34.014Z
  Event: DeliverSessionMessage(sessionMessage=ExistingSessionMessage(recipientSessionId=SessionId(toLong=-5366150003449329455), payload=DataSessionMessage(payload=class net.corda.core.serialization.SerializedBytes)), deduplicationHandler=net.corda.testing.node.internal.MockNodeMessagingService$InMemoryDeduplicationHandler@a8aadcd, sender=O=Mock Company 3, L=London, C=GB)
  Actions: 
    ScheduleEvent(event=DoRemainingWork)
  Continuation: ProcessEvents
  Diff between previous and next state:
pendingDeduplicationHandlers: 
    []
    [net.corda.testing.node.internal.MockNodeMessagingService$InMemoryDeduplicationHandler@a8aadcd]
checkpoint.checkpointState.sessions.SessionId(toLong=-5366150003449329455).receivedMessages.isEmpty: 
    true
    false
checkpoint.timestamp: 
    2023-01-31T07:08:34.001Z
    2023-01-31T07:08:34.014Z


 --- Transition of flow [22fcb1c3-b5fb-4384-a563-f056a848c9bf] ---
  Timestamp: 2023-01-31T07:08:34.014Z
  Event: DoRemainingWork
  Actions: 
    CreateTransaction
  Continuation: Resume(result=class java.util.LinkedHashMap)
  Diff between previous and next state:
checkpoint.checkpointState.sessions.SessionId(toLong=-5366150003449329455).receivedMessages.isEmpty: 
    false
    true
isFlowResumed: 
    false
    true


 --- Transition of flow [22fcb1c3-b5fb-4384-a563-f056a848c9bf] ---
  Timestamp: 2023-01-31T07:08:34.015Z
  Event: LeaveSubFlow
  Actions: 
    
  Continuation: ProcessEvents
  Diff between previous and next state:
checkpoint.checkpointState.subFlowStack: 
    [Initiating(flowClass=class net.corda.samples.obligation.flows.IOUSettleFlow, classToInitiateWith=class net.corda.samples.obligation.flows.IOUSettleFlow, flowInfo=FlowInfo(flowVersion=1, appName=<unknown>), subFlowVersion=CorDappFlow(platformVersion=11, corDappName=workflows-1.0, corDappHash=C516E48A6E6E70A0AB3D8BD39F2350C2FEFECFE936F017EBB2142877462D44D3), isEnabledTimedFlow=false), Inlined(flowClass=class net.corda.core.flows.CollectSignatureFlow, subFlowVersion=CoreFlow(platformVersion=11), isEnabledTimedFlow=false)]
    [Initiating(flowClass=class net.corda.samples.obligation.flows.IOUSettleFlow, classToInitiateWith=class net.corda.samples.obligation.flows.IOUSettleFlow, flowInfo=FlowInfo(flowVersion=1, appName=<unknown>), subFlowVersion=CorDappFlow(platformVersion=11, corDappName=workflows-1.0, corDappHash=C516E48A6E6E70A0AB3D8BD39F2350C2FEFECFE936F017EBB2142877462D44D3), isEnabledTimedFlow=false)]
checkpoint.timestamp: 
    2023-01-31T07:08:34.014Z
    2023-01-31T07:08:34.015Z


 --- Transition of flow [22fcb1c3-b5fb-4384-a563-f056a848c9bf] ---
  Timestamp: 2023-01-31T07:08:34.015Z
  Event: EnterSubFlow(subFlowClass=class net.corda.core.flows.FinalityFlow, subFlowVersion=CoreFlow(platformVersion=11), isEnabledTimedFlow=false)
  Actions: 
    
  Continuation: ProcessEvents
  Diff between previous and next state:
checkpoint.checkpointState.subFlowStack: 
    [Initiating(flowClass=class net.corda.samples.obligation.flows.IOUSettleFlow, classToInitiateWith=class net.corda.samples.obligation.flows.IOUSettleFlow, flowInfo=FlowInfo(flowVersion=1, appName=<unknown>), subFlowVersion=CorDappFlow(platformVersion=11, corDappName=workflows-1.0, corDappHash=C516E48A6E6E70A0AB3D8BD39F2350C2FEFECFE936F017EBB2142877462D44D3), isEnabledTimedFlow=false)]
    [Initiating(flowClass=class net.corda.samples.obligation.flows.IOUSettleFlow, classToInitiateWith=class net.corda.samples.obligation.flows.IOUSettleFlow, flowInfo=FlowInfo(flowVersion=1, appName=<unknown>), subFlowVersion=CorDappFlow(platformVersion=11, corDappName=workflows-1.0, corDappHash=C516E48A6E6E70A0AB3D8BD39F2350C2FEFECFE936F017EBB2142877462D44D3), isEnabledTimedFlow=false), Initiating(flowClass=class net.corda.core.flows.FinalityFlow, classToInitiateWith=class net.corda.core.flows.FinalityFlow, flowInfo=FlowInfo(flowVersion=1, appName=corda-core-4.9), subFlowVersion=CoreFlow(platformVersion=11), isEnabledTimedFlow=false)]


 --- Transition of flow [22fcb1c3-b5fb-4384-a563-f056a848c9bf] ---
  Timestamp: 2023-01-31T07:08:34.023Z
  Event: LeaveSubFlow
  Actions: 
    
  Continuation: ProcessEvents
  Diff between previous and next state:
checkpoint.checkpointState.subFlowStack: 
    [Initiating(flowClass=class net.corda.samples.obligation.flows.IOUSettleFlow, classToInitiateWith=class net.corda.samples.obligation.flows.IOUSettleFlow, flowInfo=FlowInfo(flowVersion=1, appName=<unknown>), subFlowVersion=CorDappFlow(platformVersion=11, corDappName=workflows-1.0, corDappHash=C516E48A6E6E70A0AB3D8BD39F2350C2FEFECFE936F017EBB2142877462D44D3), isEnabledTimedFlow=false), Initiating(flowClass=class net.corda.core.flows.FinalityFlow, classToInitiateWith=class net.corda.core.flows.FinalityFlow, flowInfo=FlowInfo(flowVersion=1, appName=corda-core-4.9), subFlowVersion=CoreFlow(platformVersion=11), isEnabledTimedFlow=false)]
    [Initiating(flowClass=class net.corda.samples.obligation.flows.IOUSettleFlow, classToInitiateWith=class net.corda.samples.obligation.flows.IOUSettleFlow, flowInfo=FlowInfo(flowVersion=1, appName=<unknown>), subFlowVersion=CorDappFlow(platformVersion=11, corDappName=workflows-1.0, corDappHash=C516E48A6E6E70A0AB3D8BD39F2350C2FEFECFE936F017EBB2142877462D44D3), isEnabledTimedFlow=false)]
checkpoint.timestamp: 
    2023-01-31T07:08:34.015Z
    2023-01-31T07:08:34.023Z


 --- Transition of flow [22fcb1c3-b5fb-4384-a563-f056a848c9bf] ---
  Timestamp: 2023-01-31T07:08:34.038Z
  Event: Error(exception=java.lang.IllegalArgumentException: Could not find Party for Anonymous(DLArfsNxSrxYiD4Af7N7nfgykJNFEEwG1qYGU5Msgn9Khs), rollback=true)
  Actions: 
    RollbackTransaction
    ScheduleEvent(event=DoRemainingWork)
  Continuation: ProcessEvents
  Diff between previous and next state:
checkpoint.errorState: 
    Clean
    Errored(errors=[FlowError(errorId=-870222702024413628, exception=java.lang.IllegalArgumentException: Could not find Party for Anonymous(DLArfsNxSrxYiD4Af7N7nfgykJNFEEwG1qYGU5Msgn9Khs))], propagatedIndex=0, propagating=false)
checkpoint.timestamp: 
    2023-01-31T07:08:34.023Z
    2023-01-31T07:08:34.025Z
isFlowResumed: 
    true
    false


 --- Transition of flow [22fcb1c3-b5fb-4384-a563-f056a848c9bf] ---
  Timestamp: 2023-01-31T07:08:34.042Z
  Event: DoRemainingWork
  Actions: 
    
  Continuation: ProcessEvents
  Diff between previous and next state:
null

 --- Transition of flow [22fcb1c3-b5fb-4384-a563-f056a848c9bf] ---
  Timestamp: 2023-01-31T07:08:34.043Z
  Event: StartErrorPropagation
  Actions: 
    ScheduleEvent(event=DoRemainingWork)
  Continuation: ProcessEvents
  Diff between previous and next state:
checkpoint.errorState.propagating: 
    false
    true
checkpoint.timestamp: 
    2023-01-31T07:08:34.025Z
    2023-01-31T07:08:34.043Z


 --- Transition of flow [22fcb1c3-b5fb-4384-a563-f056a848c9bf] ---
  Timestamp: 2023-01-31T07:08:34.140Z
  Event: DoRemainingWork
  Actions: 
    PropagateErrors(errorMessages=[ErrorSessionMessage(flowException=null, errorId=-870222702024413628)], sessions=[Initiated(peerParty=O=Mock Company 3, L=London, C=GB, peerFlowInfo=FlowInfo(flowVersion=1, appName=<unknown>), receivedMessages=[], otherSideErrored=false, peerSinkSessionId=SessionId(toLong=-8071260149716765667), deduplicationSeed=R--5366150003449329455--6169107910265396549)], senderUUID=6085e859-0547-41f5-8009-8ac07555639a)
    CreateTransaction
    RemoveCheckpoint(id=[22fcb1c3-b5fb-4384-a563-f056a848c9bf], mayHavePersistentResults=false)
    PersistDeduplicationFacts(deduplicationHandlers=[net.corda.testing.node.internal.MockNodeMessagingService$InMemoryDeduplicationHandler@a8aadcd])
    ReleaseSoftLocks(uuid=22fcb1c3-b5fb-4384-a563-f056a848c9bf)
    CommitTransaction
    AcknowledgeMessages(deduplicationHandlers=[net.corda.testing.node.internal.MockNodeMessagingService$InMemoryDeduplicationHandler@a8aadcd])
    RemoveSessionBindings(sessionIds=[SessionId(toLong=-5366150003449329455)])
    RemoveFlow(flowId=[22fcb1c3-b5fb-4384-a563-f056a848c9bf], removalReason=ErrorFinish(flowErrors=[FlowError(errorId=-870222702024413628, exception=java.lang.IllegalArgumentException: Could not find Party for Anonymous(DLArfsNxSrxYiD4Af7N7nfgykJNFEEwG1qYGU5Msgn9Khs))]), lastState=StateMachineState(checkpoint=Checkpoint(checkpointState=CheckpointState(invocationContext=InvocationContext(origin=RPC(actor=Actor(id=Id(value=Only For Testing), serviceId=AuthServiceId(value=TEST), owningLegalIdentity=O=Mock Company 1, L=London, C=GB)), trace=Trace(invocationId=a44904ba-ec75-4986-be2c-5a017403c704, timestamp: 2023-01-31T07:08:33.182Z, entityType: Invocation, sessionId=a44904ba-ec75-4986-be2c-5a017403c704, timestamp: 2023-01-31T07:08:33.182Z, entityType: Session), actor=Actor(id=Id(value=Only For Testing), serviceId=AuthServiceId(value=TEST), owningLegalIdentity=O=Mock Company 1, L=London, C=GB), externalTrace=null, impersonatedActor=null, arguments=[], clientId=null), ourIdentity=O=Mock Company 1, L=London, C=GB, sessions={SessionId(toLong=-5366150003449329455)=Initiated(peerParty=O=Mock Company 3, L=London, C=GB, peerFlowInfo=FlowInfo(flowVersion=1, appName=<unknown>), receivedMessages=[], otherSideErrored=false, peerSinkSessionId=SessionId(toLong=-8071260149716765667), deduplicationSeed=R--5366150003449329455--6169107910265396549)}, sessionsToBeClosed=[], subFlowStack=[Initiating(flowClass=class net.corda.samples.obligation.flows.IOUSettleFlow, classToInitiateWith=class net.corda.samples.obligation.flows.IOUSettleFlow, flowInfo=FlowInfo(flowVersion=1, appName=<unknown>), subFlowVersion=CorDappFlow(platformVersion=11, corDappName=workflows-1.0, corDappHash=C516E48A6E6E70A0AB3D8BD39F2350C2FEFECFE936F017EBB2142877462D44D3), isEnabledTimedFlow=false)], numberOfSuspends=6, numberOfCommits=8), flowState=net.corda.node.services.statemachine.FlowState$Finished@b8b9f78, errorState=Errored(errors=[FlowError(errorId=-870222702024413628, exception=java.lang.IllegalArgumentException: Could not find Party for Anonymous(DLArfsNxSrxYiD4Af7N7nfgykJNFEEwG1qYGU5Msgn9Khs))], propagatedIndex=0, propagating=true), result=null, status=FAILED, progressStep=Starting, flowIoRequest=Receive, compatible=true), flowLogic=net.corda.samples.obligation.flows.IOUSettleFlow@290e5cae, pendingDeduplicationHandlers=[], isFlowResumed=false, isWaitingForFuture=false, future=null, isAnyCheckpointPersisted=true, isStartIdempotent=false, isRemoved=true, isKilled=false, isDead=false, senderUUID=6085e859-0547-41f5-8009-8ac07555639a, reloadCheckpointAfterSuspendCount=null, numberOfCommits=8, lock=java.util.concurrent.Semaphore@168b50ad[Permits = 0]))
  Continuation: Abort
  Diff between previous and next state:
pendingDeduplicationHandlers: 
    [net.corda.testing.node.internal.MockNodeMessagingService$InMemoryDeduplicationHandler@a8aadcd]
    []
checkpoint.status: 
    RUNNABLE
    FAILED
checkpoint.flowState: 
    Started(flowIORequest=Receive(sessions=[FlowSessionImpl(destination=O=Mock Company 3, L=London, C=GB, sourceSessionId=SessionId(toLong=-5366150003449329455))]), frozenFiber=C035A1309FE585750ED12DDFAD73E66663397EC0D1334F075FD37DF06B5F8048)
    net.corda.node.services.statemachine.FlowState$Finished@b8b9f78
checkpoint.checkpointState.numberOfCommits: 
    7
    8
checkpoint.timestamp: 
    2023-01-31T07:08:34.043Z
    2023-01-31T07:08:34.071Z
numberOfCommits: 
    7
    8
isRemoved: 
    false
    true
 {actor_id=Only For Testing, actor_owning_identity=O=Mock Company 1, L=London, C=GB, actor_store_id=TEST, fiber-id=10000027, flow-id=22fcb1c3-b5fb-4384-a563-f056a848c9bf, invocation_id=a44904ba-ec75-4986-be2c-5a017403c704, invocation_timestamp=2023-01-31T07:08:33.182Z, origin=Only For Testing, session_id=a44904ba-ec75-4986-be2c-5a017403c704, session_timestamp=2023-01-31T07:08:33.182Z, thread-id=854, tx_id=0DFF1D65C786D2F8443A0291C9DD252856A4D061214F27B9FC98D7C999E3139E}
[WARN ] 2023-01-31T07:08:34,150Z [Mock network] interceptors.DumpHistoryOnErrorInterceptor. - Flow [22fcb1c3-b5fb-4384-a563-f056a848c9bf] error {actor_id=Only For Testing, actor_owning_identity=O=Mock Company 1, L=London, C=GB, actor_store_id=TEST, fiber-id=10000027, flow-id=22fcb1c3-b5fb-4384-a563-f056a848c9bf, invocation_id=a44904ba-ec75-4986-be2c-5a017403c704, invocation_timestamp=2023-01-31T07:08:33.182Z, origin=Only For Testing, session_id=a44904ba-ec75-4986-be2c-5a017403c704, session_timestamp=2023-01-31T07:08:33.182Z, thread-id=854, tx_id=0DFF1D65C786D2F8443A0291C9DD252856A4D061214F27B9FC98D7C999E3139E}
java.lang.IllegalArgumentException: Could not find Party for Anonymous(DLArfsNxSrxYiD4Af7N7nfgykJNFEEwG1qYGU5Msgn9Khs)
	at net.corda.core.identity.IdentityUtils.groupAbstractPartyByWellKnownParty(IdentityUtils.kt:47) ~[corda-core-4.9.jar:?]
	at net.corda.core.identity.IdentityUtils.groupAbstractPartyByWellKnownParty(IdentityUtils.kt:63) ~[corda-core-4.9.jar:?]
	at net.corda.core.flows.FinalityFlow.extractExternalParticipants(FinalityFlow.kt:252) ~[corda-core-4.9.jar:?]
	at net.corda.core.flows.FinalityFlow.call(FinalityFlow.kt:162) ~[corda-core-4.9.jar:?]
	at net.corda.core.flows.FinalityFlow.call(FinalityFlow.kt:43) ~[corda-core-4.9.jar:?]
	at net.corda.node.services.statemachine.FlowStateMachineImpl.subFlow(FlowStateMachineImpl.kt:420) ~[corda-node-4.9.jar:?]
	at net.corda.core.flows.FlowLogic.subFlow(FlowLogic.kt:409) ~[corda-core-4.9.jar:?]
	at net.corda.samples.obligation.flows.IOUSettleFlow.call(IOUSettleFlow.kt:116) ~[main/:?]
	at net.corda.samples.obligation.flows.IOUSettleFlow.call(IOUSettleFlow.kt:30) ~[main/:?]
	at net.corda.node.services.statemachine.FlowStateMachineImpl.run(FlowStateMachineImpl.kt:349) ~[corda-node-4.9.jar:?]
	at net.corda.node.services.statemachine.FlowStateMachineImpl.run(FlowStateMachineImpl.kt:71) ~[corda-node-4.9.jar:?]
	at co.paralleluniverse.fibers.Fiber.run1(Fiber.java:1092) ~[quasar-core-0.7.10.jar:0.7.10]
	at co.paralleluniverse.fibers.Fiber.exec(Fiber.java:788) ~[quasar-core-0.7.10.jar:0.7.10]
	at co.paralleluniverse.fibers.RunnableFiberTask.doExec(RunnableFiberTask.java:100) ~[quasar-core-0.7.10.jar:0.7.10]
	at co.paralleluniverse.fibers.RunnableFiberTask.run(RunnableFiberTask.java:91) ~[quasar-core-0.7.10.jar:0.7.10]
	at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511) ~[?:1.8.0_202]
	at java.util.concurrent.FutureTask.run(FutureTask.java:266) ~[?:1.8.0_202]
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.access$201(ScheduledThreadPoolExecutor.java:180) ~[?:1.8.0_202]
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.run(ScheduledThreadPoolExecutor.java:293) ~[?:1.8.0_202]
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149) ~[?:1.8.0_202]
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624) ~[?:1.8.0_202]
	at net.corda.node.utilities.AffinityExecutor$ServiceAffinityExecutor$1$thread$1.run(AffinityExecutor.kt:63) ~[corda-node-4.9.jar:?]
[INFO ] 2023-01-31T07:08:34,153Z [Mock network] corda.flow. - Flow raised an error: Counter-flow errored. Sending it to flow hospital to be triaged. {fiber-id=10000029, flow-id=cae64fda-d94b-4030-8562-3cb8f97a87f1, invocation_id=e0c93ab2-f782-484f-a5df-68a019267e50, invocation_timestamp=2023-01-31T07:08:33.651Z, origin=O=Mock Company 1, L=London, C=GB, session_id=e0c93ab2-f782-484f-a5df-68a019267e50, session_timestamp=2023-01-31T07:08:33.651Z, thread-id=854, tx_id=0DFF1D65C786D2F8443A0291C9DD252856A4D061214F27B9FC98D7C999E3139E}
[INFO ] 2023-01-31T07:08:34,154Z [Mock network] statemachine.StaffedFlowHospital. - Flow [cae64fda-d94b-4030-8562-3cb8f97a87f1] admitted to hospital in state StateMachineState(checkpoint=Checkpoint(checkpointState=CheckpointState(invocationContext=InvocationContext(origin=Peer(party=O=Mock Company 1, L=London, C=GB), trace=Trace(invocationId=e0c93ab2-f782-484f-a5df-68a019267e50, timestamp: 2023-01-31T07:08:33.651Z, entityType: Invocation, sessionId=e0c93ab2-f782-484f-a5df-68a019267e50, timestamp: 2023-01-31T07:08:33.651Z, entityType: Session), actor=null, externalTrace=null, impersonatedActor=null, arguments=[], clientId=null), ourIdentity=O=Mock Company 3, L=London, C=GB, sessions={SessionId(toLong=-8071260149716765667)=Initiated(peerParty=O=Mock Company 1, L=London, C=GB, peerFlowInfo=FlowInfo(flowVersion=1, appName=<unknown>), receivedMessages=[], otherSideErrored=true, peerSinkSessionId=SessionId(toLong=-5366150003449329455), deduplicationSeed=D--5366150003449329455--6169107910265396549)}, sessionsToBeClosed=[], subFlowStack=[Inlined(flowClass=class net.corda.samples.obligation.flows.IOUSettleFlowResponder, subFlowVersion=CorDappFlow(platformVersion=11, corDappName=workflows-1.0, corDappHash=C516E48A6E6E70A0AB3D8BD39F2350C2FEFECFE936F017EBB2142877462D44D3), isEnabledTimedFlow=false)], numberOfSuspends=7, numberOfCommits=8), flowState=Started(flowIORequest=Receive(sessions=[FlowSessionImpl(destination=O=Mock Company 1, L=London, C=GB, sourceSessionId=SessionId(toLong=-8071260149716765667))]), frozenFiber=1B8FDF36B775D7A1B7D046E21597F8A9FFA0FFAF186F27B5D1A767FF7F44C2C8), errorState=Clean, result=null, status=RUNNABLE, progressStep=Starting, flowIoRequest=Receive, compatible=true), flowLogic=net.corda.samples.obligation.flows.IOUSettleFlowResponder@6f79453b, pendingDeduplicationHandlers=[net.corda.testing.node.internal.MockNodeMessagingService$InMemoryDeduplicationHandler@545c66ae], isFlowResumed=true, isWaitingForFuture=false, future=null, isAnyCheckpointPersisted=true, isStartIdempotent=false, isRemoved=false, isKilled=false, isDead=false, senderUUID=1409862b-8d98-4245-b5a4-db9f3ad49a64, reloadCheckpointAfterSuspendCount=null, numberOfCommits=8, lock=java.util.concurrent.Semaphore@15bb32e2[Permits = 0]) {fiber-id=10000029, flow-id=cae64fda-d94b-4030-8562-3cb8f97a87f1, invocation_id=e0c93ab2-f782-484f-a5df-68a019267e50, invocation_timestamp=2023-01-31T07:08:33.651Z, origin=O=Mock Company 1, L=London, C=GB, session_id=e0c93ab2-f782-484f-a5df-68a019267e50, session_timestamp=2023-01-31T07:08:33.651Z, thread-id=854, tx_id=0DFF1D65C786D2F8443A0291C9DD252856A4D061214F27B9FC98D7C999E3139E}
[INFO ] 2023-01-31T07:08:34,154Z [Mock network] statemachine.StaffedFlowHospital. - Error 1 of 1: {fiber-id=10000029, flow-id=cae64fda-d94b-4030-8562-3cb8f97a87f1, invocation_id=e0c93ab2-f782-484f-a5df-68a019267e50, invocation_timestamp=2023-01-31T07:08:33.651Z, origin=O=Mock Company 1, L=London, C=GB, session_id=e0c93ab2-f782-484f-a5df-68a019267e50, session_timestamp=2023-01-31T07:08:33.651Z, thread-id=854, tx_id=0DFF1D65C786D2F8443A0291C9DD252856A4D061214F27B9FC98D7C999E3139E}
net.corda.core.flows.UnexpectedFlowEndException: Counter-flow errored
	at Received unexpected counter-flow exception from peer O=Mock Company 1, L=London, C=GB.() ~[?:?]
	at net.corda.node.services.statemachine.FlowStateMachineImpl.fillInLocalStackTrace(FlowStateMachineImpl.kt:244) ~[corda-node-4.9.jar:?]
	at net.corda.node.services.statemachine.FlowStateMachineImpl.processEventsUntilFlowIsResumed(FlowStateMachineImpl.kt:225) ~[corda-node-4.9.jar:?]
	at net.corda.node.services.statemachine.FlowStateMachineImpl.suspend(FlowStateMachineImpl.kt:577) ~[corda-node-4.9.jar:?]
	at net.corda.node.services.statemachine.FlowSessionImpl.receive(FlowSessionImpl.kt:67) ~[corda-node-4.9.jar:?]
	at net.corda.node.services.statemachine.FlowSessionImpl.receive(FlowSessionImpl.kt:71) ~[corda-node-4.9.jar:?]
	at net.corda.core.flows.ReceiveTransactionFlow.call(ReceiveTransactionFlow.kt:103) ~[corda-core-4.9.jar:?]
	at net.corda.core.flows.ReceiveTransactionFlow.call(ReceiveTransactionFlow.kt:31) ~[corda-core-4.9.jar:?]
	at net.corda.node.services.statemachine.FlowStateMachineImpl.subFlow(FlowStateMachineImpl.kt:420) ~[corda-node-4.9.jar:?]
	at net.corda.core.flows.FlowLogic.subFlow(FlowLogic.kt:409) ~[corda-core-4.9.jar:?]
	at net.corda.core.flows.ReceiveFinalityFlow.call(FinalityFlow.kt:285) ~[corda-core-4.9.jar:?]
	at net.corda.core.flows.ReceiveFinalityFlow.call(FinalityFlow.kt:280) ~[corda-core-4.9.jar:?]
	at net.corda.node.services.statemachine.FlowStateMachineImpl.subFlow(FlowStateMachineImpl.kt:420) ~[corda-node-4.9.jar:?]
	at net.corda.core.flows.FlowLogic.subFlow(FlowLogic.kt:409) ~[corda-core-4.9.jar:?]
	at net.corda.samples.obligation.flows.IOUSettleFlowResponder.call(IOUSettleFlow.kt:139) ~[main/:?]
	at net.corda.samples.obligation.flows.IOUSettleFlowResponder.call(IOUSettleFlow.kt:126) ~[main/:?]
	at net.corda.node.services.statemachine.FlowStateMachineImpl.run(FlowStateMachineImpl.kt:349) ~[corda-node-4.9.jar:?]
	at net.corda.node.services.statemachine.FlowStateMachineImpl.run(FlowStateMachineImpl.kt:71) ~[corda-node-4.9.jar:?]
	at co.paralleluniverse.fibers.Fiber.run1(Fiber.java:1092) ~[quasar-core-0.7.10.jar:0.7.10]
	at co.paralleluniverse.fibers.Fiber.exec(Fiber.java:788) ~[quasar-core-0.7.10.jar:0.7.10]
	at co.paralleluniverse.fibers.RunnableFiberTask.doExec(RunnableFiberTask.java:100) ~[quasar-core-0.7.10.jar:0.7.10]
	at co.paralleluniverse.fibers.RunnableFiberTask.run(RunnableFiberTask.java:91) ~[quasar-core-0.7.10.jar:0.7.10]
	at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511) ~[?:1.8.0_202]
	at java.util.concurrent.FutureTask.run(FutureTask.java:266) ~[?:1.8.0_202]
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.access$201(ScheduledThreadPoolExecutor.java:180) ~[?:1.8.0_202]
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.run(ScheduledThreadPoolExecutor.java:293) ~[?:1.8.0_202]
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149) ~[?:1.8.0_202]
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624) ~[?:1.8.0_202]
	at net.corda.node.utilities.AffinityExecutor$ServiceAffinityExecutor$1$thread$1.run(AffinityExecutor.kt:63) ~[corda-node-4.9.jar:?]
[INFO ] 2023-01-31T07:08:34,154Z [Mock network] statemachine.StaffedFlowHospital. - Flow error allowed to propagate {fiber-id=10000029, flow-id=cae64fda-d94b-4030-8562-3cb8f97a87f1, invocation_id=e0c93ab2-f782-484f-a5df-68a019267e50, invocation_timestamp=2023-01-31T07:08:33.651Z, origin=O=Mock Company 1, L=London, C=GB, session_id=e0c93ab2-f782-484f-a5df-68a019267e50, session_timestamp=2023-01-31T07:08:33.651Z, thread-id=854, tx_id=0DFF1D65C786D2F8443A0291C9DD252856A4D061214F27B9FC98D7C999E3139E}
net.corda.core.flows.UnexpectedFlowEndException: Counter-flow errored
	at Received unexpected counter-flow exception from peer O=Mock Company 1, L=London, C=GB.() ~[?:?]
	at net.corda.node.services.statemachine.FlowStateMachineImpl.fillInLocalStackTrace(FlowStateMachineImpl.kt:244) ~[corda-node-4.9.jar:?]
	at net.corda.node.services.statemachine.FlowStateMachineImpl.processEventsUntilFlowIsResumed(FlowStateMachineImpl.kt:225) ~[corda-node-4.9.jar:?]
	at net.corda.node.services.statemachine.FlowStateMachineImpl.suspend(FlowStateMachineImpl.kt:577) ~[corda-node-4.9.jar:?]
	at net.corda.node.services.statemachine.FlowSessionImpl.receive(FlowSessionImpl.kt:67) ~[corda-node-4.9.jar:?]
	at net.corda.node.services.statemachine.FlowSessionImpl.receive(FlowSessionImpl.kt:71) ~[corda-node-4.9.jar:?]
	at net.corda.core.flows.ReceiveTransactionFlow.call(ReceiveTransactionFlow.kt:103) ~[corda-core-4.9.jar:?]
	at net.corda.core.flows.ReceiveTransactionFlow.call(ReceiveTransactionFlow.kt:31) ~[corda-core-4.9.jar:?]
	at net.corda.node.services.statemachine.FlowStateMachineImpl.subFlow(FlowStateMachineImpl.kt:420) ~[corda-node-4.9.jar:?]
	at net.corda.core.flows.FlowLogic.subFlow(FlowLogic.kt:409) ~[corda-core-4.9.jar:?]
	at net.corda.core.flows.ReceiveFinalityFlow.call(FinalityFlow.kt:285) ~[corda-core-4.9.jar:?]
	at net.corda.core.flows.ReceiveFinalityFlow.call(FinalityFlow.kt:280) ~[corda-core-4.9.jar:?]
	at net.corda.node.services.statemachine.FlowStateMachineImpl.subFlow(FlowStateMachineImpl.kt:420) ~[corda-node-4.9.jar:?]
	at net.corda.core.flows.FlowLogic.subFlow(FlowLogic.kt:409) ~[corda-core-4.9.jar:?]
	at net.corda.samples.obligation.flows.IOUSettleFlowResponder.call(IOUSettleFlow.kt:139) ~[main/:?]
	at net.corda.samples.obligation.flows.IOUSettleFlowResponder.call(IOUSettleFlow.kt:126) ~[main/:?]
	at net.corda.node.services.statemachine.FlowStateMachineImpl.run(FlowStateMachineImpl.kt:349) ~[corda-node-4.9.jar:?]
	at net.corda.node.services.statemachine.FlowStateMachineImpl.run(FlowStateMachineImpl.kt:71) ~[corda-node-4.9.jar:?]
	at co.paralleluniverse.fibers.Fiber.run1(Fiber.java:1092) ~[quasar-core-0.7.10.jar:0.7.10]
	at co.paralleluniverse.fibers.Fiber.exec(Fiber.java:788) ~[quasar-core-0.7.10.jar:0.7.10]
	at co.paralleluniverse.fibers.RunnableFiberTask.doExec(RunnableFiberTask.java:100) ~[quasar-core-0.7.10.jar:0.7.10]
	at co.paralleluniverse.fibers.RunnableFiberTask.run(RunnableFiberTask.java:91) ~[quasar-core-0.7.10.jar:0.7.10]
	at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511) ~[?:1.8.0_202]
	at java.util.concurrent.FutureTask.run(FutureTask.java:266) ~[?:1.8.0_202]
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.access$201(ScheduledThreadPoolExecutor.java:180) ~[?:1.8.0_202]
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.run(ScheduledThreadPoolExecutor.java:293) ~[?:1.8.0_202]
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149) ~[?:1.8.0_202]
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624) ~[?:1.8.0_202]
	at net.corda.node.utilities.AffinityExecutor$ServiceAffinityExecutor$1$thread$1.run(AffinityExecutor.kt:63) ~[corda-node-4.9.jar:?]
[WARN ] 2023-01-31T07:08:34,171Z [Mock network] interceptors.DumpHistoryOnErrorInterceptor. - Flow [cae64fda-d94b-4030-8562-3cb8f97a87f1] errored, dumping all transitions:

 --- Transition of flow [cae64fda-d94b-4030-8562-3cb8f97a87f1] ---
  Timestamp: 2023-01-31T07:08:33.655Z
  Event: DoRemainingWork
  Actions: 
    CreateTransaction
    PersistCheckpoint(id=[cae64fda-d94b-4030-8562-3cb8f97a87f1], checkpoint=Checkpoint(checkpointState=CheckpointState(invocationContext=InvocationContext(origin=Peer(party=O=Mock Company 1, L=London, C=GB), trace=Trace(invocationId=e0c93ab2-f782-484f-a5df-68a019267e50, timestamp: 2023-01-31T07:08:33.651Z, entityType: Invocation, sessionId=e0c93ab2-f782-484f-a5df-68a019267e50, timestamp: 2023-01-31T07:08:33.651Z, entityType: Session), actor=null, externalTrace=null, impersonatedActor=null, arguments=[], clientId=null), ourIdentity=O=Mock Company 3, L=London, C=GB, sessions={}, sessionsToBeClosed=[], subFlowStack=[Inlined(flowClass=class net.corda.samples.obligation.flows.IOUSettleFlowResponder, subFlowVersion=CorDappFlow(platformVersion=11, corDappName=workflows-1.0, corDappHash=C516E48A6E6E70A0AB3D8BD39F2350C2FEFECFE936F017EBB2142877462D44D3), isEnabledTimedFlow=false)], numberOfSuspends=0, numberOfCommits=1), flowState=Unstarted(flowStart=Initiated, frozenFlowLogic=196544859C8E8A8816B1C1A74BE7AE10B7C9A8C0020508321BAC2E5D19B67395), errorState=Clean, result=null, status=RUNNABLE, progressStep=null, flowIoRequest=null, compatible=true), isCheckpointUpdate=false)
    PersistDeduplicationFacts(deduplicationHandlers=[net.corda.testing.node.internal.MockNodeMessagingService$InMemoryDeduplicationHandler@61a057a9])
    CommitTransaction
    AcknowledgeMessages(deduplicationHandlers=[net.corda.testing.node.internal.MockNodeMessagingService$InMemoryDeduplicationHandler@61a057a9])
    SignalFlowHasStarted(flowId=[cae64fda-d94b-4030-8562-3cb8f97a87f1])
    SendExisting(peerParty=O=Mock Company 1, L=London, C=GB, message=ExistingSessionMessage(recipientSessionId=SessionId(toLong=-5366150003449329455), payload=ConfirmSessionMessage(initiatedSessionId=SessionId(toLong=-8071260149716765667), initiatedFlowInfo=FlowInfo(flowVersion=1, appName=<unknown>))), deduplicationId=SenderDeduplicationId(deduplicationId=DeduplicationId(toString=N-D--5366150003449329455--6169107910265396549-0-0), senderUUID=1409862b-8d98-4245-b5a4-db9f3ad49a64))
    CreateTransaction
  Continuation: Resume(result=null)
  Diff between previous and next state:
pendingDeduplicationHandlers: 
    [net.corda.testing.node.internal.MockNodeMessagingService$InMemoryDeduplicationHandler@61a057a9]
    []
checkpoint.checkpointState.sessions.SessionId(toLong=-8071260149716765667): 
    null
    Initiated(peerParty=O=Mock Company 1, L=London, C=GB, peerFlowInfo=FlowInfo(flowVersion=1, appName=<unknown>), receivedMessages=[DataSessionMessage(payload=class net.corda.core.serialization.SerializedBytes)], otherSideErrored=false, peerSinkSessionId=SessionId(toLong=-5366150003449329455), deduplicationSeed=D--5366150003449329455--6169107910265396549)
isAnyCheckpointPersisted: 
    false
    true
isFlowResumed: 
    false
    true


 --- Transition of flow [cae64fda-d94b-4030-8562-3cb8f97a87f1] ---
  Timestamp: 2023-01-31T07:08:33.657Z
  Event: EnterSubFlow(subFlowClass=class net.corda.samples.obligation.flows.IOUSettleFlowResponder$call$signedTransactionFlow$1, subFlowVersion=CoreFlow(platformVersion=11), isEnabledTimedFlow=false)
  Actions: 
    
  Continuation: ProcessEvents
  Diff between previous and next state:
checkpoint.checkpointState.subFlowStack: 
    [Inlined(flowClass=class net.corda.samples.obligation.flows.IOUSettleFlowResponder, subFlowVersion=CorDappFlow(platformVersion=11, corDappName=workflows-1.0, corDappHash=C516E48A6E6E70A0AB3D8BD39F2350C2FEFECFE936F017EBB2142877462D44D3), isEnabledTimedFlow=false)]
    [Inlined(flowClass=class net.corda.samples.obligation.flows.IOUSettleFlowResponder, subFlowVersion=CorDappFlow(platformVersion=11, corDappName=workflows-1.0, corDappHash=C516E48A6E6E70A0AB3D8BD39F2350C2FEFECFE936F017EBB2142877462D44D3), isEnabledTimedFlow=false), Inlined(flowClass=class net.corda.samples.obligation.flows.IOUSettleFlowResponder$call$signedTransactionFlow$1, subFlowVersion=CoreFlow(platformVersion=11), isEnabledTimedFlow=false)]
checkpoint.timestamp: 
    2023-01-31T07:08:33.652Z
    2023-01-31T07:08:33.657Z


 --- Transition of flow [cae64fda-d94b-4030-8562-3cb8f97a87f1] ---
  Timestamp: 2023-01-31T07:08:33.657Z
  Event: EnterSubFlow(subFlowClass=class net.corda.core.flows.ReceiveTransactionFlow, subFlowVersion=CoreFlow(platformVersion=11), isEnabledTimedFlow=false)
  Actions: 
    
  Continuation: ProcessEvents
  Diff between previous and next state:
checkpoint.checkpointState.subFlowStack: 
    [Inlined(flowClass=class net.corda.samples.obligation.flows.IOUSettleFlowResponder, subFlowVersion=CorDappFlow(platformVersion=11, corDappName=workflows-1.0, corDappHash=C516E48A6E6E70A0AB3D8BD39F2350C2FEFECFE936F017EBB2142877462D44D3), isEnabledTimedFlow=false), Inlined(flowClass=class net.corda.samples.obligation.flows.IOUSettleFlowResponder$call$signedTransactionFlow$1, subFlowVersion=CoreFlow(platformVersion=11), isEnabledTimedFlow=false)]
    [Inlined(flowClass=class net.corda.samples.obligation.flows.IOUSettleFlowResponder, subFlowVersion=CorDappFlow(platformVersion=11, corDappName=workflows-1.0, corDappHash=C516E48A6E6E70A0AB3D8BD39F2350C2FEFECFE936F017EBB2142877462D44D3), isEnabledTimedFlow=false), Inlined(flowClass=class net.corda.samples.obligation.flows.IOUSettleFlowResponder$call$signedTransactionFlow$1, subFlowVersion=CoreFlow(platformVersion=11), isEnabledTimedFlow=false), Inlined(flowClass=class net.corda.core.flows.ReceiveTransactionFlow, subFlowVersion=CoreFlow(platformVersion=11), isEnabledTimedFlow=false)]


 --- Transition of flow [cae64fda-d94b-4030-8562-3cb8f97a87f1] ---
  Timestamp: 2023-01-31T07:08:33.660Z
  Event: Suspend(ioRequest=Receive(sessions=[FlowSessionImpl(destination=O=Mock Company 1, L=London, C=GB, sourceSessionId=SessionId(toLong=-8071260149716765667))]), maySkipCheckpoint=false, fiber=01F97C5854E4136B1BE6310CF3DC3D48344B5CDA08A471B997DFB98CB59CE8A7, currentStep=Starting)
  Actions: 
    PersistCheckpoint(id=[cae64fda-d94b-4030-8562-3cb8f97a87f1], checkpoint=Checkpoint(checkpointState=CheckpointState(invocationContext=InvocationContext(origin=Peer(party=O=Mock Company 1, L=London, C=GB), trace=Trace(invocationId=e0c93ab2-f782-484f-a5df-68a019267e50, timestamp: 2023-01-31T07:08:33.651Z, entityType: Invocation, sessionId=e0c93ab2-f782-484f-a5df-68a019267e50, timestamp: 2023-01-31T07:08:33.651Z, entityType: Session), actor=null, externalTrace=null, impersonatedActor=null, arguments=[], clientId=null), ourIdentity=O=Mock Company 3, L=London, C=GB, sessions={SessionId(toLong=-8071260149716765667)=Initiated(peerParty=O=Mock Company 1, L=London, C=GB, peerFlowInfo=FlowInfo(flowVersion=1, appName=<unknown>), receivedMessages=[DataSessionMessage(payload=class net.corda.core.serialization.SerializedBytes)], otherSideErrored=false, peerSinkSessionId=SessionId(toLong=-5366150003449329455), deduplicationSeed=D--5366150003449329455--6169107910265396549)}, sessionsToBeClosed=[], subFlowStack=[Inlined(flowClass=class net.corda.samples.obligation.flows.IOUSettleFlowResponder, subFlowVersion=CorDappFlow(platformVersion=11, corDappName=workflows-1.0, corDappHash=C516E48A6E6E70A0AB3D8BD39F2350C2FEFECFE936F017EBB2142877462D44D3), isEnabledTimedFlow=false), Inlined(flowClass=class net.corda.samples.obligation.flows.IOUSettleFlowResponder$call$signedTransactionFlow$1, subFlowVersion=CoreFlow(platformVersion=11), isEnabledTimedFlow=false), Inlined(flowClass=class net.corda.core.flows.ReceiveTransactionFlow, subFlowVersion=CoreFlow(platformVersion=11), isEnabledTimedFlow=false)], numberOfSuspends=1, numberOfCommits=2), flowState=Started(flowIORequest=Receive(sessions=[FlowSessionImpl(destination=O=Mock Company 1, L=London, C=GB, sourceSessionId=SessionId(toLong=-8071260149716765667))]), frozenFiber=01F97C5854E4136B1BE6310CF3DC3D48344B5CDA08A471B997DFB98CB59CE8A7), errorState=Clean, result=null, status=RUNNABLE, progressStep=Starting, flowIoRequest=Receive, compatible=true), isCheckpointUpdate=true)
    PersistDeduplicationFacts(deduplicationHandlers=[])
    CommitTransaction
    AcknowledgeMessages(deduplicationHandlers=[])
    ScheduleEvent(event=DoRemainingWork)
  Continuation: ProcessEvents
  Diff between previous and next state:
checkpoint.progressStep: 
    null
    Starting
checkpoint.flowState: 
    Unstarted(flowStart=Initiated, frozenFlowLogic=196544859C8E8A8816B1C1A74BE7AE10B7C9A8C0020508321BAC2E5D19B67395)
    Started(flowIORequest=Receive(sessions=[FlowSessionImpl(destination=O=Mock Company 1, L=London, C=GB, sourceSessionId=SessionId(toLong=-8071260149716765667))]), frozenFiber=01F97C5854E4136B1BE6310CF3DC3D48344B5CDA08A471B997DFB98CB59CE8A7)
checkpoint.flowIoRequest: 
    null
    Receive
checkpoint.checkpointState.numberOfSuspends: 
    0
    1
checkpoint.checkpointState.numberOfCommits: 
    1
    2
checkpoint.timestamp: 
    2023-01-31T07:08:33.657Z
    2023-01-31T07:08:33.659Z
isFlowResumed: 
    true
    false
numberOfCommits: 
    0
    2


 --- Transition of flow [cae64fda-d94b-4030-8562-3cb8f97a87f1] ---
  Timestamp: 2023-01-31T07:08:33.660Z
  Event: DoRemainingWork
  Actions: 
    CreateTransaction
  Continuation: Resume(result=class java.util.LinkedHashMap)
  Diff between previous and next state:
checkpoint.checkpointState.sessions.SessionId(toLong=-8071260149716765667).receivedMessages.isEmpty: 
    false
    true
checkpoint.timestamp: 
    2023-01-31T07:08:33.659Z
    2023-01-31T07:08:33.660Z
isFlowResumed: 
    false
    true


 --- Transition of flow [cae64fda-d94b-4030-8562-3cb8f97a87f1] ---
  Timestamp: 2023-01-31T07:08:33.662Z
  Event: EnterSubFlow(subFlowClass=class net.corda.core.internal.ResolveTransactionsFlow, subFlowVersion=CoreFlow(platformVersion=11), isEnabledTimedFlow=false)
  Actions: 
    
  Continuation: ProcessEvents
  Diff between previous and next state:
checkpoint.checkpointState.subFlowStack: 
    [Inlined(flowClass=class net.corda.samples.obligation.flows.IOUSettleFlowResponder, subFlowVersion=CorDappFlow(platformVersion=11, corDappName=workflows-1.0, corDappHash=C516E48A6E6E70A0AB3D8BD39F2350C2FEFECFE936F017EBB2142877462D44D3), isEnabledTimedFlow=false), Inlined(flowClass=class net.corda.samples.obligation.flows.IOUSettleFlowResponder$call$signedTransactionFlow$1, subFlowVersion=CoreFlow(platformVersion=11), isEnabledTimedFlow=false), Inlined(flowClass=class net.corda.core.flows.ReceiveTransactionFlow, subFlowVersion=CoreFlow(platformVersion=11), isEnabledTimedFlow=false)]
    [Inlined(flowClass=class net.corda.samples.obligation.flows.IOUSettleFlowResponder, subFlowVersion=CorDappFlow(platformVersion=11, corDappName=workflows-1.0, corDappHash=C516E48A6E6E70A0AB3D8BD39F2350C2FEFECFE936F017EBB2142877462D44D3), isEnabledTimedFlow=false), Inlined(flowClass=class net.corda.samples.obligation.flows.IOUSettleFlowResponder$call$signedTransactionFlow$1, subFlowVersion=CoreFlow(platformVersion=11), isEnabledTimedFlow=false), Inlined(flowClass=class net.corda.core.flows.ReceiveTransactionFlow, subFlowVersion=CoreFlow(platformVersion=11), isEnabledTimedFlow=false), Inlined(flowClass=class net.corda.core.internal.ResolveTransactionsFlow, subFlowVersion=CoreFlow(platformVersion=11), isEnabledTimedFlow=false)]
checkpoint.timestamp: 
    2023-01-31T07:08:33.660Z
    2023-01-31T07:08:33.662Z


 --- Transition of flow [cae64fda-d94b-4030-8562-3cb8f97a87f1] ---
  Timestamp: 2023-01-31T07:08:33.662Z
  Event: EnterSubFlow(subFlowClass=class net.corda.core.internal.FetchAttachmentsFlow, subFlowVersion=CoreFlow(platformVersion=11), isEnabledTimedFlow=false)
  Actions: 
    
  Continuation: ProcessEvents
  Diff between previous and next state:
checkpoint.checkpointState.subFlowStack: 
    [Inlined(flowClass=class net.corda.samples.obligation.flows.IOUSettleFlowResponder, subFlowVersion=CorDappFlow(platformVersion=11, corDappName=workflows-1.0, corDappHash=C516E48A6E6E70A0AB3D8BD39F2350C2FEFECFE936F017EBB2142877462D44D3), isEnabledTimedFlow=false), Inlined(flowClass=class net.corda.samples.obligation.flows.IOUSettleFlowResponder$call$signedTransactionFlow$1, subFlowVersion=CoreFlow(platformVersion=11), isEnabledTimedFlow=false), Inlined(flowClass=class net.corda.core.flows.ReceiveTransactionFlow, subFlowVersion=CoreFlow(platformVersion=11), isEnabledTimedFlow=false), Inlined(flowClass=class net.corda.core.internal.ResolveTransactionsFlow, subFlowVersion=CoreFlow(platformVersion=11), isEnabledTimedFlow=false)]
    [Inlined(flowClass=class net.corda.samples.obligation.flows.IOUSettleFlowResponder, subFlowVersion=CorDappFlow(platformVersion=11, corDappName=workflows-1.0, corDappHash=C516E48A6E6E70A0AB3D8BD39F2350C2FEFECFE936F017EBB2142877462D44D3), isEnabledTimedFlow=false), Inlined(flowClass=class net.corda.samples.obligation.flows.IOUSettleFlowResponder$call$signedTransactionFlow$1, subFlowVersion=CoreFlow(platformVersion=11), isEnabledTimedFlow=false), Inlined(flowClass=class net.corda.core.flows.ReceiveTransactionFlow, subFlowVersion=CoreFlow(platformVersion=11), isEnabledTimedFlow=false), Inlined(flowClass=class net.corda.core.internal.ResolveTransactionsFlow, subFlowVersion=CoreFlow(platformVersion=11), isEnabledTimedFlow=false), Inlined(flowClass=class net.corda.core.internal.FetchAttachmentsFlow, subFlowVersion=CoreFlow(platformVersion=11), isEnabledTimedFlow=false)]


 --- Transition of flow [cae64fda-d94b-4030-8562-3cb8f97a87f1] ---
  Timestamp: 2023-01-31T07:08:33.664Z
  Event: LeaveSubFlow
  Actions: 
    
  Continuation: ProcessEvents
  Diff between previous and next state:
checkpoint.checkpointState.subFlowStack: 
    [Inlined(flowClass=class net.corda.samples.obligation.flows.IOUSettleFlowResponder, subFlowVersion=CorDappFlow(platformVersion=11, corDappName=workflows-1.0, corDappHash=C516E48A6E6E70A0AB3D8BD39F2350C2FEFECFE936F017EBB2142877462D44D3), isEnabledTimedFlow=false), Inlined(flowClass=class net.corda.samples.obligation.flows.IOUSettleFlowResponder$call$signedTransactionFlow$1, subFlowVersion=CoreFlow(platformVersion=11), isEnabledTimedFlow=false), Inlined(flowClass=class net.corda.core.flows.ReceiveTransactionFlow, subFlowVersion=CoreFlow(platformVersion=11), isEnabledTimedFlow=false), Inlined(flowClass=class net.corda.core.internal.ResolveTransactionsFlow, subFlowVersion=CoreFlow(platformVersion=11), isEnabledTimedFlow=false), Inlined(flowClass=class net.corda.core.internal.FetchAttachmentsFlow, subFlowVersion=CoreFlow(platformVersion=11), isEnabledTimedFlow=false)]
    [Inlined(flowClass=class net.corda.samples.obligation.flows.IOUSettleFlowResponder, subFlowVersion=CorDappFlow(platformVersion=11, corDappName=workflows-1.0, corDappHash=C516E48A6E6E70A0AB3D8BD39F2350C2FEFECFE936F017EBB2142877462D44D3), isEnabledTimedFlow=false), Inlined(flowClass=class net.corda.samples.obligation.flows.IOUSettleFlowResponder$call$signedTransactionFlow$1, subFlowVersion=CoreFlow(platformVersion=11), isEnabledTimedFlow=false), Inlined(flowClass=class net.corda.core.flows.ReceiveTransactionFlow, subFlowVersion=CoreFlow(platformVersion=11), isEnabledTimedFlow=false), Inlined(flowClass=class net.corda.core.internal.ResolveTransactionsFlow, subFlowVersion=CoreFlow(platformVersion=11), isEnabledTimedFlow=false)]
checkpoint.timestamp: 
    2023-01-31T07:08:33.662Z
    2023-01-31T07:08:33.664Z


 --- Transition of flow [cae64fda-d94b-4030-8562-3cb8f97a87f1] ---
  Timestamp: 2023-01-31T07:08:33.664Z
  Event: EnterSubFlow(subFlowClass=class net.corda.core.internal.FetchNetworkParametersFlow, subFlowVersion=CoreFlow(platformVersion=11), isEnabledTimedFlow=false)
  Actions: 
    
  Continuation: ProcessEvents
  Diff between previous and next state:
checkpoint.checkpointState.subFlowStack: 
    [Inlined(flowClass=class net.corda.samples.obligation.flows.IOUSettleFlowResponder, subFlowVersion=CorDappFlow(platformVersion=11, corDappName=workflows-1.0, corDappHash=C516E48A6E6E70A0AB3D8BD39F2350C2FEFECFE936F017EBB2142877462D44D3), isEnabledTimedFlow=false), Inlined(flowClass=class net.corda.samples.obligation.flows.IOUSettleFlowResponder$call$signedTransactionFlow$1, subFlowVersion=CoreFlow(platformVersion=11), isEnabledTimedFlow=false), Inlined(flowClass=class net.corda.core.flows.ReceiveTransactionFlow, subFlowVersion=CoreFlow(platformVersion=11), isEnabledTimedFlow=false), Inlined(flowClass=class net.corda.core.internal.ResolveTransactionsFlow, subFlowVersion=CoreFlow(platformVersion=11), isEnabledTimedFlow=false)]
    [Inlined(flowClass=class net.corda.samples.obligation.flows.IOUSettleFlowResponder, subFlowVersion=CorDappFlow(platformVersion=11, corDappName=workflows-1.0, corDappHash=C516E48A6E6E70A0AB3D8BD39F2350C2FEFECFE936F017EBB2142877462D44D3), isEnabledTimedFlow=false), Inlined(flowClass=class net.corda.samples.obligation.flows.IOUSettleFlowResponder$call$signedTransactionFlow$1, subFlowVersion=CoreFlow(platformVersion=11), isEnabledTimedFlow=false), Inlined(flowClass=class net.corda.core.flows.ReceiveTransactionFlow, subFlowVersion=CoreFlow(platformVersion=11), isEnabledTimedFlow=false), Inlined(flowClass=class net.corda.core.internal.ResolveTransactionsFlow, subFlowVersion=CoreFlow(platformVersion=11), isEnabledTimedFlow=false), Inlined(flowClass=class net.corda.core.internal.FetchNetworkParametersFlow, subFlowVersion=CoreFlow(platformVersion=11), isEnabledTimedFlow=false)]


 --- Transition of flow [cae64fda-d94b-4030-8562-3cb8f97a87f1] ---
  Timestamp: 2023-01-31T07:08:33.664Z
  Event: LeaveSubFlow
  Actions: 
    
  Continuation: ProcessEvents
  Diff between previous and next state:
checkpoint.checkpointState.subFlowStack: 
    [Inlined(flowClass=class net.corda.samples.obligation.flows.IOUSettleFlowResponder, subFlowVersion=CorDappFlow(platformVersion=11, corDappName=workflows-1.0, corDappHash=C516E48A6E6E70A0AB3D8BD39F2350C2FEFECFE936F017EBB2142877462D44D3), isEnabledTimedFlow=false), Inlined(flowClass=class net.corda.samples.obligation.flows.IOUSettleFlowResponder$call$signedTransactionFlow$1, subFlowVersion=CoreFlow(platformVersion=11), isEnabledTimedFlow=false), Inlined(flowClass=class net.corda.core.flows.ReceiveTransactionFlow, subFlowVersion=CoreFlow(platformVersion=11), isEnabledTimedFlow=false), Inlined(flowClass=class net.corda.core.internal.ResolveTransactionsFlow, subFlowVersion=CoreFlow(platformVersion=11), isEnabledTimedFlow=false), Inlined(flowClass=class net.corda.core.internal.FetchNetworkParametersFlow, subFlowVersion=CoreFlow(platformVersion=11), isEnabledTimedFlow=false)]
    [Inlined(flowClass=class net.corda.samples.obligation.flows.IOUSettleFlowResponder, subFlowVersion=CorDappFlow(platformVersion=11, corDappName=workflows-1.0, corDappHash=C516E48A6E6E70A0AB3D8BD39F2350C2FEFECFE936F017EBB2142877462D44D3), isEnabledTimedFlow=false), Inlined(flowClass=class net.corda.samples.obligation.flows.IOUSettleFlowResponder$call$signedTransactionFlow$1, subFlowVersion=CoreFlow(platformVersion=11), isEnabledTimedFlow=false), Inlined(flowClass=class net.corda.core.flows.ReceiveTransactionFlow, subFlowVersion=CoreFlow(platformVersion=11), isEnabledTimedFlow=false), Inlined(flowClass=class net.corda.core.internal.ResolveTransactionsFlow, subFlowVersion=CoreFlow(platformVersion=11), isEnabledTimedFlow=false)]


 --- Transition of flow [cae64fda-d94b-4030-8562-3cb8f97a87f1] ---
  Timestamp: 2023-01-31T07:08:33.664Z
  Event: EnterSubFlow(subFlowClass=class net.corda.core.internal.FetchTransactionsFlow, subFlowVersion=CoreFlow(platformVersion=11), isEnabledTimedFlow=false)
  Actions: 
    
  Continuation: ProcessEvents
  Diff between previous and next state:
checkpoint.checkpointState.subFlowStack: 
    [Inlined(flowClass=class net.corda.samples.obligation.flows.IOUSettleFlowResponder, subFlowVersion=CorDappFlow(platformVersion=11, corDappName=workflows-1.0, corDappHash=C516E48A6E6E70A0AB3D8BD39F2350C2FEFECFE936F017EBB2142877462D44D3), isEnabledTimedFlow=false), Inlined(flowClass=class net.corda.samples.obligation.flows.IOUSettleFlowResponder$call$signedTransactionFlow$1, subFlowVersion=CoreFlow(platformVersion=11), isEnabledTimedFlow=false), Inlined(flowClass=class net.corda.core.flows.ReceiveTransactionFlow, subFlowVersion=CoreFlow(platformVersion=11), isEnabledTimedFlow=false), Inlined(flowClass=class net.corda.core.internal.ResolveTransactionsFlow, subFlowVersion=CoreFlow(platformVersion=11), isEnabledTimedFlow=false)]
    [Inlined(flowClass=class net.corda.samples.obligation.flows.IOUSettleFlowResponder, subFlowVersion=CorDappFlow(platformVersion=11, corDappName=workflows-1.0, corDappHash=C516E48A6E6E70A0AB3D8BD39F2350C2FEFECFE936F017EBB2142877462D44D3), isEnabledTimedFlow=false), Inlined(flowClass=class net.corda.samples.obligation.flows.IOUSettleFlowResponder$call$signedTransactionFlow$1, subFlowVersion=CoreFlow(platformVersion=11), isEnabledTimedFlow=false), Inlined(flowClass=class net.corda.core.flows.ReceiveTransactionFlow, subFlowVersion=CoreFlow(platformVersion=11), isEnabledTimedFlow=false), Inlined(flowClass=class net.corda.core.internal.ResolveTransactionsFlow, subFlowVersion=CoreFlow(platformVersion=11), isEnabledTimedFlow=false), Inlined(flowClass=class net.corda.core.internal.FetchTransactionsFlow, subFlowVersion=CoreFlow(platformVersion=11), isEnabledTimedFlow=false)]


 --- Transition of flow [cae64fda-d94b-4030-8562-3cb8f97a87f1] ---
  Timestamp: 2023-01-31T07:08:33.669Z
  Event: Suspend(ioRequest=SendAndReceive({FlowSessionImpl(destination=O=Mock Company 1, L=London, C=GB, sourceSessionId=SessionId(toLong=-8071260149716765667))=FlowSessionImpl(destination=O=Mock Company 1, L=London, C=GB, sourceSessionId=SessionId(toLong=-8071260149716765667))=A25FEB112430F2052BD65A7DCDB081BAE787741CA98BB6B41269D4F5F4AEC37E}, shouldRetrySend=false), maySkipCheckpoint=false, fiber=8A72FFA5C7839E8569D5002EF8875C9710A818E43DD50AE6C4A7105CACAD9DB2, currentStep=Starting)
  Actions: 
    PersistCheckpoint(id=[cae64fda-d94b-4030-8562-3cb8f97a87f1], checkpoint=Checkpoint(checkpointState=CheckpointState(invocationContext=InvocationContext(origin=Peer(party=O=Mock Company 1, L=London, C=GB), trace=Trace(invocationId=e0c93ab2-f782-484f-a5df-68a019267e50, timestamp: 2023-01-31T07:08:33.651Z, entityType: Invocation, sessionId=e0c93ab2-f782-484f-a5df-68a019267e50, timestamp: 2023-01-31T07:08:33.651Z, entityType: Session), actor=null, externalTrace=null, impersonatedActor=null, arguments=[], clientId=null), ourIdentity=O=Mock Company 3, L=London, C=GB, sessions={SessionId(toLong=-8071260149716765667)=Initiated(peerParty=O=Mock Company 1, L=London, C=GB, peerFlowInfo=FlowInfo(flowVersion=1, appName=<unknown>), receivedMessages=[], otherSideErrored=false, peerSinkSessionId=SessionId(toLong=-5366150003449329455), deduplicationSeed=D--5366150003449329455--6169107910265396549)}, sessionsToBeClosed=[], subFlowStack=[Inlined(flowClass=class net.corda.samples.obligation.flows.IOUSettleFlowResponder, subFlowVersion=CorDappFlow(platformVersion=11, corDappName=workflows-1.0, corDappHash=C516E48A6E6E70A0AB3D8BD39F2350C2FEFECFE936F017EBB2142877462D44D3), isEnabledTimedFlow=false), Inlined(flowClass=class net.corda.samples.obligation.flows.IOUSettleFlowResponder$call$signedTransactionFlow$1, subFlowVersion=CoreFlow(platformVersion=11), isEnabledTimedFlow=false), Inlined(flowClass=class net.corda.core.flows.ReceiveTransactionFlow, subFlowVersion=CoreFlow(platformVersion=11), isEnabledTimedFlow=false), Inlined(flowClass=class net.corda.core.internal.ResolveTransactionsFlow, subFlowVersion=CoreFlow(platformVersion=11), isEnabledTimedFlow=false), Inlined(flowClass=class net.corda.core.internal.FetchTransactionsFlow, subFlowVersion=CoreFlow(platformVersion=11), isEnabledTimedFlow=false)], numberOfSuspends=2, numberOfCommits=3), flowState=Started(flowIORequest=SendAndReceive({FlowSessionImpl(destination=O=Mock Company 1, L=London, C=GB, sourceSessionId=SessionId(toLong=-8071260149716765667))=FlowSessionImpl(destination=O=Mock Company 1, L=London, C=GB, sourceSessionId=SessionId(toLong=-8071260149716765667))=A25FEB112430F2052BD65A7DCDB081BAE787741CA98BB6B41269D4F5F4AEC37E}, shouldRetrySend=false), frozenFiber=8A72FFA5C7839E8569D5002EF8875C9710A818E43DD50AE6C4A7105CACAD9DB2), errorState=Clean, result=null, status=RUNNABLE, progressStep=Starting, flowIoRequest=SendAndReceive, compatible=true), isCheckpointUpdate=true)
    PersistDeduplicationFacts(deduplicationHandlers=[])
    CommitTransaction
    AcknowledgeMessages(deduplicationHandlers=[])
    ScheduleEvent(event=DoRemainingWork)
  Continuation: ProcessEvents
  Diff between previous and next state:
checkpoint.flowState.flowIORequest: 
    Receive(sessions=[FlowSessionImpl(destination=O=Mock Company 1, L=London, C=GB, sourceSessionId=SessionId(toLong=-8071260149716765667))])
    SendAndReceive({FlowSessionImpl(destination=O=Mock Company 1, L=London, C=GB, sourceSessionId=SessionId(toLong=-8071260149716765667))=FlowSessionImpl(destination=O=Mock Company 1, L=London, C=GB, sourceSessionId=SessionId(toLong=-8071260149716765667))=A25FEB112430F2052BD65A7DCDB081BAE787741CA98BB6B41269D4F5F4AEC37E}, shouldRetrySend=false)
checkpoint.flowState.frozenFiber.hash: 
    01F97C5854E4136B1BE6310CF3DC3D48344B5CDA08A471B997DFB98CB59CE8A7
    8A72FFA5C7839E8569D5002EF8875C9710A818E43DD50AE6C4A7105CACAD9DB2
checkpoint.flowIoRequest: 
    Receive
    SendAndReceive
checkpoint.checkpointState.numberOfSuspends: 
    1
    2
checkpoint.checkpointState.numberOfCommits: 
    2
    3
checkpoint.timestamp: 
    2023-01-31T07:08:33.664Z
    2023-01-31T07:08:33.667Z
isFlowResumed: 
    true
    false
numberOfCommits: 
    2
    3


 --- Transition of flow [cae64fda-d94b-4030-8562-3cb8f97a87f1] ---
  Timestamp: 2023-01-31T07:08:33.670Z
  Event: DoRemainingWork
  Actions: 
    SendMultiple(sendInitial=[], sendExisting=[SendExisting(peerParty=O=Mock Company 1, L=London, C=GB, message=ExistingSessionMessage(recipientSessionId=SessionId(toLong=-5366150003449329455), payload=DataSessionMessage(payload=class net.corda.core.serialization.SerializedBytes)), deduplicationId=SenderDeduplicationId(deduplicationId=DeduplicationId(toString=N-D--5366150003449329455--6169107910265396549-2-0), senderUUID=1409862b-8d98-4245-b5a4-db9f3ad49a64))])
  Continuation: ProcessEvents
  Diff between previous and next state:
checkpoint.flowState.flowIORequest: 
    SendAndReceive({FlowSessionImpl(destination=O=Mock Company 1, L=London, C=GB, sourceSessionId=SessionId(toLong=-8071260149716765667))=FlowSessionImpl(destination=O=Mock Company 1, L=London, C=GB, sourceSessionId=SessionId(toLong=-8071260149716765667))=A25FEB112430F2052BD65A7DCDB081BAE787741CA98BB6B41269D4F5F4AEC37E}, shouldRetrySend=false)
    Receive(sessions=[FlowSessionImpl(destination=O=Mock Company 1, L=London, C=GB, sourceSessionId=SessionId(toLong=-8071260149716765667))])
checkpoint.timestamp: 
    2023-01-31T07:08:33.667Z
    2023-01-31T07:08:33.669Z


 --- Transition of flow [cae64fda-d94b-4030-8562-3cb8f97a87f1] ---
  Timestamp: 2023-01-31T07:08:33.680Z
  Event: DeliverSessionMessage(sessionMessage=ExistingSessionMessage(recipientSessionId=SessionId(toLong=-8071260149716765667), payload=DataSessionMessage(payload=class net.corda.core.serialization.SerializedBytes)), deduplicationHandler=net.corda.testing.node.internal.MockNodeMessagingService$InMemoryDeduplicationHandler@567e2425, sender=O=Mock Company 1, L=London, C=GB)
  Actions: 
    ScheduleEvent(event=DoRemainingWork)
  Continuation: ProcessEvents
  Diff between previous and next state:
pendingDeduplicationHandlers: 
    []
    [net.corda.testing.node.internal.MockNodeMessagingService$InMemoryDeduplicationHandler@567e2425]
checkpoint.checkpointState.sessions.SessionId(toLong=-8071260149716765667).receivedMessages.isEmpty: 
    true
    false
checkpoint.timestamp: 
    2023-01-31T07:08:33.669Z
    2023-01-31T07:08:33.680Z


 --- Transition of flow [cae64fda-d94b-4030-8562-3cb8f97a87f1] ---
  Timestamp: 2023-01-31T07:08:33.680Z
  Event: DoRemainingWork
  Actions: 
    CreateTransaction
  Continuation: Resume(result=class java.util.LinkedHashMap)
  Diff between previous and next state:
checkpoint.checkpointState.sessions.SessionId(toLong=-8071260149716765667).receivedMessages.isEmpty: 
    false
    true
isFlowResumed: 
    false
    true


 --- Transition of flow [cae64fda-d94b-4030-8562-3cb8f97a87f1] ---
  Timestamp: 2023-01-31T07:08:33.681Z
  Event: LeaveSubFlow
  Actions: 
    
  Continuation: ProcessEvents
  Diff between previous and next state:
checkpoint.checkpointState.subFlowStack: 
    [Inlined(flowClass=class net.corda.samples.obligation.flows.IOUSettleFlowResponder, subFlowVersion=CorDappFlow(platformVersion=11, corDappName=workflows-1.0, corDappHash=C516E48A6E6E70A0AB3D8BD39F2350C2FEFECFE936F017EBB2142877462D44D3), isEnabledTimedFlow=false), Inlined(flowClass=class net.corda.samples.obligation.flows.IOUSettleFlowResponder$call$signedTransactionFlow$1, subFlowVersion=CoreFlow(platformVersion=11), isEnabledTimedFlow=false), Inlined(flowClass=class net.corda.core.flows.ReceiveTransactionFlow, subFlowVersion=CoreFlow(platformVersion=11), isEnabledTimedFlow=false), Inlined(flowClass=class net.corda.core.internal.ResolveTransactionsFlow, subFlowVersion=CoreFlow(platformVersion=11), isEnabledTimedFlow=false), Inlined(flowClass=class net.corda.core.internal.FetchTransactionsFlow, subFlowVersion=CoreFlow(platformVersion=11), isEnabledTimedFlow=false)]
    [Inlined(flowClass=class net.corda.samples.obligation.flows.IOUSettleFlowResponder, subFlowVersion=CorDappFlow(platformVersion=11, corDappName=workflows-1.0, corDappHash=C516E48A6E6E70A0AB3D8BD39F2350C2FEFECFE936F017EBB2142877462D44D3), isEnabledTimedFlow=false), Inlined(flowClass=class net.corda.samples.obligation.flows.IOUSettleFlowResponder$call$signedTransactionFlow$1, subFlowVersion=CoreFlow(platformVersion=11), isEnabledTimedFlow=false), Inlined(flowClass=class net.corda.core.flows.ReceiveTransactionFlow, subFlowVersion=CoreFlow(platformVersion=11), isEnabledTimedFlow=false), Inlined(flowClass=class net.corda.core.internal.ResolveTransactionsFlow, subFlowVersion=CoreFlow(platformVersion=11), isEnabledTimedFlow=false)]
checkpoint.timestamp: 
    2023-01-31T07:08:33.680Z
    2023-01-31T07:08:33.681Z


 --- Transition of flow [cae64fda-d94b-4030-8562-3cb8f97a87f1] ---
  Timestamp: 2023-01-31T07:08:33.683Z
  Event: EnterSubFlow(subFlowClass=class net.corda.core.internal.FetchAttachmentsFlow, subFlowVersion=CoreFlow(platformVersion=11), isEnabledTimedFlow=false)
  Actions: 
    
  Continuation: ProcessEvents
  Diff between previous and next state:
checkpoint.checkpointState.subFlowStack: 
    [Inlined(flowClass=class net.corda.samples.obligation.flows.IOUSettleFlowResponder, subFlowVersion=CorDappFlow(platformVersion=11, corDappName=workflows-1.0, corDappHash=C516E48A6E6E70A0AB3D8BD39F2350C2FEFECFE936F017EBB2142877462D44D3), isEnabledTimedFlow=false), Inlined(flowClass=class net.corda.samples.obligation.flows.IOUSettleFlowResponder$call$signedTransactionFlow$1, subFlowVersion=CoreFlow(platformVersion=11), isEnabledTimedFlow=false), Inlined(flowClass=class net.corda.core.flows.ReceiveTransactionFlow, subFlowVersion=CoreFlow(platformVersion=11), isEnabledTimedFlow=false), Inlined(flowClass=class net.corda.core.internal.ResolveTransactionsFlow, subFlowVersion=CoreFlow(platformVersion=11), isEnabledTimedFlow=false)]
    [Inlined(flowClass=class net.corda.samples.obligation.flows.IOUSettleFlowResponder, subFlowVersion=CorDappFlow(platformVersion=11, corDappName=workflows-1.0, corDappHash=C516E48A6E6E70A0AB3D8BD39F2350C2FEFECFE936F017EBB2142877462D44D3), isEnabledTimedFlow=false), Inlined(flowClass=class net.corda.samples.obligation.flows.IOUSettleFlowResponder$call$signedTransactionFlow$1, subFlowVersion=CoreFlow(platformVersion=11), isEnabledTimedFlow=false), Inlined(flowClass=class net.corda.core.flows.ReceiveTransactionFlow, subFlowVersion=CoreFlow(platformVersion=11), isEnabledTimedFlow=false), Inlined(flowClass=class net.corda.core.internal.ResolveTransactionsFlow, subFlowVersion=CoreFlow(platformVersion=11), isEnabledTimedFlow=false), Inlined(flowClass=class net.corda.core.internal.FetchAttachmentsFlow, subFlowVersion=CoreFlow(platformVersion=11), isEnabledTimedFlow=false)]
checkpoint.timestamp: 
    2023-01-31T07:08:33.681Z
    2023-01-31T07:08:33.683Z


 --- Transition of flow [cae64fda-d94b-4030-8562-3cb8f97a87f1] ---
  Timestamp: 2023-01-31T07:08:33.683Z
  Event: LeaveSubFlow
  Actions: 
    
  Continuation: ProcessEvents
  Diff between previous and next state:
checkpoint.checkpointState.subFlowStack: 
    [Inlined(flowClass=class net.corda.samples.obligation.flows.IOUSettleFlowResponder, subFlowVersion=CorDappFlow(platformVersion=11, corDappName=workflows-1.0, corDappHash=C516E48A6E6E70A0AB3D8BD39F2350C2FEFECFE936F017EBB2142877462D44D3), isEnabledTimedFlow=false), Inlined(flowClass=class net.corda.samples.obligation.flows.IOUSettleFlowResponder$call$signedTransactionFlow$1, subFlowVersion=CoreFlow(platformVersion=11), isEnabledTimedFlow=false), Inlined(flowClass=class net.corda.core.flows.ReceiveTransactionFlow, subFlowVersion=CoreFlow(platformVersion=11), isEnabledTimedFlow=false), Inlined(flowClass=class net.corda.core.internal.ResolveTransactionsFlow, subFlowVersion=CoreFlow(platformVersion=11), isEnabledTimedFlow=false), Inlined(flowClass=class net.corda.core.internal.FetchAttachmentsFlow, subFlowVersion=CoreFlow(platformVersion=11), isEnabledTimedFlow=false)]
    [Inlined(flowClass=class net.corda.samples.obligation.flows.IOUSettleFlowResponder, subFlowVersion=CorDappFlow(platformVersion=11, corDappName=workflows-1.0, corDappHash=C516E48A6E6E70A0AB3D8BD39F2350C2FEFECFE936F017EBB2142877462D44D3), isEnabledTimedFlow=false), Inlined(flowClass=class net.corda.samples.obligation.flows.IOUSettleFlowResponder$call$signedTransactionFlow$1, subFlowVersion=CoreFlow(platformVersion=11), isEnabledTimedFlow=false), Inlined(flowClass=class net.corda.core.flows.ReceiveTransactionFlow, subFlowVersion=CoreFlow(platformVersion=11), isEnabledTimedFlow=false), Inlined(flowClass=class net.corda.core.internal.ResolveTransactionsFlow, subFlowVersion=CoreFlow(platformVersion=11), isEnabledTimedFlow=false)]


 --- Transition of flow [cae64fda-d94b-4030-8562-3cb8f97a87f1] ---
  Timestamp: 2023-01-31T07:08:33.683Z
  Event: EnterSubFlow(subFlowClass=class net.corda.core.internal.FetchNetworkParametersFlow, subFlowVersion=CoreFlow(platformVersion=11), isEnabledTimedFlow=false)
  Actions: 
    
  Continuation: ProcessEvents
  Diff between previous and next state:
checkpoint.checkpointState.subFlowStack: 
    [Inlined(flowClass=class net.corda.samples.obligation.flows.IOUSettleFlowResponder, subFlowVersion=CorDappFlow(platformVersion=11, corDappName=workflows-1.0, corDappHash=C516E48A6E6E70A0AB3D8BD39F2350C2FEFECFE936F017EBB2142877462D44D3), isEnabledTimedFlow=false), Inlined(flowClass=class net.corda.samples.obligation.flows.IOUSettleFlowResponder$call$signedTransactionFlow$1, subFlowVersion=CoreFlow(platformVersion=11), isEnabledTimedFlow=false), Inlined(flowClass=class net.corda.core.flows.ReceiveTransactionFlow, subFlowVersion=CoreFlow(platformVersion=11), isEnabledTimedFlow=false), Inlined(flowClass=class net.corda.core.internal.ResolveTransactionsFlow, subFlowVersion=CoreFlow(platformVersion=11), isEnabledTimedFlow=false)]
    [Inlined(flowClass=class net.corda.samples.obligation.flows.IOUSettleFlowResponder, subFlowVersion=CorDappFlow(platformVersion=11, corDappName=workflows-1.0, corDappHash=C516E48A6E6E70A0AB3D8BD39F2350C2FEFECFE936F017EBB2142877462D44D3), isEnabledTimedFlow=false), Inlined(flowClass=class net.corda.samples.obligation.flows.IOUSettleFlowResponder$call$signedTransactionFlow$1, subFlowVersion=CoreFlow(platformVersion=11), isEnabledTimedFlow=false), Inlined(flowClass=class net.corda.core.flows.ReceiveTransactionFlow, subFlowVersion=CoreFlow(platformVersion=11), isEnabledTimedFlow=false), Inlined(flowClass=class net.corda.core.internal.ResolveTransactionsFlow, subFlowVersion=CoreFlow(platformVersion=11), isEnabledTimedFlow=false), Inlined(flowClass=class net.corda.core.internal.FetchNetworkParametersFlow, subFlowVersion=CoreFlow(platformVersion=11), isEnabledTimedFlow=false)]


 --- Transition of flow [cae64fda-d94b-4030-8562-3cb8f97a87f1] ---
  Timestamp: 2023-01-31T07:08:33.683Z
  Event: LeaveSubFlow
  Actions: 
    
  Continuation: ProcessEvents
  Diff between previous and next state:
checkpoint.checkpointState.subFlowStack: 
    [Inlined(flowClass=class net.corda.samples.obligation.flows.IOUSettleFlowResponder, subFlowVersion=CorDappFlow(platformVersion=11, corDappName=workflows-1.0, corDappHash=C516E48A6E6E70A0AB3D8BD39F2350C2FEFECFE936F017EBB2142877462D44D3), isEnabledTimedFlow=false), Inlined(flowClass=class net.corda.samples.obligation.flows.IOUSettleFlowResponder$call$signedTransactionFlow$1, subFlowVersion=CoreFlow(platformVersion=11), isEnabledTimedFlow=false), Inlined(flowClass=class net.corda.core.flows.ReceiveTransactionFlow, subFlowVersion=CoreFlow(platformVersion=11), isEnabledTimedFlow=false), Inlined(flowClass=class net.corda.core.internal.ResolveTransactionsFlow, subFlowVersion=CoreFlow(platformVersion=11), isEnabledTimedFlow=false), Inlined(flowClass=class net.corda.core.internal.FetchNetworkParametersFlow, subFlowVersion=CoreFlow(platformVersion=11), isEnabledTimedFlow=false)]
    [Inlined(flowClass=class net.corda.samples.obligation.flows.IOUSettleFlowResponder, subFlowVersion=CorDappFlow(platformVersion=11, corDappName=workflows-1.0, corDappHash=C516E48A6E6E70A0AB3D8BD39F2350C2FEFECFE936F017EBB2142877462D44D3), isEnabledTimedFlow=false), Inlined(flowClass=class net.corda.samples.obligation.flows.IOUSettleFlowResponder$call$signedTransactionFlow$1, subFlowVersion=CoreFlow(platformVersion=11), isEnabledTimedFlow=false), Inlined(flowClass=class net.corda.core.flows.ReceiveTransactionFlow, subFlowVersion=CoreFlow(platformVersion=11), isEnabledTimedFlow=false), Inlined(flowClass=class net.corda.core.internal.ResolveTransactionsFlow, subFlowVersion=CoreFlow(platformVersion=11), isEnabledTimedFlow=false)]


 --- Transition of flow [cae64fda-d94b-4030-8562-3cb8f97a87f1] ---
  Timestamp: 2023-01-31T07:08:33.686Z
  Event: Suspend(ioRequest=Sleep(wakeUpAfter=2023-01-31T07:08:33.683Z), maySkipCheckpoint=false, fiber=40C2DBFAC1CEB6FAB4123A0EEFE0551810A647DEA76F7BFAE33AAB58D71A6561, currentStep=Starting)
  Actions: 
    PersistCheckpoint(id=[cae64fda-d94b-4030-8562-3cb8f97a87f1], checkpoint=Checkpoint(checkpointState=CheckpointState(invocationContext=InvocationContext(origin=Peer(party=O=Mock Company 1, L=London, C=GB), trace=Trace(invocationId=e0c93ab2-f782-484f-a5df-68a019267e50, timestamp: 2023-01-31T07:08:33.651Z, entityType: Invocation, sessionId=e0c93ab2-f782-484f-a5df-68a019267e50, timestamp: 2023-01-31T07:08:33.651Z, entityType: Session), actor=null, externalTrace=null, impersonatedActor=null, arguments=[], clientId=null), ourIdentity=O=Mock Company 3, L=London, C=GB, sessions={SessionId(toLong=-8071260149716765667)=Initiated(peerParty=O=Mock Company 1, L=London, C=GB, peerFlowInfo=FlowInfo(flowVersion=1, appName=<unknown>), receivedMessages=[], otherSideErrored=false, peerSinkSessionId=SessionId(toLong=-5366150003449329455), deduplicationSeed=D--5366150003449329455--6169107910265396549)}, sessionsToBeClosed=[], subFlowStack=[Inlined(flowClass=class net.corda.samples.obligation.flows.IOUSettleFlowResponder, subFlowVersion=CorDappFlow(platformVersion=11, corDappName=workflows-1.0, corDappHash=C516E48A6E6E70A0AB3D8BD39F2350C2FEFECFE936F017EBB2142877462D44D3), isEnabledTimedFlow=false), Inlined(flowClass=class net.corda.samples.obligation.flows.IOUSettleFlowResponder$call$signedTransactionFlow$1, subFlowVersion=CoreFlow(platformVersion=11), isEnabledTimedFlow=false), Inlined(flowClass=class net.corda.core.flows.ReceiveTransactionFlow, subFlowVersion=CoreFlow(platformVersion=11), isEnabledTimedFlow=false), Inlined(flowClass=class net.corda.core.internal.ResolveTransactionsFlow, subFlowVersion=CoreFlow(platformVersion=11), isEnabledTimedFlow=false)], numberOfSuspends=3, numberOfCommits=4), flowState=Started(flowIORequest=Sleep(wakeUpAfter=2023-01-31T07:08:33.683Z), frozenFiber=40C2DBFAC1CEB6FAB4123A0EEFE0551810A647DEA76F7BFAE33AAB58D71A6561), errorState=Clean, result=null, status=RUNNABLE, progressStep=Starting, flowIoRequest=Sleep, compatible=true), isCheckpointUpdate=true)
    PersistDeduplicationFacts(deduplicationHandlers=[net.corda.testing.node.internal.MockNodeMessagingService$InMemoryDeduplicationHandler@567e2425])
    CommitTransaction
    AcknowledgeMessages(deduplicationHandlers=[net.corda.testing.node.internal.MockNodeMessagingService$InMemoryDeduplicationHandler@567e2425])
    ScheduleEvent(event=DoRemainingWork)
  Continuation: ProcessEvents
  Diff between previous and next state:
pendingDeduplicationHandlers: 
    [net.corda.testing.node.internal.MockNodeMessagingService$InMemoryDeduplicationHandler@567e2425]
    []
checkpoint.flowState.flowIORequest: 
    Receive(sessions=[FlowSessionImpl(destination=O=Mock Company 1, L=London, C=GB, sourceSessionId=SessionId(toLong=-8071260149716765667))])
    Sleep(wakeUpAfter=2023-01-31T07:08:33.683Z)
checkpoint.flowState.frozenFiber.hash: 
    8A72FFA5C7839E8569D5002EF8875C9710A818E43DD50AE6C4A7105CACAD9DB2
    40C2DBFAC1CEB6FAB4123A0EEFE0551810A647DEA76F7BFAE33AAB58D71A6561
checkpoint.flowIoRequest: 
    SendAndReceive
    Sleep
checkpoint.checkpointState.numberOfSuspends: 
    2
    3
checkpoint.checkpointState.numberOfCommits: 
    3
    4
checkpoint.timestamp: 
    2023-01-31T07:08:33.683Z
    2023-01-31T07:08:33.684Z
isFlowResumed: 
    true
    false
numberOfCommits: 
    3
    4


 --- Transition of flow [cae64fda-d94b-4030-8562-3cb8f97a87f1] ---
  Timestamp: 2023-01-31T07:08:33.686Z
  Event: DoRemainingWork
  Actions: 
    SleepUntil(currentState=StateMachineState(checkpoint=Checkpoint(checkpointState=CheckpointState(invocationContext=InvocationContext(origin=Peer(party=O=Mock Company 1, L=London, C=GB), trace=Trace(invocationId=e0c93ab2-f782-484f-a5df-68a019267e50, timestamp: 2023-01-31T07:08:33.651Z, entityType: Invocation, sessionId=e0c93ab2-f782-484f-a5df-68a019267e50, timestamp: 2023-01-31T07:08:33.651Z, entityType: Session), actor=null, externalTrace=null, impersonatedActor=null, arguments=[], clientId=null), ourIdentity=O=Mock Company 3, L=London, C=GB, sessions={SessionId(toLong=-8071260149716765667)=Initiated(peerParty=O=Mock Company 1, L=London, C=GB, peerFlowInfo=FlowInfo(flowVersion=1, appName=<unknown>), receivedMessages=[], otherSideErrored=false, peerSinkSessionId=SessionId(toLong=-5366150003449329455), deduplicationSeed=D--5366150003449329455--6169107910265396549)}, sessionsToBeClosed=[], subFlowStack=[Inlined(flowClass=class net.corda.samples.obligation.flows.IOUSettleFlowResponder, subFlowVersion=CorDappFlow(platformVersion=11, corDappName=workflows-1.0, corDappHash=C516E48A6E6E70A0AB3D8BD39F2350C2FEFECFE936F017EBB2142877462D44D3), isEnabledTimedFlow=false), Inlined(flowClass=class net.corda.samples.obligation.flows.IOUSettleFlowResponder$call$signedTransactionFlow$1, subFlowVersion=CoreFlow(platformVersion=11), isEnabledTimedFlow=false), Inlined(flowClass=class net.corda.core.flows.ReceiveTransactionFlow, subFlowVersion=CoreFlow(platformVersion=11), isEnabledTimedFlow=false), Inlined(flowClass=class net.corda.core.internal.ResolveTransactionsFlow, subFlowVersion=CoreFlow(platformVersion=11), isEnabledTimedFlow=false)], numberOfSuspends=3, numberOfCommits=4), flowState=Started(flowIORequest=Sleep(wakeUpAfter=2023-01-31T07:08:33.683Z), frozenFiber=40C2DBFAC1CEB6FAB4123A0EEFE0551810A647DEA76F7BFAE33AAB58D71A6561), errorState=Clean, result=null, status=RUNNABLE, progressStep=Starting, flowIoRequest=Sleep, compatible=true), flowLogic=net.corda.samples.obligation.flows.IOUSettleFlowResponder@6f79453b, pendingDeduplicationHandlers=[], isFlowResumed=false, isWaitingForFuture=true, future=java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask@1a1e302a, isAnyCheckpointPersisted=true, isStartIdempotent=false, isRemoved=false, isKilled=false, isDead=false, senderUUID=1409862b-8d98-4245-b5a4-db9f3ad49a64, reloadCheckpointAfterSuspendCount=null, numberOfCommits=4, lock=java.util.concurrent.Semaphore@15bb32e2[Permits = 0]), time=2023-01-31T07:08:33.683Z)
  Continuation: ProcessEvents
  Diff between previous and next state:
future: 
    null
    java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask@1a1e302a
isWaitingForFuture: 
    false
    true


 --- Transition of flow [cae64fda-d94b-4030-8562-3cb8f97a87f1] ---
  Timestamp: 2023-01-31T07:08:33.687Z
  Event: WakeUpSleepyFlow
  Actions: 
    CreateTransaction
  Continuation: Resume(result=class kotlin.Unit)
  Diff between previous and next state:
isFlowResumed: 
    false
    true
future: 
    java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask@1a1e302a
    null
isWaitingForFuture: 
    true
    false


 --- Transition of flow [cae64fda-d94b-4030-8562-3cb8f97a87f1] ---
  Timestamp: 2023-01-31T07:08:33.687Z
  Event: EnterSubFlow(subFlowClass=class net.corda.core.internal.FetchTransactionsFlow, subFlowVersion=CoreFlow(platformVersion=11), isEnabledTimedFlow=false)
  Actions: 
    
  Continuation: ProcessEvents
  Diff between previous and next state:
checkpoint.checkpointState.subFlowStack: 
    [Inlined(flowClass=class net.corda.samples.obligation.flows.IOUSettleFlowResponder, subFlowVersion=CorDappFlow(platformVersion=11, corDappName=workflows-1.0, corDappHash=C516E48A6E6E70A0AB3D8BD39F2350C2FEFECFE936F017EBB2142877462D44D3), isEnabledTimedFlow=false), Inlined(flowClass=class net.corda.samples.obligation.flows.IOUSettleFlowResponder$call$signedTransactionFlow$1, subFlowVersion=CoreFlow(platformVersion=11), isEnabledTimedFlow=false), Inlined(flowClass=class net.corda.core.flows.ReceiveTransactionFlow, subFlowVersion=CoreFlow(platformVersion=11), isEnabledTimedFlow=false), Inlined(flowClass=class net.corda.core.internal.ResolveTransactionsFlow, subFlowVersion=CoreFlow(platformVersion=11), isEnabledTimedFlow=false)]
    [Inlined(flowClass=class net.corda.samples.obligation.flows.IOUSettleFlowResponder, subFlowVersion=CorDappFlow(platformVersion=11, corDappName=workflows-1.0, corDappHash=C516E48A6E6E70A0AB3D8BD39F2350C2FEFECFE936F017EBB2142877462D44D3), isEnabledTimedFlow=false), Inlined(flowClass=class net.corda.samples.obligation.flows.IOUSettleFlowResponder$call$signedTransactionFlow$1, subFlowVersion=CoreFlow(platformVersion=11), isEnabledTimedFlow=false), Inlined(flowClass=class net.corda.core.flows.ReceiveTransactionFlow, subFlowVersion=CoreFlow(platformVersion=11), isEnabledTimedFlow=false), Inlined(flowClass=class net.corda.core.internal.ResolveTransactionsFlow, subFlowVersion=CoreFlow(platformVersion=11), isEnabledTimedFlow=false), Inlined(flowClass=class net.corda.core.internal.FetchTransactionsFlow, subFlowVersion=CoreFlow(platformVersion=11), isEnabledTimedFlow=false)]
checkpoint.timestamp: 
    2023-01-31T07:08:33.684Z
    2023-01-31T07:08:33.687Z


 --- Transition of flow [cae64fda-d94b-4030-8562-3cb8f97a87f1] ---
  Timestamp: 2023-01-31T07:08:33.687Z
  Event: LeaveSubFlow
  Actions: 
    
  Continuation: ProcessEvents
  Diff between previous and next state:
checkpoint.checkpointState.subFlowStack: 
    [Inlined(flowClass=class net.corda.samples.obligation.flows.IOUSettleFlowResponder, subFlowVersion=CorDappFlow(platformVersion=11, corDappName=workflows-1.0, corDappHash=C516E48A6E6E70A0AB3D8BD39F2350C2FEFECFE936F017EBB2142877462D44D3), isEnabledTimedFlow=false), Inlined(flowClass=class net.corda.samples.obligation.flows.IOUSettleFlowResponder$call$signedTransactionFlow$1, subFlowVersion=CoreFlow(platformVersion=11), isEnabledTimedFlow=false), Inlined(flowClass=class net.corda.core.flows.ReceiveTransactionFlow, subFlowVersion=CoreFlow(platformVersion=11), isEnabledTimedFlow=false), Inlined(flowClass=class net.corda.core.internal.ResolveTransactionsFlow, subFlowVersion=CoreFlow(platformVersion=11), isEnabledTimedFlow=false), Inlined(flowClass=class net.corda.core.internal.FetchTransactionsFlow, subFlowVersion=CoreFlow(platformVersion=11), isEnabledTimedFlow=false)]
    [Inlined(flowClass=class net.corda.samples.obligation.flows.IOUSettleFlowResponder, subFlowVersion=CorDappFlow(platformVersion=11, corDappName=workflows-1.0, corDappHash=C516E48A6E6E70A0AB3D8BD39F2350C2FEFECFE936F017EBB2142877462D44D3), isEnabledTimedFlow=false), Inlined(flowClass=class net.corda.samples.obligation.flows.IOUSettleFlowResponder$call$signedTransactionFlow$1, subFlowVersion=CoreFlow(platformVersion=11), isEnabledTimedFlow=false), Inlined(flowClass=class net.corda.core.flows.ReceiveTransactionFlow, subFlowVersion=CoreFlow(platformVersion=11), isEnabledTimedFlow=false), Inlined(flowClass=class net.corda.core.internal.ResolveTransactionsFlow, subFlowVersion=CoreFlow(platformVersion=11), isEnabledTimedFlow=false)]


 --- Transition of flow [cae64fda-d94b-4030-8562-3cb8f97a87f1] ---
  Timestamp: 2023-01-31T07:08:33.691Z
  Event: Suspend(ioRequest=Send(sessionToMessage={FlowSessionImpl(destination=O=Mock Company 1, L=London, C=GB, sourceSessionId=SessionId(toLong=-8071260149716765667))=768AED61FD2A58D74D7316731407E0600065080E1F3E6397EE4FA5AEFEE79295}), maySkipCheckpoint=false, fiber=F72C58F6559F84A300596291A0ED1B407B3C4B04A14C0E2206F5AD0A707B0DDA, currentStep=Starting)
  Actions: 
    PersistCheckpoint(id=[cae64fda-d94b-4030-8562-3cb8f97a87f1], checkpoint=Checkpoint(checkpointState=CheckpointState(invocationContext=InvocationContext(origin=Peer(party=O=Mock Company 1, L=London, C=GB), trace=Trace(invocationId=e0c93ab2-f782-484f-a5df-68a019267e50, timestamp: 2023-01-31T07:08:33.651Z, entityType: Invocation, sessionId=e0c93ab2-f782-484f-a5df-68a019267e50, timestamp: 2023-01-31T07:08:33.651Z, entityType: Session), actor=null, externalTrace=null, impersonatedActor=null, arguments=[], clientId=null), ourIdentity=O=Mock Company 3, L=London, C=GB, sessions={SessionId(toLong=-8071260149716765667)=Initiated(peerParty=O=Mock Company 1, L=London, C=GB, peerFlowInfo=FlowInfo(flowVersion=1, appName=<unknown>), receivedMessages=[], otherSideErrored=false, peerSinkSessionId=SessionId(toLong=-5366150003449329455), deduplicationSeed=D--5366150003449329455--6169107910265396549)}, sessionsToBeClosed=[], subFlowStack=[Inlined(flowClass=class net.corda.samples.obligation.flows.IOUSettleFlowResponder, subFlowVersion=CorDappFlow(platformVersion=11, corDappName=workflows-1.0, corDappHash=C516E48A6E6E70A0AB3D8BD39F2350C2FEFECFE936F017EBB2142877462D44D3), isEnabledTimedFlow=false), Inlined(flowClass=class net.corda.samples.obligation.flows.IOUSettleFlowResponder$call$signedTransactionFlow$1, subFlowVersion=CoreFlow(platformVersion=11), isEnabledTimedFlow=false), Inlined(flowClass=class net.corda.core.flows.ReceiveTransactionFlow, subFlowVersion=CoreFlow(platformVersion=11), isEnabledTimedFlow=false), Inlined(flowClass=class net.corda.core.internal.ResolveTransactionsFlow, subFlowVersion=CoreFlow(platformVersion=11), isEnabledTimedFlow=false)], numberOfSuspends=4, numberOfCommits=5), flowState=Started(flowIORequest=Send(sessionToMessage={FlowSessionImpl(destination=O=Mock Company 1, L=London, C=GB, sourceSessionId=SessionId(toLong=-8071260149716765667))=768AED61FD2A58D74D7316731407E0600065080E1F3E6397EE4FA5AEFEE79295}), frozenFiber=F72C58F6559F84A300596291A0ED1B407B3C4B04A14C0E2206F5AD0A707B0DDA), errorState=Clean, result=null, status=RUNNABLE, progressStep=Starting, flowIoRequest=Send, compatible=true), isCheckpointUpdate=true)
    PersistDeduplicationFacts(deduplicationHandlers=[])
    CommitTransaction
    AcknowledgeMessages(deduplicationHandlers=[])
    ScheduleEvent(event=DoRemainingWork)
  Continuation: ProcessEvents
  Diff between previous and next state:
checkpoint.flowState.flowIORequest: 
    Sleep(wakeUpAfter=2023-01-31T07:08:33.683Z)
    Send(sessionToMessage={FlowSessionImpl(destination=O=Mock Company 1, L=London, C=GB, sourceSessionId=SessionId(toLong=-8071260149716765667))=768AED61FD2A58D74D7316731407E0600065080E1F3E6397EE4FA5AEFEE79295})
checkpoint.flowState.frozenFiber.hash: 
    40C2DBFAC1CEB6FAB4123A0EEFE0551810A647DEA76F7BFAE33AAB58D71A6561
    F72C58F6559F84A300596291A0ED1B407B3C4B04A14C0E2206F5AD0A707B0DDA
checkpoint.flowIoRequest: 
    Sleep
    Send
checkpoint.checkpointState.numberOfSuspends: 
    3
    4
checkpoint.checkpointState.numberOfCommits: 
    4
    5
checkpoint.timestamp: 
    2023-01-31T07:08:33.687Z
    2023-01-31T07:08:33.690Z
isFlowResumed: 
    true
    false
numberOfCommits: 
    4
    5


 --- Transition of flow [cae64fda-d94b-4030-8562-3cb8f97a87f1] ---
  Timestamp: 2023-01-31T07:08:33.691Z
  Event: DoRemainingWork
  Actions: 
    SendMultiple(sendInitial=[], sendExisting=[SendExisting(peerParty=O=Mock Company 1, L=London, C=GB, message=ExistingSessionMessage(recipientSessionId=SessionId(toLong=-5366150003449329455), payload=DataSessionMessage(payload=class net.corda.core.serialization.SerializedBytes)), deduplicationId=SenderDeduplicationId(deduplicationId=DeduplicationId(toString=N-D--5366150003449329455--6169107910265396549-4-0), senderUUID=1409862b-8d98-4245-b5a4-db9f3ad49a64))])
    CreateTransaction
  Continuation: Resume(result=class kotlin.Unit)
  Diff between previous and next state:
isFlowResumed: 
    false
    true


 --- Transition of flow [cae64fda-d94b-4030-8562-3cb8f97a87f1] ---
  Timestamp: 2023-01-31T07:08:33.922Z
  Event: LeaveSubFlow
  Actions: 
    
  Continuation: ProcessEvents
  Diff between previous and next state:
checkpoint.checkpointState.subFlowStack: 
    [Inlined(flowClass=class net.corda.samples.obligation.flows.IOUSettleFlowResponder, subFlowVersion=CorDappFlow(platformVersion=11, corDappName=workflows-1.0, corDappHash=C516E48A6E6E70A0AB3D8BD39F2350C2FEFECFE936F017EBB2142877462D44D3), isEnabledTimedFlow=false), Inlined(flowClass=class net.corda.samples.obligation.flows.IOUSettleFlowResponder$call$signedTransactionFlow$1, subFlowVersion=CoreFlow(platformVersion=11), isEnabledTimedFlow=false), Inlined(flowClass=class net.corda.core.flows.ReceiveTransactionFlow, subFlowVersion=CoreFlow(platformVersion=11), isEnabledTimedFlow=false), Inlined(flowClass=class net.corda.core.internal.ResolveTransactionsFlow, subFlowVersion=CoreFlow(platformVersion=11), isEnabledTimedFlow=false)]
    [Inlined(flowClass=class net.corda.samples.obligation.flows.IOUSettleFlowResponder, subFlowVersion=CorDappFlow(platformVersion=11, corDappName=workflows-1.0, corDappHash=C516E48A6E6E70A0AB3D8BD39F2350C2FEFECFE936F017EBB2142877462D44D3), isEnabledTimedFlow=false), Inlined(flowClass=class net.corda.samples.obligation.flows.IOUSettleFlowResponder$call$signedTransactionFlow$1, subFlowVersion=CoreFlow(platformVersion=11), isEnabledTimedFlow=false), Inlined(flowClass=class net.corda.core.flows.ReceiveTransactionFlow, subFlowVersion=CoreFlow(platformVersion=11), isEnabledTimedFlow=false)]
checkpoint.timestamp: 
    2023-01-31T07:08:33.691Z
    2023-01-31T07:08:33.922Z


 --- Transition of flow [cae64fda-d94b-4030-8562-3cb8f97a87f1] ---
  Timestamp: 2023-01-31T07:08:33.989Z
  Event: LeaveSubFlow
  Actions: 
    
  Continuation: ProcessEvents
  Diff between previous and next state:
checkpoint.checkpointState.subFlowStack: 
    [Inlined(flowClass=class net.corda.samples.obligation.flows.IOUSettleFlowResponder, subFlowVersion=CorDappFlow(platformVersion=11, corDappName=workflows-1.0, corDappHash=C516E48A6E6E70A0AB3D8BD39F2350C2FEFECFE936F017EBB2142877462D44D3), isEnabledTimedFlow=false), Inlined(flowClass=class net.corda.samples.obligation.flows.IOUSettleFlowResponder$call$signedTransactionFlow$1, subFlowVersion=CoreFlow(platformVersion=11), isEnabledTimedFlow=false), Inlined(flowClass=class net.corda.core.flows.ReceiveTransactionFlow, subFlowVersion=CoreFlow(platformVersion=11), isEnabledTimedFlow=false)]
    [Inlined(flowClass=class net.corda.samples.obligation.flows.IOUSettleFlowResponder, subFlowVersion=CorDappFlow(platformVersion=11, corDappName=workflows-1.0, corDappHash=C516E48A6E6E70A0AB3D8BD39F2350C2FEFECFE936F017EBB2142877462D44D3), isEnabledTimedFlow=false), Inlined(flowClass=class net.corda.samples.obligation.flows.IOUSettleFlowResponder$call$signedTransactionFlow$1, subFlowVersion=CoreFlow(platformVersion=11), isEnabledTimedFlow=false)]
checkpoint.timestamp: 
    2023-01-31T07:08:33.922Z
    2023-01-31T07:08:33.989Z


 --- Transition of flow [cae64fda-d94b-4030-8562-3cb8f97a87f1] ---
  Timestamp: 2023-01-31T07:08:33.992Z
  Event: Suspend(ioRequest=Receive(sessions=[FlowSessionImpl(destination=O=Mock Company 1, L=London, C=GB, sourceSessionId=SessionId(toLong=-8071260149716765667))]), maySkipCheckpoint=false, fiber=0FB1475F4E1101010896060E394E48CF4DB44CED6AAF316D49CF7868F32D67A8, currentStep=Starting)
  Actions: 
    PersistCheckpoint(id=[cae64fda-d94b-4030-8562-3cb8f97a87f1], checkpoint=Checkpoint(checkpointState=CheckpointState(invocationContext=InvocationContext(origin=Peer(party=O=Mock Company 1, L=London, C=GB), trace=Trace(invocationId=e0c93ab2-f782-484f-a5df-68a019267e50, timestamp: 2023-01-31T07:08:33.651Z, entityType: Invocation, sessionId=e0c93ab2-f782-484f-a5df-68a019267e50, timestamp: 2023-01-31T07:08:33.651Z, entityType: Session), actor=null, externalTrace=null, impersonatedActor=null, arguments=[], clientId=null), ourIdentity=O=Mock Company 3, L=London, C=GB, sessions={SessionId(toLong=-8071260149716765667)=Initiated(peerParty=O=Mock Company 1, L=London, C=GB, peerFlowInfo=FlowInfo(flowVersion=1, appName=<unknown>), receivedMessages=[], otherSideErrored=false, peerSinkSessionId=SessionId(toLong=-5366150003449329455), deduplicationSeed=D--5366150003449329455--6169107910265396549)}, sessionsToBeClosed=[], subFlowStack=[Inlined(flowClass=class net.corda.samples.obligation.flows.IOUSettleFlowResponder, subFlowVersion=CorDappFlow(platformVersion=11, corDappName=workflows-1.0, corDappHash=C516E48A6E6E70A0AB3D8BD39F2350C2FEFECFE936F017EBB2142877462D44D3), isEnabledTimedFlow=false), Inlined(flowClass=class net.corda.samples.obligation.flows.IOUSettleFlowResponder$call$signedTransactionFlow$1, subFlowVersion=CoreFlow(platformVersion=11), isEnabledTimedFlow=false)], numberOfSuspends=5, numberOfCommits=6), flowState=Started(flowIORequest=Receive(sessions=[FlowSessionImpl(destination=O=Mock Company 1, L=London, C=GB, sourceSessionId=SessionId(toLong=-8071260149716765667))]), frozenFiber=0FB1475F4E1101010896060E394E48CF4DB44CED6AAF316D49CF7868F32D67A8), errorState=Clean, result=null, status=RUNNABLE, progressStep=Starting, flowIoRequest=Receive, compatible=true), isCheckpointUpdate=true)
    PersistDeduplicationFacts(deduplicationHandlers=[])
    CommitTransaction
    AcknowledgeMessages(deduplicationHandlers=[])
    ScheduleEvent(event=DoRemainingWork)
  Continuation: ProcessEvents
  Diff between previous and next state:
checkpoint.flowState.flowIORequest: 
    Send(sessionToMessage={FlowSessionImpl(destination=O=Mock Company 1, L=London, C=GB, sourceSessionId=SessionId(toLong=-8071260149716765667))=768AED61FD2A58D74D7316731407E0600065080E1F3E6397EE4FA5AEFEE79295})
    Receive(sessions=[FlowSessionImpl(destination=O=Mock Company 1, L=London, C=GB, sourceSessionId=SessionId(toLong=-8071260149716765667))])
checkpoint.flowState.frozenFiber.hash: 
    F72C58F6559F84A300596291A0ED1B407B3C4B04A14C0E2206F5AD0A707B0DDA
    0FB1475F4E1101010896060E394E48CF4DB44CED6AAF316D49CF7868F32D67A8
checkpoint.flowIoRequest: 
    Send
    Receive
checkpoint.checkpointState.numberOfSuspends: 
    4
    5
checkpoint.checkpointState.numberOfCommits: 
    5
    6
checkpoint.timestamp: 
    2023-01-31T07:08:33.989Z
    2023-01-31T07:08:33.991Z
isFlowResumed: 
    true
    false
numberOfCommits: 
    5
    6


 --- Transition of flow [cae64fda-d94b-4030-8562-3cb8f97a87f1] ---
  Timestamp: 2023-01-31T07:08:33.992Z
  Event: DoRemainingWork
  Actions: 
    
  Continuation: ProcessEvents
  Diff between previous and next state:
null

 --- Transition of flow [cae64fda-d94b-4030-8562-3cb8f97a87f1] ---
  Timestamp: 2023-01-31T07:08:34.002Z
  Event: DeliverSessionMessage(sessionMessage=ExistingSessionMessage(recipientSessionId=SessionId(toLong=-8071260149716765667), payload=DataSessionMessage(payload=class net.corda.core.serialization.SerializedBytes)), deduplicationHandler=net.corda.testing.node.internal.MockNodeMessagingService$InMemoryDeduplicationHandler@4eea7633, sender=O=Mock Company 1, L=London, C=GB)
  Actions: 
    ScheduleEvent(event=DoRemainingWork)
  Continuation: ProcessEvents
  Diff between previous and next state:
pendingDeduplicationHandlers: 
    []
    [net.corda.testing.node.internal.MockNodeMessagingService$InMemoryDeduplicationHandler@4eea7633]
checkpoint.checkpointState.sessions.SessionId(toLong=-8071260149716765667).receivedMessages.isEmpty: 
    true
    false
checkpoint.timestamp: 
    2023-01-31T07:08:33.992Z
    2023-01-31T07:08:34.002Z


 --- Transition of flow [cae64fda-d94b-4030-8562-3cb8f97a87f1] ---
  Timestamp: 2023-01-31T07:08:34.002Z
  Event: DoRemainingWork
  Actions: 
    CreateTransaction
  Continuation: Resume(result=class java.util.LinkedHashMap)
  Diff between previous and next state:
checkpoint.checkpointState.sessions.SessionId(toLong=-8071260149716765667).receivedMessages.isEmpty: 
    false
    true
isFlowResumed: 
    false
    true


 --- Transition of flow [cae64fda-d94b-4030-8562-3cb8f97a87f1] ---
  Timestamp: 2023-01-31T07:08:34.010Z
  Event: Suspend(ioRequest=Send(sessionToMessage={FlowSessionImpl(destination=O=Mock Company 1, L=London, C=GB, sourceSessionId=SessionId(toLong=-8071260149716765667))=7DFFFFB9C3B94A504BFEF1F0EFB607426254D24C6C003D5BE4BB0519D28C1153}), maySkipCheckpoint=false, fiber=6F05506D88DEC16BC6E5015645609547ED933217A4E53EA63C5A8C394FD30B97, currentStep=Starting)
  Actions: 
    PersistCheckpoint(id=[cae64fda-d94b-4030-8562-3cb8f97a87f1], checkpoint=Checkpoint(checkpointState=CheckpointState(invocationContext=InvocationContext(origin=Peer(party=O=Mock Company 1, L=London, C=GB), trace=Trace(invocationId=e0c93ab2-f782-484f-a5df-68a019267e50, timestamp: 2023-01-31T07:08:33.651Z, entityType: Invocation, sessionId=e0c93ab2-f782-484f-a5df-68a019267e50, timestamp: 2023-01-31T07:08:33.651Z, entityType: Session), actor=null, externalTrace=null, impersonatedActor=null, arguments=[], clientId=null), ourIdentity=O=Mock Company 3, L=London, C=GB, sessions={SessionId(toLong=-8071260149716765667)=Initiated(peerParty=O=Mock Company 1, L=London, C=GB, peerFlowInfo=FlowInfo(flowVersion=1, appName=<unknown>), receivedMessages=[], otherSideErrored=false, peerSinkSessionId=SessionId(toLong=-5366150003449329455), deduplicationSeed=D--5366150003449329455--6169107910265396549)}, sessionsToBeClosed=[], subFlowStack=[Inlined(flowClass=class net.corda.samples.obligation.flows.IOUSettleFlowResponder, subFlowVersion=CorDappFlow(platformVersion=11, corDappName=workflows-1.0, corDappHash=C516E48A6E6E70A0AB3D8BD39F2350C2FEFECFE936F017EBB2142877462D44D3), isEnabledTimedFlow=false), Inlined(flowClass=class net.corda.samples.obligation.flows.IOUSettleFlowResponder$call$signedTransactionFlow$1, subFlowVersion=CoreFlow(platformVersion=11), isEnabledTimedFlow=false)], numberOfSuspends=6, numberOfCommits=7), flowState=Started(flowIORequest=Send(sessionToMessage={FlowSessionImpl(destination=O=Mock Company 1, L=London, C=GB, sourceSessionId=SessionId(toLong=-8071260149716765667))=7DFFFFB9C3B94A504BFEF1F0EFB607426254D24C6C003D5BE4BB0519D28C1153}), frozenFiber=6F05506D88DEC16BC6E5015645609547ED933217A4E53EA63C5A8C394FD30B97), errorState=Clean, result=null, status=RUNNABLE, progressStep=Starting, flowIoRequest=Send, compatible=true), isCheckpointUpdate=true)
    PersistDeduplicationFacts(deduplicationHandlers=[net.corda.testing.node.internal.MockNodeMessagingService$InMemoryDeduplicationHandler@4eea7633])
    CommitTransaction
    AcknowledgeMessages(deduplicationHandlers=[net.corda.testing.node.internal.MockNodeMessagingService$InMemoryDeduplicationHandler@4eea7633])
    ScheduleEvent(event=DoRemainingWork)
  Continuation: ProcessEvents
  Diff between previous and next state:
pendingDeduplicationHandlers: 
    [net.corda.testing.node.internal.MockNodeMessagingService$InMemoryDeduplicationHandler@4eea7633]
    []
checkpoint.flowState.flowIORequest: 
    Receive(sessions=[FlowSessionImpl(destination=O=Mock Company 1, L=London, C=GB, sourceSessionId=SessionId(toLong=-8071260149716765667))])
    Send(sessionToMessage={FlowSessionImpl(destination=O=Mock Company 1, L=London, C=GB, sourceSessionId=SessionId(toLong=-8071260149716765667))=7DFFFFB9C3B94A504BFEF1F0EFB607426254D24C6C003D5BE4BB0519D28C1153})
checkpoint.flowState.frozenFiber.hash: 
    0FB1475F4E1101010896060E394E48CF4DB44CED6AAF316D49CF7868F32D67A8
    6F05506D88DEC16BC6E5015645609547ED933217A4E53EA63C5A8C394FD30B97
checkpoint.flowIoRequest: 
    Receive
    Send
checkpoint.checkpointState.numberOfSuspends: 
    5
    6
checkpoint.checkpointState.numberOfCommits: 
    6
    7
checkpoint.timestamp: 
    2023-01-31T07:08:34.002Z
    2023-01-31T07:08:34.008Z
isFlowResumed: 
    true
    false
numberOfCommits: 
    6
    7


 --- Transition of flow [cae64fda-d94b-4030-8562-3cb8f97a87f1] ---
  Timestamp: 2023-01-31T07:08:34.010Z
  Event: DoRemainingWork
  Actions: 
    SendMultiple(sendInitial=[], sendExisting=[SendExisting(peerParty=O=Mock Company 1, L=London, C=GB, message=ExistingSessionMessage(recipientSessionId=SessionId(toLong=-5366150003449329455), payload=DataSessionMessage(payload=class net.corda.core.serialization.SerializedBytes)), deduplicationId=SenderDeduplicationId(deduplicationId=DeduplicationId(toString=N-D--5366150003449329455--6169107910265396549-6-0), senderUUID=1409862b-8d98-4245-b5a4-db9f3ad49a64))])
    CreateTransaction
  Continuation: Resume(result=class kotlin.Unit)
  Diff between previous and next state:
isFlowResumed: 
    false
    true


 --- Transition of flow [cae64fda-d94b-4030-8562-3cb8f97a87f1] ---
  Timestamp: 2023-01-31T07:08:34.010Z
  Event: LeaveSubFlow
  Actions: 
    
  Continuation: ProcessEvents
  Diff between previous and next state:
checkpoint.checkpointState.subFlowStack: 
    [Inlined(flowClass=class net.corda.samples.obligation.flows.IOUSettleFlowResponder, subFlowVersion=CorDappFlow(platformVersion=11, corDappName=workflows-1.0, corDappHash=C516E48A6E6E70A0AB3D8BD39F2350C2FEFECFE936F017EBB2142877462D44D3), isEnabledTimedFlow=false), Inlined(flowClass=class net.corda.samples.obligation.flows.IOUSettleFlowResponder$call$signedTransactionFlow$1, subFlowVersion=CoreFlow(platformVersion=11), isEnabledTimedFlow=false)]
    [Inlined(flowClass=class net.corda.samples.obligation.flows.IOUSettleFlowResponder, subFlowVersion=CorDappFlow(platformVersion=11, corDappName=workflows-1.0, corDappHash=C516E48A6E6E70A0AB3D8BD39F2350C2FEFECFE936F017EBB2142877462D44D3), isEnabledTimedFlow=false)]


 --- Transition of flow [cae64fda-d94b-4030-8562-3cb8f97a87f1] ---
  Timestamp: 2023-01-31T07:08:34.010Z
  Event: EnterSubFlow(subFlowClass=class net.corda.core.flows.ReceiveFinalityFlow, subFlowVersion=CoreFlow(platformVersion=11), isEnabledTimedFlow=false)
  Actions: 
    
  Continuation: ProcessEvents
  Diff between previous and next state:
checkpoint.checkpointState.subFlowStack: 
    [Inlined(flowClass=class net.corda.samples.obligation.flows.IOUSettleFlowResponder, subFlowVersion=CorDappFlow(platformVersion=11, corDappName=workflows-1.0, corDappHash=C516E48A6E6E70A0AB3D8BD39F2350C2FEFECFE936F017EBB2142877462D44D3), isEnabledTimedFlow=false)]
    [Inlined(flowClass=class net.corda.samples.obligation.flows.IOUSettleFlowResponder, subFlowVersion=CorDappFlow(platformVersion=11, corDappName=workflows-1.0, corDappHash=C516E48A6E6E70A0AB3D8BD39F2350C2FEFECFE936F017EBB2142877462D44D3), isEnabledTimedFlow=false), Inlined(flowClass=class net.corda.core.flows.ReceiveFinalityFlow, subFlowVersion=CoreFlow(platformVersion=11), isEnabledTimedFlow=false)]


 --- Transition of flow [cae64fda-d94b-4030-8562-3cb8f97a87f1] ---
  Timestamp: 2023-01-31T07:08:34.010Z
  Event: EnterSubFlow(subFlowClass=class net.corda.core.flows.ReceiveFinalityFlow$call$1, subFlowVersion=CoreFlow(platformVersion=11), isEnabledTimedFlow=false)
  Actions: 
    
  Continuation: ProcessEvents
  Diff between previous and next state:
checkpoint.checkpointState.subFlowStack: 
    [Inlined(flowClass=class net.corda.samples.obligation.flows.IOUSettleFlowResponder, subFlowVersion=CorDappFlow(platformVersion=11, corDappName=workflows-1.0, corDappHash=C516E48A6E6E70A0AB3D8BD39F2350C2FEFECFE936F017EBB2142877462D44D3), isEnabledTimedFlow=false), Inlined(flowClass=class net.corda.core.flows.ReceiveFinalityFlow, subFlowVersion=CoreFlow(platformVersion=11), isEnabledTimedFlow=false)]
    [Inlined(flowClass=class net.corda.samples.obligation.flows.IOUSettleFlowResponder, subFlowVersion=CorDappFlow(platformVersion=11, corDappName=workflows-1.0, corDappHash=C516E48A6E6E70A0AB3D8BD39F2350C2FEFECFE936F017EBB2142877462D44D3), isEnabledTimedFlow=false), Inlined(flowClass=class net.corda.core.flows.ReceiveFinalityFlow, subFlowVersion=CoreFlow(platformVersion=11), isEnabledTimedFlow=false), Inlined(flowClass=class net.corda.core.flows.ReceiveFinalityFlow$call$1, subFlowVersion=CoreFlow(platformVersion=11), isEnabledTimedFlow=false)]


 --- Transition of flow [cae64fda-d94b-4030-8562-3cb8f97a87f1] ---
  Timestamp: 2023-01-31T07:08:34.013Z
  Event: Suspend(ioRequest=Receive(sessions=[FlowSessionImpl(destination=O=Mock Company 1, L=London, C=GB, sourceSessionId=SessionId(toLong=-8071260149716765667))]), maySkipCheckpoint=false, fiber=1B8FDF36B775D7A1B7D046E21597F8A9FFA0FFAF186F27B5D1A767FF7F44C2C8, currentStep=Starting)
  Actions: 
    PersistCheckpoint(id=[cae64fda-d94b-4030-8562-3cb8f97a87f1], checkpoint=Checkpoint(checkpointState=CheckpointState(invocationContext=InvocationContext(origin=Peer(party=O=Mock Company 1, L=London, C=GB), trace=Trace(invocationId=e0c93ab2-f782-484f-a5df-68a019267e50, timestamp: 2023-01-31T07:08:33.651Z, entityType: Invocation, sessionId=e0c93ab2-f782-484f-a5df-68a019267e50, timestamp: 2023-01-31T07:08:33.651Z, entityType: Session), actor=null, externalTrace=null, impersonatedActor=null, arguments=[], clientId=null), ourIdentity=O=Mock Company 3, L=London, C=GB, sessions={SessionId(toLong=-8071260149716765667)=Initiated(peerParty=O=Mock Company 1, L=London, C=GB, peerFlowInfo=FlowInfo(flowVersion=1, appName=<unknown>), receivedMessages=[], otherSideErrored=false, peerSinkSessionId=SessionId(toLong=-5366150003449329455), deduplicationSeed=D--5366150003449329455--6169107910265396549)}, sessionsToBeClosed=[], subFlowStack=[Inlined(flowClass=class net.corda.samples.obligation.flows.IOUSettleFlowResponder, subFlowVersion=CorDappFlow(platformVersion=11, corDappName=workflows-1.0, corDappHash=C516E48A6E6E70A0AB3D8BD39F2350C2FEFECFE936F017EBB2142877462D44D3), isEnabledTimedFlow=false), Inlined(flowClass=class net.corda.core.flows.ReceiveFinalityFlow, subFlowVersion=CoreFlow(platformVersion=11), isEnabledTimedFlow=false), Inlined(flowClass=class net.corda.core.flows.ReceiveFinalityFlow$call$1, subFlowVersion=CoreFlow(platformVersion=11), isEnabledTimedFlow=false)], numberOfSuspends=7, numberOfCommits=8), flowState=Started(flowIORequest=Receive(sessions=[FlowSessionImpl(destination=O=Mock Company 1, L=London, C=GB, sourceSessionId=SessionId(toLong=-8071260149716765667))]), frozenFiber=1B8FDF36B775D7A1B7D046E21597F8A9FFA0FFAF186F27B5D1A767FF7F44C2C8), errorState=Clean, result=null, status=RUNNABLE, progressStep=Starting, flowIoRequest=Receive, compatible=true), isCheckpointUpdate=true)
    PersistDeduplicationFacts(deduplicationHandlers=[])
    CommitTransaction
    AcknowledgeMessages(deduplicationHandlers=[])
    ScheduleEvent(event=DoRemainingWork)
  Continuation: ProcessEvents
  Diff between previous and next state:
checkpoint.flowState.flowIORequest: 
    Send(sessionToMessage={FlowSessionImpl(destination=O=Mock Company 1, L=London, C=GB, sourceSessionId=SessionId(toLong=-8071260149716765667))=7DFFFFB9C3B94A504BFEF1F0EFB607426254D24C6C003D5BE4BB0519D28C1153})
    Receive(sessions=[FlowSessionImpl(destination=O=Mock Company 1, L=London, C=GB, sourceSessionId=SessionId(toLong=-8071260149716765667))])
checkpoint.flowState.frozenFiber.hash: 
    6F05506D88DEC16BC6E5015645609547ED933217A4E53EA63C5A8C394FD30B97
    1B8FDF36B775D7A1B7D046E21597F8A9FFA0FFAF186F27B5D1A767FF7F44C2C8
checkpoint.flowIoRequest: 
    Send
    Receive
checkpoint.checkpointState.numberOfSuspends: 
    6
    7
checkpoint.checkpointState.numberOfCommits: 
    7
    8
checkpoint.timestamp: 
    2023-01-31T07:08:34.010Z
    2023-01-31T07:08:34.012Z
isFlowResumed: 
    true
    false
numberOfCommits: 
    7
    8


 --- Transition of flow [cae64fda-d94b-4030-8562-3cb8f97a87f1] ---
  Timestamp: 2023-01-31T07:08:34.013Z
  Event: DoRemainingWork
  Actions: 
    
  Continuation: ProcessEvents
  Diff between previous and next state:
null

 --- Transition of flow [cae64fda-d94b-4030-8562-3cb8f97a87f1] ---
  Timestamp: 2023-01-31T07:08:34.151Z
  Event: DeliverSessionMessage(sessionMessage=ExistingSessionMessage(recipientSessionId=SessionId(toLong=-8071260149716765667), payload=ErrorSessionMessage(flowException=null, errorId=-870222702024413628)), deduplicationHandler=net.corda.testing.node.internal.MockNodeMessagingService$InMemoryDeduplicationHandler@545c66ae, sender=O=Mock Company 1, L=London, C=GB)
  Actions: 
    ScheduleEvent(event=DoRemainingWork)
  Continuation: ProcessEvents
  Diff between previous and next state:
pendingDeduplicationHandlers: 
    []
    [net.corda.testing.node.internal.MockNodeMessagingService$InMemoryDeduplicationHandler@545c66ae]
checkpoint.checkpointState.sessions.SessionId(toLong=-8071260149716765667).receivedMessages.isEmpty: 
    true
    false
checkpoint.timestamp: 
    2023-01-31T07:08:34.013Z
    2023-01-31T07:08:34.151Z


 --- Transition of flow [cae64fda-d94b-4030-8562-3cb8f97a87f1] ---
  Timestamp: 2023-01-31T07:08:34.152Z
  Event: DoRemainingWork
  Actions: 
    CreateTransaction
  Continuation: Throw(throwable=net.corda.core.flows.UnexpectedFlowEndException: Counter-flow errored)
  Diff between previous and next state:
checkpoint.checkpointState.sessions.SessionId(toLong=-8071260149716765667).receivedMessages.isEmpty: 
    false
    true
checkpoint.checkpointState.sessions.SessionId(toLong=-8071260149716765667).otherSideErrored: 
    false
    true
checkpoint.timestamp: 
    2023-01-31T07:08:34.151Z
    2023-01-31T07:08:34.152Z
isFlowResumed: 
    false
    true


 --- Transition of flow [cae64fda-d94b-4030-8562-3cb8f97a87f1] ---
  Timestamp: 2023-01-31T07:08:34.152Z
  Event: LeaveSubFlow
  Actions: 
    
  Continuation: ProcessEvents
  Diff between previous and next state:
checkpoint.checkpointState.subFlowStack: 
    [Inlined(flowClass=class net.corda.samples.obligation.flows.IOUSettleFlowResponder, subFlowVersion=CorDappFlow(platformVersion=11, corDappName=workflows-1.0, corDappHash=C516E48A6E6E70A0AB3D8BD39F2350C2FEFECFE936F017EBB2142877462D44D3), isEnabledTimedFlow=false), Inlined(flowClass=class net.corda.core.flows.ReceiveFinalityFlow, subFlowVersion=CoreFlow(platformVersion=11), isEnabledTimedFlow=false), Inlined(flowClass=class net.corda.core.flows.ReceiveFinalityFlow$call$1, subFlowVersion=CoreFlow(platformVersion=11), isEnabledTimedFlow=false)]
    [Inlined(flowClass=class net.corda.samples.obligation.flows.IOUSettleFlowResponder, subFlowVersion=CorDappFlow(platformVersion=11, corDappName=workflows-1.0, corDappHash=C516E48A6E6E70A0AB3D8BD39F2350C2FEFECFE936F017EBB2142877462D44D3), isEnabledTimedFlow=false), Inlined(flowClass=class net.corda.core.flows.ReceiveFinalityFlow, subFlowVersion=CoreFlow(platformVersion=11), isEnabledTimedFlow=false)]


 --- Transition of flow [cae64fda-d94b-4030-8562-3cb8f97a87f1] ---
  Timestamp: 2023-01-31T07:08:34.152Z
  Event: LeaveSubFlow
  Actions: 
    
  Continuation: ProcessEvents
  Diff between previous and next state:
checkpoint.checkpointState.subFlowStack: 
    [Inlined(flowClass=class net.corda.samples.obligation.flows.IOUSettleFlowResponder, subFlowVersion=CorDappFlow(platformVersion=11, corDappName=workflows-1.0, corDappHash=C516E48A6E6E70A0AB3D8BD39F2350C2FEFECFE936F017EBB2142877462D44D3), isEnabledTimedFlow=false), Inlined(flowClass=class net.corda.core.flows.ReceiveFinalityFlow, subFlowVersion=CoreFlow(platformVersion=11), isEnabledTimedFlow=false)]
    [Inlined(flowClass=class net.corda.samples.obligation.flows.IOUSettleFlowResponder, subFlowVersion=CorDappFlow(platformVersion=11, corDappName=workflows-1.0, corDappHash=C516E48A6E6E70A0AB3D8BD39F2350C2FEFECFE936F017EBB2142877462D44D3), isEnabledTimedFlow=false)]


 --- Transition of flow [cae64fda-d94b-4030-8562-3cb8f97a87f1] ---
  Timestamp: 2023-01-31T07:08:34.154Z
  Event: Error(exception=net.corda.core.flows.UnexpectedFlowEndException: Counter-flow errored, rollback=true)
  Actions: 
    RollbackTransaction
    ScheduleEvent(event=DoRemainingWork)
  Continuation: ProcessEvents
  Diff between previous and next state:
checkpoint.errorState: 
    Clean
    Errored(errors=[FlowError(errorId=-870222702024413628, exception=net.corda.core.flows.UnexpectedFlowEndException: Counter-flow errored)], propagatedIndex=0, propagating=false)
checkpoint.timestamp: 
    2023-01-31T07:08:34.152Z
    2023-01-31T07:08:34.153Z
isFlowResumed: 
    true
    false


 --- Transition of flow [cae64fda-d94b-4030-8562-3cb8f97a87f1] ---
  Timestamp: 2023-01-31T07:08:34.154Z
  Event: DoRemainingWork
  Actions: 
    
  Continuation: ProcessEvents
  Diff between previous and next state:
null

 --- Transition of flow [cae64fda-d94b-4030-8562-3cb8f97a87f1] ---
  Timestamp: 2023-01-31T07:08:34.154Z
  Event: StartErrorPropagation
  Actions: 
    ScheduleEvent(event=DoRemainingWork)
  Continuation: ProcessEvents
  Diff between previous and next state:
checkpoint.errorState.propagating: 
    false
    true
checkpoint.timestamp: 
    2023-01-31T07:08:34.153Z
    2023-01-31T07:08:34.154Z
 {fiber-id=10000029, flow-id=cae64fda-d94b-4030-8562-3cb8f97a87f1, invocation_id=e0c93ab2-f782-484f-a5df-68a019267e50, invocation_timestamp=2023-01-31T07:08:33.651Z, origin=O=Mock Company 1, L=London, C=GB, session_id=e0c93ab2-f782-484f-a5df-68a019267e50, session_timestamp=2023-01-31T07:08:33.651Z, thread-id=854, tx_id=0DFF1D65C786D2F8443A0291C9DD252856A4D061214F27B9FC98D7C999E3139E}
[WARN ] 2023-01-31T07:08:34,171Z [Mock network] interceptors.DumpHistoryOnErrorInterceptor. - Flow [cae64fda-d94b-4030-8562-3cb8f97a87f1] error {fiber-id=10000029, flow-id=cae64fda-d94b-4030-8562-3cb8f97a87f1, invocation_id=e0c93ab2-f782-484f-a5df-68a019267e50, invocation_timestamp=2023-01-31T07:08:33.651Z, origin=O=Mock Company 1, L=London, C=GB, session_id=e0c93ab2-f782-484f-a5df-68a019267e50, session_timestamp=2023-01-31T07:08:33.651Z, thread-id=854, tx_id=0DFF1D65C786D2F8443A0291C9DD252856A4D061214F27B9FC98D7C999E3139E}
net.corda.core.flows.UnexpectedFlowEndException: Counter-flow errored
	at Received unexpected counter-flow exception from peer O=Mock Company 1, L=London, C=GB.() ~[?:?]
	at net.corda.node.services.statemachine.FlowStateMachineImpl.fillInLocalStackTrace(FlowStateMachineImpl.kt:244) ~[corda-node-4.9.jar:?]
	at net.corda.node.services.statemachine.FlowStateMachineImpl.processEventsUntilFlowIsResumed(FlowStateMachineImpl.kt:225) ~[corda-node-4.9.jar:?]
	at net.corda.node.services.statemachine.FlowStateMachineImpl.suspend(FlowStateMachineImpl.kt:577) ~[corda-node-4.9.jar:?]
	at net.corda.node.services.statemachine.FlowSessionImpl.receive(FlowSessionImpl.kt:67) ~[corda-node-4.9.jar:?]
	at net.corda.node.services.statemachine.FlowSessionImpl.receive(FlowSessionImpl.kt:71) ~[corda-node-4.9.jar:?]
	at net.corda.core.flows.ReceiveTransactionFlow.call(ReceiveTransactionFlow.kt:103) ~[corda-core-4.9.jar:?]
	at net.corda.core.flows.ReceiveTransactionFlow.call(ReceiveTransactionFlow.kt:31) ~[corda-core-4.9.jar:?]
	at net.corda.node.services.statemachine.FlowStateMachineImpl.subFlow(FlowStateMachineImpl.kt:420) ~[corda-node-4.9.jar:?]
	at net.corda.core.flows.FlowLogic.subFlow(FlowLogic.kt:409) ~[corda-core-4.9.jar:?]
	at net.corda.core.flows.ReceiveFinalityFlow.call(FinalityFlow.kt:285) ~[corda-core-4.9.jar:?]
	at net.corda.core.flows.ReceiveFinalityFlow.call(FinalityFlow.kt:280) ~[corda-core-4.9.jar:?]
	at net.corda.node.services.statemachine.FlowStateMachineImpl.subFlow(FlowStateMachineImpl.kt:420) ~[corda-node-4.9.jar:?]
	at net.corda.core.flows.FlowLogic.subFlow(FlowLogic.kt:409) ~[corda-core-4.9.jar:?]
	at net.corda.samples.obligation.flows.IOUSettleFlowResponder.call(IOUSettleFlow.kt:139) ~[main/:?]
	at net.corda.samples.obligation.flows.IOUSettleFlowResponder.call(IOUSettleFlow.kt:126) ~[main/:?]
	at net.corda.node.services.statemachine.FlowStateMachineImpl.run(FlowStateMachineImpl.kt:349) ~[corda-node-4.9.jar:?]
	at net.corda.node.services.statemachine.FlowStateMachineImpl.run(FlowStateMachineImpl.kt:71) ~[corda-node-4.9.jar:?]
	at co.paralleluniverse.fibers.Fiber.run1(Fiber.java:1092) ~[quasar-core-0.7.10.jar:0.7.10]
	at co.paralleluniverse.fibers.Fiber.exec(Fiber.java:788) ~[quasar-core-0.7.10.jar:0.7.10]
	at co.paralleluniverse.fibers.RunnableFiberTask.doExec(RunnableFiberTask.java:100) ~[quasar-core-0.7.10.jar:0.7.10]
	at co.paralleluniverse.fibers.RunnableFiberTask.run(RunnableFiberTask.java:91) ~[quasar-core-0.7.10.jar:0.7.10]
	at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511) ~[?:1.8.0_202]
	at java.util.concurrent.FutureTask.run(FutureTask.java:266) ~[?:1.8.0_202]
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.access$201(ScheduledThreadPoolExecutor.java:180) ~[?:1.8.0_202]
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.run(ScheduledThreadPoolExecutor.java:293) ~[?:1.8.0_202]
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149) ~[?:1.8.0_202]
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624) ~[?:1.8.0_202]
	at net.corda.node.utilities.AffinityExecutor$ServiceAffinityExecutor$1$thread$1.run(AffinityExecutor.kt:63) ~[corda-node-4.9.jar:?]
[WARN ] 2023-01-31T07:08:34,172Z [Mock network] statemachine.ActionExecutorImpl. - Propagating error {fiber-id=10000029, flow-id=cae64fda-d94b-4030-8562-3cb8f97a87f1, invocation_id=e0c93ab2-f782-484f-a5df-68a019267e50, invocation_timestamp=2023-01-31T07:08:33.651Z, origin=O=Mock Company 1, L=London, C=GB, session_id=e0c93ab2-f782-484f-a5df-68a019267e50, session_timestamp=2023-01-31T07:08:33.651Z, thread-id=854, tx_id=0DFF1D65C786D2F8443A0291C9DD252856A4D061214F27B9FC98D7C999E3139E}
[WARN ] 2023-01-31T07:08:34,198Z [Mock network] interceptors.DumpHistoryOnErrorInterceptor. - Flow [cae64fda-d94b-4030-8562-3cb8f97a87f1] errored, dumping all transitions:

 --- Transition of flow [cae64fda-d94b-4030-8562-3cb8f97a87f1] ---
  Timestamp: 2023-01-31T07:08:33.655Z
  Event: DoRemainingWork
  Actions: 
    CreateTransaction
    PersistCheckpoint(id=[cae64fda-d94b-4030-8562-3cb8f97a87f1], checkpoint=Checkpoint(checkpointState=CheckpointState(invocationContext=InvocationContext(origin=Peer(party=O=Mock Company 1, L=London, C=GB), trace=Trace(invocationId=e0c93ab2-f782-484f-a5df-68a019267e50, timestamp: 2023-01-31T07:08:33.651Z, entityType: Invocation, sessionId=e0c93ab2-f782-484f-a5df-68a019267e50, timestamp: 2023-01-31T07:08:33.651Z, entityType: Session), actor=null, externalTrace=null, impersonatedActor=null, arguments=[], clientId=null), ourIdentity=O=Mock Company 3, L=London, C=GB, sessions={}, sessionsToBeClosed=[], subFlowStack=[Inlined(flowClass=class net.corda.samples.obligation.flows.IOUSettleFlowResponder, subFlowVersion=CorDappFlow(platformVersion=11, corDappName=workflows-1.0, corDappHash=C516E48A6E6E70A0AB3D8BD39F2350C2FEFECFE936F017EBB2142877462D44D3), isEnabledTimedFlow=false)], numberOfSuspends=0, numberOfCommits=1), flowState=Unstarted(flowStart=Initiated, frozenFlowLogic=196544859C8E8A8816B1C1A74BE7AE10B7C9A8C0020508321BAC2E5D19B67395), errorState=Clean, result=null, status=RUNNABLE, progressStep=null, flowIoRequest=null, compatible=true), isCheckpointUpdate=false)
    PersistDeduplicationFacts(deduplicationHandlers=[net.corda.testing.node.internal.MockNodeMessagingService$InMemoryDeduplicationHandler@61a057a9])
    CommitTransaction
    AcknowledgeMessages(deduplicationHandlers=[net.corda.testing.node.internal.MockNodeMessagingService$InMemoryDeduplicationHandler@61a057a9])
    SignalFlowHasStarted(flowId=[cae64fda-d94b-4030-8562-3cb8f97a87f1])
    SendExisting(peerParty=O=Mock Company 1, L=London, C=GB, message=ExistingSessionMessage(recipientSessionId=SessionId(toLong=-5366150003449329455), payload=ConfirmSessionMessage(initiatedSessionId=SessionId(toLong=-8071260149716765667), initiatedFlowInfo=FlowInfo(flowVersion=1, appName=<unknown>))), deduplicationId=SenderDeduplicationId(deduplicationId=DeduplicationId(toString=N-D--5366150003449329455--6169107910265396549-0-0), senderUUID=1409862b-8d98-4245-b5a4-db9f3ad49a64))
    CreateTransaction
  Continuation: Resume(result=null)
  Diff between previous and next state:
pendingDeduplicationHandlers: 
    [net.corda.testing.node.internal.MockNodeMessagingService$InMemoryDeduplicationHandler@61a057a9]
    []
checkpoint.checkpointState.sessions.SessionId(toLong=-8071260149716765667): 
    null
    Initiated(peerParty=O=Mock Company 1, L=London, C=GB, peerFlowInfo=FlowInfo(flowVersion=1, appName=<unknown>), receivedMessages=[DataSessionMessage(payload=class net.corda.core.serialization.SerializedBytes)], otherSideErrored=false, peerSinkSessionId=SessionId(toLong=-5366150003449329455), deduplicationSeed=D--5366150003449329455--6169107910265396549)
isAnyCheckpointPersisted: 
    false
    true
isFlowResumed: 
    false
    true


 --- Transition of flow [cae64fda-d94b-4030-8562-3cb8f97a87f1] ---
  Timestamp: 2023-01-31T07:08:33.657Z
  Event: EnterSubFlow(subFlowClass=class net.corda.samples.obligation.flows.IOUSettleFlowResponder$call$signedTransactionFlow$1, subFlowVersion=CoreFlow(platformVersion=11), isEnabledTimedFlow=false)
  Actions: 
    
  Continuation: ProcessEvents
  Diff between previous and next state:
checkpoint.checkpointState.subFlowStack: 
    [Inlined(flowClass=class net.corda.samples.obligation.flows.IOUSettleFlowResponder, subFlowVersion=CorDappFlow(platformVersion=11, corDappName=workflows-1.0, corDappHash=C516E48A6E6E70A0AB3D8BD39F2350C2FEFECFE936F017EBB2142877462D44D3), isEnabledTimedFlow=false)]
    [Inlined(flowClass=class net.corda.samples.obligation.flows.IOUSettleFlowResponder, subFlowVersion=CorDappFlow(platformVersion=11, corDappName=workflows-1.0, corDappHash=C516E48A6E6E70A0AB3D8BD39F2350C2FEFECFE936F017EBB2142877462D44D3), isEnabledTimedFlow=false), Inlined(flowClass=class net.corda.samples.obligation.flows.IOUSettleFlowResponder$call$signedTransactionFlow$1, subFlowVersion=CoreFlow(platformVersion=11), isEnabledTimedFlow=false)]
checkpoint.timestamp: 
    2023-01-31T07:08:33.652Z
    2023-01-31T07:08:33.657Z


 --- Transition of flow [cae64fda-d94b-4030-8562-3cb8f97a87f1] ---
  Timestamp: 2023-01-31T07:08:33.657Z
  Event: EnterSubFlow(subFlowClass=class net.corda.core.flows.ReceiveTransactionFlow, subFlowVersion=CoreFlow(platformVersion=11), isEnabledTimedFlow=false)
  Actions: 
    
  Continuation: ProcessEvents
  Diff between previous and next state:
checkpoint.checkpointState.subFlowStack: 
    [Inlined(flowClass=class net.corda.samples.obligation.flows.IOUSettleFlowResponder, subFlowVersion=CorDappFlow(platformVersion=11, corDappName=workflows-1.0, corDappHash=C516E48A6E6E70A0AB3D8BD39F2350C2FEFECFE936F017EBB2142877462D44D3), isEnabledTimedFlow=false), Inlined(flowClass=class net.corda.samples.obligation.flows.IOUSettleFlowResponder$call$signedTransactionFlow$1, subFlowVersion=CoreFlow(platformVersion=11), isEnabledTimedFlow=false)]
    [Inlined(flowClass=class net.corda.samples.obligation.flows.IOUSettleFlowResponder, subFlowVersion=CorDappFlow(platformVersion=11, corDappName=workflows-1.0, corDappHash=C516E48A6E6E70A0AB3D8BD39F2350C2FEFECFE936F017EBB2142877462D44D3), isEnabledTimedFlow=false), Inlined(flowClass=class net.corda.samples.obligation.flows.IOUSettleFlowResponder$call$signedTransactionFlow$1, subFlowVersion=CoreFlow(platformVersion=11), isEnabledTimedFlow=false), Inlined(flowClass=class net.corda.core.flows.ReceiveTransactionFlow, subFlowVersion=CoreFlow(platformVersion=11), isEnabledTimedFlow=false)]


 --- Transition of flow [cae64fda-d94b-4030-8562-3cb8f97a87f1] ---
  Timestamp: 2023-01-31T07:08:33.660Z
  Event: Suspend(ioRequest=Receive(sessions=[FlowSessionImpl(destination=O=Mock Company 1, L=London, C=GB, sourceSessionId=SessionId(toLong=-8071260149716765667))]), maySkipCheckpoint=false, fiber=01F97C5854E4136B1BE6310CF3DC3D48344B5CDA08A471B997DFB98CB59CE8A7, currentStep=Starting)
  Actions: 
    PersistCheckpoint(id=[cae64fda-d94b-4030-8562-3cb8f97a87f1], checkpoint=Checkpoint(checkpointState=CheckpointState(invocationContext=InvocationContext(origin=Peer(party=O=Mock Company 1, L=London, C=GB), trace=Trace(invocationId=e0c93ab2-f782-484f-a5df-68a019267e50, timestamp: 2023-01-31T07:08:33.651Z, entityType: Invocation, sessionId=e0c93ab2-f782-484f-a5df-68a019267e50, timestamp: 2023-01-31T07:08:33.651Z, entityType: Session), actor=null, externalTrace=null, impersonatedActor=null, arguments=[], clientId=null), ourIdentity=O=Mock Company 3, L=London, C=GB, sessions={SessionId(toLong=-8071260149716765667)=Initiated(peerParty=O=Mock Company 1, L=London, C=GB, peerFlowInfo=FlowInfo(flowVersion=1, appName=<unknown>), receivedMessages=[DataSessionMessage(payload=class net.corda.core.serialization.SerializedBytes)], otherSideErrored=false, peerSinkSessionId=SessionId(toLong=-5366150003449329455), deduplicationSeed=D--5366150003449329455--6169107910265396549)}, sessionsToBeClosed=[], subFlowStack=[Inlined(flowClass=class net.corda.samples.obligation.flows.IOUSettleFlowResponder, subFlowVersion=CorDappFlow(platformVersion=11, corDappName=workflows-1.0, corDappHash=C516E48A6E6E70A0AB3D8BD39F2350C2FEFECFE936F017EBB2142877462D44D3), isEnabledTimedFlow=false), Inlined(flowClass=class net.corda.samples.obligation.flows.IOUSettleFlowResponder$call$signedTransactionFlow$1, subFlowVersion=CoreFlow(platformVersion=11), isEnabledTimedFlow=false), Inlined(flowClass=class net.corda.core.flows.ReceiveTransactionFlow, subFlowVersion=CoreFlow(platformVersion=11), isEnabledTimedFlow=false)], numberOfSuspends=1, numberOfCommits=2), flowState=Started(flowIORequest=Receive(sessions=[FlowSessionImpl(destination=O=Mock Company 1, L=London, C=GB, sourceSessionId=SessionId(toLong=-8071260149716765667))]), frozenFiber=01F97C5854E4136B1BE6310CF3DC3D48344B5CDA08A471B997DFB98CB59CE8A7), errorState=Clean, result=null, status=RUNNABLE, progressStep=Starting, flowIoRequest=Receive, compatible=true), isCheckpointUpdate=true)
    PersistDeduplicationFacts(deduplicationHandlers=[])
    CommitTransaction
    AcknowledgeMessages(deduplicationHandlers=[])
    ScheduleEvent(event=DoRemainingWork)
  Continuation: ProcessEvents
  Diff between previous and next state:
checkpoint.progressStep: 
    null
    Starting
checkpoint.flowState: 
    Unstarted(flowStart=Initiated, frozenFlowLogic=196544859C8E8A8816B1C1A74BE7AE10B7C9A8C0020508321BAC2E5D19B67395)
    Started(flowIORequest=Receive(sessions=[FlowSessionImpl(destination=O=Mock Company 1, L=London, C=GB, sourceSessionId=SessionId(toLong=-8071260149716765667))]), frozenFiber=01F97C5854E4136B1BE6310CF3DC3D48344B5CDA08A471B997DFB98CB59CE8A7)
checkpoint.flowIoRequest: 
    null
    Receive
checkpoint.checkpointState.numberOfSuspends: 
    0
    1
checkpoint.checkpointState.numberOfCommits: 
    1
    2
checkpoint.timestamp: 
    2023-01-31T07:08:33.657Z
    2023-01-31T07:08:33.659Z
isFlowResumed: 
    true
    false
numberOfCommits: 
    0
    2


 --- Transition of flow [cae64fda-d94b-4030-8562-3cb8f97a87f1] ---
  Timestamp: 2023-01-31T07:08:33.660Z
  Event: DoRemainingWork
  Actions: 
    CreateTransaction
  Continuation: Resume(result=class java.util.LinkedHashMap)
  Diff between previous and next state:
checkpoint.checkpointState.sessions.SessionId(toLong=-8071260149716765667).receivedMessages.isEmpty: 
    false
    true
checkpoint.timestamp: 
    2023-01-31T07:08:33.659Z
    2023-01-31T07:08:33.660Z
isFlowResumed: 
    false
    true


 --- Transition of flow [cae64fda-d94b-4030-8562-3cb8f97a87f1] ---
  Timestamp: 2023-01-31T07:08:33.662Z
  Event: EnterSubFlow(subFlowClass=class net.corda.core.internal.ResolveTransactionsFlow, subFlowVersion=CoreFlow(platformVersion=11), isEnabledTimedFlow=false)
  Actions: 
    
  Continuation: ProcessEvents
  Diff between previous and next state:
checkpoint.checkpointState.subFlowStack: 
    [Inlined(flowClass=class net.corda.samples.obligation.flows.IOUSettleFlowResponder, subFlowVersion=CorDappFlow(platformVersion=11, corDappName=workflows-1.0, corDappHash=C516E48A6E6E70A0AB3D8BD39F2350C2FEFECFE936F017EBB2142877462D44D3), isEnabledTimedFlow=false), Inlined(flowClass=class net.corda.samples.obligation.flows.IOUSettleFlowResponder$call$signedTransactionFlow$1, subFlowVersion=CoreFlow(platformVersion=11), isEnabledTimedFlow=false), Inlined(flowClass=class net.corda.core.flows.ReceiveTransactionFlow, subFlowVersion=CoreFlow(platformVersion=11), isEnabledTimedFlow=false)]
    [Inlined(flowClass=class net.corda.samples.obligation.flows.IOUSettleFlowResponder, subFlowVersion=CorDappFlow(platformVersion=11, corDappName=workflows-1.0, corDappHash=C516E48A6E6E70A0AB3D8BD39F2350C2FEFECFE936F017EBB2142877462D44D3), isEnabledTimedFlow=false), Inlined(flowClass=class net.corda.samples.obligation.flows.IOUSettleFlowResponder$call$signedTransactionFlow$1, subFlowVersion=CoreFlow(platformVersion=11), isEnabledTimedFlow=false), Inlined(flowClass=class net.corda.core.flows.ReceiveTransactionFlow, subFlowVersion=CoreFlow(platformVersion=11), isEnabledTimedFlow=false), Inlined(flowClass=class net.corda.core.internal.ResolveTransactionsFlow, subFlowVersion=CoreFlow(platformVersion=11), isEnabledTimedFlow=false)]
checkpoint.timestamp: 
    2023-01-31T07:08:33.660Z
    2023-01-31T07:08:33.662Z


 --- Transition of flow [cae64fda-d94b-4030-8562-3cb8f97a87f1] ---
  Timestamp: 2023-01-31T07:08:33.662Z
  Event: EnterSubFlow(subFlowClass=class net.corda.core.internal.FetchAttachmentsFlow, subFlowVersion=CoreFlow(platformVersion=11), isEnabledTimedFlow=false)
  Actions: 
    
  Continuation: ProcessEvents
  Diff between previous and next state:
checkpoint.checkpointState.subFlowStack: 
    [Inlined(flowClass=class net.corda.samples.obligation.flows.IOUSettleFlowResponder, subFlowVersion=CorDappFlow(platformVersion=11, corDappName=workflows-1.0, corDappHash=C516E48A6E6E70A0AB3D8BD39F2350C2FEFECFE936F017EBB2142877462D44D3), isEnabledTimedFlow=false), Inlined(flowClass=class net.corda.samples.obligation.flows.IOUSettleFlowResponder$call$signedTransactionFlow$1, subFlowVersion=CoreFlow(platformVersion=11), isEnabledTimedFlow=false), Inlined(flowClass=class net.corda.core.flows.ReceiveTransactionFlow, subFlowVersion=CoreFlow(platformVersion=11), isEnabledTimedFlow=false), Inlined(flowClass=class net.corda.core.internal.ResolveTransactionsFlow, subFlowVersion=CoreFlow(platformVersion=11), isEnabledTimedFlow=false)]
    [Inlined(flowClass=class net.corda.samples.obligation.flows.IOUSettleFlowResponder, subFlowVersion=CorDappFlow(platformVersion=11, corDappName=workflows-1.0, corDappHash=C516E48A6E6E70A0AB3D8BD39F2350C2FEFECFE936F017EBB2142877462D44D3), isEnabledTimedFlow=false), Inlined(flowClass=class net.corda.samples.obligation.flows.IOUSettleFlowResponder$call$signedTransactionFlow$1, subFlowVersion=CoreFlow(platformVersion=11), isEnabledTimedFlow=false), Inlined(flowClass=class net.corda.core.flows.ReceiveTransactionFlow, subFlowVersion=CoreFlow(platformVersion=11), isEnabledTimedFlow=false), Inlined(flowClass=class net.corda.core.internal.ResolveTransactionsFlow, subFlowVersion=CoreFlow(platformVersion=11), isEnabledTimedFlow=false), Inlined(flowClass=class net.corda.core.internal.FetchAttachmentsFlow, subFlowVersion=CoreFlow(platformVersion=11), isEnabledTimedFlow=false)]


 --- Transition of flow [cae64fda-d94b-4030-8562-3cb8f97a87f1] ---
  Timestamp: 2023-01-31T07:08:33.664Z
  Event: LeaveSubFlow
  Actions: 
    
  Continuation: ProcessEvents
  Diff between previous and next state:
checkpoint.checkpointState.subFlowStack: 
    [Inlined(flowClass=class net.corda.samples.obligation.flows.IOUSettleFlowResponder, subFlowVersion=CorDappFlow(platformVersion=11, corDappName=workflows-1.0, corDappHash=C516E48A6E6E70A0AB3D8BD39F2350C2FEFECFE936F017EBB2142877462D44D3), isEnabledTimedFlow=false), Inlined(flowClass=class net.corda.samples.obligation.flows.IOUSettleFlowResponder$call$signedTransactionFlow$1, subFlowVersion=CoreFlow(platformVersion=11), isEnabledTimedFlow=false), Inlined(flowClass=class net.corda.core.flows.ReceiveTransactionFlow, subFlowVersion=CoreFlow(platformVersion=11), isEnabledTimedFlow=false), Inlined(flowClass=class net.corda.core.internal.ResolveTransactionsFlow, subFlowVersion=CoreFlow(platformVersion=11), isEnabledTimedFlow=false), Inlined(flowClass=class net.corda.core.internal.FetchAttachmentsFlow, subFlowVersion=CoreFlow(platformVersion=11), isEnabledTimedFlow=false)]
    [Inlined(flowClass=class net.corda.samples.obligation.flows.IOUSettleFlowResponder, subFlowVersion=CorDappFlow(platformVersion=11, corDappName=workflows-1.0, corDappHash=C516E48A6E6E70A0AB3D8BD39F2350C2FEFECFE936F017EBB2142877462D44D3), isEnabledTimedFlow=false), Inlined(flowClass=class net.corda.samples.obligation.flows.IOUSettleFlowResponder$call$signedTransactionFlow$1, subFlowVersion=CoreFlow(platformVersion=11), isEnabledTimedFlow=false), Inlined(flowClass=class net.corda.core.flows.ReceiveTransactionFlow, subFlowVersion=CoreFlow(platformVersion=11), isEnabledTimedFlow=false), Inlined(flowClass=class net.corda.core.internal.ResolveTransactionsFlow, subFlowVersion=CoreFlow(platformVersion=11), isEnabledTimedFlow=false)]
checkpoint.timestamp: 
    2023-01-31T07:08:33.662Z
    2023-01-31T07:08:33.664Z


 --- Transition of flow [cae64fda-d94b-4030-8562-3cb8f97a87f1] ---
  Timestamp: 2023-01-31T07:08:33.664Z
  Event: EnterSubFlow(subFlowClass=class net.corda.core.internal.FetchNetworkParametersFlow, subFlowVersion=CoreFlow(platformVersion=11), isEnabledTimedFlow=false)
  Actions: 
    
  Continuation: ProcessEvents
  Diff between previous and next state:
checkpoint.checkpointState.subFlowStack: 
    [Inlined(flowClass=class net.corda.samples.obligation.flows.IOUSettleFlowResponder, subFlowVersion=CorDappFlow(platformVersion=11, corDappName=workflows-1.0, corDappHash=C516E48A6E6E70A0AB3D8BD39F2350C2FEFECFE936F017EBB2142877462D44D3), isEnabledTimedFlow=false), Inlined(flowClass=class net.corda.samples.obligation.flows.IOUSettleFlowResponder$call$signedTransactionFlow$1, subFlowVersion=CoreFlow(platformVersion=11), isEnabledTimedFlow=false), Inlined(flowClass=class net.corda.core.flows.ReceiveTransactionFlow, subFlowVersion=CoreFlow(platformVersion=11), isEnabledTimedFlow=false), Inlined(flowClass=class net.corda.core.internal.ResolveTransactionsFlow, subFlowVersion=CoreFlow(platformVersion=11), isEnabledTimedFlow=false)]
    [Inlined(flowClass=class net.corda.samples.obligation.flows.IOUSettleFlowResponder, subFlowVersion=CorDappFlow(platformVersion=11, corDappName=workflows-1.0, corDappHash=C516E48A6E6E70A0AB3D8BD39F2350C2FEFECFE936F017EBB2142877462D44D3), isEnabledTimedFlow=false), Inlined(flowClass=class net.corda.samples.obligation.flows.IOUSettleFlowResponder$call$signedTransactionFlow$1, subFlowVersion=CoreFlow(platformVersion=11), isEnabledTimedFlow=false), Inlined(flowClass=class net.corda.core.flows.ReceiveTransactionFlow, subFlowVersion=CoreFlow(platformVersion=11), isEnabledTimedFlow=false), Inlined(flowClass=class net.corda.core.internal.ResolveTransactionsFlow, subFlowVersion=CoreFlow(platformVersion=11), isEnabledTimedFlow=false), Inlined(flowClass=class net.corda.core.internal.FetchNetworkParametersFlow, subFlowVersion=CoreFlow(platformVersion=11), isEnabledTimedFlow=false)]


 --- Transition of flow [cae64fda-d94b-4030-8562-3cb8f97a87f1] ---
  Timestamp: 2023-01-31T07:08:33.664Z
  Event: LeaveSubFlow
  Actions: 
    
  Continuation: ProcessEvents
  Diff between previous and next state:
checkpoint.checkpointState.subFlowStack: 
    [Inlined(flowClass=class net.corda.samples.obligation.flows.IOUSettleFlowResponder, subFlowVersion=CorDappFlow(platformVersion=11, corDappName=workflows-1.0, corDappHash=C516E48A6E6E70A0AB3D8BD39F2350C2FEFECFE936F017EBB2142877462D44D3), isEnabledTimedFlow=false), Inlined(flowClass=class net.corda.samples.obligation.flows.IOUSettleFlowResponder$call$signedTransactionFlow$1, subFlowVersion=CoreFlow(platformVersion=11), isEnabledTimedFlow=false), Inlined(flowClass=class net.corda.core.flows.ReceiveTransactionFlow, subFlowVersion=CoreFlow(platformVersion=11), isEnabledTimedFlow=false), Inlined(flowClass=class net.corda.core.internal.ResolveTransactionsFlow, subFlowVersion=CoreFlow(platformVersion=11), isEnabledTimedFlow=false), Inlined(flowClass=class net.corda.core.internal.FetchNetworkParametersFlow, subFlowVersion=CoreFlow(platformVersion=11), isEnabledTimedFlow=false)]
    [Inlined(flowClass=class net.corda.samples.obligation.flows.IOUSettleFlowResponder, subFlowVersion=CorDappFlow(platformVersion=11, corDappName=workflows-1.0, corDappHash=C516E48A6E6E70A0AB3D8BD39F2350C2FEFECFE936F017EBB2142877462D44D3), isEnabledTimedFlow=false), Inlined(flowClass=class net.corda.samples.obligation.flows.IOUSettleFlowResponder$call$signedTransactionFlow$1, subFlowVersion=CoreFlow(platformVersion=11), isEnabledTimedFlow=false), Inlined(flowClass=class net.corda.core.flows.ReceiveTransactionFlow, subFlowVersion=CoreFlow(platformVersion=11), isEnabledTimedFlow=false), Inlined(flowClass=class net.corda.core.internal.ResolveTransactionsFlow, subFlowVersion=CoreFlow(platformVersion=11), isEnabledTimedFlow=false)]


 --- Transition of flow [cae64fda-d94b-4030-8562-3cb8f97a87f1] ---
  Timestamp: 2023-01-31T07:08:33.664Z
  Event: EnterSubFlow(subFlowClass=class net.corda.core.internal.FetchTransactionsFlow, subFlowVersion=CoreFlow(platformVersion=11), isEnabledTimedFlow=false)
  Actions: 
    
  Continuation: ProcessEvents
  Diff between previous and next state:
checkpoint.checkpointState.subFlowStack: 
    [Inlined(flowClass=class net.corda.samples.obligation.flows.IOUSettleFlowResponder, subFlowVersion=CorDappFlow(platformVersion=11, corDappName=workflows-1.0, corDappHash=C516E48A6E6E70A0AB3D8BD39F2350C2FEFECFE936F017EBB2142877462D44D3), isEnabledTimedFlow=false), Inlined(flowClass=class net.corda.samples.obligation.flows.IOUSettleFlowResponder$call$signedTransactionFlow$1, subFlowVersion=CoreFlow(platformVersion=11), isEnabledTimedFlow=false), Inlined(flowClass=class net.corda.core.flows.ReceiveTransactionFlow, subFlowVersion=CoreFlow(platformVersion=11), isEnabledTimedFlow=false), Inlined(flowClass=class net.corda.core.internal.ResolveTransactionsFlow, subFlowVersion=CoreFlow(platformVersion=11), isEnabledTimedFlow=false)]
    [Inlined(flowClass=class net.corda.samples.obligation.flows.IOUSettleFlowResponder, subFlowVersion=CorDappFlow(platformVersion=11, corDappName=workflows-1.0, corDappHash=C516E48A6E6E70A0AB3D8BD39F2350C2FEFECFE936F017EBB2142877462D44D3), isEnabledTimedFlow=false), Inlined(flowClass=class net.corda.samples.obligation.flows.IOUSettleFlowResponder$call$signedTransactionFlow$1, subFlowVersion=CoreFlow(platformVersion=11), isEnabledTimedFlow=false), Inlined(flowClass=class net.corda.core.flows.ReceiveTransactionFlow, subFlowVersion=CoreFlow(platformVersion=11), isEnabledTimedFlow=false), Inlined(flowClass=class net.corda.core.internal.ResolveTransactionsFlow, subFlowVersion=CoreFlow(platformVersion=11), isEnabledTimedFlow=false), Inlined(flowClass=class net.corda.core.internal.FetchTransactionsFlow, subFlowVersion=CoreFlow(platformVersion=11), isEnabledTimedFlow=false)]


 --- Transition of flow [cae64fda-d94b-4030-8562-3cb8f97a87f1] ---
  Timestamp: 2023-01-31T07:08:33.669Z
  Event: Suspend(ioRequest=SendAndReceive({FlowSessionImpl(destination=O=Mock Company 1, L=London, C=GB, sourceSessionId=SessionId(toLong=-8071260149716765667))=FlowSessionImpl(destination=O=Mock Company 1, L=London, C=GB, sourceSessionId=SessionId(toLong=-8071260149716765667))=A25FEB112430F2052BD65A7DCDB081BAE787741CA98BB6B41269D4F5F4AEC37E}, shouldRetrySend=false), maySkipCheckpoint=false, fiber=8A72FFA5C7839E8569D5002EF8875C9710A818E43DD50AE6C4A7105CACAD9DB2, currentStep=Starting)
  Actions: 
    PersistCheckpoint(id=[cae64fda-d94b-4030-8562-3cb8f97a87f1], checkpoint=Checkpoint(checkpointState=CheckpointState(invocationContext=InvocationContext(origin=Peer(party=O=Mock Company 1, L=London, C=GB), trace=Trace(invocationId=e0c93ab2-f782-484f-a5df-68a019267e50, timestamp: 2023-01-31T07:08:33.651Z, entityType: Invocation, sessionId=e0c93ab2-f782-484f-a5df-68a019267e50, timestamp: 2023-01-31T07:08:33.651Z, entityType: Session), actor=null, externalTrace=null, impersonatedActor=null, arguments=[], clientId=null), ourIdentity=O=Mock Company 3, L=London, C=GB, sessions={SessionId(toLong=-8071260149716765667)=Initiated(peerParty=O=Mock Company 1, L=London, C=GB, peerFlowInfo=FlowInfo(flowVersion=1, appName=<unknown>), receivedMessages=[], otherSideErrored=false, peerSinkSessionId=SessionId(toLong=-5366150003449329455), deduplicationSeed=D--5366150003449329455--6169107910265396549)}, sessionsToBeClosed=[], subFlowStack=[Inlined(flowClass=class net.corda.samples.obligation.flows.IOUSettleFlowResponder, subFlowVersion=CorDappFlow(platformVersion=11, corDappName=workflows-1.0, corDappHash=C516E48A6E6E70A0AB3D8BD39F2350C2FEFECFE936F017EBB2142877462D44D3), isEnabledTimedFlow=false), Inlined(flowClass=class net.corda.samples.obligation.flows.IOUSettleFlowResponder$call$signedTransactionFlow$1, subFlowVersion=CoreFlow(platformVersion=11), isEnabledTimedFlow=false), Inlined(flowClass=class net.corda.core.flows.ReceiveTransactionFlow, subFlowVersion=CoreFlow(platformVersion=11), isEnabledTimedFlow=false), Inlined(flowClass=class net.corda.core.internal.ResolveTransactionsFlow, subFlowVersion=CoreFlow(platformVersion=11), isEnabledTimedFlow=false), Inlined(flowClass=class net.corda.core.internal.FetchTransactionsFlow, subFlowVersion=CoreFlow(platformVersion=11), isEnabledTimedFlow=false)], numberOfSuspends=2, numberOfCommits=3), flowState=Started(flowIORequest=SendAndReceive({FlowSessionImpl(destination=O=Mock Company 1, L=London, C=GB, sourceSessionId=SessionId(toLong=-8071260149716765667))=FlowSessionImpl(destination=O=Mock Company 1, L=London, C=GB, sourceSessionId=SessionId(toLong=-8071260149716765667))=A25FEB112430F2052BD65A7DCDB081BAE787741CA98BB6B41269D4F5F4AEC37E}, shouldRetrySend=false), frozenFiber=8A72FFA5C7839E8569D5002EF8875C9710A818E43DD50AE6C4A7105CACAD9DB2), errorState=Clean, result=null, status=RUNNABLE, progressStep=Starting, flowIoRequest=SendAndReceive, compatible=true), isCheckpointUpdate=true)
    PersistDeduplicationFacts(deduplicationHandlers=[])
    CommitTransaction
    AcknowledgeMessages(deduplicationHandlers=[])
    ScheduleEvent(event=DoRemainingWork)
  Continuation: ProcessEvents
  Diff between previous and next state:
checkpoint.flowState.flowIORequest: 
    Receive(sessions=[FlowSessionImpl(destination=O=Mock Company 1, L=London, C=GB, sourceSessionId=SessionId(toLong=-8071260149716765667))])
    SendAndReceive({FlowSessionImpl(destination=O=Mock Company 1, L=London, C=GB, sourceSessionId=SessionId(toLong=-8071260149716765667))=FlowSessionImpl(destination=O=Mock Company 1, L=London, C=GB, sourceSessionId=SessionId(toLong=-8071260149716765667))=A25FEB112430F2052BD65A7DCDB081BAE787741CA98BB6B41269D4F5F4AEC37E}, shouldRetrySend=false)
checkpoint.flowState.frozenFiber.hash: 
    01F97C5854E4136B1BE6310CF3DC3D48344B5CDA08A471B997DFB98CB59CE8A7
    8A72FFA5C7839E8569D5002EF8875C9710A818E43DD50AE6C4A7105CACAD9DB2
checkpoint.flowIoRequest: 
    Receive
    SendAndReceive
checkpoint.checkpointState.numberOfSuspends: 
    1
    2
checkpoint.checkpointState.numberOfCommits: 
    2
    3
checkpoint.timestamp: 
    2023-01-31T07:08:33.664Z
    2023-01-31T07:08:33.667Z
isFlowResumed: 
    true
    false
numberOfCommits: 
    2
    3


 --- Transition of flow [cae64fda-d94b-4030-8562-3cb8f97a87f1] ---
  Timestamp: 2023-01-31T07:08:33.670Z
  Event: DoRemainingWork
  Actions: 
    SendMultiple(sendInitial=[], sendExisting=[SendExisting(peerParty=O=Mock Company 1, L=London, C=GB, message=ExistingSessionMessage(recipientSessionId=SessionId(toLong=-5366150003449329455), payload=DataSessionMessage(payload=class net.corda.core.serialization.SerializedBytes)), deduplicationId=SenderDeduplicationId(deduplicationId=DeduplicationId(toString=N-D--5366150003449329455--6169107910265396549-2-0), senderUUID=1409862b-8d98-4245-b5a4-db9f3ad49a64))])
  Continuation: ProcessEvents
  Diff between previous and next state:
checkpoint.flowState.flowIORequest: 
    SendAndReceive({FlowSessionImpl(destination=O=Mock Company 1, L=London, C=GB, sourceSessionId=SessionId(toLong=-8071260149716765667))=FlowSessionImpl(destination=O=Mock Company 1, L=London, C=GB, sourceSessionId=SessionId(toLong=-8071260149716765667))=A25FEB112430F2052BD65A7DCDB081BAE787741CA98BB6B41269D4F5F4AEC37E}, shouldRetrySend=false)
    Receive(sessions=[FlowSessionImpl(destination=O=Mock Company 1, L=London, C=GB, sourceSessionId=SessionId(toLong=-8071260149716765667))])
checkpoint.timestamp: 
    2023-01-31T07:08:33.667Z
    2023-01-31T07:08:33.669Z


 --- Transition of flow [cae64fda-d94b-4030-8562-3cb8f97a87f1] ---
  Timestamp: 2023-01-31T07:08:33.680Z
  Event: DeliverSessionMessage(sessionMessage=ExistingSessionMessage(recipientSessionId=SessionId(toLong=-8071260149716765667), payload=DataSessionMessage(payload=class net.corda.core.serialization.SerializedBytes)), deduplicationHandler=net.corda.testing.node.internal.MockNodeMessagingService$InMemoryDeduplicationHandler@567e2425, sender=O=Mock Company 1, L=London, C=GB)
  Actions: 
    ScheduleEvent(event=DoRemainingWork)
  Continuation: ProcessEvents
  Diff between previous and next state:
pendingDeduplicationHandlers: 
    []
    [net.corda.testing.node.internal.MockNodeMessagingService$InMemoryDeduplicationHandler@567e2425]
checkpoint.checkpointState.sessions.SessionId(toLong=-8071260149716765667).receivedMessages.isEmpty: 
    true
    false
checkpoint.timestamp: 
    2023-01-31T07:08:33.669Z
    2023-01-31T07:08:33.680Z


 --- Transition of flow [cae64fda-d94b-4030-8562-3cb8f97a87f1] ---
  Timestamp: 2023-01-31T07:08:33.680Z
  Event: DoRemainingWork
  Actions: 
    CreateTransaction
  Continuation: Resume(result=class java.util.LinkedHashMap)
  Diff between previous and next state:
checkpoint.checkpointState.sessions.SessionId(toLong=-8071260149716765667).receivedMessages.isEmpty: 
    false
    true
isFlowResumed: 
    false
    true


 --- Transition of flow [cae64fda-d94b-4030-8562-3cb8f97a87f1] ---
  Timestamp: 2023-01-31T07:08:33.681Z
  Event: LeaveSubFlow
  Actions: 
    
  Continuation: ProcessEvents
  Diff between previous and next state:
checkpoint.checkpointState.subFlowStack: 
    [Inlined(flowClass=class net.corda.samples.obligation.flows.IOUSettleFlowResponder, subFlowVersion=CorDappFlow(platformVersion=11, corDappName=workflows-1.0, corDappHash=C516E48A6E6E70A0AB3D8BD39F2350C2FEFECFE936F017EBB2142877462D44D3), isEnabledTimedFlow=false), Inlined(flowClass=class net.corda.samples.obligation.flows.IOUSettleFlowResponder$call$signedTransactionFlow$1, subFlowVersion=CoreFlow(platformVersion=11), isEnabledTimedFlow=false), Inlined(flowClass=class net.corda.core.flows.ReceiveTransactionFlow, subFlowVersion=CoreFlow(platformVersion=11), isEnabledTimedFlow=false), Inlined(flowClass=class net.corda.core.internal.ResolveTransactionsFlow, subFlowVersion=CoreFlow(platformVersion=11), isEnabledTimedFlow=false), Inlined(flowClass=class net.corda.core.internal.FetchTransactionsFlow, subFlowVersion=CoreFlow(platformVersion=11), isEnabledTimedFlow=false)]
    [Inlined(flowClass=class net.corda.samples.obligation.flows.IOUSettleFlowResponder, subFlowVersion=CorDappFlow(platformVersion=11, corDappName=workflows-1.0, corDappHash=C516E48A6E6E70A0AB3D8BD39F2350C2FEFECFE936F017EBB2142877462D44D3), isEnabledTimedFlow=false), Inlined(flowClass=class net.corda.samples.obligation.flows.IOUSettleFlowResponder$call$signedTransactionFlow$1, subFlowVersion=CoreFlow(platformVersion=11), isEnabledTimedFlow=false), Inlined(flowClass=class net.corda.core.flows.ReceiveTransactionFlow, subFlowVersion=CoreFlow(platformVersion=11), isEnabledTimedFlow=false), Inlined(flowClass=class net.corda.core.internal.ResolveTransactionsFlow, subFlowVersion=CoreFlow(platformVersion=11), isEnabledTimedFlow=false)]
checkpoint.timestamp: 
    2023-01-31T07:08:33.680Z
    2023-01-31T07:08:33.681Z


 --- Transition of flow [cae64fda-d94b-4030-8562-3cb8f97a87f1] ---
  Timestamp: 2023-01-31T07:08:33.683Z
  Event: EnterSubFlow(subFlowClass=class net.corda.core.internal.FetchAttachmentsFlow, subFlowVersion=CoreFlow(platformVersion=11), isEnabledTimedFlow=false)
  Actions: 
    
  Continuation: ProcessEvents
  Diff between previous and next state:
checkpoint.checkpointState.subFlowStack: 
    [Inlined(flowClass=class net.corda.samples.obligation.flows.IOUSettleFlowResponder, subFlowVersion=CorDappFlow(platformVersion=11, corDappName=workflows-1.0, corDappHash=C516E48A6E6E70A0AB3D8BD39F2350C2FEFECFE936F017EBB2142877462D44D3), isEnabledTimedFlow=false), Inlined(flowClass=class net.corda.samples.obligation.flows.IOUSettleFlowResponder$call$signedTransactionFlow$1, subFlowVersion=CoreFlow(platformVersion=11), isEnabledTimedFlow=false), Inlined(flowClass=class net.corda.core.flows.ReceiveTransactionFlow, subFlowVersion=CoreFlow(platformVersion=11), isEnabledTimedFlow=false), Inlined(flowClass=class net.corda.core.internal.ResolveTransactionsFlow, subFlowVersion=CoreFlow(platformVersion=11), isEnabledTimedFlow=false)]
    [Inlined(flowClass=class net.corda.samples.obligation.flows.IOUSettleFlowResponder, subFlowVersion=CorDappFlow(platformVersion=11, corDappName=workflows-1.0, corDappHash=C516E48A6E6E70A0AB3D8BD39F2350C2FEFECFE936F017EBB2142877462D44D3), isEnabledTimedFlow=false), Inlined(flowClass=class net.corda.samples.obligation.flows.IOUSettleFlowResponder$call$signedTransactionFlow$1, subFlowVersion=CoreFlow(platformVersion=11), isEnabledTimedFlow=false), Inlined(flowClass=class net.corda.core.flows.ReceiveTransactionFlow, subFlowVersion=CoreFlow(platformVersion=11), isEnabledTimedFlow=false), Inlined(flowClass=class net.corda.core.internal.ResolveTransactionsFlow, subFlowVersion=CoreFlow(platformVersion=11), isEnabledTimedFlow=false), Inlined(flowClass=class net.corda.core.internal.FetchAttachmentsFlow, subFlowVersion=CoreFlow(platformVersion=11), isEnabledTimedFlow=false)]
checkpoint.timestamp: 
    2023-01-31T07:08:33.681Z
    2023-01-31T07:08:33.683Z


 --- Transition of flow [cae64fda-d94b-4030-8562-3cb8f97a87f1] ---
  Timestamp: 2023-01-31T07:08:33.683Z
  Event: LeaveSubFlow
  Actions: 
    
  Continuation: ProcessEvents
  Diff between previous and next state:
checkpoint.checkpointState.subFlowStack: 
    [Inlined(flowClass=class net.corda.samples.obligation.flows.IOUSettleFlowResponder, subFlowVersion=CorDappFlow(platformVersion=11, corDappName=workflows-1.0, corDappHash=C516E48A6E6E70A0AB3D8BD39F2350C2FEFECFE936F017EBB2142877462D44D3), isEnabledTimedFlow=false), Inlined(flowClass=class net.corda.samples.obligation.flows.IOUSettleFlowResponder$call$signedTransactionFlow$1, subFlowVersion=CoreFlow(platformVersion=11), isEnabledTimedFlow=false), Inlined(flowClass=class net.corda.core.flows.ReceiveTransactionFlow, subFlowVersion=CoreFlow(platformVersion=11), isEnabledTimedFlow=false), Inlined(flowClass=class net.corda.core.internal.ResolveTransactionsFlow, subFlowVersion=CoreFlow(platformVersion=11), isEnabledTimedFlow=false), Inlined(flowClass=class net.corda.core.internal.FetchAttachmentsFlow, subFlowVersion=CoreFlow(platformVersion=11), isEnabledTimedFlow=false)]
    [Inlined(flowClass=class net.corda.samples.obligation.flows.IOUSettleFlowResponder, subFlowVersion=CorDappFlow(platformVersion=11, corDappName=workflows-1.0, corDappHash=C516E48A6E6E70A0AB3D8BD39F2350C2FEFECFE936F017EBB2142877462D44D3), isEnabledTimedFlow=false), Inlined(flowClass=class net.corda.samples.obligation.flows.IOUSettleFlowResponder$call$signedTransactionFlow$1, subFlowVersion=CoreFlow(platformVersion=11), isEnabledTimedFlow=false), Inlined(flowClass=class net.corda.core.flows.ReceiveTransactionFlow, subFlowVersion=CoreFlow(platformVersion=11), isEnabledTimedFlow=false), Inlined(flowClass=class net.corda.core.internal.ResolveTransactionsFlow, subFlowVersion=CoreFlow(platformVersion=11), isEnabledTimedFlow=false)]


 --- Transition of flow [cae64fda-d94b-4030-8562-3cb8f97a87f1] ---
  Timestamp: 2023-01-31T07:08:33.683Z
  Event: EnterSubFlow(subFlowClass=class net.corda.core.internal.FetchNetworkParametersFlow, subFlowVersion=CoreFlow(platformVersion=11), isEnabledTimedFlow=false)
  Actions: 
    
  Continuation: ProcessEvents
  Diff between previous and next state:
checkpoint.checkpointState.subFlowStack: 
    [Inlined(flowClass=class net.corda.samples.obligation.flows.IOUSettleFlowResponder, subFlowVersion=CorDappFlow(platformVersion=11, corDappName=workflows-1.0, corDappHash=C516E48A6E6E70A0AB3D8BD39F2350C2FEFECFE936F017EBB2142877462D44D3), isEnabledTimedFlow=false), Inlined(flowClass=class net.corda.samples.obligation.flows.IOUSettleFlowResponder$call$signedTransactionFlow$1, subFlowVersion=CoreFlow(platformVersion=11), isEnabledTimedFlow=false), Inlined(flowClass=class net.corda.core.flows.ReceiveTransactionFlow, subFlowVersion=CoreFlow(platformVersion=11), isEnabledTimedFlow=false), Inlined(flowClass=class net.corda.core.internal.ResolveTransactionsFlow, subFlowVersion=CoreFlow(platformVersion=11), isEnabledTimedFlow=false)]
    [Inlined(flowClass=class net.corda.samples.obligation.flows.IOUSettleFlowResponder, subFlowVersion=CorDappFlow(platformVersion=11, corDappName=workflows-1.0, corDappHash=C516E48A6E6E70A0AB3D8BD39F2350C2FEFECFE936F017EBB2142877462D44D3), isEnabledTimedFlow=false), Inlined(flowClass=class net.corda.samples.obligation.flows.IOUSettleFlowResponder$call$signedTransactionFlow$1, subFlowVersion=CoreFlow(platformVersion=11), isEnabledTimedFlow=false), Inlined(flowClass=class net.corda.core.flows.ReceiveTransactionFlow, subFlowVersion=CoreFlow(platformVersion=11), isEnabledTimedFlow=false), Inlined(flowClass=class net.corda.core.internal.ResolveTransactionsFlow, subFlowVersion=CoreFlow(platformVersion=11), isEnabledTimedFlow=false), Inlined(flowClass=class net.corda.core.internal.FetchNetworkParametersFlow, subFlowVersion=CoreFlow(platformVersion=11), isEnabledTimedFlow=false)]


 --- Transition of flow [cae64fda-d94b-4030-8562-3cb8f97a87f1] ---
  Timestamp: 2023-01-31T07:08:33.683Z
  Event: LeaveSubFlow
  Actions: 
    
  Continuation: ProcessEvents
  Diff between previous and next state:
checkpoint.checkpointState.subFlowStack: 
    [Inlined(flowClass=class net.corda.samples.obligation.flows.IOUSettleFlowResponder, subFlowVersion=CorDappFlow(platformVersion=11, corDappName=workflows-1.0, corDappHash=C516E48A6E6E70A0AB3D8BD39F2350C2FEFECFE936F017EBB2142877462D44D3), isEnabledTimedFlow=false), Inlined(flowClass=class net.corda.samples.obligation.flows.IOUSettleFlowResponder$call$signedTransactionFlow$1, subFlowVersion=CoreFlow(platformVersion=11), isEnabledTimedFlow=false), Inlined(flowClass=class net.corda.core.flows.ReceiveTransactionFlow, subFlowVersion=CoreFlow(platformVersion=11), isEnabledTimedFlow=false), Inlined(flowClass=class net.corda.core.internal.ResolveTransactionsFlow, subFlowVersion=CoreFlow(platformVersion=11), isEnabledTimedFlow=false), Inlined(flowClass=class net.corda.core.internal.FetchNetworkParametersFlow, subFlowVersion=CoreFlow(platformVersion=11), isEnabledTimedFlow=false)]
    [Inlined(flowClass=class net.corda.samples.obligation.flows.IOUSettleFlowResponder, subFlowVersion=CorDappFlow(platformVersion=11, corDappName=workflows-1.0, corDappHash=C516E48A6E6E70A0AB3D8BD39F2350C2FEFECFE936F017EBB2142877462D44D3), isEnabledTimedFlow=false), Inlined(flowClass=class net.corda.samples.obligation.flows.IOUSettleFlowResponder$call$signedTransactionFlow$1, subFlowVersion=CoreFlow(platformVersion=11), isEnabledTimedFlow=false), Inlined(flowClass=class net.corda.core.flows.ReceiveTransactionFlow, subFlowVersion=CoreFlow(platformVersion=11), isEnabledTimedFlow=false), Inlined(flowClass=class net.corda.core.internal.ResolveTransactionsFlow, subFlowVersion=CoreFlow(platformVersion=11), isEnabledTimedFlow=false)]


 --- Transition of flow [cae64fda-d94b-4030-8562-3cb8f97a87f1] ---
  Timestamp: 2023-01-31T07:08:33.686Z
  Event: Suspend(ioRequest=Sleep(wakeUpAfter=2023-01-31T07:08:33.683Z), maySkipCheckpoint=false, fiber=40C2DBFAC1CEB6FAB4123A0EEFE0551810A647DEA76F7BFAE33AAB58D71A6561, currentStep=Starting)
  Actions: 
    PersistCheckpoint(id=[cae64fda-d94b-4030-8562-3cb8f97a87f1], checkpoint=Checkpoint(checkpointState=CheckpointState(invocationContext=InvocationContext(origin=Peer(party=O=Mock Company 1, L=London, C=GB), trace=Trace(invocationId=e0c93ab2-f782-484f-a5df-68a019267e50, timestamp: 2023-01-31T07:08:33.651Z, entityType: Invocation, sessionId=e0c93ab2-f782-484f-a5df-68a019267e50, timestamp: 2023-01-31T07:08:33.651Z, entityType: Session), actor=null, externalTrace=null, impersonatedActor=null, arguments=[], clientId=null), ourIdentity=O=Mock Company 3, L=London, C=GB, sessions={SessionId(toLong=-8071260149716765667)=Initiated(peerParty=O=Mock Company 1, L=London, C=GB, peerFlowInfo=FlowInfo(flowVersion=1, appName=<unknown>), receivedMessages=[], otherSideErrored=false, peerSinkSessionId=SessionId(toLong=-5366150003449329455), deduplicationSeed=D--5366150003449329455--6169107910265396549)}, sessionsToBeClosed=[], subFlowStack=[Inlined(flowClass=class net.corda.samples.obligation.flows.IOUSettleFlowResponder, subFlowVersion=CorDappFlow(platformVersion=11, corDappName=workflows-1.0, corDappHash=C516E48A6E6E70A0AB3D8BD39F2350C2FEFECFE936F017EBB2142877462D44D3), isEnabledTimedFlow=false), Inlined(flowClass=class net.corda.samples.obligation.flows.IOUSettleFlowResponder$call$signedTransactionFlow$1, subFlowVersion=CoreFlow(platformVersion=11), isEnabledTimedFlow=false), Inlined(flowClass=class net.corda.core.flows.ReceiveTransactionFlow, subFlowVersion=CoreFlow(platformVersion=11), isEnabledTimedFlow=false), Inlined(flowClass=class net.corda.core.internal.ResolveTransactionsFlow, subFlowVersion=CoreFlow(platformVersion=11), isEnabledTimedFlow=false)], numberOfSuspends=3, numberOfCommits=4), flowState=Started(flowIORequest=Sleep(wakeUpAfter=2023-01-31T07:08:33.683Z), frozenFiber=40C2DBFAC1CEB6FAB4123A0EEFE0551810A647DEA76F7BFAE33AAB58D71A6561), errorState=Clean, result=null, status=RUNNABLE, progressStep=Starting, flowIoRequest=Sleep, compatible=true), isCheckpointUpdate=true)
    PersistDeduplicationFacts(deduplicationHandlers=[net.corda.testing.node.internal.MockNodeMessagingService$InMemoryDeduplicationHandler@567e2425])
    CommitTransaction
    AcknowledgeMessages(deduplicationHandlers=[net.corda.testing.node.internal.MockNodeMessagingService$InMemoryDeduplicationHandler@567e2425])
    ScheduleEvent(event=DoRemainingWork)
  Continuation: ProcessEvents
  Diff between previous and next state:
pendingDeduplicationHandlers: 
    [net.corda.testing.node.internal.MockNodeMessagingService$InMemoryDeduplicationHandler@567e2425]
    []
checkpoint.flowState.flowIORequest: 
    Receive(sessions=[FlowSessionImpl(destination=O=Mock Company 1, L=London, C=GB, sourceSessionId=SessionId(toLong=-8071260149716765667))])
    Sleep(wakeUpAfter=2023-01-31T07:08:33.683Z)
checkpoint.flowState.frozenFiber.hash: 
    8A72FFA5C7839E8569D5002EF8875C9710A818E43DD50AE6C4A7105CACAD9DB2
    40C2DBFAC1CEB6FAB4123A0EEFE0551810A647DEA76F7BFAE33AAB58D71A6561
checkpoint.flowIoRequest: 
    SendAndReceive
    Sleep
checkpoint.checkpointState.numberOfSuspends: 
    2
    3
checkpoint.checkpointState.numberOfCommits: 
    3
    4
checkpoint.timestamp: 
    2023-01-31T07:08:33.683Z
    2023-01-31T07:08:33.684Z
isFlowResumed: 
    true
    false
numberOfCommits: 
    3
    4


 --- Transition of flow [cae64fda-d94b-4030-8562-3cb8f97a87f1] ---
  Timestamp: 2023-01-31T07:08:33.686Z
  Event: DoRemainingWork
  Actions: 
    SleepUntil(currentState=StateMachineState(checkpoint=Checkpoint(checkpointState=CheckpointState(invocationContext=InvocationContext(origin=Peer(party=O=Mock Company 1, L=London, C=GB), trace=Trace(invocationId=e0c93ab2-f782-484f-a5df-68a019267e50, timestamp: 2023-01-31T07:08:33.651Z, entityType: Invocation, sessionId=e0c93ab2-f782-484f-a5df-68a019267e50, timestamp: 2023-01-31T07:08:33.651Z, entityType: Session), actor=null, externalTrace=null, impersonatedActor=null, arguments=[], clientId=null), ourIdentity=O=Mock Company 3, L=London, C=GB, sessions={SessionId(toLong=-8071260149716765667)=Initiated(peerParty=O=Mock Company 1, L=London, C=GB, peerFlowInfo=FlowInfo(flowVersion=1, appName=<unknown>), receivedMessages=[], otherSideErrored=false, peerSinkSessionId=SessionId(toLong=-5366150003449329455), deduplicationSeed=D--5366150003449329455--6169107910265396549)}, sessionsToBeClosed=[], subFlowStack=[Inlined(flowClass=class net.corda.samples.obligation.flows.IOUSettleFlowResponder, subFlowVersion=CorDappFlow(platformVersion=11, corDappName=workflows-1.0, corDappHash=C516E48A6E6E70A0AB3D8BD39F2350C2FEFECFE936F017EBB2142877462D44D3), isEnabledTimedFlow=false), Inlined(flowClass=class net.corda.samples.obligation.flows.IOUSettleFlowResponder$call$signedTransactionFlow$1, subFlowVersion=CoreFlow(platformVersion=11), isEnabledTimedFlow=false), Inlined(flowClass=class net.corda.core.flows.ReceiveTransactionFlow, subFlowVersion=CoreFlow(platformVersion=11), isEnabledTimedFlow=false), Inlined(flowClass=class net.corda.core.internal.ResolveTransactionsFlow, subFlowVersion=CoreFlow(platformVersion=11), isEnabledTimedFlow=false)], numberOfSuspends=3, numberOfCommits=4), flowState=Started(flowIORequest=Sleep(wakeUpAfter=2023-01-31T07:08:33.683Z), frozenFiber=40C2DBFAC1CEB6FAB4123A0EEFE0551810A647DEA76F7BFAE33AAB58D71A6561), errorState=Clean, result=null, status=RUNNABLE, progressStep=Starting, flowIoRequest=Sleep, compatible=true), flowLogic=net.corda.samples.obligation.flows.IOUSettleFlowResponder@6f79453b, pendingDeduplicationHandlers=[], isFlowResumed=false, isWaitingForFuture=true, future=java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask@1a1e302a, isAnyCheckpointPersisted=true, isStartIdempotent=false, isRemoved=false, isKilled=false, isDead=false, senderUUID=1409862b-8d98-4245-b5a4-db9f3ad49a64, reloadCheckpointAfterSuspendCount=null, numberOfCommits=4, lock=java.util.concurrent.Semaphore@15bb32e2[Permits = 0]), time=2023-01-31T07:08:33.683Z)
  Continuation: ProcessEvents
  Diff between previous and next state:
future: 
    null
    java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask@1a1e302a
isWaitingForFuture: 
    false
    true


 --- Transition of flow [cae64fda-d94b-4030-8562-3cb8f97a87f1] ---
  Timestamp: 2023-01-31T07:08:33.687Z
  Event: WakeUpSleepyFlow
  Actions: 
    CreateTransaction
  Continuation: Resume(result=class kotlin.Unit)
  Diff between previous and next state:
isFlowResumed: 
    false
    true
future: 
    java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask@1a1e302a
    null
isWaitingForFuture: 
    true
    false


 --- Transition of flow [cae64fda-d94b-4030-8562-3cb8f97a87f1] ---
  Timestamp: 2023-01-31T07:08:33.687Z
  Event: EnterSubFlow(subFlowClass=class net.corda.core.internal.FetchTransactionsFlow, subFlowVersion=CoreFlow(platformVersion=11), isEnabledTimedFlow=false)
  Actions: 
    
  Continuation: ProcessEvents
  Diff between previous and next state:
checkpoint.checkpointState.subFlowStack: 
    [Inlined(flowClass=class net.corda.samples.obligation.flows.IOUSettleFlowResponder, subFlowVersion=CorDappFlow(platformVersion=11, corDappName=workflows-1.0, corDappHash=C516E48A6E6E70A0AB3D8BD39F2350C2FEFECFE936F017EBB2142877462D44D3), isEnabledTimedFlow=false), Inlined(flowClass=class net.corda.samples.obligation.flows.IOUSettleFlowResponder$call$signedTransactionFlow$1, subFlowVersion=CoreFlow(platformVersion=11), isEnabledTimedFlow=false), Inlined(flowClass=class net.corda.core.flows.ReceiveTransactionFlow, subFlowVersion=CoreFlow(platformVersion=11), isEnabledTimedFlow=false), Inlined(flowClass=class net.corda.core.internal.ResolveTransactionsFlow, subFlowVersion=CoreFlow(platformVersion=11), isEnabledTimedFlow=false)]
    [Inlined(flowClass=class net.corda.samples.obligation.flows.IOUSettleFlowResponder, subFlowVersion=CorDappFlow(platformVersion=11, corDappName=workflows-1.0, corDappHash=C516E48A6E6E70A0AB3D8BD39F2350C2FEFECFE936F017EBB2142877462D44D3), isEnabledTimedFlow=false), Inlined(flowClass=class net.corda.samples.obligation.flows.IOUSettleFlowResponder$call$signedTransactionFlow$1, subFlowVersion=CoreFlow(platformVersion=11), isEnabledTimedFlow=false), Inlined(flowClass=class net.corda.core.flows.ReceiveTransactionFlow, subFlowVersion=CoreFlow(platformVersion=11), isEnabledTimedFlow=false), Inlined(flowClass=class net.corda.core.internal.ResolveTransactionsFlow, subFlowVersion=CoreFlow(platformVersion=11), isEnabledTimedFlow=false), Inlined(flowClass=class net.corda.core.internal.FetchTransactionsFlow, subFlowVersion=CoreFlow(platformVersion=11), isEnabledTimedFlow=false)]
checkpoint.timestamp: 
    2023-01-31T07:08:33.684Z
    2023-01-31T07:08:33.687Z


 --- Transition of flow [cae64fda-d94b-4030-8562-3cb8f97a87f1] ---
  Timestamp: 2023-01-31T07:08:33.687Z
  Event: LeaveSubFlow
  Actions: 
    
  Continuation: ProcessEvents
  Diff between previous and next state:
checkpoint.checkpointState.subFlowStack: 
    [Inlined(flowClass=class net.corda.samples.obligation.flows.IOUSettleFlowResponder, subFlowVersion=CorDappFlow(platformVersion=11, corDappName=workflows-1.0, corDappHash=C516E48A6E6E70A0AB3D8BD39F2350C2FEFECFE936F017EBB2142877462D44D3), isEnabledTimedFlow=false), Inlined(flowClass=class net.corda.samples.obligation.flows.IOUSettleFlowResponder$call$signedTransactionFlow$1, subFlowVersion=CoreFlow(platformVersion=11), isEnabledTimedFlow=false), Inlined(flowClass=class net.corda.core.flows.ReceiveTransactionFlow, subFlowVersion=CoreFlow(platformVersion=11), isEnabledTimedFlow=false), Inlined(flowClass=class net.corda.core.internal.ResolveTransactionsFlow, subFlowVersion=CoreFlow(platformVersion=11), isEnabledTimedFlow=false), Inlined(flowClass=class net.corda.core.internal.FetchTransactionsFlow, subFlowVersion=CoreFlow(platformVersion=11), isEnabledTimedFlow=false)]
    [Inlined(flowClass=class net.corda.samples.obligation.flows.IOUSettleFlowResponder, subFlowVersion=CorDappFlow(platformVersion=11, corDappName=workflows-1.0, corDappHash=C516E48A6E6E70A0AB3D8BD39F2350C2FEFECFE936F017EBB2142877462D44D3), isEnabledTimedFlow=false), Inlined(flowClass=class net.corda.samples.obligation.flows.IOUSettleFlowResponder$call$signedTransactionFlow$1, subFlowVersion=CoreFlow(platformVersion=11), isEnabledTimedFlow=false), Inlined(flowClass=class net.corda.core.flows.ReceiveTransactionFlow, subFlowVersion=CoreFlow(platformVersion=11), isEnabledTimedFlow=false), Inlined(flowClass=class net.corda.core.internal.ResolveTransactionsFlow, subFlowVersion=CoreFlow(platformVersion=11), isEnabledTimedFlow=false)]


 --- Transition of flow [cae64fda-d94b-4030-8562-3cb8f97a87f1] ---
  Timestamp: 2023-01-31T07:08:33.691Z
  Event: Suspend(ioRequest=Send(sessionToMessage={FlowSessionImpl(destination=O=Mock Company 1, L=London, C=GB, sourceSessionId=SessionId(toLong=-8071260149716765667))=768AED61FD2A58D74D7316731407E0600065080E1F3E6397EE4FA5AEFEE79295}), maySkipCheckpoint=false, fiber=F72C58F6559F84A300596291A0ED1B407B3C4B04A14C0E2206F5AD0A707B0DDA, currentStep=Starting)
  Actions: 
    PersistCheckpoint(id=[cae64fda-d94b-4030-8562-3cb8f97a87f1], checkpoint=Checkpoint(checkpointState=CheckpointState(invocationContext=InvocationContext(origin=Peer(party=O=Mock Company 1, L=London, C=GB), trace=Trace(invocationId=e0c93ab2-f782-484f-a5df-68a019267e50, timestamp: 2023-01-31T07:08:33.651Z, entityType: Invocation, sessionId=e0c93ab2-f782-484f-a5df-68a019267e50, timestamp: 2023-01-31T07:08:33.651Z, entityType: Session), actor=null, externalTrace=null, impersonatedActor=null, arguments=[], clientId=null), ourIdentity=O=Mock Company 3, L=London, C=GB, sessions={SessionId(toLong=-8071260149716765667)=Initiated(peerParty=O=Mock Company 1, L=London, C=GB, peerFlowInfo=FlowInfo(flowVersion=1, appName=<unknown>), receivedMessages=[], otherSideErrored=false, peerSinkSessionId=SessionId(toLong=-5366150003449329455), deduplicationSeed=D--5366150003449329455--6169107910265396549)}, sessionsToBeClosed=[], subFlowStack=[Inlined(flowClass=class net.corda.samples.obligation.flows.IOUSettleFlowResponder, subFlowVersion=CorDappFlow(platformVersion=11, corDappName=workflows-1.0, corDappHash=C516E48A6E6E70A0AB3D8BD39F2350C2FEFECFE936F017EBB2142877462D44D3), isEnabledTimedFlow=false), Inlined(flowClass=class net.corda.samples.obligation.flows.IOUSettleFlowResponder$call$signedTransactionFlow$1, subFlowVersion=CoreFlow(platformVersion=11), isEnabledTimedFlow=false), Inlined(flowClass=class net.corda.core.flows.ReceiveTransactionFlow, subFlowVersion=CoreFlow(platformVersion=11), isEnabledTimedFlow=false), Inlined(flowClass=class net.corda.core.internal.ResolveTransactionsFlow, subFlowVersion=CoreFlow(platformVersion=11), isEnabledTimedFlow=false)], numberOfSuspends=4, numberOfCommits=5), flowState=Started(flowIORequest=Send(sessionToMessage={FlowSessionImpl(destination=O=Mock Company 1, L=London, C=GB, sourceSessionId=SessionId(toLong=-8071260149716765667))=768AED61FD2A58D74D7316731407E0600065080E1F3E6397EE4FA5AEFEE79295}), frozenFiber=F72C58F6559F84A300596291A0ED1B407B3C4B04A14C0E2206F5AD0A707B0DDA), errorState=Clean, result=null, status=RUNNABLE, progressStep=Starting, flowIoRequest=Send, compatible=true), isCheckpointUpdate=true)
    PersistDeduplicationFacts(deduplicationHandlers=[])
    CommitTransaction
    AcknowledgeMessages(deduplicationHandlers=[])
    ScheduleEvent(event=DoRemainingWork)
  Continuation: ProcessEvents
  Diff between previous and next state:
checkpoint.flowState.flowIORequest: 
    Sleep(wakeUpAfter=2023-01-31T07:08:33.683Z)
    Send(sessionToMessage={FlowSessionImpl(destination=O=Mock Company 1, L=London, C=GB, sourceSessionId=SessionId(toLong=-8071260149716765667))=768AED61FD2A58D74D7316731407E0600065080E1F3E6397EE4FA5AEFEE79295})
checkpoint.flowState.frozenFiber.hash: 
    40C2DBFAC1CEB6FAB4123A0EEFE0551810A647DEA76F7BFAE33AAB58D71A6561
    F72C58F6559F84A300596291A0ED1B407B3C4B04A14C0E2206F5AD0A707B0DDA
checkpoint.flowIoRequest: 
    Sleep
    Send
checkpoint.checkpointState.numberOfSuspends: 
    3
    4
checkpoint.checkpointState.numberOfCommits: 
    4
    5
checkpoint.timestamp: 
    2023-01-31T07:08:33.687Z
    2023-01-31T07:08:33.690Z
isFlowResumed: 
    true
    false
numberOfCommits: 
    4
    5


 --- Transition of flow [cae64fda-d94b-4030-8562-3cb8f97a87f1] ---
  Timestamp: 2023-01-31T07:08:33.691Z
  Event: DoRemainingWork
  Actions: 
    SendMultiple(sendInitial=[], sendExisting=[SendExisting(peerParty=O=Mock Company 1, L=London, C=GB, message=ExistingSessionMessage(recipientSessionId=SessionId(toLong=-5366150003449329455), payload=DataSessionMessage(payload=class net.corda.core.serialization.SerializedBytes)), deduplicationId=SenderDeduplicationId(deduplicationId=DeduplicationId(toString=N-D--5366150003449329455--6169107910265396549-4-0), senderUUID=1409862b-8d98-4245-b5a4-db9f3ad49a64))])
    CreateTransaction
  Continuation: Resume(result=class kotlin.Unit)
  Diff between previous and next state:
isFlowResumed: 
    false
    true


 --- Transition of flow [cae64fda-d94b-4030-8562-3cb8f97a87f1] ---
  Timestamp: 2023-01-31T07:08:33.922Z
  Event: LeaveSubFlow
  Actions: 
    
  Continuation: ProcessEvents
  Diff between previous and next state:
checkpoint.checkpointState.subFlowStack: 
    [Inlined(flowClass=class net.corda.samples.obligation.flows.IOUSettleFlowResponder, subFlowVersion=CorDappFlow(platformVersion=11, corDappName=workflows-1.0, corDappHash=C516E48A6E6E70A0AB3D8BD39F2350C2FEFECFE936F017EBB2142877462D44D3), isEnabledTimedFlow=false), Inlined(flowClass=class net.corda.samples.obligation.flows.IOUSettleFlowResponder$call$signedTransactionFlow$1, subFlowVersion=CoreFlow(platformVersion=11), isEnabledTimedFlow=false), Inlined(flowClass=class net.corda.core.flows.ReceiveTransactionFlow, subFlowVersion=CoreFlow(platformVersion=11), isEnabledTimedFlow=false), Inlined(flowClass=class net.corda.core.internal.ResolveTransactionsFlow, subFlowVersion=CoreFlow(platformVersion=11), isEnabledTimedFlow=false)]
    [Inlined(flowClass=class net.corda.samples.obligation.flows.IOUSettleFlowResponder, subFlowVersion=CorDappFlow(platformVersion=11, corDappName=workflows-1.0, corDappHash=C516E48A6E6E70A0AB3D8BD39F2350C2FEFECFE936F017EBB2142877462D44D3), isEnabledTimedFlow=false), Inlined(flowClass=class net.corda.samples.obligation.flows.IOUSettleFlowResponder$call$signedTransactionFlow$1, subFlowVersion=CoreFlow(platformVersion=11), isEnabledTimedFlow=false), Inlined(flowClass=class net.corda.core.flows.ReceiveTransactionFlow, subFlowVersion=CoreFlow(platformVersion=11), isEnabledTimedFlow=false)]
checkpoint.timestamp: 
    2023-01-31T07:08:33.691Z
    2023-01-31T07:08:33.922Z


 --- Transition of flow [cae64fda-d94b-4030-8562-3cb8f97a87f1] ---
  Timestamp: 2023-01-31T07:08:33.989Z
  Event: LeaveSubFlow
  Actions: 
    
  Continuation: ProcessEvents
  Diff between previous and next state:
checkpoint.checkpointState.subFlowStack: 
    [Inlined(flowClass=class net.corda.samples.obligation.flows.IOUSettleFlowResponder, subFlowVersion=CorDappFlow(platformVersion=11, corDappName=workflows-1.0, corDappHash=C516E48A6E6E70A0AB3D8BD39F2350C2FEFECFE936F017EBB2142877462D44D3), isEnabledTimedFlow=false), Inlined(flowClass=class net.corda.samples.obligation.flows.IOUSettleFlowResponder$call$signedTransactionFlow$1, subFlowVersion=CoreFlow(platformVersion=11), isEnabledTimedFlow=false), Inlined(flowClass=class net.corda.core.flows.ReceiveTransactionFlow, subFlowVersion=CoreFlow(platformVersion=11), isEnabledTimedFlow=false)]
    [Inlined(flowClass=class net.corda.samples.obligation.flows.IOUSettleFlowResponder, subFlowVersion=CorDappFlow(platformVersion=11, corDappName=workflows-1.0, corDappHash=C516E48A6E6E70A0AB3D8BD39F2350C2FEFECFE936F017EBB2142877462D44D3), isEnabledTimedFlow=false), Inlined(flowClass=class net.corda.samples.obligation.flows.IOUSettleFlowResponder$call$signedTransactionFlow$1, subFlowVersion=CoreFlow(platformVersion=11), isEnabledTimedFlow=false)]
checkpoint.timestamp: 
    2023-01-31T07:08:33.922Z
    2023-01-31T07:08:33.989Z


 --- Transition of flow [cae64fda-d94b-4030-8562-3cb8f97a87f1] ---
  Timestamp: 2023-01-31T07:08:33.992Z
  Event: Suspend(ioRequest=Receive(sessions=[FlowSessionImpl(destination=O=Mock Company 1, L=London, C=GB, sourceSessionId=SessionId(toLong=-8071260149716765667))]), maySkipCheckpoint=false, fiber=0FB1475F4E1101010896060E394E48CF4DB44CED6AAF316D49CF7868F32D67A8, currentStep=Starting)
  Actions: 
    PersistCheckpoint(id=[cae64fda-d94b-4030-8562-3cb8f97a87f1], checkpoint=Checkpoint(checkpointState=CheckpointState(invocationContext=InvocationContext(origin=Peer(party=O=Mock Company 1, L=London, C=GB), trace=Trace(invocationId=e0c93ab2-f782-484f-a5df-68a019267e50, timestamp: 2023-01-31T07:08:33.651Z, entityType: Invocation, sessionId=e0c93ab2-f782-484f-a5df-68a019267e50, timestamp: 2023-01-31T07:08:33.651Z, entityType: Session), actor=null, externalTrace=null, impersonatedActor=null, arguments=[], clientId=null), ourIdentity=O=Mock Company 3, L=London, C=GB, sessions={SessionId(toLong=-8071260149716765667)=Initiated(peerParty=O=Mock Company 1, L=London, C=GB, peerFlowInfo=FlowInfo(flowVersion=1, appName=<unknown>), receivedMessages=[], otherSideErrored=false, peerSinkSessionId=SessionId(toLong=-5366150003449329455), deduplicationSeed=D--5366150003449329455--6169107910265396549)}, sessionsToBeClosed=[], subFlowStack=[Inlined(flowClass=class net.corda.samples.obligation.flows.IOUSettleFlowResponder, subFlowVersion=CorDappFlow(platformVersion=11, corDappName=workflows-1.0, corDappHash=C516E48A6E6E70A0AB3D8BD39F2350C2FEFECFE936F017EBB2142877462D44D3), isEnabledTimedFlow=false), Inlined(flowClass=class net.corda.samples.obligation.flows.IOUSettleFlowResponder$call$signedTransactionFlow$1, subFlowVersion=CoreFlow(platformVersion=11), isEnabledTimedFlow=false)], numberOfSuspends=5, numberOfCommits=6), flowState=Started(flowIORequest=Receive(sessions=[FlowSessionImpl(destination=O=Mock Company 1, L=London, C=GB, sourceSessionId=SessionId(toLong=-8071260149716765667))]), frozenFiber=0FB1475F4E1101010896060E394E48CF4DB44CED6AAF316D49CF7868F32D67A8), errorState=Clean, result=null, status=RUNNABLE, progressStep=Starting, flowIoRequest=Receive, compatible=true), isCheckpointUpdate=true)
    PersistDeduplicationFacts(deduplicationHandlers=[])
    CommitTransaction
    AcknowledgeMessages(deduplicationHandlers=[])
    ScheduleEvent(event=DoRemainingWork)
  Continuation: ProcessEvents
  Diff between previous and next state:
checkpoint.flowState.flowIORequest: 
    Send(sessionToMessage={FlowSessionImpl(destination=O=Mock Company 1, L=London, C=GB, sourceSessionId=SessionId(toLong=-8071260149716765667))=768AED61FD2A58D74D7316731407E0600065080E1F3E6397EE4FA5AEFEE79295})
    Receive(sessions=[FlowSessionImpl(destination=O=Mock Company 1, L=London, C=GB, sourceSessionId=SessionId(toLong=-8071260149716765667))])
checkpoint.flowState.frozenFiber.hash: 
    F72C58F6559F84A300596291A0ED1B407B3C4B04A14C0E2206F5AD0A707B0DDA
    0FB1475F4E1101010896060E394E48CF4DB44CED6AAF316D49CF7868F32D67A8
checkpoint.flowIoRequest: 
    Send
    Receive
checkpoint.checkpointState.numberOfSuspends: 
    4
    5
checkpoint.checkpointState.numberOfCommits: 
    5
    6
checkpoint.timestamp: 
    2023-01-31T07:08:33.989Z
    2023-01-31T07:08:33.991Z
isFlowResumed: 
    true
    false
numberOfCommits: 
    5
    6


 --- Transition of flow [cae64fda-d94b-4030-8562-3cb8f97a87f1] ---
  Timestamp: 2023-01-31T07:08:33.992Z
  Event: DoRemainingWork
  Actions: 
    
  Continuation: ProcessEvents
  Diff between previous and next state:
null

 --- Transition of flow [cae64fda-d94b-4030-8562-3cb8f97a87f1] ---
  Timestamp: 2023-01-31T07:08:34.002Z
  Event: DeliverSessionMessage(sessionMessage=ExistingSessionMessage(recipientSessionId=SessionId(toLong=-8071260149716765667), payload=DataSessionMessage(payload=class net.corda.core.serialization.SerializedBytes)), deduplicationHandler=net.corda.testing.node.internal.MockNodeMessagingService$InMemoryDeduplicationHandler@4eea7633, sender=O=Mock Company 1, L=London, C=GB)
  Actions: 
    ScheduleEvent(event=DoRemainingWork)
  Continuation: ProcessEvents
  Diff between previous and next state:
pendingDeduplicationHandlers: 
    []
    [net.corda.testing.node.internal.MockNodeMessagingService$InMemoryDeduplicationHandler@4eea7633]
checkpoint.checkpointState.sessions.SessionId(toLong=-8071260149716765667).receivedMessages.isEmpty: 
    true
    false
checkpoint.timestamp: 
    2023-01-31T07:08:33.992Z
    2023-01-31T07:08:34.002Z


 --- Transition of flow [cae64fda-d94b-4030-8562-3cb8f97a87f1] ---
  Timestamp: 2023-01-31T07:08:34.002Z
  Event: DoRemainingWork
  Actions: 
    CreateTransaction
  Continuation: Resume(result=class java.util.LinkedHashMap)
  Diff between previous and next state:
checkpoint.checkpointState.sessions.SessionId(toLong=-8071260149716765667).receivedMessages.isEmpty: 
    false
    true
isFlowResumed: 
    false
    true


 --- Transition of flow [cae64fda-d94b-4030-8562-3cb8f97a87f1] ---
  Timestamp: 2023-01-31T07:08:34.010Z
  Event: Suspend(ioRequest=Send(sessionToMessage={FlowSessionImpl(destination=O=Mock Company 1, L=London, C=GB, sourceSessionId=SessionId(toLong=-8071260149716765667))=7DFFFFB9C3B94A504BFEF1F0EFB607426254D24C6C003D5BE4BB0519D28C1153}), maySkipCheckpoint=false, fiber=6F05506D88DEC16BC6E5015645609547ED933217A4E53EA63C5A8C394FD30B97, currentStep=Starting)
  Actions: 
    PersistCheckpoint(id=[cae64fda-d94b-4030-8562-3cb8f97a87f1], checkpoint=Checkpoint(checkpointState=CheckpointState(invocationContext=InvocationContext(origin=Peer(party=O=Mock Company 1, L=London, C=GB), trace=Trace(invocationId=e0c93ab2-f782-484f-a5df-68a019267e50, timestamp: 2023-01-31T07:08:33.651Z, entityType: Invocation, sessionId=e0c93ab2-f782-484f-a5df-68a019267e50, timestamp: 2023-01-31T07:08:33.651Z, entityType: Session), actor=null, externalTrace=null, impersonatedActor=null, arguments=[], clientId=null), ourIdentity=O=Mock Company 3, L=London, C=GB, sessions={SessionId(toLong=-8071260149716765667)=Initiated(peerParty=O=Mock Company 1, L=London, C=GB, peerFlowInfo=FlowInfo(flowVersion=1, appName=<unknown>), receivedMessages=[], otherSideErrored=false, peerSinkSessionId=SessionId(toLong=-5366150003449329455), deduplicationSeed=D--5366150003449329455--6169107910265396549)}, sessionsToBeClosed=[], subFlowStack=[Inlined(flowClass=class net.corda.samples.obligation.flows.IOUSettleFlowResponder, subFlowVersion=CorDappFlow(platformVersion=11, corDappName=workflows-1.0, corDappHash=C516E48A6E6E70A0AB3D8BD39F2350C2FEFECFE936F017EBB2142877462D44D3), isEnabledTimedFlow=false), Inlined(flowClass=class net.corda.samples.obligation.flows.IOUSettleFlowResponder$call$signedTransactionFlow$1, subFlowVersion=CoreFlow(platformVersion=11), isEnabledTimedFlow=false)], numberOfSuspends=6, numberOfCommits=7), flowState=Started(flowIORequest=Send(sessionToMessage={FlowSessionImpl(destination=O=Mock Company 1, L=London, C=GB, sourceSessionId=SessionId(toLong=-8071260149716765667))=7DFFFFB9C3B94A504BFEF1F0EFB607426254D24C6C003D5BE4BB0519D28C1153}), frozenFiber=6F05506D88DEC16BC6E5015645609547ED933217A4E53EA63C5A8C394FD30B97), errorState=Clean, result=null, status=RUNNABLE, progressStep=Starting, flowIoRequest=Send, compatible=true), isCheckpointUpdate=true)
    PersistDeduplicationFacts(deduplicationHandlers=[net.corda.testing.node.internal.MockNodeMessagingService$InMemoryDeduplicationHandler@4eea7633])
    CommitTransaction
    AcknowledgeMessages(deduplicationHandlers=[net.corda.testing.node.internal.MockNodeMessagingService$InMemoryDeduplicationHandler@4eea7633])
    ScheduleEvent(event=DoRemainingWork)
  Continuation: ProcessEvents
  Diff between previous and next state:
pendingDeduplicationHandlers: 
    [net.corda.testing.node.internal.MockNodeMessagingService$InMemoryDeduplicationHandler@4eea7633]
    []
checkpoint.flowState.flowIORequest: 
    Receive(sessions=[FlowSessionImpl(destination=O=Mock Company 1, L=London, C=GB, sourceSessionId=SessionId(toLong=-8071260149716765667))])
    Send(sessionToMessage={FlowSessionImpl(destination=O=Mock Company 1, L=London, C=GB, sourceSessionId=SessionId(toLong=-8071260149716765667))=7DFFFFB9C3B94A504BFEF1F0EFB607426254D24C6C003D5BE4BB0519D28C1153})
checkpoint.flowState.frozenFiber.hash: 
    0FB1475F4E1101010896060E394E48CF4DB44CED6AAF316D49CF7868F32D67A8
    6F05506D88DEC16BC6E5015645609547ED933217A4E53EA63C5A8C394FD30B97
checkpoint.flowIoRequest: 
    Receive
    Send
checkpoint.checkpointState.numberOfSuspends: 
    5
    6
checkpoint.checkpointState.numberOfCommits: 
    6
    7
checkpoint.timestamp: 
    2023-01-31T07:08:34.002Z
    2023-01-31T07:08:34.008Z
isFlowResumed: 
    true
    false
numberOfCommits: 
    6
    7


 --- Transition of flow [cae64fda-d94b-4030-8562-3cb8f97a87f1] ---
  Timestamp: 2023-01-31T07:08:34.010Z
  Event: DoRemainingWork
  Actions: 
    SendMultiple(sendInitial=[], sendExisting=[SendExisting(peerParty=O=Mock Company 1, L=London, C=GB, message=ExistingSessionMessage(recipientSessionId=SessionId(toLong=-5366150003449329455), payload=DataSessionMessage(payload=class net.corda.core.serialization.SerializedBytes)), deduplicationId=SenderDeduplicationId(deduplicationId=DeduplicationId(toString=N-D--5366150003449329455--6169107910265396549-6-0), senderUUID=1409862b-8d98-4245-b5a4-db9f3ad49a64))])
    CreateTransaction
  Continuation: Resume(result=class kotlin.Unit)
  Diff between previous and next state:
isFlowResumed: 
    false
    true


 --- Transition of flow [cae64fda-d94b-4030-8562-3cb8f97a87f1] ---
  Timestamp: 2023-01-31T07:08:34.010Z
  Event: LeaveSubFlow
  Actions: 
    
  Continuation: ProcessEvents
  Diff between previous and next state:
checkpoint.checkpointState.subFlowStack: 
    [Inlined(flowClass=class net.corda.samples.obligation.flows.IOUSettleFlowResponder, subFlowVersion=CorDappFlow(platformVersion=11, corDappName=workflows-1.0, corDappHash=C516E48A6E6E70A0AB3D8BD39F2350C2FEFECFE936F017EBB2142877462D44D3), isEnabledTimedFlow=false), Inlined(flowClass=class net.corda.samples.obligation.flows.IOUSettleFlowResponder$call$signedTransactionFlow$1, subFlowVersion=CoreFlow(platformVersion=11), isEnabledTimedFlow=false)]
    [Inlined(flowClass=class net.corda.samples.obligation.flows.IOUSettleFlowResponder, subFlowVersion=CorDappFlow(platformVersion=11, corDappName=workflows-1.0, corDappHash=C516E48A6E6E70A0AB3D8BD39F2350C2FEFECFE936F017EBB2142877462D44D3), isEnabledTimedFlow=false)]


 --- Transition of flow [cae64fda-d94b-4030-8562-3cb8f97a87f1] ---
  Timestamp: 2023-01-31T07:08:34.010Z
  Event: EnterSubFlow(subFlowClass=class net.corda.core.flows.ReceiveFinalityFlow, subFlowVersion=CoreFlow(platformVersion=11), isEnabledTimedFlow=false)
  Actions: 
    
  Continuation: ProcessEvents
  Diff between previous and next state:
checkpoint.checkpointState.subFlowStack: 
    [Inlined(flowClass=class net.corda.samples.obligation.flows.IOUSettleFlowResponder, subFlowVersion=CorDappFlow(platformVersion=11, corDappName=workflows-1.0, corDappHash=C516E48A6E6E70A0AB3D8BD39F2350C2FEFECFE936F017EBB2142877462D44D3), isEnabledTimedFlow=false)]
    [Inlined(flowClass=class net.corda.samples.obligation.flows.IOUSettleFlowResponder, subFlowVersion=CorDappFlow(platformVersion=11, corDappName=workflows-1.0, corDappHash=C516E48A6E6E70A0AB3D8BD39F2350C2FEFECFE936F017EBB2142877462D44D3), isEnabledTimedFlow=false), Inlined(flowClass=class net.corda.core.flows.ReceiveFinalityFlow, subFlowVersion=CoreFlow(platformVersion=11), isEnabledTimedFlow=false)]


 --- Transition of flow [cae64fda-d94b-4030-8562-3cb8f97a87f1] ---
  Timestamp: 2023-01-31T07:08:34.010Z
  Event: EnterSubFlow(subFlowClass=class net.corda.core.flows.ReceiveFinalityFlow$call$1, subFlowVersion=CoreFlow(platformVersion=11), isEnabledTimedFlow=false)
  Actions: 
    
  Continuation: ProcessEvents
  Diff between previous and next state:
checkpoint.checkpointState.subFlowStack: 
    [Inlined(flowClass=class net.corda.samples.obligation.flows.IOUSettleFlowResponder, subFlowVersion=CorDappFlow(platformVersion=11, corDappName=workflows-1.0, corDappHash=C516E48A6E6E70A0AB3D8BD39F2350C2FEFECFE936F017EBB2142877462D44D3), isEnabledTimedFlow=false), Inlined(flowClass=class net.corda.core.flows.ReceiveFinalityFlow, subFlowVersion=CoreFlow(platformVersion=11), isEnabledTimedFlow=false)]
    [Inlined(flowClass=class net.corda.samples.obligation.flows.IOUSettleFlowResponder, subFlowVersion=CorDappFlow(platformVersion=11, corDappName=workflows-1.0, corDappHash=C516E48A6E6E70A0AB3D8BD39F2350C2FEFECFE936F017EBB2142877462D44D3), isEnabledTimedFlow=false), Inlined(flowClass=class net.corda.core.flows.ReceiveFinalityFlow, subFlowVersion=CoreFlow(platformVersion=11), isEnabledTimedFlow=false), Inlined(flowClass=class net.corda.core.flows.ReceiveFinalityFlow$call$1, subFlowVersion=CoreFlow(platformVersion=11), isEnabledTimedFlow=false)]


 --- Transition of flow [cae64fda-d94b-4030-8562-3cb8f97a87f1] ---
  Timestamp: 2023-01-31T07:08:34.013Z
  Event: Suspend(ioRequest=Receive(sessions=[FlowSessionImpl(destination=O=Mock Company 1, L=London, C=GB, sourceSessionId=SessionId(toLong=-8071260149716765667))]), maySkipCheckpoint=false, fiber=1B8FDF36B775D7A1B7D046E21597F8A9FFA0FFAF186F27B5D1A767FF7F44C2C8, currentStep=Starting)
  Actions: 
    PersistCheckpoint(id=[cae64fda-d94b-4030-8562-3cb8f97a87f1], checkpoint=Checkpoint(checkpointState=CheckpointState(invocationContext=InvocationContext(origin=Peer(party=O=Mock Company 1, L=London, C=GB), trace=Trace(invocationId=e0c93ab2-f782-484f-a5df-68a019267e50, timestamp: 2023-01-31T07:08:33.651Z, entityType: Invocation, sessionId=e0c93ab2-f782-484f-a5df-68a019267e50, timestamp: 2023-01-31T07:08:33.651Z, entityType: Session), actor=null, externalTrace=null, impersonatedActor=null, arguments=[], clientId=null), ourIdentity=O=Mock Company 3, L=London, C=GB, sessions={SessionId(toLong=-8071260149716765667)=Initiated(peerParty=O=Mock Company 1, L=London, C=GB, peerFlowInfo=FlowInfo(flowVersion=1, appName=<unknown>), receivedMessages=[], otherSideErrored=false, peerSinkSessionId=SessionId(toLong=-5366150003449329455), deduplicationSeed=D--5366150003449329455--6169107910265396549)}, sessionsToBeClosed=[], subFlowStack=[Inlined(flowClass=class net.corda.samples.obligation.flows.IOUSettleFlowResponder, subFlowVersion=CorDappFlow(platformVersion=11, corDappName=workflows-1.0, corDappHash=C516E48A6E6E70A0AB3D8BD39F2350C2FEFECFE936F017EBB2142877462D44D3), isEnabledTimedFlow=false), Inlined(flowClass=class net.corda.core.flows.ReceiveFinalityFlow, subFlowVersion=CoreFlow(platformVersion=11), isEnabledTimedFlow=false), Inlined(flowClass=class net.corda.core.flows.ReceiveFinalityFlow$call$1, subFlowVersion=CoreFlow(platformVersion=11), isEnabledTimedFlow=false)], numberOfSuspends=7, numberOfCommits=8), flowState=Started(flowIORequest=Receive(sessions=[FlowSessionImpl(destination=O=Mock Company 1, L=London, C=GB, sourceSessionId=SessionId(toLong=-8071260149716765667))]), frozenFiber=1B8FDF36B775D7A1B7D046E21597F8A9FFA0FFAF186F27B5D1A767FF7F44C2C8), errorState=Clean, result=null, status=RUNNABLE, progressStep=Starting, flowIoRequest=Receive, compatible=true), isCheckpointUpdate=true)
    PersistDeduplicationFacts(deduplicationHandlers=[])
    CommitTransaction
    AcknowledgeMessages(deduplicationHandlers=[])
    ScheduleEvent(event=DoRemainingWork)
  Continuation: ProcessEvents
  Diff between previous and next state:
checkpoint.flowState.flowIORequest: 
    Send(sessionToMessage={FlowSessionImpl(destination=O=Mock Company 1, L=London, C=GB, sourceSessionId=SessionId(toLong=-8071260149716765667))=7DFFFFB9C3B94A504BFEF1F0EFB607426254D24C6C003D5BE4BB0519D28C1153})
    Receive(sessions=[FlowSessionImpl(destination=O=Mock Company 1, L=London, C=GB, sourceSessionId=SessionId(toLong=-8071260149716765667))])
checkpoint.flowState.frozenFiber.hash: 
    6F05506D88DEC16BC6E5015645609547ED933217A4E53EA63C5A8C394FD30B97
    1B8FDF36B775D7A1B7D046E21597F8A9FFA0FFAF186F27B5D1A767FF7F44C2C8
checkpoint.flowIoRequest: 
    Send
    Receive
checkpoint.checkpointState.numberOfSuspends: 
    6
    7
checkpoint.checkpointState.numberOfCommits: 
    7
    8
checkpoint.timestamp: 
    2023-01-31T07:08:34.010Z
    2023-01-31T07:08:34.012Z
isFlowResumed: 
    true
    false
numberOfCommits: 
    7
    8


 --- Transition of flow [cae64fda-d94b-4030-8562-3cb8f97a87f1] ---
  Timestamp: 2023-01-31T07:08:34.013Z
  Event: DoRemainingWork
  Actions: 
    
  Continuation: ProcessEvents
  Diff between previous and next state:
null

 --- Transition of flow [cae64fda-d94b-4030-8562-3cb8f97a87f1] ---
  Timestamp: 2023-01-31T07:08:34.151Z
  Event: DeliverSessionMessage(sessionMessage=ExistingSessionMessage(recipientSessionId=SessionId(toLong=-8071260149716765667), payload=ErrorSessionMessage(flowException=null, errorId=-870222702024413628)), deduplicationHandler=net.corda.testing.node.internal.MockNodeMessagingService$InMemoryDeduplicationHandler@545c66ae, sender=O=Mock Company 1, L=London, C=GB)
  Actions: 
    ScheduleEvent(event=DoRemainingWork)
  Continuation: ProcessEvents
  Diff between previous and next state:
pendingDeduplicationHandlers: 
    []
    [net.corda.testing.node.internal.MockNodeMessagingService$InMemoryDeduplicationHandler@545c66ae]
checkpoint.checkpointState.sessions.SessionId(toLong=-8071260149716765667).receivedMessages.isEmpty: 
    true
    false
checkpoint.timestamp: 
    2023-01-31T07:08:34.013Z
    2023-01-31T07:08:34.151Z


 --- Transition of flow [cae64fda-d94b-4030-8562-3cb8f97a87f1] ---
  Timestamp: 2023-01-31T07:08:34.152Z
  Event: DoRemainingWork
  Actions: 
    CreateTransaction
  Continuation: Throw(throwable=net.corda.core.flows.UnexpectedFlowEndException: Counter-flow errored)
  Diff between previous and next state:
checkpoint.checkpointState.sessions.SessionId(toLong=-8071260149716765667).receivedMessages.isEmpty: 
    false
    true
checkpoint.checkpointState.sessions.SessionId(toLong=-8071260149716765667).otherSideErrored: 
    false
    true
checkpoint.timestamp: 
    2023-01-31T07:08:34.151Z
    2023-01-31T07:08:34.152Z
isFlowResumed: 
    false
    true


 --- Transition of flow [cae64fda-d94b-4030-8562-3cb8f97a87f1] ---
  Timestamp: 2023-01-31T07:08:34.152Z
  Event: LeaveSubFlow
  Actions: 
    
  Continuation: ProcessEvents
  Diff between previous and next state:
checkpoint.checkpointState.subFlowStack: 
    [Inlined(flowClass=class net.corda.samples.obligation.flows.IOUSettleFlowResponder, subFlowVersion=CorDappFlow(platformVersion=11, corDappName=workflows-1.0, corDappHash=C516E48A6E6E70A0AB3D8BD39F2350C2FEFECFE936F017EBB2142877462D44D3), isEnabledTimedFlow=false), Inlined(flowClass=class net.corda.core.flows.ReceiveFinalityFlow, subFlowVersion=CoreFlow(platformVersion=11), isEnabledTimedFlow=false), Inlined(flowClass=class net.corda.core.flows.ReceiveFinalityFlow$call$1, subFlowVersion=CoreFlow(platformVersion=11), isEnabledTimedFlow=false)]
    [Inlined(flowClass=class net.corda.samples.obligation.flows.IOUSettleFlowResponder, subFlowVersion=CorDappFlow(platformVersion=11, corDappName=workflows-1.0, corDappHash=C516E48A6E6E70A0AB3D8BD39F2350C2FEFECFE936F017EBB2142877462D44D3), isEnabledTimedFlow=false), Inlined(flowClass=class net.corda.core.flows.ReceiveFinalityFlow, subFlowVersion=CoreFlow(platformVersion=11), isEnabledTimedFlow=false)]


 --- Transition of flow [cae64fda-d94b-4030-8562-3cb8f97a87f1] ---
  Timestamp: 2023-01-31T07:08:34.152Z
  Event: LeaveSubFlow
  Actions: 
    
  Continuation: ProcessEvents
  Diff between previous and next state:
checkpoint.checkpointState.subFlowStack: 
    [Inlined(flowClass=class net.corda.samples.obligation.flows.IOUSettleFlowResponder, subFlowVersion=CorDappFlow(platformVersion=11, corDappName=workflows-1.0, corDappHash=C516E48A6E6E70A0AB3D8BD39F2350C2FEFECFE936F017EBB2142877462D44D3), isEnabledTimedFlow=false), Inlined(flowClass=class net.corda.core.flows.ReceiveFinalityFlow, subFlowVersion=CoreFlow(platformVersion=11), isEnabledTimedFlow=false)]
    [Inlined(flowClass=class net.corda.samples.obligation.flows.IOUSettleFlowResponder, subFlowVersion=CorDappFlow(platformVersion=11, corDappName=workflows-1.0, corDappHash=C516E48A6E6E70A0AB3D8BD39F2350C2FEFECFE936F017EBB2142877462D44D3), isEnabledTimedFlow=false)]


 --- Transition of flow [cae64fda-d94b-4030-8562-3cb8f97a87f1] ---
  Timestamp: 2023-01-31T07:08:34.154Z
  Event: Error(exception=net.corda.core.flows.UnexpectedFlowEndException: Counter-flow errored, rollback=true)
  Actions: 
    RollbackTransaction
    ScheduleEvent(event=DoRemainingWork)
  Continuation: ProcessEvents
  Diff between previous and next state:
checkpoint.errorState: 
    Clean
    Errored(errors=[FlowError(errorId=-870222702024413628, exception=net.corda.core.flows.UnexpectedFlowEndException: Counter-flow errored)], propagatedIndex=0, propagating=false)
checkpoint.timestamp: 
    2023-01-31T07:08:34.152Z
    2023-01-31T07:08:34.153Z
isFlowResumed: 
    true
    false


 --- Transition of flow [cae64fda-d94b-4030-8562-3cb8f97a87f1] ---
  Timestamp: 2023-01-31T07:08:34.154Z
  Event: DoRemainingWork
  Actions: 
    
  Continuation: ProcessEvents
  Diff between previous and next state:
null

 --- Transition of flow [cae64fda-d94b-4030-8562-3cb8f97a87f1] ---
  Timestamp: 2023-01-31T07:08:34.154Z
  Event: StartErrorPropagation
  Actions: 
    ScheduleEvent(event=DoRemainingWork)
  Continuation: ProcessEvents
  Diff between previous and next state:
checkpoint.errorState.propagating: 
    false
    true
checkpoint.timestamp: 
    2023-01-31T07:08:34.153Z
    2023-01-31T07:08:34.154Z


 --- Transition of flow [cae64fda-d94b-4030-8562-3cb8f97a87f1] ---
  Timestamp: 2023-01-31T07:08:34.181Z
  Event: DoRemainingWork
  Actions: 
    PropagateErrors(errorMessages=[ErrorSessionMessage(flowException=null, errorId=-870222702024413628)], sessions=[], senderUUID=1409862b-8d98-4245-b5a4-db9f3ad49a64)
    CreateTransaction
    RemoveCheckpoint(id=[cae64fda-d94b-4030-8562-3cb8f97a87f1], mayHavePersistentResults=false)
    PersistDeduplicationFacts(deduplicationHandlers=[net.corda.testing.node.internal.MockNodeMessagingService$InMemoryDeduplicationHandler@545c66ae])
    ReleaseSoftLocks(uuid=cae64fda-d94b-4030-8562-3cb8f97a87f1)
    CommitTransaction
    AcknowledgeMessages(deduplicationHandlers=[net.corda.testing.node.internal.MockNodeMessagingService$InMemoryDeduplicationHandler@545c66ae])
    RemoveSessionBindings(sessionIds=[SessionId(toLong=-8071260149716765667)])
    RemoveFlow(flowId=[cae64fda-d94b-4030-8562-3cb8f97a87f1], removalReason=ErrorFinish(flowErrors=[FlowError(errorId=-870222702024413628, exception=net.corda.core.flows.UnexpectedFlowEndException: Counter-flow errored)]), lastState=StateMachineState(checkpoint=Checkpoint(checkpointState=CheckpointState(invocationContext=InvocationContext(origin=Peer(party=O=Mock Company 1, L=London, C=GB), trace=Trace(invocationId=e0c93ab2-f782-484f-a5df-68a019267e50, timestamp: 2023-01-31T07:08:33.651Z, entityType: Invocation, sessionId=e0c93ab2-f782-484f-a5df-68a019267e50, timestamp: 2023-01-31T07:08:33.651Z, entityType: Session), actor=null, externalTrace=null, impersonatedActor=null, arguments=[], clientId=null), ourIdentity=O=Mock Company 3, L=London, C=GB, sessions={SessionId(toLong=-8071260149716765667)=Initiated(peerParty=O=Mock Company 1, L=London, C=GB, peerFlowInfo=FlowInfo(flowVersion=1, appName=<unknown>), receivedMessages=[], otherSideErrored=true, peerSinkSessionId=SessionId(toLong=-5366150003449329455), deduplicationSeed=D--5366150003449329455--6169107910265396549)}, sessionsToBeClosed=[], subFlowStack=[Inlined(flowClass=class net.corda.samples.obligation.flows.IOUSettleFlowResponder, subFlowVersion=CorDappFlow(platformVersion=11, corDappName=workflows-1.0, corDappHash=C516E48A6E6E70A0AB3D8BD39F2350C2FEFECFE936F017EBB2142877462D44D3), isEnabledTimedFlow=false)], numberOfSuspends=7, numberOfCommits=9), flowState=net.corda.node.services.statemachine.FlowState$Finished@b8b9f78, errorState=Errored(errors=[FlowError(errorId=-870222702024413628, exception=net.corda.core.flows.UnexpectedFlowEndException: Counter-flow errored)], propagatedIndex=0, propagating=true), result=null, status=FAILED, progressStep=Starting, flowIoRequest=Receive, compatible=true), flowLogic=net.corda.samples.obligation.flows.IOUSettleFlowResponder@6f79453b, pendingDeduplicationHandlers=[], isFlowResumed=false, isWaitingForFuture=false, future=null, isAnyCheckpointPersisted=true, isStartIdempotent=false, isRemoved=true, isKilled=false, isDead=false, senderUUID=1409862b-8d98-4245-b5a4-db9f3ad49a64, reloadCheckpointAfterSuspendCount=null, numberOfCommits=9, lock=java.util.concurrent.Semaphore@15bb32e2[Permits = 0]))
  Continuation: Abort
  Diff between previous and next state:
pendingDeduplicationHandlers: 
    [net.corda.testing.node.internal.MockNodeMessagingService$InMemoryDeduplicationHandler@545c66ae]
    []
checkpoint.status: 
    RUNNABLE
    FAILED
checkpoint.flowState: 
    Started(flowIORequest=Receive(sessions=[FlowSessionImpl(destination=O=Mock Company 1, L=London, C=GB, sourceSessionId=SessionId(toLong=-8071260149716765667))]), frozenFiber=1B8FDF36B775D7A1B7D046E21597F8A9FFA0FFAF186F27B5D1A767FF7F44C2C8)
    net.corda.node.services.statemachine.FlowState$Finished@b8b9f78
checkpoint.checkpointState.numberOfCommits: 
    8
    9
checkpoint.timestamp: 
    2023-01-31T07:08:34.154Z
    2023-01-31T07:08:34.172Z
numberOfCommits: 
    8
    9
isRemoved: 
    false
    true
 {fiber-id=10000029, flow-id=cae64fda-d94b-4030-8562-3cb8f97a87f1, invocation_id=e0c93ab2-f782-484f-a5df-68a019267e50, invocation_timestamp=2023-01-31T07:08:33.651Z, origin=O=Mock Company 1, L=London, C=GB, session_id=e0c93ab2-f782-484f-a5df-68a019267e50, session_timestamp=2023-01-31T07:08:33.651Z, thread-id=854, tx_id=0DFF1D65C786D2F8443A0291C9DD252856A4D061214F27B9FC98D7C999E3139E}
[WARN ] 2023-01-31T07:08:34,198Z [Mock network] interceptors.DumpHistoryOnErrorInterceptor. - Flow [cae64fda-d94b-4030-8562-3cb8f97a87f1] error {fiber-id=10000029, flow-id=cae64fda-d94b-4030-8562-3cb8f97a87f1, invocation_id=e0c93ab2-f782-484f-a5df-68a019267e50, invocation_timestamp=2023-01-31T07:08:33.651Z, origin=O=Mock Company 1, L=London, C=GB, session_id=e0c93ab2-f782-484f-a5df-68a019267e50, session_timestamp=2023-01-31T07:08:33.651Z, thread-id=854, tx_id=0DFF1D65C786D2F8443A0291C9DD252856A4D061214F27B9FC98D7C999E3139E}
net.corda.core.flows.UnexpectedFlowEndException: Counter-flow errored
	at Received unexpected counter-flow exception from peer O=Mock Company 1, L=London, C=GB.() ~[?:?]
	at net.corda.node.services.statemachine.FlowStateMachineImpl.fillInLocalStackTrace(FlowStateMachineImpl.kt:244) ~[corda-node-4.9.jar:?]
	at net.corda.node.services.statemachine.FlowStateMachineImpl.processEventsUntilFlowIsResumed(FlowStateMachineImpl.kt:225) ~[corda-node-4.9.jar:?]
	at net.corda.node.services.statemachine.FlowStateMachineImpl.suspend(FlowStateMachineImpl.kt:577) ~[corda-node-4.9.jar:?]
	at net.corda.node.services.statemachine.FlowSessionImpl.receive(FlowSessionImpl.kt:67) ~[corda-node-4.9.jar:?]
	at net.corda.node.services.statemachine.FlowSessionImpl.receive(FlowSessionImpl.kt:71) ~[corda-node-4.9.jar:?]
	at net.corda.core.flows.ReceiveTransactionFlow.call(ReceiveTransactionFlow.kt:103) ~[corda-core-4.9.jar:?]
	at net.corda.core.flows.ReceiveTransactionFlow.call(ReceiveTransactionFlow.kt:31) ~[corda-core-4.9.jar:?]
	at net.corda.node.services.statemachine.FlowStateMachineImpl.subFlow(FlowStateMachineImpl.kt:420) ~[corda-node-4.9.jar:?]
	at net.corda.core.flows.FlowLogic.subFlow(FlowLogic.kt:409) ~[corda-core-4.9.jar:?]
	at net.corda.core.flows.ReceiveFinalityFlow.call(FinalityFlow.kt:285) ~[corda-core-4.9.jar:?]
	at net.corda.core.flows.ReceiveFinalityFlow.call(FinalityFlow.kt:280) ~[corda-core-4.9.jar:?]
	at net.corda.node.services.statemachine.FlowStateMachineImpl.subFlow(FlowStateMachineImpl.kt:420) ~[corda-node-4.9.jar:?]
	at net.corda.core.flows.FlowLogic.subFlow(FlowLogic.kt:409) ~[corda-core-4.9.jar:?]
	at net.corda.samples.obligation.flows.IOUSettleFlowResponder.call(IOUSettleFlow.kt:139) ~[main/:?]
	at net.corda.samples.obligation.flows.IOUSettleFlowResponder.call(IOUSettleFlow.kt:126) ~[main/:?]
	at net.corda.node.services.statemachine.FlowStateMachineImpl.run(FlowStateMachineImpl.kt:349) ~[corda-node-4.9.jar:?]
	at net.corda.node.services.statemachine.FlowStateMachineImpl.run(FlowStateMachineImpl.kt:71) ~[corda-node-4.9.jar:?]
	at co.paralleluniverse.fibers.Fiber.run1(Fiber.java:1092) ~[quasar-core-0.7.10.jar:0.7.10]
	at co.paralleluniverse.fibers.Fiber.exec(Fiber.java:788) ~[quasar-core-0.7.10.jar:0.7.10]
	at co.paralleluniverse.fibers.RunnableFiberTask.doExec(RunnableFiberTask.java:100) ~[quasar-core-0.7.10.jar:0.7.10]
	at co.paralleluniverse.fibers.RunnableFiberTask.run(RunnableFiberTask.java:91) ~[quasar-core-0.7.10.jar:0.7.10]
	at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511) ~[?:1.8.0_202]
	at java.util.concurrent.FutureTask.run(FutureTask.java:266) ~[?:1.8.0_202]
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.access$201(ScheduledThreadPoolExecutor.java:180) ~[?:1.8.0_202]
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.run(ScheduledThreadPoolExecutor.java:293) ~[?:1.8.0_202]
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149) ~[?:1.8.0_202]
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624) ~[?:1.8.0_202]
	at net.corda.node.utilities.AffinityExecutor$ServiceAffinityExecutor$1$thread$1.run(AffinityExecutor.kt:63) ~[corda-node-4.9.jar:?]
[INFO ] 2023-01-31T07:08:34,224Z [Test worker] persistence.CordaPersistence. - Closing HikariDataSource (HikariPool-1) {}
[INFO ] 2023-01-31T07:08:34,267Z [Test worker] internal.MockNodeMessagingService. - Status change to false {}
[INFO ] 2023-01-31T07:08:34,267Z [Test worker] internal.InternalMockNetwork$MockNode. - MessagingService active change to: false {}
[INFO ] 2023-01-31T07:08:34,272Z [Test worker] persistence.CordaPersistence. - Closing HikariDataSource (HikariPool-2) {}
[INFO ] 2023-01-31T07:08:34,310Z [Test worker] internal.MockNodeMessagingService. - Status change to false {}
[INFO ] 2023-01-31T07:08:34,310Z [Test worker] internal.InternalMockNetwork$MockNode. - MessagingService active change to: false {}
[INFO ] 2023-01-31T07:08:34,312Z [Test worker] persistence.CordaPersistence. - Closing HikariDataSource (HikariPool-3) {}
[INFO ] 2023-01-31T07:08:34,329Z [Test worker] internal.MockNodeMessagingService. - Status change to false {}
[INFO ] 2023-01-31T07:08:34,329Z [Test worker] internal.InternalMockNetwork$MockNode. - MessagingService active change to: false {}
[INFO ] 2023-01-31T07:08:34,331Z [Test worker] persistence.CordaPersistence. - Closing HikariDataSource (HikariPool-4) {}
[INFO ] 2023-01-31T07:08:34,345Z [Test worker] internal.MockNodeMessagingService. - Status change to false {}
[INFO ] 2023-01-31T07:08:34,345Z [Test worker] internal.InternalMockNetwork$MockNode. - MessagingService active change to: false {}
[INFO ] 2023-01-31T07:17:43,324Z [Test worker] internal.TestCordappImpl. - Generating CorDapp jar from local project in /Users/peter.li/Desktop/obligation-cordapp/workflows ... {}
[INFO ] 2023-01-31T07:17:43,479Z [Connection worker] internal.TestCordappImpl. - Build {}
[INFO ] 2023-01-31T07:17:44,766Z [Connection worker] internal.TestCordappImpl. - Starting Gradle Daemon {}
[INFO ] 2023-01-31T07:17:45,581Z [Connection worker] internal.TestCordappImpl. - Connecting to Gradle Daemon {}
[INFO ] 2023-01-31T07:17:45,595Z [Connection worker] internal.TestCordappImpl. - Starting Gradle Daemon {}
[INFO ] 2023-01-31T07:17:45,596Z [Connection worker] internal.TestCordappImpl. - Build {}
[INFO ] 2023-01-31T07:17:46,127Z [Connection worker] internal.TestCordappImpl. - Run build {}
[INFO ] 2023-01-31T07:17:46,147Z [Connection worker] internal.TestCordappImpl. - Evaluate settings {}
[INFO ] 2023-01-31T07:17:46,547Z [Connection worker] internal.TestCordappImpl. - Run build {}
[INFO ] 2023-01-31T07:17:46,547Z [Connection worker] internal.TestCordappImpl. - Configure build {}
[INFO ] 2023-01-31T07:17:46,547Z [Connection worker] internal.TestCordappImpl. - Load projects {}
[INFO ] 2023-01-31T07:17:46,687Z [Connection worker] internal.TestCordappImpl. - Configure build {}
[INFO ] 2023-01-31T07:17:46,688Z [Connection worker] internal.TestCordappImpl. - Configure project : {}
[INFO ] 2023-01-31T07:17:47,247Z [Connection worker] internal.TestCordappImpl. - Resolve dependencies of :classpath {}
[INFO ] 2023-01-31T07:17:47,665Z [Connection worker] internal.TestCordappImpl. - Configure project : {}
[INFO ] 2023-01-31T07:17:47,675Z [Connection worker] internal.TestCordappImpl. - Resolve files of :classpath {}
[INFO ] 2023-01-31T07:17:47,718Z [Connection worker] internal.TestCordappImpl. - Configure project : {}
[INFO ] 2023-01-31T07:17:47,719Z [Connection worker] internal.TestCordappImpl. - Resolve files of :classpath {}
[INFO ] 2023-01-31T07:17:47,719Z [Connection worker] internal.TestCordappImpl. - Configure project : {}
[INFO ] 2023-01-31T07:17:49,259Z [Connection worker] internal.TestCordappImpl. - Configure build {}
[INFO ] 2023-01-31T07:17:49,259Z [Connection worker] internal.TestCordappImpl. - Configure project :clients {}
[INFO ] 2023-01-31T07:17:49,398Z [Connection worker] internal.TestCordappImpl. - Configure build {}
[INFO ] 2023-01-31T07:17:49,398Z [Connection worker] internal.TestCordappImpl. - Configure project :contracts {}
[INFO ] 2023-01-31T07:17:49,429Z [Connection worker] internal.TestCordappImpl. - Configure build {}
[INFO ] 2023-01-31T07:17:49,429Z [Connection worker] internal.TestCordappImpl. - Configure project :workflows {}
[INFO ] 2023-01-31T07:17:49,550Z [Connection worker] internal.TestCordappImpl. - Configure build {}
[INFO ] 2023-01-31T07:17:49,561Z [Connection worker] internal.TestCordappImpl. - Run build {}
[INFO ] 2023-01-31T07:17:49,672Z [Connection worker] internal.TestCordappImpl. - Resolve dependencies of :workflows:kotlinCompilerClasspath {}
[INFO ] 2023-01-31T07:17:49,682Z [Connection worker] internal.TestCordappImpl. - Run build {}
[INFO ] 2023-01-31T07:17:49,682Z [Connection worker] internal.TestCordappImpl. - Resolve files of :workflows:kotlinCompilerClasspath {}
[INFO ] 2023-01-31T07:17:49,682Z [Connection worker] internal.TestCordappImpl. - Run build {}
[INFO ] 2023-01-31T07:17:49,682Z [Connection worker] internal.TestCordappImpl. - Resolve dependencies of :contracts:kotlinCompilerClasspath {}
[INFO ] 2023-01-31T07:17:49,693Z [Connection worker] internal.TestCordappImpl. - Run build {}
[INFO ] 2023-01-31T07:17:49,693Z [Connection worker] internal.TestCordappImpl. - Resolve files of :contracts:kotlinCompilerClasspath {}
[INFO ] 2023-01-31T07:17:49,693Z [Connection worker] internal.TestCordappImpl. - Run build {}
[INFO ] 2023-01-31T07:17:49,705Z [Connection worker] internal.TestCordappImpl. - Run tasks {}
[INFO ] 2023-01-31T07:17:49,725Z [Connection worker] internal.TestCordappImpl. - Task :contracts:compileKotlin {}
[INFO ] 2023-01-31T07:17:49,738Z [Connection worker] internal.TestCordappImpl. - Resolve files of :contracts:kotlinCompilerClasspath {}
[INFO ] 2023-01-31T07:17:49,738Z [Connection worker] internal.TestCordappImpl. - Task :contracts:compileKotlin {}
[INFO ] 2023-01-31T07:17:49,791Z [Connection worker] internal.TestCordappImpl. - Resolve dependencies of :contracts:kotlinCompilerPluginClasspath {}
[INFO ] 2023-01-31T07:17:49,802Z [Connection worker] internal.TestCordappImpl. - Task :contracts:compileKotlin {}
[INFO ] 2023-01-31T07:17:49,803Z [Connection worker] internal.TestCordappImpl. - Resolve files of :contracts:kotlinCompilerPluginClasspath {}
[INFO ] 2023-01-31T07:17:49,803Z [Connection worker] internal.TestCordappImpl. - Task :contracts:compileKotlin {}
[INFO ] 2023-01-31T07:17:49,803Z [Connection worker] internal.TestCordappImpl. - Resolve dependencies of :contracts:compileClasspath {}
[INFO ] 2023-01-31T07:17:49,876Z [Connection worker] internal.TestCordappImpl. - Task :contracts:compileKotlin {}
[INFO ] 2023-01-31T07:17:49,876Z [Connection worker] internal.TestCordappImpl. - Resolve files of :contracts:compileClasspath {}
[INFO ] 2023-01-31T07:17:49,886Z [Connection worker] internal.TestCordappImpl. - Task :contracts:compileKotlin {}
[INFO ] 2023-01-31T07:17:50,297Z [Connection worker] internal.TestCordappImpl. - Resolve files of :contracts:compileClasspath {}
[INFO ] 2023-01-31T07:17:50,297Z [Connection worker] internal.TestCordappImpl. - Task :contracts:compileKotlin {}
[INFO ] 2023-01-31T07:17:50,322Z [Connection worker] internal.TestCordappImpl. - Resolve files of :contracts:kotlinCompilerPluginClasspath {}
[INFO ] 2023-01-31T07:17:50,333Z [Connection worker] internal.TestCordappImpl. - Task :contracts:compileKotlin {}
[INFO ] 2023-01-31T07:17:50,344Z [Connection worker] internal.TestCordappImpl. - Run tasks {}
[INFO ] 2023-01-31T07:17:50,354Z [Connection worker] internal.TestCordappImpl. - Task :contracts:compileJava {}
[INFO ] 2023-01-31T07:17:50,354Z [Connection worker] internal.TestCordappImpl. - Run tasks {}
[INFO ] 2023-01-31T07:17:50,354Z [Connection worker] internal.TestCordappImpl. - Task :contracts:processResources {}
[INFO ] 2023-01-31T07:17:50,354Z [Connection worker] internal.TestCordappImpl. - Run tasks {}
[INFO ] 2023-01-31T07:17:50,354Z [Connection worker] internal.TestCordappImpl. - Task :contracts:classes {}
[INFO ] 2023-01-31T07:17:50,354Z [Connection worker] internal.TestCordappImpl. - Run tasks {}
[INFO ] 2023-01-31T07:17:50,354Z [Connection worker] internal.TestCordappImpl. - Task :contracts:configureCordappFatJar {}
[INFO ] 2023-01-31T07:17:50,366Z [Connection worker] internal.TestCordappImpl. - Resolve dependencies of :contracts:runtime {}
[INFO ] 2023-01-31T07:17:50,399Z [Connection worker] internal.TestCordappImpl. - Task :contracts:configureCordappFatJar {}
[INFO ] 2023-01-31T07:17:50,399Z [Connection worker] internal.TestCordappImpl. - Resolve files of :contracts:runtime {}
[INFO ] 2023-01-31T07:17:50,410Z [Connection worker] internal.TestCordappImpl. - Task :contracts:configureCordappFatJar {}
[INFO ] 2023-01-31T07:17:50,410Z [Connection worker] internal.TestCordappImpl. - Resolve files of :contracts:runtime {}
[INFO ] 2023-01-31T07:17:50,410Z [Connection worker] internal.TestCordappImpl. - Task :contracts:configureCordappFatJar {}
[INFO ] 2023-01-31T07:17:50,410Z [Connection worker] internal.TestCordappImpl. - Resolve files of :contracts:runtime {}
[INFO ] 2023-01-31T07:17:50,410Z [Connection worker] internal.TestCordappImpl. - Task :contracts:configureCordappFatJar {}
[INFO ] 2023-01-31T07:17:50,410Z [Connection worker] internal.TestCordappImpl. - Resolve files of :contracts:runtime {}
[INFO ] 2023-01-31T07:17:50,410Z [Connection worker] internal.TestCordappImpl. - Task :contracts:configureCordappFatJar {}
[INFO ] 2023-01-31T07:17:50,410Z [Connection worker] internal.TestCordappImpl. - Resolve files of :contracts:runtime {}
[INFO ] 2023-01-31T07:17:50,411Z [Connection worker] internal.TestCordappImpl. - Task :contracts:configureCordappFatJar {}
[INFO ] 2023-01-31T07:17:50,421Z [Connection worker] internal.TestCordappImpl. - Run tasks {}
[INFO ] 2023-01-31T07:17:50,421Z [Connection worker] internal.TestCordappImpl. - Task :contracts:inspectClassesForKotlinIC {}
[INFO ] 2023-01-31T07:17:50,432Z [Connection worker] internal.TestCordappImpl. - Run tasks {}
[INFO ] 2023-01-31T07:17:50,432Z [Connection worker] internal.TestCordappImpl. - Task :contracts:jar {}
[INFO ] 2023-01-31T07:17:50,442Z [Connection worker] internal.TestCordappImpl. - Run tasks {}
[INFO ] 2023-01-31T07:17:50,453Z [Connection worker] internal.TestCordappImpl. - Task :workflows:compileKotlin {}
[INFO ] 2023-01-31T07:17:50,453Z [Connection worker] internal.TestCordappImpl. - Resolve files of :workflows:kotlinCompilerClasspath {}
[INFO ] 2023-01-31T07:17:50,453Z [Connection worker] internal.TestCordappImpl. - Task :workflows:compileKotlin {}
[INFO ] 2023-01-31T07:17:50,463Z [Connection worker] internal.TestCordappImpl. - Resolve dependencies of :workflows:kotlinCompilerPluginClasspath {}
[INFO ] 2023-01-31T07:17:50,474Z [Connection worker] internal.TestCordappImpl. - Task :workflows:compileKotlin {}
[INFO ] 2023-01-31T07:17:50,475Z [Connection worker] internal.TestCordappImpl. - Resolve files of :workflows:kotlinCompilerPluginClasspath {}
[INFO ] 2023-01-31T07:17:50,475Z [Connection worker] internal.TestCordappImpl. - Task :workflows:compileKotlin {}
[INFO ] 2023-01-31T07:17:50,475Z [Connection worker] internal.TestCordappImpl. - Resolve dependencies of :workflows:compileClasspath {}
[INFO ] 2023-01-31T07:17:50,496Z [Connection worker] internal.TestCordappImpl. - Task :workflows:compileKotlin {}
[INFO ] 2023-01-31T07:17:50,496Z [Connection worker] internal.TestCordappImpl. - Resolve files of :workflows:compileClasspath {}
[INFO ] 2023-01-31T07:17:50,496Z [Connection worker] internal.TestCordappImpl. - Task :workflows:compileKotlin {}
[INFO ] 2023-01-31T07:17:50,496Z [Connection worker] internal.TestCordappImpl. - Resolve files of :workflows:compileClasspath {}
[INFO ] 2023-01-31T07:17:50,496Z [Connection worker] internal.TestCordappImpl. - Task :workflows:compileKotlin {}
[INFO ] 2023-01-31T07:17:50,506Z [Connection worker] internal.TestCordappImpl. - Resolve files of :workflows:kotlinCompilerPluginClasspath {}
[INFO ] 2023-01-31T07:17:50,507Z [Connection worker] internal.TestCordappImpl. - Task :workflows:compileKotlin {}
[INFO ] 2023-01-31T07:17:50,507Z [Connection worker] internal.TestCordappImpl. - Run tasks {}
[INFO ] 2023-01-31T07:17:50,507Z [Connection worker] internal.TestCordappImpl. - Task :workflows:compileJava {}
[INFO ] 2023-01-31T07:17:50,518Z [Connection worker] internal.TestCordappImpl. - Run tasks {}
[INFO ] 2023-01-31T07:17:50,518Z [Connection worker] internal.TestCordappImpl. - Task :workflows:processResources {}
[INFO ] 2023-01-31T07:17:50,518Z [Connection worker] internal.TestCordappImpl. - Run tasks {}
[INFO ] 2023-01-31T07:17:50,518Z [Connection worker] internal.TestCordappImpl. - Task :workflows:classes {}
[INFO ] 2023-01-31T07:17:50,518Z [Connection worker] internal.TestCordappImpl. - Run tasks {}
[INFO ] 2023-01-31T07:17:50,518Z [Connection worker] internal.TestCordappImpl. - Task :workflows:configureCordappFatJar {}
[INFO ] 2023-01-31T07:17:50,518Z [Connection worker] internal.TestCordappImpl. - Resolve dependencies of :workflows:runtime {}
[INFO ] 2023-01-31T07:17:50,561Z [Connection worker] internal.TestCordappImpl. - Task :workflows:configureCordappFatJar {}
[INFO ] 2023-01-31T07:17:50,561Z [Connection worker] internal.TestCordappImpl. - Resolve files of :workflows:runtime {}
[INFO ] 2023-01-31T07:17:50,571Z [Connection worker] internal.TestCordappImpl. - Task :workflows:configureCordappFatJar {}
[INFO ] 2023-01-31T07:17:50,572Z [Connection worker] internal.TestCordappImpl. - Resolve files of :workflows:runtime {}
[INFO ] 2023-01-31T07:17:50,572Z [Connection worker] internal.TestCordappImpl. - Task :workflows:configureCordappFatJar {}
[INFO ] 2023-01-31T07:17:50,572Z [Connection worker] internal.TestCordappImpl. - Resolve files of :workflows:runtime {}
[INFO ] 2023-01-31T07:17:50,572Z [Connection worker] internal.TestCordappImpl. - Task :workflows:configureCordappFatJar {}
[INFO ] 2023-01-31T07:17:50,572Z [Connection worker] internal.TestCordappImpl. - Resolve files of :workflows:runtime {}
[INFO ] 2023-01-31T07:17:50,572Z [Connection worker] internal.TestCordappImpl. - Task :workflows:configureCordappFatJar {}
[INFO ] 2023-01-31T07:17:50,572Z [Connection worker] internal.TestCordappImpl. - Resolve files of :workflows:runtime {}
[INFO ] 2023-01-31T07:17:50,572Z [Connection worker] internal.TestCordappImpl. - Task :workflows:configureCordappFatJar {}
[INFO ] 2023-01-31T07:17:50,572Z [Connection worker] internal.TestCordappImpl. - Resolve files of :workflows:runtime {}
[INFO ] 2023-01-31T07:17:50,572Z [Connection worker] internal.TestCordappImpl. - Task :workflows:configureCordappFatJar {}
[INFO ] 2023-01-31T07:17:50,572Z [Connection worker] internal.TestCordappImpl. - Resolve files of :workflows:runtime {}
[INFO ] 2023-01-31T07:17:50,572Z [Connection worker] internal.TestCordappImpl. - Task :workflows:configureCordappFatJar {}
[INFO ] 2023-01-31T07:17:50,572Z [Connection worker] internal.TestCordappImpl. - Resolve files of :workflows:runtime {}
[INFO ] 2023-01-31T07:17:50,572Z [Connection worker] internal.TestCordappImpl. - Task :workflows:configureCordappFatJar {}
[INFO ] 2023-01-31T07:17:50,572Z [Connection worker] internal.TestCordappImpl. - Run tasks {}
[INFO ] 2023-01-31T07:17:50,572Z [Connection worker] internal.TestCordappImpl. - Task :workflows:inspectClassesForKotlinIC {}
[INFO ] 2023-01-31T07:17:50,606Z [Connection worker] internal.TestCordappImpl. - Run tasks {}
[INFO ] 2023-01-31T07:17:50,606Z [Connection worker] internal.TestCordappImpl. - Task :workflows:jar {}
[INFO ] 2023-01-31T07:17:52,289Z [Connection worker] internal.TestCordappImpl. - Run tasks {}
[INFO ] 2023-01-31T07:17:52,289Z [Connection worker] internal.TestCordappImpl. - Run build {}
[INFO ] 2023-01-31T07:17:52,300Z [Connection worker] internal.TestCordappImpl. - Build model 'java.lang.Void' for project ':workflows' {}
[INFO ] 2023-01-31T07:17:52,300Z [Connection worker] internal.TestCordappImpl. - Run build {}
[INFO ] 2023-01-31T07:17:52,316Z [Connection worker] internal.TestCordappImpl. - Build {}
[INFO ] 2023-01-31T07:17:52,326Z [Connection worker] internal.TestCordappImpl. - Deleting unused version-specific caches in /Users/peter.li/Desktop/obligation-cordapp/.gradle {}
[INFO ] 2023-01-31T07:17:52,326Z [Connection worker] internal.TestCordappImpl. - Build {}
[INFO ] 2023-01-31T07:17:52,355Z [Connection worker] internal.TestCordappImpl. -  {}
[INFO ] 2023-01-31T07:17:58,373Z [Test worker] cordapp.JarScanningCordappLoader. - Looking for CorDapps in [build/mock-network/20230131-071742.428-776CC513ECE7E110/nodes/0/cordapps] {}
[INFO ] 2023-01-31T07:17:58,382Z [Test worker] cordapp.JarScanningCordappLoader. - Loading CorDapps from RestrictedURL(url=file:/Users/peter.li/Desktop/obligation-cordapp/workflows/build/mock-network/20230131-071742.428-776CC513ECE7E110/nodes/0/cordapps/accounts-contracts-1.0.jar, rootPackageName=null), RestrictedURL(url=file:/Users/peter.li/Desktop/obligation-cordapp/workflows/build/mock-network/20230131-071742.428-776CC513ECE7E110/nodes/0/cordapps/accounts-workflows-1.0.jar, rootPackageName=null), RestrictedURL(url=file:/Users/peter.li/Desktop/obligation-cordapp/workflows/build/mock-network/20230131-071742.428-776CC513ECE7E110/nodes/0/cordapps/corda-finance-contracts-4.9.jar, rootPackageName=null), RestrictedURL(url=file:/Users/peter.li/Desktop/obligation-cordapp/workflows/build/mock-network/20230131-071742.428-776CC513ECE7E110/nodes/0/cordapps/contracts-1.0.jar, rootPackageName=null), RestrictedURL(url=file:/Users/peter.li/Desktop/obligation-cordapp/workflows/build/mock-network/20230131-071742.428-776CC513ECE7E110/nodes/0/cordapps/workflows-1.0.jar, rootPackageName=null) {}
[INFO ] 2023-01-31T07:17:58,394Z [Test worker] cordapp.JarScanningCordappLoader. - Scanning CorDapp in file:/Users/peter.li/Desktop/obligation-cordapp/workflows/build/mock-network/20230131-071742.428-776CC513ECE7E110/nodes/0/cordapps/accounts-contracts-1.0.jar {}
[INFO ] 2023-01-31T07:17:58,531Z [Test worker] cordapp.JarScanningCordappLoader. - Scanning CorDapp in file:/Users/peter.li/Desktop/obligation-cordapp/workflows/build/mock-network/20230131-071742.428-776CC513ECE7E110/nodes/0/cordapps/accounts-workflows-1.0.jar {}
[INFO ] 2023-01-31T07:17:58,719Z [Test worker] cordapp.JarScanningCordappLoader. - Scanning CorDapp in file:/Users/peter.li/Desktop/obligation-cordapp/workflows/build/mock-network/20230131-071742.428-776CC513ECE7E110/nodes/0/cordapps/corda-finance-contracts-4.9.jar {}
[INFO ] 2023-01-31T07:17:58,865Z [Test worker] cordapp.JarScanningCordappLoader. - Scanning CorDapp in file:/Users/peter.li/Desktop/obligation-cordapp/workflows/build/mock-network/20230131-071742.428-776CC513ECE7E110/nodes/0/cordapps/contracts-1.0.jar {}
[INFO ] 2023-01-31T07:17:58,876Z [Test worker] cordapp.JarScanningCordappLoader. - Scanning CorDapp in file:/Users/peter.li/Desktop/obligation-cordapp/workflows/build/mock-network/20230131-071742.428-776CC513ECE7E110/nodes/0/cordapps/workflows-1.0.jar {}
[INFO ] 2023-01-31T07:18:00,260Z [Test worker] internal.InternalMockNetwork$MockNode. - MessagingService active change to: false {}
[INFO ] 2023-01-31T07:18:00,482Z [Test worker] internal.InternalMockNetwork$MockNode. - Flow external operation executor has a max of 2 threads {}
[INFO ] 2023-01-31T07:18:00,542Z [Test worker] internal.InternalMockNetwork$MockNode. - Node starting up ... {}
[INFO ] 2023-01-31T07:18:00,564Z [Test worker] internal.KeyStoreHandler. - Loaded trusted root certificate: DL7fwxLm5xbiMD8adUuYTsPZHAict46Ng4w6RNcySt5vAw, alias: cordarootca {}
[INFO ] 2023-01-31T07:18:00,569Z [Test worker] internal.KeyStoreHandler. - Loaded node identity key: DLJ7LYAgQWf2L71ofGc7VpvZ79ypFF5z6vH5nFgejR3xkg, alias: identity-private-key {}
[INFO ] 2023-01-31T07:18:00,704Z [Test worker] internal.NodeFlowManager. - Registered com.r3.corda.lib.accounts.workflows.flows.ShareStateAndSyncAccounts to initiate com.r3.corda.lib.accounts.workflows.flows.ReceiveStateAndSyncAccounts (version 1) {}
[INFO ] 2023-01-31T07:18:00,704Z [Test worker] internal.NodeFlowManager. - Registered com.r3.corda.lib.accounts.workflows.flows.ShareStateWithAccount to initiate com.r3.corda.lib.accounts.workflows.flows.ReceiveStateForAccount (version 1) {}
[INFO ] 2023-01-31T07:18:00,704Z [Test worker] internal.NodeFlowManager. - Registered com.r3.corda.lib.accounts.workflows.flows.RequestAccountInfo to initiate com.r3.corda.lib.accounts.workflows.flows.RequestAccountInfoHandler (version 1) {}
[INFO ] 2023-01-31T07:18:00,705Z [Test worker] internal.NodeFlowManager. - Registered com.r3.corda.lib.accounts.workflows.flows.RequestKeyForAccount to initiate com.r3.corda.lib.accounts.workflows.flows.SendKeyForAccount (version 1) {}
[INFO ] 2023-01-31T07:18:00,706Z [Test worker] internal.NodeFlowManager. - Registered com.r3.corda.lib.accounts.workflows.flows.ShareAccountInfo to initiate com.r3.corda.lib.accounts.workflows.flows.ShareAccountInfoHandler (version 1) {}
[INFO ] 2023-01-31T07:18:00,707Z [Test worker] internal.NodeFlowManager. - Registered net.corda.samples.obligation.flows.IOUIssueFlow to initiate net.corda.samples.obligation.flows.IOUIssueFlowResponder (version 1) {}
[INFO ] 2023-01-31T07:18:00,707Z [Test worker] internal.NodeFlowManager. - Registered net.corda.samples.obligation.flows.IOUSettleFlow to initiate net.corda.samples.obligation.flows.IOUSettleFlowResponder (version 1) {}
[INFO ] 2023-01-31T07:18:00,707Z [Test worker] internal.NodeFlowManager. - Registered net.corda.samples.obligation.flows.IOUTransferFlow to initiate net.corda.samples.obligation.flows.IOUTransferFlowResponder (version 1) {}
[INFO ] 2023-01-31T07:18:00,708Z [Test worker] internal.NodeFlowManager. - Registered net.corda.samples.obligation.flows.SyncKey to initiate net.corda.samples.obligation.flows.SyncKeyResponder (version 1) {}
[INFO ] 2023-01-31T07:18:00,777Z [Test worker] internal.InternalMockNetwork$MockNode. - Loaded network parameters: NetworkParameters {
      minimumPlatformVersion=4
      notaries=[NotaryInfo(identity=O=Notary, L=London, C=GB, validating=true)]
      maxMessageSize=10485760
      maxTransactionSize=524288000
      whitelistedContractImplementations {
        
      }
      eventHorizon=PT720H
      packageOwnership {
        
      }
      modifiedTime=2023-01-31T07:17:41.997Z
      epoch=1
  } {}
[INFO ] 2023-01-31T07:18:06,122Z [Test worker] internal.InternalMockNetwork$MockNode. - Connected to H2 database. {}
[INFO ] 2023-01-31T07:18:06,180Z [Test worker] persistence.HibernateConfiguration. - Init HibernateConfiguration for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1), AccountsContractsSchemaV1(name=com.r3.corda.lib.accounts.contracts.internal.schemas.AccountsContractsSchema, version=1), AccountsWorkflowsSchemaV1(name=com.r3.corda.lib.accounts.workflows.internal.schemas.AccountsWorkflowsSchema, version=1), CashSchemaV1(name=net.corda.finance.schemas.CashSchema, version=1), CommercialPaperSchemaV1(name=net.corda.finance.schemas.CommercialPaperSchema, version=1), JPANotarySchemaV1(name=net.corda.notary.jpa.JPANotarySchema, version=1)] {}
[INFO ] 2023-01-31T07:18:06,185Z [Test worker] factory.BaseSessionFactoryFactory. - Creating session factory for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1), AccountsContractsSchemaV1(name=com.r3.corda.lib.accounts.contracts.internal.schemas.AccountsContractsSchema, version=1), AccountsWorkflowsSchemaV1(name=com.r3.corda.lib.accounts.workflows.internal.schemas.AccountsWorkflowsSchema, version=1), CashSchemaV1(name=net.corda.finance.schemas.CashSchema, version=1), CommercialPaperSchemaV1(name=net.corda.finance.schemas.CommercialPaperSchema, version=1), JPANotarySchemaV1(name=net.corda.notary.jpa.JPANotarySchema, version=1)] {}
[INFO ] 2023-01-31T07:18:08,675Z [Test worker] factory.BaseSessionFactoryFactory. - Created session factory for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1), AccountsContractsSchemaV1(name=com.r3.corda.lib.accounts.contracts.internal.schemas.AccountsContractsSchema, version=1), AccountsWorkflowsSchemaV1(name=com.r3.corda.lib.accounts.workflows.internal.schemas.AccountsWorkflowsSchema, version=1), CashSchemaV1(name=net.corda.finance.schemas.CashSchema, version=1), CommercialPaperSchemaV1(name=net.corda.finance.schemas.CommercialPaperSchema, version=1), JPANotarySchemaV1(name=net.corda.notary.jpa.JPANotarySchema, version=1)] {}
[INFO ] 2023-01-31T07:18:08,941Z [Test worker] internal.InternalMockNetwork$MockNode. - Node-info has changed so submitting update. Old node-info was null {}
[INFO ] 2023-01-31T07:18:08,948Z [Test worker] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Notary, L=London, C=GB], platformVersion=11, serial=1675149488941), owningKey=DLJ7LYAgQWf2L71ofGc7VpvZ79ypFF5z6vH5nFgejR3xkg {}
[INFO ] 2023-01-31T07:18:08,948Z [Test worker] network.PersistentNetworkMapCache. - No previous node found for O=Notary, L=London, C=GB {}
[INFO ] 2023-01-31T07:18:09,109Z [Test worker] internal.InternalMockNetwork$MockNode. - New node-info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Notary, L=London, C=GB], platformVersion=11, serial=1675149488941) {}
[INFO ] 2023-01-31T07:18:09,161Z [Test worker] network.NetworkMapUpdater. - Auto-accept enabled for network parameter changes which modify only: [epoch, modifiedTime, packageOwnership, whitelistedContractImplementations] {}
[INFO ] 2023-01-31T07:18:09,190Z [Test worker] internal.MockNodeMessagingService. - Status change to true {}
[INFO ] 2023-01-31T07:18:09,192Z [Test worker] internal.InternalMockNetwork$MockNode. - MessagingService active change to: true {}
[INFO ] 2023-01-31T07:18:09,231Z [MockNode-1-2] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Notary, L=London, C=GB], platformVersion=11, serial=1675149488941), owningKey=DLJ7LYAgQWf2L71ofGc7VpvZ79ypFF5z6vH5nFgejR3xkg {}
[INFO ] 2023-01-31T07:18:09,231Z [MockNode-1-2] network.PersistentNetworkMapCache. - Previous node was identical to incoming one - doing nothing {}
[INFO ] 2023-01-31T07:18:09,335Z [Test worker] persistence.NodeAttachmentService. - Stored new attachment: id=D370FD972C7E07CE73F4F9B7886D226807F6B16C4EE287398B9C69384109DC14 uploader=app filename=Accounts SDK - States and Contracts {}
[INFO ] 2023-01-31T07:18:09,378Z [Test worker] persistence.NodeAttachmentService. - Stored new attachment: id=BD0C932EAF8B1FE96DCBBF275B914BCD776D14EDC8F97DCEBF7E15DA09C606AE uploader=app filename=Corda Finance Demo {}
[INFO ] 2023-01-31T07:18:09,395Z [Test worker] persistence.NodeAttachmentService. - Stored new attachment: id=8D797B45F40704FA4FD70921F5BC6E2D7B34450D345CE6788D2A87859EF63BD8 uploader=app filename=Obligation Contracts {}
[INFO ] 2023-01-31T07:18:09,410Z [Test worker] internal.InternalMockNetwork$MockNode. - Installed com.r3.corda.lib.accounts.workflows.services.KeyManagementBackedAccountService Corda service {}
[INFO ] 2023-01-31T07:18:09,410Z [Test worker] utilities.NotaryLoader. - Starting notary service: class net.corda.notary.jpa.JPANotaryService {}
[INFO ] 2023-01-31T07:18:10,266Z [Test worker] statemachine.SingleThreadedStateMachineManager. - Node ready, info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Notary, L=London, C=GB], platformVersion=11, serial=1675149488941) {}
[INFO ] 2023-01-31T07:18:10,273Z [Test worker] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Notary, L=London, C=GB], platformVersion=11, serial=1675149488941), owningKey=DLJ7LYAgQWf2L71ofGc7VpvZ79ypFF5z6vH5nFgejR3xkg {}
[INFO ] 2023-01-31T07:18:10,273Z [Test worker] network.PersistentNetworkMapCache. - Previous node was identical to incoming one - doing nothing {}
[INFO ] 2023-01-31T07:18:10,273Z [Test worker] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Notary, L=London, C=GB], platformVersion=11, serial=1675149488941), owningKey=DLJ7LYAgQWf2L71ofGc7VpvZ79ypFF5z6vH5nFgejR3xkg {}
[INFO ] 2023-01-31T07:18:10,273Z [Test worker] network.PersistentNetworkMapCache. - Previous node was identical to incoming one - doing nothing {}
[INFO ] 2023-01-31T07:18:10,291Z [Test worker] cordapp.JarScanningCordappLoader. - Looking for CorDapps in [build/mock-network/20230131-071742.428-776CC513ECE7E110/nodes/1/cordapps] {}
[INFO ] 2023-01-31T07:18:10,292Z [Test worker] cordapp.JarScanningCordappLoader. - Loading CorDapps from RestrictedURL(url=file:/Users/peter.li/Desktop/obligation-cordapp/workflows/build/mock-network/20230131-071742.428-776CC513ECE7E110/nodes/1/cordapps/accounts-contracts-1.0.jar, rootPackageName=null), RestrictedURL(url=file:/Users/peter.li/Desktop/obligation-cordapp/workflows/build/mock-network/20230131-071742.428-776CC513ECE7E110/nodes/1/cordapps/accounts-workflows-1.0.jar, rootPackageName=null), RestrictedURL(url=file:/Users/peter.li/Desktop/obligation-cordapp/workflows/build/mock-network/20230131-071742.428-776CC513ECE7E110/nodes/1/cordapps/corda-finance-contracts-4.9.jar, rootPackageName=null), RestrictedURL(url=file:/Users/peter.li/Desktop/obligation-cordapp/workflows/build/mock-network/20230131-071742.428-776CC513ECE7E110/nodes/1/cordapps/contracts-1.0.jar, rootPackageName=null), RestrictedURL(url=file:/Users/peter.li/Desktop/obligation-cordapp/workflows/build/mock-network/20230131-071742.428-776CC513ECE7E110/nodes/1/cordapps/workflows-1.0.jar, rootPackageName=null) {}
[INFO ] 2023-01-31T07:18:10,293Z [Test worker] cordapp.JarScanningCordappLoader. - Scanning CorDapp in file:/Users/peter.li/Desktop/obligation-cordapp/workflows/build/mock-network/20230131-071742.428-776CC513ECE7E110/nodes/1/cordapps/accounts-contracts-1.0.jar {}
[INFO ] 2023-01-31T07:18:10,324Z [Test worker] cordapp.JarScanningCordappLoader. - Scanning CorDapp in file:/Users/peter.li/Desktop/obligation-cordapp/workflows/build/mock-network/20230131-071742.428-776CC513ECE7E110/nodes/1/cordapps/accounts-workflows-1.0.jar {}
[INFO ] 2023-01-31T07:18:10,336Z [Test worker] cordapp.JarScanningCordappLoader. - Scanning CorDapp in file:/Users/peter.li/Desktop/obligation-cordapp/workflows/build/mock-network/20230131-071742.428-776CC513ECE7E110/nodes/1/cordapps/corda-finance-contracts-4.9.jar {}
[INFO ] 2023-01-31T07:18:10,356Z [Test worker] cordapp.JarScanningCordappLoader. - Scanning CorDapp in file:/Users/peter.li/Desktop/obligation-cordapp/workflows/build/mock-network/20230131-071742.428-776CC513ECE7E110/nodes/1/cordapps/contracts-1.0.jar {}
[INFO ] 2023-01-31T07:18:10,362Z [Test worker] cordapp.JarScanningCordappLoader. - Scanning CorDapp in file:/Users/peter.li/Desktop/obligation-cordapp/workflows/build/mock-network/20230131-071742.428-776CC513ECE7E110/nodes/1/cordapps/workflows-1.0.jar {}
[INFO ] 2023-01-31T07:18:10,395Z [Test worker] internal.InternalMockNetwork$MockNode. - MessagingService active change to: false {}
[INFO ] 2023-01-31T07:18:10,396Z [Test worker] internal.InternalMockNetwork$MockNode. - Flow external operation executor has a max of 2 threads {}
[INFO ] 2023-01-31T07:18:10,397Z [Test worker] internal.InternalMockNetwork$MockNode. - Node starting up ... {}
[INFO ] 2023-01-31T07:18:10,442Z [Test worker] internal.KeyStoreHandler. - Loaded trusted root certificate: DL7fwxLm5xbiMD8adUuYTsPZHAict46Ng4w6RNcySt5vAw, alias: cordarootca {}
[INFO ] 2023-01-31T07:18:10,442Z [Test worker] internal.KeyStoreHandler. - Loaded node identity key: DL45EBUWniF27i7jHfa2Q9QVjWDLN5sT3Z5dR15sZCRvrB, alias: identity-private-key {}
[INFO ] 2023-01-31T07:18:10,452Z [Test worker] internal.NodeFlowManager. - Registered com.r3.corda.lib.accounts.workflows.flows.ShareStateAndSyncAccounts to initiate com.r3.corda.lib.accounts.workflows.flows.ReceiveStateAndSyncAccounts (version 1) {}
[INFO ] 2023-01-31T07:18:10,452Z [Test worker] internal.NodeFlowManager. - Registered com.r3.corda.lib.accounts.workflows.flows.ShareStateWithAccount to initiate com.r3.corda.lib.accounts.workflows.flows.ReceiveStateForAccount (version 1) {}
[INFO ] 2023-01-31T07:18:10,452Z [Test worker] internal.NodeFlowManager. - Registered com.r3.corda.lib.accounts.workflows.flows.RequestAccountInfo to initiate com.r3.corda.lib.accounts.workflows.flows.RequestAccountInfoHandler (version 1) {}
[INFO ] 2023-01-31T07:18:10,452Z [Test worker] internal.NodeFlowManager. - Registered com.r3.corda.lib.accounts.workflows.flows.RequestKeyForAccount to initiate com.r3.corda.lib.accounts.workflows.flows.SendKeyForAccount (version 1) {}
[INFO ] 2023-01-31T07:18:10,452Z [Test worker] internal.NodeFlowManager. - Registered com.r3.corda.lib.accounts.workflows.flows.ShareAccountInfo to initiate com.r3.corda.lib.accounts.workflows.flows.ShareAccountInfoHandler (version 1) {}
[INFO ] 2023-01-31T07:18:10,452Z [Test worker] internal.NodeFlowManager. - Registered net.corda.samples.obligation.flows.IOUIssueFlow to initiate net.corda.samples.obligation.flows.IOUIssueFlowResponder (version 1) {}
[INFO ] 2023-01-31T07:18:10,452Z [Test worker] internal.NodeFlowManager. - Registered net.corda.samples.obligation.flows.IOUSettleFlow to initiate net.corda.samples.obligation.flows.IOUSettleFlowResponder (version 1) {}
[INFO ] 2023-01-31T07:18:10,452Z [Test worker] internal.NodeFlowManager. - Registered net.corda.samples.obligation.flows.IOUTransferFlow to initiate net.corda.samples.obligation.flows.IOUTransferFlowResponder (version 1) {}
[INFO ] 2023-01-31T07:18:10,452Z [Test worker] internal.NodeFlowManager. - Registered net.corda.samples.obligation.flows.SyncKey to initiate net.corda.samples.obligation.flows.SyncKeyResponder (version 1) {}
[INFO ] 2023-01-31T07:18:10,459Z [Test worker] internal.InternalMockNetwork$MockNode. - Loaded network parameters: NetworkParameters {
      minimumPlatformVersion=4
      notaries=[NotaryInfo(identity=O=Notary, L=London, C=GB, validating=true)]
      maxMessageSize=10485760
      maxTransactionSize=524288000
      whitelistedContractImplementations {
        
      }
      eventHorizon=PT720H
      packageOwnership {
        
      }
      modifiedTime=2023-01-31T07:17:41.997Z
      epoch=1
  } {}
[INFO ] 2023-01-31T07:18:11,231Z [Test worker] internal.InternalMockNetwork$MockNode. - Connected to H2 database. {}
[INFO ] 2023-01-31T07:18:11,233Z [Test worker] persistence.HibernateConfiguration. - Init HibernateConfiguration for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1), AccountsContractsSchemaV1(name=com.r3.corda.lib.accounts.contracts.internal.schemas.AccountsContractsSchema, version=1), AccountsWorkflowsSchemaV1(name=com.r3.corda.lib.accounts.workflows.internal.schemas.AccountsWorkflowsSchema, version=1), CashSchemaV1(name=net.corda.finance.schemas.CashSchema, version=1), CommercialPaperSchemaV1(name=net.corda.finance.schemas.CommercialPaperSchema, version=1)] {}
[INFO ] 2023-01-31T07:18:11,233Z [Test worker] factory.BaseSessionFactoryFactory. - Creating session factory for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1), AccountsContractsSchemaV1(name=com.r3.corda.lib.accounts.contracts.internal.schemas.AccountsContractsSchema, version=1), AccountsWorkflowsSchemaV1(name=com.r3.corda.lib.accounts.workflows.internal.schemas.AccountsWorkflowsSchema, version=1), CashSchemaV1(name=net.corda.finance.schemas.CashSchema, version=1), CommercialPaperSchemaV1(name=net.corda.finance.schemas.CommercialPaperSchema, version=1)] {}
[INFO ] 2023-01-31T07:18:11,435Z [Test worker] factory.BaseSessionFactoryFactory. - Created session factory for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1), AccountsContractsSchemaV1(name=com.r3.corda.lib.accounts.contracts.internal.schemas.AccountsContractsSchema, version=1), AccountsWorkflowsSchemaV1(name=com.r3.corda.lib.accounts.workflows.internal.schemas.AccountsWorkflowsSchema, version=1), CashSchemaV1(name=net.corda.finance.schemas.CashSchema, version=1), CommercialPaperSchemaV1(name=net.corda.finance.schemas.CommercialPaperSchema, version=1)] {}
[INFO ] 2023-01-31T07:18:11,443Z [Test worker] internal.InternalMockNetwork$MockNode. - Node-info has changed so submitting update. Old node-info was null {}
[INFO ] 2023-01-31T07:18:11,449Z [Test worker] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 1, L=London, C=GB], platformVersion=11, serial=1675149491443), owningKey=DL45EBUWniF27i7jHfa2Q9QVjWDLN5sT3Z5dR15sZCRvrB {}
[INFO ] 2023-01-31T07:18:11,449Z [Test worker] network.PersistentNetworkMapCache. - No previous node found for O=Mock Company 1, L=London, C=GB {}
[INFO ] 2023-01-31T07:18:11,461Z [Test worker] internal.InternalMockNetwork$MockNode. - New node-info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 1, L=London, C=GB], platformVersion=11, serial=1675149491443) {}
[INFO ] 2023-01-31T07:18:11,471Z [Test worker] network.NetworkMapUpdater. - Auto-accept enabled for network parameter changes which modify only: [epoch, modifiedTime, packageOwnership, whitelistedContractImplementations] {}
[INFO ] 2023-01-31T07:18:11,472Z [Test worker] internal.MockNodeMessagingService. - Status change to true {}
[INFO ] 2023-01-31T07:18:11,472Z [Test worker] internal.InternalMockNetwork$MockNode. - MessagingService active change to: true {}
[INFO ] 2023-01-31T07:18:11,486Z [MockNode-2-2] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 1, L=London, C=GB], platformVersion=11, serial=1675149491443), owningKey=DL45EBUWniF27i7jHfa2Q9QVjWDLN5sT3Z5dR15sZCRvrB {}
[INFO ] 2023-01-31T07:18:11,486Z [MockNode-2-2] network.PersistentNetworkMapCache. - Previous node was identical to incoming one - doing nothing {}
[INFO ] 2023-01-31T07:18:11,521Z [Test worker] persistence.NodeAttachmentService. - Stored new attachment: id=D370FD972C7E07CE73F4F9B7886D226807F6B16C4EE287398B9C69384109DC14 uploader=app filename=Accounts SDK - States and Contracts {}
[INFO ] 2023-01-31T07:18:11,566Z [Test worker] persistence.NodeAttachmentService. - Stored new attachment: id=BD0C932EAF8B1FE96DCBBF275B914BCD776D14EDC8F97DCEBF7E15DA09C606AE uploader=app filename=Corda Finance Demo {}
[INFO ] 2023-01-31T07:18:11,584Z [Test worker] persistence.NodeAttachmentService. - Stored new attachment: id=8D797B45F40704FA4FD70921F5BC6E2D7B34450D345CE6788D2A87859EF63BD8 uploader=app filename=Obligation Contracts {}
[INFO ] 2023-01-31T07:18:11,588Z [Test worker] internal.InternalMockNetwork$MockNode. - Installed com.r3.corda.lib.accounts.workflows.services.KeyManagementBackedAccountService Corda service {}
[INFO ] 2023-01-31T07:18:11,615Z [Test worker] statemachine.SingleThreadedStateMachineManager. - Node ready, info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 1, L=London, C=GB], platformVersion=11, serial=1675149491443) {}
[INFO ] 2023-01-31T07:18:11,619Z [Test worker] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Notary, L=London, C=GB], platformVersion=11, serial=1675149488941), owningKey=DLJ7LYAgQWf2L71ofGc7VpvZ79ypFF5z6vH5nFgejR3xkg {}
[INFO ] 2023-01-31T07:18:11,619Z [Test worker] network.PersistentNetworkMapCache. - No previous node found for O=Notary, L=London, C=GB {}
[INFO ] 2023-01-31T07:18:11,633Z [Test worker] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 1, L=London, C=GB], platformVersion=11, serial=1675149491443), owningKey=DL45EBUWniF27i7jHfa2Q9QVjWDLN5sT3Z5dR15sZCRvrB {}
[INFO ] 2023-01-31T07:18:11,633Z [Test worker] network.PersistentNetworkMapCache. - No previous node found for O=Mock Company 1, L=London, C=GB {}
[INFO ] 2023-01-31T07:18:11,644Z [Test worker] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 1, L=London, C=GB], platformVersion=11, serial=1675149491443), owningKey=DL45EBUWniF27i7jHfa2Q9QVjWDLN5sT3Z5dR15sZCRvrB {}
[INFO ] 2023-01-31T07:18:11,644Z [Test worker] network.PersistentNetworkMapCache. - Previous node was identical to incoming one - doing nothing {}
[INFO ] 2023-01-31T07:18:11,644Z [Test worker] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 1, L=London, C=GB], platformVersion=11, serial=1675149491443), owningKey=DL45EBUWniF27i7jHfa2Q9QVjWDLN5sT3Z5dR15sZCRvrB {}
[INFO ] 2023-01-31T07:18:11,644Z [Test worker] network.PersistentNetworkMapCache. - Previous node was identical to incoming one - doing nothing {}
[INFO ] 2023-01-31T07:18:11,662Z [Test worker] cordapp.JarScanningCordappLoader. - Looking for CorDapps in [build/mock-network/20230131-071742.428-776CC513ECE7E110/nodes/2/cordapps] {}
[INFO ] 2023-01-31T07:18:11,664Z [Test worker] cordapp.JarScanningCordappLoader. - Loading CorDapps from RestrictedURL(url=file:/Users/peter.li/Desktop/obligation-cordapp/workflows/build/mock-network/20230131-071742.428-776CC513ECE7E110/nodes/2/cordapps/accounts-contracts-1.0.jar, rootPackageName=null), RestrictedURL(url=file:/Users/peter.li/Desktop/obligation-cordapp/workflows/build/mock-network/20230131-071742.428-776CC513ECE7E110/nodes/2/cordapps/accounts-workflows-1.0.jar, rootPackageName=null), RestrictedURL(url=file:/Users/peter.li/Desktop/obligation-cordapp/workflows/build/mock-network/20230131-071742.428-776CC513ECE7E110/nodes/2/cordapps/corda-finance-contracts-4.9.jar, rootPackageName=null), RestrictedURL(url=file:/Users/peter.li/Desktop/obligation-cordapp/workflows/build/mock-network/20230131-071742.428-776CC513ECE7E110/nodes/2/cordapps/contracts-1.0.jar, rootPackageName=null), RestrictedURL(url=file:/Users/peter.li/Desktop/obligation-cordapp/workflows/build/mock-network/20230131-071742.428-776CC513ECE7E110/nodes/2/cordapps/workflows-1.0.jar, rootPackageName=null) {}
[INFO ] 2023-01-31T07:18:11,664Z [Test worker] cordapp.JarScanningCordappLoader. - Scanning CorDapp in file:/Users/peter.li/Desktop/obligation-cordapp/workflows/build/mock-network/20230131-071742.428-776CC513ECE7E110/nodes/2/cordapps/accounts-contracts-1.0.jar {}
[INFO ] 2023-01-31T07:18:11,691Z [Test worker] cordapp.JarScanningCordappLoader. - Scanning CorDapp in file:/Users/peter.li/Desktop/obligation-cordapp/workflows/build/mock-network/20230131-071742.428-776CC513ECE7E110/nodes/2/cordapps/accounts-workflows-1.0.jar {}
[INFO ] 2023-01-31T07:18:11,701Z [Test worker] cordapp.JarScanningCordappLoader. - Scanning CorDapp in file:/Users/peter.li/Desktop/obligation-cordapp/workflows/build/mock-network/20230131-071742.428-776CC513ECE7E110/nodes/2/cordapps/corda-finance-contracts-4.9.jar {}
[INFO ] 2023-01-31T07:18:11,720Z [Test worker] cordapp.JarScanningCordappLoader. - Scanning CorDapp in file:/Users/peter.li/Desktop/obligation-cordapp/workflows/build/mock-network/20230131-071742.428-776CC513ECE7E110/nodes/2/cordapps/contracts-1.0.jar {}
[INFO ] 2023-01-31T07:18:11,728Z [Test worker] cordapp.JarScanningCordappLoader. - Scanning CorDapp in file:/Users/peter.li/Desktop/obligation-cordapp/workflows/build/mock-network/20230131-071742.428-776CC513ECE7E110/nodes/2/cordapps/workflows-1.0.jar {}
[INFO ] 2023-01-31T07:18:11,763Z [Test worker] internal.InternalMockNetwork$MockNode. - MessagingService active change to: false {}
[INFO ] 2023-01-31T07:18:11,764Z [Test worker] internal.InternalMockNetwork$MockNode. - Flow external operation executor has a max of 2 threads {}
[INFO ] 2023-01-31T07:18:11,766Z [Test worker] internal.InternalMockNetwork$MockNode. - Node starting up ... {}
[INFO ] 2023-01-31T07:18:11,818Z [Test worker] internal.KeyStoreHandler. - Loaded trusted root certificate: DL7fwxLm5xbiMD8adUuYTsPZHAict46Ng4w6RNcySt5vAw, alias: cordarootca {}
[INFO ] 2023-01-31T07:18:11,818Z [Test worker] internal.KeyStoreHandler. - Loaded node identity key: DLABX3ENTJKEiXozew41eqFooEnSXXGS9D6L5eE9ZvK7bZ, alias: identity-private-key {}
[INFO ] 2023-01-31T07:18:11,825Z [Test worker] internal.NodeFlowManager. - Registered com.r3.corda.lib.accounts.workflows.flows.ShareStateAndSyncAccounts to initiate com.r3.corda.lib.accounts.workflows.flows.ReceiveStateAndSyncAccounts (version 1) {}
[INFO ] 2023-01-31T07:18:11,825Z [Test worker] internal.NodeFlowManager. - Registered com.r3.corda.lib.accounts.workflows.flows.ShareStateWithAccount to initiate com.r3.corda.lib.accounts.workflows.flows.ReceiveStateForAccount (version 1) {}
[INFO ] 2023-01-31T07:18:11,825Z [Test worker] internal.NodeFlowManager. - Registered com.r3.corda.lib.accounts.workflows.flows.RequestAccountInfo to initiate com.r3.corda.lib.accounts.workflows.flows.RequestAccountInfoHandler (version 1) {}
[INFO ] 2023-01-31T07:18:11,826Z [Test worker] internal.NodeFlowManager. - Registered com.r3.corda.lib.accounts.workflows.flows.RequestKeyForAccount to initiate com.r3.corda.lib.accounts.workflows.flows.SendKeyForAccount (version 1) {}
[INFO ] 2023-01-31T07:18:11,826Z [Test worker] internal.NodeFlowManager. - Registered com.r3.corda.lib.accounts.workflows.flows.ShareAccountInfo to initiate com.r3.corda.lib.accounts.workflows.flows.ShareAccountInfoHandler (version 1) {}
[INFO ] 2023-01-31T07:18:11,826Z [Test worker] internal.NodeFlowManager. - Registered net.corda.samples.obligation.flows.IOUIssueFlow to initiate net.corda.samples.obligation.flows.IOUIssueFlowResponder (version 1) {}
[INFO ] 2023-01-31T07:18:11,826Z [Test worker] internal.NodeFlowManager. - Registered net.corda.samples.obligation.flows.IOUSettleFlow to initiate net.corda.samples.obligation.flows.IOUSettleFlowResponder (version 1) {}
[INFO ] 2023-01-31T07:18:11,826Z [Test worker] internal.NodeFlowManager. - Registered net.corda.samples.obligation.flows.IOUTransferFlow to initiate net.corda.samples.obligation.flows.IOUTransferFlowResponder (version 1) {}
[INFO ] 2023-01-31T07:18:11,826Z [Test worker] internal.NodeFlowManager. - Registered net.corda.samples.obligation.flows.SyncKey to initiate net.corda.samples.obligation.flows.SyncKeyResponder (version 1) {}
[INFO ] 2023-01-31T07:18:11,832Z [Test worker] internal.InternalMockNetwork$MockNode. - Loaded network parameters: NetworkParameters {
      minimumPlatformVersion=4
      notaries=[NotaryInfo(identity=O=Notary, L=London, C=GB, validating=true)]
      maxMessageSize=10485760
      maxTransactionSize=524288000
      whitelistedContractImplementations {
        
      }
      eventHorizon=PT720H
      packageOwnership {
        
      }
      modifiedTime=2023-01-31T07:17:41.997Z
      epoch=1
  } {}
[INFO ] 2023-01-31T07:18:12,553Z [Test worker] internal.InternalMockNetwork$MockNode. - Connected to H2 database. {}
[INFO ] 2023-01-31T07:18:12,555Z [Test worker] persistence.HibernateConfiguration. - Init HibernateConfiguration for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1), AccountsContractsSchemaV1(name=com.r3.corda.lib.accounts.contracts.internal.schemas.AccountsContractsSchema, version=1), AccountsWorkflowsSchemaV1(name=com.r3.corda.lib.accounts.workflows.internal.schemas.AccountsWorkflowsSchema, version=1), CashSchemaV1(name=net.corda.finance.schemas.CashSchema, version=1), CommercialPaperSchemaV1(name=net.corda.finance.schemas.CommercialPaperSchema, version=1)] {}
[INFO ] 2023-01-31T07:18:12,555Z [Test worker] factory.BaseSessionFactoryFactory. - Creating session factory for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1), AccountsContractsSchemaV1(name=com.r3.corda.lib.accounts.contracts.internal.schemas.AccountsContractsSchema, version=1), AccountsWorkflowsSchemaV1(name=com.r3.corda.lib.accounts.workflows.internal.schemas.AccountsWorkflowsSchema, version=1), CashSchemaV1(name=net.corda.finance.schemas.CashSchema, version=1), CommercialPaperSchemaV1(name=net.corda.finance.schemas.CommercialPaperSchema, version=1)] {}
[INFO ] 2023-01-31T07:18:12,771Z [Test worker] factory.BaseSessionFactoryFactory. - Created session factory for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1), AccountsContractsSchemaV1(name=com.r3.corda.lib.accounts.contracts.internal.schemas.AccountsContractsSchema, version=1), AccountsWorkflowsSchemaV1(name=com.r3.corda.lib.accounts.workflows.internal.schemas.AccountsWorkflowsSchema, version=1), CashSchemaV1(name=net.corda.finance.schemas.CashSchema, version=1), CommercialPaperSchemaV1(name=net.corda.finance.schemas.CommercialPaperSchema, version=1)] {}
[INFO ] 2023-01-31T07:18:12,778Z [Test worker] internal.InternalMockNetwork$MockNode. - Node-info has changed so submitting update. Old node-info was null {}
[INFO ] 2023-01-31T07:18:12,783Z [Test worker] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 2, L=London, C=GB], platformVersion=11, serial=1675149492778), owningKey=DLABX3ENTJKEiXozew41eqFooEnSXXGS9D6L5eE9ZvK7bZ {}
[INFO ] 2023-01-31T07:18:12,783Z [Test worker] network.PersistentNetworkMapCache. - No previous node found for O=Mock Company 2, L=London, C=GB {}
[INFO ] 2023-01-31T07:18:12,794Z [Test worker] internal.InternalMockNetwork$MockNode. - New node-info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 2, L=London, C=GB], platformVersion=11, serial=1675149492778) {}
[INFO ] 2023-01-31T07:18:12,805Z [Test worker] network.NetworkMapUpdater. - Auto-accept enabled for network parameter changes which modify only: [epoch, modifiedTime, packageOwnership, whitelistedContractImplementations] {}
[INFO ] 2023-01-31T07:18:12,805Z [Test worker] internal.MockNodeMessagingService. - Status change to true {}
[INFO ] 2023-01-31T07:18:12,806Z [Test worker] internal.InternalMockNetwork$MockNode. - MessagingService active change to: true {}
[INFO ] 2023-01-31T07:18:12,820Z [MockNode-3-2] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 2, L=London, C=GB], platformVersion=11, serial=1675149492778), owningKey=DLABX3ENTJKEiXozew41eqFooEnSXXGS9D6L5eE9ZvK7bZ {}
[INFO ] 2023-01-31T07:18:12,820Z [MockNode-3-2] network.PersistentNetworkMapCache. - Previous node was identical to incoming one - doing nothing {}
[INFO ] 2023-01-31T07:18:12,847Z [Test worker] persistence.NodeAttachmentService. - Stored new attachment: id=D370FD972C7E07CE73F4F9B7886D226807F6B16C4EE287398B9C69384109DC14 uploader=app filename=Accounts SDK - States and Contracts {}
[INFO ] 2023-01-31T07:18:12,899Z [Test worker] persistence.NodeAttachmentService. - Stored new attachment: id=BD0C932EAF8B1FE96DCBBF275B914BCD776D14EDC8F97DCEBF7E15DA09C606AE uploader=app filename=Corda Finance Demo {}
[INFO ] 2023-01-31T07:18:12,917Z [Test worker] persistence.NodeAttachmentService. - Stored new attachment: id=8D797B45F40704FA4FD70921F5BC6E2D7B34450D345CE6788D2A87859EF63BD8 uploader=app filename=Obligation Contracts {}
[INFO ] 2023-01-31T07:18:12,920Z [Test worker] internal.InternalMockNetwork$MockNode. - Installed com.r3.corda.lib.accounts.workflows.services.KeyManagementBackedAccountService Corda service {}
[INFO ] 2023-01-31T07:18:12,944Z [Test worker] statemachine.SingleThreadedStateMachineManager. - Node ready, info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 2, L=London, C=GB], platformVersion=11, serial=1675149492778) {}
[INFO ] 2023-01-31T07:18:12,947Z [Test worker] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Notary, L=London, C=GB], platformVersion=11, serial=1675149488941), owningKey=DLJ7LYAgQWf2L71ofGc7VpvZ79ypFF5z6vH5nFgejR3xkg {}
[INFO ] 2023-01-31T07:18:12,947Z [Test worker] network.PersistentNetworkMapCache. - No previous node found for O=Notary, L=London, C=GB {}
[INFO ] 2023-01-31T07:18:12,959Z [Test worker] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 2, L=London, C=GB], platformVersion=11, serial=1675149492778), owningKey=DLABX3ENTJKEiXozew41eqFooEnSXXGS9D6L5eE9ZvK7bZ {}
[INFO ] 2023-01-31T07:18:12,959Z [Test worker] network.PersistentNetworkMapCache. - No previous node found for O=Mock Company 2, L=London, C=GB {}
[INFO ] 2023-01-31T07:18:12,973Z [Test worker] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 1, L=London, C=GB], platformVersion=11, serial=1675149491443), owningKey=DL45EBUWniF27i7jHfa2Q9QVjWDLN5sT3Z5dR15sZCRvrB {}
[INFO ] 2023-01-31T07:18:12,973Z [Test worker] network.PersistentNetworkMapCache. - No previous node found for O=Mock Company 1, L=London, C=GB {}
[INFO ] 2023-01-31T07:18:12,985Z [Test worker] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 2, L=London, C=GB], platformVersion=11, serial=1675149492778), owningKey=DLABX3ENTJKEiXozew41eqFooEnSXXGS9D6L5eE9ZvK7bZ {}
[INFO ] 2023-01-31T07:18:12,985Z [Test worker] network.PersistentNetworkMapCache. - No previous node found for O=Mock Company 2, L=London, C=GB {}
[INFO ] 2023-01-31T07:18:12,997Z [Test worker] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 2, L=London, C=GB], platformVersion=11, serial=1675149492778), owningKey=DLABX3ENTJKEiXozew41eqFooEnSXXGS9D6L5eE9ZvK7bZ {}
[INFO ] 2023-01-31T07:18:12,997Z [Test worker] network.PersistentNetworkMapCache. - Previous node was identical to incoming one - doing nothing {}
[INFO ] 2023-01-31T07:18:12,997Z [Test worker] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 2, L=London, C=GB], platformVersion=11, serial=1675149492778), owningKey=DLABX3ENTJKEiXozew41eqFooEnSXXGS9D6L5eE9ZvK7bZ {}
[INFO ] 2023-01-31T07:18:12,997Z [Test worker] network.PersistentNetworkMapCache. - Previous node was identical to incoming one - doing nothing {}
[INFO ] 2023-01-31T07:18:13,012Z [Test worker] cordapp.JarScanningCordappLoader. - Looking for CorDapps in [build/mock-network/20230131-071742.428-776CC513ECE7E110/nodes/3/cordapps] {}
[INFO ] 2023-01-31T07:18:13,012Z [Test worker] cordapp.JarScanningCordappLoader. - Loading CorDapps from RestrictedURL(url=file:/Users/peter.li/Desktop/obligation-cordapp/workflows/build/mock-network/20230131-071742.428-776CC513ECE7E110/nodes/3/cordapps/accounts-contracts-1.0.jar, rootPackageName=null), RestrictedURL(url=file:/Users/peter.li/Desktop/obligation-cordapp/workflows/build/mock-network/20230131-071742.428-776CC513ECE7E110/nodes/3/cordapps/accounts-workflows-1.0.jar, rootPackageName=null), RestrictedURL(url=file:/Users/peter.li/Desktop/obligation-cordapp/workflows/build/mock-network/20230131-071742.428-776CC513ECE7E110/nodes/3/cordapps/corda-finance-contracts-4.9.jar, rootPackageName=null), RestrictedURL(url=file:/Users/peter.li/Desktop/obligation-cordapp/workflows/build/mock-network/20230131-071742.428-776CC513ECE7E110/nodes/3/cordapps/contracts-1.0.jar, rootPackageName=null), RestrictedURL(url=file:/Users/peter.li/Desktop/obligation-cordapp/workflows/build/mock-network/20230131-071742.428-776CC513ECE7E110/nodes/3/cordapps/workflows-1.0.jar, rootPackageName=null) {}
[INFO ] 2023-01-31T07:18:13,012Z [Test worker] cordapp.JarScanningCordappLoader. - Scanning CorDapp in file:/Users/peter.li/Desktop/obligation-cordapp/workflows/build/mock-network/20230131-071742.428-776CC513ECE7E110/nodes/3/cordapps/accounts-contracts-1.0.jar {}
[INFO ] 2023-01-31T07:18:13,036Z [Test worker] cordapp.JarScanningCordappLoader. - Scanning CorDapp in file:/Users/peter.li/Desktop/obligation-cordapp/workflows/build/mock-network/20230131-071742.428-776CC513ECE7E110/nodes/3/cordapps/accounts-workflows-1.0.jar {}
[INFO ] 2023-01-31T07:18:13,046Z [Test worker] cordapp.JarScanningCordappLoader. - Scanning CorDapp in file:/Users/peter.li/Desktop/obligation-cordapp/workflows/build/mock-network/20230131-071742.428-776CC513ECE7E110/nodes/3/cordapps/corda-finance-contracts-4.9.jar {}
[INFO ] 2023-01-31T07:18:13,066Z [Test worker] cordapp.JarScanningCordappLoader. - Scanning CorDapp in file:/Users/peter.li/Desktop/obligation-cordapp/workflows/build/mock-network/20230131-071742.428-776CC513ECE7E110/nodes/3/cordapps/contracts-1.0.jar {}
[INFO ] 2023-01-31T07:18:13,073Z [Test worker] cordapp.JarScanningCordappLoader. - Scanning CorDapp in file:/Users/peter.li/Desktop/obligation-cordapp/workflows/build/mock-network/20230131-071742.428-776CC513ECE7E110/nodes/3/cordapps/workflows-1.0.jar {}
[INFO ] 2023-01-31T07:18:13,098Z [Test worker] internal.InternalMockNetwork$MockNode. - MessagingService active change to: false {}
[INFO ] 2023-01-31T07:18:13,100Z [Test worker] internal.InternalMockNetwork$MockNode. - Flow external operation executor has a max of 2 threads {}
[INFO ] 2023-01-31T07:18:13,101Z [Test worker] internal.InternalMockNetwork$MockNode. - Node starting up ... {}
[INFO ] 2023-01-31T07:18:13,149Z [Test worker] internal.KeyStoreHandler. - Loaded trusted root certificate: DL7fwxLm5xbiMD8adUuYTsPZHAict46Ng4w6RNcySt5vAw, alias: cordarootca {}
[INFO ] 2023-01-31T07:18:13,149Z [Test worker] internal.KeyStoreHandler. - Loaded node identity key: DLFzjfAh9bDgL1utvzRqdoKFoMfbCNRBDUoagEq1U3T26K, alias: identity-private-key {}
[INFO ] 2023-01-31T07:18:13,158Z [Test worker] internal.NodeFlowManager. - Registered com.r3.corda.lib.accounts.workflows.flows.ShareStateAndSyncAccounts to initiate com.r3.corda.lib.accounts.workflows.flows.ReceiveStateAndSyncAccounts (version 1) {}
[INFO ] 2023-01-31T07:18:13,158Z [Test worker] internal.NodeFlowManager. - Registered com.r3.corda.lib.accounts.workflows.flows.ShareStateWithAccount to initiate com.r3.corda.lib.accounts.workflows.flows.ReceiveStateForAccount (version 1) {}
[INFO ] 2023-01-31T07:18:13,158Z [Test worker] internal.NodeFlowManager. - Registered com.r3.corda.lib.accounts.workflows.flows.RequestAccountInfo to initiate com.r3.corda.lib.accounts.workflows.flows.RequestAccountInfoHandler (version 1) {}
[INFO ] 2023-01-31T07:18:13,158Z [Test worker] internal.NodeFlowManager. - Registered com.r3.corda.lib.accounts.workflows.flows.RequestKeyForAccount to initiate com.r3.corda.lib.accounts.workflows.flows.SendKeyForAccount (version 1) {}
[INFO ] 2023-01-31T07:18:13,158Z [Test worker] internal.NodeFlowManager. - Registered com.r3.corda.lib.accounts.workflows.flows.ShareAccountInfo to initiate com.r3.corda.lib.accounts.workflows.flows.ShareAccountInfoHandler (version 1) {}
[INFO ] 2023-01-31T07:18:13,158Z [Test worker] internal.NodeFlowManager. - Registered net.corda.samples.obligation.flows.IOUIssueFlow to initiate net.corda.samples.obligation.flows.IOUIssueFlowResponder (version 1) {}
[INFO ] 2023-01-31T07:18:13,158Z [Test worker] internal.NodeFlowManager. - Registered net.corda.samples.obligation.flows.IOUSettleFlow to initiate net.corda.samples.obligation.flows.IOUSettleFlowResponder (version 1) {}
[INFO ] 2023-01-31T07:18:13,158Z [Test worker] internal.NodeFlowManager. - Registered net.corda.samples.obligation.flows.IOUTransferFlow to initiate net.corda.samples.obligation.flows.IOUTransferFlowResponder (version 1) {}
[INFO ] 2023-01-31T07:18:13,158Z [Test worker] internal.NodeFlowManager. - Registered net.corda.samples.obligation.flows.SyncKey to initiate net.corda.samples.obligation.flows.SyncKeyResponder (version 1) {}
[INFO ] 2023-01-31T07:18:13,164Z [Test worker] internal.InternalMockNetwork$MockNode. - Loaded network parameters: NetworkParameters {
      minimumPlatformVersion=4
      notaries=[NotaryInfo(identity=O=Notary, L=London, C=GB, validating=true)]
      maxMessageSize=10485760
      maxTransactionSize=524288000
      whitelistedContractImplementations {
        
      }
      eventHorizon=PT720H
      packageOwnership {
        
      }
      modifiedTime=2023-01-31T07:17:41.997Z
      epoch=1
  } {}
[INFO ] 2023-01-31T07:18:13,856Z [Test worker] internal.InternalMockNetwork$MockNode. - Connected to H2 database. {}
[INFO ] 2023-01-31T07:18:13,857Z [Test worker] persistence.HibernateConfiguration. - Init HibernateConfiguration for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1), AccountsContractsSchemaV1(name=com.r3.corda.lib.accounts.contracts.internal.schemas.AccountsContractsSchema, version=1), AccountsWorkflowsSchemaV1(name=com.r3.corda.lib.accounts.workflows.internal.schemas.AccountsWorkflowsSchema, version=1), CashSchemaV1(name=net.corda.finance.schemas.CashSchema, version=1), CommercialPaperSchemaV1(name=net.corda.finance.schemas.CommercialPaperSchema, version=1)] {}
[INFO ] 2023-01-31T07:18:13,857Z [Test worker] factory.BaseSessionFactoryFactory. - Creating session factory for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1), AccountsContractsSchemaV1(name=com.r3.corda.lib.accounts.contracts.internal.schemas.AccountsContractsSchema, version=1), AccountsWorkflowsSchemaV1(name=com.r3.corda.lib.accounts.workflows.internal.schemas.AccountsWorkflowsSchema, version=1), CashSchemaV1(name=net.corda.finance.schemas.CashSchema, version=1), CommercialPaperSchemaV1(name=net.corda.finance.schemas.CommercialPaperSchema, version=1)] {}
[INFO ] 2023-01-31T07:18:14,006Z [Test worker] factory.BaseSessionFactoryFactory. - Created session factory for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1), AccountsContractsSchemaV1(name=com.r3.corda.lib.accounts.contracts.internal.schemas.AccountsContractsSchema, version=1), AccountsWorkflowsSchemaV1(name=com.r3.corda.lib.accounts.workflows.internal.schemas.AccountsWorkflowsSchema, version=1), CashSchemaV1(name=net.corda.finance.schemas.CashSchema, version=1), CommercialPaperSchemaV1(name=net.corda.finance.schemas.CommercialPaperSchema, version=1)] {}
[INFO ] 2023-01-31T07:18:14,012Z [Test worker] internal.InternalMockNetwork$MockNode. - Node-info has changed so submitting update. Old node-info was null {}
[INFO ] 2023-01-31T07:18:14,016Z [Test worker] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 3, L=London, C=GB], platformVersion=11, serial=1675149494012), owningKey=DLFzjfAh9bDgL1utvzRqdoKFoMfbCNRBDUoagEq1U3T26K {}
[INFO ] 2023-01-31T07:18:14,016Z [Test worker] network.PersistentNetworkMapCache. - No previous node found for O=Mock Company 3, L=London, C=GB {}
[INFO ] 2023-01-31T07:18:14,025Z [Test worker] internal.InternalMockNetwork$MockNode. - New node-info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 3, L=London, C=GB], platformVersion=11, serial=1675149494012) {}
[INFO ] 2023-01-31T07:18:14,033Z [Test worker] network.NetworkMapUpdater. - Auto-accept enabled for network parameter changes which modify only: [epoch, modifiedTime, packageOwnership, whitelistedContractImplementations] {}
[INFO ] 2023-01-31T07:18:14,034Z [Test worker] internal.MockNodeMessagingService. - Status change to true {}
[INFO ] 2023-01-31T07:18:14,034Z [Test worker] internal.InternalMockNetwork$MockNode. - MessagingService active change to: true {}
[INFO ] 2023-01-31T07:18:14,046Z [MockNode-4-2] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 3, L=London, C=GB], platformVersion=11, serial=1675149494012), owningKey=DLFzjfAh9bDgL1utvzRqdoKFoMfbCNRBDUoagEq1U3T26K {}
[INFO ] 2023-01-31T07:18:14,046Z [MockNode-4-2] network.PersistentNetworkMapCache. - Previous node was identical to incoming one - doing nothing {}
[INFO ] 2023-01-31T07:18:14,066Z [Test worker] persistence.NodeAttachmentService. - Stored new attachment: id=D370FD972C7E07CE73F4F9B7886D226807F6B16C4EE287398B9C69384109DC14 uploader=app filename=Accounts SDK - States and Contracts {}
[INFO ] 2023-01-31T07:18:14,101Z [Test worker] persistence.NodeAttachmentService. - Stored new attachment: id=BD0C932EAF8B1FE96DCBBF275B914BCD776D14EDC8F97DCEBF7E15DA09C606AE uploader=app filename=Corda Finance Demo {}
[INFO ] 2023-01-31T07:18:14,115Z [Test worker] persistence.NodeAttachmentService. - Stored new attachment: id=8D797B45F40704FA4FD70921F5BC6E2D7B34450D345CE6788D2A87859EF63BD8 uploader=app filename=Obligation Contracts {}
[INFO ] 2023-01-31T07:18:14,118Z [Test worker] internal.InternalMockNetwork$MockNode. - Installed com.r3.corda.lib.accounts.workflows.services.KeyManagementBackedAccountService Corda service {}
[INFO ] 2023-01-31T07:18:14,137Z [Test worker] statemachine.SingleThreadedStateMachineManager. - Node ready, info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 3, L=London, C=GB], platformVersion=11, serial=1675149494012) {}
[INFO ] 2023-01-31T07:18:14,139Z [Test worker] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Notary, L=London, C=GB], platformVersion=11, serial=1675149488941), owningKey=DLJ7LYAgQWf2L71ofGc7VpvZ79ypFF5z6vH5nFgejR3xkg {}
[INFO ] 2023-01-31T07:18:14,139Z [Test worker] network.PersistentNetworkMapCache. - No previous node found for O=Notary, L=London, C=GB {}
[INFO ] 2023-01-31T07:18:14,151Z [Test worker] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 3, L=London, C=GB], platformVersion=11, serial=1675149494012), owningKey=DLFzjfAh9bDgL1utvzRqdoKFoMfbCNRBDUoagEq1U3T26K {}
[INFO ] 2023-01-31T07:18:14,151Z [Test worker] network.PersistentNetworkMapCache. - No previous node found for O=Mock Company 3, L=London, C=GB {}
[INFO ] 2023-01-31T07:18:14,165Z [Test worker] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 1, L=London, C=GB], platformVersion=11, serial=1675149491443), owningKey=DL45EBUWniF27i7jHfa2Q9QVjWDLN5sT3Z5dR15sZCRvrB {}
[INFO ] 2023-01-31T07:18:14,165Z [Test worker] network.PersistentNetworkMapCache. - No previous node found for O=Mock Company 1, L=London, C=GB {}
[INFO ] 2023-01-31T07:18:14,177Z [Test worker] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 3, L=London, C=GB], platformVersion=11, serial=1675149494012), owningKey=DLFzjfAh9bDgL1utvzRqdoKFoMfbCNRBDUoagEq1U3T26K {}
[INFO ] 2023-01-31T07:18:14,177Z [Test worker] network.PersistentNetworkMapCache. - No previous node found for O=Mock Company 3, L=London, C=GB {}
[INFO ] 2023-01-31T07:18:14,192Z [Test worker] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 2, L=London, C=GB], platformVersion=11, serial=1675149492778), owningKey=DLABX3ENTJKEiXozew41eqFooEnSXXGS9D6L5eE9ZvK7bZ {}
[INFO ] 2023-01-31T07:18:14,192Z [Test worker] network.PersistentNetworkMapCache. - No previous node found for O=Mock Company 2, L=London, C=GB {}
[INFO ] 2023-01-31T07:18:14,206Z [Test worker] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 3, L=London, C=GB], platformVersion=11, serial=1675149494012), owningKey=DLFzjfAh9bDgL1utvzRqdoKFoMfbCNRBDUoagEq1U3T26K {}
[INFO ] 2023-01-31T07:18:14,206Z [Test worker] network.PersistentNetworkMapCache. - No previous node found for O=Mock Company 3, L=London, C=GB {}
[INFO ] 2023-01-31T07:18:14,216Z [Test worker] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 3, L=London, C=GB], platformVersion=11, serial=1675149494012), owningKey=DLFzjfAh9bDgL1utvzRqdoKFoMfbCNRBDUoagEq1U3T26K {}
[INFO ] 2023-01-31T07:18:14,216Z [Test worker] network.PersistentNetworkMapCache. - Previous node was identical to incoming one - doing nothing {}
[INFO ] 2023-01-31T07:18:14,216Z [Test worker] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 3, L=London, C=GB], platformVersion=11, serial=1675149494012), owningKey=DLFzjfAh9bDgL1utvzRqdoKFoMfbCNRBDUoagEq1U3T26K {}
[INFO ] 2023-01-31T07:18:14,216Z [Test worker] network.PersistentNetworkMapCache. - Previous node was identical to incoming one - doing nothing {}
[WARN ] 2023-01-31T07:18:14,218Z [Test worker] internal.NodeFlowManager. - Multiple flows are registered for InitiatingFlow: class net.corda.samples.obligation.flows.IOUIssueFlow, currently using: class net.corda.samples.obligation.flows.IOUIssueFlowResponder {}
[INFO ] 2023-01-31T07:18:14,218Z [Test worker] internal.NodeFlowManager. - Registered net.corda.samples.obligation.flows.IOUIssueFlow to initiate net.corda.samples.obligation.flows.IOUIssueFlowResponder (version 1) {}
[WARN ] 2023-01-31T07:18:14,223Z [Test worker] internal.NodeFlowManager. - Multiple flows are registered for InitiatingFlow: class net.corda.samples.obligation.flows.IOUIssueFlow, currently using: class net.corda.samples.obligation.flows.IOUIssueFlowResponder {}
[INFO ] 2023-01-31T07:18:14,223Z [Test worker] internal.NodeFlowManager. - Registered net.corda.samples.obligation.flows.IOUIssueFlow to initiate net.corda.samples.obligation.flows.IOUIssueFlowResponder (version 1) {}
[WARN ] 2023-01-31T07:18:14,223Z [Test worker] internal.NodeFlowManager. - Multiple flows are registered for InitiatingFlow: class net.corda.samples.obligation.flows.IOUIssueFlow, currently using: class net.corda.samples.obligation.flows.IOUIssueFlowResponder {}
[INFO ] 2023-01-31T07:18:14,223Z [Test worker] internal.NodeFlowManager. - Registered net.corda.samples.obligation.flows.IOUIssueFlow to initiate net.corda.samples.obligation.flows.IOUIssueFlowResponder (version 1) {}
[WARN ] 2023-01-31T07:18:14,223Z [Test worker] internal.NodeFlowManager. - Multiple flows are registered for InitiatingFlow: class net.corda.samples.obligation.flows.IOUSettleFlow, currently using: class net.corda.samples.obligation.flows.IOUSettleFlowResponder {}
[INFO ] 2023-01-31T07:18:14,223Z [Test worker] internal.NodeFlowManager. - Registered net.corda.samples.obligation.flows.IOUSettleFlow to initiate net.corda.samples.obligation.flows.IOUSettleFlowResponder (version 1) {}
[WARN ] 2023-01-31T07:18:14,223Z [Test worker] internal.NodeFlowManager. - Multiple flows are registered for InitiatingFlow: class net.corda.samples.obligation.flows.IOUSettleFlow, currently using: class net.corda.samples.obligation.flows.IOUSettleFlowResponder {}
[INFO ] 2023-01-31T07:18:14,223Z [Test worker] internal.NodeFlowManager. - Registered net.corda.samples.obligation.flows.IOUSettleFlow to initiate net.corda.samples.obligation.flows.IOUSettleFlowResponder (version 1) {}
[WARN ] 2023-01-31T07:18:14,223Z [Test worker] internal.NodeFlowManager. - Multiple flows are registered for InitiatingFlow: class net.corda.samples.obligation.flows.IOUSettleFlow, currently using: class net.corda.samples.obligation.flows.IOUSettleFlowResponder {}
[INFO ] 2023-01-31T07:18:14,223Z [Test worker] internal.NodeFlowManager. - Registered net.corda.samples.obligation.flows.IOUSettleFlow to initiate net.corda.samples.obligation.flows.IOUSettleFlowResponder (version 1) {}
[INFO ] 2023-01-31T07:18:15,099Z [Mock network] corda.flow. - No need to notarise this transaction. {actor_id=Only For Testing, actor_owning_identity=O=Mock Company 1, L=London, C=GB, actor_store_id=TEST, fiber-id=10000001, flow-id=2e5481b4-b8ed-4a16-b5c1-4376e7223316, invocation_id=25ffd20a-5981-45c5-899d-101530ddb117, invocation_timestamp=2023-01-31T07:18:14.255Z, origin=Only For Testing, session_id=25ffd20a-5981-45c5-899d-101530ddb117, session_timestamp=2023-01-31T07:18:14.255Z, thread-id=854, tx_id=79108D959B23D3658C1189A0B96E7C6D293184253B0E48BDA04BCA785DDBBE16}
[INFO ] 2023-01-31T07:18:15,099Z [Mock network] corda.flow. - Recording transaction locally. {actor_id=Only For Testing, actor_owning_identity=O=Mock Company 1, L=London, C=GB, actor_store_id=TEST, fiber-id=10000001, flow-id=2e5481b4-b8ed-4a16-b5c1-4376e7223316, invocation_id=25ffd20a-5981-45c5-899d-101530ddb117, invocation_timestamp=2023-01-31T07:18:14.255Z, origin=Only For Testing, session_id=25ffd20a-5981-45c5-899d-101530ddb117, session_timestamp=2023-01-31T07:18:14.255Z, thread-id=854, tx_id=79108D959B23D3658C1189A0B96E7C6D293184253B0E48BDA04BCA785DDBBE16}
[INFO ] 2023-01-31T07:18:15,273Z [Mock network] corda.flow. - Recorded transaction locally successfully. {actor_id=Only For Testing, actor_owning_identity=O=Mock Company 1, L=London, C=GB, actor_store_id=TEST, fiber-id=10000001, flow-id=2e5481b4-b8ed-4a16-b5c1-4376e7223316, invocation_id=25ffd20a-5981-45c5-899d-101530ddb117, invocation_timestamp=2023-01-31T07:18:14.255Z, origin=Only For Testing, session_id=25ffd20a-5981-45c5-899d-101530ddb117, session_timestamp=2023-01-31T07:18:14.255Z, thread-id=854, tx_id=79108D959B23D3658C1189A0B96E7C6D293184253B0E48BDA04BCA785DDBBE16}
[INFO ] 2023-01-31T07:18:15,274Z [Mock network] corda.flow. - All parties received the transaction successfully. {actor_id=Only For Testing, actor_owning_identity=O=Mock Company 1, L=London, C=GB, actor_store_id=TEST, fiber-id=10000001, flow-id=2e5481b4-b8ed-4a16-b5c1-4376e7223316, invocation_id=25ffd20a-5981-45c5-899d-101530ddb117, invocation_timestamp=2023-01-31T07:18:14.255Z, origin=Only For Testing, session_id=25ffd20a-5981-45c5-899d-101530ddb117, session_timestamp=2023-01-31T07:18:14.255Z, thread-id=854, tx_id=79108D959B23D3658C1189A0B96E7C6D293184253B0E48BDA04BCA785DDBBE16}
[INFO ] 2023-01-31T07:18:15,490Z [Mock network] corda.flow. - Received transaction acknowledgement request from party O=Mock Company 1, L=London, C=GB. {fiber-id=10000002, flow-id=319a30d2-3744-48c5-a5c2-efd20b6083ab, invocation_id=5c4e4d11-a5b0-4b53-9e4e-7132d885deb0, invocation_timestamp=2023-01-31T07:18:15.439Z, origin=O=Mock Company 1, L=London, C=GB, session_id=5c4e4d11-a5b0-4b53-9e4e-7132d885deb0, session_timestamp=2023-01-31T07:18:15.439Z, thread-id=854, tx_id=79108D959B23D3658C1189A0B96E7C6D293184253B0E48BDA04BCA785DDBBE16}
[INFO ] 2023-01-31T07:18:15,540Z [Mock network] corda.flow. - Transaction dependencies resolution completed. {fiber-id=10000002, flow-id=319a30d2-3744-48c5-a5c2-efd20b6083ab, invocation_id=5c4e4d11-a5b0-4b53-9e4e-7132d885deb0, invocation_timestamp=2023-01-31T07:18:15.439Z, origin=O=Mock Company 1, L=London, C=GB, session_id=5c4e4d11-a5b0-4b53-9e4e-7132d885deb0, session_timestamp=2023-01-31T07:18:15.439Z, thread-id=854, tx_id=79108D959B23D3658C1189A0B96E7C6D293184253B0E48BDA04BCA785DDBBE16}
[INFO ] 2023-01-31T07:18:15,633Z [Mock network] corda.flow. - Successfully received fully signed tx. Sending it to the vault for processing. {fiber-id=10000002, flow-id=319a30d2-3744-48c5-a5c2-efd20b6083ab, invocation_id=5c4e4d11-a5b0-4b53-9e4e-7132d885deb0, invocation_timestamp=2023-01-31T07:18:15.439Z, origin=O=Mock Company 1, L=London, C=GB, session_id=5c4e4d11-a5b0-4b53-9e4e-7132d885deb0, session_timestamp=2023-01-31T07:18:15.439Z, thread-id=854, tx_id=79108D959B23D3658C1189A0B96E7C6D293184253B0E48BDA04BCA785DDBBE16}
[INFO ] 2023-01-31T07:18:15,643Z [Mock network] corda.flow. - Successfully recorded received transaction locally. {fiber-id=10000002, flow-id=319a30d2-3744-48c5-a5c2-efd20b6083ab, invocation_id=5c4e4d11-a5b0-4b53-9e4e-7132d885deb0, invocation_timestamp=2023-01-31T07:18:15.439Z, origin=O=Mock Company 1, L=London, C=GB, session_id=5c4e4d11-a5b0-4b53-9e4e-7132d885deb0, session_timestamp=2023-01-31T07:18:15.439Z, thread-id=854, tx_id=79108D959B23D3658C1189A0B96E7C6D293184253B0E48BDA04BCA785DDBBE16}
[INFO ] 2023-01-31T07:18:15,738Z [Mock network] corda.flow. - Received transaction acknowledgement request from party O=Mock Company 1, L=London, C=GB. {fiber-id=10000003, flow-id=eb47ff79-45f4-454f-b9dd-4ca49c16a076, invocation_id=d98906a0-22e6-4bb7-ad9f-98ea540b55d8, invocation_timestamp=2023-01-31T07:18:15.711Z, origin=O=Mock Company 1, L=London, C=GB, session_id=d98906a0-22e6-4bb7-ad9f-98ea540b55d8, session_timestamp=2023-01-31T07:18:15.711Z, thread-id=854, tx_id=79108D959B23D3658C1189A0B96E7C6D293184253B0E48BDA04BCA785DDBBE16}
[INFO ] 2023-01-31T07:18:15,749Z [Mock network] corda.flow. - Transaction dependencies resolution completed. {fiber-id=10000003, flow-id=eb47ff79-45f4-454f-b9dd-4ca49c16a076, invocation_id=d98906a0-22e6-4bb7-ad9f-98ea540b55d8, invocation_timestamp=2023-01-31T07:18:15.711Z, origin=O=Mock Company 1, L=London, C=GB, session_id=d98906a0-22e6-4bb7-ad9f-98ea540b55d8, session_timestamp=2023-01-31T07:18:15.711Z, thread-id=854, tx_id=79108D959B23D3658C1189A0B96E7C6D293184253B0E48BDA04BCA785DDBBE16}
[INFO ] 2023-01-31T07:18:15,781Z [Mock network] corda.flow. - Successfully received fully signed tx. Sending it to the vault for processing. {fiber-id=10000003, flow-id=eb47ff79-45f4-454f-b9dd-4ca49c16a076, invocation_id=d98906a0-22e6-4bb7-ad9f-98ea540b55d8, invocation_timestamp=2023-01-31T07:18:15.711Z, origin=O=Mock Company 1, L=London, C=GB, session_id=d98906a0-22e6-4bb7-ad9f-98ea540b55d8, session_timestamp=2023-01-31T07:18:15.711Z, thread-id=854, tx_id=79108D959B23D3658C1189A0B96E7C6D293184253B0E48BDA04BCA785DDBBE16}
[INFO ] 2023-01-31T07:18:15,789Z [Mock network] corda.flow. - Successfully recorded received transaction locally. {fiber-id=10000003, flow-id=eb47ff79-45f4-454f-b9dd-4ca49c16a076, invocation_id=d98906a0-22e6-4bb7-ad9f-98ea540b55d8, invocation_timestamp=2023-01-31T07:18:15.711Z, origin=O=Mock Company 1, L=London, C=GB, session_id=d98906a0-22e6-4bb7-ad9f-98ea540b55d8, session_timestamp=2023-01-31T07:18:15.711Z, thread-id=854, tx_id=79108D959B23D3658C1189A0B96E7C6D293184253B0E48BDA04BCA785DDBBE16}
[INFO ] 2023-01-31T07:18:15,840Z [Mock network] corda.flow. - No need to notarise this transaction. {actor_id=Only For Testing, actor_owning_identity=O=Mock Company 2, L=London, C=GB, actor_store_id=TEST, fiber-id=10000004, flow-id=ccedbdfe-fe11-4b9a-bea8-48b7b8871061, invocation_id=1a2428d7-15d0-43e0-943f-97734cc94b2c, invocation_timestamp=2023-01-31T07:18:15.817Z, origin=Only For Testing, session_id=1a2428d7-15d0-43e0-943f-97734cc94b2c, session_timestamp=2023-01-31T07:18:15.817Z, thread-id=854, tx_id=8EA855802B3F1C62488E9D922D92CAF3D7AC49AF09330324A725E0C29AB9D421}
[INFO ] 2023-01-31T07:18:15,840Z [Mock network] corda.flow. - Recording transaction locally. {actor_id=Only For Testing, actor_owning_identity=O=Mock Company 2, L=London, C=GB, actor_store_id=TEST, fiber-id=10000004, flow-id=ccedbdfe-fe11-4b9a-bea8-48b7b8871061, invocation_id=1a2428d7-15d0-43e0-943f-97734cc94b2c, invocation_timestamp=2023-01-31T07:18:15.817Z, origin=Only For Testing, session_id=1a2428d7-15d0-43e0-943f-97734cc94b2c, session_timestamp=2023-01-31T07:18:15.817Z, thread-id=854, tx_id=8EA855802B3F1C62488E9D922D92CAF3D7AC49AF09330324A725E0C29AB9D421}
[INFO ] 2023-01-31T07:18:15,845Z [Mock network] corda.flow. - Recorded transaction locally successfully. {actor_id=Only For Testing, actor_owning_identity=O=Mock Company 2, L=London, C=GB, actor_store_id=TEST, fiber-id=10000004, flow-id=ccedbdfe-fe11-4b9a-bea8-48b7b8871061, invocation_id=1a2428d7-15d0-43e0-943f-97734cc94b2c, invocation_timestamp=2023-01-31T07:18:15.817Z, origin=Only For Testing, session_id=1a2428d7-15d0-43e0-943f-97734cc94b2c, session_timestamp=2023-01-31T07:18:15.817Z, thread-id=854, tx_id=8EA855802B3F1C62488E9D922D92CAF3D7AC49AF09330324A725E0C29AB9D421}
[INFO ] 2023-01-31T07:18:15,845Z [Mock network] corda.flow. - All parties received the transaction successfully. {actor_id=Only For Testing, actor_owning_identity=O=Mock Company 2, L=London, C=GB, actor_store_id=TEST, fiber-id=10000004, flow-id=ccedbdfe-fe11-4b9a-bea8-48b7b8871061, invocation_id=1a2428d7-15d0-43e0-943f-97734cc94b2c, invocation_timestamp=2023-01-31T07:18:15.817Z, origin=Only For Testing, session_id=1a2428d7-15d0-43e0-943f-97734cc94b2c, session_timestamp=2023-01-31T07:18:15.817Z, thread-id=854, tx_id=8EA855802B3F1C62488E9D922D92CAF3D7AC49AF09330324A725E0C29AB9D421}
[INFO ] 2023-01-31T07:18:15,872Z [Mock network] corda.flow. - Received transaction acknowledgement request from party O=Mock Company 2, L=London, C=GB. {fiber-id=10000005, flow-id=bb123585-0783-4ff1-8b4b-699ff46aec69, invocation_id=ae60e56a-4722-49bf-bb9b-aa7171595034, invocation_timestamp=2023-01-31T07:18:15.861Z, origin=O=Mock Company 2, L=London, C=GB, session_id=ae60e56a-4722-49bf-bb9b-aa7171595034, session_timestamp=2023-01-31T07:18:15.861Z, thread-id=854, tx_id=8EA855802B3F1C62488E9D922D92CAF3D7AC49AF09330324A725E0C29AB9D421}
[INFO ] 2023-01-31T07:18:15,881Z [Mock network] corda.flow. - Transaction dependencies resolution completed. {fiber-id=10000005, flow-id=bb123585-0783-4ff1-8b4b-699ff46aec69, invocation_id=ae60e56a-4722-49bf-bb9b-aa7171595034, invocation_timestamp=2023-01-31T07:18:15.861Z, origin=O=Mock Company 2, L=London, C=GB, session_id=ae60e56a-4722-49bf-bb9b-aa7171595034, session_timestamp=2023-01-31T07:18:15.861Z, thread-id=854, tx_id=8EA855802B3F1C62488E9D922D92CAF3D7AC49AF09330324A725E0C29AB9D421}
[INFO ] 2023-01-31T07:18:15,884Z [Mock network] corda.flow. - Successfully received fully signed tx. Sending it to the vault for processing. {fiber-id=10000005, flow-id=bb123585-0783-4ff1-8b4b-699ff46aec69, invocation_id=ae60e56a-4722-49bf-bb9b-aa7171595034, invocation_timestamp=2023-01-31T07:18:15.861Z, origin=O=Mock Company 2, L=London, C=GB, session_id=ae60e56a-4722-49bf-bb9b-aa7171595034, session_timestamp=2023-01-31T07:18:15.861Z, thread-id=854, tx_id=8EA855802B3F1C62488E9D922D92CAF3D7AC49AF09330324A725E0C29AB9D421}
[INFO ] 2023-01-31T07:18:15,890Z [Mock network] corda.flow. - Successfully recorded received transaction locally. {fiber-id=10000005, flow-id=bb123585-0783-4ff1-8b4b-699ff46aec69, invocation_id=ae60e56a-4722-49bf-bb9b-aa7171595034, invocation_timestamp=2023-01-31T07:18:15.861Z, origin=O=Mock Company 2, L=London, C=GB, session_id=ae60e56a-4722-49bf-bb9b-aa7171595034, session_timestamp=2023-01-31T07:18:15.861Z, thread-id=854, tx_id=8EA855802B3F1C62488E9D922D92CAF3D7AC49AF09330324A725E0C29AB9D421}
[INFO ] 2023-01-31T07:18:15,949Z [Mock network] corda.flow. - Received transaction acknowledgement request from party O=Mock Company 2, L=London, C=GB. {fiber-id=10000006, flow-id=208d5244-b142-4b5d-a3e0-4a416267a5b9, invocation_id=97eadffd-e842-43b2-a5a8-d87b82e2cf18, invocation_timestamp=2023-01-31T07:18:15.934Z, origin=O=Mock Company 2, L=London, C=GB, session_id=97eadffd-e842-43b2-a5a8-d87b82e2cf18, session_timestamp=2023-01-31T07:18:15.934Z, thread-id=854, tx_id=8EA855802B3F1C62488E9D922D92CAF3D7AC49AF09330324A725E0C29AB9D421}
[INFO ] 2023-01-31T07:18:15,957Z [Mock network] corda.flow. - Transaction dependencies resolution completed. {fiber-id=10000006, flow-id=208d5244-b142-4b5d-a3e0-4a416267a5b9, invocation_id=97eadffd-e842-43b2-a5a8-d87b82e2cf18, invocation_timestamp=2023-01-31T07:18:15.934Z, origin=O=Mock Company 2, L=London, C=GB, session_id=97eadffd-e842-43b2-a5a8-d87b82e2cf18, session_timestamp=2023-01-31T07:18:15.934Z, thread-id=854, tx_id=8EA855802B3F1C62488E9D922D92CAF3D7AC49AF09330324A725E0C29AB9D421}
[INFO ] 2023-01-31T07:18:15,961Z [Mock network] corda.flow. - Successfully received fully signed tx. Sending it to the vault for processing. {fiber-id=10000006, flow-id=208d5244-b142-4b5d-a3e0-4a416267a5b9, invocation_id=97eadffd-e842-43b2-a5a8-d87b82e2cf18, invocation_timestamp=2023-01-31T07:18:15.934Z, origin=O=Mock Company 2, L=London, C=GB, session_id=97eadffd-e842-43b2-a5a8-d87b82e2cf18, session_timestamp=2023-01-31T07:18:15.934Z, thread-id=854, tx_id=8EA855802B3F1C62488E9D922D92CAF3D7AC49AF09330324A725E0C29AB9D421}
[INFO ] 2023-01-31T07:18:15,966Z [Mock network] corda.flow. - Successfully recorded received transaction locally. {fiber-id=10000006, flow-id=208d5244-b142-4b5d-a3e0-4a416267a5b9, invocation_id=97eadffd-e842-43b2-a5a8-d87b82e2cf18, invocation_timestamp=2023-01-31T07:18:15.934Z, origin=O=Mock Company 2, L=London, C=GB, session_id=97eadffd-e842-43b2-a5a8-d87b82e2cf18, session_timestamp=2023-01-31T07:18:15.934Z, thread-id=854, tx_id=8EA855802B3F1C62488E9D922D92CAF3D7AC49AF09330324A725E0C29AB9D421}
[INFO ] 2023-01-31T07:18:16,007Z [Mock network] corda.flow. - No need to notarise this transaction. {actor_id=Only For Testing, actor_owning_identity=O=Mock Company 3, L=London, C=GB, actor_store_id=TEST, fiber-id=10000007, flow-id=0b500bbe-45a6-4736-a55b-3d3c16b032d6, invocation_id=c2034d4a-80cb-4f61-ba60-46b853738aef, invocation_timestamp=2023-01-31T07:18:15.989Z, origin=Only For Testing, session_id=c2034d4a-80cb-4f61-ba60-46b853738aef, session_timestamp=2023-01-31T07:18:15.989Z, thread-id=854, tx_id=80043D39948E2CE49A61E6568F407E773AAE3774114D726311756A88D0028855}
[INFO ] 2023-01-31T07:18:16,007Z [Mock network] corda.flow. - Recording transaction locally. {actor_id=Only For Testing, actor_owning_identity=O=Mock Company 3, L=London, C=GB, actor_store_id=TEST, fiber-id=10000007, flow-id=0b500bbe-45a6-4736-a55b-3d3c16b032d6, invocation_id=c2034d4a-80cb-4f61-ba60-46b853738aef, invocation_timestamp=2023-01-31T07:18:15.989Z, origin=Only For Testing, session_id=c2034d4a-80cb-4f61-ba60-46b853738aef, session_timestamp=2023-01-31T07:18:15.989Z, thread-id=854, tx_id=80043D39948E2CE49A61E6568F407E773AAE3774114D726311756A88D0028855}
[INFO ] 2023-01-31T07:18:16,010Z [Mock network] corda.flow. - Recorded transaction locally successfully. {actor_id=Only For Testing, actor_owning_identity=O=Mock Company 3, L=London, C=GB, actor_store_id=TEST, fiber-id=10000007, flow-id=0b500bbe-45a6-4736-a55b-3d3c16b032d6, invocation_id=c2034d4a-80cb-4f61-ba60-46b853738aef, invocation_timestamp=2023-01-31T07:18:15.989Z, origin=Only For Testing, session_id=c2034d4a-80cb-4f61-ba60-46b853738aef, session_timestamp=2023-01-31T07:18:15.989Z, thread-id=854, tx_id=80043D39948E2CE49A61E6568F407E773AAE3774114D726311756A88D0028855}
[INFO ] 2023-01-31T07:18:16,011Z [Mock network] corda.flow. - All parties received the transaction successfully. {actor_id=Only For Testing, actor_owning_identity=O=Mock Company 3, L=London, C=GB, actor_store_id=TEST, fiber-id=10000007, flow-id=0b500bbe-45a6-4736-a55b-3d3c16b032d6, invocation_id=c2034d4a-80cb-4f61-ba60-46b853738aef, invocation_timestamp=2023-01-31T07:18:15.989Z, origin=Only For Testing, session_id=c2034d4a-80cb-4f61-ba60-46b853738aef, session_timestamp=2023-01-31T07:18:15.989Z, thread-id=854, tx_id=80043D39948E2CE49A61E6568F407E773AAE3774114D726311756A88D0028855}
[INFO ] 2023-01-31T07:18:16,041Z [Mock network] corda.flow. - Received transaction acknowledgement request from party O=Mock Company 3, L=London, C=GB. {fiber-id=10000008, flow-id=f4789ae3-4357-41af-af9b-66b41f37d61b, invocation_id=504e0710-1d5d-4ccd-9a40-52d56d5f37b2, invocation_timestamp=2023-01-31T07:18:16.026Z, origin=O=Mock Company 3, L=London, C=GB, session_id=504e0710-1d5d-4ccd-9a40-52d56d5f37b2, session_timestamp=2023-01-31T07:18:16.026Z, thread-id=854, tx_id=80043D39948E2CE49A61E6568F407E773AAE3774114D726311756A88D0028855}
[INFO ] 2023-01-31T07:18:16,051Z [Mock network] corda.flow. - Transaction dependencies resolution completed. {fiber-id=10000008, flow-id=f4789ae3-4357-41af-af9b-66b41f37d61b, invocation_id=504e0710-1d5d-4ccd-9a40-52d56d5f37b2, invocation_timestamp=2023-01-31T07:18:16.026Z, origin=O=Mock Company 3, L=London, C=GB, session_id=504e0710-1d5d-4ccd-9a40-52d56d5f37b2, session_timestamp=2023-01-31T07:18:16.026Z, thread-id=854, tx_id=80043D39948E2CE49A61E6568F407E773AAE3774114D726311756A88D0028855}
[INFO ] 2023-01-31T07:18:16,056Z [Mock network] corda.flow. - Successfully received fully signed tx. Sending it to the vault for processing. {fiber-id=10000008, flow-id=f4789ae3-4357-41af-af9b-66b41f37d61b, invocation_id=504e0710-1d5d-4ccd-9a40-52d56d5f37b2, invocation_timestamp=2023-01-31T07:18:16.026Z, origin=O=Mock Company 3, L=London, C=GB, session_id=504e0710-1d5d-4ccd-9a40-52d56d5f37b2, session_timestamp=2023-01-31T07:18:16.026Z, thread-id=854, tx_id=80043D39948E2CE49A61E6568F407E773AAE3774114D726311756A88D0028855}
[INFO ] 2023-01-31T07:18:16,064Z [Mock network] corda.flow. - Successfully recorded received transaction locally. {fiber-id=10000008, flow-id=f4789ae3-4357-41af-af9b-66b41f37d61b, invocation_id=504e0710-1d5d-4ccd-9a40-52d56d5f37b2, invocation_timestamp=2023-01-31T07:18:16.026Z, origin=O=Mock Company 3, L=London, C=GB, session_id=504e0710-1d5d-4ccd-9a40-52d56d5f37b2, session_timestamp=2023-01-31T07:18:16.026Z, thread-id=854, tx_id=80043D39948E2CE49A61E6568F407E773AAE3774114D726311756A88D0028855}
[INFO ] 2023-01-31T07:18:16,107Z [Mock network] corda.flow. - Received transaction acknowledgement request from party O=Mock Company 3, L=London, C=GB. {fiber-id=10000009, flow-id=84e6a12c-9ced-4860-8f86-b5b33a7e616c, invocation_id=4829d3a0-7157-428a-b88d-f8eeb74b45dd, invocation_timestamp=2023-01-31T07:18:16.094Z, origin=O=Mock Company 3, L=London, C=GB, session_id=4829d3a0-7157-428a-b88d-f8eeb74b45dd, session_timestamp=2023-01-31T07:18:16.094Z, thread-id=854, tx_id=80043D39948E2CE49A61E6568F407E773AAE3774114D726311756A88D0028855}
[INFO ] 2023-01-31T07:18:16,114Z [Mock network] corda.flow. - Transaction dependencies resolution completed. {fiber-id=10000009, flow-id=84e6a12c-9ced-4860-8f86-b5b33a7e616c, invocation_id=4829d3a0-7157-428a-b88d-f8eeb74b45dd, invocation_timestamp=2023-01-31T07:18:16.094Z, origin=O=Mock Company 3, L=London, C=GB, session_id=4829d3a0-7157-428a-b88d-f8eeb74b45dd, session_timestamp=2023-01-31T07:18:16.094Z, thread-id=854, tx_id=80043D39948E2CE49A61E6568F407E773AAE3774114D726311756A88D0028855}
[INFO ] 2023-01-31T07:18:16,118Z [Mock network] corda.flow. - Successfully received fully signed tx. Sending it to the vault for processing. {fiber-id=10000009, flow-id=84e6a12c-9ced-4860-8f86-b5b33a7e616c, invocation_id=4829d3a0-7157-428a-b88d-f8eeb74b45dd, invocation_timestamp=2023-01-31T07:18:16.094Z, origin=O=Mock Company 3, L=London, C=GB, session_id=4829d3a0-7157-428a-b88d-f8eeb74b45dd, session_timestamp=2023-01-31T07:18:16.094Z, thread-id=854, tx_id=80043D39948E2CE49A61E6568F407E773AAE3774114D726311756A88D0028855}
[INFO ] 2023-01-31T07:18:16,124Z [Mock network] corda.flow. - Successfully recorded received transaction locally. {fiber-id=10000009, flow-id=84e6a12c-9ced-4860-8f86-b5b33a7e616c, invocation_id=4829d3a0-7157-428a-b88d-f8eeb74b45dd, invocation_timestamp=2023-01-31T07:18:16.094Z, origin=O=Mock Company 3, L=London, C=GB, session_id=4829d3a0-7157-428a-b88d-f8eeb74b45dd, session_timestamp=2023-01-31T07:18:16.094Z, thread-id=854, tx_id=80043D39948E2CE49A61E6568F407E773AAE3774114D726311756A88D0028855}
[INFO ] 2023-01-31T07:18:16,177Z [Mock network] identity.PersistentIdentityService. - Linking: EDC87BD5C0624E8EB6BC32109ADBBD6FA559114D99C9A40A2FB9C0BD6BED7427 to O=Mock Company 1, L=London, C=GB {actor_id=Only For Testing, actor_owning_identity=O=Mock Company 1, L=London, C=GB, actor_store_id=TEST, fiber-id=10000011, flow-id=d736e62b-7213-49e2-bfc2-39d39a8f2095, invocation_id=50020d20-4598-4825-be7e-b3be84d6124a, invocation_timestamp=2023-01-31T07:18:16.164Z, origin=Only For Testing, session_id=50020d20-4598-4825-be7e-b3be84d6124a, session_timestamp=2023-01-31T07:18:16.164Z, thread-id=854}
[INFO ] 2023-01-31T07:18:16,270Z [Mock network] identity.PersistentIdentityService. - Linking: A9350C985216C7C2382CF1695BC336F06FD81F7DEE57DCE26D362134F2CB8600 to O=Mock Company 2, L=London, C=GB {fiber-id=10000012, flow-id=1a2b8e96-a161-4bb7-ae1b-c890b54821f3, invocation_id=3a000cd5-df20-44c9-a90c-ef3acdcb2fd8, invocation_timestamp=2023-01-31T07:18:16.192Z, origin=O=Mock Company 1, L=London, C=GB, session_id=3a000cd5-df20-44c9-a90c-ef3acdcb2fd8, session_timestamp=2023-01-31T07:18:16.192Z, thread-id=854}
[INFO ] 2023-01-31T07:18:16,297Z [Mock network] identity.PersistentIdentityService. - Linking: A9350C985216C7C2382CF1695BC336F06FD81F7DEE57DCE26D362134F2CB8600 to O=Mock Company 2, L=London, C=GB {actor_id=Only For Testing, actor_owning_identity=O=Mock Company 1, L=London, C=GB, actor_store_id=TEST, fiber-id=10000011, flow-id=d736e62b-7213-49e2-bfc2-39d39a8f2095, invocation_id=50020d20-4598-4825-be7e-b3be84d6124a, invocation_timestamp=2023-01-31T07:18:16.164Z, origin=Only For Testing, session_id=50020d20-4598-4825-be7e-b3be84d6124a, session_timestamp=2023-01-31T07:18:16.164Z, thread-id=854}
[INFO ] 2023-01-31T07:18:16,449Z [Mock network] corda.flow. - Received transaction acknowledgement request from party O=Mock Company 1, L=London, C=GB. {fiber-id=10000013, flow-id=e3082beb-89a9-4032-b7bf-9f8bac9063b3, invocation_id=f6164dec-04a0-48b7-b052-b08626162de0, invocation_timestamp=2023-01-31T07:18:16.431Z, origin=O=Mock Company 1, L=London, C=GB, session_id=f6164dec-04a0-48b7-b052-b08626162de0, session_timestamp=2023-01-31T07:18:16.431Z, thread-id=854, tx_id=7133E952E454C5042124059E41E7E5E2518E87DD0B3F99FDCD6F9A8E8A49A02E}
[INFO ] 2023-01-31T07:18:16,456Z [Mock network] corda.flow. - Transaction dependencies resolution completed. {fiber-id=10000013, flow-id=e3082beb-89a9-4032-b7bf-9f8bac9063b3, invocation_id=f6164dec-04a0-48b7-b052-b08626162de0, invocation_timestamp=2023-01-31T07:18:16.431Z, origin=O=Mock Company 1, L=London, C=GB, session_id=f6164dec-04a0-48b7-b052-b08626162de0, session_timestamp=2023-01-31T07:18:16.431Z, thread-id=854, tx_id=7133E952E454C5042124059E41E7E5E2518E87DD0B3F99FDCD6F9A8E8A49A02E}
[INFO ] 2023-01-31T07:18:16,605Z [Mock network] corda.flow. - No need to notarise this transaction. {actor_id=Only For Testing, actor_owning_identity=O=Mock Company 1, L=London, C=GB, actor_store_id=TEST, fiber-id=10000011, flow-id=d736e62b-7213-49e2-bfc2-39d39a8f2095, invocation_id=50020d20-4598-4825-be7e-b3be84d6124a, invocation_timestamp=2023-01-31T07:18:16.164Z, origin=Only For Testing, session_id=50020d20-4598-4825-be7e-b3be84d6124a, session_timestamp=2023-01-31T07:18:16.164Z, thread-id=854, tx_id=7133E952E454C5042124059E41E7E5E2518E87DD0B3F99FDCD6F9A8E8A49A02E}
[INFO ] 2023-01-31T07:18:16,605Z [Mock network] corda.flow. - Recording transaction locally. {actor_id=Only For Testing, actor_owning_identity=O=Mock Company 1, L=London, C=GB, actor_store_id=TEST, fiber-id=10000011, flow-id=d736e62b-7213-49e2-bfc2-39d39a8f2095, invocation_id=50020d20-4598-4825-be7e-b3be84d6124a, invocation_timestamp=2023-01-31T07:18:16.164Z, origin=Only For Testing, session_id=50020d20-4598-4825-be7e-b3be84d6124a, session_timestamp=2023-01-31T07:18:16.164Z, thread-id=854, tx_id=7133E952E454C5042124059E41E7E5E2518E87DD0B3F99FDCD6F9A8E8A49A02E}
[INFO ] 2023-01-31T07:18:16,609Z [Mock network] corda.flow. - Recorded transaction locally successfully. {actor_id=Only For Testing, actor_owning_identity=O=Mock Company 1, L=London, C=GB, actor_store_id=TEST, fiber-id=10000011, flow-id=d736e62b-7213-49e2-bfc2-39d39a8f2095, invocation_id=50020d20-4598-4825-be7e-b3be84d6124a, invocation_timestamp=2023-01-31T07:18:16.164Z, origin=Only For Testing, session_id=50020d20-4598-4825-be7e-b3be84d6124a, session_timestamp=2023-01-31T07:18:16.164Z, thread-id=854, tx_id=7133E952E454C5042124059E41E7E5E2518E87DD0B3F99FDCD6F9A8E8A49A02E}
[INFO ] 2023-01-31T07:18:16,632Z [Mock network] corda.flow. - Received transaction acknowledgement request from party O=Mock Company 1, L=London, C=GB. {fiber-id=10000013, flow-id=e3082beb-89a9-4032-b7bf-9f8bac9063b3, invocation_id=f6164dec-04a0-48b7-b052-b08626162de0, invocation_timestamp=2023-01-31T07:18:16.431Z, origin=O=Mock Company 1, L=London, C=GB, session_id=f6164dec-04a0-48b7-b052-b08626162de0, session_timestamp=2023-01-31T07:18:16.431Z, thread-id=854, tx_id=7133E952E454C5042124059E41E7E5E2518E87DD0B3F99FDCD6F9A8E8A49A02E}
[INFO ] 2023-01-31T07:18:16,639Z [Mock network] corda.flow. - Transaction dependencies resolution completed. {fiber-id=10000013, flow-id=e3082beb-89a9-4032-b7bf-9f8bac9063b3, invocation_id=f6164dec-04a0-48b7-b052-b08626162de0, invocation_timestamp=2023-01-31T07:18:16.431Z, origin=O=Mock Company 1, L=London, C=GB, session_id=f6164dec-04a0-48b7-b052-b08626162de0, session_timestamp=2023-01-31T07:18:16.431Z, thread-id=854, tx_id=7133E952E454C5042124059E41E7E5E2518E87DD0B3F99FDCD6F9A8E8A49A02E}
[INFO ] 2023-01-31T07:18:16,645Z [Mock network] corda.flow. - Successfully received fully signed tx. Sending it to the vault for processing. {fiber-id=10000013, flow-id=e3082beb-89a9-4032-b7bf-9f8bac9063b3, invocation_id=f6164dec-04a0-48b7-b052-b08626162de0, invocation_timestamp=2023-01-31T07:18:16.431Z, origin=O=Mock Company 1, L=London, C=GB, session_id=f6164dec-04a0-48b7-b052-b08626162de0, session_timestamp=2023-01-31T07:18:16.431Z, thread-id=854, tx_id=7133E952E454C5042124059E41E7E5E2518E87DD0B3F99FDCD6F9A8E8A49A02E}
[INFO ] 2023-01-31T07:18:16,651Z [Mock network] corda.flow. - Successfully recorded received transaction locally. {fiber-id=10000013, flow-id=e3082beb-89a9-4032-b7bf-9f8bac9063b3, invocation_id=f6164dec-04a0-48b7-b052-b08626162de0, invocation_timestamp=2023-01-31T07:18:16.431Z, origin=O=Mock Company 1, L=London, C=GB, session_id=f6164dec-04a0-48b7-b052-b08626162de0, session_timestamp=2023-01-31T07:18:16.431Z, thread-id=854, tx_id=7133E952E454C5042124059E41E7E5E2518E87DD0B3F99FDCD6F9A8E8A49A02E}
[WARN ] 2023-01-31T07:18:16,654Z [Mock network] persistence.AbstractPartyToX500NameAsStringConverter. - Identity service unable to resolve AbstractParty: Anonymous(DLH1Cw8GuVENe1pPen1stX6QBtSGnb8hSGZ16MxF3VfkPp) {actor_id=Only For Testing, actor_owning_identity=O=Mock Company 1, L=London, C=GB, actor_store_id=TEST, fiber-id=10000013, flow-id=e3082beb-89a9-4032-b7bf-9f8bac9063b3, invocation_id=f6164dec-04a0-48b7-b052-b08626162de0, invocation_timestamp=2023-01-31T07:18:16.431Z, origin=O=Mock Company 1, L=London, C=GB, session_id=f6164dec-04a0-48b7-b052-b08626162de0, session_timestamp=2023-01-31T07:18:16.431Z, thread-id=854}
[INFO ] 2023-01-31T07:18:16,660Z [Mock network] corda.flow. - Party O=Mock Company 2, L=London, C=GB received the transaction. {actor_id=Only For Testing, actor_owning_identity=O=Mock Company 1, L=London, C=GB, actor_store_id=TEST, fiber-id=10000011, flow-id=d736e62b-7213-49e2-bfc2-39d39a8f2095, invocation_id=50020d20-4598-4825-be7e-b3be84d6124a, invocation_timestamp=2023-01-31T07:18:16.164Z, origin=Only For Testing, session_id=50020d20-4598-4825-be7e-b3be84d6124a, session_timestamp=2023-01-31T07:18:16.164Z, thread-id=854, tx_id=7133E952E454C5042124059E41E7E5E2518E87DD0B3F99FDCD6F9A8E8A49A02E}
[INFO ] 2023-01-31T07:18:16,660Z [Mock network] corda.flow. - All parties received the transaction successfully. {actor_id=Only For Testing, actor_owning_identity=O=Mock Company 1, L=London, C=GB, actor_store_id=TEST, fiber-id=10000011, flow-id=d736e62b-7213-49e2-bfc2-39d39a8f2095, invocation_id=50020d20-4598-4825-be7e-b3be84d6124a, invocation_timestamp=2023-01-31T07:18:16.164Z, origin=Only For Testing, session_id=50020d20-4598-4825-be7e-b3be84d6124a, session_timestamp=2023-01-31T07:18:16.164Z, thread-id=854, tx_id=7133E952E454C5042124059E41E7E5E2518E87DD0B3F99FDCD6F9A8E8A49A02E}
[INFO ] 2023-01-31T07:18:16,759Z [Mock network] corda.flow. - Received transaction acknowledgement request from party O=Mock Company 1, L=London, C=GB. {fiber-id=10000014, flow-id=ef3702ac-7437-4e9e-83d8-cde3f0a7b9dd, invocation_id=6477f419-c8fc-4f98-a56e-4074c3bdbf09, invocation_timestamp=2023-01-31T07:18:16.726Z, origin=O=Mock Company 1, L=London, C=GB, session_id=6477f419-c8fc-4f98-a56e-4074c3bdbf09, session_timestamp=2023-01-31T07:18:16.726Z, thread-id=854, tx_id=8EA855802B3F1C62488E9D922D92CAF3D7AC49AF09330324A725E0C29AB9D421}
[INFO ] 2023-01-31T07:18:16,768Z [Mock network] corda.flow. - Transaction dependencies resolution completed. {fiber-id=10000014, flow-id=ef3702ac-7437-4e9e-83d8-cde3f0a7b9dd, invocation_id=6477f419-c8fc-4f98-a56e-4074c3bdbf09, invocation_timestamp=2023-01-31T07:18:16.726Z, origin=O=Mock Company 1, L=London, C=GB, session_id=6477f419-c8fc-4f98-a56e-4074c3bdbf09, session_timestamp=2023-01-31T07:18:16.726Z, thread-id=854, tx_id=8EA855802B3F1C62488E9D922D92CAF3D7AC49AF09330324A725E0C29AB9D421}
[INFO ] 2023-01-31T07:18:16,772Z [Mock network] corda.flow. - Successfully received fully signed tx. Sending it to the vault for processing. {fiber-id=10000014, flow-id=ef3702ac-7437-4e9e-83d8-cde3f0a7b9dd, invocation_id=6477f419-c8fc-4f98-a56e-4074c3bdbf09, invocation_timestamp=2023-01-31T07:18:16.726Z, origin=O=Mock Company 1, L=London, C=GB, session_id=6477f419-c8fc-4f98-a56e-4074c3bdbf09, session_timestamp=2023-01-31T07:18:16.726Z, thread-id=854, tx_id=8EA855802B3F1C62488E9D922D92CAF3D7AC49AF09330324A725E0C29AB9D421}
[INFO ] 2023-01-31T07:18:16,780Z [Mock network] corda.flow. - Successfully recorded received transaction locally. {fiber-id=10000014, flow-id=ef3702ac-7437-4e9e-83d8-cde3f0a7b9dd, invocation_id=6477f419-c8fc-4f98-a56e-4074c3bdbf09, invocation_timestamp=2023-01-31T07:18:16.726Z, origin=O=Mock Company 1, L=London, C=GB, session_id=6477f419-c8fc-4f98-a56e-4074c3bdbf09, session_timestamp=2023-01-31T07:18:16.726Z, thread-id=854, tx_id=8EA855802B3F1C62488E9D922D92CAF3D7AC49AF09330324A725E0C29AB9D421}
[INFO ] 2023-01-31T07:18:16,810Z [Mock network] identity.PersistentIdentityService. - An existing entry for DLCPWpSRZxhamTeBgo2LjTwsfxTixhCeLtnyrz5xug3AyD already exists. {fiber-id=10000014, flow-id=ef3702ac-7437-4e9e-83d8-cde3f0a7b9dd, invocation_id=6477f419-c8fc-4f98-a56e-4074c3bdbf09, invocation_timestamp=2023-01-31T07:18:16.726Z, origin=O=Mock Company 1, L=London, C=GB, session_id=6477f419-c8fc-4f98-a56e-4074c3bdbf09, session_timestamp=2023-01-31T07:18:16.726Z, thread-id=854, tx_id=8EA855802B3F1C62488E9D922D92CAF3D7AC49AF09330324A725E0C29AB9D421}
[INFO ] 2023-01-31T07:18:16,820Z [Mock network] corda.flow. - Received transaction acknowledgement request from party O=Mock Company 1, L=London, C=GB. {fiber-id=10000014, flow-id=ef3702ac-7437-4e9e-83d8-cde3f0a7b9dd, invocation_id=6477f419-c8fc-4f98-a56e-4074c3bdbf09, invocation_timestamp=2023-01-31T07:18:16.726Z, origin=O=Mock Company 1, L=London, C=GB, session_id=6477f419-c8fc-4f98-a56e-4074c3bdbf09, session_timestamp=2023-01-31T07:18:16.726Z, thread-id=854, tx_id=79108D959B23D3658C1189A0B96E7C6D293184253B0E48BDA04BCA785DDBBE16}
[INFO ] 2023-01-31T07:18:16,830Z [Mock network] corda.flow. - Transaction dependencies resolution completed. {fiber-id=10000014, flow-id=ef3702ac-7437-4e9e-83d8-cde3f0a7b9dd, invocation_id=6477f419-c8fc-4f98-a56e-4074c3bdbf09, invocation_timestamp=2023-01-31T07:18:16.726Z, origin=O=Mock Company 1, L=London, C=GB, session_id=6477f419-c8fc-4f98-a56e-4074c3bdbf09, session_timestamp=2023-01-31T07:18:16.726Z, thread-id=854, tx_id=79108D959B23D3658C1189A0B96E7C6D293184253B0E48BDA04BCA785DDBBE16}
[INFO ] 2023-01-31T07:18:16,835Z [Mock network] corda.flow. - Successfully received fully signed tx. Sending it to the vault for processing. {fiber-id=10000014, flow-id=ef3702ac-7437-4e9e-83d8-cde3f0a7b9dd, invocation_id=6477f419-c8fc-4f98-a56e-4074c3bdbf09, invocation_timestamp=2023-01-31T07:18:16.726Z, origin=O=Mock Company 1, L=London, C=GB, session_id=6477f419-c8fc-4f98-a56e-4074c3bdbf09, session_timestamp=2023-01-31T07:18:16.726Z, thread-id=854, tx_id=79108D959B23D3658C1189A0B96E7C6D293184253B0E48BDA04BCA785DDBBE16}
[INFO ] 2023-01-31T07:18:16,841Z [Mock network] corda.flow. - Successfully recorded received transaction locally. {fiber-id=10000014, flow-id=ef3702ac-7437-4e9e-83d8-cde3f0a7b9dd, invocation_id=6477f419-c8fc-4f98-a56e-4074c3bdbf09, invocation_timestamp=2023-01-31T07:18:16.726Z, origin=O=Mock Company 1, L=London, C=GB, session_id=6477f419-c8fc-4f98-a56e-4074c3bdbf09, session_timestamp=2023-01-31T07:18:16.726Z, thread-id=854, tx_id=79108D959B23D3658C1189A0B96E7C6D293184253B0E48BDA04BCA785DDBBE16}
[INFO ] 2023-01-31T07:18:16,876Z [Mock network] identity.PersistentIdentityService. - Linking: EDC87BD5C0624E8EB6BC32109ADBBD6FA559114D99C9A40A2FB9C0BD6BED7427 to O=Mock Company 1, L=London, C=GB {fiber-id=10000014, flow-id=ef3702ac-7437-4e9e-83d8-cde3f0a7b9dd, invocation_id=6477f419-c8fc-4f98-a56e-4074c3bdbf09, invocation_timestamp=2023-01-31T07:18:16.726Z, origin=O=Mock Company 1, L=London, C=GB, session_id=6477f419-c8fc-4f98-a56e-4074c3bdbf09, session_timestamp=2023-01-31T07:18:16.726Z, thread-id=854, tx_id=79108D959B23D3658C1189A0B96E7C6D293184253B0E48BDA04BCA785DDBBE16}
[INFO ] 2023-01-31T07:18:16,888Z [Mock network] corda.flow. - Received transaction acknowledgement request from party O=Mock Company 1, L=London, C=GB. {fiber-id=10000014, flow-id=ef3702ac-7437-4e9e-83d8-cde3f0a7b9dd, invocation_id=6477f419-c8fc-4f98-a56e-4074c3bdbf09, invocation_timestamp=2023-01-31T07:18:16.726Z, origin=O=Mock Company 1, L=London, C=GB, session_id=6477f419-c8fc-4f98-a56e-4074c3bdbf09, session_timestamp=2023-01-31T07:18:16.726Z, thread-id=854, tx_id=7133E952E454C5042124059E41E7E5E2518E87DD0B3F99FDCD6F9A8E8A49A02E}
[INFO ] 2023-01-31T07:18:16,897Z [Mock network] corda.flow. - Transaction dependencies resolution completed. {fiber-id=10000014, flow-id=ef3702ac-7437-4e9e-83d8-cde3f0a7b9dd, invocation_id=6477f419-c8fc-4f98-a56e-4074c3bdbf09, invocation_timestamp=2023-01-31T07:18:16.726Z, origin=O=Mock Company 1, L=London, C=GB, session_id=6477f419-c8fc-4f98-a56e-4074c3bdbf09, session_timestamp=2023-01-31T07:18:16.726Z, thread-id=854, tx_id=7133E952E454C5042124059E41E7E5E2518E87DD0B3F99FDCD6F9A8E8A49A02E}
[INFO ] 2023-01-31T07:18:16,903Z [Mock network] corda.flow. - Successfully received fully signed tx. Sending it to the vault for processing. {fiber-id=10000014, flow-id=ef3702ac-7437-4e9e-83d8-cde3f0a7b9dd, invocation_id=6477f419-c8fc-4f98-a56e-4074c3bdbf09, invocation_timestamp=2023-01-31T07:18:16.726Z, origin=O=Mock Company 1, L=London, C=GB, session_id=6477f419-c8fc-4f98-a56e-4074c3bdbf09, session_timestamp=2023-01-31T07:18:16.726Z, thread-id=854, tx_id=7133E952E454C5042124059E41E7E5E2518E87DD0B3F99FDCD6F9A8E8A49A02E}
[INFO ] 2023-01-31T07:18:16,911Z [Mock network] corda.flow. - Successfully recorded received transaction locally. {fiber-id=10000014, flow-id=ef3702ac-7437-4e9e-83d8-cde3f0a7b9dd, invocation_id=6477f419-c8fc-4f98-a56e-4074c3bdbf09, invocation_timestamp=2023-01-31T07:18:16.726Z, origin=O=Mock Company 1, L=London, C=GB, session_id=6477f419-c8fc-4f98-a56e-4074c3bdbf09, session_timestamp=2023-01-31T07:18:16.726Z, thread-id=854, tx_id=7133E952E454C5042124059E41E7E5E2518E87DD0B3F99FDCD6F9A8E8A49A02E}
[INFO ] 2023-01-31T07:18:17,007Z [Mock network] identity.PersistentIdentityService. - Linking: 258B90C4518600A2CD4BE1FCFA36A2909117693D5A734088FCA6B7DCA2A94B8E to O=Mock Company 1, L=London, C=GB {fiber-id=10000017, flow-id=b0d2fe5d-4655-4125-a468-b99eeb47f00e, invocation_id=d44d2cb0-212f-4a6a-872b-acf4031885ea, invocation_timestamp=2023-01-31T07:18:16.977Z, origin=O=Mock Company 2, L=London, C=GB, session_id=d44d2cb0-212f-4a6a-872b-acf4031885ea, session_timestamp=2023-01-31T07:18:16.977Z, thread-id=854}
[INFO ] 2023-01-31T07:18:17,020Z [Mock network] identity.PersistentIdentityService. - Linking: 258B90C4518600A2CD4BE1FCFA36A2909117693D5A734088FCA6B7DCA2A94B8E to O=Mock Company 1, L=London, C=GB {actor_id=Only For Testing, actor_owning_identity=O=Mock Company 2, L=London, C=GB, actor_store_id=TEST, fiber-id=10000016, flow-id=ae04ae2a-a019-48a7-a24c-bf2dde935bad, invocation_id=e09aeb16-d559-4667-9441-70e2d6b63797, invocation_timestamp=2023-01-31T07:18:16.951Z, origin=Only For Testing, session_id=e09aeb16-d559-4667-9441-70e2d6b63797, session_timestamp=2023-01-31T07:18:16.951Z, thread-id=854}
[INFO ] 2023-01-31T07:18:17,028Z [Mock network] identity.PersistentIdentityService. - Linking: 47378E9DDF2C5D7D3DC1B7B29B48AFFD26126F8B8B73977854049A8C5EFA9FD8 to O=Mock Company 2, L=London, C=GB {actor_id=Only For Testing, actor_owning_identity=O=Mock Company 2, L=London, C=GB, actor_store_id=TEST, fiber-id=10000016, flow-id=ae04ae2a-a019-48a7-a24c-bf2dde935bad, invocation_id=e09aeb16-d559-4667-9441-70e2d6b63797, invocation_timestamp=2023-01-31T07:18:16.951Z, origin=Only For Testing, session_id=e09aeb16-d559-4667-9441-70e2d6b63797, session_timestamp=2023-01-31T07:18:16.951Z, thread-id=854}
[INFO ] 2023-01-31T07:18:17,082Z [Mock network] identity.PersistentIdentityService. - Linking: 5E91BC341FA4FE3833026E76A5C3804A68CF5E06D4DA6AC79D17F7E2AF5F60E1 to O=Mock Company 3, L=London, C=GB {fiber-id=10000018, flow-id=0039ff00-4ec5-493a-a4ec-e40001d9d373, invocation_id=3cb9a38b-6069-44df-b36b-891f027be588, invocation_timestamp=2023-01-31T07:18:17.043Z, origin=O=Mock Company 2, L=London, C=GB, session_id=3cb9a38b-6069-44df-b36b-891f027be588, session_timestamp=2023-01-31T07:18:17.043Z, thread-id=854}
[INFO ] 2023-01-31T07:18:17,097Z [Mock network] identity.PersistentIdentityService. - Linking: 5E91BC341FA4FE3833026E76A5C3804A68CF5E06D4DA6AC79D17F7E2AF5F60E1 to O=Mock Company 3, L=London, C=GB {actor_id=Only For Testing, actor_owning_identity=O=Mock Company 2, L=London, C=GB, actor_store_id=TEST, fiber-id=10000016, flow-id=ae04ae2a-a019-48a7-a24c-bf2dde935bad, invocation_id=e09aeb16-d559-4667-9441-70e2d6b63797, invocation_timestamp=2023-01-31T07:18:16.951Z, origin=Only For Testing, session_id=e09aeb16-d559-4667-9441-70e2d6b63797, session_timestamp=2023-01-31T07:18:16.951Z, thread-id=854}
[INFO ] 2023-01-31T07:18:17,181Z [Mock network] corda.flow. - Received transaction acknowledgement request from party O=Mock Company 2, L=London, C=GB. {fiber-id=10000019, flow-id=8b96a6af-2327-45b0-abe2-63d56fed76b0, invocation_id=49374b64-a25f-49dc-817c-8ea0f68b6030, invocation_timestamp=2023-01-31T07:18:17.169Z, origin=O=Mock Company 2, L=London, C=GB, session_id=49374b64-a25f-49dc-817c-8ea0f68b6030, session_timestamp=2023-01-31T07:18:17.169Z, thread-id=854, tx_id=392DA53CA4ABE5CEE0BDCEA0DCB4C976F0F2C10158CA75809C6589A6C56FA646}
[INFO ] 2023-01-31T07:18:17,312Z [Mock network] corda.flow. - Transaction dependencies resolution completed. {fiber-id=10000019, flow-id=8b96a6af-2327-45b0-abe2-63d56fed76b0, invocation_id=49374b64-a25f-49dc-817c-8ea0f68b6030, invocation_timestamp=2023-01-31T07:18:17.169Z, origin=O=Mock Company 2, L=London, C=GB, session_id=49374b64-a25f-49dc-817c-8ea0f68b6030, session_timestamp=2023-01-31T07:18:17.169Z, thread-id=854, tx_id=392DA53CA4ABE5CEE0BDCEA0DCB4C976F0F2C10158CA75809C6589A6C56FA646}
[INFO ] 2023-01-31T07:18:17,389Z [Mock network] corda.flow. - Received transaction acknowledgement request from party O=Mock Company 2, L=London, C=GB. {fiber-id=10000020, flow-id=550e7cda-3452-45cf-b1d1-b426d8c1ac66, invocation_id=ec824566-ebbd-4baf-a607-050c614d7925, invocation_timestamp=2023-01-31T07:18:17.379Z, origin=O=Mock Company 2, L=London, C=GB, session_id=ec824566-ebbd-4baf-a607-050c614d7925, session_timestamp=2023-01-31T07:18:17.379Z, thread-id=854, tx_id=392DA53CA4ABE5CEE0BDCEA0DCB4C976F0F2C10158CA75809C6589A6C56FA646}
[INFO ] 2023-01-31T07:18:17,397Z [Mock network] corda.flow. - Transaction dependencies resolution completed. {fiber-id=10000020, flow-id=550e7cda-3452-45cf-b1d1-b426d8c1ac66, invocation_id=ec824566-ebbd-4baf-a607-050c614d7925, invocation_timestamp=2023-01-31T07:18:17.379Z, origin=O=Mock Company 2, L=London, C=GB, session_id=ec824566-ebbd-4baf-a607-050c614d7925, session_timestamp=2023-01-31T07:18:17.379Z, thread-id=854, tx_id=392DA53CA4ABE5CEE0BDCEA0DCB4C976F0F2C10158CA75809C6589A6C56FA646}
[INFO ] 2023-01-31T07:18:17,721Z [Mock network] corda.flow. - Sending transaction to notary: O=Notary, L=London, C=GB. {actor_id=Only For Testing, actor_owning_identity=O=Mock Company 2, L=London, C=GB, actor_store_id=TEST, fiber-id=10000016, flow-id=ae04ae2a-a019-48a7-a24c-bf2dde935bad, invocation_id=e09aeb16-d559-4667-9441-70e2d6b63797, invocation_timestamp=2023-01-31T07:18:16.951Z, origin=Only For Testing, session_id=e09aeb16-d559-4667-9441-70e2d6b63797, session_timestamp=2023-01-31T07:18:16.951Z, thread-id=854, tx_id=392DA53CA4ABE5CEE0BDCEA0DCB4C976F0F2C10158CA75809C6589A6C56FA646}
[INFO ] 2023-01-31T07:18:17,766Z [Mock network] corda.flow. - Received a notarisation request for Tx [392DA53CA4ABE5CEE0BDCEA0DCB4C976F0F2C10158CA75809C6589A6C56FA646] from [O=Mock Company 2, L=London, C=GB] {fiber-id=10000021, flow-id=b3cb8621-ab22-4c89-b458-34bfaf80b40d, invocation_id=50ab1c62-c2bd-4150-b009-3860c05614e9, invocation_timestamp=2023-01-31T07:18:17.751Z, origin=O=Mock Company 2, L=London, C=GB, session_id=50ab1c62-c2bd-4150-b009-3860c05614e9, session_timestamp=2023-01-31T07:18:17.751Z, thread-id=854}
[INFO ] 2023-01-31T07:18:18,090Z [Notary request queue processor] jpa.JPAUniquenessProvider. - Processing notarization requests with 1 input states and 0 references {}
[INFO ] 2023-01-31T07:18:18,120Z [Mock network] corda.flow. - Transaction [392DA53CA4ABE5CEE0BDCEA0DCB4C976F0F2C10158CA75809C6589A6C56FA646] successfully notarised, sending signature back to [O=Mock Company 2, L=London, C=GB] {fiber-id=10000021, flow-id=b3cb8621-ab22-4c89-b458-34bfaf80b40d, invocation_id=50ab1c62-c2bd-4150-b009-3860c05614e9, invocation_timestamp=2023-01-31T07:18:17.751Z, origin=O=Mock Company 2, L=London, C=GB, session_id=50ab1c62-c2bd-4150-b009-3860c05614e9, session_timestamp=2023-01-31T07:18:17.751Z, thread-id=854}
[INFO ] 2023-01-31T07:18:18,139Z [Mock network] corda.flow. - Notary responded (O=Notary, L=London, C=GB). {actor_id=Only For Testing, actor_owning_identity=O=Mock Company 2, L=London, C=GB, actor_store_id=TEST, fiber-id=10000016, flow-id=ae04ae2a-a019-48a7-a24c-bf2dde935bad, invocation_id=e09aeb16-d559-4667-9441-70e2d6b63797, invocation_timestamp=2023-01-31T07:18:16.951Z, origin=Only For Testing, session_id=e09aeb16-d559-4667-9441-70e2d6b63797, session_timestamp=2023-01-31T07:18:16.951Z, thread-id=854, tx_id=392DA53CA4ABE5CEE0BDCEA0DCB4C976F0F2C10158CA75809C6589A6C56FA646}
[INFO ] 2023-01-31T07:18:18,140Z [Mock network] corda.flow. - Recording transaction locally. {actor_id=Only For Testing, actor_owning_identity=O=Mock Company 2, L=London, C=GB, actor_store_id=TEST, fiber-id=10000016, flow-id=ae04ae2a-a019-48a7-a24c-bf2dde935bad, invocation_id=e09aeb16-d559-4667-9441-70e2d6b63797, invocation_timestamp=2023-01-31T07:18:16.951Z, origin=Only For Testing, session_id=e09aeb16-d559-4667-9441-70e2d6b63797, session_timestamp=2023-01-31T07:18:16.951Z, thread-id=854, tx_id=392DA53CA4ABE5CEE0BDCEA0DCB4C976F0F2C10158CA75809C6589A6C56FA646}
[INFO ] 2023-01-31T07:18:18,150Z [Mock network] corda.flow. - Recorded transaction locally successfully. {actor_id=Only For Testing, actor_owning_identity=O=Mock Company 2, L=London, C=GB, actor_store_id=TEST, fiber-id=10000016, flow-id=ae04ae2a-a019-48a7-a24c-bf2dde935bad, invocation_id=e09aeb16-d559-4667-9441-70e2d6b63797, invocation_timestamp=2023-01-31T07:18:16.951Z, origin=Only For Testing, session_id=e09aeb16-d559-4667-9441-70e2d6b63797, session_timestamp=2023-01-31T07:18:16.951Z, thread-id=854, tx_id=392DA53CA4ABE5CEE0BDCEA0DCB4C976F0F2C10158CA75809C6589A6C56FA646}
[INFO ] 2023-01-31T07:18:18,159Z [Mock network] corda.flow. - Received transaction acknowledgement request from party O=Mock Company 2, L=London, C=GB. {fiber-id=10000019, flow-id=8b96a6af-2327-45b0-abe2-63d56fed76b0, invocation_id=49374b64-a25f-49dc-817c-8ea0f68b6030, invocation_timestamp=2023-01-31T07:18:17.169Z, origin=O=Mock Company 2, L=London, C=GB, session_id=49374b64-a25f-49dc-817c-8ea0f68b6030, session_timestamp=2023-01-31T07:18:17.169Z, thread-id=854, tx_id=392DA53CA4ABE5CEE0BDCEA0DCB4C976F0F2C10158CA75809C6589A6C56FA646}
[INFO ] 2023-01-31T07:18:18,165Z [Mock network] corda.flow. - Transaction dependencies resolution completed. {fiber-id=10000019, flow-id=8b96a6af-2327-45b0-abe2-63d56fed76b0, invocation_id=49374b64-a25f-49dc-817c-8ea0f68b6030, invocation_timestamp=2023-01-31T07:18:17.169Z, origin=O=Mock Company 2, L=London, C=GB, session_id=49374b64-a25f-49dc-817c-8ea0f68b6030, session_timestamp=2023-01-31T07:18:17.169Z, thread-id=854, tx_id=392DA53CA4ABE5CEE0BDCEA0DCB4C976F0F2C10158CA75809C6589A6C56FA646}
[INFO ] 2023-01-31T07:18:18,172Z [Mock network] corda.flow. - Successfully received fully signed tx. Sending it to the vault for processing. {fiber-id=10000019, flow-id=8b96a6af-2327-45b0-abe2-63d56fed76b0, invocation_id=49374b64-a25f-49dc-817c-8ea0f68b6030, invocation_timestamp=2023-01-31T07:18:17.169Z, origin=O=Mock Company 2, L=London, C=GB, session_id=49374b64-a25f-49dc-817c-8ea0f68b6030, session_timestamp=2023-01-31T07:18:17.169Z, thread-id=854, tx_id=392DA53CA4ABE5CEE0BDCEA0DCB4C976F0F2C10158CA75809C6589A6C56FA646}
[INFO ] 2023-01-31T07:18:18,177Z [Mock network] corda.flow. - Successfully recorded received transaction locally. {fiber-id=10000019, flow-id=8b96a6af-2327-45b0-abe2-63d56fed76b0, invocation_id=49374b64-a25f-49dc-817c-8ea0f68b6030, invocation_timestamp=2023-01-31T07:18:17.169Z, origin=O=Mock Company 2, L=London, C=GB, session_id=49374b64-a25f-49dc-817c-8ea0f68b6030, session_timestamp=2023-01-31T07:18:17.169Z, thread-id=854, tx_id=392DA53CA4ABE5CEE0BDCEA0DCB4C976F0F2C10158CA75809C6589A6C56FA646}
[WARN ] 2023-01-31T07:18:18,179Z [Mock network] persistence.AbstractPartyToX500NameAsStringConverter. - Identity service unable to resolve AbstractParty: Anonymous(DLH1Cw8GuVENe1pPen1stX6QBtSGnb8hSGZ16MxF3VfkPp) {actor_id=Only For Testing, actor_owning_identity=O=Mock Company 2, L=London, C=GB, actor_store_id=TEST, fiber-id=10000019, flow-id=8b96a6af-2327-45b0-abe2-63d56fed76b0, invocation_id=49374b64-a25f-49dc-817c-8ea0f68b6030, invocation_timestamp=2023-01-31T07:18:17.169Z, origin=O=Mock Company 2, L=London, C=GB, session_id=49374b64-a25f-49dc-817c-8ea0f68b6030, session_timestamp=2023-01-31T07:18:17.169Z, thread-id=854}
[INFO ] 2023-01-31T07:18:18,185Z [Mock network] corda.flow. - Party O=Mock Company 3, L=London, C=GB received the transaction. {actor_id=Only For Testing, actor_owning_identity=O=Mock Company 2, L=London, C=GB, actor_store_id=TEST, fiber-id=10000016, flow-id=ae04ae2a-a019-48a7-a24c-bf2dde935bad, invocation_id=e09aeb16-d559-4667-9441-70e2d6b63797, invocation_timestamp=2023-01-31T07:18:16.951Z, origin=Only For Testing, session_id=e09aeb16-d559-4667-9441-70e2d6b63797, session_timestamp=2023-01-31T07:18:16.951Z, thread-id=854, tx_id=392DA53CA4ABE5CEE0BDCEA0DCB4C976F0F2C10158CA75809C6589A6C56FA646}
[INFO ] 2023-01-31T07:18:18,195Z [Mock network] corda.flow. - Received transaction acknowledgement request from party O=Mock Company 2, L=London, C=GB. {fiber-id=10000020, flow-id=550e7cda-3452-45cf-b1d1-b426d8c1ac66, invocation_id=ec824566-ebbd-4baf-a607-050c614d7925, invocation_timestamp=2023-01-31T07:18:17.379Z, origin=O=Mock Company 2, L=London, C=GB, session_id=ec824566-ebbd-4baf-a607-050c614d7925, session_timestamp=2023-01-31T07:18:17.379Z, thread-id=854, tx_id=392DA53CA4ABE5CEE0BDCEA0DCB4C976F0F2C10158CA75809C6589A6C56FA646}
[INFO ] 2023-01-31T07:18:18,203Z [Mock network] corda.flow. - Transaction dependencies resolution completed. {fiber-id=10000020, flow-id=550e7cda-3452-45cf-b1d1-b426d8c1ac66, invocation_id=ec824566-ebbd-4baf-a607-050c614d7925, invocation_timestamp=2023-01-31T07:18:17.379Z, origin=O=Mock Company 2, L=London, C=GB, session_id=ec824566-ebbd-4baf-a607-050c614d7925, session_timestamp=2023-01-31T07:18:17.379Z, thread-id=854, tx_id=392DA53CA4ABE5CEE0BDCEA0DCB4C976F0F2C10158CA75809C6589A6C56FA646}
[INFO ] 2023-01-31T07:18:18,213Z [Mock network] corda.flow. - Successfully received fully signed tx. Sending it to the vault for processing. {fiber-id=10000020, flow-id=550e7cda-3452-45cf-b1d1-b426d8c1ac66, invocation_id=ec824566-ebbd-4baf-a607-050c614d7925, invocation_timestamp=2023-01-31T07:18:17.379Z, origin=O=Mock Company 2, L=London, C=GB, session_id=ec824566-ebbd-4baf-a607-050c614d7925, session_timestamp=2023-01-31T07:18:17.379Z, thread-id=854, tx_id=392DA53CA4ABE5CEE0BDCEA0DCB4C976F0F2C10158CA75809C6589A6C56FA646}
[INFO ] 2023-01-31T07:18:18,221Z [Mock network] corda.flow. - Successfully recorded received transaction locally. {fiber-id=10000020, flow-id=550e7cda-3452-45cf-b1d1-b426d8c1ac66, invocation_id=ec824566-ebbd-4baf-a607-050c614d7925, invocation_timestamp=2023-01-31T07:18:17.379Z, origin=O=Mock Company 2, L=London, C=GB, session_id=ec824566-ebbd-4baf-a607-050c614d7925, session_timestamp=2023-01-31T07:18:17.379Z, thread-id=854, tx_id=392DA53CA4ABE5CEE0BDCEA0DCB4C976F0F2C10158CA75809C6589A6C56FA646}
[WARN ] 2023-01-31T07:18:18,223Z [Mock network] persistence.AbstractPartyToX500NameAsStringConverter. - Identity service unable to resolve AbstractParty: Anonymous(DL7NADKtqU5PmNXGD9KWJDFeD3KHgKi6ypBkpS9xb44xBz) {actor_id=Only For Testing, actor_owning_identity=O=Mock Company 2, L=London, C=GB, actor_store_id=TEST, fiber-id=10000020, flow-id=550e7cda-3452-45cf-b1d1-b426d8c1ac66, invocation_id=ec824566-ebbd-4baf-a607-050c614d7925, invocation_timestamp=2023-01-31T07:18:17.379Z, origin=O=Mock Company 2, L=London, C=GB, session_id=ec824566-ebbd-4baf-a607-050c614d7925, session_timestamp=2023-01-31T07:18:17.379Z, thread-id=854}
[INFO ] 2023-01-31T07:18:18,230Z [Mock network] corda.flow. - Party O=Mock Company 1, L=London, C=GB received the transaction. {actor_id=Only For Testing, actor_owning_identity=O=Mock Company 2, L=London, C=GB, actor_store_id=TEST, fiber-id=10000016, flow-id=ae04ae2a-a019-48a7-a24c-bf2dde935bad, invocation_id=e09aeb16-d559-4667-9441-70e2d6b63797, invocation_timestamp=2023-01-31T07:18:16.951Z, origin=Only For Testing, session_id=e09aeb16-d559-4667-9441-70e2d6b63797, session_timestamp=2023-01-31T07:18:16.951Z, thread-id=854, tx_id=392DA53CA4ABE5CEE0BDCEA0DCB4C976F0F2C10158CA75809C6589A6C56FA646}
[INFO ] 2023-01-31T07:18:18,230Z [Mock network] corda.flow. - All parties received the transaction successfully. {actor_id=Only For Testing, actor_owning_identity=O=Mock Company 2, L=London, C=GB, actor_store_id=TEST, fiber-id=10000016, flow-id=ae04ae2a-a019-48a7-a24c-bf2dde935bad, invocation_id=e09aeb16-d559-4667-9441-70e2d6b63797, invocation_timestamp=2023-01-31T07:18:16.951Z, origin=Only For Testing, session_id=e09aeb16-d559-4667-9441-70e2d6b63797, session_timestamp=2023-01-31T07:18:16.951Z, thread-id=854, tx_id=392DA53CA4ABE5CEE0BDCEA0DCB4C976F0F2C10158CA75809C6589A6C56FA646}
[INFO ] 2023-01-31T07:18:18,258Z [Mock network] identity.PersistentIdentityService. - Linking: 51EB26465B2821A57C002223A42FCEDA92F014934C446867E3FD4C4511A9DB4F to O=Mock Company 1, L=London, C=GB {actor_id=Only For Testing, actor_owning_identity=O=Mock Company 1, L=London, C=GB, actor_store_id=TEST, fiber-id=10000023, flow-id=b3c68fbb-a1ce-4080-920a-8045d467dc1d, invocation_id=cfbcc31c-0889-4f05-866c-5f908fd9140a, invocation_timestamp=2023-01-31T07:18:18.252Z, origin=Only For Testing, session_id=cfbcc31c-0889-4f05-866c-5f908fd9140a, session_timestamp=2023-01-31T07:18:18.252Z, thread-id=854}
[INFO ] 2023-01-31T07:18:18,428Z [Mock network] corda.flow. - No need to notarise this transaction. {actor_id=Only For Testing, actor_owning_identity=O=Mock Company 1, L=London, C=GB, actor_store_id=TEST, fiber-id=10000023, flow-id=b3c68fbb-a1ce-4080-920a-8045d467dc1d, invocation_id=cfbcc31c-0889-4f05-866c-5f908fd9140a, invocation_timestamp=2023-01-31T07:18:18.252Z, origin=Only For Testing, session_id=cfbcc31c-0889-4f05-866c-5f908fd9140a, session_timestamp=2023-01-31T07:18:18.252Z, thread-id=854, tx_id=B27015C62B4A7A26E3F5E6916DB3E6EFD8EAEF552BC52510D88A3F0952DE9ED5}
[INFO ] 2023-01-31T07:18:18,428Z [Mock network] corda.flow. - Recording transaction locally. {actor_id=Only For Testing, actor_owning_identity=O=Mock Company 1, L=London, C=GB, actor_store_id=TEST, fiber-id=10000023, flow-id=b3c68fbb-a1ce-4080-920a-8045d467dc1d, invocation_id=cfbcc31c-0889-4f05-866c-5f908fd9140a, invocation_timestamp=2023-01-31T07:18:18.252Z, origin=Only For Testing, session_id=cfbcc31c-0889-4f05-866c-5f908fd9140a, session_timestamp=2023-01-31T07:18:18.252Z, thread-id=854, tx_id=B27015C62B4A7A26E3F5E6916DB3E6EFD8EAEF552BC52510D88A3F0952DE9ED5}
[INFO ] 2023-01-31T07:18:18,451Z [Mock network] corda.flow. - Recorded transaction locally successfully. {actor_id=Only For Testing, actor_owning_identity=O=Mock Company 1, L=London, C=GB, actor_store_id=TEST, fiber-id=10000023, flow-id=b3c68fbb-a1ce-4080-920a-8045d467dc1d, invocation_id=cfbcc31c-0889-4f05-866c-5f908fd9140a, invocation_timestamp=2023-01-31T07:18:18.252Z, origin=Only For Testing, session_id=cfbcc31c-0889-4f05-866c-5f908fd9140a, session_timestamp=2023-01-31T07:18:18.252Z, thread-id=854, tx_id=B27015C62B4A7A26E3F5E6916DB3E6EFD8EAEF552BC52510D88A3F0952DE9ED5}
[INFO ] 2023-01-31T07:18:18,451Z [Mock network] corda.flow. - All parties received the transaction successfully. {actor_id=Only For Testing, actor_owning_identity=O=Mock Company 1, L=London, C=GB, actor_store_id=TEST, fiber-id=10000023, flow-id=b3c68fbb-a1ce-4080-920a-8045d467dc1d, invocation_id=cfbcc31c-0889-4f05-866c-5f908fd9140a, invocation_timestamp=2023-01-31T07:18:18.252Z, origin=Only For Testing, session_id=cfbcc31c-0889-4f05-866c-5f908fd9140a, session_timestamp=2023-01-31T07:18:18.252Z, thread-id=854, tx_id=B27015C62B4A7A26E3F5E6916DB3E6EFD8EAEF552BC52510D88A3F0952DE9ED5}
[INFO ] 2023-01-31T07:18:18,474Z [Mock network] identity.PersistentIdentityService. - Linking: A7A4908DB93CE923577159F668E47C9DF948A79001C30FB1835D9ADCE5E7B3DC to O=Mock Company 1, L=London, C=GB {actor_id=Only For Testing, actor_owning_identity=O=Mock Company 1, L=London, C=GB, actor_store_id=TEST, fiber-id=10000024, flow-id=bf8da061-ee5a-49df-8374-c00ab8aca953, invocation_id=c7e1045e-830a-4f19-bf65-736073f12c08, invocation_timestamp=2023-01-31T07:18:18.469Z, origin=Only For Testing, session_id=c7e1045e-830a-4f19-bf65-736073f12c08, session_timestamp=2023-01-31T07:18:18.469Z, thread-id=854}
[INFO ] 2023-01-31T07:18:18,497Z [Mock network] corda.flow. - No need to notarise this transaction. {actor_id=Only For Testing, actor_owning_identity=O=Mock Company 1, L=London, C=GB, actor_store_id=TEST, fiber-id=10000024, flow-id=bf8da061-ee5a-49df-8374-c00ab8aca953, invocation_id=c7e1045e-830a-4f19-bf65-736073f12c08, invocation_timestamp=2023-01-31T07:18:18.469Z, origin=Only For Testing, session_id=c7e1045e-830a-4f19-bf65-736073f12c08, session_timestamp=2023-01-31T07:18:18.469Z, thread-id=854, tx_id=8D96E610249326917F78B013E5CCBDEABB44DDC4E095F1D65C15300EDC9EE327}
[INFO ] 2023-01-31T07:18:18,497Z [Mock network] corda.flow. - Recording transaction locally. {actor_id=Only For Testing, actor_owning_identity=O=Mock Company 1, L=London, C=GB, actor_store_id=TEST, fiber-id=10000024, flow-id=bf8da061-ee5a-49df-8374-c00ab8aca953, invocation_id=c7e1045e-830a-4f19-bf65-736073f12c08, invocation_timestamp=2023-01-31T07:18:18.469Z, origin=Only For Testing, session_id=c7e1045e-830a-4f19-bf65-736073f12c08, session_timestamp=2023-01-31T07:18:18.469Z, thread-id=854, tx_id=8D96E610249326917F78B013E5CCBDEABB44DDC4E095F1D65C15300EDC9EE327}
[INFO ] 2023-01-31T07:18:18,503Z [Mock network] corda.flow. - Recorded transaction locally successfully. {actor_id=Only For Testing, actor_owning_identity=O=Mock Company 1, L=London, C=GB, actor_store_id=TEST, fiber-id=10000024, flow-id=bf8da061-ee5a-49df-8374-c00ab8aca953, invocation_id=c7e1045e-830a-4f19-bf65-736073f12c08, invocation_timestamp=2023-01-31T07:18:18.469Z, origin=Only For Testing, session_id=c7e1045e-830a-4f19-bf65-736073f12c08, session_timestamp=2023-01-31T07:18:18.469Z, thread-id=854, tx_id=8D96E610249326917F78B013E5CCBDEABB44DDC4E095F1D65C15300EDC9EE327}
[INFO ] 2023-01-31T07:18:18,503Z [Mock network] corda.flow. - All parties received the transaction successfully. {actor_id=Only For Testing, actor_owning_identity=O=Mock Company 1, L=London, C=GB, actor_store_id=TEST, fiber-id=10000024, flow-id=bf8da061-ee5a-49df-8374-c00ab8aca953, invocation_id=c7e1045e-830a-4f19-bf65-736073f12c08, invocation_timestamp=2023-01-31T07:18:18.469Z, origin=Only For Testing, session_id=c7e1045e-830a-4f19-bf65-736073f12c08, session_timestamp=2023-01-31T07:18:18.469Z, thread-id=854, tx_id=8D96E610249326917F78B013E5CCBDEABB44DDC4E095F1D65C15300EDC9EE327}
[INFO ] 2023-01-31T07:18:18,547Z [Mock network] identity.PersistentIdentityService. - Linking: FFF095A18BA513D4F88464508881139A77B3C2F7BA4A7BD44621F9B568DF3EC5 to O=Mock Company 1, L=London, C=GB {actor_id=Only For Testing, actor_owning_identity=O=Mock Company 1, L=London, C=GB, actor_store_id=TEST, fiber-id=10000026, flow-id=7bf5b948-b54a-4fbc-824c-e81579076823, invocation_id=a0b12bd2-1f3d-4173-941b-1db3cba99f9d, invocation_timestamp=2023-01-31T07:18:18.538Z, origin=Only For Testing, session_id=a0b12bd2-1f3d-4173-941b-1db3cba99f9d, session_timestamp=2023-01-31T07:18:18.538Z, thread-id=854}
[INFO ] 2023-01-31T07:18:18,604Z [Mock network] identity.PersistentIdentityService. - Linking: EB304E8404DF8BE6BC733A1C586B5D29F2FAA60CBE8262F4D752A40642EA36C6 to O=Mock Company 3, L=London, C=GB {fiber-id=10000027, flow-id=2936f1c1-15ef-4af8-9516-525554f6a977, invocation_id=85d89a5e-1620-4c92-ab6c-d7b8771d9747, invocation_timestamp=2023-01-31T07:18:18.570Z, origin=O=Mock Company 1, L=London, C=GB, session_id=85d89a5e-1620-4c92-ab6c-d7b8771d9747, session_timestamp=2023-01-31T07:18:18.570Z, thread-id=854}
[INFO ] 2023-01-31T07:18:18,620Z [Mock network] identity.PersistentIdentityService. - Linking: EB304E8404DF8BE6BC733A1C586B5D29F2FAA60CBE8262F4D752A40642EA36C6 to O=Mock Company 3, L=London, C=GB {actor_id=Only For Testing, actor_owning_identity=O=Mock Company 1, L=London, C=GB, actor_store_id=TEST, fiber-id=10000026, flow-id=7bf5b948-b54a-4fbc-824c-e81579076823, invocation_id=a0b12bd2-1f3d-4173-941b-1db3cba99f9d, invocation_timestamp=2023-01-31T07:18:18.538Z, origin=Only For Testing, session_id=a0b12bd2-1f3d-4173-941b-1db3cba99f9d, session_timestamp=2023-01-31T07:18:18.538Z, thread-id=854}
[INFO ] 2023-01-31T07:18:19,098Z [Mock network] corda.flow. - Received transaction acknowledgement request from party O=Mock Company 1, L=London, C=GB. {fiber-id=10000028, flow-id=65465552-2f28-4612-9b7f-4600ccd28d15, invocation_id=3e61d329-451f-4c54-becb-c2c3cfdaaa1c, invocation_timestamp=2023-01-31T07:18:19.081Z, origin=O=Mock Company 1, L=London, C=GB, session_id=3e61d329-451f-4c54-becb-c2c3cfdaaa1c, session_timestamp=2023-01-31T07:18:19.081Z, thread-id=854, tx_id=05C00A07D836886589D1648346F3DFE14725CFEC3E8E68B19135B8905C73DF47}
[INFO ] 2023-01-31T07:18:19,194Z [Mock network] corda.flow. - Transaction dependencies resolution completed. {fiber-id=10000028, flow-id=65465552-2f28-4612-9b7f-4600ccd28d15, invocation_id=3e61d329-451f-4c54-becb-c2c3cfdaaa1c, invocation_timestamp=2023-01-31T07:18:19.081Z, origin=O=Mock Company 1, L=London, C=GB, session_id=3e61d329-451f-4c54-becb-c2c3cfdaaa1c, session_timestamp=2023-01-31T07:18:19.081Z, thread-id=854, tx_id=05C00A07D836886589D1648346F3DFE14725CFEC3E8E68B19135B8905C73DF47}
[INFO ] 2023-01-31T07:18:19,498Z [Mock network] corda.flow. - Flow raised an error: Could not find Party for Anonymous(DL7NADKtqU5PmNXGD9KWJDFeD3KHgKi6ypBkpS9xb44xBz). Sending it to flow hospital to be triaged. {actor_id=Only For Testing, actor_owning_identity=O=Mock Company 1, L=London, C=GB, actor_store_id=TEST, fiber-id=10000026, flow-id=7bf5b948-b54a-4fbc-824c-e81579076823, invocation_id=a0b12bd2-1f3d-4173-941b-1db3cba99f9d, invocation_timestamp=2023-01-31T07:18:18.538Z, origin=Only For Testing, session_id=a0b12bd2-1f3d-4173-941b-1db3cba99f9d, session_timestamp=2023-01-31T07:18:18.538Z, thread-id=854, tx_id=05C00A07D836886589D1648346F3DFE14725CFEC3E8E68B19135B8905C73DF47}
[INFO ] 2023-01-31T07:18:19,502Z [Mock network] statemachine.StaffedFlowHospital. - Flow [7bf5b948-b54a-4fbc-824c-e81579076823] admitted to hospital in state StateMachineState(checkpoint=Checkpoint(checkpointState=CheckpointState(invocationContext=InvocationContext(origin=RPC(actor=Actor(id=Id(value=Only For Testing), serviceId=AuthServiceId(value=TEST), owningLegalIdentity=O=Mock Company 1, L=London, C=GB)), trace=Trace(invocationId=a0b12bd2-1f3d-4173-941b-1db3cba99f9d, timestamp: 2023-01-31T07:18:18.538Z, entityType: Invocation, sessionId=a0b12bd2-1f3d-4173-941b-1db3cba99f9d, timestamp: 2023-01-31T07:18:18.538Z, entityType: Session), actor=Actor(id=Id(value=Only For Testing), serviceId=AuthServiceId(value=TEST), owningLegalIdentity=O=Mock Company 1, L=London, C=GB), externalTrace=null, impersonatedActor=null, arguments=[], clientId=null), ourIdentity=O=Mock Company 1, L=London, C=GB, sessions={SessionId(toLong=7106756066069934968)=Initiated(peerParty=O=Mock Company 3, L=London, C=GB, peerFlowInfo=FlowInfo(flowVersion=1, appName=<unknown>), receivedMessages=[], otherSideErrored=false, peerSinkSessionId=SessionId(toLong=-7881500851533551462), deduplicationSeed=R-7106756066069934968-4795262264991213571)}, sessionsToBeClosed=[], subFlowStack=[Initiating(flowClass=class net.corda.samples.obligation.flows.IOUSettleFlow, classToInitiateWith=class net.corda.samples.obligation.flows.IOUSettleFlow, flowInfo=FlowInfo(flowVersion=1, appName=<unknown>), subFlowVersion=CorDappFlow(platformVersion=11, corDappName=workflows-1.0, corDappHash=F8E3613207E5ABAEC38930FAA426F7BA91464AA72DAF3EFB74917A0BA71A146E), isEnabledTimedFlow=false)], numberOfSuspends=6, numberOfCommits=7), flowState=Started(flowIORequest=Receive(sessions=[FlowSessionImpl(destination=O=Mock Company 3, L=London, C=GB, sourceSessionId=SessionId(toLong=7106756066069934968))]), frozenFiber=2D19A8927FC60D149A79A498C6F9E41D98715F082D0EEEE85210D3D62134377E), errorState=Clean, result=null, status=RUNNABLE, progressStep=Starting, flowIoRequest=Receive, compatible=true), flowLogic=net.corda.samples.obligation.flows.IOUSettleFlow@703e60c0, pendingDeduplicationHandlers=[net.corda.testing.node.internal.MockNodeMessagingService$InMemoryDeduplicationHandler@7c7b7642], isFlowResumed=true, isWaitingForFuture=false, future=null, isAnyCheckpointPersisted=true, isStartIdempotent=false, isRemoved=false, isKilled=false, isDead=false, senderUUID=3ae20ed2-b752-4131-be00-8b87ba4c6253, reloadCheckpointAfterSuspendCount=null, numberOfCommits=7, lock=java.util.concurrent.Semaphore@a8c6b8[Permits = 0]) {actor_id=Only For Testing, actor_owning_identity=O=Mock Company 1, L=London, C=GB, actor_store_id=TEST, fiber-id=10000026, flow-id=7bf5b948-b54a-4fbc-824c-e81579076823, invocation_id=a0b12bd2-1f3d-4173-941b-1db3cba99f9d, invocation_timestamp=2023-01-31T07:18:18.538Z, origin=Only For Testing, session_id=a0b12bd2-1f3d-4173-941b-1db3cba99f9d, session_timestamp=2023-01-31T07:18:18.538Z, thread-id=854, tx_id=05C00A07D836886589D1648346F3DFE14725CFEC3E8E68B19135B8905C73DF47}
[INFO ] 2023-01-31T07:18:19,505Z [Mock network] statemachine.StaffedFlowHospital. - Error 1 of 1: {actor_id=Only For Testing, actor_owning_identity=O=Mock Company 1, L=London, C=GB, actor_store_id=TEST, fiber-id=10000026, flow-id=7bf5b948-b54a-4fbc-824c-e81579076823, invocation_id=a0b12bd2-1f3d-4173-941b-1db3cba99f9d, invocation_timestamp=2023-01-31T07:18:18.538Z, origin=Only For Testing, session_id=a0b12bd2-1f3d-4173-941b-1db3cba99f9d, session_timestamp=2023-01-31T07:18:18.538Z, thread-id=854, tx_id=05C00A07D836886589D1648346F3DFE14725CFEC3E8E68B19135B8905C73DF47}
java.lang.IllegalArgumentException: Could not find Party for Anonymous(DL7NADKtqU5PmNXGD9KWJDFeD3KHgKi6ypBkpS9xb44xBz)
	at net.corda.core.identity.IdentityUtils.groupAbstractPartyByWellKnownParty(IdentityUtils.kt:47) ~[corda-core-4.9.jar:?]
	at net.corda.core.identity.IdentityUtils.groupAbstractPartyByWellKnownParty(IdentityUtils.kt:63) ~[corda-core-4.9.jar:?]
	at net.corda.core.flows.FinalityFlow.extractExternalParticipants(FinalityFlow.kt:252) ~[corda-core-4.9.jar:?]
	at net.corda.core.flows.FinalityFlow.call(FinalityFlow.kt:162) ~[corda-core-4.9.jar:?]
	at net.corda.core.flows.FinalityFlow.call(FinalityFlow.kt:43) ~[corda-core-4.9.jar:?]
	at net.corda.node.services.statemachine.FlowStateMachineImpl.subFlow(FlowStateMachineImpl.kt:420) ~[corda-node-4.9.jar:?]
	at net.corda.core.flows.FlowLogic.subFlow(FlowLogic.kt:409) ~[corda-core-4.9.jar:?]
	at net.corda.samples.obligation.flows.IOUSettleFlow.call(IOUSettleFlow.kt:116) ~[main/:?]
	at net.corda.samples.obligation.flows.IOUSettleFlow.call(IOUSettleFlow.kt:30) ~[main/:?]
	at net.corda.node.services.statemachine.FlowStateMachineImpl.run(FlowStateMachineImpl.kt:349) ~[corda-node-4.9.jar:?]
	at net.corda.node.services.statemachine.FlowStateMachineImpl.run(FlowStateMachineImpl.kt:71) ~[corda-node-4.9.jar:?]
	at co.paralleluniverse.fibers.Fiber.run1(Fiber.java:1092) ~[quasar-core-0.7.10.jar:0.7.10]
	at co.paralleluniverse.fibers.Fiber.exec(Fiber.java:788) ~[quasar-core-0.7.10.jar:0.7.10]
	at co.paralleluniverse.fibers.RunnableFiberTask.doExec(RunnableFiberTask.java:100) ~[quasar-core-0.7.10.jar:0.7.10]
	at co.paralleluniverse.fibers.RunnableFiberTask.run(RunnableFiberTask.java:91) ~[quasar-core-0.7.10.jar:0.7.10]
	at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511) ~[?:1.8.0_202]
	at java.util.concurrent.FutureTask.run(FutureTask.java:266) ~[?:1.8.0_202]
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.access$201(ScheduledThreadPoolExecutor.java:180) ~[?:1.8.0_202]
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.run(ScheduledThreadPoolExecutor.java:293) ~[?:1.8.0_202]
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149) ~[?:1.8.0_202]
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624) ~[?:1.8.0_202]
	at net.corda.node.utilities.AffinityExecutor$ServiceAffinityExecutor$1$thread$1.run(AffinityExecutor.kt:63) ~[corda-node-4.9.jar:?]
[INFO ] 2023-01-31T07:18:19,509Z [Mock network] statemachine.StaffedFlowHospital. - Flow error allowed to propagate {actor_id=Only For Testing, actor_owning_identity=O=Mock Company 1, L=London, C=GB, actor_store_id=TEST, fiber-id=10000026, flow-id=7bf5b948-b54a-4fbc-824c-e81579076823, invocation_id=a0b12bd2-1f3d-4173-941b-1db3cba99f9d, invocation_timestamp=2023-01-31T07:18:18.538Z, origin=Only For Testing, session_id=a0b12bd2-1f3d-4173-941b-1db3cba99f9d, session_timestamp=2023-01-31T07:18:18.538Z, thread-id=854, tx_id=05C00A07D836886589D1648346F3DFE14725CFEC3E8E68B19135B8905C73DF47}
java.lang.IllegalArgumentException: Could not find Party for Anonymous(DL7NADKtqU5PmNXGD9KWJDFeD3KHgKi6ypBkpS9xb44xBz)
	at net.corda.core.identity.IdentityUtils.groupAbstractPartyByWellKnownParty(IdentityUtils.kt:47) ~[corda-core-4.9.jar:?]
	at net.corda.core.identity.IdentityUtils.groupAbstractPartyByWellKnownParty(IdentityUtils.kt:63) ~[corda-core-4.9.jar:?]
	at net.corda.core.flows.FinalityFlow.extractExternalParticipants(FinalityFlow.kt:252) ~[corda-core-4.9.jar:?]
	at net.corda.core.flows.FinalityFlow.call(FinalityFlow.kt:162) ~[corda-core-4.9.jar:?]
	at net.corda.core.flows.FinalityFlow.call(FinalityFlow.kt:43) ~[corda-core-4.9.jar:?]
	at net.corda.node.services.statemachine.FlowStateMachineImpl.subFlow(FlowStateMachineImpl.kt:420) ~[corda-node-4.9.jar:?]
	at net.corda.core.flows.FlowLogic.subFlow(FlowLogic.kt:409) ~[corda-core-4.9.jar:?]
	at net.corda.samples.obligation.flows.IOUSettleFlow.call(IOUSettleFlow.kt:116) ~[main/:?]
	at net.corda.samples.obligation.flows.IOUSettleFlow.call(IOUSettleFlow.kt:30) ~[main/:?]
	at net.corda.node.services.statemachine.FlowStateMachineImpl.run(FlowStateMachineImpl.kt:349) ~[corda-node-4.9.jar:?]
	at net.corda.node.services.statemachine.FlowStateMachineImpl.run(FlowStateMachineImpl.kt:71) ~[corda-node-4.9.jar:?]
	at co.paralleluniverse.fibers.Fiber.run1(Fiber.java:1092) ~[quasar-core-0.7.10.jar:0.7.10]
	at co.paralleluniverse.fibers.Fiber.exec(Fiber.java:788) ~[quasar-core-0.7.10.jar:0.7.10]
	at co.paralleluniverse.fibers.RunnableFiberTask.doExec(RunnableFiberTask.java:100) ~[quasar-core-0.7.10.jar:0.7.10]
	at co.paralleluniverse.fibers.RunnableFiberTask.run(RunnableFiberTask.java:91) ~[quasar-core-0.7.10.jar:0.7.10]
	at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511) ~[?:1.8.0_202]
	at java.util.concurrent.FutureTask.run(FutureTask.java:266) ~[?:1.8.0_202]
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.access$201(ScheduledThreadPoolExecutor.java:180) ~[?:1.8.0_202]
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.run(ScheduledThreadPoolExecutor.java:293) ~[?:1.8.0_202]
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149) ~[?:1.8.0_202]
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624) ~[?:1.8.0_202]
	at net.corda.node.utilities.AffinityExecutor$ServiceAffinityExecutor$1$thread$1.run(AffinityExecutor.kt:63) ~[corda-node-4.9.jar:?]
[WARN ] 2023-01-31T07:18:19,544Z [Mock network] interceptors.DumpHistoryOnErrorInterceptor. - Flow [7bf5b948-b54a-4fbc-824c-e81579076823] errored, dumping all transitions:

 --- Transition of flow [7bf5b948-b54a-4fbc-824c-e81579076823] ---
  Timestamp: 2023-01-31T07:18:18.542Z
  Event: DoRemainingWork
  Actions: 
    CreateTransaction
    PersistCheckpoint(id=[7bf5b948-b54a-4fbc-824c-e81579076823], checkpoint=Checkpoint(checkpointState=CheckpointState(invocationContext=InvocationContext(origin=RPC(actor=Actor(id=Id(value=Only For Testing), serviceId=AuthServiceId(value=TEST), owningLegalIdentity=O=Mock Company 1, L=London, C=GB)), trace=Trace(invocationId=a0b12bd2-1f3d-4173-941b-1db3cba99f9d, timestamp: 2023-01-31T07:18:18.538Z, entityType: Invocation, sessionId=a0b12bd2-1f3d-4173-941b-1db3cba99f9d, timestamp: 2023-01-31T07:18:18.538Z, entityType: Session), actor=Actor(id=Id(value=Only For Testing), serviceId=AuthServiceId(value=TEST), owningLegalIdentity=O=Mock Company 1, L=London, C=GB), externalTrace=null, impersonatedActor=null, arguments=[], clientId=null), ourIdentity=O=Mock Company 1, L=London, C=GB, sessions={}, sessionsToBeClosed=[], subFlowStack=[Initiating(flowClass=class net.corda.samples.obligation.flows.IOUSettleFlow, classToInitiateWith=class net.corda.samples.obligation.flows.IOUSettleFlow, flowInfo=FlowInfo(flowVersion=1, appName=<unknown>), subFlowVersion=CorDappFlow(platformVersion=11, corDappName=workflows-1.0, corDappHash=F8E3613207E5ABAEC38930FAA426F7BA91464AA72DAF3EFB74917A0BA71A146E), isEnabledTimedFlow=false)], numberOfSuspends=0, numberOfCommits=1), flowState=Unstarted(flowStart=Explicit, frozenFlowLogic=FD74232121948A02A0494FD11C6D95AE7D9127AB382E747ECCDBAADB97BAFC2A), errorState=Clean, result=null, status=RUNNABLE, progressStep=null, flowIoRequest=null, compatible=true), isCheckpointUpdate=false)
    PersistDeduplicationFacts(deduplicationHandlers=[net.corda.node.internal.FlowStarterImpl$startFlow$startFlowEvent$1@27e77bee])
    CommitTransaction
    AcknowledgeMessages(deduplicationHandlers=[net.corda.node.internal.FlowStarterImpl$startFlow$startFlowEvent$1@27e77bee])
    SignalFlowHasStarted(flowId=[7bf5b948-b54a-4fbc-824c-e81579076823])
    CreateTransaction
  Continuation: Resume(result=null)
  Diff between previous and next state:
isAnyCheckpointPersisted: 
    false
    true
isFlowResumed: 
    false
    true
pendingDeduplicationHandlers: 
    [net.corda.node.internal.FlowStarterImpl$startFlow$startFlowEvent$1@27e77bee]
    []


 --- Transition of flow [7bf5b948-b54a-4fbc-824c-e81579076823] ---
  Timestamp: 2023-01-31T07:18:18.547Z
  Event: EnterSubFlow(subFlowClass=class net.corda.samples.obligation.accountUtil.NewKeyForAccount, subFlowVersion=CorDappFlow(platformVersion=11, corDappName=workflows-1.0, corDappHash=F8E3613207E5ABAEC38930FAA426F7BA91464AA72DAF3EFB74917A0BA71A146E), isEnabledTimedFlow=false)
  Actions: 
    
  Continuation: ProcessEvents
  Diff between previous and next state:
checkpoint.checkpointState.subFlowStack: 
    [Initiating(flowClass=class net.corda.samples.obligation.flows.IOUSettleFlow, classToInitiateWith=class net.corda.samples.obligation.flows.IOUSettleFlow, flowInfo=FlowInfo(flowVersion=1, appName=<unknown>), subFlowVersion=CorDappFlow(platformVersion=11, corDappName=workflows-1.0, corDappHash=F8E3613207E5ABAEC38930FAA426F7BA91464AA72DAF3EFB74917A0BA71A146E), isEnabledTimedFlow=false)]
    [Initiating(flowClass=class net.corda.samples.obligation.flows.IOUSettleFlow, classToInitiateWith=class net.corda.samples.obligation.flows.IOUSettleFlow, flowInfo=FlowInfo(flowVersion=1, appName=<unknown>), subFlowVersion=CorDappFlow(platformVersion=11, corDappName=workflows-1.0, corDappHash=F8E3613207E5ABAEC38930FAA426F7BA91464AA72DAF3EFB74917A0BA71A146E), isEnabledTimedFlow=false), Inlined(flowClass=class net.corda.samples.obligation.accountUtil.NewKeyForAccount, subFlowVersion=CorDappFlow(platformVersion=11, corDappName=workflows-1.0, corDappHash=F8E3613207E5ABAEC38930FAA426F7BA91464AA72DAF3EFB74917A0BA71A146E), isEnabledTimedFlow=false)]
checkpoint.timestamp: 
    2023-01-31T07:18:18.539Z
    2023-01-31T07:18:18.547Z


 --- Transition of flow [7bf5b948-b54a-4fbc-824c-e81579076823] ---
  Timestamp: 2023-01-31T07:18:18.551Z
  Event: LeaveSubFlow
  Actions: 
    
  Continuation: ProcessEvents
  Diff between previous and next state:
checkpoint.checkpointState.subFlowStack: 
    [Initiating(flowClass=class net.corda.samples.obligation.flows.IOUSettleFlow, classToInitiateWith=class net.corda.samples.obligation.flows.IOUSettleFlow, flowInfo=FlowInfo(flowVersion=1, appName=<unknown>), subFlowVersion=CorDappFlow(platformVersion=11, corDappName=workflows-1.0, corDappHash=F8E3613207E5ABAEC38930FAA426F7BA91464AA72DAF3EFB74917A0BA71A146E), isEnabledTimedFlow=false), Inlined(flowClass=class net.corda.samples.obligation.accountUtil.NewKeyForAccount, subFlowVersion=CorDappFlow(platformVersion=11, corDappName=workflows-1.0, corDappHash=F8E3613207E5ABAEC38930FAA426F7BA91464AA72DAF3EFB74917A0BA71A146E), isEnabledTimedFlow=false)]
    [Initiating(flowClass=class net.corda.samples.obligation.flows.IOUSettleFlow, classToInitiateWith=class net.corda.samples.obligation.flows.IOUSettleFlow, flowInfo=FlowInfo(flowVersion=1, appName=<unknown>), subFlowVersion=CorDappFlow(platformVersion=11, corDappName=workflows-1.0, corDappHash=F8E3613207E5ABAEC38930FAA426F7BA91464AA72DAF3EFB74917A0BA71A146E), isEnabledTimedFlow=false)]
checkpoint.timestamp: 
    2023-01-31T07:18:18.547Z
    2023-01-31T07:18:18.551Z


 --- Transition of flow [7bf5b948-b54a-4fbc-824c-e81579076823] ---
  Timestamp: 2023-01-31T07:18:18.558Z
  Event: EnterSubFlow(subFlowClass=class com.r3.corda.lib.accounts.workflows.flows.RequestKeyForAccount, subFlowVersion=CorDappFlow(platformVersion=11, corDappName=accounts-workflows-1.0, corDappHash=80555705CE83A631D1BDD61E9C14A7C2215BB67FAB1411547C4D4B3D66F8402E), isEnabledTimedFlow=false)
  Actions: 
    
  Continuation: ProcessEvents
  Diff between previous and next state:
checkpoint.checkpointState.subFlowStack: 
    [Initiating(flowClass=class net.corda.samples.obligation.flows.IOUSettleFlow, classToInitiateWith=class net.corda.samples.obligation.flows.IOUSettleFlow, flowInfo=FlowInfo(flowVersion=1, appName=<unknown>), subFlowVersion=CorDappFlow(platformVersion=11, corDappName=workflows-1.0, corDappHash=F8E3613207E5ABAEC38930FAA426F7BA91464AA72DAF3EFB74917A0BA71A146E), isEnabledTimedFlow=false)]
    [Initiating(flowClass=class net.corda.samples.obligation.flows.IOUSettleFlow, classToInitiateWith=class net.corda.samples.obligation.flows.IOUSettleFlow, flowInfo=FlowInfo(flowVersion=1, appName=<unknown>), subFlowVersion=CorDappFlow(platformVersion=11, corDappName=workflows-1.0, corDappHash=F8E3613207E5ABAEC38930FAA426F7BA91464AA72DAF3EFB74917A0BA71A146E), isEnabledTimedFlow=false), Initiating(flowClass=class com.r3.corda.lib.accounts.workflows.flows.RequestKeyForAccount, classToInitiateWith=class com.r3.corda.lib.accounts.workflows.flows.RequestKeyForAccount, flowInfo=FlowInfo(flowVersion=1, appName=accounts-workflows-1.0), subFlowVersion=CorDappFlow(platformVersion=11, corDappName=accounts-workflows-1.0, corDappHash=80555705CE83A631D1BDD61E9C14A7C2215BB67FAB1411547C4D4B3D66F8402E), isEnabledTimedFlow=false)]
checkpoint.timestamp: 
    2023-01-31T07:18:18.551Z
    2023-01-31T07:18:18.558Z


 --- Transition of flow [7bf5b948-b54a-4fbc-824c-e81579076823] ---
  Timestamp: 2023-01-31T07:18:18.558Z
  Event: InitiateFlow(destination=O=Mock Company 3, L=London, C=GB, wellKnownParty=O=Mock Company 3, L=London, C=GB)
  Actions: 
    AddSessionBinding(flowId=[7bf5b948-b54a-4fbc-824c-e81579076823], sessionId=SessionId(toLong=240453306151564151))
  Continuation: Resume(result=class net.corda.node.services.statemachine.FlowSessionImpl)
  Diff between previous and next state:
checkpoint.checkpointState.sessions.SessionId(toLong=240453306151564151): 
    null
    Uninitiated(destination=O=Mock Company 3, L=London, C=GB, initiatingSubFlow=Initiating(flowClass=class com.r3.corda.lib.accounts.workflows.flows.RequestKeyForAccount, classToInitiateWith=class com.r3.corda.lib.accounts.workflows.flows.RequestKeyForAccount, flowInfo=FlowInfo(flowVersion=1, appName=accounts-workflows-1.0), subFlowVersion=CorDappFlow(platformVersion=11, corDappName=accounts-workflows-1.0, corDappHash=80555705CE83A631D1BDD61E9C14A7C2215BB67FAB1411547C4D4B3D66F8402E), isEnabledTimedFlow=false), sourceSessionId=SessionId(toLong=240453306151564151), additionalEntropy=-460002818677610954)


 --- Transition of flow [7bf5b948-b54a-4fbc-824c-e81579076823] ---
  Timestamp: 2023-01-31T07:18:18.559Z
  Event: EnterSubFlow(subFlowClass=class com.r3.corda.lib.accounts.workflows.flows.RequestKeyForAccountFlow, subFlowVersion=CorDappFlow(platformVersion=11, corDappName=accounts-workflows-1.0, corDappHash=80555705CE83A631D1BDD61E9C14A7C2215BB67FAB1411547C4D4B3D66F8402E), isEnabledTimedFlow=false)
  Actions: 
    
  Continuation: ProcessEvents
  Diff between previous and next state:
checkpoint.checkpointState.subFlowStack: 
    [Initiating(flowClass=class net.corda.samples.obligation.flows.IOUSettleFlow, classToInitiateWith=class net.corda.samples.obligation.flows.IOUSettleFlow, flowInfo=FlowInfo(flowVersion=1, appName=<unknown>), subFlowVersion=CorDappFlow(platformVersion=11, corDappName=workflows-1.0, corDappHash=F8E3613207E5ABAEC38930FAA426F7BA91464AA72DAF3EFB74917A0BA71A146E), isEnabledTimedFlow=false), Initiating(flowClass=class com.r3.corda.lib.accounts.workflows.flows.RequestKeyForAccount, classToInitiateWith=class com.r3.corda.lib.accounts.workflows.flows.RequestKeyForAccount, flowInfo=FlowInfo(flowVersion=1, appName=accounts-workflows-1.0), subFlowVersion=CorDappFlow(platformVersion=11, corDappName=accounts-workflows-1.0, corDappHash=80555705CE83A631D1BDD61E9C14A7C2215BB67FAB1411547C4D4B3D66F8402E), isEnabledTimedFlow=false)]
    [Initiating(flowClass=class net.corda.samples.obligation.flows.IOUSettleFlow, classToInitiateWith=class net.corda.samples.obligation.flows.IOUSettleFlow, flowInfo=FlowInfo(flowVersion=1, appName=<unknown>), subFlowVersion=CorDappFlow(platformVersion=11, corDappName=workflows-1.0, corDappHash=F8E3613207E5ABAEC38930FAA426F7BA91464AA72DAF3EFB74917A0BA71A146E), isEnabledTimedFlow=false), Initiating(flowClass=class com.r3.corda.lib.accounts.workflows.flows.RequestKeyForAccount, classToInitiateWith=class com.r3.corda.lib.accounts.workflows.flows.RequestKeyForAccount, flowInfo=FlowInfo(flowVersion=1, appName=accounts-workflows-1.0), subFlowVersion=CorDappFlow(platformVersion=11, corDappName=accounts-workflows-1.0, corDappHash=80555705CE83A631D1BDD61E9C14A7C2215BB67FAB1411547C4D4B3D66F8402E), isEnabledTimedFlow=false), Inlined(flowClass=class com.r3.corda.lib.accounts.workflows.flows.RequestKeyForAccountFlow, subFlowVersion=CorDappFlow(platformVersion=11, corDappName=accounts-workflows-1.0, corDappHash=80555705CE83A631D1BDD61E9C14A7C2215BB67FAB1411547C4D4B3D66F8402E), isEnabledTimedFlow=false)]
checkpoint.timestamp: 
    2023-01-31T07:18:18.558Z
    2023-01-31T07:18:18.559Z


 --- Transition of flow [7bf5b948-b54a-4fbc-824c-e81579076823] ---
  Timestamp: 2023-01-31T07:18:18.567Z
  Event: Suspend(ioRequest=SendAndReceive({FlowSessionImpl(destination=O=Mock Company 3, L=London, C=GB, sourceSessionId=SessionId(toLong=240453306151564151))=FlowSessionImpl(destination=O=Mock Company 3, L=London, C=GB, sourceSessionId=SessionId(toLong=240453306151564151))=3CB2C2C1BE411AF8AF326D153BFEDFBBB3026AB4C77C235D181C07ADE637F092}, shouldRetrySend=false), maySkipCheckpoint=false, fiber=AAFDCE6B8E4FBFC98B9558671317E7251270A35C7DA145AFAE50098D85F35626, currentStep=Starting)
  Actions: 
    PersistCheckpoint(id=[7bf5b948-b54a-4fbc-824c-e81579076823], checkpoint=Checkpoint(checkpointState=CheckpointState(invocationContext=InvocationContext(origin=RPC(actor=Actor(id=Id(value=Only For Testing), serviceId=AuthServiceId(value=TEST), owningLegalIdentity=O=Mock Company 1, L=London, C=GB)), trace=Trace(invocationId=a0b12bd2-1f3d-4173-941b-1db3cba99f9d, timestamp: 2023-01-31T07:18:18.538Z, entityType: Invocation, sessionId=a0b12bd2-1f3d-4173-941b-1db3cba99f9d, timestamp: 2023-01-31T07:18:18.538Z, entityType: Session), actor=Actor(id=Id(value=Only For Testing), serviceId=AuthServiceId(value=TEST), owningLegalIdentity=O=Mock Company 1, L=London, C=GB), externalTrace=null, impersonatedActor=null, arguments=[], clientId=null), ourIdentity=O=Mock Company 1, L=London, C=GB, sessions={SessionId(toLong=240453306151564151)=Uninitiated(destination=O=Mock Company 3, L=London, C=GB, initiatingSubFlow=Initiating(flowClass=class com.r3.corda.lib.accounts.workflows.flows.RequestKeyForAccount, classToInitiateWith=class com.r3.corda.lib.accounts.workflows.flows.RequestKeyForAccount, flowInfo=FlowInfo(flowVersion=1, appName=accounts-workflows-1.0), subFlowVersion=CorDappFlow(platformVersion=11, corDappName=accounts-workflows-1.0, corDappHash=80555705CE83A631D1BDD61E9C14A7C2215BB67FAB1411547C4D4B3D66F8402E), isEnabledTimedFlow=false), sourceSessionId=SessionId(toLong=240453306151564151), additionalEntropy=-460002818677610954)}, sessionsToBeClosed=[], subFlowStack=[Initiating(flowClass=class net.corda.samples.obligation.flows.IOUSettleFlow, classToInitiateWith=class net.corda.samples.obligation.flows.IOUSettleFlow, flowInfo=FlowInfo(flowVersion=1, appName=<unknown>), subFlowVersion=CorDappFlow(platformVersion=11, corDappName=workflows-1.0, corDappHash=F8E3613207E5ABAEC38930FAA426F7BA91464AA72DAF3EFB74917A0BA71A146E), isEnabledTimedFlow=false), Initiating(flowClass=class com.r3.corda.lib.accounts.workflows.flows.RequestKeyForAccount, classToInitiateWith=class com.r3.corda.lib.accounts.workflows.flows.RequestKeyForAccount, flowInfo=FlowInfo(flowVersion=1, appName=accounts-workflows-1.0), subFlowVersion=CorDappFlow(platformVersion=11, corDappName=accounts-workflows-1.0, corDappHash=80555705CE83A631D1BDD61E9C14A7C2215BB67FAB1411547C4D4B3D66F8402E), isEnabledTimedFlow=false), Inlined(flowClass=class com.r3.corda.lib.accounts.workflows.flows.RequestKeyForAccountFlow, subFlowVersion=CorDappFlow(platformVersion=11, corDappName=accounts-workflows-1.0, corDappHash=80555705CE83A631D1BDD61E9C14A7C2215BB67FAB1411547C4D4B3D66F8402E), isEnabledTimedFlow=false)], numberOfSuspends=1, numberOfCommits=2), flowState=Started(flowIORequest=SendAndReceive({FlowSessionImpl(destination=O=Mock Company 3, L=London, C=GB, sourceSessionId=SessionId(toLong=240453306151564151))=FlowSessionImpl(destination=O=Mock Company 3, L=London, C=GB, sourceSessionId=SessionId(toLong=240453306151564151))=3CB2C2C1BE411AF8AF326D153BFEDFBBB3026AB4C77C235D181C07ADE637F092}, shouldRetrySend=false), frozenFiber=AAFDCE6B8E4FBFC98B9558671317E7251270A35C7DA145AFAE50098D85F35626), errorState=Clean, result=null, status=RUNNABLE, progressStep=Starting, flowIoRequest=SendAndReceive, compatible=true), isCheckpointUpdate=true)
    PersistDeduplicationFacts(deduplicationHandlers=[])
    CommitTransaction
    AcknowledgeMessages(deduplicationHandlers=[])
    ScheduleEvent(event=DoRemainingWork)
  Continuation: ProcessEvents
  Diff between previous and next state:
checkpoint.flowState: 
    Unstarted(flowStart=Explicit, frozenFlowLogic=FD74232121948A02A0494FD11C6D95AE7D9127AB382E747ECCDBAADB97BAFC2A)
    Started(flowIORequest=SendAndReceive({FlowSessionImpl(destination=O=Mock Company 3, L=London, C=GB, sourceSessionId=SessionId(toLong=240453306151564151))=FlowSessionImpl(destination=O=Mock Company 3, L=London, C=GB, sourceSessionId=SessionId(toLong=240453306151564151))=3CB2C2C1BE411AF8AF326D153BFEDFBBB3026AB4C77C235D181C07ADE637F092}, shouldRetrySend=false), frozenFiber=AAFDCE6B8E4FBFC98B9558671317E7251270A35C7DA145AFAE50098D85F35626)
checkpoint.flowIoRequest: 
    null
    SendAndReceive
checkpoint.checkpointState.numberOfSuspends: 
    0
    1
checkpoint.checkpointState.numberOfCommits: 
    1
    2
checkpoint.progressStep: 
    null
    Starting
checkpoint.timestamp: 
    2023-01-31T07:18:18.559Z
    2023-01-31T07:18:18.565Z
numberOfCommits: 
    0
    2
isFlowResumed: 
    true
    false


 --- Transition of flow [7bf5b948-b54a-4fbc-824c-e81579076823] ---
  Timestamp: 2023-01-31T07:18:18.568Z
  Event: DoRemainingWork
  Actions: 
    SendMultiple(sendInitial=[SendInitial(destination=O=Mock Company 3, L=London, C=GB, initialise=InitialSessionMessage(initiatorSessionId=SessionId(toLong=240453306151564151), initiationEntropy=-460002818677610954, initiatorFlowClassName=com.r3.corda.lib.accounts.workflows.flows.RequestKeyForAccount, appName=accounts-workflows-1.0, firstPayload=class net.corda.core.serialization.SerializedBytes), deduplicationId=SenderDeduplicationId(deduplicationId=DeduplicationId(toString=N-R-240453306151564151--460002818677610954-1-0), senderUUID=3ae20ed2-b752-4131-be00-8b87ba4c6253))], sendExisting=[])
  Continuation: ProcessEvents
  Diff between previous and next state:
checkpoint.flowState.flowIORequest: 
    SendAndReceive({FlowSessionImpl(destination=O=Mock Company 3, L=London, C=GB, sourceSessionId=SessionId(toLong=240453306151564151))=FlowSessionImpl(destination=O=Mock Company 3, L=London, C=GB, sourceSessionId=SessionId(toLong=240453306151564151))=3CB2C2C1BE411AF8AF326D153BFEDFBBB3026AB4C77C235D181C07ADE637F092}, shouldRetrySend=false)
    Receive(sessions=[FlowSessionImpl(destination=O=Mock Company 3, L=London, C=GB, sourceSessionId=SessionId(toLong=240453306151564151))])
checkpoint.checkpointState.sessions.SessionId(toLong=240453306151564151): 
    Uninitiated(destination=O=Mock Company 3, L=London, C=GB, initiatingSubFlow=Initiating(flowClass=class com.r3.corda.lib.accounts.workflows.flows.RequestKeyForAccount, classToInitiateWith=class com.r3.corda.lib.accounts.workflows.flows.RequestKeyForAccount, flowInfo=FlowInfo(flowVersion=1, appName=accounts-workflows-1.0), subFlowVersion=CorDappFlow(platformVersion=11, corDappName=accounts-workflows-1.0, corDappHash=80555705CE83A631D1BDD61E9C14A7C2215BB67FAB1411547C4D4B3D66F8402E), isEnabledTimedFlow=false), sourceSessionId=SessionId(toLong=240453306151564151), additionalEntropy=-460002818677610954)
    Initiating(bufferedMessages=[], rejectionError=null, deduplicationSeed=R-240453306151564151--460002818677610954)
checkpoint.timestamp: 
    2023-01-31T07:18:18.565Z
    2023-01-31T07:18:18.567Z


 --- Transition of flow [7bf5b948-b54a-4fbc-824c-e81579076823] ---
  Timestamp: 2023-01-31T07:18:18.593Z
  Event: DeliverSessionMessage(sessionMessage=ExistingSessionMessage(recipientSessionId=SessionId(toLong=240453306151564151), payload=ConfirmSessionMessage(initiatedSessionId=SessionId(toLong=1422336125546696269), initiatedFlowInfo=FlowInfo(flowVersion=1, appName=accounts-workflows-1.0))), deduplicationHandler=net.corda.testing.node.internal.MockNodeMessagingService$InMemoryDeduplicationHandler@352b5d54, sender=O=Mock Company 3, L=London, C=GB)
  Actions: 
    ScheduleEvent(event=DoRemainingWork)
  Continuation: ProcessEvents
  Diff between previous and next state:
checkpoint.checkpointState.sessions.SessionId(toLong=240453306151564151): 
    Initiating(bufferedMessages=[], rejectionError=null, deduplicationSeed=R-240453306151564151--460002818677610954)
    Initiated(peerParty=O=Mock Company 3, L=London, C=GB, peerFlowInfo=FlowInfo(flowVersion=1, appName=accounts-workflows-1.0), receivedMessages=[], otherSideErrored=false, peerSinkSessionId=SessionId(toLong=1422336125546696269), deduplicationSeed=R-240453306151564151--460002818677610954)
checkpoint.timestamp: 
    2023-01-31T07:18:18.567Z
    2023-01-31T07:18:18.593Z
pendingDeduplicationHandlers: 
    []
    [net.corda.testing.node.internal.MockNodeMessagingService$InMemoryDeduplicationHandler@352b5d54]


 --- Transition of flow [7bf5b948-b54a-4fbc-824c-e81579076823] ---
  Timestamp: 2023-01-31T07:18:18.593Z
  Event: DoRemainingWork
  Actions: 
    
  Continuation: ProcessEvents
  Diff between previous and next state:
null

 --- Transition of flow [7bf5b948-b54a-4fbc-824c-e81579076823] ---
  Timestamp: 2023-01-31T07:18:18.595Z
  Event: DeliverSessionMessage(sessionMessage=ExistingSessionMessage(recipientSessionId=SessionId(toLong=240453306151564151), payload=DataSessionMessage(payload=class net.corda.core.serialization.SerializedBytes)), deduplicationHandler=net.corda.testing.node.internal.MockNodeMessagingService$InMemoryDeduplicationHandler@3617d7e7, sender=O=Mock Company 3, L=London, C=GB)
  Actions: 
    ScheduleEvent(event=DoRemainingWork)
  Continuation: ProcessEvents
  Diff between previous and next state:
checkpoint.checkpointState.sessions.SessionId(toLong=240453306151564151).receivedMessages.isEmpty: 
    true
    false
checkpoint.timestamp: 
    2023-01-31T07:18:18.593Z
    2023-01-31T07:18:18.595Z
pendingDeduplicationHandlers: 
    [net.corda.testing.node.internal.MockNodeMessagingService$InMemoryDeduplicationHandler@352b5d54]
    [net.corda.testing.node.internal.MockNodeMessagingService$InMemoryDeduplicationHandler@352b5d54, net.corda.testing.node.internal.MockNodeMessagingService$InMemoryDeduplicationHandler@3617d7e7]


 --- Transition of flow [7bf5b948-b54a-4fbc-824c-e81579076823] ---
  Timestamp: 2023-01-31T07:18:18.595Z
  Event: DoRemainingWork
  Actions: 
    CreateTransaction
  Continuation: Resume(result=class java.util.LinkedHashMap)
  Diff between previous and next state:
checkpoint.checkpointState.sessions.SessionId(toLong=240453306151564151).receivedMessages.isEmpty: 
    false
    true
isFlowResumed: 
    false
    true


 --- Transition of flow [7bf5b948-b54a-4fbc-824c-e81579076823] ---
  Timestamp: 2023-01-31T07:18:18.596Z
  Event: EnterSubFlow(subFlowClass=class com.r3.corda.lib.ci.workflows.RequestKeyFlow, subFlowVersion=CoreFlow(platformVersion=11), isEnabledTimedFlow=false)
  Actions: 
    
  Continuation: ProcessEvents
  Diff between previous and next state:
checkpoint.checkpointState.subFlowStack: 
    [Initiating(flowClass=class net.corda.samples.obligation.flows.IOUSettleFlow, classToInitiateWith=class net.corda.samples.obligation.flows.IOUSettleFlow, flowInfo=FlowInfo(flowVersion=1, appName=<unknown>), subFlowVersion=CorDappFlow(platformVersion=11, corDappName=workflows-1.0, corDappHash=F8E3613207E5ABAEC38930FAA426F7BA91464AA72DAF3EFB74917A0BA71A146E), isEnabledTimedFlow=false), Initiating(flowClass=class com.r3.corda.lib.accounts.workflows.flows.RequestKeyForAccount, classToInitiateWith=class com.r3.corda.lib.accounts.workflows.flows.RequestKeyForAccount, flowInfo=FlowInfo(flowVersion=1, appName=accounts-workflows-1.0), subFlowVersion=CorDappFlow(platformVersion=11, corDappName=accounts-workflows-1.0, corDappHash=80555705CE83A631D1BDD61E9C14A7C2215BB67FAB1411547C4D4B3D66F8402E), isEnabledTimedFlow=false), Inlined(flowClass=class com.r3.corda.lib.accounts.workflows.flows.RequestKeyForAccountFlow, subFlowVersion=CorDappFlow(platformVersion=11, corDappName=accounts-workflows-1.0, corDappHash=80555705CE83A631D1BDD61E9C14A7C2215BB67FAB1411547C4D4B3D66F8402E), isEnabledTimedFlow=false)]
    [Initiating(flowClass=class net.corda.samples.obligation.flows.IOUSettleFlow, classToInitiateWith=class net.corda.samples.obligation.flows.IOUSettleFlow, flowInfo=FlowInfo(flowVersion=1, appName=<unknown>), subFlowVersion=CorDappFlow(platformVersion=11, corDappName=workflows-1.0, corDappHash=F8E3613207E5ABAEC38930FAA426F7BA91464AA72DAF3EFB74917A0BA71A146E), isEnabledTimedFlow=false), Initiating(flowClass=class com.r3.corda.lib.accounts.workflows.flows.RequestKeyForAccount, classToInitiateWith=class com.r3.corda.lib.accounts.workflows.flows.RequestKeyForAccount, flowInfo=FlowInfo(flowVersion=1, appName=accounts-workflows-1.0), subFlowVersion=CorDappFlow(platformVersion=11, corDappName=accounts-workflows-1.0, corDappHash=80555705CE83A631D1BDD61E9C14A7C2215BB67FAB1411547C4D4B3D66F8402E), isEnabledTimedFlow=false), Inlined(flowClass=class com.r3.corda.lib.accounts.workflows.flows.RequestKeyForAccountFlow, subFlowVersion=CorDappFlow(platformVersion=11, corDappName=accounts-workflows-1.0, corDappHash=80555705CE83A631D1BDD61E9C14A7C2215BB67FAB1411547C4D4B3D66F8402E), isEnabledTimedFlow=false), Inlined(flowClass=class com.r3.corda.lib.ci.workflows.RequestKeyFlow, subFlowVersion=CoreFlow(platformVersion=11), isEnabledTimedFlow=false)]
checkpoint.timestamp: 
    2023-01-31T07:18:18.595Z
    2023-01-31T07:18:18.596Z


 --- Transition of flow [7bf5b948-b54a-4fbc-824c-e81579076823] ---
  Timestamp: 2023-01-31T07:18:18.601Z
  Event: Suspend(ioRequest=SendAndReceive({FlowSessionImpl(destination=O=Mock Company 3, L=London, C=GB, sourceSessionId=SessionId(toLong=240453306151564151))=FlowSessionImpl(destination=O=Mock Company 3, L=London, C=GB, sourceSessionId=SessionId(toLong=240453306151564151))=DAED3DEC4C6F645594065B43AE197341A2B7AF80B1D2A7F51B1936B3B5D83E28}, shouldRetrySend=false), maySkipCheckpoint=false, fiber=79B8C386AD8B6BEEC996C020B21FE3FEED4CAFD9DC6F07F9024559B87599979C, currentStep=Starting)
  Actions: 
    PersistCheckpoint(id=[7bf5b948-b54a-4fbc-824c-e81579076823], checkpoint=Checkpoint(checkpointState=CheckpointState(invocationContext=InvocationContext(origin=RPC(actor=Actor(id=Id(value=Only For Testing), serviceId=AuthServiceId(value=TEST), owningLegalIdentity=O=Mock Company 1, L=London, C=GB)), trace=Trace(invocationId=a0b12bd2-1f3d-4173-941b-1db3cba99f9d, timestamp: 2023-01-31T07:18:18.538Z, entityType: Invocation, sessionId=a0b12bd2-1f3d-4173-941b-1db3cba99f9d, timestamp: 2023-01-31T07:18:18.538Z, entityType: Session), actor=Actor(id=Id(value=Only For Testing), serviceId=AuthServiceId(value=TEST), owningLegalIdentity=O=Mock Company 1, L=London, C=GB), externalTrace=null, impersonatedActor=null, arguments=[], clientId=null), ourIdentity=O=Mock Company 1, L=London, C=GB, sessions={SessionId(toLong=240453306151564151)=Initiated(peerParty=O=Mock Company 3, L=London, C=GB, peerFlowInfo=FlowInfo(flowVersion=1, appName=accounts-workflows-1.0), receivedMessages=[], otherSideErrored=false, peerSinkSessionId=SessionId(toLong=1422336125546696269), deduplicationSeed=R-240453306151564151--460002818677610954)}, sessionsToBeClosed=[], subFlowStack=[Initiating(flowClass=class net.corda.samples.obligation.flows.IOUSettleFlow, classToInitiateWith=class net.corda.samples.obligation.flows.IOUSettleFlow, flowInfo=FlowInfo(flowVersion=1, appName=<unknown>), subFlowVersion=CorDappFlow(platformVersion=11, corDappName=workflows-1.0, corDappHash=F8E3613207E5ABAEC38930FAA426F7BA91464AA72DAF3EFB74917A0BA71A146E), isEnabledTimedFlow=false), Initiating(flowClass=class com.r3.corda.lib.accounts.workflows.flows.RequestKeyForAccount, classToInitiateWith=class com.r3.corda.lib.accounts.workflows.flows.RequestKeyForAccount, flowInfo=FlowInfo(flowVersion=1, appName=accounts-workflows-1.0), subFlowVersion=CorDappFlow(platformVersion=11, corDappName=accounts-workflows-1.0, corDappHash=80555705CE83A631D1BDD61E9C14A7C2215BB67FAB1411547C4D4B3D66F8402E), isEnabledTimedFlow=false), Inlined(flowClass=class com.r3.corda.lib.accounts.workflows.flows.RequestKeyForAccountFlow, subFlowVersion=CorDappFlow(platformVersion=11, corDappName=accounts-workflows-1.0, corDappHash=80555705CE83A631D1BDD61E9C14A7C2215BB67FAB1411547C4D4B3D66F8402E), isEnabledTimedFlow=false), Inlined(flowClass=class com.r3.corda.lib.ci.workflows.RequestKeyFlow, subFlowVersion=CoreFlow(platformVersion=11), isEnabledTimedFlow=false)], numberOfSuspends=2, numberOfCommits=3), flowState=Started(flowIORequest=SendAndReceive({FlowSessionImpl(destination=O=Mock Company 3, L=London, C=GB, sourceSessionId=SessionId(toLong=240453306151564151))=FlowSessionImpl(destination=O=Mock Company 3, L=London, C=GB, sourceSessionId=SessionId(toLong=240453306151564151))=DAED3DEC4C6F645594065B43AE197341A2B7AF80B1D2A7F51B1936B3B5D83E28}, shouldRetrySend=false), frozenFiber=79B8C386AD8B6BEEC996C020B21FE3FEED4CAFD9DC6F07F9024559B87599979C), errorState=Clean, result=null, status=RUNNABLE, progressStep=Starting, flowIoRequest=SendAndReceive, compatible=true), isCheckpointUpdate=true)
    PersistDeduplicationFacts(deduplicationHandlers=[net.corda.testing.node.internal.MockNodeMessagingService$InMemoryDeduplicationHandler@352b5d54, net.corda.testing.node.internal.MockNodeMessagingService$InMemoryDeduplicationHandler@3617d7e7])
    CommitTransaction
    AcknowledgeMessages(deduplicationHandlers=[net.corda.testing.node.internal.MockNodeMessagingService$InMemoryDeduplicationHandler@352b5d54, net.corda.testing.node.internal.MockNodeMessagingService$InMemoryDeduplicationHandler@3617d7e7])
    ScheduleEvent(event=DoRemainingWork)
  Continuation: ProcessEvents
  Diff between previous and next state:
checkpoint.flowState.flowIORequest: 
    Receive(sessions=[FlowSessionImpl(destination=O=Mock Company 3, L=London, C=GB, sourceSessionId=SessionId(toLong=240453306151564151))])
    SendAndReceive({FlowSessionImpl(destination=O=Mock Company 3, L=London, C=GB, sourceSessionId=SessionId(toLong=240453306151564151))=FlowSessionImpl(destination=O=Mock Company 3, L=London, C=GB, sourceSessionId=SessionId(toLong=240453306151564151))=DAED3DEC4C6F645594065B43AE197341A2B7AF80B1D2A7F51B1936B3B5D83E28}, shouldRetrySend=false)
checkpoint.flowState.frozenFiber.hash: 
    AAFDCE6B8E4FBFC98B9558671317E7251270A35C7DA145AFAE50098D85F35626
    79B8C386AD8B6BEEC996C020B21FE3FEED4CAFD9DC6F07F9024559B87599979C
checkpoint.checkpointState.numberOfSuspends: 
    1
    2
checkpoint.checkpointState.numberOfCommits: 
    2
    3
checkpoint.timestamp: 
    2023-01-31T07:18:18.596Z
    2023-01-31T07:18:18.598Z
numberOfCommits: 
    2
    3
isFlowResumed: 
    true
    false
pendingDeduplicationHandlers: 
    [net.corda.testing.node.internal.MockNodeMessagingService$InMemoryDeduplicationHandler@352b5d54, net.corda.testing.node.internal.MockNodeMessagingService$InMemoryDeduplicationHandler@3617d7e7]
    []


 --- Transition of flow [7bf5b948-b54a-4fbc-824c-e81579076823] ---
  Timestamp: 2023-01-31T07:18:18.601Z
  Event: DoRemainingWork
  Actions: 
    SendMultiple(sendInitial=[], sendExisting=[SendExisting(peerParty=O=Mock Company 3, L=London, C=GB, message=ExistingSessionMessage(recipientSessionId=SessionId(toLong=1422336125546696269), payload=DataSessionMessage(payload=class net.corda.core.serialization.SerializedBytes)), deduplicationId=SenderDeduplicationId(deduplicationId=DeduplicationId(toString=N-R-240453306151564151--460002818677610954-2-0), senderUUID=3ae20ed2-b752-4131-be00-8b87ba4c6253))])
  Continuation: ProcessEvents
  Diff between previous and next state:
checkpoint.flowState.flowIORequest: 
    SendAndReceive({FlowSessionImpl(destination=O=Mock Company 3, L=London, C=GB, sourceSessionId=SessionId(toLong=240453306151564151))=FlowSessionImpl(destination=O=Mock Company 3, L=London, C=GB, sourceSessionId=SessionId(toLong=240453306151564151))=DAED3DEC4C6F645594065B43AE197341A2B7AF80B1D2A7F51B1936B3B5D83E28}, shouldRetrySend=false)
    Receive(sessions=[FlowSessionImpl(destination=O=Mock Company 3, L=London, C=GB, sourceSessionId=SessionId(toLong=240453306151564151))])
checkpoint.timestamp: 
    2023-01-31T07:18:18.598Z
    2023-01-31T07:18:18.601Z


 --- Transition of flow [7bf5b948-b54a-4fbc-824c-e81579076823] ---
  Timestamp: 2023-01-31T07:18:18.618Z
  Event: DeliverSessionMessage(sessionMessage=ExistingSessionMessage(recipientSessionId=SessionId(toLong=240453306151564151), payload=DataSessionMessage(payload=class net.corda.core.serialization.SerializedBytes)), deduplicationHandler=net.corda.testing.node.internal.MockNodeMessagingService$InMemoryDeduplicationHandler@64e0bd34, sender=O=Mock Company 3, L=London, C=GB)
  Actions: 
    ScheduleEvent(event=DoRemainingWork)
  Continuation: ProcessEvents
  Diff between previous and next state:
checkpoint.checkpointState.sessions.SessionId(toLong=240453306151564151).receivedMessages.isEmpty: 
    true
    false
checkpoint.timestamp: 
    2023-01-31T07:18:18.601Z
    2023-01-31T07:18:18.618Z
pendingDeduplicationHandlers: 
    []
    [net.corda.testing.node.internal.MockNodeMessagingService$InMemoryDeduplicationHandler@64e0bd34]


 --- Transition of flow [7bf5b948-b54a-4fbc-824c-e81579076823] ---
  Timestamp: 2023-01-31T07:18:18.618Z
  Event: DoRemainingWork
  Actions: 
    CreateTransaction
  Continuation: Resume(result=class java.util.LinkedHashMap)
  Diff between previous and next state:
checkpoint.checkpointState.sessions.SessionId(toLong=240453306151564151).receivedMessages.isEmpty: 
    false
    true
isFlowResumed: 
    false
    true


 --- Transition of flow [7bf5b948-b54a-4fbc-824c-e81579076823] ---
  Timestamp: 2023-01-31T07:18:18.621Z
  Event: LeaveSubFlow
  Actions: 
    
  Continuation: ProcessEvents
  Diff between previous and next state:
checkpoint.checkpointState.subFlowStack: 
    [Initiating(flowClass=class net.corda.samples.obligation.flows.IOUSettleFlow, classToInitiateWith=class net.corda.samples.obligation.flows.IOUSettleFlow, flowInfo=FlowInfo(flowVersion=1, appName=<unknown>), subFlowVersion=CorDappFlow(platformVersion=11, corDappName=workflows-1.0, corDappHash=F8E3613207E5ABAEC38930FAA426F7BA91464AA72DAF3EFB74917A0BA71A146E), isEnabledTimedFlow=false), Initiating(flowClass=class com.r3.corda.lib.accounts.workflows.flows.RequestKeyForAccount, classToInitiateWith=class com.r3.corda.lib.accounts.workflows.flows.RequestKeyForAccount, flowInfo=FlowInfo(flowVersion=1, appName=accounts-workflows-1.0), subFlowVersion=CorDappFlow(platformVersion=11, corDappName=accounts-workflows-1.0, corDappHash=80555705CE83A631D1BDD61E9C14A7C2215BB67FAB1411547C4D4B3D66F8402E), isEnabledTimedFlow=false), Inlined(flowClass=class com.r3.corda.lib.accounts.workflows.flows.RequestKeyForAccountFlow, subFlowVersion=CorDappFlow(platformVersion=11, corDappName=accounts-workflows-1.0, corDappHash=80555705CE83A631D1BDD61E9C14A7C2215BB67FAB1411547C4D4B3D66F8402E), isEnabledTimedFlow=false), Inlined(flowClass=class com.r3.corda.lib.ci.workflows.RequestKeyFlow, subFlowVersion=CoreFlow(platformVersion=11), isEnabledTimedFlow=false)]
    [Initiating(flowClass=class net.corda.samples.obligation.flows.IOUSettleFlow, classToInitiateWith=class net.corda.samples.obligation.flows.IOUSettleFlow, flowInfo=FlowInfo(flowVersion=1, appName=<unknown>), subFlowVersion=CorDappFlow(platformVersion=11, corDappName=workflows-1.0, corDappHash=F8E3613207E5ABAEC38930FAA426F7BA91464AA72DAF3EFB74917A0BA71A146E), isEnabledTimedFlow=false), Initiating(flowClass=class com.r3.corda.lib.accounts.workflows.flows.RequestKeyForAccount, classToInitiateWith=class com.r3.corda.lib.accounts.workflows.flows.RequestKeyForAccount, flowInfo=FlowInfo(flowVersion=1, appName=accounts-workflows-1.0), subFlowVersion=CorDappFlow(platformVersion=11, corDappName=accounts-workflows-1.0, corDappHash=80555705CE83A631D1BDD61E9C14A7C2215BB67FAB1411547C4D4B3D66F8402E), isEnabledTimedFlow=false), Inlined(flowClass=class com.r3.corda.lib.accounts.workflows.flows.RequestKeyForAccountFlow, subFlowVersion=CorDappFlow(platformVersion=11, corDappName=accounts-workflows-1.0, corDappHash=80555705CE83A631D1BDD61E9C14A7C2215BB67FAB1411547C4D4B3D66F8402E), isEnabledTimedFlow=false)]
checkpoint.timestamp: 
    2023-01-31T07:18:18.618Z
    2023-01-31T07:18:18.621Z


 --- Transition of flow [7bf5b948-b54a-4fbc-824c-e81579076823] ---
  Timestamp: 2023-01-31T07:18:18.621Z
  Event: LeaveSubFlow
  Actions: 
    
  Continuation: ProcessEvents
  Diff between previous and next state:
checkpoint.checkpointState.subFlowStack: 
    [Initiating(flowClass=class net.corda.samples.obligation.flows.IOUSettleFlow, classToInitiateWith=class net.corda.samples.obligation.flows.IOUSettleFlow, flowInfo=FlowInfo(flowVersion=1, appName=<unknown>), subFlowVersion=CorDappFlow(platformVersion=11, corDappName=workflows-1.0, corDappHash=F8E3613207E5ABAEC38930FAA426F7BA91464AA72DAF3EFB74917A0BA71A146E), isEnabledTimedFlow=false), Initiating(flowClass=class com.r3.corda.lib.accounts.workflows.flows.RequestKeyForAccount, classToInitiateWith=class com.r3.corda.lib.accounts.workflows.flows.RequestKeyForAccount, flowInfo=FlowInfo(flowVersion=1, appName=accounts-workflows-1.0), subFlowVersion=CorDappFlow(platformVersion=11, corDappName=accounts-workflows-1.0, corDappHash=80555705CE83A631D1BDD61E9C14A7C2215BB67FAB1411547C4D4B3D66F8402E), isEnabledTimedFlow=false), Inlined(flowClass=class com.r3.corda.lib.accounts.workflows.flows.RequestKeyForAccountFlow, subFlowVersion=CorDappFlow(platformVersion=11, corDappName=accounts-workflows-1.0, corDappHash=80555705CE83A631D1BDD61E9C14A7C2215BB67FAB1411547C4D4B3D66F8402E), isEnabledTimedFlow=false)]
    [Initiating(flowClass=class net.corda.samples.obligation.flows.IOUSettleFlow, classToInitiateWith=class net.corda.samples.obligation.flows.IOUSettleFlow, flowInfo=FlowInfo(flowVersion=1, appName=<unknown>), subFlowVersion=CorDappFlow(platformVersion=11, corDappName=workflows-1.0, corDappHash=F8E3613207E5ABAEC38930FAA426F7BA91464AA72DAF3EFB74917A0BA71A146E), isEnabledTimedFlow=false), Initiating(flowClass=class com.r3.corda.lib.accounts.workflows.flows.RequestKeyForAccount, classToInitiateWith=class com.r3.corda.lib.accounts.workflows.flows.RequestKeyForAccount, flowInfo=FlowInfo(flowVersion=1, appName=accounts-workflows-1.0), subFlowVersion=CorDappFlow(platformVersion=11, corDappName=accounts-workflows-1.0, corDappHash=80555705CE83A631D1BDD61E9C14A7C2215BB67FAB1411547C4D4B3D66F8402E), isEnabledTimedFlow=false)]


 --- Transition of flow [7bf5b948-b54a-4fbc-824c-e81579076823] ---
  Timestamp: 2023-01-31T07:18:18.621Z
  Event: LeaveSubFlow
  Actions: 
    
  Continuation: ProcessEvents
  Diff between previous and next state:
checkpoint.checkpointState.subFlowStack: 
    [Initiating(flowClass=class net.corda.samples.obligation.flows.IOUSettleFlow, classToInitiateWith=class net.corda.samples.obligation.flows.IOUSettleFlow, flowInfo=FlowInfo(flowVersion=1, appName=<unknown>), subFlowVersion=CorDappFlow(platformVersion=11, corDappName=workflows-1.0, corDappHash=F8E3613207E5ABAEC38930FAA426F7BA91464AA72DAF3EFB74917A0BA71A146E), isEnabledTimedFlow=false), Initiating(flowClass=class com.r3.corda.lib.accounts.workflows.flows.RequestKeyForAccount, classToInitiateWith=class com.r3.corda.lib.accounts.workflows.flows.RequestKeyForAccount, flowInfo=FlowInfo(flowVersion=1, appName=accounts-workflows-1.0), subFlowVersion=CorDappFlow(platformVersion=11, corDappName=accounts-workflows-1.0, corDappHash=80555705CE83A631D1BDD61E9C14A7C2215BB67FAB1411547C4D4B3D66F8402E), isEnabledTimedFlow=false)]
    [Initiating(flowClass=class net.corda.samples.obligation.flows.IOUSettleFlow, classToInitiateWith=class net.corda.samples.obligation.flows.IOUSettleFlow, flowInfo=FlowInfo(flowVersion=1, appName=<unknown>), subFlowVersion=CorDappFlow(platformVersion=11, corDappName=workflows-1.0, corDappHash=F8E3613207E5ABAEC38930FAA426F7BA91464AA72DAF3EFB74917A0BA71A146E), isEnabledTimedFlow=false)]


 --- Transition of flow [7bf5b948-b54a-4fbc-824c-e81579076823] ---
  Timestamp: 2023-01-31T07:18:19.068Z
  Event: InitiateFlow(destination=O=Mock Company 3, L=London, C=GB, wellKnownParty=O=Mock Company 3, L=London, C=GB)
  Actions: 
    AddSessionBinding(flowId=[7bf5b948-b54a-4fbc-824c-e81579076823], sessionId=SessionId(toLong=7106756066069934968))
  Continuation: Resume(result=class net.corda.node.services.statemachine.FlowSessionImpl)
  Diff between previous and next state:
checkpoint.checkpointState.sessions.SessionId(toLong=7106756066069934968): 
    null
    Uninitiated(destination=O=Mock Company 3, L=London, C=GB, initiatingSubFlow=Initiating(flowClass=class net.corda.samples.obligation.flows.IOUSettleFlow, classToInitiateWith=class net.corda.samples.obligation.flows.IOUSettleFlow, flowInfo=FlowInfo(flowVersion=1, appName=<unknown>), subFlowVersion=CorDappFlow(platformVersion=11, corDappName=workflows-1.0, corDappHash=F8E3613207E5ABAEC38930FAA426F7BA91464AA72DAF3EFB74917A0BA71A146E), isEnabledTimedFlow=false), sourceSessionId=SessionId(toLong=7106756066069934968), additionalEntropy=4795262264991213571)
checkpoint.timestamp: 
    2023-01-31T07:18:18.621Z
    2023-01-31T07:18:19.068Z


 --- Transition of flow [7bf5b948-b54a-4fbc-824c-e81579076823] ---
  Timestamp: 2023-01-31T07:18:19.069Z
  Event: EnterSubFlow(subFlowClass=class net.corda.core.flows.CollectSignatureFlow, subFlowVersion=CoreFlow(platformVersion=11), isEnabledTimedFlow=false)
  Actions: 
    
  Continuation: ProcessEvents
  Diff between previous and next state:
checkpoint.checkpointState.subFlowStack: 
    [Initiating(flowClass=class net.corda.samples.obligation.flows.IOUSettleFlow, classToInitiateWith=class net.corda.samples.obligation.flows.IOUSettleFlow, flowInfo=FlowInfo(flowVersion=1, appName=<unknown>), subFlowVersion=CorDappFlow(platformVersion=11, corDappName=workflows-1.0, corDappHash=F8E3613207E5ABAEC38930FAA426F7BA91464AA72DAF3EFB74917A0BA71A146E), isEnabledTimedFlow=false)]
    [Initiating(flowClass=class net.corda.samples.obligation.flows.IOUSettleFlow, classToInitiateWith=class net.corda.samples.obligation.flows.IOUSettleFlow, flowInfo=FlowInfo(flowVersion=1, appName=<unknown>), subFlowVersion=CorDappFlow(platformVersion=11, corDappName=workflows-1.0, corDappHash=F8E3613207E5ABAEC38930FAA426F7BA91464AA72DAF3EFB74917A0BA71A146E), isEnabledTimedFlow=false), Inlined(flowClass=class net.corda.core.flows.CollectSignatureFlow, subFlowVersion=CoreFlow(platformVersion=11), isEnabledTimedFlow=false)]
checkpoint.timestamp: 
    2023-01-31T07:18:19.068Z
    2023-01-31T07:18:19.069Z


 --- Transition of flow [7bf5b948-b54a-4fbc-824c-e81579076823] ---
  Timestamp: 2023-01-31T07:18:19.069Z
  Event: EnterSubFlow(subFlowClass=class net.corda.core.flows.SendTransactionFlow, subFlowVersion=CoreFlow(platformVersion=11), isEnabledTimedFlow=false)
  Actions: 
    
  Continuation: ProcessEvents
  Diff between previous and next state:
checkpoint.checkpointState.subFlowStack: 
    [Initiating(flowClass=class net.corda.samples.obligation.flows.IOUSettleFlow, classToInitiateWith=class net.corda.samples.obligation.flows.IOUSettleFlow, flowInfo=FlowInfo(flowVersion=1, appName=<unknown>), subFlowVersion=CorDappFlow(platformVersion=11, corDappName=workflows-1.0, corDappHash=F8E3613207E5ABAEC38930FAA426F7BA91464AA72DAF3EFB74917A0BA71A146E), isEnabledTimedFlow=false), Inlined(flowClass=class net.corda.core.flows.CollectSignatureFlow, subFlowVersion=CoreFlow(platformVersion=11), isEnabledTimedFlow=false)]
    [Initiating(flowClass=class net.corda.samples.obligation.flows.IOUSettleFlow, classToInitiateWith=class net.corda.samples.obligation.flows.IOUSettleFlow, flowInfo=FlowInfo(flowVersion=1, appName=<unknown>), subFlowVersion=CorDappFlow(platformVersion=11, corDappName=workflows-1.0, corDappHash=F8E3613207E5ABAEC38930FAA426F7BA91464AA72DAF3EFB74917A0BA71A146E), isEnabledTimedFlow=false), Inlined(flowClass=class net.corda.core.flows.CollectSignatureFlow, subFlowVersion=CoreFlow(platformVersion=11), isEnabledTimedFlow=false), Inlined(flowClass=class net.corda.core.flows.SendTransactionFlow, subFlowVersion=CoreFlow(platformVersion=11), isEnabledTimedFlow=false)]


 --- Transition of flow [7bf5b948-b54a-4fbc-824c-e81579076823] ---
  Timestamp: 2023-01-31T07:18:19.077Z
  Event: Suspend(ioRequest=SendAndReceive({FlowSessionImpl(destination=O=Mock Company 3, L=London, C=GB, sourceSessionId=SessionId(toLong=7106756066069934968))=FlowSessionImpl(destination=O=Mock Company 3, L=London, C=GB, sourceSessionId=SessionId(toLong=7106756066069934968))=F8DEF04D66C0707618140559667B1536D69E478665ADCBFAC111210760965968}, shouldRetrySend=false), maySkipCheckpoint=false, fiber=558816BD8EBD1B811EB65EDDBA2B7932574B974B4D8D7EB72800BA90E7064136, currentStep=Starting)
  Actions: 
    PersistCheckpoint(id=[7bf5b948-b54a-4fbc-824c-e81579076823], checkpoint=Checkpoint(checkpointState=CheckpointState(invocationContext=InvocationContext(origin=RPC(actor=Actor(id=Id(value=Only For Testing), serviceId=AuthServiceId(value=TEST), owningLegalIdentity=O=Mock Company 1, L=London, C=GB)), trace=Trace(invocationId=a0b12bd2-1f3d-4173-941b-1db3cba99f9d, timestamp: 2023-01-31T07:18:18.538Z, entityType: Invocation, sessionId=a0b12bd2-1f3d-4173-941b-1db3cba99f9d, timestamp: 2023-01-31T07:18:18.538Z, entityType: Session), actor=Actor(id=Id(value=Only For Testing), serviceId=AuthServiceId(value=TEST), owningLegalIdentity=O=Mock Company 1, L=London, C=GB), externalTrace=null, impersonatedActor=null, arguments=[], clientId=null), ourIdentity=O=Mock Company 1, L=London, C=GB, sessions={SessionId(toLong=240453306151564151)=Initiated(peerParty=O=Mock Company 3, L=London, C=GB, peerFlowInfo=FlowInfo(flowVersion=1, appName=accounts-workflows-1.0), receivedMessages=[], otherSideErrored=false, peerSinkSessionId=SessionId(toLong=1422336125546696269), deduplicationSeed=R-240453306151564151--460002818677610954), SessionId(toLong=7106756066069934968)=Uninitiated(destination=O=Mock Company 3, L=London, C=GB, initiatingSubFlow=Initiating(flowClass=class net.corda.samples.obligation.flows.IOUSettleFlow, classToInitiateWith=class net.corda.samples.obligation.flows.IOUSettleFlow, flowInfo=FlowInfo(flowVersion=1, appName=<unknown>), subFlowVersion=CorDappFlow(platformVersion=11, corDappName=workflows-1.0, corDappHash=F8E3613207E5ABAEC38930FAA426F7BA91464AA72DAF3EFB74917A0BA71A146E), isEnabledTimedFlow=false), sourceSessionId=SessionId(toLong=7106756066069934968), additionalEntropy=4795262264991213571)}, sessionsToBeClosed=[], subFlowStack=[Initiating(flowClass=class net.corda.samples.obligation.flows.IOUSettleFlow, classToInitiateWith=class net.corda.samples.obligation.flows.IOUSettleFlow, flowInfo=FlowInfo(flowVersion=1, appName=<unknown>), subFlowVersion=CorDappFlow(platformVersion=11, corDappName=workflows-1.0, corDappHash=F8E3613207E5ABAEC38930FAA426F7BA91464AA72DAF3EFB74917A0BA71A146E), isEnabledTimedFlow=false), Inlined(flowClass=class net.corda.core.flows.CollectSignatureFlow, subFlowVersion=CoreFlow(platformVersion=11), isEnabledTimedFlow=false), Inlined(flowClass=class net.corda.core.flows.SendTransactionFlow, subFlowVersion=CoreFlow(platformVersion=11), isEnabledTimedFlow=false)], numberOfSuspends=3, numberOfCommits=4), flowState=Started(flowIORequest=SendAndReceive({FlowSessionImpl(destination=O=Mock Company 3, L=London, C=GB, sourceSessionId=SessionId(toLong=7106756066069934968))=FlowSessionImpl(destination=O=Mock Company 3, L=London, C=GB, sourceSessionId=SessionId(toLong=7106756066069934968))=F8DEF04D66C0707618140559667B1536D69E478665ADCBFAC111210760965968}, shouldRetrySend=false), frozenFiber=558816BD8EBD1B811EB65EDDBA2B7932574B974B4D8D7EB72800BA90E7064136), errorState=Clean, result=null, status=RUNNABLE, progressStep=Starting, flowIoRequest=SendAndReceive, compatible=true), isCheckpointUpdate=true)
    PersistDeduplicationFacts(deduplicationHandlers=[net.corda.testing.node.internal.MockNodeMessagingService$InMemoryDeduplicationHandler@64e0bd34])
    CommitTransaction
    AcknowledgeMessages(deduplicationHandlers=[net.corda.testing.node.internal.MockNodeMessagingService$InMemoryDeduplicationHandler@64e0bd34])
    ScheduleEvent(event=DoRemainingWork)
  Continuation: ProcessEvents
  Diff between previous and next state:
checkpoint.flowState.flowIORequest: 
    Receive(sessions=[FlowSessionImpl(destination=O=Mock Company 3, L=London, C=GB, sourceSessionId=SessionId(toLong=240453306151564151))])
    SendAndReceive({FlowSessionImpl(destination=O=Mock Company 3, L=London, C=GB, sourceSessionId=SessionId(toLong=7106756066069934968))=FlowSessionImpl(destination=O=Mock Company 3, L=London, C=GB, sourceSessionId=SessionId(toLong=7106756066069934968))=F8DEF04D66C0707618140559667B1536D69E478665ADCBFAC111210760965968}, shouldRetrySend=false)
checkpoint.flowState.frozenFiber.hash: 
    79B8C386AD8B6BEEC996C020B21FE3FEED4CAFD9DC6F07F9024559B87599979C
    558816BD8EBD1B811EB65EDDBA2B7932574B974B4D8D7EB72800BA90E7064136
checkpoint.checkpointState.numberOfSuspends: 
    2
    3
checkpoint.checkpointState.numberOfCommits: 
    3
    4
checkpoint.timestamp: 
    2023-01-31T07:18:19.069Z
    2023-01-31T07:18:19.073Z
numberOfCommits: 
    3
    4
isFlowResumed: 
    true
    false
pendingDeduplicationHandlers: 
    [net.corda.testing.node.internal.MockNodeMessagingService$InMemoryDeduplicationHandler@64e0bd34]
    []


 --- Transition of flow [7bf5b948-b54a-4fbc-824c-e81579076823] ---
  Timestamp: 2023-01-31T07:18:19.079Z
  Event: DoRemainingWork
  Actions: 
    SendMultiple(sendInitial=[SendInitial(destination=O=Mock Company 3, L=London, C=GB, initialise=InitialSessionMessage(initiatorSessionId=SessionId(toLong=7106756066069934968), initiationEntropy=4795262264991213571, initiatorFlowClassName=net.corda.samples.obligation.flows.IOUSettleFlow, appName=<unknown>, firstPayload=class net.corda.core.serialization.SerializedBytes), deduplicationId=SenderDeduplicationId(deduplicationId=DeduplicationId(toString=N-R-7106756066069934968-4795262264991213571-3-0), senderUUID=3ae20ed2-b752-4131-be00-8b87ba4c6253))], sendExisting=[])
  Continuation: ProcessEvents
  Diff between previous and next state:
checkpoint.flowState.flowIORequest: 
    SendAndReceive({FlowSessionImpl(destination=O=Mock Company 3, L=London, C=GB, sourceSessionId=SessionId(toLong=7106756066069934968))=FlowSessionImpl(destination=O=Mock Company 3, L=London, C=GB, sourceSessionId=SessionId(toLong=7106756066069934968))=F8DEF04D66C0707618140559667B1536D69E478665ADCBFAC111210760965968}, shouldRetrySend=false)
    Receive(sessions=[FlowSessionImpl(destination=O=Mock Company 3, L=London, C=GB, sourceSessionId=SessionId(toLong=7106756066069934968))])
checkpoint.checkpointState.sessions.SessionId(toLong=7106756066069934968): 
    Uninitiated(destination=O=Mock Company 3, L=London, C=GB, initiatingSubFlow=Initiating(flowClass=class net.corda.samples.obligation.flows.IOUSettleFlow, classToInitiateWith=class net.corda.samples.obligation.flows.IOUSettleFlow, flowInfo=FlowInfo(flowVersion=1, appName=<unknown>), subFlowVersion=CorDappFlow(platformVersion=11, corDappName=workflows-1.0, corDappHash=F8E3613207E5ABAEC38930FAA426F7BA91464AA72DAF3EFB74917A0BA71A146E), isEnabledTimedFlow=false), sourceSessionId=SessionId(toLong=7106756066069934968), additionalEntropy=4795262264991213571)
    Initiating(bufferedMessages=[], rejectionError=null, deduplicationSeed=R-7106756066069934968-4795262264991213571)
checkpoint.timestamp: 
    2023-01-31T07:18:19.073Z
    2023-01-31T07:18:19.077Z


 --- Transition of flow [7bf5b948-b54a-4fbc-824c-e81579076823] ---
  Timestamp: 2023-01-31T07:18:19.111Z
  Event: DeliverSessionMessage(sessionMessage=ExistingSessionMessage(recipientSessionId=SessionId(toLong=240453306151564151), payload=net.corda.node.services.statemachine.EndSessionMessage@270a966c), deduplicationHandler=net.corda.testing.node.internal.MockNodeMessagingService$InMemoryDeduplicationHandler@1a8cca68, sender=O=Mock Company 3, L=London, C=GB)
  Actions: 
    ScheduleEvent(event=DoRemainingWork)
  Continuation: ProcessEvents
  Diff between previous and next state:
checkpoint.checkpointState.sessions.SessionId(toLong=240453306151564151).receivedMessages.isEmpty: 
    true
    false
checkpoint.checkpointState.sessionsToBeClosed: 
    []
    [SessionId(toLong=240453306151564151)]
checkpoint.timestamp: 
    2023-01-31T07:18:19.077Z
    2023-01-31T07:18:19.111Z
pendingDeduplicationHandlers: 
    []
    [net.corda.testing.node.internal.MockNodeMessagingService$InMemoryDeduplicationHandler@1a8cca68]


 --- Transition of flow [7bf5b948-b54a-4fbc-824c-e81579076823] ---
  Timestamp: 2023-01-31T07:18:19.112Z
  Event: DoRemainingWork
  Actions: 
    RemoveSessionBindings(sessionIds=[SessionId(toLong=240453306151564151)])
  Continuation: ProcessEvents
  Diff between previous and next state:
checkpoint.checkpointState.sessions.SessionId(toLong=240453306151564151): 
    Initiated(peerParty=O=Mock Company 3, L=London, C=GB, peerFlowInfo=FlowInfo(flowVersion=1, appName=accounts-workflows-1.0), receivedMessages=[net.corda.node.services.statemachine.EndSessionMessage@270a966c], otherSideErrored=false, peerSinkSessionId=SessionId(toLong=1422336125546696269), deduplicationSeed=R-240453306151564151--460002818677610954)
    null
checkpoint.checkpointState.sessionsToBeClosed: 
    [SessionId(toLong=240453306151564151)]
    []
checkpoint.timestamp: 
    2023-01-31T07:18:19.111Z
    2023-01-31T07:18:19.112Z


 --- Transition of flow [7bf5b948-b54a-4fbc-824c-e81579076823] ---
  Timestamp: 2023-01-31T07:18:19.114Z
  Event: DeliverSessionMessage(sessionMessage=ExistingSessionMessage(recipientSessionId=SessionId(toLong=7106756066069934968), payload=ConfirmSessionMessage(initiatedSessionId=SessionId(toLong=-7881500851533551462), initiatedFlowInfo=FlowInfo(flowVersion=1, appName=<unknown>))), deduplicationHandler=net.corda.testing.node.internal.MockNodeMessagingService$InMemoryDeduplicationHandler@7ee892dc, sender=O=Mock Company 3, L=London, C=GB)
  Actions: 
    ScheduleEvent(event=DoRemainingWork)
  Continuation: ProcessEvents
  Diff between previous and next state:
checkpoint.checkpointState.sessions.SessionId(toLong=7106756066069934968): 
    Initiating(bufferedMessages=[], rejectionError=null, deduplicationSeed=R-7106756066069934968-4795262264991213571)
    Initiated(peerParty=O=Mock Company 3, L=London, C=GB, peerFlowInfo=FlowInfo(flowVersion=1, appName=<unknown>), receivedMessages=[], otherSideErrored=false, peerSinkSessionId=SessionId(toLong=-7881500851533551462), deduplicationSeed=R-7106756066069934968-4795262264991213571)
checkpoint.timestamp: 
    2023-01-31T07:18:19.112Z
    2023-01-31T07:18:19.114Z
pendingDeduplicationHandlers: 
    [net.corda.testing.node.internal.MockNodeMessagingService$InMemoryDeduplicationHandler@1a8cca68]
    [net.corda.testing.node.internal.MockNodeMessagingService$InMemoryDeduplicationHandler@1a8cca68, net.corda.testing.node.internal.MockNodeMessagingService$InMemoryDeduplicationHandler@7ee892dc]


 --- Transition of flow [7bf5b948-b54a-4fbc-824c-e81579076823] ---
  Timestamp: 2023-01-31T07:18:19.114Z
  Event: DoRemainingWork
  Actions: 
    
  Continuation: ProcessEvents
  Diff between previous and next state:
null

 --- Transition of flow [7bf5b948-b54a-4fbc-824c-e81579076823] ---
  Timestamp: 2023-01-31T07:18:19.115Z
  Event: DeliverSessionMessage(sessionMessage=ExistingSessionMessage(recipientSessionId=SessionId(toLong=7106756066069934968), payload=DataSessionMessage(payload=class net.corda.core.serialization.SerializedBytes)), deduplicationHandler=net.corda.testing.node.internal.MockNodeMessagingService$InMemoryDeduplicationHandler@1501c41c, sender=O=Mock Company 3, L=London, C=GB)
  Actions: 
    ScheduleEvent(event=DoRemainingWork)
  Continuation: ProcessEvents
  Diff between previous and next state:
checkpoint.checkpointState.sessions.SessionId(toLong=7106756066069934968).receivedMessages.isEmpty: 
    true
    false
checkpoint.timestamp: 
    2023-01-31T07:18:19.114Z
    2023-01-31T07:18:19.115Z
pendingDeduplicationHandlers: 
    [net.corda.testing.node.internal.MockNodeMessagingService$InMemoryDeduplicationHandler@1a8cca68, net.corda.testing.node.internal.MockNodeMessagingService$InMemoryDeduplicationHandler@7ee892dc]
    [net.corda.testing.node.internal.MockNodeMessagingService$InMemoryDeduplicationHandler@1a8cca68, net.corda.testing.node.internal.MockNodeMessagingService$InMemoryDeduplicationHandler@7ee892dc, net.corda.testing.node.internal.MockNodeMessagingService$InMemoryDeduplicationHandler@1501c41c]


 --- Transition of flow [7bf5b948-b54a-4fbc-824c-e81579076823] ---
  Timestamp: 2023-01-31T07:18:19.115Z
  Event: DoRemainingWork
  Actions: 
    CreateTransaction
  Continuation: Resume(result=class java.util.LinkedHashMap)
  Diff between previous and next state:
checkpoint.checkpointState.sessions.SessionId(toLong=7106756066069934968).receivedMessages.isEmpty: 
    false
    true
isFlowResumed: 
    false
    true


 --- Transition of flow [7bf5b948-b54a-4fbc-824c-e81579076823] ---
  Timestamp: 2023-01-31T07:18:19.121Z
  Event: Suspend(ioRequest=SendAndReceive({FlowSessionImpl(destination=O=Mock Company 3, L=London, C=GB, sourceSessionId=SessionId(toLong=7106756066069934968))=FlowSessionImpl(destination=O=Mock Company 3, L=London, C=GB, sourceSessionId=SessionId(toLong=7106756066069934968))=E3E340423D37CE9AF32A1E46957DFB6A84DF459BFE39720D22505D1C0C04BEB7}, shouldRetrySend=false), maySkipCheckpoint=false, fiber=2CE598E0A36E5BDB44D9BCD0C63DEBF125D13B248FEDBFE4773C3B6686E52E8C, currentStep=Starting)
  Actions: 
    PersistCheckpoint(id=[7bf5b948-b54a-4fbc-824c-e81579076823], checkpoint=Checkpoint(checkpointState=CheckpointState(invocationContext=InvocationContext(origin=RPC(actor=Actor(id=Id(value=Only For Testing), serviceId=AuthServiceId(value=TEST), owningLegalIdentity=O=Mock Company 1, L=London, C=GB)), trace=Trace(invocationId=a0b12bd2-1f3d-4173-941b-1db3cba99f9d, timestamp: 2023-01-31T07:18:18.538Z, entityType: Invocation, sessionId=a0b12bd2-1f3d-4173-941b-1db3cba99f9d, timestamp: 2023-01-31T07:18:18.538Z, entityType: Session), actor=Actor(id=Id(value=Only For Testing), serviceId=AuthServiceId(value=TEST), owningLegalIdentity=O=Mock Company 1, L=London, C=GB), externalTrace=null, impersonatedActor=null, arguments=[], clientId=null), ourIdentity=O=Mock Company 1, L=London, C=GB, sessions={SessionId(toLong=7106756066069934968)=Initiated(peerParty=O=Mock Company 3, L=London, C=GB, peerFlowInfo=FlowInfo(flowVersion=1, appName=<unknown>), receivedMessages=[], otherSideErrored=false, peerSinkSessionId=SessionId(toLong=-7881500851533551462), deduplicationSeed=R-7106756066069934968-4795262264991213571)}, sessionsToBeClosed=[], subFlowStack=[Initiating(flowClass=class net.corda.samples.obligation.flows.IOUSettleFlow, classToInitiateWith=class net.corda.samples.obligation.flows.IOUSettleFlow, flowInfo=FlowInfo(flowVersion=1, appName=<unknown>), subFlowVersion=CorDappFlow(platformVersion=11, corDappName=workflows-1.0, corDappHash=F8E3613207E5ABAEC38930FAA426F7BA91464AA72DAF3EFB74917A0BA71A146E), isEnabledTimedFlow=false), Inlined(flowClass=class net.corda.core.flows.CollectSignatureFlow, subFlowVersion=CoreFlow(platformVersion=11), isEnabledTimedFlow=false), Inlined(flowClass=class net.corda.core.flows.SendTransactionFlow, subFlowVersion=CoreFlow(platformVersion=11), isEnabledTimedFlow=false)], numberOfSuspends=4, numberOfCommits=5), flowState=Started(flowIORequest=SendAndReceive({FlowSessionImpl(destination=O=Mock Company 3, L=London, C=GB, sourceSessionId=SessionId(toLong=7106756066069934968))=FlowSessionImpl(destination=O=Mock Company 3, L=London, C=GB, sourceSessionId=SessionId(toLong=7106756066069934968))=E3E340423D37CE9AF32A1E46957DFB6A84DF459BFE39720D22505D1C0C04BEB7}, shouldRetrySend=false), frozenFiber=2CE598E0A36E5BDB44D9BCD0C63DEBF125D13B248FEDBFE4773C3B6686E52E8C), errorState=Clean, result=null, status=RUNNABLE, progressStep=Starting, flowIoRequest=SendAndReceive, compatible=true), isCheckpointUpdate=true)
    PersistDeduplicationFacts(deduplicationHandlers=[net.corda.testing.node.internal.MockNodeMessagingService$InMemoryDeduplicationHandler@1a8cca68, net.corda.testing.node.internal.MockNodeMessagingService$InMemoryDeduplicationHandler@7ee892dc, net.corda.testing.node.internal.MockNodeMessagingService$InMemoryDeduplicationHandler@1501c41c])
    CommitTransaction
    AcknowledgeMessages(deduplicationHandlers=[net.corda.testing.node.internal.MockNodeMessagingService$InMemoryDeduplicationHandler@1a8cca68, net.corda.testing.node.internal.MockNodeMessagingService$InMemoryDeduplicationHandler@7ee892dc, net.corda.testing.node.internal.MockNodeMessagingService$InMemoryDeduplicationHandler@1501c41c])
    ScheduleEvent(event=DoRemainingWork)
  Continuation: ProcessEvents
  Diff between previous and next state:
checkpoint.flowState.flowIORequest: 
    Receive(sessions=[FlowSessionImpl(destination=O=Mock Company 3, L=London, C=GB, sourceSessionId=SessionId(toLong=7106756066069934968))])
    SendAndReceive({FlowSessionImpl(destination=O=Mock Company 3, L=London, C=GB, sourceSessionId=SessionId(toLong=7106756066069934968))=FlowSessionImpl(destination=O=Mock Company 3, L=London, C=GB, sourceSessionId=SessionId(toLong=7106756066069934968))=E3E340423D37CE9AF32A1E46957DFB6A84DF459BFE39720D22505D1C0C04BEB7}, shouldRetrySend=false)
checkpoint.flowState.frozenFiber.hash: 
    558816BD8EBD1B811EB65EDDBA2B7932574B974B4D8D7EB72800BA90E7064136
    2CE598E0A36E5BDB44D9BCD0C63DEBF125D13B248FEDBFE4773C3B6686E52E8C
checkpoint.checkpointState.numberOfSuspends: 
    3
    4
checkpoint.checkpointState.numberOfCommits: 
    4
    5
checkpoint.timestamp: 
    2023-01-31T07:18:19.115Z
    2023-01-31T07:18:19.119Z
numberOfCommits: 
    4
    5
isFlowResumed: 
    true
    false
pendingDeduplicationHandlers: 
    [net.corda.testing.node.internal.MockNodeMessagingService$InMemoryDeduplicationHandler@1a8cca68, net.corda.testing.node.internal.MockNodeMessagingService$InMemoryDeduplicationHandler@7ee892dc, net.corda.testing.node.internal.MockNodeMessagingService$InMemoryDeduplicationHandler@1501c41c]
    []


 --- Transition of flow [7bf5b948-b54a-4fbc-824c-e81579076823] ---
  Timestamp: 2023-01-31T07:18:19.122Z
  Event: DoRemainingWork
  Actions: 
    SendMultiple(sendInitial=[], sendExisting=[SendExisting(peerParty=O=Mock Company 3, L=London, C=GB, message=ExistingSessionMessage(recipientSessionId=SessionId(toLong=-7881500851533551462), payload=DataSessionMessage(payload=class net.corda.core.serialization.SerializedBytes)), deduplicationId=SenderDeduplicationId(deduplicationId=DeduplicationId(toString=N-R-7106756066069934968-4795262264991213571-4-0), senderUUID=3ae20ed2-b752-4131-be00-8b87ba4c6253))])
  Continuation: ProcessEvents
  Diff between previous and next state:
checkpoint.flowState.flowIORequest: 
    SendAndReceive({FlowSessionImpl(destination=O=Mock Company 3, L=London, C=GB, sourceSessionId=SessionId(toLong=7106756066069934968))=FlowSessionImpl(destination=O=Mock Company 3, L=London, C=GB, sourceSessionId=SessionId(toLong=7106756066069934968))=E3E340423D37CE9AF32A1E46957DFB6A84DF459BFE39720D22505D1C0C04BEB7}, shouldRetrySend=false)
    Receive(sessions=[FlowSessionImpl(destination=O=Mock Company 3, L=London, C=GB, sourceSessionId=SessionId(toLong=7106756066069934968))])
checkpoint.timestamp: 
    2023-01-31T07:18:19.119Z
    2023-01-31T07:18:19.122Z


 --- Transition of flow [7bf5b948-b54a-4fbc-824c-e81579076823] ---
  Timestamp: 2023-01-31T07:18:19.277Z
  Event: DeliverSessionMessage(sessionMessage=ExistingSessionMessage(recipientSessionId=SessionId(toLong=7106756066069934968), payload=DataSessionMessage(payload=class net.corda.core.serialization.SerializedBytes)), deduplicationHandler=net.corda.testing.node.internal.MockNodeMessagingService$InMemoryDeduplicationHandler@23845d1a, sender=O=Mock Company 3, L=London, C=GB)
  Actions: 
    ScheduleEvent(event=DoRemainingWork)
  Continuation: ProcessEvents
  Diff between previous and next state:
checkpoint.checkpointState.sessions.SessionId(toLong=7106756066069934968).receivedMessages.isEmpty: 
    true
    false
checkpoint.timestamp: 
    2023-01-31T07:18:19.122Z
    2023-01-31T07:18:19.277Z
pendingDeduplicationHandlers: 
    []
    [net.corda.testing.node.internal.MockNodeMessagingService$InMemoryDeduplicationHandler@23845d1a]


 --- Transition of flow [7bf5b948-b54a-4fbc-824c-e81579076823] ---
  Timestamp: 2023-01-31T07:18:19.277Z
  Event: DoRemainingWork
  Actions: 
    CreateTransaction
  Continuation: Resume(result=class java.util.LinkedHashMap)
  Diff between previous and next state:
checkpoint.checkpointState.sessions.SessionId(toLong=7106756066069934968).receivedMessages.isEmpty: 
    false
    true
isFlowResumed: 
    false
    true


 --- Transition of flow [7bf5b948-b54a-4fbc-824c-e81579076823] ---
  Timestamp: 2023-01-31T07:18:19.278Z
  Event: LeaveSubFlow
  Actions: 
    
  Continuation: ProcessEvents
  Diff between previous and next state:
checkpoint.checkpointState.subFlowStack: 
    [Initiating(flowClass=class net.corda.samples.obligation.flows.IOUSettleFlow, classToInitiateWith=class net.corda.samples.obligation.flows.IOUSettleFlow, flowInfo=FlowInfo(flowVersion=1, appName=<unknown>), subFlowVersion=CorDappFlow(platformVersion=11, corDappName=workflows-1.0, corDappHash=F8E3613207E5ABAEC38930FAA426F7BA91464AA72DAF3EFB74917A0BA71A146E), isEnabledTimedFlow=false), Inlined(flowClass=class net.corda.core.flows.CollectSignatureFlow, subFlowVersion=CoreFlow(platformVersion=11), isEnabledTimedFlow=false), Inlined(flowClass=class net.corda.core.flows.SendTransactionFlow, subFlowVersion=CoreFlow(platformVersion=11), isEnabledTimedFlow=false)]
    [Initiating(flowClass=class net.corda.samples.obligation.flows.IOUSettleFlow, classToInitiateWith=class net.corda.samples.obligation.flows.IOUSettleFlow, flowInfo=FlowInfo(flowVersion=1, appName=<unknown>), subFlowVersion=CorDappFlow(platformVersion=11, corDappName=workflows-1.0, corDappHash=F8E3613207E5ABAEC38930FAA426F7BA91464AA72DAF3EFB74917A0BA71A146E), isEnabledTimedFlow=false), Inlined(flowClass=class net.corda.core.flows.CollectSignatureFlow, subFlowVersion=CoreFlow(platformVersion=11), isEnabledTimedFlow=false)]
checkpoint.timestamp: 
    2023-01-31T07:18:19.277Z
    2023-01-31T07:18:19.278Z


 --- Transition of flow [7bf5b948-b54a-4fbc-824c-e81579076823] ---
  Timestamp: 2023-01-31T07:18:19.282Z
  Event: Suspend(ioRequest=Send(sessionToMessage={FlowSessionImpl(destination=O=Mock Company 3, L=London, C=GB, sourceSessionId=SessionId(toLong=7106756066069934968))=5776F1072E3565A6C7C04A28DD4C9CC3AFEB61B3DDB7D47E09BCD2FB745D0B51}), maySkipCheckpoint=false, fiber=187E2ED8E922E471623C50DBBA7B0481C71175668FED52C1BB05723D5F8E1AE7, currentStep=Starting)
  Actions: 
    PersistCheckpoint(id=[7bf5b948-b54a-4fbc-824c-e81579076823], checkpoint=Checkpoint(checkpointState=CheckpointState(invocationContext=InvocationContext(origin=RPC(actor=Actor(id=Id(value=Only For Testing), serviceId=AuthServiceId(value=TEST), owningLegalIdentity=O=Mock Company 1, L=London, C=GB)), trace=Trace(invocationId=a0b12bd2-1f3d-4173-941b-1db3cba99f9d, timestamp: 2023-01-31T07:18:18.538Z, entityType: Invocation, sessionId=a0b12bd2-1f3d-4173-941b-1db3cba99f9d, timestamp: 2023-01-31T07:18:18.538Z, entityType: Session), actor=Actor(id=Id(value=Only For Testing), serviceId=AuthServiceId(value=TEST), owningLegalIdentity=O=Mock Company 1, L=London, C=GB), externalTrace=null, impersonatedActor=null, arguments=[], clientId=null), ourIdentity=O=Mock Company 1, L=London, C=GB, sessions={SessionId(toLong=7106756066069934968)=Initiated(peerParty=O=Mock Company 3, L=London, C=GB, peerFlowInfo=FlowInfo(flowVersion=1, appName=<unknown>), receivedMessages=[], otherSideErrored=false, peerSinkSessionId=SessionId(toLong=-7881500851533551462), deduplicationSeed=R-7106756066069934968-4795262264991213571)}, sessionsToBeClosed=[], subFlowStack=[Initiating(flowClass=class net.corda.samples.obligation.flows.IOUSettleFlow, classToInitiateWith=class net.corda.samples.obligation.flows.IOUSettleFlow, flowInfo=FlowInfo(flowVersion=1, appName=<unknown>), subFlowVersion=CorDappFlow(platformVersion=11, corDappName=workflows-1.0, corDappHash=F8E3613207E5ABAEC38930FAA426F7BA91464AA72DAF3EFB74917A0BA71A146E), isEnabledTimedFlow=false), Inlined(flowClass=class net.corda.core.flows.CollectSignatureFlow, subFlowVersion=CoreFlow(platformVersion=11), isEnabledTimedFlow=false)], numberOfSuspends=5, numberOfCommits=6), flowState=Started(flowIORequest=Send(sessionToMessage={FlowSessionImpl(destination=O=Mock Company 3, L=London, C=GB, sourceSessionId=SessionId(toLong=7106756066069934968))=5776F1072E3565A6C7C04A28DD4C9CC3AFEB61B3DDB7D47E09BCD2FB745D0B51}), frozenFiber=187E2ED8E922E471623C50DBBA7B0481C71175668FED52C1BB05723D5F8E1AE7), errorState=Clean, result=null, status=RUNNABLE, progressStep=Starting, flowIoRequest=Send, compatible=true), isCheckpointUpdate=true)
    PersistDeduplicationFacts(deduplicationHandlers=[net.corda.testing.node.internal.MockNodeMessagingService$InMemoryDeduplicationHandler@23845d1a])
    CommitTransaction
    AcknowledgeMessages(deduplicationHandlers=[net.corda.testing.node.internal.MockNodeMessagingService$InMemoryDeduplicationHandler@23845d1a])
    ScheduleEvent(event=DoRemainingWork)
  Continuation: ProcessEvents
  Diff between previous and next state:
checkpoint.flowState.flowIORequest: 
    Receive(sessions=[FlowSessionImpl(destination=O=Mock Company 3, L=London, C=GB, sourceSessionId=SessionId(toLong=7106756066069934968))])
    Send(sessionToMessage={FlowSessionImpl(destination=O=Mock Company 3, L=London, C=GB, sourceSessionId=SessionId(toLong=7106756066069934968))=5776F1072E3565A6C7C04A28DD4C9CC3AFEB61B3DDB7D47E09BCD2FB745D0B51})
checkpoint.flowState.frozenFiber.hash: 
    2CE598E0A36E5BDB44D9BCD0C63DEBF125D13B248FEDBFE4773C3B6686E52E8C
    187E2ED8E922E471623C50DBBA7B0481C71175668FED52C1BB05723D5F8E1AE7
checkpoint.flowIoRequest: 
    SendAndReceive
    Send
checkpoint.checkpointState.numberOfSuspends: 
    4
    5
checkpoint.checkpointState.numberOfCommits: 
    5
    6
checkpoint.timestamp: 
    2023-01-31T07:18:19.278Z
    2023-01-31T07:18:19.280Z
numberOfCommits: 
    5
    6
isFlowResumed: 
    true
    false
pendingDeduplicationHandlers: 
    [net.corda.testing.node.internal.MockNodeMessagingService$InMemoryDeduplicationHandler@23845d1a]
    []


 --- Transition of flow [7bf5b948-b54a-4fbc-824c-e81579076823] ---
  Timestamp: 2023-01-31T07:18:19.283Z
  Event: DoRemainingWork
  Actions: 
    SendMultiple(sendInitial=[], sendExisting=[SendExisting(peerParty=O=Mock Company 3, L=London, C=GB, message=ExistingSessionMessage(recipientSessionId=SessionId(toLong=-7881500851533551462), payload=DataSessionMessage(payload=class net.corda.core.serialization.SerializedBytes)), deduplicationId=SenderDeduplicationId(deduplicationId=DeduplicationId(toString=N-R-7106756066069934968-4795262264991213571-5-0), senderUUID=3ae20ed2-b752-4131-be00-8b87ba4c6253))])
    CreateTransaction
  Continuation: Resume(result=class kotlin.Unit)
  Diff between previous and next state:
isFlowResumed: 
    false
    true


 --- Transition of flow [7bf5b948-b54a-4fbc-824c-e81579076823] ---
  Timestamp: 2023-01-31T07:18:19.286Z
  Event: Suspend(ioRequest=Receive(sessions=[FlowSessionImpl(destination=O=Mock Company 3, L=London, C=GB, sourceSessionId=SessionId(toLong=7106756066069934968))]), maySkipCheckpoint=false, fiber=2D19A8927FC60D149A79A498C6F9E41D98715F082D0EEEE85210D3D62134377E, currentStep=Starting)
  Actions: 
    PersistCheckpoint(id=[7bf5b948-b54a-4fbc-824c-e81579076823], checkpoint=Checkpoint(checkpointState=CheckpointState(invocationContext=InvocationContext(origin=RPC(actor=Actor(id=Id(value=Only For Testing), serviceId=AuthServiceId(value=TEST), owningLegalIdentity=O=Mock Company 1, L=London, C=GB)), trace=Trace(invocationId=a0b12bd2-1f3d-4173-941b-1db3cba99f9d, timestamp: 2023-01-31T07:18:18.538Z, entityType: Invocation, sessionId=a0b12bd2-1f3d-4173-941b-1db3cba99f9d, timestamp: 2023-01-31T07:18:18.538Z, entityType: Session), actor=Actor(id=Id(value=Only For Testing), serviceId=AuthServiceId(value=TEST), owningLegalIdentity=O=Mock Company 1, L=London, C=GB), externalTrace=null, impersonatedActor=null, arguments=[], clientId=null), ourIdentity=O=Mock Company 1, L=London, C=GB, sessions={SessionId(toLong=7106756066069934968)=Initiated(peerParty=O=Mock Company 3, L=London, C=GB, peerFlowInfo=FlowInfo(flowVersion=1, appName=<unknown>), receivedMessages=[], otherSideErrored=false, peerSinkSessionId=SessionId(toLong=-7881500851533551462), deduplicationSeed=R-7106756066069934968-4795262264991213571)}, sessionsToBeClosed=[], subFlowStack=[Initiating(flowClass=class net.corda.samples.obligation.flows.IOUSettleFlow, classToInitiateWith=class net.corda.samples.obligation.flows.IOUSettleFlow, flowInfo=FlowInfo(flowVersion=1, appName=<unknown>), subFlowVersion=CorDappFlow(platformVersion=11, corDappName=workflows-1.0, corDappHash=F8E3613207E5ABAEC38930FAA426F7BA91464AA72DAF3EFB74917A0BA71A146E), isEnabledTimedFlow=false), Inlined(flowClass=class net.corda.core.flows.CollectSignatureFlow, subFlowVersion=CoreFlow(platformVersion=11), isEnabledTimedFlow=false)], numberOfSuspends=6, numberOfCommits=7), flowState=Started(flowIORequest=Receive(sessions=[FlowSessionImpl(destination=O=Mock Company 3, L=London, C=GB, sourceSessionId=SessionId(toLong=7106756066069934968))]), frozenFiber=2D19A8927FC60D149A79A498C6F9E41D98715F082D0EEEE85210D3D62134377E), errorState=Clean, result=null, status=RUNNABLE, progressStep=Starting, flowIoRequest=Receive, compatible=true), isCheckpointUpdate=true)
    PersistDeduplicationFacts(deduplicationHandlers=[])
    CommitTransaction
    AcknowledgeMessages(deduplicationHandlers=[])
    ScheduleEvent(event=DoRemainingWork)
  Continuation: ProcessEvents
  Diff between previous and next state:
checkpoint.flowState.flowIORequest: 
    Send(sessionToMessage={FlowSessionImpl(destination=O=Mock Company 3, L=London, C=GB, sourceSessionId=SessionId(toLong=7106756066069934968))=5776F1072E3565A6C7C04A28DD4C9CC3AFEB61B3DDB7D47E09BCD2FB745D0B51})
    Receive(sessions=[FlowSessionImpl(destination=O=Mock Company 3, L=London, C=GB, sourceSessionId=SessionId(toLong=7106756066069934968))])
checkpoint.flowState.frozenFiber.hash: 
    187E2ED8E922E471623C50DBBA7B0481C71175668FED52C1BB05723D5F8E1AE7
    2D19A8927FC60D149A79A498C6F9E41D98715F082D0EEEE85210D3D62134377E
checkpoint.flowIoRequest: 
    Send
    Receive
checkpoint.checkpointState.numberOfSuspends: 
    5
    6
checkpoint.checkpointState.numberOfCommits: 
    6
    7
checkpoint.timestamp: 
    2023-01-31T07:18:19.282Z
    2023-01-31T07:18:19.284Z
numberOfCommits: 
    6
    7
isFlowResumed: 
    true
    false


 --- Transition of flow [7bf5b948-b54a-4fbc-824c-e81579076823] ---
  Timestamp: 2023-01-31T07:18:19.287Z
  Event: DoRemainingWork
  Actions: 
    
  Continuation: ProcessEvents
  Diff between previous and next state:
null

 --- Transition of flow [7bf5b948-b54a-4fbc-824c-e81579076823] ---
  Timestamp: 2023-01-31T07:18:19.304Z
  Event: DeliverSessionMessage(sessionMessage=ExistingSessionMessage(recipientSessionId=SessionId(toLong=7106756066069934968), payload=DataSessionMessage(payload=class net.corda.core.serialization.SerializedBytes)), deduplicationHandler=net.corda.testing.node.internal.MockNodeMessagingService$InMemoryDeduplicationHandler@7c7b7642, sender=O=Mock Company 3, L=London, C=GB)
  Actions: 
    ScheduleEvent(event=DoRemainingWork)
  Continuation: ProcessEvents
  Diff between previous and next state:
checkpoint.checkpointState.sessions.SessionId(toLong=7106756066069934968).receivedMessages.isEmpty: 
    true
    false
checkpoint.timestamp: 
    2023-01-31T07:18:19.286Z
    2023-01-31T07:18:19.304Z
pendingDeduplicationHandlers: 
    []
    [net.corda.testing.node.internal.MockNodeMessagingService$InMemoryDeduplicationHandler@7c7b7642]


 --- Transition of flow [7bf5b948-b54a-4fbc-824c-e81579076823] ---
  Timestamp: 2023-01-31T07:18:19.304Z
  Event: DoRemainingWork
  Actions: 
    CreateTransaction
  Continuation: Resume(result=class java.util.LinkedHashMap)
  Diff between previous and next state:
checkpoint.checkpointState.sessions.SessionId(toLong=7106756066069934968).receivedMessages.isEmpty: 
    false
    true
isFlowResumed: 
    false
    true


 --- Transition of flow [7bf5b948-b54a-4fbc-824c-e81579076823] ---
  Timestamp: 2023-01-31T07:18:19.304Z
  Event: LeaveSubFlow
  Actions: 
    
  Continuation: ProcessEvents
  Diff between previous and next state:
checkpoint.checkpointState.subFlowStack: 
    [Initiating(flowClass=class net.corda.samples.obligation.flows.IOUSettleFlow, classToInitiateWith=class net.corda.samples.obligation.flows.IOUSettleFlow, flowInfo=FlowInfo(flowVersion=1, appName=<unknown>), subFlowVersion=CorDappFlow(platformVersion=11, corDappName=workflows-1.0, corDappHash=F8E3613207E5ABAEC38930FAA426F7BA91464AA72DAF3EFB74917A0BA71A146E), isEnabledTimedFlow=false), Inlined(flowClass=class net.corda.core.flows.CollectSignatureFlow, subFlowVersion=CoreFlow(platformVersion=11), isEnabledTimedFlow=false)]
    [Initiating(flowClass=class net.corda.samples.obligation.flows.IOUSettleFlow, classToInitiateWith=class net.corda.samples.obligation.flows.IOUSettleFlow, flowInfo=FlowInfo(flowVersion=1, appName=<unknown>), subFlowVersion=CorDappFlow(platformVersion=11, corDappName=workflows-1.0, corDappHash=F8E3613207E5ABAEC38930FAA426F7BA91464AA72DAF3EFB74917A0BA71A146E), isEnabledTimedFlow=false)]


 --- Transition of flow [7bf5b948-b54a-4fbc-824c-e81579076823] ---
  Timestamp: 2023-01-31T07:18:19.305Z
  Event: EnterSubFlow(subFlowClass=class net.corda.core.flows.FinalityFlow, subFlowVersion=CoreFlow(platformVersion=11), isEnabledTimedFlow=false)
  Actions: 
    
  Continuation: ProcessEvents
  Diff between previous and next state:
checkpoint.checkpointState.subFlowStack: 
    [Initiating(flowClass=class net.corda.samples.obligation.flows.IOUSettleFlow, classToInitiateWith=class net.corda.samples.obligation.flows.IOUSettleFlow, flowInfo=FlowInfo(flowVersion=1, appName=<unknown>), subFlowVersion=CorDappFlow(platformVersion=11, corDappName=workflows-1.0, corDappHash=F8E3613207E5ABAEC38930FAA426F7BA91464AA72DAF3EFB74917A0BA71A146E), isEnabledTimedFlow=false)]
    [Initiating(flowClass=class net.corda.samples.obligation.flows.IOUSettleFlow, classToInitiateWith=class net.corda.samples.obligation.flows.IOUSettleFlow, flowInfo=FlowInfo(flowVersion=1, appName=<unknown>), subFlowVersion=CorDappFlow(platformVersion=11, corDappName=workflows-1.0, corDappHash=F8E3613207E5ABAEC38930FAA426F7BA91464AA72DAF3EFB74917A0BA71A146E), isEnabledTimedFlow=false), Initiating(flowClass=class net.corda.core.flows.FinalityFlow, classToInitiateWith=class net.corda.core.flows.FinalityFlow, flowInfo=FlowInfo(flowVersion=1, appName=corda-core-4.9), subFlowVersion=CoreFlow(platformVersion=11), isEnabledTimedFlow=false)]
checkpoint.timestamp: 
    2023-01-31T07:18:19.304Z
    2023-01-31T07:18:19.305Z


 --- Transition of flow [7bf5b948-b54a-4fbc-824c-e81579076823] ---
  Timestamp: 2023-01-31T07:18:19.498Z
  Event: LeaveSubFlow
  Actions: 
    
  Continuation: ProcessEvents
  Diff between previous and next state:
checkpoint.checkpointState.subFlowStack: 
    [Initiating(flowClass=class net.corda.samples.obligation.flows.IOUSettleFlow, classToInitiateWith=class net.corda.samples.obligation.flows.IOUSettleFlow, flowInfo=FlowInfo(flowVersion=1, appName=<unknown>), subFlowVersion=CorDappFlow(platformVersion=11, corDappName=workflows-1.0, corDappHash=F8E3613207E5ABAEC38930FAA426F7BA91464AA72DAF3EFB74917A0BA71A146E), isEnabledTimedFlow=false), Initiating(flowClass=class net.corda.core.flows.FinalityFlow, classToInitiateWith=class net.corda.core.flows.FinalityFlow, flowInfo=FlowInfo(flowVersion=1, appName=corda-core-4.9), subFlowVersion=CoreFlow(platformVersion=11), isEnabledTimedFlow=false)]
    [Initiating(flowClass=class net.corda.samples.obligation.flows.IOUSettleFlow, classToInitiateWith=class net.corda.samples.obligation.flows.IOUSettleFlow, flowInfo=FlowInfo(flowVersion=1, appName=<unknown>), subFlowVersion=CorDappFlow(platformVersion=11, corDappName=workflows-1.0, corDappHash=F8E3613207E5ABAEC38930FAA426F7BA91464AA72DAF3EFB74917A0BA71A146E), isEnabledTimedFlow=false)]
checkpoint.timestamp: 
    2023-01-31T07:18:19.305Z
    2023-01-31T07:18:19.498Z


 --- Transition of flow [7bf5b948-b54a-4fbc-824c-e81579076823] ---
  Timestamp: 2023-01-31T07:18:19.511Z
  Event: Error(exception=java.lang.IllegalArgumentException: Could not find Party for Anonymous(DL7NADKtqU5PmNXGD9KWJDFeD3KHgKi6ypBkpS9xb44xBz), rollback=true)
  Actions: 
    RollbackTransaction
    ScheduleEvent(event=DoRemainingWork)
  Continuation: ProcessEvents
  Diff between previous and next state:
checkpoint.errorState: 
    Clean
    Errored(errors=[FlowError(errorId=-1030127781405848252, exception=java.lang.IllegalArgumentException: Could not find Party for Anonymous(DL7NADKtqU5PmNXGD9KWJDFeD3KHgKi6ypBkpS9xb44xBz))], propagatedIndex=0, propagating=false)
checkpoint.timestamp: 
    2023-01-31T07:18:19.498Z
    2023-01-31T07:18:19.501Z
isFlowResumed: 
    true
    false


 --- Transition of flow [7bf5b948-b54a-4fbc-824c-e81579076823] ---
  Timestamp: 2023-01-31T07:18:19.514Z
  Event: DoRemainingWork
  Actions: 
    
  Continuation: ProcessEvents
  Diff between previous and next state:
null

 --- Transition of flow [7bf5b948-b54a-4fbc-824c-e81579076823] ---
  Timestamp: 2023-01-31T07:18:19.515Z
  Event: StartErrorPropagation
  Actions: 
    ScheduleEvent(event=DoRemainingWork)
  Continuation: ProcessEvents
  Diff between previous and next state:
checkpoint.errorState.propagating: 
    false
    true
checkpoint.timestamp: 
    2023-01-31T07:18:19.501Z
    2023-01-31T07:18:19.515Z
 {actor_id=Only For Testing, actor_owning_identity=O=Mock Company 1, L=London, C=GB, actor_store_id=TEST, fiber-id=10000026, flow-id=7bf5b948-b54a-4fbc-824c-e81579076823, invocation_id=a0b12bd2-1f3d-4173-941b-1db3cba99f9d, invocation_timestamp=2023-01-31T07:18:18.538Z, origin=Only For Testing, session_id=a0b12bd2-1f3d-4173-941b-1db3cba99f9d, session_timestamp=2023-01-31T07:18:18.538Z, thread-id=854, tx_id=05C00A07D836886589D1648346F3DFE14725CFEC3E8E68B19135B8905C73DF47}
[WARN ] 2023-01-31T07:18:19,544Z [Mock network] interceptors.DumpHistoryOnErrorInterceptor. - Flow [7bf5b948-b54a-4fbc-824c-e81579076823] error {actor_id=Only For Testing, actor_owning_identity=O=Mock Company 1, L=London, C=GB, actor_store_id=TEST, fiber-id=10000026, flow-id=7bf5b948-b54a-4fbc-824c-e81579076823, invocation_id=a0b12bd2-1f3d-4173-941b-1db3cba99f9d, invocation_timestamp=2023-01-31T07:18:18.538Z, origin=Only For Testing, session_id=a0b12bd2-1f3d-4173-941b-1db3cba99f9d, session_timestamp=2023-01-31T07:18:18.538Z, thread-id=854, tx_id=05C00A07D836886589D1648346F3DFE14725CFEC3E8E68B19135B8905C73DF47}
java.lang.IllegalArgumentException: Could not find Party for Anonymous(DL7NADKtqU5PmNXGD9KWJDFeD3KHgKi6ypBkpS9xb44xBz)
	at net.corda.core.identity.IdentityUtils.groupAbstractPartyByWellKnownParty(IdentityUtils.kt:47) ~[corda-core-4.9.jar:?]
	at net.corda.core.identity.IdentityUtils.groupAbstractPartyByWellKnownParty(IdentityUtils.kt:63) ~[corda-core-4.9.jar:?]
	at net.corda.core.flows.FinalityFlow.extractExternalParticipants(FinalityFlow.kt:252) ~[corda-core-4.9.jar:?]
	at net.corda.core.flows.FinalityFlow.call(FinalityFlow.kt:162) ~[corda-core-4.9.jar:?]
	at net.corda.core.flows.FinalityFlow.call(FinalityFlow.kt:43) ~[corda-core-4.9.jar:?]
	at net.corda.node.services.statemachine.FlowStateMachineImpl.subFlow(FlowStateMachineImpl.kt:420) ~[corda-node-4.9.jar:?]
	at net.corda.core.flows.FlowLogic.subFlow(FlowLogic.kt:409) ~[corda-core-4.9.jar:?]
	at net.corda.samples.obligation.flows.IOUSettleFlow.call(IOUSettleFlow.kt:116) ~[main/:?]
	at net.corda.samples.obligation.flows.IOUSettleFlow.call(IOUSettleFlow.kt:30) ~[main/:?]
	at net.corda.node.services.statemachine.FlowStateMachineImpl.run(FlowStateMachineImpl.kt:349) ~[corda-node-4.9.jar:?]
	at net.corda.node.services.statemachine.FlowStateMachineImpl.run(FlowStateMachineImpl.kt:71) ~[corda-node-4.9.jar:?]
	at co.paralleluniverse.fibers.Fiber.run1(Fiber.java:1092) ~[quasar-core-0.7.10.jar:0.7.10]
	at co.paralleluniverse.fibers.Fiber.exec(Fiber.java:788) ~[quasar-core-0.7.10.jar:0.7.10]
	at co.paralleluniverse.fibers.RunnableFiberTask.doExec(RunnableFiberTask.java:100) ~[quasar-core-0.7.10.jar:0.7.10]
	at co.paralleluniverse.fibers.RunnableFiberTask.run(RunnableFiberTask.java:91) ~[quasar-core-0.7.10.jar:0.7.10]
	at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511) ~[?:1.8.0_202]
	at java.util.concurrent.FutureTask.run(FutureTask.java:266) ~[?:1.8.0_202]
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.access$201(ScheduledThreadPoolExecutor.java:180) ~[?:1.8.0_202]
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.run(ScheduledThreadPoolExecutor.java:293) ~[?:1.8.0_202]
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149) ~[?:1.8.0_202]
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624) ~[?:1.8.0_202]
	at net.corda.node.utilities.AffinityExecutor$ServiceAffinityExecutor$1$thread$1.run(AffinityExecutor.kt:63) ~[corda-node-4.9.jar:?]
[WARN ] 2023-01-31T07:18:19,546Z [Mock network] statemachine.ActionExecutorImpl. - Propagating error {actor_id=Only For Testing, actor_owning_identity=O=Mock Company 1, L=London, C=GB, actor_store_id=TEST, fiber-id=10000026, flow-id=7bf5b948-b54a-4fbc-824c-e81579076823, invocation_id=a0b12bd2-1f3d-4173-941b-1db3cba99f9d, invocation_timestamp=2023-01-31T07:18:18.538Z, origin=Only For Testing, session_id=a0b12bd2-1f3d-4173-941b-1db3cba99f9d, session_timestamp=2023-01-31T07:18:18.538Z, thread-id=854, tx_id=05C00A07D836886589D1648346F3DFE14725CFEC3E8E68B19135B8905C73DF47}
[WARN ] 2023-01-31T07:18:19,640Z [Mock network] interceptors.DumpHistoryOnErrorInterceptor. - Flow [7bf5b948-b54a-4fbc-824c-e81579076823] errored, dumping all transitions:

 --- Transition of flow [7bf5b948-b54a-4fbc-824c-e81579076823] ---
  Timestamp: 2023-01-31T07:18:18.542Z
  Event: DoRemainingWork
  Actions: 
    CreateTransaction
    PersistCheckpoint(id=[7bf5b948-b54a-4fbc-824c-e81579076823], checkpoint=Checkpoint(checkpointState=CheckpointState(invocationContext=InvocationContext(origin=RPC(actor=Actor(id=Id(value=Only For Testing), serviceId=AuthServiceId(value=TEST), owningLegalIdentity=O=Mock Company 1, L=London, C=GB)), trace=Trace(invocationId=a0b12bd2-1f3d-4173-941b-1db3cba99f9d, timestamp: 2023-01-31T07:18:18.538Z, entityType: Invocation, sessionId=a0b12bd2-1f3d-4173-941b-1db3cba99f9d, timestamp: 2023-01-31T07:18:18.538Z, entityType: Session), actor=Actor(id=Id(value=Only For Testing), serviceId=AuthServiceId(value=TEST), owningLegalIdentity=O=Mock Company 1, L=London, C=GB), externalTrace=null, impersonatedActor=null, arguments=[], clientId=null), ourIdentity=O=Mock Company 1, L=London, C=GB, sessions={}, sessionsToBeClosed=[], subFlowStack=[Initiating(flowClass=class net.corda.samples.obligation.flows.IOUSettleFlow, classToInitiateWith=class net.corda.samples.obligation.flows.IOUSettleFlow, flowInfo=FlowInfo(flowVersion=1, appName=<unknown>), subFlowVersion=CorDappFlow(platformVersion=11, corDappName=workflows-1.0, corDappHash=F8E3613207E5ABAEC38930FAA426F7BA91464AA72DAF3EFB74917A0BA71A146E), isEnabledTimedFlow=false)], numberOfSuspends=0, numberOfCommits=1), flowState=Unstarted(flowStart=Explicit, frozenFlowLogic=FD74232121948A02A0494FD11C6D95AE7D9127AB382E747ECCDBAADB97BAFC2A), errorState=Clean, result=null, status=RUNNABLE, progressStep=null, flowIoRequest=null, compatible=true), isCheckpointUpdate=false)
    PersistDeduplicationFacts(deduplicationHandlers=[net.corda.node.internal.FlowStarterImpl$startFlow$startFlowEvent$1@27e77bee])
    CommitTransaction
    AcknowledgeMessages(deduplicationHandlers=[net.corda.node.internal.FlowStarterImpl$startFlow$startFlowEvent$1@27e77bee])
    SignalFlowHasStarted(flowId=[7bf5b948-b54a-4fbc-824c-e81579076823])
    CreateTransaction
  Continuation: Resume(result=null)
  Diff between previous and next state:
isAnyCheckpointPersisted: 
    false
    true
isFlowResumed: 
    false
    true
pendingDeduplicationHandlers: 
    [net.corda.node.internal.FlowStarterImpl$startFlow$startFlowEvent$1@27e77bee]
    []


 --- Transition of flow [7bf5b948-b54a-4fbc-824c-e81579076823] ---
  Timestamp: 2023-01-31T07:18:18.547Z
  Event: EnterSubFlow(subFlowClass=class net.corda.samples.obligation.accountUtil.NewKeyForAccount, subFlowVersion=CorDappFlow(platformVersion=11, corDappName=workflows-1.0, corDappHash=F8E3613207E5ABAEC38930FAA426F7BA91464AA72DAF3EFB74917A0BA71A146E), isEnabledTimedFlow=false)
  Actions: 
    
  Continuation: ProcessEvents
  Diff between previous and next state:
checkpoint.checkpointState.subFlowStack: 
    [Initiating(flowClass=class net.corda.samples.obligation.flows.IOUSettleFlow, classToInitiateWith=class net.corda.samples.obligation.flows.IOUSettleFlow, flowInfo=FlowInfo(flowVersion=1, appName=<unknown>), subFlowVersion=CorDappFlow(platformVersion=11, corDappName=workflows-1.0, corDappHash=F8E3613207E5ABAEC38930FAA426F7BA91464AA72DAF3EFB74917A0BA71A146E), isEnabledTimedFlow=false)]
    [Initiating(flowClass=class net.corda.samples.obligation.flows.IOUSettleFlow, classToInitiateWith=class net.corda.samples.obligation.flows.IOUSettleFlow, flowInfo=FlowInfo(flowVersion=1, appName=<unknown>), subFlowVersion=CorDappFlow(platformVersion=11, corDappName=workflows-1.0, corDappHash=F8E3613207E5ABAEC38930FAA426F7BA91464AA72DAF3EFB74917A0BA71A146E), isEnabledTimedFlow=false), Inlined(flowClass=class net.corda.samples.obligation.accountUtil.NewKeyForAccount, subFlowVersion=CorDappFlow(platformVersion=11, corDappName=workflows-1.0, corDappHash=F8E3613207E5ABAEC38930FAA426F7BA91464AA72DAF3EFB74917A0BA71A146E), isEnabledTimedFlow=false)]
checkpoint.timestamp: 
    2023-01-31T07:18:18.539Z
    2023-01-31T07:18:18.547Z


 --- Transition of flow [7bf5b948-b54a-4fbc-824c-e81579076823] ---
  Timestamp: 2023-01-31T07:18:18.551Z
  Event: LeaveSubFlow
  Actions: 
    
  Continuation: ProcessEvents
  Diff between previous and next state:
checkpoint.checkpointState.subFlowStack: 
    [Initiating(flowClass=class net.corda.samples.obligation.flows.IOUSettleFlow, classToInitiateWith=class net.corda.samples.obligation.flows.IOUSettleFlow, flowInfo=FlowInfo(flowVersion=1, appName=<unknown>), subFlowVersion=CorDappFlow(platformVersion=11, corDappName=workflows-1.0, corDappHash=F8E3613207E5ABAEC38930FAA426F7BA91464AA72DAF3EFB74917A0BA71A146E), isEnabledTimedFlow=false), Inlined(flowClass=class net.corda.samples.obligation.accountUtil.NewKeyForAccount, subFlowVersion=CorDappFlow(platformVersion=11, corDappName=workflows-1.0, corDappHash=F8E3613207E5ABAEC38930FAA426F7BA91464AA72DAF3EFB74917A0BA71A146E), isEnabledTimedFlow=false)]
    [Initiating(flowClass=class net.corda.samples.obligation.flows.IOUSettleFlow, classToInitiateWith=class net.corda.samples.obligation.flows.IOUSettleFlow, flowInfo=FlowInfo(flowVersion=1, appName=<unknown>), subFlowVersion=CorDappFlow(platformVersion=11, corDappName=workflows-1.0, corDappHash=F8E3613207E5ABAEC38930FAA426F7BA91464AA72DAF3EFB74917A0BA71A146E), isEnabledTimedFlow=false)]
checkpoint.timestamp: 
    2023-01-31T07:18:18.547Z
    2023-01-31T07:18:18.551Z


 --- Transition of flow [7bf5b948-b54a-4fbc-824c-e81579076823] ---
  Timestamp: 2023-01-31T07:18:18.558Z
  Event: EnterSubFlow(subFlowClass=class com.r3.corda.lib.accounts.workflows.flows.RequestKeyForAccount, subFlowVersion=CorDappFlow(platformVersion=11, corDappName=accounts-workflows-1.0, corDappHash=80555705CE83A631D1BDD61E9C14A7C2215BB67FAB1411547C4D4B3D66F8402E), isEnabledTimedFlow=false)
  Actions: 
    
  Continuation: ProcessEvents
  Diff between previous and next state:
checkpoint.checkpointState.subFlowStack: 
    [Initiating(flowClass=class net.corda.samples.obligation.flows.IOUSettleFlow, classToInitiateWith=class net.corda.samples.obligation.flows.IOUSettleFlow, flowInfo=FlowInfo(flowVersion=1, appName=<unknown>), subFlowVersion=CorDappFlow(platformVersion=11, corDappName=workflows-1.0, corDappHash=F8E3613207E5ABAEC38930FAA426F7BA91464AA72DAF3EFB74917A0BA71A146E), isEnabledTimedFlow=false)]
    [Initiating(flowClass=class net.corda.samples.obligation.flows.IOUSettleFlow, classToInitiateWith=class net.corda.samples.obligation.flows.IOUSettleFlow, flowInfo=FlowInfo(flowVersion=1, appName=<unknown>), subFlowVersion=CorDappFlow(platformVersion=11, corDappName=workflows-1.0, corDappHash=F8E3613207E5ABAEC38930FAA426F7BA91464AA72DAF3EFB74917A0BA71A146E), isEnabledTimedFlow=false), Initiating(flowClass=class com.r3.corda.lib.accounts.workflows.flows.RequestKeyForAccount, classToInitiateWith=class com.r3.corda.lib.accounts.workflows.flows.RequestKeyForAccount, flowInfo=FlowInfo(flowVersion=1, appName=accounts-workflows-1.0), subFlowVersion=CorDappFlow(platformVersion=11, corDappName=accounts-workflows-1.0, corDappHash=80555705CE83A631D1BDD61E9C14A7C2215BB67FAB1411547C4D4B3D66F8402E), isEnabledTimedFlow=false)]
checkpoint.timestamp: 
    2023-01-31T07:18:18.551Z
    2023-01-31T07:18:18.558Z


 --- Transition of flow [7bf5b948-b54a-4fbc-824c-e81579076823] ---
  Timestamp: 2023-01-31T07:18:18.558Z
  Event: InitiateFlow(destination=O=Mock Company 3, L=London, C=GB, wellKnownParty=O=Mock Company 3, L=London, C=GB)
  Actions: 
    AddSessionBinding(flowId=[7bf5b948-b54a-4fbc-824c-e81579076823], sessionId=SessionId(toLong=240453306151564151))
  Continuation: Resume(result=class net.corda.node.services.statemachine.FlowSessionImpl)
  Diff between previous and next state:
checkpoint.checkpointState.sessions.SessionId(toLong=240453306151564151): 
    null
    Uninitiated(destination=O=Mock Company 3, L=London, C=GB, initiatingSubFlow=Initiating(flowClass=class com.r3.corda.lib.accounts.workflows.flows.RequestKeyForAccount, classToInitiateWith=class com.r3.corda.lib.accounts.workflows.flows.RequestKeyForAccount, flowInfo=FlowInfo(flowVersion=1, appName=accounts-workflows-1.0), subFlowVersion=CorDappFlow(platformVersion=11, corDappName=accounts-workflows-1.0, corDappHash=80555705CE83A631D1BDD61E9C14A7C2215BB67FAB1411547C4D4B3D66F8402E), isEnabledTimedFlow=false), sourceSessionId=SessionId(toLong=240453306151564151), additionalEntropy=-460002818677610954)


 --- Transition of flow [7bf5b948-b54a-4fbc-824c-e81579076823] ---
  Timestamp: 2023-01-31T07:18:18.559Z
  Event: EnterSubFlow(subFlowClass=class com.r3.corda.lib.accounts.workflows.flows.RequestKeyForAccountFlow, subFlowVersion=CorDappFlow(platformVersion=11, corDappName=accounts-workflows-1.0, corDappHash=80555705CE83A631D1BDD61E9C14A7C2215BB67FAB1411547C4D4B3D66F8402E), isEnabledTimedFlow=false)
  Actions: 
    
  Continuation: ProcessEvents
  Diff between previous and next state:
checkpoint.checkpointState.subFlowStack: 
    [Initiating(flowClass=class net.corda.samples.obligation.flows.IOUSettleFlow, classToInitiateWith=class net.corda.samples.obligation.flows.IOUSettleFlow, flowInfo=FlowInfo(flowVersion=1, appName=<unknown>), subFlowVersion=CorDappFlow(platformVersion=11, corDappName=workflows-1.0, corDappHash=F8E3613207E5ABAEC38930FAA426F7BA91464AA72DAF3EFB74917A0BA71A146E), isEnabledTimedFlow=false), Initiating(flowClass=class com.r3.corda.lib.accounts.workflows.flows.RequestKeyForAccount, classToInitiateWith=class com.r3.corda.lib.accounts.workflows.flows.RequestKeyForAccount, flowInfo=FlowInfo(flowVersion=1, appName=accounts-workflows-1.0), subFlowVersion=CorDappFlow(platformVersion=11, corDappName=accounts-workflows-1.0, corDappHash=80555705CE83A631D1BDD61E9C14A7C2215BB67FAB1411547C4D4B3D66F8402E), isEnabledTimedFlow=false)]
    [Initiating(flowClass=class net.corda.samples.obligation.flows.IOUSettleFlow, classToInitiateWith=class net.corda.samples.obligation.flows.IOUSettleFlow, flowInfo=FlowInfo(flowVersion=1, appName=<unknown>), subFlowVersion=CorDappFlow(platformVersion=11, corDappName=workflows-1.0, corDappHash=F8E3613207E5ABAEC38930FAA426F7BA91464AA72DAF3EFB74917A0BA71A146E), isEnabledTimedFlow=false), Initiating(flowClass=class com.r3.corda.lib.accounts.workflows.flows.RequestKeyForAccount, classToInitiateWith=class com.r3.corda.lib.accounts.workflows.flows.RequestKeyForAccount, flowInfo=FlowInfo(flowVersion=1, appName=accounts-workflows-1.0), subFlowVersion=CorDappFlow(platformVersion=11, corDappName=accounts-workflows-1.0, corDappHash=80555705CE83A631D1BDD61E9C14A7C2215BB67FAB1411547C4D4B3D66F8402E), isEnabledTimedFlow=false), Inlined(flowClass=class com.r3.corda.lib.accounts.workflows.flows.RequestKeyForAccountFlow, subFlowVersion=CorDappFlow(platformVersion=11, corDappName=accounts-workflows-1.0, corDappHash=80555705CE83A631D1BDD61E9C14A7C2215BB67FAB1411547C4D4B3D66F8402E), isEnabledTimedFlow=false)]
checkpoint.timestamp: 
    2023-01-31T07:18:18.558Z
    2023-01-31T07:18:18.559Z


 --- Transition of flow [7bf5b948-b54a-4fbc-824c-e81579076823] ---
  Timestamp: 2023-01-31T07:18:18.567Z
  Event: Suspend(ioRequest=SendAndReceive({FlowSessionImpl(destination=O=Mock Company 3, L=London, C=GB, sourceSessionId=SessionId(toLong=240453306151564151))=FlowSessionImpl(destination=O=Mock Company 3, L=London, C=GB, sourceSessionId=SessionId(toLong=240453306151564151))=3CB2C2C1BE411AF8AF326D153BFEDFBBB3026AB4C77C235D181C07ADE637F092}, shouldRetrySend=false), maySkipCheckpoint=false, fiber=AAFDCE6B8E4FBFC98B9558671317E7251270A35C7DA145AFAE50098D85F35626, currentStep=Starting)
  Actions: 
    PersistCheckpoint(id=[7bf5b948-b54a-4fbc-824c-e81579076823], checkpoint=Checkpoint(checkpointState=CheckpointState(invocationContext=InvocationContext(origin=RPC(actor=Actor(id=Id(value=Only For Testing), serviceId=AuthServiceId(value=TEST), owningLegalIdentity=O=Mock Company 1, L=London, C=GB)), trace=Trace(invocationId=a0b12bd2-1f3d-4173-941b-1db3cba99f9d, timestamp: 2023-01-31T07:18:18.538Z, entityType: Invocation, sessionId=a0b12bd2-1f3d-4173-941b-1db3cba99f9d, timestamp: 2023-01-31T07:18:18.538Z, entityType: Session), actor=Actor(id=Id(value=Only For Testing), serviceId=AuthServiceId(value=TEST), owningLegalIdentity=O=Mock Company 1, L=London, C=GB), externalTrace=null, impersonatedActor=null, arguments=[], clientId=null), ourIdentity=O=Mock Company 1, L=London, C=GB, sessions={SessionId(toLong=240453306151564151)=Uninitiated(destination=O=Mock Company 3, L=London, C=GB, initiatingSubFlow=Initiating(flowClass=class com.r3.corda.lib.accounts.workflows.flows.RequestKeyForAccount, classToInitiateWith=class com.r3.corda.lib.accounts.workflows.flows.RequestKeyForAccount, flowInfo=FlowInfo(flowVersion=1, appName=accounts-workflows-1.0), subFlowVersion=CorDappFlow(platformVersion=11, corDappName=accounts-workflows-1.0, corDappHash=80555705CE83A631D1BDD61E9C14A7C2215BB67FAB1411547C4D4B3D66F8402E), isEnabledTimedFlow=false), sourceSessionId=SessionId(toLong=240453306151564151), additionalEntropy=-460002818677610954)}, sessionsToBeClosed=[], subFlowStack=[Initiating(flowClass=class net.corda.samples.obligation.flows.IOUSettleFlow, classToInitiateWith=class net.corda.samples.obligation.flows.IOUSettleFlow, flowInfo=FlowInfo(flowVersion=1, appName=<unknown>), subFlowVersion=CorDappFlow(platformVersion=11, corDappName=workflows-1.0, corDappHash=F8E3613207E5ABAEC38930FAA426F7BA91464AA72DAF3EFB74917A0BA71A146E), isEnabledTimedFlow=false), Initiating(flowClass=class com.r3.corda.lib.accounts.workflows.flows.RequestKeyForAccount, classToInitiateWith=class com.r3.corda.lib.accounts.workflows.flows.RequestKeyForAccount, flowInfo=FlowInfo(flowVersion=1, appName=accounts-workflows-1.0), subFlowVersion=CorDappFlow(platformVersion=11, corDappName=accounts-workflows-1.0, corDappHash=80555705CE83A631D1BDD61E9C14A7C2215BB67FAB1411547C4D4B3D66F8402E), isEnabledTimedFlow=false), Inlined(flowClass=class com.r3.corda.lib.accounts.workflows.flows.RequestKeyForAccountFlow, subFlowVersion=CorDappFlow(platformVersion=11, corDappName=accounts-workflows-1.0, corDappHash=80555705CE83A631D1BDD61E9C14A7C2215BB67FAB1411547C4D4B3D66F8402E), isEnabledTimedFlow=false)], numberOfSuspends=1, numberOfCommits=2), flowState=Started(flowIORequest=SendAndReceive({FlowSessionImpl(destination=O=Mock Company 3, L=London, C=GB, sourceSessionId=SessionId(toLong=240453306151564151))=FlowSessionImpl(destination=O=Mock Company 3, L=London, C=GB, sourceSessionId=SessionId(toLong=240453306151564151))=3CB2C2C1BE411AF8AF326D153BFEDFBBB3026AB4C77C235D181C07ADE637F092}, shouldRetrySend=false), frozenFiber=AAFDCE6B8E4FBFC98B9558671317E7251270A35C7DA145AFAE50098D85F35626), errorState=Clean, result=null, status=RUNNABLE, progressStep=Starting, flowIoRequest=SendAndReceive, compatible=true), isCheckpointUpdate=true)
    PersistDeduplicationFacts(deduplicationHandlers=[])
    CommitTransaction
    AcknowledgeMessages(deduplicationHandlers=[])
    ScheduleEvent(event=DoRemainingWork)
  Continuation: ProcessEvents
  Diff between previous and next state:
checkpoint.flowState: 
    Unstarted(flowStart=Explicit, frozenFlowLogic=FD74232121948A02A0494FD11C6D95AE7D9127AB382E747ECCDBAADB97BAFC2A)
    Started(flowIORequest=SendAndReceive({FlowSessionImpl(destination=O=Mock Company 3, L=London, C=GB, sourceSessionId=SessionId(toLong=240453306151564151))=FlowSessionImpl(destination=O=Mock Company 3, L=London, C=GB, sourceSessionId=SessionId(toLong=240453306151564151))=3CB2C2C1BE411AF8AF326D153BFEDFBBB3026AB4C77C235D181C07ADE637F092}, shouldRetrySend=false), frozenFiber=AAFDCE6B8E4FBFC98B9558671317E7251270A35C7DA145AFAE50098D85F35626)
checkpoint.flowIoRequest: 
    null
    SendAndReceive
checkpoint.checkpointState.numberOfSuspends: 
    0
    1
checkpoint.checkpointState.numberOfCommits: 
    1
    2
checkpoint.progressStep: 
    null
    Starting
checkpoint.timestamp: 
    2023-01-31T07:18:18.559Z
    2023-01-31T07:18:18.565Z
numberOfCommits: 
    0
    2
isFlowResumed: 
    true
    false


 --- Transition of flow [7bf5b948-b54a-4fbc-824c-e81579076823] ---
  Timestamp: 2023-01-31T07:18:18.568Z
  Event: DoRemainingWork
  Actions: 
    SendMultiple(sendInitial=[SendInitial(destination=O=Mock Company 3, L=London, C=GB, initialise=InitialSessionMessage(initiatorSessionId=SessionId(toLong=240453306151564151), initiationEntropy=-460002818677610954, initiatorFlowClassName=com.r3.corda.lib.accounts.workflows.flows.RequestKeyForAccount, appName=accounts-workflows-1.0, firstPayload=class net.corda.core.serialization.SerializedBytes), deduplicationId=SenderDeduplicationId(deduplicationId=DeduplicationId(toString=N-R-240453306151564151--460002818677610954-1-0), senderUUID=3ae20ed2-b752-4131-be00-8b87ba4c6253))], sendExisting=[])
  Continuation: ProcessEvents
  Diff between previous and next state:
checkpoint.flowState.flowIORequest: 
    SendAndReceive({FlowSessionImpl(destination=O=Mock Company 3, L=London, C=GB, sourceSessionId=SessionId(toLong=240453306151564151))=FlowSessionImpl(destination=O=Mock Company 3, L=London, C=GB, sourceSessionId=SessionId(toLong=240453306151564151))=3CB2C2C1BE411AF8AF326D153BFEDFBBB3026AB4C77C235D181C07ADE637F092}, shouldRetrySend=false)
    Receive(sessions=[FlowSessionImpl(destination=O=Mock Company 3, L=London, C=GB, sourceSessionId=SessionId(toLong=240453306151564151))])
checkpoint.checkpointState.sessions.SessionId(toLong=240453306151564151): 
    Uninitiated(destination=O=Mock Company 3, L=London, C=GB, initiatingSubFlow=Initiating(flowClass=class com.r3.corda.lib.accounts.workflows.flows.RequestKeyForAccount, classToInitiateWith=class com.r3.corda.lib.accounts.workflows.flows.RequestKeyForAccount, flowInfo=FlowInfo(flowVersion=1, appName=accounts-workflows-1.0), subFlowVersion=CorDappFlow(platformVersion=11, corDappName=accounts-workflows-1.0, corDappHash=80555705CE83A631D1BDD61E9C14A7C2215BB67FAB1411547C4D4B3D66F8402E), isEnabledTimedFlow=false), sourceSessionId=SessionId(toLong=240453306151564151), additionalEntropy=-460002818677610954)
    Initiating(bufferedMessages=[], rejectionError=null, deduplicationSeed=R-240453306151564151--460002818677610954)
checkpoint.timestamp: 
    2023-01-31T07:18:18.565Z
    2023-01-31T07:18:18.567Z


 --- Transition of flow [7bf5b948-b54a-4fbc-824c-e81579076823] ---
  Timestamp: 2023-01-31T07:18:18.593Z
  Event: DeliverSessionMessage(sessionMessage=ExistingSessionMessage(recipientSessionId=SessionId(toLong=240453306151564151), payload=ConfirmSessionMessage(initiatedSessionId=SessionId(toLong=1422336125546696269), initiatedFlowInfo=FlowInfo(flowVersion=1, appName=accounts-workflows-1.0))), deduplicationHandler=net.corda.testing.node.internal.MockNodeMessagingService$InMemoryDeduplicationHandler@352b5d54, sender=O=Mock Company 3, L=London, C=GB)
  Actions: 
    ScheduleEvent(event=DoRemainingWork)
  Continuation: ProcessEvents
  Diff between previous and next state:
checkpoint.checkpointState.sessions.SessionId(toLong=240453306151564151): 
    Initiating(bufferedMessages=[], rejectionError=null, deduplicationSeed=R-240453306151564151--460002818677610954)
    Initiated(peerParty=O=Mock Company 3, L=London, C=GB, peerFlowInfo=FlowInfo(flowVersion=1, appName=accounts-workflows-1.0), receivedMessages=[], otherSideErrored=false, peerSinkSessionId=SessionId(toLong=1422336125546696269), deduplicationSeed=R-240453306151564151--460002818677610954)
checkpoint.timestamp: 
    2023-01-31T07:18:18.567Z
    2023-01-31T07:18:18.593Z
pendingDeduplicationHandlers: 
    []
    [net.corda.testing.node.internal.MockNodeMessagingService$InMemoryDeduplicationHandler@352b5d54]


 --- Transition of flow [7bf5b948-b54a-4fbc-824c-e81579076823] ---
  Timestamp: 2023-01-31T07:18:18.593Z
  Event: DoRemainingWork
  Actions: 
    
  Continuation: ProcessEvents
  Diff between previous and next state:
null

 --- Transition of flow [7bf5b948-b54a-4fbc-824c-e81579076823] ---
  Timestamp: 2023-01-31T07:18:18.595Z
  Event: DeliverSessionMessage(sessionMessage=ExistingSessionMessage(recipientSessionId=SessionId(toLong=240453306151564151), payload=DataSessionMessage(payload=class net.corda.core.serialization.SerializedBytes)), deduplicationHandler=net.corda.testing.node.internal.MockNodeMessagingService$InMemoryDeduplicationHandler@3617d7e7, sender=O=Mock Company 3, L=London, C=GB)
  Actions: 
    ScheduleEvent(event=DoRemainingWork)
  Continuation: ProcessEvents
  Diff between previous and next state:
checkpoint.checkpointState.sessions.SessionId(toLong=240453306151564151).receivedMessages.isEmpty: 
    true
    false
checkpoint.timestamp: 
    2023-01-31T07:18:18.593Z
    2023-01-31T07:18:18.595Z
pendingDeduplicationHandlers: 
    [net.corda.testing.node.internal.MockNodeMessagingService$InMemoryDeduplicationHandler@352b5d54]
    [net.corda.testing.node.internal.MockNodeMessagingService$InMemoryDeduplicationHandler@352b5d54, net.corda.testing.node.internal.MockNodeMessagingService$InMemoryDeduplicationHandler@3617d7e7]


 --- Transition of flow [7bf5b948-b54a-4fbc-824c-e81579076823] ---
  Timestamp: 2023-01-31T07:18:18.595Z
  Event: DoRemainingWork
  Actions: 
    CreateTransaction
  Continuation: Resume(result=class java.util.LinkedHashMap)
  Diff between previous and next state:
checkpoint.checkpointState.sessions.SessionId(toLong=240453306151564151).receivedMessages.isEmpty: 
    false
    true
isFlowResumed: 
    false
    true


 --- Transition of flow [7bf5b948-b54a-4fbc-824c-e81579076823] ---
  Timestamp: 2023-01-31T07:18:18.596Z
  Event: EnterSubFlow(subFlowClass=class com.r3.corda.lib.ci.workflows.RequestKeyFlow, subFlowVersion=CoreFlow(platformVersion=11), isEnabledTimedFlow=false)
  Actions: 
    
  Continuation: ProcessEvents
  Diff between previous and next state:
checkpoint.checkpointState.subFlowStack: 
    [Initiating(flowClass=class net.corda.samples.obligation.flows.IOUSettleFlow, classToInitiateWith=class net.corda.samples.obligation.flows.IOUSettleFlow, flowInfo=FlowInfo(flowVersion=1, appName=<unknown>), subFlowVersion=CorDappFlow(platformVersion=11, corDappName=workflows-1.0, corDappHash=F8E3613207E5ABAEC38930FAA426F7BA91464AA72DAF3EFB74917A0BA71A146E), isEnabledTimedFlow=false), Initiating(flowClass=class com.r3.corda.lib.accounts.workflows.flows.RequestKeyForAccount, classToInitiateWith=class com.r3.corda.lib.accounts.workflows.flows.RequestKeyForAccount, flowInfo=FlowInfo(flowVersion=1, appName=accounts-workflows-1.0), subFlowVersion=CorDappFlow(platformVersion=11, corDappName=accounts-workflows-1.0, corDappHash=80555705CE83A631D1BDD61E9C14A7C2215BB67FAB1411547C4D4B3D66F8402E), isEnabledTimedFlow=false), Inlined(flowClass=class com.r3.corda.lib.accounts.workflows.flows.RequestKeyForAccountFlow, subFlowVersion=CorDappFlow(platformVersion=11, corDappName=accounts-workflows-1.0, corDappHash=80555705CE83A631D1BDD61E9C14A7C2215BB67FAB1411547C4D4B3D66F8402E), isEnabledTimedFlow=false)]
    [Initiating(flowClass=class net.corda.samples.obligation.flows.IOUSettleFlow, classToInitiateWith=class net.corda.samples.obligation.flows.IOUSettleFlow, flowInfo=FlowInfo(flowVersion=1, appName=<unknown>), subFlowVersion=CorDappFlow(platformVersion=11, corDappName=workflows-1.0, corDappHash=F8E3613207E5ABAEC38930FAA426F7BA91464AA72DAF3EFB74917A0BA71A146E), isEnabledTimedFlow=false), Initiating(flowClass=class com.r3.corda.lib.accounts.workflows.flows.RequestKeyForAccount, classToInitiateWith=class com.r3.corda.lib.accounts.workflows.flows.RequestKeyForAccount, flowInfo=FlowInfo(flowVersion=1, appName=accounts-workflows-1.0), subFlowVersion=CorDappFlow(platformVersion=11, corDappName=accounts-workflows-1.0, corDappHash=80555705CE83A631D1BDD61E9C14A7C2215BB67FAB1411547C4D4B3D66F8402E), isEnabledTimedFlow=false), Inlined(flowClass=class com.r3.corda.lib.accounts.workflows.flows.RequestKeyForAccountFlow, subFlowVersion=CorDappFlow(platformVersion=11, corDappName=accounts-workflows-1.0, corDappHash=80555705CE83A631D1BDD61E9C14A7C2215BB67FAB1411547C4D4B3D66F8402E), isEnabledTimedFlow=false), Inlined(flowClass=class com.r3.corda.lib.ci.workflows.RequestKeyFlow, subFlowVersion=CoreFlow(platformVersion=11), isEnabledTimedFlow=false)]
checkpoint.timestamp: 
    2023-01-31T07:18:18.595Z
    2023-01-31T07:18:18.596Z


 --- Transition of flow [7bf5b948-b54a-4fbc-824c-e81579076823] ---
  Timestamp: 2023-01-31T07:18:18.601Z
  Event: Suspend(ioRequest=SendAndReceive({FlowSessionImpl(destination=O=Mock Company 3, L=London, C=GB, sourceSessionId=SessionId(toLong=240453306151564151))=FlowSessionImpl(destination=O=Mock Company 3, L=London, C=GB, sourceSessionId=SessionId(toLong=240453306151564151))=DAED3DEC4C6F645594065B43AE197341A2B7AF80B1D2A7F51B1936B3B5D83E28}, shouldRetrySend=false), maySkipCheckpoint=false, fiber=79B8C386AD8B6BEEC996C020B21FE3FEED4CAFD9DC6F07F9024559B87599979C, currentStep=Starting)
  Actions: 
    PersistCheckpoint(id=[7bf5b948-b54a-4fbc-824c-e81579076823], checkpoint=Checkpoint(checkpointState=CheckpointState(invocationContext=InvocationContext(origin=RPC(actor=Actor(id=Id(value=Only For Testing), serviceId=AuthServiceId(value=TEST), owningLegalIdentity=O=Mock Company 1, L=London, C=GB)), trace=Trace(invocationId=a0b12bd2-1f3d-4173-941b-1db3cba99f9d, timestamp: 2023-01-31T07:18:18.538Z, entityType: Invocation, sessionId=a0b12bd2-1f3d-4173-941b-1db3cba99f9d, timestamp: 2023-01-31T07:18:18.538Z, entityType: Session), actor=Actor(id=Id(value=Only For Testing), serviceId=AuthServiceId(value=TEST), owningLegalIdentity=O=Mock Company 1, L=London, C=GB), externalTrace=null, impersonatedActor=null, arguments=[], clientId=null), ourIdentity=O=Mock Company 1, L=London, C=GB, sessions={SessionId(toLong=240453306151564151)=Initiated(peerParty=O=Mock Company 3, L=London, C=GB, peerFlowInfo=FlowInfo(flowVersion=1, appName=accounts-workflows-1.0), receivedMessages=[], otherSideErrored=false, peerSinkSessionId=SessionId(toLong=1422336125546696269), deduplicationSeed=R-240453306151564151--460002818677610954)}, sessionsToBeClosed=[], subFlowStack=[Initiating(flowClass=class net.corda.samples.obligation.flows.IOUSettleFlow, classToInitiateWith=class net.corda.samples.obligation.flows.IOUSettleFlow, flowInfo=FlowInfo(flowVersion=1, appName=<unknown>), subFlowVersion=CorDappFlow(platformVersion=11, corDappName=workflows-1.0, corDappHash=F8E3613207E5ABAEC38930FAA426F7BA91464AA72DAF3EFB74917A0BA71A146E), isEnabledTimedFlow=false), Initiating(flowClass=class com.r3.corda.lib.accounts.workflows.flows.RequestKeyForAccount, classToInitiateWith=class com.r3.corda.lib.accounts.workflows.flows.RequestKeyForAccount, flowInfo=FlowInfo(flowVersion=1, appName=accounts-workflows-1.0), subFlowVersion=CorDappFlow(platformVersion=11, corDappName=accounts-workflows-1.0, corDappHash=80555705CE83A631D1BDD61E9C14A7C2215BB67FAB1411547C4D4B3D66F8402E), isEnabledTimedFlow=false), Inlined(flowClass=class com.r3.corda.lib.accounts.workflows.flows.RequestKeyForAccountFlow, subFlowVersion=CorDappFlow(platformVersion=11, corDappName=accounts-workflows-1.0, corDappHash=80555705CE83A631D1BDD61E9C14A7C2215BB67FAB1411547C4D4B3D66F8402E), isEnabledTimedFlow=false), Inlined(flowClass=class com.r3.corda.lib.ci.workflows.RequestKeyFlow, subFlowVersion=CoreFlow(platformVersion=11), isEnabledTimedFlow=false)], numberOfSuspends=2, numberOfCommits=3), flowState=Started(flowIORequest=SendAndReceive({FlowSessionImpl(destination=O=Mock Company 3, L=London, C=GB, sourceSessionId=SessionId(toLong=240453306151564151))=FlowSessionImpl(destination=O=Mock Company 3, L=London, C=GB, sourceSessionId=SessionId(toLong=240453306151564151))=DAED3DEC4C6F645594065B43AE197341A2B7AF80B1D2A7F51B1936B3B5D83E28}, shouldRetrySend=false), frozenFiber=79B8C386AD8B6BEEC996C020B21FE3FEED4CAFD9DC6F07F9024559B87599979C), errorState=Clean, result=null, status=RUNNABLE, progressStep=Starting, flowIoRequest=SendAndReceive, compatible=true), isCheckpointUpdate=true)
    PersistDeduplicationFacts(deduplicationHandlers=[net.corda.testing.node.internal.MockNodeMessagingService$InMemoryDeduplicationHandler@352b5d54, net.corda.testing.node.internal.MockNodeMessagingService$InMemoryDeduplicationHandler@3617d7e7])
    CommitTransaction
    AcknowledgeMessages(deduplicationHandlers=[net.corda.testing.node.internal.MockNodeMessagingService$InMemoryDeduplicationHandler@352b5d54, net.corda.testing.node.internal.MockNodeMessagingService$InMemoryDeduplicationHandler@3617d7e7])
    ScheduleEvent(event=DoRemainingWork)
  Continuation: ProcessEvents
  Diff between previous and next state:
checkpoint.flowState.flowIORequest: 
    Receive(sessions=[FlowSessionImpl(destination=O=Mock Company 3, L=London, C=GB, sourceSessionId=SessionId(toLong=240453306151564151))])
    SendAndReceive({FlowSessionImpl(destination=O=Mock Company 3, L=London, C=GB, sourceSessionId=SessionId(toLong=240453306151564151))=FlowSessionImpl(destination=O=Mock Company 3, L=London, C=GB, sourceSessionId=SessionId(toLong=240453306151564151))=DAED3DEC4C6F645594065B43AE197341A2B7AF80B1D2A7F51B1936B3B5D83E28}, shouldRetrySend=false)
checkpoint.flowState.frozenFiber.hash: 
    AAFDCE6B8E4FBFC98B9558671317E7251270A35C7DA145AFAE50098D85F35626
    79B8C386AD8B6BEEC996C020B21FE3FEED4CAFD9DC6F07F9024559B87599979C
checkpoint.checkpointState.numberOfSuspends: 
    1
    2
checkpoint.checkpointState.numberOfCommits: 
    2
    3
checkpoint.timestamp: 
    2023-01-31T07:18:18.596Z
    2023-01-31T07:18:18.598Z
numberOfCommits: 
    2
    3
isFlowResumed: 
    true
    false
pendingDeduplicationHandlers: 
    [net.corda.testing.node.internal.MockNodeMessagingService$InMemoryDeduplicationHandler@352b5d54, net.corda.testing.node.internal.MockNodeMessagingService$InMemoryDeduplicationHandler@3617d7e7]
    []


 --- Transition of flow [7bf5b948-b54a-4fbc-824c-e81579076823] ---
  Timestamp: 2023-01-31T07:18:18.601Z
  Event: DoRemainingWork
  Actions: 
    SendMultiple(sendInitial=[], sendExisting=[SendExisting(peerParty=O=Mock Company 3, L=London, C=GB, message=ExistingSessionMessage(recipientSessionId=SessionId(toLong=1422336125546696269), payload=DataSessionMessage(payload=class net.corda.core.serialization.SerializedBytes)), deduplicationId=SenderDeduplicationId(deduplicationId=DeduplicationId(toString=N-R-240453306151564151--460002818677610954-2-0), senderUUID=3ae20ed2-b752-4131-be00-8b87ba4c6253))])
  Continuation: ProcessEvents
  Diff between previous and next state:
checkpoint.flowState.flowIORequest: 
    SendAndReceive({FlowSessionImpl(destination=O=Mock Company 3, L=London, C=GB, sourceSessionId=SessionId(toLong=240453306151564151))=FlowSessionImpl(destination=O=Mock Company 3, L=London, C=GB, sourceSessionId=SessionId(toLong=240453306151564151))=DAED3DEC4C6F645594065B43AE197341A2B7AF80B1D2A7F51B1936B3B5D83E28}, shouldRetrySend=false)
    Receive(sessions=[FlowSessionImpl(destination=O=Mock Company 3, L=London, C=GB, sourceSessionId=SessionId(toLong=240453306151564151))])
checkpoint.timestamp: 
    2023-01-31T07:18:18.598Z
    2023-01-31T07:18:18.601Z


 --- Transition of flow [7bf5b948-b54a-4fbc-824c-e81579076823] ---
  Timestamp: 2023-01-31T07:18:18.618Z
  Event: DeliverSessionMessage(sessionMessage=ExistingSessionMessage(recipientSessionId=SessionId(toLong=240453306151564151), payload=DataSessionMessage(payload=class net.corda.core.serialization.SerializedBytes)), deduplicationHandler=net.corda.testing.node.internal.MockNodeMessagingService$InMemoryDeduplicationHandler@64e0bd34, sender=O=Mock Company 3, L=London, C=GB)
  Actions: 
    ScheduleEvent(event=DoRemainingWork)
  Continuation: ProcessEvents
  Diff between previous and next state:
checkpoint.checkpointState.sessions.SessionId(toLong=240453306151564151).receivedMessages.isEmpty: 
    true
    false
checkpoint.timestamp: 
    2023-01-31T07:18:18.601Z
    2023-01-31T07:18:18.618Z
pendingDeduplicationHandlers: 
    []
    [net.corda.testing.node.internal.MockNodeMessagingService$InMemoryDeduplicationHandler@64e0bd34]


 --- Transition of flow [7bf5b948-b54a-4fbc-824c-e81579076823] ---
  Timestamp: 2023-01-31T07:18:18.618Z
  Event: DoRemainingWork
  Actions: 
    CreateTransaction
  Continuation: Resume(result=class java.util.LinkedHashMap)
  Diff between previous and next state:
checkpoint.checkpointState.sessions.SessionId(toLong=240453306151564151).receivedMessages.isEmpty: 
    false
    true
isFlowResumed: 
    false
    true


 --- Transition of flow [7bf5b948-b54a-4fbc-824c-e81579076823] ---
  Timestamp: 2023-01-31T07:18:18.621Z
  Event: LeaveSubFlow
  Actions: 
    
  Continuation: ProcessEvents
  Diff between previous and next state:
checkpoint.checkpointState.subFlowStack: 
    [Initiating(flowClass=class net.corda.samples.obligation.flows.IOUSettleFlow, classToInitiateWith=class net.corda.samples.obligation.flows.IOUSettleFlow, flowInfo=FlowInfo(flowVersion=1, appName=<unknown>), subFlowVersion=CorDappFlow(platformVersion=11, corDappName=workflows-1.0, corDappHash=F8E3613207E5ABAEC38930FAA426F7BA91464AA72DAF3EFB74917A0BA71A146E), isEnabledTimedFlow=false), Initiating(flowClass=class com.r3.corda.lib.accounts.workflows.flows.RequestKeyForAccount, classToInitiateWith=class com.r3.corda.lib.accounts.workflows.flows.RequestKeyForAccount, flowInfo=FlowInfo(flowVersion=1, appName=accounts-workflows-1.0), subFlowVersion=CorDappFlow(platformVersion=11, corDappName=accounts-workflows-1.0, corDappHash=80555705CE83A631D1BDD61E9C14A7C2215BB67FAB1411547C4D4B3D66F8402E), isEnabledTimedFlow=false), Inlined(flowClass=class com.r3.corda.lib.accounts.workflows.flows.RequestKeyForAccountFlow, subFlowVersion=CorDappFlow(platformVersion=11, corDappName=accounts-workflows-1.0, corDappHash=80555705CE83A631D1BDD61E9C14A7C2215BB67FAB1411547C4D4B3D66F8402E), isEnabledTimedFlow=false), Inlined(flowClass=class com.r3.corda.lib.ci.workflows.RequestKeyFlow, subFlowVersion=CoreFlow(platformVersion=11), isEnabledTimedFlow=false)]
    [Initiating(flowClass=class net.corda.samples.obligation.flows.IOUSettleFlow, classToInitiateWith=class net.corda.samples.obligation.flows.IOUSettleFlow, flowInfo=FlowInfo(flowVersion=1, appName=<unknown>), subFlowVersion=CorDappFlow(platformVersion=11, corDappName=workflows-1.0, corDappHash=F8E3613207E5ABAEC38930FAA426F7BA91464AA72DAF3EFB74917A0BA71A146E), isEnabledTimedFlow=false), Initiating(flowClass=class com.r3.corda.lib.accounts.workflows.flows.RequestKeyForAccount, classToInitiateWith=class com.r3.corda.lib.accounts.workflows.flows.RequestKeyForAccount, flowInfo=FlowInfo(flowVersion=1, appName=accounts-workflows-1.0), subFlowVersion=CorDappFlow(platformVersion=11, corDappName=accounts-workflows-1.0, corDappHash=80555705CE83A631D1BDD61E9C14A7C2215BB67FAB1411547C4D4B3D66F8402E), isEnabledTimedFlow=false), Inlined(flowClass=class com.r3.corda.lib.accounts.workflows.flows.RequestKeyForAccountFlow, subFlowVersion=CorDappFlow(platformVersion=11, corDappName=accounts-workflows-1.0, corDappHash=80555705CE83A631D1BDD61E9C14A7C2215BB67FAB1411547C4D4B3D66F8402E), isEnabledTimedFlow=false)]
checkpoint.timestamp: 
    2023-01-31T07:18:18.618Z
    2023-01-31T07:18:18.621Z


 --- Transition of flow [7bf5b948-b54a-4fbc-824c-e81579076823] ---
  Timestamp: 2023-01-31T07:18:18.621Z
  Event: LeaveSubFlow
  Actions: 
    
  Continuation: ProcessEvents
  Diff between previous and next state:
checkpoint.checkpointState.subFlowStack: 
    [Initiating(flowClass=class net.corda.samples.obligation.flows.IOUSettleFlow, classToInitiateWith=class net.corda.samples.obligation.flows.IOUSettleFlow, flowInfo=FlowInfo(flowVersion=1, appName=<unknown>), subFlowVersion=CorDappFlow(platformVersion=11, corDappName=workflows-1.0, corDappHash=F8E3613207E5ABAEC38930FAA426F7BA91464AA72DAF3EFB74917A0BA71A146E), isEnabledTimedFlow=false), Initiating(flowClass=class com.r3.corda.lib.accounts.workflows.flows.RequestKeyForAccount, classToInitiateWith=class com.r3.corda.lib.accounts.workflows.flows.RequestKeyForAccount, flowInfo=FlowInfo(flowVersion=1, appName=accounts-workflows-1.0), subFlowVersion=CorDappFlow(platformVersion=11, corDappName=accounts-workflows-1.0, corDappHash=80555705CE83A631D1BDD61E9C14A7C2215BB67FAB1411547C4D4B3D66F8402E), isEnabledTimedFlow=false), Inlined(flowClass=class com.r3.corda.lib.accounts.workflows.flows.RequestKeyForAccountFlow, subFlowVersion=CorDappFlow(platformVersion=11, corDappName=accounts-workflows-1.0, corDappHash=80555705CE83A631D1BDD61E9C14A7C2215BB67FAB1411547C4D4B3D66F8402E), isEnabledTimedFlow=false)]
    [Initiating(flowClass=class net.corda.samples.obligation.flows.IOUSettleFlow, classToInitiateWith=class net.corda.samples.obligation.flows.IOUSettleFlow, flowInfo=FlowInfo(flowVersion=1, appName=<unknown>), subFlowVersion=CorDappFlow(platformVersion=11, corDappName=workflows-1.0, corDappHash=F8E3613207E5ABAEC38930FAA426F7BA91464AA72DAF3EFB74917A0BA71A146E), isEnabledTimedFlow=false), Initiating(flowClass=class com.r3.corda.lib.accounts.workflows.flows.RequestKeyForAccount, classToInitiateWith=class com.r3.corda.lib.accounts.workflows.flows.RequestKeyForAccount, flowInfo=FlowInfo(flowVersion=1, appName=accounts-workflows-1.0), subFlowVersion=CorDappFlow(platformVersion=11, corDappName=accounts-workflows-1.0, corDappHash=80555705CE83A631D1BDD61E9C14A7C2215BB67FAB1411547C4D4B3D66F8402E), isEnabledTimedFlow=false)]


 --- Transition of flow [7bf5b948-b54a-4fbc-824c-e81579076823] ---
  Timestamp: 2023-01-31T07:18:18.621Z
  Event: LeaveSubFlow
  Actions: 
    
  Continuation: ProcessEvents
  Diff between previous and next state:
checkpoint.checkpointState.subFlowStack: 
    [Initiating(flowClass=class net.corda.samples.obligation.flows.IOUSettleFlow, classToInitiateWith=class net.corda.samples.obligation.flows.IOUSettleFlow, flowInfo=FlowInfo(flowVersion=1, appName=<unknown>), subFlowVersion=CorDappFlow(platformVersion=11, corDappName=workflows-1.0, corDappHash=F8E3613207E5ABAEC38930FAA426F7BA91464AA72DAF3EFB74917A0BA71A146E), isEnabledTimedFlow=false), Initiating(flowClass=class com.r3.corda.lib.accounts.workflows.flows.RequestKeyForAccount, classToInitiateWith=class com.r3.corda.lib.accounts.workflows.flows.RequestKeyForAccount, flowInfo=FlowInfo(flowVersion=1, appName=accounts-workflows-1.0), subFlowVersion=CorDappFlow(platformVersion=11, corDappName=accounts-workflows-1.0, corDappHash=80555705CE83A631D1BDD61E9C14A7C2215BB67FAB1411547C4D4B3D66F8402E), isEnabledTimedFlow=false)]
    [Initiating(flowClass=class net.corda.samples.obligation.flows.IOUSettleFlow, classToInitiateWith=class net.corda.samples.obligation.flows.IOUSettleFlow, flowInfo=FlowInfo(flowVersion=1, appName=<unknown>), subFlowVersion=CorDappFlow(platformVersion=11, corDappName=workflows-1.0, corDappHash=F8E3613207E5ABAEC38930FAA426F7BA91464AA72DAF3EFB74917A0BA71A146E), isEnabledTimedFlow=false)]


 --- Transition of flow [7bf5b948-b54a-4fbc-824c-e81579076823] ---
  Timestamp: 2023-01-31T07:18:19.068Z
  Event: InitiateFlow(destination=O=Mock Company 3, L=London, C=GB, wellKnownParty=O=Mock Company 3, L=London, C=GB)
  Actions: 
    AddSessionBinding(flowId=[7bf5b948-b54a-4fbc-824c-e81579076823], sessionId=SessionId(toLong=7106756066069934968))
  Continuation: Resume(result=class net.corda.node.services.statemachine.FlowSessionImpl)
  Diff between previous and next state:
checkpoint.checkpointState.sessions.SessionId(toLong=7106756066069934968): 
    null
    Uninitiated(destination=O=Mock Company 3, L=London, C=GB, initiatingSubFlow=Initiating(flowClass=class net.corda.samples.obligation.flows.IOUSettleFlow, classToInitiateWith=class net.corda.samples.obligation.flows.IOUSettleFlow, flowInfo=FlowInfo(flowVersion=1, appName=<unknown>), subFlowVersion=CorDappFlow(platformVersion=11, corDappName=workflows-1.0, corDappHash=F8E3613207E5ABAEC38930FAA426F7BA91464AA72DAF3EFB74917A0BA71A146E), isEnabledTimedFlow=false), sourceSessionId=SessionId(toLong=7106756066069934968), additionalEntropy=4795262264991213571)
checkpoint.timestamp: 
    2023-01-31T07:18:18.621Z
    2023-01-31T07:18:19.068Z


 --- Transition of flow [7bf5b948-b54a-4fbc-824c-e81579076823] ---
  Timestamp: 2023-01-31T07:18:19.069Z
  Event: EnterSubFlow(subFlowClass=class net.corda.core.flows.CollectSignatureFlow, subFlowVersion=CoreFlow(platformVersion=11), isEnabledTimedFlow=false)
  Actions: 
    
  Continuation: ProcessEvents
  Diff between previous and next state:
checkpoint.checkpointState.subFlowStack: 
    [Initiating(flowClass=class net.corda.samples.obligation.flows.IOUSettleFlow, classToInitiateWith=class net.corda.samples.obligation.flows.IOUSettleFlow, flowInfo=FlowInfo(flowVersion=1, appName=<unknown>), subFlowVersion=CorDappFlow(platformVersion=11, corDappName=workflows-1.0, corDappHash=F8E3613207E5ABAEC38930FAA426F7BA91464AA72DAF3EFB74917A0BA71A146E), isEnabledTimedFlow=false)]
    [Initiating(flowClass=class net.corda.samples.obligation.flows.IOUSettleFlow, classToInitiateWith=class net.corda.samples.obligation.flows.IOUSettleFlow, flowInfo=FlowInfo(flowVersion=1, appName=<unknown>), subFlowVersion=CorDappFlow(platformVersion=11, corDappName=workflows-1.0, corDappHash=F8E3613207E5ABAEC38930FAA426F7BA91464AA72DAF3EFB74917A0BA71A146E), isEnabledTimedFlow=false), Inlined(flowClass=class net.corda.core.flows.CollectSignatureFlow, subFlowVersion=CoreFlow(platformVersion=11), isEnabledTimedFlow=false)]
checkpoint.timestamp: 
    2023-01-31T07:18:19.068Z
    2023-01-31T07:18:19.069Z


 --- Transition of flow [7bf5b948-b54a-4fbc-824c-e81579076823] ---
  Timestamp: 2023-01-31T07:18:19.069Z
  Event: EnterSubFlow(subFlowClass=class net.corda.core.flows.SendTransactionFlow, subFlowVersion=CoreFlow(platformVersion=11), isEnabledTimedFlow=false)
  Actions: 
    
  Continuation: ProcessEvents
  Diff between previous and next state:
checkpoint.checkpointState.subFlowStack: 
    [Initiating(flowClass=class net.corda.samples.obligation.flows.IOUSettleFlow, classToInitiateWith=class net.corda.samples.obligation.flows.IOUSettleFlow, flowInfo=FlowInfo(flowVersion=1, appName=<unknown>), subFlowVersion=CorDappFlow(platformVersion=11, corDappName=workflows-1.0, corDappHash=F8E3613207E5ABAEC38930FAA426F7BA91464AA72DAF3EFB74917A0BA71A146E), isEnabledTimedFlow=false), Inlined(flowClass=class net.corda.core.flows.CollectSignatureFlow, subFlowVersion=CoreFlow(platformVersion=11), isEnabledTimedFlow=false)]
    [Initiating(flowClass=class net.corda.samples.obligation.flows.IOUSettleFlow, classToInitiateWith=class net.corda.samples.obligation.flows.IOUSettleFlow, flowInfo=FlowInfo(flowVersion=1, appName=<unknown>), subFlowVersion=CorDappFlow(platformVersion=11, corDappName=workflows-1.0, corDappHash=F8E3613207E5ABAEC38930FAA426F7BA91464AA72DAF3EFB74917A0BA71A146E), isEnabledTimedFlow=false), Inlined(flowClass=class net.corda.core.flows.CollectSignatureFlow, subFlowVersion=CoreFlow(platformVersion=11), isEnabledTimedFlow=false), Inlined(flowClass=class net.corda.core.flows.SendTransactionFlow, subFlowVersion=CoreFlow(platformVersion=11), isEnabledTimedFlow=false)]


 --- Transition of flow [7bf5b948-b54a-4fbc-824c-e81579076823] ---
  Timestamp: 2023-01-31T07:18:19.077Z
  Event: Suspend(ioRequest=SendAndReceive({FlowSessionImpl(destination=O=Mock Company 3, L=London, C=GB, sourceSessionId=SessionId(toLong=7106756066069934968))=FlowSessionImpl(destination=O=Mock Company 3, L=London, C=GB, sourceSessionId=SessionId(toLong=7106756066069934968))=F8DEF04D66C0707618140559667B1536D69E478665ADCBFAC111210760965968}, shouldRetrySend=false), maySkipCheckpoint=false, fiber=558816BD8EBD1B811EB65EDDBA2B7932574B974B4D8D7EB72800BA90E7064136, currentStep=Starting)
  Actions: 
    PersistCheckpoint(id=[7bf5b948-b54a-4fbc-824c-e81579076823], checkpoint=Checkpoint(checkpointState=CheckpointState(invocationContext=InvocationContext(origin=RPC(actor=Actor(id=Id(value=Only For Testing), serviceId=AuthServiceId(value=TEST), owningLegalIdentity=O=Mock Company 1, L=London, C=GB)), trace=Trace(invocationId=a0b12bd2-1f3d-4173-941b-1db3cba99f9d, timestamp: 2023-01-31T07:18:18.538Z, entityType: Invocation, sessionId=a0b12bd2-1f3d-4173-941b-1db3cba99f9d, timestamp: 2023-01-31T07:18:18.538Z, entityType: Session), actor=Actor(id=Id(value=Only For Testing), serviceId=AuthServiceId(value=TEST), owningLegalIdentity=O=Mock Company 1, L=London, C=GB), externalTrace=null, impersonatedActor=null, arguments=[], clientId=null), ourIdentity=O=Mock Company 1, L=London, C=GB, sessions={SessionId(toLong=240453306151564151)=Initiated(peerParty=O=Mock Company 3, L=London, C=GB, peerFlowInfo=FlowInfo(flowVersion=1, appName=accounts-workflows-1.0), receivedMessages=[], otherSideErrored=false, peerSinkSessionId=SessionId(toLong=1422336125546696269), deduplicationSeed=R-240453306151564151--460002818677610954), SessionId(toLong=7106756066069934968)=Uninitiated(destination=O=Mock Company 3, L=London, C=GB, initiatingSubFlow=Initiating(flowClass=class net.corda.samples.obligation.flows.IOUSettleFlow, classToInitiateWith=class net.corda.samples.obligation.flows.IOUSettleFlow, flowInfo=FlowInfo(flowVersion=1, appName=<unknown>), subFlowVersion=CorDappFlow(platformVersion=11, corDappName=workflows-1.0, corDappHash=F8E3613207E5ABAEC38930FAA426F7BA91464AA72DAF3EFB74917A0BA71A146E), isEnabledTimedFlow=false), sourceSessionId=SessionId(toLong=7106756066069934968), additionalEntropy=4795262264991213571)}, sessionsToBeClosed=[], subFlowStack=[Initiating(flowClass=class net.corda.samples.obligation.flows.IOUSettleFlow, classToInitiateWith=class net.corda.samples.obligation.flows.IOUSettleFlow, flowInfo=FlowInfo(flowVersion=1, appName=<unknown>), subFlowVersion=CorDappFlow(platformVersion=11, corDappName=workflows-1.0, corDappHash=F8E3613207E5ABAEC38930FAA426F7BA91464AA72DAF3EFB74917A0BA71A146E), isEnabledTimedFlow=false), Inlined(flowClass=class net.corda.core.flows.CollectSignatureFlow, subFlowVersion=CoreFlow(platformVersion=11), isEnabledTimedFlow=false), Inlined(flowClass=class net.corda.core.flows.SendTransactionFlow, subFlowVersion=CoreFlow(platformVersion=11), isEnabledTimedFlow=false)], numberOfSuspends=3, numberOfCommits=4), flowState=Started(flowIORequest=SendAndReceive({FlowSessionImpl(destination=O=Mock Company 3, L=London, C=GB, sourceSessionId=SessionId(toLong=7106756066069934968))=FlowSessionImpl(destination=O=Mock Company 3, L=London, C=GB, sourceSessionId=SessionId(toLong=7106756066069934968))=F8DEF04D66C0707618140559667B1536D69E478665ADCBFAC111210760965968}, shouldRetrySend=false), frozenFiber=558816BD8EBD1B811EB65EDDBA2B7932574B974B4D8D7EB72800BA90E7064136), errorState=Clean, result=null, status=RUNNABLE, progressStep=Starting, flowIoRequest=SendAndReceive, compatible=true), isCheckpointUpdate=true)
    PersistDeduplicationFacts(deduplicationHandlers=[net.corda.testing.node.internal.MockNodeMessagingService$InMemoryDeduplicationHandler@64e0bd34])
    CommitTransaction
    AcknowledgeMessages(deduplicationHandlers=[net.corda.testing.node.internal.MockNodeMessagingService$InMemoryDeduplicationHandler@64e0bd34])
    ScheduleEvent(event=DoRemainingWork)
  Continuation: ProcessEvents
  Diff between previous and next state:
checkpoint.flowState.flowIORequest: 
    Receive(sessions=[FlowSessionImpl(destination=O=Mock Company 3, L=London, C=GB, sourceSessionId=SessionId(toLong=240453306151564151))])
    SendAndReceive({FlowSessionImpl(destination=O=Mock Company 3, L=London, C=GB, sourceSessionId=SessionId(toLong=7106756066069934968))=FlowSessionImpl(destination=O=Mock Company 3, L=London, C=GB, sourceSessionId=SessionId(toLong=7106756066069934968))=F8DEF04D66C0707618140559667B1536D69E478665ADCBFAC111210760965968}, shouldRetrySend=false)
checkpoint.flowState.frozenFiber.hash: 
    79B8C386AD8B6BEEC996C020B21FE3FEED4CAFD9DC6F07F9024559B87599979C
    558816BD8EBD1B811EB65EDDBA2B7932574B974B4D8D7EB72800BA90E7064136
checkpoint.checkpointState.numberOfSuspends: 
    2
    3
checkpoint.checkpointState.numberOfCommits: 
    3
    4
checkpoint.timestamp: 
    2023-01-31T07:18:19.069Z
    2023-01-31T07:18:19.073Z
numberOfCommits: 
    3
    4
isFlowResumed: 
    true
    false
pendingDeduplicationHandlers: 
    [net.corda.testing.node.internal.MockNodeMessagingService$InMemoryDeduplicationHandler@64e0bd34]
    []


 --- Transition of flow [7bf5b948-b54a-4fbc-824c-e81579076823] ---
  Timestamp: 2023-01-31T07:18:19.079Z
  Event: DoRemainingWork
  Actions: 
    SendMultiple(sendInitial=[SendInitial(destination=O=Mock Company 3, L=London, C=GB, initialise=InitialSessionMessage(initiatorSessionId=SessionId(toLong=7106756066069934968), initiationEntropy=4795262264991213571, initiatorFlowClassName=net.corda.samples.obligation.flows.IOUSettleFlow, appName=<unknown>, firstPayload=class net.corda.core.serialization.SerializedBytes), deduplicationId=SenderDeduplicationId(deduplicationId=DeduplicationId(toString=N-R-7106756066069934968-4795262264991213571-3-0), senderUUID=3ae20ed2-b752-4131-be00-8b87ba4c6253))], sendExisting=[])
  Continuation: ProcessEvents
  Diff between previous and next state:
checkpoint.flowState.flowIORequest: 
    SendAndReceive({FlowSessionImpl(destination=O=Mock Company 3, L=London, C=GB, sourceSessionId=SessionId(toLong=7106756066069934968))=FlowSessionImpl(destination=O=Mock Company 3, L=London, C=GB, sourceSessionId=SessionId(toLong=7106756066069934968))=F8DEF04D66C0707618140559667B1536D69E478665ADCBFAC111210760965968}, shouldRetrySend=false)
    Receive(sessions=[FlowSessionImpl(destination=O=Mock Company 3, L=London, C=GB, sourceSessionId=SessionId(toLong=7106756066069934968))])
checkpoint.checkpointState.sessions.SessionId(toLong=7106756066069934968): 
    Uninitiated(destination=O=Mock Company 3, L=London, C=GB, initiatingSubFlow=Initiating(flowClass=class net.corda.samples.obligation.flows.IOUSettleFlow, classToInitiateWith=class net.corda.samples.obligation.flows.IOUSettleFlow, flowInfo=FlowInfo(flowVersion=1, appName=<unknown>), subFlowVersion=CorDappFlow(platformVersion=11, corDappName=workflows-1.0, corDappHash=F8E3613207E5ABAEC38930FAA426F7BA91464AA72DAF3EFB74917A0BA71A146E), isEnabledTimedFlow=false), sourceSessionId=SessionId(toLong=7106756066069934968), additionalEntropy=4795262264991213571)
    Initiating(bufferedMessages=[], rejectionError=null, deduplicationSeed=R-7106756066069934968-4795262264991213571)
checkpoint.timestamp: 
    2023-01-31T07:18:19.073Z
    2023-01-31T07:18:19.077Z


 --- Transition of flow [7bf5b948-b54a-4fbc-824c-e81579076823] ---
  Timestamp: 2023-01-31T07:18:19.111Z
  Event: DeliverSessionMessage(sessionMessage=ExistingSessionMessage(recipientSessionId=SessionId(toLong=240453306151564151), payload=net.corda.node.services.statemachine.EndSessionMessage@270a966c), deduplicationHandler=net.corda.testing.node.internal.MockNodeMessagingService$InMemoryDeduplicationHandler@1a8cca68, sender=O=Mock Company 3, L=London, C=GB)
  Actions: 
    ScheduleEvent(event=DoRemainingWork)
  Continuation: ProcessEvents
  Diff between previous and next state:
checkpoint.checkpointState.sessions.SessionId(toLong=240453306151564151).receivedMessages.isEmpty: 
    true
    false
checkpoint.checkpointState.sessionsToBeClosed: 
    []
    [SessionId(toLong=240453306151564151)]
checkpoint.timestamp: 
    2023-01-31T07:18:19.077Z
    2023-01-31T07:18:19.111Z
pendingDeduplicationHandlers: 
    []
    [net.corda.testing.node.internal.MockNodeMessagingService$InMemoryDeduplicationHandler@1a8cca68]


 --- Transition of flow [7bf5b948-b54a-4fbc-824c-e81579076823] ---
  Timestamp: 2023-01-31T07:18:19.112Z
  Event: DoRemainingWork
  Actions: 
    RemoveSessionBindings(sessionIds=[SessionId(toLong=240453306151564151)])
  Continuation: ProcessEvents
  Diff between previous and next state:
checkpoint.checkpointState.sessions.SessionId(toLong=240453306151564151): 
    Initiated(peerParty=O=Mock Company 3, L=London, C=GB, peerFlowInfo=FlowInfo(flowVersion=1, appName=accounts-workflows-1.0), receivedMessages=[net.corda.node.services.statemachine.EndSessionMessage@270a966c], otherSideErrored=false, peerSinkSessionId=SessionId(toLong=1422336125546696269), deduplicationSeed=R-240453306151564151--460002818677610954)
    null
checkpoint.checkpointState.sessionsToBeClosed: 
    [SessionId(toLong=240453306151564151)]
    []
checkpoint.timestamp: 
    2023-01-31T07:18:19.111Z
    2023-01-31T07:18:19.112Z


 --- Transition of flow [7bf5b948-b54a-4fbc-824c-e81579076823] ---
  Timestamp: 2023-01-31T07:18:19.114Z
  Event: DeliverSessionMessage(sessionMessage=ExistingSessionMessage(recipientSessionId=SessionId(toLong=7106756066069934968), payload=ConfirmSessionMessage(initiatedSessionId=SessionId(toLong=-7881500851533551462), initiatedFlowInfo=FlowInfo(flowVersion=1, appName=<unknown>))), deduplicationHandler=net.corda.testing.node.internal.MockNodeMessagingService$InMemoryDeduplicationHandler@7ee892dc, sender=O=Mock Company 3, L=London, C=GB)
  Actions: 
    ScheduleEvent(event=DoRemainingWork)
  Continuation: ProcessEvents
  Diff between previous and next state:
checkpoint.checkpointState.sessions.SessionId(toLong=7106756066069934968): 
    Initiating(bufferedMessages=[], rejectionError=null, deduplicationSeed=R-7106756066069934968-4795262264991213571)
    Initiated(peerParty=O=Mock Company 3, L=London, C=GB, peerFlowInfo=FlowInfo(flowVersion=1, appName=<unknown>), receivedMessages=[], otherSideErrored=false, peerSinkSessionId=SessionId(toLong=-7881500851533551462), deduplicationSeed=R-7106756066069934968-4795262264991213571)
checkpoint.timestamp: 
    2023-01-31T07:18:19.112Z
    2023-01-31T07:18:19.114Z
pendingDeduplicationHandlers: 
    [net.corda.testing.node.internal.MockNodeMessagingService$InMemoryDeduplicationHandler@1a8cca68]
    [net.corda.testing.node.internal.MockNodeMessagingService$InMemoryDeduplicationHandler@1a8cca68, net.corda.testing.node.internal.MockNodeMessagingService$InMemoryDeduplicationHandler@7ee892dc]


 --- Transition of flow [7bf5b948-b54a-4fbc-824c-e81579076823] ---
  Timestamp: 2023-01-31T07:18:19.114Z
  Event: DoRemainingWork
  Actions: 
    
  Continuation: ProcessEvents
  Diff between previous and next state:
null

 --- Transition of flow [7bf5b948-b54a-4fbc-824c-e81579076823] ---
  Timestamp: 2023-01-31T07:18:19.115Z
  Event: DeliverSessionMessage(sessionMessage=ExistingSessionMessage(recipientSessionId=SessionId(toLong=7106756066069934968), payload=DataSessionMessage(payload=class net.corda.core.serialization.SerializedBytes)), deduplicationHandler=net.corda.testing.node.internal.MockNodeMessagingService$InMemoryDeduplicationHandler@1501c41c, sender=O=Mock Company 3, L=London, C=GB)
  Actions: 
    ScheduleEvent(event=DoRemainingWork)
  Continuation: ProcessEvents
  Diff between previous and next state:
checkpoint.checkpointState.sessions.SessionId(toLong=7106756066069934968).receivedMessages.isEmpty: 
    true
    false
checkpoint.timestamp: 
    2023-01-31T07:18:19.114Z
    2023-01-31T07:18:19.115Z
pendingDeduplicationHandlers: 
    [net.corda.testing.node.internal.MockNodeMessagingService$InMemoryDeduplicationHandler@1a8cca68, net.corda.testing.node.internal.MockNodeMessagingService$InMemoryDeduplicationHandler@7ee892dc]
    [net.corda.testing.node.internal.MockNodeMessagingService$InMemoryDeduplicationHandler@1a8cca68, net.corda.testing.node.internal.MockNodeMessagingService$InMemoryDeduplicationHandler@7ee892dc, net.corda.testing.node.internal.MockNodeMessagingService$InMemoryDeduplicationHandler@1501c41c]


 --- Transition of flow [7bf5b948-b54a-4fbc-824c-e81579076823] ---
  Timestamp: 2023-01-31T07:18:19.115Z
  Event: DoRemainingWork
  Actions: 
    CreateTransaction
  Continuation: Resume(result=class java.util.LinkedHashMap)
  Diff between previous and next state:
checkpoint.checkpointState.sessions.SessionId(toLong=7106756066069934968).receivedMessages.isEmpty: 
    false
    true
isFlowResumed: 
    false
    true


 --- Transition of flow [7bf5b948-b54a-4fbc-824c-e81579076823] ---
  Timestamp: 2023-01-31T07:18:19.121Z
  Event: Suspend(ioRequest=SendAndReceive({FlowSessionImpl(destination=O=Mock Company 3, L=London, C=GB, sourceSessionId=SessionId(toLong=7106756066069934968))=FlowSessionImpl(destination=O=Mock Company 3, L=London, C=GB, sourceSessionId=SessionId(toLong=7106756066069934968))=E3E340423D37CE9AF32A1E46957DFB6A84DF459BFE39720D22505D1C0C04BEB7}, shouldRetrySend=false), maySkipCheckpoint=false, fiber=2CE598E0A36E5BDB44D9BCD0C63DEBF125D13B248FEDBFE4773C3B6686E52E8C, currentStep=Starting)
  Actions: 
    PersistCheckpoint(id=[7bf5b948-b54a-4fbc-824c-e81579076823], checkpoint=Checkpoint(checkpointState=CheckpointState(invocationContext=InvocationContext(origin=RPC(actor=Actor(id=Id(value=Only For Testing), serviceId=AuthServiceId(value=TEST), owningLegalIdentity=O=Mock Company 1, L=London, C=GB)), trace=Trace(invocationId=a0b12bd2-1f3d-4173-941b-1db3cba99f9d, timestamp: 2023-01-31T07:18:18.538Z, entityType: Invocation, sessionId=a0b12bd2-1f3d-4173-941b-1db3cba99f9d, timestamp: 2023-01-31T07:18:18.538Z, entityType: Session), actor=Actor(id=Id(value=Only For Testing), serviceId=AuthServiceId(value=TEST), owningLegalIdentity=O=Mock Company 1, L=London, C=GB), externalTrace=null, impersonatedActor=null, arguments=[], clientId=null), ourIdentity=O=Mock Company 1, L=London, C=GB, sessions={SessionId(toLong=7106756066069934968)=Initiated(peerParty=O=Mock Company 3, L=London, C=GB, peerFlowInfo=FlowInfo(flowVersion=1, appName=<unknown>), receivedMessages=[], otherSideErrored=false, peerSinkSessionId=SessionId(toLong=-7881500851533551462), deduplicationSeed=R-7106756066069934968-4795262264991213571)}, sessionsToBeClosed=[], subFlowStack=[Initiating(flowClass=class net.corda.samples.obligation.flows.IOUSettleFlow, classToInitiateWith=class net.corda.samples.obligation.flows.IOUSettleFlow, flowInfo=FlowInfo(flowVersion=1, appName=<unknown>), subFlowVersion=CorDappFlow(platformVersion=11, corDappName=workflows-1.0, corDappHash=F8E3613207E5ABAEC38930FAA426F7BA91464AA72DAF3EFB74917A0BA71A146E), isEnabledTimedFlow=false), Inlined(flowClass=class net.corda.core.flows.CollectSignatureFlow, subFlowVersion=CoreFlow(platformVersion=11), isEnabledTimedFlow=false), Inlined(flowClass=class net.corda.core.flows.SendTransactionFlow, subFlowVersion=CoreFlow(platformVersion=11), isEnabledTimedFlow=false)], numberOfSuspends=4, numberOfCommits=5), flowState=Started(flowIORequest=SendAndReceive({FlowSessionImpl(destination=O=Mock Company 3, L=London, C=GB, sourceSessionId=SessionId(toLong=7106756066069934968))=FlowSessionImpl(destination=O=Mock Company 3, L=London, C=GB, sourceSessionId=SessionId(toLong=7106756066069934968))=E3E340423D37CE9AF32A1E46957DFB6A84DF459BFE39720D22505D1C0C04BEB7}, shouldRetrySend=false), frozenFiber=2CE598E0A36E5BDB44D9BCD0C63DEBF125D13B248FEDBFE4773C3B6686E52E8C), errorState=Clean, result=null, status=RUNNABLE, progressStep=Starting, flowIoRequest=SendAndReceive, compatible=true), isCheckpointUpdate=true)
    PersistDeduplicationFacts(deduplicationHandlers=[net.corda.testing.node.internal.MockNodeMessagingService$InMemoryDeduplicationHandler@1a8cca68, net.corda.testing.node.internal.MockNodeMessagingService$InMemoryDeduplicationHandler@7ee892dc, net.corda.testing.node.internal.MockNodeMessagingService$InMemoryDeduplicationHandler@1501c41c])
    CommitTransaction
    AcknowledgeMessages(deduplicationHandlers=[net.corda.testing.node.internal.MockNodeMessagingService$InMemoryDeduplicationHandler@1a8cca68, net.corda.testing.node.internal.MockNodeMessagingService$InMemoryDeduplicationHandler@7ee892dc, net.corda.testing.node.internal.MockNodeMessagingService$InMemoryDeduplicationHandler@1501c41c])
    ScheduleEvent(event=DoRemainingWork)
  Continuation: ProcessEvents
  Diff between previous and next state:
checkpoint.flowState.flowIORequest: 
    Receive(sessions=[FlowSessionImpl(destination=O=Mock Company 3, L=London, C=GB, sourceSessionId=SessionId(toLong=7106756066069934968))])
    SendAndReceive({FlowSessionImpl(destination=O=Mock Company 3, L=London, C=GB, sourceSessionId=SessionId(toLong=7106756066069934968))=FlowSessionImpl(destination=O=Mock Company 3, L=London, C=GB, sourceSessionId=SessionId(toLong=7106756066069934968))=E3E340423D37CE9AF32A1E46957DFB6A84DF459BFE39720D22505D1C0C04BEB7}, shouldRetrySend=false)
checkpoint.flowState.frozenFiber.hash: 
    558816BD8EBD1B811EB65EDDBA2B7932574B974B4D8D7EB72800BA90E7064136
    2CE598E0A36E5BDB44D9BCD0C63DEBF125D13B248FEDBFE4773C3B6686E52E8C
checkpoint.checkpointState.numberOfSuspends: 
    3
    4
checkpoint.checkpointState.numberOfCommits: 
    4
    5
checkpoint.timestamp: 
    2023-01-31T07:18:19.115Z
    2023-01-31T07:18:19.119Z
numberOfCommits: 
    4
    5
isFlowResumed: 
    true
    false
pendingDeduplicationHandlers: 
    [net.corda.testing.node.internal.MockNodeMessagingService$InMemoryDeduplicationHandler@1a8cca68, net.corda.testing.node.internal.MockNodeMessagingService$InMemoryDeduplicationHandler@7ee892dc, net.corda.testing.node.internal.MockNodeMessagingService$InMemoryDeduplicationHandler@1501c41c]
    []


 --- Transition of flow [7bf5b948-b54a-4fbc-824c-e81579076823] ---
  Timestamp: 2023-01-31T07:18:19.122Z
  Event: DoRemainingWork
  Actions: 
    SendMultiple(sendInitial=[], sendExisting=[SendExisting(peerParty=O=Mock Company 3, L=London, C=GB, message=ExistingSessionMessage(recipientSessionId=SessionId(toLong=-7881500851533551462), payload=DataSessionMessage(payload=class net.corda.core.serialization.SerializedBytes)), deduplicationId=SenderDeduplicationId(deduplicationId=DeduplicationId(toString=N-R-7106756066069934968-4795262264991213571-4-0), senderUUID=3ae20ed2-b752-4131-be00-8b87ba4c6253))])
  Continuation: ProcessEvents
  Diff between previous and next state:
checkpoint.flowState.flowIORequest: 
    SendAndReceive({FlowSessionImpl(destination=O=Mock Company 3, L=London, C=GB, sourceSessionId=SessionId(toLong=7106756066069934968))=FlowSessionImpl(destination=O=Mock Company 3, L=London, C=GB, sourceSessionId=SessionId(toLong=7106756066069934968))=E3E340423D37CE9AF32A1E46957DFB6A84DF459BFE39720D22505D1C0C04BEB7}, shouldRetrySend=false)
    Receive(sessions=[FlowSessionImpl(destination=O=Mock Company 3, L=London, C=GB, sourceSessionId=SessionId(toLong=7106756066069934968))])
checkpoint.timestamp: 
    2023-01-31T07:18:19.119Z
    2023-01-31T07:18:19.122Z


 --- Transition of flow [7bf5b948-b54a-4fbc-824c-e81579076823] ---
  Timestamp: 2023-01-31T07:18:19.277Z
  Event: DeliverSessionMessage(sessionMessage=ExistingSessionMessage(recipientSessionId=SessionId(toLong=7106756066069934968), payload=DataSessionMessage(payload=class net.corda.core.serialization.SerializedBytes)), deduplicationHandler=net.corda.testing.node.internal.MockNodeMessagingService$InMemoryDeduplicationHandler@23845d1a, sender=O=Mock Company 3, L=London, C=GB)
  Actions: 
    ScheduleEvent(event=DoRemainingWork)
  Continuation: ProcessEvents
  Diff between previous and next state:
checkpoint.checkpointState.sessions.SessionId(toLong=7106756066069934968).receivedMessages.isEmpty: 
    true
    false
checkpoint.timestamp: 
    2023-01-31T07:18:19.122Z
    2023-01-31T07:18:19.277Z
pendingDeduplicationHandlers: 
    []
    [net.corda.testing.node.internal.MockNodeMessagingService$InMemoryDeduplicationHandler@23845d1a]


 --- Transition of flow [7bf5b948-b54a-4fbc-824c-e81579076823] ---
  Timestamp: 2023-01-31T07:18:19.277Z
  Event: DoRemainingWork
  Actions: 
    CreateTransaction
  Continuation: Resume(result=class java.util.LinkedHashMap)
  Diff between previous and next state:
checkpoint.checkpointState.sessions.SessionId(toLong=7106756066069934968).receivedMessages.isEmpty: 
    false
    true
isFlowResumed: 
    false
    true


 --- Transition of flow [7bf5b948-b54a-4fbc-824c-e81579076823] ---
  Timestamp: 2023-01-31T07:18:19.278Z
  Event: LeaveSubFlow
  Actions: 
    
  Continuation: ProcessEvents
  Diff between previous and next state:
checkpoint.checkpointState.subFlowStack: 
    [Initiating(flowClass=class net.corda.samples.obligation.flows.IOUSettleFlow, classToInitiateWith=class net.corda.samples.obligation.flows.IOUSettleFlow, flowInfo=FlowInfo(flowVersion=1, appName=<unknown>), subFlowVersion=CorDappFlow(platformVersion=11, corDappName=workflows-1.0, corDappHash=F8E3613207E5ABAEC38930FAA426F7BA91464AA72DAF3EFB74917A0BA71A146E), isEnabledTimedFlow=false), Inlined(flowClass=class net.corda.core.flows.CollectSignatureFlow, subFlowVersion=CoreFlow(platformVersion=11), isEnabledTimedFlow=false), Inlined(flowClass=class net.corda.core.flows.SendTransactionFlow, subFlowVersion=CoreFlow(platformVersion=11), isEnabledTimedFlow=false)]
    [Initiating(flowClass=class net.corda.samples.obligation.flows.IOUSettleFlow, classToInitiateWith=class net.corda.samples.obligation.flows.IOUSettleFlow, flowInfo=FlowInfo(flowVersion=1, appName=<unknown>), subFlowVersion=CorDappFlow(platformVersion=11, corDappName=workflows-1.0, corDappHash=F8E3613207E5ABAEC38930FAA426F7BA91464AA72DAF3EFB74917A0BA71A146E), isEnabledTimedFlow=false), Inlined(flowClass=class net.corda.core.flows.CollectSignatureFlow, subFlowVersion=CoreFlow(platformVersion=11), isEnabledTimedFlow=false)]
checkpoint.timestamp: 
    2023-01-31T07:18:19.277Z
    2023-01-31T07:18:19.278Z


 --- Transition of flow [7bf5b948-b54a-4fbc-824c-e81579076823] ---
  Timestamp: 2023-01-31T07:18:19.282Z
  Event: Suspend(ioRequest=Send(sessionToMessage={FlowSessionImpl(destination=O=Mock Company 3, L=London, C=GB, sourceSessionId=SessionId(toLong=7106756066069934968))=5776F1072E3565A6C7C04A28DD4C9CC3AFEB61B3DDB7D47E09BCD2FB745D0B51}), maySkipCheckpoint=false, fiber=187E2ED8E922E471623C50DBBA7B0481C71175668FED52C1BB05723D5F8E1AE7, currentStep=Starting)
  Actions: 
    PersistCheckpoint(id=[7bf5b948-b54a-4fbc-824c-e81579076823], checkpoint=Checkpoint(checkpointState=CheckpointState(invocationContext=InvocationContext(origin=RPC(actor=Actor(id=Id(value=Only For Testing), serviceId=AuthServiceId(value=TEST), owningLegalIdentity=O=Mock Company 1, L=London, C=GB)), trace=Trace(invocationId=a0b12bd2-1f3d-4173-941b-1db3cba99f9d, timestamp: 2023-01-31T07:18:18.538Z, entityType: Invocation, sessionId=a0b12bd2-1f3d-4173-941b-1db3cba99f9d, timestamp: 2023-01-31T07:18:18.538Z, entityType: Session), actor=Actor(id=Id(value=Only For Testing), serviceId=AuthServiceId(value=TEST), owningLegalIdentity=O=Mock Company 1, L=London, C=GB), externalTrace=null, impersonatedActor=null, arguments=[], clientId=null), ourIdentity=O=Mock Company 1, L=London, C=GB, sessions={SessionId(toLong=7106756066069934968)=Initiated(peerParty=O=Mock Company 3, L=London, C=GB, peerFlowInfo=FlowInfo(flowVersion=1, appName=<unknown>), receivedMessages=[], otherSideErrored=false, peerSinkSessionId=SessionId(toLong=-7881500851533551462), deduplicationSeed=R-7106756066069934968-4795262264991213571)}, sessionsToBeClosed=[], subFlowStack=[Initiating(flowClass=class net.corda.samples.obligation.flows.IOUSettleFlow, classToInitiateWith=class net.corda.samples.obligation.flows.IOUSettleFlow, flowInfo=FlowInfo(flowVersion=1, appName=<unknown>), subFlowVersion=CorDappFlow(platformVersion=11, corDappName=workflows-1.0, corDappHash=F8E3613207E5ABAEC38930FAA426F7BA91464AA72DAF3EFB74917A0BA71A146E), isEnabledTimedFlow=false), Inlined(flowClass=class net.corda.core.flows.CollectSignatureFlow, subFlowVersion=CoreFlow(platformVersion=11), isEnabledTimedFlow=false)], numberOfSuspends=5, numberOfCommits=6), flowState=Started(flowIORequest=Send(sessionToMessage={FlowSessionImpl(destination=O=Mock Company 3, L=London, C=GB, sourceSessionId=SessionId(toLong=7106756066069934968))=5776F1072E3565A6C7C04A28DD4C9CC3AFEB61B3DDB7D47E09BCD2FB745D0B51}), frozenFiber=187E2ED8E922E471623C50DBBA7B0481C71175668FED52C1BB05723D5F8E1AE7), errorState=Clean, result=null, status=RUNNABLE, progressStep=Starting, flowIoRequest=Send, compatible=true), isCheckpointUpdate=true)
    PersistDeduplicationFacts(deduplicationHandlers=[net.corda.testing.node.internal.MockNodeMessagingService$InMemoryDeduplicationHandler@23845d1a])
    CommitTransaction
    AcknowledgeMessages(deduplicationHandlers=[net.corda.testing.node.internal.MockNodeMessagingService$InMemoryDeduplicationHandler@23845d1a])
    ScheduleEvent(event=DoRemainingWork)
  Continuation: ProcessEvents
  Diff between previous and next state:
checkpoint.flowState.flowIORequest: 
    Receive(sessions=[FlowSessionImpl(destination=O=Mock Company 3, L=London, C=GB, sourceSessionId=SessionId(toLong=7106756066069934968))])
    Send(sessionToMessage={FlowSessionImpl(destination=O=Mock Company 3, L=London, C=GB, sourceSessionId=SessionId(toLong=7106756066069934968))=5776F1072E3565A6C7C04A28DD4C9CC3AFEB61B3DDB7D47E09BCD2FB745D0B51})
checkpoint.flowState.frozenFiber.hash: 
    2CE598E0A36E5BDB44D9BCD0C63DEBF125D13B248FEDBFE4773C3B6686E52E8C
    187E2ED8E922E471623C50DBBA7B0481C71175668FED52C1BB05723D5F8E1AE7
checkpoint.flowIoRequest: 
    SendAndReceive
    Send
checkpoint.checkpointState.numberOfSuspends: 
    4
    5
checkpoint.checkpointState.numberOfCommits: 
    5
    6
checkpoint.timestamp: 
    2023-01-31T07:18:19.278Z
    2023-01-31T07:18:19.280Z
numberOfCommits: 
    5
    6
isFlowResumed: 
    true
    false
pendingDeduplicationHandlers: 
    [net.corda.testing.node.internal.MockNodeMessagingService$InMemoryDeduplicationHandler@23845d1a]
    []


 --- Transition of flow [7bf5b948-b54a-4fbc-824c-e81579076823] ---
  Timestamp: 2023-01-31T07:18:19.283Z
  Event: DoRemainingWork
  Actions: 
    SendMultiple(sendInitial=[], sendExisting=[SendExisting(peerParty=O=Mock Company 3, L=London, C=GB, message=ExistingSessionMessage(recipientSessionId=SessionId(toLong=-7881500851533551462), payload=DataSessionMessage(payload=class net.corda.core.serialization.SerializedBytes)), deduplicationId=SenderDeduplicationId(deduplicationId=DeduplicationId(toString=N-R-7106756066069934968-4795262264991213571-5-0), senderUUID=3ae20ed2-b752-4131-be00-8b87ba4c6253))])
    CreateTransaction
  Continuation: Resume(result=class kotlin.Unit)
  Diff between previous and next state:
isFlowResumed: 
    false
    true


 --- Transition of flow [7bf5b948-b54a-4fbc-824c-e81579076823] ---
  Timestamp: 2023-01-31T07:18:19.286Z
  Event: Suspend(ioRequest=Receive(sessions=[FlowSessionImpl(destination=O=Mock Company 3, L=London, C=GB, sourceSessionId=SessionId(toLong=7106756066069934968))]), maySkipCheckpoint=false, fiber=2D19A8927FC60D149A79A498C6F9E41D98715F082D0EEEE85210D3D62134377E, currentStep=Starting)
  Actions: 
    PersistCheckpoint(id=[7bf5b948-b54a-4fbc-824c-e81579076823], checkpoint=Checkpoint(checkpointState=CheckpointState(invocationContext=InvocationContext(origin=RPC(actor=Actor(id=Id(value=Only For Testing), serviceId=AuthServiceId(value=TEST), owningLegalIdentity=O=Mock Company 1, L=London, C=GB)), trace=Trace(invocationId=a0b12bd2-1f3d-4173-941b-1db3cba99f9d, timestamp: 2023-01-31T07:18:18.538Z, entityType: Invocation, sessionId=a0b12bd2-1f3d-4173-941b-1db3cba99f9d, timestamp: 2023-01-31T07:18:18.538Z, entityType: Session), actor=Actor(id=Id(value=Only For Testing), serviceId=AuthServiceId(value=TEST), owningLegalIdentity=O=Mock Company 1, L=London, C=GB), externalTrace=null, impersonatedActor=null, arguments=[], clientId=null), ourIdentity=O=Mock Company 1, L=London, C=GB, sessions={SessionId(toLong=7106756066069934968)=Initiated(peerParty=O=Mock Company 3, L=London, C=GB, peerFlowInfo=FlowInfo(flowVersion=1, appName=<unknown>), receivedMessages=[], otherSideErrored=false, peerSinkSessionId=SessionId(toLong=-7881500851533551462), deduplicationSeed=R-7106756066069934968-4795262264991213571)}, sessionsToBeClosed=[], subFlowStack=[Initiating(flowClass=class net.corda.samples.obligation.flows.IOUSettleFlow, classToInitiateWith=class net.corda.samples.obligation.flows.IOUSettleFlow, flowInfo=FlowInfo(flowVersion=1, appName=<unknown>), subFlowVersion=CorDappFlow(platformVersion=11, corDappName=workflows-1.0, corDappHash=F8E3613207E5ABAEC38930FAA426F7BA91464AA72DAF3EFB74917A0BA71A146E), isEnabledTimedFlow=false), Inlined(flowClass=class net.corda.core.flows.CollectSignatureFlow, subFlowVersion=CoreFlow(platformVersion=11), isEnabledTimedFlow=false)], numberOfSuspends=6, numberOfCommits=7), flowState=Started(flowIORequest=Receive(sessions=[FlowSessionImpl(destination=O=Mock Company 3, L=London, C=GB, sourceSessionId=SessionId(toLong=7106756066069934968))]), frozenFiber=2D19A8927FC60D149A79A498C6F9E41D98715F082D0EEEE85210D3D62134377E), errorState=Clean, result=null, status=RUNNABLE, progressStep=Starting, flowIoRequest=Receive, compatible=true), isCheckpointUpdate=true)
    PersistDeduplicationFacts(deduplicationHandlers=[])
    CommitTransaction
    AcknowledgeMessages(deduplicationHandlers=[])
    ScheduleEvent(event=DoRemainingWork)
  Continuation: ProcessEvents
  Diff between previous and next state:
checkpoint.flowState.flowIORequest: 
    Send(sessionToMessage={FlowSessionImpl(destination=O=Mock Company 3, L=London, C=GB, sourceSessionId=SessionId(toLong=7106756066069934968))=5776F1072E3565A6C7C04A28DD4C9CC3AFEB61B3DDB7D47E09BCD2FB745D0B51})
    Receive(sessions=[FlowSessionImpl(destination=O=Mock Company 3, L=London, C=GB, sourceSessionId=SessionId(toLong=7106756066069934968))])
checkpoint.flowState.frozenFiber.hash: 
    187E2ED8E922E471623C50DBBA7B0481C71175668FED52C1BB05723D5F8E1AE7
    2D19A8927FC60D149A79A498C6F9E41D98715F082D0EEEE85210D3D62134377E
checkpoint.flowIoRequest: 
    Send
    Receive
checkpoint.checkpointState.numberOfSuspends: 
    5
    6
checkpoint.checkpointState.numberOfCommits: 
    6
    7
checkpoint.timestamp: 
    2023-01-31T07:18:19.282Z
    2023-01-31T07:18:19.284Z
numberOfCommits: 
    6
    7
isFlowResumed: 
    true
    false


 --- Transition of flow [7bf5b948-b54a-4fbc-824c-e81579076823] ---
  Timestamp: 2023-01-31T07:18:19.287Z
  Event: DoRemainingWork
  Actions: 
    
  Continuation: ProcessEvents
  Diff between previous and next state:
null

 --- Transition of flow [7bf5b948-b54a-4fbc-824c-e81579076823] ---
  Timestamp: 2023-01-31T07:18:19.304Z
  Event: DeliverSessionMessage(sessionMessage=ExistingSessionMessage(recipientSessionId=SessionId(toLong=7106756066069934968), payload=DataSessionMessage(payload=class net.corda.core.serialization.SerializedBytes)), deduplicationHandler=net.corda.testing.node.internal.MockNodeMessagingService$InMemoryDeduplicationHandler@7c7b7642, sender=O=Mock Company 3, L=London, C=GB)
  Actions: 
    ScheduleEvent(event=DoRemainingWork)
  Continuation: ProcessEvents
  Diff between previous and next state:
checkpoint.checkpointState.sessions.SessionId(toLong=7106756066069934968).receivedMessages.isEmpty: 
    true
    false
checkpoint.timestamp: 
    2023-01-31T07:18:19.286Z
    2023-01-31T07:18:19.304Z
pendingDeduplicationHandlers: 
    []
    [net.corda.testing.node.internal.MockNodeMessagingService$InMemoryDeduplicationHandler@7c7b7642]


 --- Transition of flow [7bf5b948-b54a-4fbc-824c-e81579076823] ---
  Timestamp: 2023-01-31T07:18:19.304Z
  Event: DoRemainingWork
  Actions: 
    CreateTransaction
  Continuation: Resume(result=class java.util.LinkedHashMap)
  Diff between previous and next state:
checkpoint.checkpointState.sessions.SessionId(toLong=7106756066069934968).receivedMessages.isEmpty: 
    false
    true
isFlowResumed: 
    false
    true


 --- Transition of flow [7bf5b948-b54a-4fbc-824c-e81579076823] ---
  Timestamp: 2023-01-31T07:18:19.304Z
  Event: LeaveSubFlow
  Actions: 
    
  Continuation: ProcessEvents
  Diff between previous and next state:
checkpoint.checkpointState.subFlowStack: 
    [Initiating(flowClass=class net.corda.samples.obligation.flows.IOUSettleFlow, classToInitiateWith=class net.corda.samples.obligation.flows.IOUSettleFlow, flowInfo=FlowInfo(flowVersion=1, appName=<unknown>), subFlowVersion=CorDappFlow(platformVersion=11, corDappName=workflows-1.0, corDappHash=F8E3613207E5ABAEC38930FAA426F7BA91464AA72DAF3EFB74917A0BA71A146E), isEnabledTimedFlow=false), Inlined(flowClass=class net.corda.core.flows.CollectSignatureFlow, subFlowVersion=CoreFlow(platformVersion=11), isEnabledTimedFlow=false)]
    [Initiating(flowClass=class net.corda.samples.obligation.flows.IOUSettleFlow, classToInitiateWith=class net.corda.samples.obligation.flows.IOUSettleFlow, flowInfo=FlowInfo(flowVersion=1, appName=<unknown>), subFlowVersion=CorDappFlow(platformVersion=11, corDappName=workflows-1.0, corDappHash=F8E3613207E5ABAEC38930FAA426F7BA91464AA72DAF3EFB74917A0BA71A146E), isEnabledTimedFlow=false)]


 --- Transition of flow [7bf5b948-b54a-4fbc-824c-e81579076823] ---
  Timestamp: 2023-01-31T07:18:19.305Z
  Event: EnterSubFlow(subFlowClass=class net.corda.core.flows.FinalityFlow, subFlowVersion=CoreFlow(platformVersion=11), isEnabledTimedFlow=false)
  Actions: 
    
  Continuation: ProcessEvents
  Diff between previous and next state:
checkpoint.checkpointState.subFlowStack: 
    [Initiating(flowClass=class net.corda.samples.obligation.flows.IOUSettleFlow, classToInitiateWith=class net.corda.samples.obligation.flows.IOUSettleFlow, flowInfo=FlowInfo(flowVersion=1, appName=<unknown>), subFlowVersion=CorDappFlow(platformVersion=11, corDappName=workflows-1.0, corDappHash=F8E3613207E5ABAEC38930FAA426F7BA91464AA72DAF3EFB74917A0BA71A146E), isEnabledTimedFlow=false)]
    [Initiating(flowClass=class net.corda.samples.obligation.flows.IOUSettleFlow, classToInitiateWith=class net.corda.samples.obligation.flows.IOUSettleFlow, flowInfo=FlowInfo(flowVersion=1, appName=<unknown>), subFlowVersion=CorDappFlow(platformVersion=11, corDappName=workflows-1.0, corDappHash=F8E3613207E5ABAEC38930FAA426F7BA91464AA72DAF3EFB74917A0BA71A146E), isEnabledTimedFlow=false), Initiating(flowClass=class net.corda.core.flows.FinalityFlow, classToInitiateWith=class net.corda.core.flows.FinalityFlow, flowInfo=FlowInfo(flowVersion=1, appName=corda-core-4.9), subFlowVersion=CoreFlow(platformVersion=11), isEnabledTimedFlow=false)]
checkpoint.timestamp: 
    2023-01-31T07:18:19.304Z
    2023-01-31T07:18:19.305Z


 --- Transition of flow [7bf5b948-b54a-4fbc-824c-e81579076823] ---
  Timestamp: 2023-01-31T07:18:19.498Z
  Event: LeaveSubFlow
  Actions: 
    
  Continuation: ProcessEvents
  Diff between previous and next state:
checkpoint.checkpointState.subFlowStack: 
    [Initiating(flowClass=class net.corda.samples.obligation.flows.IOUSettleFlow, classToInitiateWith=class net.corda.samples.obligation.flows.IOUSettleFlow, flowInfo=FlowInfo(flowVersion=1, appName=<unknown>), subFlowVersion=CorDappFlow(platformVersion=11, corDappName=workflows-1.0, corDappHash=F8E3613207E5ABAEC38930FAA426F7BA91464AA72DAF3EFB74917A0BA71A146E), isEnabledTimedFlow=false), Initiating(flowClass=class net.corda.core.flows.FinalityFlow, classToInitiateWith=class net.corda.core.flows.FinalityFlow, flowInfo=FlowInfo(flowVersion=1, appName=corda-core-4.9), subFlowVersion=CoreFlow(platformVersion=11), isEnabledTimedFlow=false)]
    [Initiating(flowClass=class net.corda.samples.obligation.flows.IOUSettleFlow, classToInitiateWith=class net.corda.samples.obligation.flows.IOUSettleFlow, flowInfo=FlowInfo(flowVersion=1, appName=<unknown>), subFlowVersion=CorDappFlow(platformVersion=11, corDappName=workflows-1.0, corDappHash=F8E3613207E5ABAEC38930FAA426F7BA91464AA72DAF3EFB74917A0BA71A146E), isEnabledTimedFlow=false)]
checkpoint.timestamp: 
    2023-01-31T07:18:19.305Z
    2023-01-31T07:18:19.498Z


 --- Transition of flow [7bf5b948-b54a-4fbc-824c-e81579076823] ---
  Timestamp: 2023-01-31T07:18:19.511Z
  Event: Error(exception=java.lang.IllegalArgumentException: Could not find Party for Anonymous(DL7NADKtqU5PmNXGD9KWJDFeD3KHgKi6ypBkpS9xb44xBz), rollback=true)
  Actions: 
    RollbackTransaction
    ScheduleEvent(event=DoRemainingWork)
  Continuation: ProcessEvents
  Diff between previous and next state:
checkpoint.errorState: 
    Clean
    Errored(errors=[FlowError(errorId=-1030127781405848252, exception=java.lang.IllegalArgumentException: Could not find Party for Anonymous(DL7NADKtqU5PmNXGD9KWJDFeD3KHgKi6ypBkpS9xb44xBz))], propagatedIndex=0, propagating=false)
checkpoint.timestamp: 
    2023-01-31T07:18:19.498Z
    2023-01-31T07:18:19.501Z
isFlowResumed: 
    true
    false


 --- Transition of flow [7bf5b948-b54a-4fbc-824c-e81579076823] ---
  Timestamp: 2023-01-31T07:18:19.514Z
  Event: DoRemainingWork
  Actions: 
    
  Continuation: ProcessEvents
  Diff between previous and next state:
null

 --- Transition of flow [7bf5b948-b54a-4fbc-824c-e81579076823] ---
  Timestamp: 2023-01-31T07:18:19.515Z
  Event: StartErrorPropagation
  Actions: 
    ScheduleEvent(event=DoRemainingWork)
  Continuation: ProcessEvents
  Diff between previous and next state:
checkpoint.errorState.propagating: 
    false
    true
checkpoint.timestamp: 
    2023-01-31T07:18:19.501Z
    2023-01-31T07:18:19.515Z


 --- Transition of flow [7bf5b948-b54a-4fbc-824c-e81579076823] ---
  Timestamp: 2023-01-31T07:18:19.627Z
  Event: DoRemainingWork
  Actions: 
    PropagateErrors(errorMessages=[ErrorSessionMessage(flowException=null, errorId=-1030127781405848252)], sessions=[Initiated(peerParty=O=Mock Company 3, L=London, C=GB, peerFlowInfo=FlowInfo(flowVersion=1, appName=<unknown>), receivedMessages=[], otherSideErrored=false, peerSinkSessionId=SessionId(toLong=-7881500851533551462), deduplicationSeed=R-7106756066069934968-4795262264991213571)], senderUUID=3ae20ed2-b752-4131-be00-8b87ba4c6253)
    CreateTransaction
    RemoveCheckpoint(id=[7bf5b948-b54a-4fbc-824c-e81579076823], mayHavePersistentResults=false)
    PersistDeduplicationFacts(deduplicationHandlers=[net.corda.testing.node.internal.MockNodeMessagingService$InMemoryDeduplicationHandler@7c7b7642])
    ReleaseSoftLocks(uuid=7bf5b948-b54a-4fbc-824c-e81579076823)
    CommitTransaction
    AcknowledgeMessages(deduplicationHandlers=[net.corda.testing.node.internal.MockNodeMessagingService$InMemoryDeduplicationHandler@7c7b7642])
    RemoveSessionBindings(sessionIds=[SessionId(toLong=7106756066069934968)])
    RemoveFlow(flowId=[7bf5b948-b54a-4fbc-824c-e81579076823], removalReason=ErrorFinish(flowErrors=[FlowError(errorId=-1030127781405848252, exception=java.lang.IllegalArgumentException: Could not find Party for Anonymous(DL7NADKtqU5PmNXGD9KWJDFeD3KHgKi6ypBkpS9xb44xBz))]), lastState=StateMachineState(checkpoint=Checkpoint(checkpointState=CheckpointState(invocationContext=InvocationContext(origin=RPC(actor=Actor(id=Id(value=Only For Testing), serviceId=AuthServiceId(value=TEST), owningLegalIdentity=O=Mock Company 1, L=London, C=GB)), trace=Trace(invocationId=a0b12bd2-1f3d-4173-941b-1db3cba99f9d, timestamp: 2023-01-31T07:18:18.538Z, entityType: Invocation, sessionId=a0b12bd2-1f3d-4173-941b-1db3cba99f9d, timestamp: 2023-01-31T07:18:18.538Z, entityType: Session), actor=Actor(id=Id(value=Only For Testing), serviceId=AuthServiceId(value=TEST), owningLegalIdentity=O=Mock Company 1, L=London, C=GB), externalTrace=null, impersonatedActor=null, arguments=[], clientId=null), ourIdentity=O=Mock Company 1, L=London, C=GB, sessions={SessionId(toLong=7106756066069934968)=Initiated(peerParty=O=Mock Company 3, L=London, C=GB, peerFlowInfo=FlowInfo(flowVersion=1, appName=<unknown>), receivedMessages=[], otherSideErrored=false, peerSinkSessionId=SessionId(toLong=-7881500851533551462), deduplicationSeed=R-7106756066069934968-4795262264991213571)}, sessionsToBeClosed=[], subFlowStack=[Initiating(flowClass=class net.corda.samples.obligation.flows.IOUSettleFlow, classToInitiateWith=class net.corda.samples.obligation.flows.IOUSettleFlow, flowInfo=FlowInfo(flowVersion=1, appName=<unknown>), subFlowVersion=CorDappFlow(platformVersion=11, corDappName=workflows-1.0, corDappHash=F8E3613207E5ABAEC38930FAA426F7BA91464AA72DAF3EFB74917A0BA71A146E), isEnabledTimedFlow=false)], numberOfSuspends=6, numberOfCommits=8), flowState=net.corda.node.services.statemachine.FlowState$Finished@1e06cf9b, errorState=Errored(errors=[FlowError(errorId=-1030127781405848252, exception=java.lang.IllegalArgumentException: Could not find Party for Anonymous(DL7NADKtqU5PmNXGD9KWJDFeD3KHgKi6ypBkpS9xb44xBz))], propagatedIndex=0, propagating=true), result=null, status=FAILED, progressStep=Starting, flowIoRequest=Receive, compatible=true), flowLogic=net.corda.samples.obligation.flows.IOUSettleFlow@703e60c0, pendingDeduplicationHandlers=[], isFlowResumed=false, isWaitingForFuture=false, future=null, isAnyCheckpointPersisted=true, isStartIdempotent=false, isRemoved=true, isKilled=false, isDead=false, senderUUID=3ae20ed2-b752-4131-be00-8b87ba4c6253, reloadCheckpointAfterSuspendCount=null, numberOfCommits=8, lock=java.util.concurrent.Semaphore@a8c6b8[Permits = 0]))
  Continuation: Abort
  Diff between previous and next state:
checkpoint.flowState: 
    Started(flowIORequest=Receive(sessions=[FlowSessionImpl(destination=O=Mock Company 3, L=London, C=GB, sourceSessionId=SessionId(toLong=7106756066069934968))]), frozenFiber=2D19A8927FC60D149A79A498C6F9E41D98715F082D0EEEE85210D3D62134377E)
    net.corda.node.services.statemachine.FlowState$Finished@1e06cf9b
checkpoint.status: 
    RUNNABLE
    FAILED
checkpoint.checkpointState.numberOfCommits: 
    7
    8
checkpoint.timestamp: 
    2023-01-31T07:18:19.515Z
    2023-01-31T07:18:19.545Z
numberOfCommits: 
    7
    8
isRemoved: 
    false
    true
pendingDeduplicationHandlers: 
    [net.corda.testing.node.internal.MockNodeMessagingService$InMemoryDeduplicationHandler@7c7b7642]
    []
 {actor_id=Only For Testing, actor_owning_identity=O=Mock Company 1, L=London, C=GB, actor_store_id=TEST, fiber-id=10000026, flow-id=7bf5b948-b54a-4fbc-824c-e81579076823, invocation_id=a0b12bd2-1f3d-4173-941b-1db3cba99f9d, invocation_timestamp=2023-01-31T07:18:18.538Z, origin=Only For Testing, session_id=a0b12bd2-1f3d-4173-941b-1db3cba99f9d, session_timestamp=2023-01-31T07:18:18.538Z, thread-id=854, tx_id=05C00A07D836886589D1648346F3DFE14725CFEC3E8E68B19135B8905C73DF47}
[WARN ] 2023-01-31T07:18:19,641Z [Mock network] interceptors.DumpHistoryOnErrorInterceptor. - Flow [7bf5b948-b54a-4fbc-824c-e81579076823] error {actor_id=Only For Testing, actor_owning_identity=O=Mock Company 1, L=London, C=GB, actor_store_id=TEST, fiber-id=10000026, flow-id=7bf5b948-b54a-4fbc-824c-e81579076823, invocation_id=a0b12bd2-1f3d-4173-941b-1db3cba99f9d, invocation_timestamp=2023-01-31T07:18:18.538Z, origin=Only For Testing, session_id=a0b12bd2-1f3d-4173-941b-1db3cba99f9d, session_timestamp=2023-01-31T07:18:18.538Z, thread-id=854, tx_id=05C00A07D836886589D1648346F3DFE14725CFEC3E8E68B19135B8905C73DF47}
java.lang.IllegalArgumentException: Could not find Party for Anonymous(DL7NADKtqU5PmNXGD9KWJDFeD3KHgKi6ypBkpS9xb44xBz)
	at net.corda.core.identity.IdentityUtils.groupAbstractPartyByWellKnownParty(IdentityUtils.kt:47) ~[corda-core-4.9.jar:?]
	at net.corda.core.identity.IdentityUtils.groupAbstractPartyByWellKnownParty(IdentityUtils.kt:63) ~[corda-core-4.9.jar:?]
	at net.corda.core.flows.FinalityFlow.extractExternalParticipants(FinalityFlow.kt:252) ~[corda-core-4.9.jar:?]
	at net.corda.core.flows.FinalityFlow.call(FinalityFlow.kt:162) ~[corda-core-4.9.jar:?]
	at net.corda.core.flows.FinalityFlow.call(FinalityFlow.kt:43) ~[corda-core-4.9.jar:?]
	at net.corda.node.services.statemachine.FlowStateMachineImpl.subFlow(FlowStateMachineImpl.kt:420) ~[corda-node-4.9.jar:?]
	at net.corda.core.flows.FlowLogic.subFlow(FlowLogic.kt:409) ~[corda-core-4.9.jar:?]
	at net.corda.samples.obligation.flows.IOUSettleFlow.call(IOUSettleFlow.kt:116) ~[main/:?]
	at net.corda.samples.obligation.flows.IOUSettleFlow.call(IOUSettleFlow.kt:30) ~[main/:?]
	at net.corda.node.services.statemachine.FlowStateMachineImpl.run(FlowStateMachineImpl.kt:349) ~[corda-node-4.9.jar:?]
	at net.corda.node.services.statemachine.FlowStateMachineImpl.run(FlowStateMachineImpl.kt:71) ~[corda-node-4.9.jar:?]
	at co.paralleluniverse.fibers.Fiber.run1(Fiber.java:1092) ~[quasar-core-0.7.10.jar:0.7.10]
	at co.paralleluniverse.fibers.Fiber.exec(Fiber.java:788) ~[quasar-core-0.7.10.jar:0.7.10]
	at co.paralleluniverse.fibers.RunnableFiberTask.doExec(RunnableFiberTask.java:100) ~[quasar-core-0.7.10.jar:0.7.10]
	at co.paralleluniverse.fibers.RunnableFiberTask.run(RunnableFiberTask.java:91) ~[quasar-core-0.7.10.jar:0.7.10]
	at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511) ~[?:1.8.0_202]
	at java.util.concurrent.FutureTask.run(FutureTask.java:266) ~[?:1.8.0_202]
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.access$201(ScheduledThreadPoolExecutor.java:180) ~[?:1.8.0_202]
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.run(ScheduledThreadPoolExecutor.java:293) ~[?:1.8.0_202]
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149) ~[?:1.8.0_202]
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624) ~[?:1.8.0_202]
	at net.corda.node.utilities.AffinityExecutor$ServiceAffinityExecutor$1$thread$1.run(AffinityExecutor.kt:63) ~[corda-node-4.9.jar:?]
[INFO ] 2023-01-31T07:18:19,643Z [Mock network] corda.flow. - Flow raised an error: Counter-flow errored. Sending it to flow hospital to be triaged. {fiber-id=10000028, flow-id=65465552-2f28-4612-9b7f-4600ccd28d15, invocation_id=3e61d329-451f-4c54-becb-c2c3cfdaaa1c, invocation_timestamp=2023-01-31T07:18:19.081Z, origin=O=Mock Company 1, L=London, C=GB, session_id=3e61d329-451f-4c54-becb-c2c3cfdaaa1c, session_timestamp=2023-01-31T07:18:19.081Z, thread-id=854, tx_id=05C00A07D836886589D1648346F3DFE14725CFEC3E8E68B19135B8905C73DF47}
[INFO ] 2023-01-31T07:18:19,644Z [Mock network] statemachine.StaffedFlowHospital. - Flow [65465552-2f28-4612-9b7f-4600ccd28d15] admitted to hospital in state StateMachineState(checkpoint=Checkpoint(checkpointState=CheckpointState(invocationContext=InvocationContext(origin=Peer(party=O=Mock Company 1, L=London, C=GB), trace=Trace(invocationId=3e61d329-451f-4c54-becb-c2c3cfdaaa1c, timestamp: 2023-01-31T07:18:19.081Z, entityType: Invocation, sessionId=3e61d329-451f-4c54-becb-c2c3cfdaaa1c, timestamp: 2023-01-31T07:18:19.081Z, entityType: Session), actor=null, externalTrace=null, impersonatedActor=null, arguments=[], clientId=null), ourIdentity=O=Mock Company 3, L=London, C=GB, sessions={SessionId(toLong=-7881500851533551462)=Initiated(peerParty=O=Mock Company 1, L=London, C=GB, peerFlowInfo=FlowInfo(flowVersion=1, appName=<unknown>), receivedMessages=[], otherSideErrored=true, peerSinkSessionId=SessionId(toLong=7106756066069934968), deduplicationSeed=D-7106756066069934968-4795262264991213571)}, sessionsToBeClosed=[], subFlowStack=[Inlined(flowClass=class net.corda.samples.obligation.flows.IOUSettleFlowResponder, subFlowVersion=CorDappFlow(platformVersion=11, corDappName=workflows-1.0, corDappHash=F8E3613207E5ABAEC38930FAA426F7BA91464AA72DAF3EFB74917A0BA71A146E), isEnabledTimedFlow=false)], numberOfSuspends=7, numberOfCommits=8), flowState=Started(flowIORequest=Receive(sessions=[FlowSessionImpl(destination=O=Mock Company 1, L=London, C=GB, sourceSessionId=SessionId(toLong=-7881500851533551462))]), frozenFiber=3897378BDF84ACD165BF765D5F3554B0450D320BF3026C1017658349E9DC7F62), errorState=Clean, result=null, status=RUNNABLE, progressStep=Starting, flowIoRequest=Receive, compatible=true), flowLogic=net.corda.samples.obligation.flows.IOUSettleFlowResponder@8e2e06, pendingDeduplicationHandlers=[net.corda.testing.node.internal.MockNodeMessagingService$InMemoryDeduplicationHandler@5ef40921], isFlowResumed=true, isWaitingForFuture=false, future=null, isAnyCheckpointPersisted=true, isStartIdempotent=false, isRemoved=false, isKilled=false, isDead=false, senderUUID=5e9b81e5-439f-421e-bc83-def5a58fd155, reloadCheckpointAfterSuspendCount=null, numberOfCommits=8, lock=java.util.concurrent.Semaphore@6637a9cb[Permits = 0]) {fiber-id=10000028, flow-id=65465552-2f28-4612-9b7f-4600ccd28d15, invocation_id=3e61d329-451f-4c54-becb-c2c3cfdaaa1c, invocation_timestamp=2023-01-31T07:18:19.081Z, origin=O=Mock Company 1, L=London, C=GB, session_id=3e61d329-451f-4c54-becb-c2c3cfdaaa1c, session_timestamp=2023-01-31T07:18:19.081Z, thread-id=854, tx_id=05C00A07D836886589D1648346F3DFE14725CFEC3E8E68B19135B8905C73DF47}
[INFO ] 2023-01-31T07:18:19,644Z [Mock network] statemachine.StaffedFlowHospital. - Error 1 of 1: {fiber-id=10000028, flow-id=65465552-2f28-4612-9b7f-4600ccd28d15, invocation_id=3e61d329-451f-4c54-becb-c2c3cfdaaa1c, invocation_timestamp=2023-01-31T07:18:19.081Z, origin=O=Mock Company 1, L=London, C=GB, session_id=3e61d329-451f-4c54-becb-c2c3cfdaaa1c, session_timestamp=2023-01-31T07:18:19.081Z, thread-id=854, tx_id=05C00A07D836886589D1648346F3DFE14725CFEC3E8E68B19135B8905C73DF47}
net.corda.core.flows.UnexpectedFlowEndException: Counter-flow errored
	at Received unexpected counter-flow exception from peer O=Mock Company 1, L=London, C=GB.() ~[?:?]
	at net.corda.node.services.statemachine.FlowStateMachineImpl.fillInLocalStackTrace(FlowStateMachineImpl.kt:244) ~[corda-node-4.9.jar:?]
	at net.corda.node.services.statemachine.FlowStateMachineImpl.processEventsUntilFlowIsResumed(FlowStateMachineImpl.kt:225) ~[corda-node-4.9.jar:?]
	at net.corda.node.services.statemachine.FlowStateMachineImpl.suspend(FlowStateMachineImpl.kt:577) ~[corda-node-4.9.jar:?]
	at net.corda.node.services.statemachine.FlowSessionImpl.receive(FlowSessionImpl.kt:67) ~[corda-node-4.9.jar:?]
	at net.corda.node.services.statemachine.FlowSessionImpl.receive(FlowSessionImpl.kt:71) ~[corda-node-4.9.jar:?]
	at net.corda.core.flows.ReceiveTransactionFlow.call(ReceiveTransactionFlow.kt:103) ~[corda-core-4.9.jar:?]
	at net.corda.core.flows.ReceiveTransactionFlow.call(ReceiveTransactionFlow.kt:31) ~[corda-core-4.9.jar:?]
	at net.corda.node.services.statemachine.FlowStateMachineImpl.subFlow(FlowStateMachineImpl.kt:420) ~[corda-node-4.9.jar:?]
	at net.corda.core.flows.FlowLogic.subFlow(FlowLogic.kt:409) ~[corda-core-4.9.jar:?]
	at net.corda.core.flows.ReceiveFinalityFlow.call(FinalityFlow.kt:285) ~[corda-core-4.9.jar:?]
	at net.corda.core.flows.ReceiveFinalityFlow.call(FinalityFlow.kt:280) ~[corda-core-4.9.jar:?]
	at net.corda.node.services.statemachine.FlowStateMachineImpl.subFlow(FlowStateMachineImpl.kt:420) ~[corda-node-4.9.jar:?]
	at net.corda.core.flows.FlowLogic.subFlow(FlowLogic.kt:409) ~[corda-core-4.9.jar:?]
	at net.corda.samples.obligation.flows.IOUSettleFlowResponder.call(IOUSettleFlow.kt:139) ~[main/:?]
	at net.corda.samples.obligation.flows.IOUSettleFlowResponder.call(IOUSettleFlow.kt:126) ~[main/:?]
	at net.corda.node.services.statemachine.FlowStateMachineImpl.run(FlowStateMachineImpl.kt:349) ~[corda-node-4.9.jar:?]
	at net.corda.node.services.statemachine.FlowStateMachineImpl.run(FlowStateMachineImpl.kt:71) ~[corda-node-4.9.jar:?]
	at co.paralleluniverse.fibers.Fiber.run1(Fiber.java:1092) ~[quasar-core-0.7.10.jar:0.7.10]
	at co.paralleluniverse.fibers.Fiber.exec(Fiber.java:788) ~[quasar-core-0.7.10.jar:0.7.10]
	at co.paralleluniverse.fibers.RunnableFiberTask.doExec(RunnableFiberTask.java:100) ~[quasar-core-0.7.10.jar:0.7.10]
	at co.paralleluniverse.fibers.RunnableFiberTask.run(RunnableFiberTask.java:91) ~[quasar-core-0.7.10.jar:0.7.10]
	at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511) ~[?:1.8.0_202]
	at java.util.concurrent.FutureTask.run(FutureTask.java:266) ~[?:1.8.0_202]
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.access$201(ScheduledThreadPoolExecutor.java:180) ~[?:1.8.0_202]
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.run(ScheduledThreadPoolExecutor.java:293) ~[?:1.8.0_202]
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149) ~[?:1.8.0_202]
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624) ~[?:1.8.0_202]
	at net.corda.node.utilities.AffinityExecutor$ServiceAffinityExecutor$1$thread$1.run(AffinityExecutor.kt:63) ~[corda-node-4.9.jar:?]
[INFO ] 2023-01-31T07:18:19,645Z [Mock network] statemachine.StaffedFlowHospital. - Flow error allowed to propagate {fiber-id=10000028, flow-id=65465552-2f28-4612-9b7f-4600ccd28d15, invocation_id=3e61d329-451f-4c54-becb-c2c3cfdaaa1c, invocation_timestamp=2023-01-31T07:18:19.081Z, origin=O=Mock Company 1, L=London, C=GB, session_id=3e61d329-451f-4c54-becb-c2c3cfdaaa1c, session_timestamp=2023-01-31T07:18:19.081Z, thread-id=854, tx_id=05C00A07D836886589D1648346F3DFE14725CFEC3E8E68B19135B8905C73DF47}
net.corda.core.flows.UnexpectedFlowEndException: Counter-flow errored
	at Received unexpected counter-flow exception from peer O=Mock Company 1, L=London, C=GB.() ~[?:?]
	at net.corda.node.services.statemachine.FlowStateMachineImpl.fillInLocalStackTrace(FlowStateMachineImpl.kt:244) ~[corda-node-4.9.jar:?]
	at net.corda.node.services.statemachine.FlowStateMachineImpl.processEventsUntilFlowIsResumed(FlowStateMachineImpl.kt:225) ~[corda-node-4.9.jar:?]
	at net.corda.node.services.statemachine.FlowStateMachineImpl.suspend(FlowStateMachineImpl.kt:577) ~[corda-node-4.9.jar:?]
	at net.corda.node.services.statemachine.FlowSessionImpl.receive(FlowSessionImpl.kt:67) ~[corda-node-4.9.jar:?]
	at net.corda.node.services.statemachine.FlowSessionImpl.receive(FlowSessionImpl.kt:71) ~[corda-node-4.9.jar:?]
	at net.corda.core.flows.ReceiveTransactionFlow.call(ReceiveTransactionFlow.kt:103) ~[corda-core-4.9.jar:?]
	at net.corda.core.flows.ReceiveTransactionFlow.call(ReceiveTransactionFlow.kt:31) ~[corda-core-4.9.jar:?]
	at net.corda.node.services.statemachine.FlowStateMachineImpl.subFlow(FlowStateMachineImpl.kt:420) ~[corda-node-4.9.jar:?]
	at net.corda.core.flows.FlowLogic.subFlow(FlowLogic.kt:409) ~[corda-core-4.9.jar:?]
	at net.corda.core.flows.ReceiveFinalityFlow.call(FinalityFlow.kt:285) ~[corda-core-4.9.jar:?]
	at net.corda.core.flows.ReceiveFinalityFlow.call(FinalityFlow.kt:280) ~[corda-core-4.9.jar:?]
	at net.corda.node.services.statemachine.FlowStateMachineImpl.subFlow(FlowStateMachineImpl.kt:420) ~[corda-node-4.9.jar:?]
	at net.corda.core.flows.FlowLogic.subFlow(FlowLogic.kt:409) ~[corda-core-4.9.jar:?]
	at net.corda.samples.obligation.flows.IOUSettleFlowResponder.call(IOUSettleFlow.kt:139) ~[main/:?]
	at net.corda.samples.obligation.flows.IOUSettleFlowResponder.call(IOUSettleFlow.kt:126) ~[main/:?]
	at net.corda.node.services.statemachine.FlowStateMachineImpl.run(FlowStateMachineImpl.kt:349) ~[corda-node-4.9.jar:?]
	at net.corda.node.services.statemachine.FlowStateMachineImpl.run(FlowStateMachineImpl.kt:71) ~[corda-node-4.9.jar:?]
	at co.paralleluniverse.fibers.Fiber.run1(Fiber.java:1092) ~[quasar-core-0.7.10.jar:0.7.10]
	at co.paralleluniverse.fibers.Fiber.exec(Fiber.java:788) ~[quasar-core-0.7.10.jar:0.7.10]
	at co.paralleluniverse.fibers.RunnableFiberTask.doExec(RunnableFiberTask.java:100) ~[quasar-core-0.7.10.jar:0.7.10]
	at co.paralleluniverse.fibers.RunnableFiberTask.run(RunnableFiberTask.java:91) ~[quasar-core-0.7.10.jar:0.7.10]
	at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511) ~[?:1.8.0_202]
	at java.util.concurrent.FutureTask.run(FutureTask.java:266) ~[?:1.8.0_202]
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.access$201(ScheduledThreadPoolExecutor.java:180) ~[?:1.8.0_202]
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.run(ScheduledThreadPoolExecutor.java:293) ~[?:1.8.0_202]
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149) ~[?:1.8.0_202]
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624) ~[?:1.8.0_202]
	at net.corda.node.utilities.AffinityExecutor$ServiceAffinityExecutor$1$thread$1.run(AffinityExecutor.kt:63) ~[corda-node-4.9.jar:?]
[WARN ] 2023-01-31T07:18:19,658Z [Mock network] interceptors.DumpHistoryOnErrorInterceptor. - Flow [65465552-2f28-4612-9b7f-4600ccd28d15] errored, dumping all transitions:

 --- Transition of flow [65465552-2f28-4612-9b7f-4600ccd28d15] ---
  Timestamp: 2023-01-31T07:18:19.087Z
  Event: DoRemainingWork
  Actions: 
    CreateTransaction
    PersistCheckpoint(id=[65465552-2f28-4612-9b7f-4600ccd28d15], checkpoint=Checkpoint(checkpointState=CheckpointState(invocationContext=InvocationContext(origin=Peer(party=O=Mock Company 1, L=London, C=GB), trace=Trace(invocationId=3e61d329-451f-4c54-becb-c2c3cfdaaa1c, timestamp: 2023-01-31T07:18:19.081Z, entityType: Invocation, sessionId=3e61d329-451f-4c54-becb-c2c3cfdaaa1c, timestamp: 2023-01-31T07:18:19.081Z, entityType: Session), actor=null, externalTrace=null, impersonatedActor=null, arguments=[], clientId=null), ourIdentity=O=Mock Company 3, L=London, C=GB, sessions={}, sessionsToBeClosed=[], subFlowStack=[Inlined(flowClass=class net.corda.samples.obligation.flows.IOUSettleFlowResponder, subFlowVersion=CorDappFlow(platformVersion=11, corDappName=workflows-1.0, corDappHash=F8E3613207E5ABAEC38930FAA426F7BA91464AA72DAF3EFB74917A0BA71A146E), isEnabledTimedFlow=false)], numberOfSuspends=0, numberOfCommits=1), flowState=Unstarted(flowStart=Initiated, frozenFlowLogic=A795C23AF2C2C968B413E1B38F6B190AEB35ADFDEC5ACC3B38D17B9E941EA735), errorState=Clean, result=null, status=RUNNABLE, progressStep=null, flowIoRequest=null, compatible=true), isCheckpointUpdate=false)
    PersistDeduplicationFacts(deduplicationHandlers=[net.corda.testing.node.internal.MockNodeMessagingService$InMemoryDeduplicationHandler@2d029871])
    CommitTransaction
    AcknowledgeMessages(deduplicationHandlers=[net.corda.testing.node.internal.MockNodeMessagingService$InMemoryDeduplicationHandler@2d029871])
    SignalFlowHasStarted(flowId=[65465552-2f28-4612-9b7f-4600ccd28d15])
    SendExisting(peerParty=O=Mock Company 1, L=London, C=GB, message=ExistingSessionMessage(recipientSessionId=SessionId(toLong=7106756066069934968), payload=ConfirmSessionMessage(initiatedSessionId=SessionId(toLong=-7881500851533551462), initiatedFlowInfo=FlowInfo(flowVersion=1, appName=<unknown>))), deduplicationId=SenderDeduplicationId(deduplicationId=DeduplicationId(toString=N-D-7106756066069934968-4795262264991213571-0-0), senderUUID=5e9b81e5-439f-421e-bc83-def5a58fd155))
    CreateTransaction
  Continuation: Resume(result=null)
  Diff between previous and next state:
checkpoint.checkpointState.sessions.SessionId(toLong=-7881500851533551462): 
    null
    Initiated(peerParty=O=Mock Company 1, L=London, C=GB, peerFlowInfo=FlowInfo(flowVersion=1, appName=<unknown>), receivedMessages=[DataSessionMessage(payload=class net.corda.core.serialization.SerializedBytes)], otherSideErrored=false, peerSinkSessionId=SessionId(toLong=7106756066069934968), deduplicationSeed=D-7106756066069934968-4795262264991213571)
checkpoint.timestamp: 
    2023-01-31T07:18:19.082Z
    2023-01-31T07:18:19.083Z
isAnyCheckpointPersisted: 
    false
    true
isFlowResumed: 
    false
    true
pendingDeduplicationHandlers: 
    [net.corda.testing.node.internal.MockNodeMessagingService$InMemoryDeduplicationHandler@2d029871]
    []


 --- Transition of flow [65465552-2f28-4612-9b7f-4600ccd28d15] ---
  Timestamp: 2023-01-31T07:18:19.090Z
  Event: EnterSubFlow(subFlowClass=class net.corda.samples.obligation.flows.IOUSettleFlowResponder$call$signedTransactionFlow$1, subFlowVersion=CoreFlow(platformVersion=11), isEnabledTimedFlow=false)
  Actions: 
    
  Continuation: ProcessEvents
  Diff between previous and next state:
checkpoint.checkpointState.subFlowStack: 
    [Inlined(flowClass=class net.corda.samples.obligation.flows.IOUSettleFlowResponder, subFlowVersion=CorDappFlow(platformVersion=11, corDappName=workflows-1.0, corDappHash=F8E3613207E5ABAEC38930FAA426F7BA91464AA72DAF3EFB74917A0BA71A146E), isEnabledTimedFlow=false)]
    [Inlined(flowClass=class net.corda.samples.obligation.flows.IOUSettleFlowResponder, subFlowVersion=CorDappFlow(platformVersion=11, corDappName=workflows-1.0, corDappHash=F8E3613207E5ABAEC38930FAA426F7BA91464AA72DAF3EFB74917A0BA71A146E), isEnabledTimedFlow=false), Inlined(flowClass=class net.corda.samples.obligation.flows.IOUSettleFlowResponder$call$signedTransactionFlow$1, subFlowVersion=CoreFlow(platformVersion=11), isEnabledTimedFlow=false)]
checkpoint.timestamp: 
    2023-01-31T07:18:19.083Z
    2023-01-31T07:18:19.090Z


 --- Transition of flow [65465552-2f28-4612-9b7f-4600ccd28d15] ---
  Timestamp: 2023-01-31T07:18:19.091Z
  Event: EnterSubFlow(subFlowClass=class net.corda.core.flows.ReceiveTransactionFlow, subFlowVersion=CoreFlow(platformVersion=11), isEnabledTimedFlow=false)
  Actions: 
    
  Continuation: ProcessEvents
  Diff between previous and next state:
checkpoint.checkpointState.subFlowStack: 
    [Inlined(flowClass=class net.corda.samples.obligation.flows.IOUSettleFlowResponder, subFlowVersion=CorDappFlow(platformVersion=11, corDappName=workflows-1.0, corDappHash=F8E3613207E5ABAEC38930FAA426F7BA91464AA72DAF3EFB74917A0BA71A146E), isEnabledTimedFlow=false), Inlined(flowClass=class net.corda.samples.obligation.flows.IOUSettleFlowResponder$call$signedTransactionFlow$1, subFlowVersion=CoreFlow(platformVersion=11), isEnabledTimedFlow=false)]
    [Inlined(flowClass=class net.corda.samples.obligation.flows.IOUSettleFlowResponder, subFlowVersion=CorDappFlow(platformVersion=11, corDappName=workflows-1.0, corDappHash=F8E3613207E5ABAEC38930FAA426F7BA91464AA72DAF3EFB74917A0BA71A146E), isEnabledTimedFlow=false), Inlined(flowClass=class net.corda.samples.obligation.flows.IOUSettleFlowResponder$call$signedTransactionFlow$1, subFlowVersion=CoreFlow(platformVersion=11), isEnabledTimedFlow=false), Inlined(flowClass=class net.corda.core.flows.ReceiveTransactionFlow, subFlowVersion=CoreFlow(platformVersion=11), isEnabledTimedFlow=false)]
checkpoint.timestamp: 
    2023-01-31T07:18:19.090Z
    2023-01-31T07:18:19.091Z


 --- Transition of flow [65465552-2f28-4612-9b7f-4600ccd28d15] ---
  Timestamp: 2023-01-31T07:18:19.096Z
  Event: Suspend(ioRequest=Receive(sessions=[FlowSessionImpl(destination=O=Mock Company 1, L=London, C=GB, sourceSessionId=SessionId(toLong=-7881500851533551462))]), maySkipCheckpoint=false, fiber=1FD5453BA34F1C626549B753D35C1AEFAADB657A7D85C5BDA7040F35B221D7AB, currentStep=Starting)
  Actions: 
    PersistCheckpoint(id=[65465552-2f28-4612-9b7f-4600ccd28d15], checkpoint=Checkpoint(checkpointState=CheckpointState(invocationContext=InvocationContext(origin=Peer(party=O=Mock Company 1, L=London, C=GB), trace=Trace(invocationId=3e61d329-451f-4c54-becb-c2c3cfdaaa1c, timestamp: 2023-01-31T07:18:19.081Z, entityType: Invocation, sessionId=3e61d329-451f-4c54-becb-c2c3cfdaaa1c, timestamp: 2023-01-31T07:18:19.081Z, entityType: Session), actor=null, externalTrace=null, impersonatedActor=null, arguments=[], clientId=null), ourIdentity=O=Mock Company 3, L=London, C=GB, sessions={SessionId(toLong=-7881500851533551462)=Initiated(peerParty=O=Mock Company 1, L=London, C=GB, peerFlowInfo=FlowInfo(flowVersion=1, appName=<unknown>), receivedMessages=[DataSessionMessage(payload=class net.corda.core.serialization.SerializedBytes)], otherSideErrored=false, peerSinkSessionId=SessionId(toLong=7106756066069934968), deduplicationSeed=D-7106756066069934968-4795262264991213571)}, sessionsToBeClosed=[], subFlowStack=[Inlined(flowClass=class net.corda.samples.obligation.flows.IOUSettleFlowResponder, subFlowVersion=CorDappFlow(platformVersion=11, corDappName=workflows-1.0, corDappHash=F8E3613207E5ABAEC38930FAA426F7BA91464AA72DAF3EFB74917A0BA71A146E), isEnabledTimedFlow=false), Inlined(flowClass=class net.corda.samples.obligation.flows.IOUSettleFlowResponder$call$signedTransactionFlow$1, subFlowVersion=CoreFlow(platformVersion=11), isEnabledTimedFlow=false), Inlined(flowClass=class net.corda.core.flows.ReceiveTransactionFlow, subFlowVersion=CoreFlow(platformVersion=11), isEnabledTimedFlow=false)], numberOfSuspends=1, numberOfCommits=2), flowState=Started(flowIORequest=Receive(sessions=[FlowSessionImpl(destination=O=Mock Company 1, L=London, C=GB, sourceSessionId=SessionId(toLong=-7881500851533551462))]), frozenFiber=1FD5453BA34F1C626549B753D35C1AEFAADB657A7D85C5BDA7040F35B221D7AB), errorState=Clean, result=null, status=RUNNABLE, progressStep=Starting, flowIoRequest=Receive, compatible=true), isCheckpointUpdate=true)
    PersistDeduplicationFacts(deduplicationHandlers=[])
    CommitTransaction
    AcknowledgeMessages(deduplicationHandlers=[])
    ScheduleEvent(event=DoRemainingWork)
  Continuation: ProcessEvents
  Diff between previous and next state:
checkpoint.flowState: 
    Unstarted(flowStart=Initiated, frozenFlowLogic=A795C23AF2C2C968B413E1B38F6B190AEB35ADFDEC5ACC3B38D17B9E941EA735)
    Started(flowIORequest=Receive(sessions=[FlowSessionImpl(destination=O=Mock Company 1, L=London, C=GB, sourceSessionId=SessionId(toLong=-7881500851533551462))]), frozenFiber=1FD5453BA34F1C626549B753D35C1AEFAADB657A7D85C5BDA7040F35B221D7AB)
checkpoint.flowIoRequest: 
    null
    Receive
checkpoint.checkpointState.numberOfSuspends: 
    0
    1
checkpoint.checkpointState.numberOfCommits: 
    1
    2
checkpoint.progressStep: 
    null
    Starting
checkpoint.timestamp: 
    2023-01-31T07:18:19.091Z
    2023-01-31T07:18:19.093Z
numberOfCommits: 
    0
    2
isFlowResumed: 
    true
    false


 --- Transition of flow [65465552-2f28-4612-9b7f-4600ccd28d15] ---
  Timestamp: 2023-01-31T07:18:19.096Z
  Event: DoRemainingWork
  Actions: 
    CreateTransaction
  Continuation: Resume(result=class java.util.LinkedHashMap)
  Diff between previous and next state:
checkpoint.checkpointState.sessions.SessionId(toLong=-7881500851533551462).receivedMessages.isEmpty: 
    false
    true
checkpoint.timestamp: 
    2023-01-31T07:18:19.093Z
    2023-01-31T07:18:19.096Z
isFlowResumed: 
    false
    true


 --- Transition of flow [65465552-2f28-4612-9b7f-4600ccd28d15] ---
  Timestamp: 2023-01-31T07:18:19.099Z
  Event: EnterSubFlow(subFlowClass=class net.corda.core.internal.ResolveTransactionsFlow, subFlowVersion=CoreFlow(platformVersion=11), isEnabledTimedFlow=false)
  Actions: 
    
  Continuation: ProcessEvents
  Diff between previous and next state:
checkpoint.checkpointState.subFlowStack: 
    [Inlined(flowClass=class net.corda.samples.obligation.flows.IOUSettleFlowResponder, subFlowVersion=CorDappFlow(platformVersion=11, corDappName=workflows-1.0, corDappHash=F8E3613207E5ABAEC38930FAA426F7BA91464AA72DAF3EFB74917A0BA71A146E), isEnabledTimedFlow=false), Inlined(flowClass=class net.corda.samples.obligation.flows.IOUSettleFlowResponder$call$signedTransactionFlow$1, subFlowVersion=CoreFlow(platformVersion=11), isEnabledTimedFlow=false), Inlined(flowClass=class net.corda.core.flows.ReceiveTransactionFlow, subFlowVersion=CoreFlow(platformVersion=11), isEnabledTimedFlow=false)]
    [Inlined(flowClass=class net.corda.samples.obligation.flows.IOUSettleFlowResponder, subFlowVersion=CorDappFlow(platformVersion=11, corDappName=workflows-1.0, corDappHash=F8E3613207E5ABAEC38930FAA426F7BA91464AA72DAF3EFB74917A0BA71A146E), isEnabledTimedFlow=false), Inlined(flowClass=class net.corda.samples.obligation.flows.IOUSettleFlowResponder$call$signedTransactionFlow$1, subFlowVersion=CoreFlow(platformVersion=11), isEnabledTimedFlow=false), Inlined(flowClass=class net.corda.core.flows.ReceiveTransactionFlow, subFlowVersion=CoreFlow(platformVersion=11), isEnabledTimedFlow=false), Inlined(flowClass=class net.corda.core.internal.ResolveTransactionsFlow, subFlowVersion=CoreFlow(platformVersion=11), isEnabledTimedFlow=false)]
checkpoint.timestamp: 
    2023-01-31T07:18:19.096Z
    2023-01-31T07:18:19.099Z


 --- Transition of flow [65465552-2f28-4612-9b7f-4600ccd28d15] ---
  Timestamp: 2023-01-31T07:18:19.099Z
  Event: EnterSubFlow(subFlowClass=class net.corda.core.internal.FetchAttachmentsFlow, subFlowVersion=CoreFlow(platformVersion=11), isEnabledTimedFlow=false)
  Actions: 
    
  Continuation: ProcessEvents
  Diff between previous and next state:
checkpoint.checkpointState.subFlowStack: 
    [Inlined(flowClass=class net.corda.samples.obligation.flows.IOUSettleFlowResponder, subFlowVersion=CorDappFlow(platformVersion=11, corDappName=workflows-1.0, corDappHash=F8E3613207E5ABAEC38930FAA426F7BA91464AA72DAF3EFB74917A0BA71A146E), isEnabledTimedFlow=false), Inlined(flowClass=class net.corda.samples.obligation.flows.IOUSettleFlowResponder$call$signedTransactionFlow$1, subFlowVersion=CoreFlow(platformVersion=11), isEnabledTimedFlow=false), Inlined(flowClass=class net.corda.core.flows.ReceiveTransactionFlow, subFlowVersion=CoreFlow(platformVersion=11), isEnabledTimedFlow=false), Inlined(flowClass=class net.corda.core.internal.ResolveTransactionsFlow, subFlowVersion=CoreFlow(platformVersion=11), isEnabledTimedFlow=false)]
    [Inlined(flowClass=class net.corda.samples.obligation.flows.IOUSettleFlowResponder, subFlowVersion=CorDappFlow(platformVersion=11, corDappName=workflows-1.0, corDappHash=F8E3613207E5ABAEC38930FAA426F7BA91464AA72DAF3EFB74917A0BA71A146E), isEnabledTimedFlow=false), Inlined(flowClass=class net.corda.samples.obligation.flows.IOUSettleFlowResponder$call$signedTransactionFlow$1, subFlowVersion=CoreFlow(platformVersion=11), isEnabledTimedFlow=false), Inlined(flowClass=class net.corda.core.flows.ReceiveTransactionFlow, subFlowVersion=CoreFlow(platformVersion=11), isEnabledTimedFlow=false), Inlined(flowClass=class net.corda.core.internal.ResolveTransactionsFlow, subFlowVersion=CoreFlow(platformVersion=11), isEnabledTimedFlow=false), Inlined(flowClass=class net.corda.core.internal.FetchAttachmentsFlow, subFlowVersion=CoreFlow(platformVersion=11), isEnabledTimedFlow=false)]


 --- Transition of flow [65465552-2f28-4612-9b7f-4600ccd28d15] ---
  Timestamp: 2023-01-31T07:18:19.102Z
  Event: LeaveSubFlow
  Actions: 
    
  Continuation: ProcessEvents
  Diff between previous and next state:
checkpoint.checkpointState.subFlowStack: 
    [Inlined(flowClass=class net.corda.samples.obligation.flows.IOUSettleFlowResponder, subFlowVersion=CorDappFlow(platformVersion=11, corDappName=workflows-1.0, corDappHash=F8E3613207E5ABAEC38930FAA426F7BA91464AA72DAF3EFB74917A0BA71A146E), isEnabledTimedFlow=false), Inlined(flowClass=class net.corda.samples.obligation.flows.IOUSettleFlowResponder$call$signedTransactionFlow$1, subFlowVersion=CoreFlow(platformVersion=11), isEnabledTimedFlow=false), Inlined(flowClass=class net.corda.core.flows.ReceiveTransactionFlow, subFlowVersion=CoreFlow(platformVersion=11), isEnabledTimedFlow=false), Inlined(flowClass=class net.corda.core.internal.ResolveTransactionsFlow, subFlowVersion=CoreFlow(platformVersion=11), isEnabledTimedFlow=false), Inlined(flowClass=class net.corda.core.internal.FetchAttachmentsFlow, subFlowVersion=CoreFlow(platformVersion=11), isEnabledTimedFlow=false)]
    [Inlined(flowClass=class net.corda.samples.obligation.flows.IOUSettleFlowResponder, subFlowVersion=CorDappFlow(platformVersion=11, corDappName=workflows-1.0, corDappHash=F8E3613207E5ABAEC38930FAA426F7BA91464AA72DAF3EFB74917A0BA71A146E), isEnabledTimedFlow=false), Inlined(flowClass=class net.corda.samples.obligation.flows.IOUSettleFlowResponder$call$signedTransactionFlow$1, subFlowVersion=CoreFlow(platformVersion=11), isEnabledTimedFlow=false), Inlined(flowClass=class net.corda.core.flows.ReceiveTransactionFlow, subFlowVersion=CoreFlow(platformVersion=11), isEnabledTimedFlow=false), Inlined(flowClass=class net.corda.core.internal.ResolveTransactionsFlow, subFlowVersion=CoreFlow(platformVersion=11), isEnabledTimedFlow=false)]
checkpoint.timestamp: 
    2023-01-31T07:18:19.099Z
    2023-01-31T07:18:19.102Z


 --- Transition of flow [65465552-2f28-4612-9b7f-4600ccd28d15] ---
  Timestamp: 2023-01-31T07:18:19.102Z
  Event: EnterSubFlow(subFlowClass=class net.corda.core.internal.FetchNetworkParametersFlow, subFlowVersion=CoreFlow(platformVersion=11), isEnabledTimedFlow=false)
  Actions: 
    
  Continuation: ProcessEvents
  Diff between previous and next state:
checkpoint.checkpointState.subFlowStack: 
    [Inlined(flowClass=class net.corda.samples.obligation.flows.IOUSettleFlowResponder, subFlowVersion=CorDappFlow(platformVersion=11, corDappName=workflows-1.0, corDappHash=F8E3613207E5ABAEC38930FAA426F7BA91464AA72DAF3EFB74917A0BA71A146E), isEnabledTimedFlow=false), Inlined(flowClass=class net.corda.samples.obligation.flows.IOUSettleFlowResponder$call$signedTransactionFlow$1, subFlowVersion=CoreFlow(platformVersion=11), isEnabledTimedFlow=false), Inlined(flowClass=class net.corda.core.flows.ReceiveTransactionFlow, subFlowVersion=CoreFlow(platformVersion=11), isEnabledTimedFlow=false), Inlined(flowClass=class net.corda.core.internal.ResolveTransactionsFlow, subFlowVersion=CoreFlow(platformVersion=11), isEnabledTimedFlow=false)]
    [Inlined(flowClass=class net.corda.samples.obligation.flows.IOUSettleFlowResponder, subFlowVersion=CorDappFlow(platformVersion=11, corDappName=workflows-1.0, corDappHash=F8E3613207E5ABAEC38930FAA426F7BA91464AA72DAF3EFB74917A0BA71A146E), isEnabledTimedFlow=false), Inlined(flowClass=class net.corda.samples.obligation.flows.IOUSettleFlowResponder$call$signedTransactionFlow$1, subFlowVersion=CoreFlow(platformVersion=11), isEnabledTimedFlow=false), Inlined(flowClass=class net.corda.core.flows.ReceiveTransactionFlow, subFlowVersion=CoreFlow(platformVersion=11), isEnabledTimedFlow=false), Inlined(flowClass=class net.corda.core.internal.ResolveTransactionsFlow, subFlowVersion=CoreFlow(platformVersion=11), isEnabledTimedFlow=false), Inlined(flowClass=class net.corda.core.internal.FetchNetworkParametersFlow, subFlowVersion=CoreFlow(platformVersion=11), isEnabledTimedFlow=false)]


 --- Transition of flow [65465552-2f28-4612-9b7f-4600ccd28d15] ---
  Timestamp: 2023-01-31T07:18:19.102Z
  Event: LeaveSubFlow
  Actions: 
    
  Continuation: ProcessEvents
  Diff between previous and next state:
checkpoint.checkpointState.subFlowStack: 
    [Inlined(flowClass=class net.corda.samples.obligation.flows.IOUSettleFlowResponder, subFlowVersion=CorDappFlow(platformVersion=11, corDappName=workflows-1.0, corDappHash=F8E3613207E5ABAEC38930FAA426F7BA91464AA72DAF3EFB74917A0BA71A146E), isEnabledTimedFlow=false), Inlined(flowClass=class net.corda.samples.obligation.flows.IOUSettleFlowResponder$call$signedTransactionFlow$1, subFlowVersion=CoreFlow(platformVersion=11), isEnabledTimedFlow=false), Inlined(flowClass=class net.corda.core.flows.ReceiveTransactionFlow, subFlowVersion=CoreFlow(platformVersion=11), isEnabledTimedFlow=false), Inlined(flowClass=class net.corda.core.internal.ResolveTransactionsFlow, subFlowVersion=CoreFlow(platformVersion=11), isEnabledTimedFlow=false), Inlined(flowClass=class net.corda.core.internal.FetchNetworkParametersFlow, subFlowVersion=CoreFlow(platformVersion=11), isEnabledTimedFlow=false)]
    [Inlined(flowClass=class net.corda.samples.obligation.flows.IOUSettleFlowResponder, subFlowVersion=CorDappFlow(platformVersion=11, corDappName=workflows-1.0, corDappHash=F8E3613207E5ABAEC38930FAA426F7BA91464AA72DAF3EFB74917A0BA71A146E), isEnabledTimedFlow=false), Inlined(flowClass=class net.corda.samples.obligation.flows.IOUSettleFlowResponder$call$signedTransactionFlow$1, subFlowVersion=CoreFlow(platformVersion=11), isEnabledTimedFlow=false), Inlined(flowClass=class net.corda.core.flows.ReceiveTransactionFlow, subFlowVersion=CoreFlow(platformVersion=11), isEnabledTimedFlow=false), Inlined(flowClass=class net.corda.core.internal.ResolveTransactionsFlow, subFlowVersion=CoreFlow(platformVersion=11), isEnabledTimedFlow=false)]


 --- Transition of flow [65465552-2f28-4612-9b7f-4600ccd28d15] ---
  Timestamp: 2023-01-31T07:18:19.102Z
  Event: EnterSubFlow(subFlowClass=class net.corda.core.internal.FetchTransactionsFlow, subFlowVersion=CoreFlow(platformVersion=11), isEnabledTimedFlow=false)
  Actions: 
    
  Continuation: ProcessEvents
  Diff between previous and next state:
checkpoint.checkpointState.subFlowStack: 
    [Inlined(flowClass=class net.corda.samples.obligation.flows.IOUSettleFlowResponder, subFlowVersion=CorDappFlow(platformVersion=11, corDappName=workflows-1.0, corDappHash=F8E3613207E5ABAEC38930FAA426F7BA91464AA72DAF3EFB74917A0BA71A146E), isEnabledTimedFlow=false), Inlined(flowClass=class net.corda.samples.obligation.flows.IOUSettleFlowResponder$call$signedTransactionFlow$1, subFlowVersion=CoreFlow(platformVersion=11), isEnabledTimedFlow=false), Inlined(flowClass=class net.corda.core.flows.ReceiveTransactionFlow, subFlowVersion=CoreFlow(platformVersion=11), isEnabledTimedFlow=false), Inlined(flowClass=class net.corda.core.internal.ResolveTransactionsFlow, subFlowVersion=CoreFlow(platformVersion=11), isEnabledTimedFlow=false)]
    [Inlined(flowClass=class net.corda.samples.obligation.flows.IOUSettleFlowResponder, subFlowVersion=CorDappFlow(platformVersion=11, corDappName=workflows-1.0, corDappHash=F8E3613207E5ABAEC38930FAA426F7BA91464AA72DAF3EFB74917A0BA71A146E), isEnabledTimedFlow=false), Inlined(flowClass=class net.corda.samples.obligation.flows.IOUSettleFlowResponder$call$signedTransactionFlow$1, subFlowVersion=CoreFlow(platformVersion=11), isEnabledTimedFlow=false), Inlined(flowClass=class net.corda.core.flows.ReceiveTransactionFlow, subFlowVersion=CoreFlow(platformVersion=11), isEnabledTimedFlow=false), Inlined(flowClass=class net.corda.core.internal.ResolveTransactionsFlow, subFlowVersion=CoreFlow(platformVersion=11), isEnabledTimedFlow=false), Inlined(flowClass=class net.corda.core.internal.FetchTransactionsFlow, subFlowVersion=CoreFlow(platformVersion=11), isEnabledTimedFlow=false)]


 --- Transition of flow [65465552-2f28-4612-9b7f-4600ccd28d15] ---
  Timestamp: 2023-01-31T07:18:19.109Z
  Event: Suspend(ioRequest=SendAndReceive({FlowSessionImpl(destination=O=Mock Company 1, L=London, C=GB, sourceSessionId=SessionId(toLong=-7881500851533551462))=FlowSessionImpl(destination=O=Mock Company 1, L=London, C=GB, sourceSessionId=SessionId(toLong=-7881500851533551462))=F7334ACA5083C32E54A2E181968AF455FC284C9C764D17306F4A0D527974B71C}, shouldRetrySend=false), maySkipCheckpoint=false, fiber=10C9014CEB637B2BB13A672B602DA6FE5767E49DE753EFA07D80AAB2AC086724, currentStep=Starting)
  Actions: 
    PersistCheckpoint(id=[65465552-2f28-4612-9b7f-4600ccd28d15], checkpoint=Checkpoint(checkpointState=CheckpointState(invocationContext=InvocationContext(origin=Peer(party=O=Mock Company 1, L=London, C=GB), trace=Trace(invocationId=3e61d329-451f-4c54-becb-c2c3cfdaaa1c, timestamp: 2023-01-31T07:18:19.081Z, entityType: Invocation, sessionId=3e61d329-451f-4c54-becb-c2c3cfdaaa1c, timestamp: 2023-01-31T07:18:19.081Z, entityType: Session), actor=null, externalTrace=null, impersonatedActor=null, arguments=[], clientId=null), ourIdentity=O=Mock Company 3, L=London, C=GB, sessions={SessionId(toLong=-7881500851533551462)=Initiated(peerParty=O=Mock Company 1, L=London, C=GB, peerFlowInfo=FlowInfo(flowVersion=1, appName=<unknown>), receivedMessages=[], otherSideErrored=false, peerSinkSessionId=SessionId(toLong=7106756066069934968), deduplicationSeed=D-7106756066069934968-4795262264991213571)}, sessionsToBeClosed=[], subFlowStack=[Inlined(flowClass=class net.corda.samples.obligation.flows.IOUSettleFlowResponder, subFlowVersion=CorDappFlow(platformVersion=11, corDappName=workflows-1.0, corDappHash=F8E3613207E5ABAEC38930FAA426F7BA91464AA72DAF3EFB74917A0BA71A146E), isEnabledTimedFlow=false), Inlined(flowClass=class net.corda.samples.obligation.flows.IOUSettleFlowResponder$call$signedTransactionFlow$1, subFlowVersion=CoreFlow(platformVersion=11), isEnabledTimedFlow=false), Inlined(flowClass=class net.corda.core.flows.ReceiveTransactionFlow, subFlowVersion=CoreFlow(platformVersion=11), isEnabledTimedFlow=false), Inlined(flowClass=class net.corda.core.internal.ResolveTransactionsFlow, subFlowVersion=CoreFlow(platformVersion=11), isEnabledTimedFlow=false), Inlined(flowClass=class net.corda.core.internal.FetchTransactionsFlow, subFlowVersion=CoreFlow(platformVersion=11), isEnabledTimedFlow=false)], numberOfSuspends=2, numberOfCommits=3), flowState=Started(flowIORequest=SendAndReceive({FlowSessionImpl(destination=O=Mock Company 1, L=London, C=GB, sourceSessionId=SessionId(toLong=-7881500851533551462))=FlowSessionImpl(destination=O=Mock Company 1, L=London, C=GB, sourceSessionId=SessionId(toLong=-7881500851533551462))=F7334ACA5083C32E54A2E181968AF455FC284C9C764D17306F4A0D527974B71C}, shouldRetrySend=false), frozenFiber=10C9014CEB637B2BB13A672B602DA6FE5767E49DE753EFA07D80AAB2AC086724), errorState=Clean, result=null, status=RUNNABLE, progressStep=Starting, flowIoRequest=SendAndReceive, compatible=true), isCheckpointUpdate=true)
    PersistDeduplicationFacts(deduplicationHandlers=[])
    CommitTransaction
    AcknowledgeMessages(deduplicationHandlers=[])
    ScheduleEvent(event=DoRemainingWork)
  Continuation: ProcessEvents
  Diff between previous and next state:
checkpoint.flowState.flowIORequest: 
    Receive(sessions=[FlowSessionImpl(destination=O=Mock Company 1, L=London, C=GB, sourceSessionId=SessionId(toLong=-7881500851533551462))])
    SendAndReceive({FlowSessionImpl(destination=O=Mock Company 1, L=London, C=GB, sourceSessionId=SessionId(toLong=-7881500851533551462))=FlowSessionImpl(destination=O=Mock Company 1, L=London, C=GB, sourceSessionId=SessionId(toLong=-7881500851533551462))=F7334ACA5083C32E54A2E181968AF455FC284C9C764D17306F4A0D527974B71C}, shouldRetrySend=false)
checkpoint.flowState.frozenFiber.hash: 
    1FD5453BA34F1C626549B753D35C1AEFAADB657A7D85C5BDA7040F35B221D7AB
    10C9014CEB637B2BB13A672B602DA6FE5767E49DE753EFA07D80AAB2AC086724
checkpoint.flowIoRequest: 
    Receive
    SendAndReceive
checkpoint.checkpointState.numberOfSuspends: 
    1
    2
checkpoint.checkpointState.numberOfCommits: 
    2
    3
checkpoint.timestamp: 
    2023-01-31T07:18:19.102Z
    2023-01-31T07:18:19.107Z
numberOfCommits: 
    2
    3
isFlowResumed: 
    true
    false


 --- Transition of flow [65465552-2f28-4612-9b7f-4600ccd28d15] ---
  Timestamp: 2023-01-31T07:18:19.110Z
  Event: DoRemainingWork
  Actions: 
    SendMultiple(sendInitial=[], sendExisting=[SendExisting(peerParty=O=Mock Company 1, L=London, C=GB, message=ExistingSessionMessage(recipientSessionId=SessionId(toLong=7106756066069934968), payload=DataSessionMessage(payload=class net.corda.core.serialization.SerializedBytes)), deduplicationId=SenderDeduplicationId(deduplicationId=DeduplicationId(toString=N-D-7106756066069934968-4795262264991213571-2-0), senderUUID=5e9b81e5-439f-421e-bc83-def5a58fd155))])
  Continuation: ProcessEvents
  Diff between previous and next state:
checkpoint.flowState.flowIORequest: 
    SendAndReceive({FlowSessionImpl(destination=O=Mock Company 1, L=London, C=GB, sourceSessionId=SessionId(toLong=-7881500851533551462))=FlowSessionImpl(destination=O=Mock Company 1, L=London, C=GB, sourceSessionId=SessionId(toLong=-7881500851533551462))=F7334ACA5083C32E54A2E181968AF455FC284C9C764D17306F4A0D527974B71C}, shouldRetrySend=false)
    Receive(sessions=[FlowSessionImpl(destination=O=Mock Company 1, L=London, C=GB, sourceSessionId=SessionId(toLong=-7881500851533551462))])
checkpoint.timestamp: 
    2023-01-31T07:18:19.107Z
    2023-01-31T07:18:19.109Z


 --- Transition of flow [65465552-2f28-4612-9b7f-4600ccd28d15] ---
  Timestamp: 2023-01-31T07:18:19.123Z
  Event: DeliverSessionMessage(sessionMessage=ExistingSessionMessage(recipientSessionId=SessionId(toLong=-7881500851533551462), payload=DataSessionMessage(payload=class net.corda.core.serialization.SerializedBytes)), deduplicationHandler=net.corda.testing.node.internal.MockNodeMessagingService$InMemoryDeduplicationHandler@534121f1, sender=O=Mock Company 1, L=London, C=GB)
  Actions: 
    ScheduleEvent(event=DoRemainingWork)
  Continuation: ProcessEvents
  Diff between previous and next state:
checkpoint.checkpointState.sessions.SessionId(toLong=-7881500851533551462).receivedMessages.isEmpty: 
    true
    false
checkpoint.timestamp: 
    2023-01-31T07:18:19.109Z
    2023-01-31T07:18:19.123Z
pendingDeduplicationHandlers: 
    []
    [net.corda.testing.node.internal.MockNodeMessagingService$InMemoryDeduplicationHandler@534121f1]


 --- Transition of flow [65465552-2f28-4612-9b7f-4600ccd28d15] ---
  Timestamp: 2023-01-31T07:18:19.124Z
  Event: DoRemainingWork
  Actions: 
    CreateTransaction
  Continuation: Resume(result=class java.util.LinkedHashMap)
  Diff between previous and next state:
checkpoint.checkpointState.sessions.SessionId(toLong=-7881500851533551462).receivedMessages.isEmpty: 
    false
    true
isFlowResumed: 
    false
    true


 --- Transition of flow [65465552-2f28-4612-9b7f-4600ccd28d15] ---
  Timestamp: 2023-01-31T07:18:19.125Z
  Event: LeaveSubFlow
  Actions: 
    
  Continuation: ProcessEvents
  Diff between previous and next state:
checkpoint.checkpointState.subFlowStack: 
    [Inlined(flowClass=class net.corda.samples.obligation.flows.IOUSettleFlowResponder, subFlowVersion=CorDappFlow(platformVersion=11, corDappName=workflows-1.0, corDappHash=F8E3613207E5ABAEC38930FAA426F7BA91464AA72DAF3EFB74917A0BA71A146E), isEnabledTimedFlow=false), Inlined(flowClass=class net.corda.samples.obligation.flows.IOUSettleFlowResponder$call$signedTransactionFlow$1, subFlowVersion=CoreFlow(platformVersion=11), isEnabledTimedFlow=false), Inlined(flowClass=class net.corda.core.flows.ReceiveTransactionFlow, subFlowVersion=CoreFlow(platformVersion=11), isEnabledTimedFlow=false), Inlined(flowClass=class net.corda.core.internal.ResolveTransactionsFlow, subFlowVersion=CoreFlow(platformVersion=11), isEnabledTimedFlow=false), Inlined(flowClass=class net.corda.core.internal.FetchTransactionsFlow, subFlowVersion=CoreFlow(platformVersion=11), isEnabledTimedFlow=false)]
    [Inlined(flowClass=class net.corda.samples.obligation.flows.IOUSettleFlowResponder, subFlowVersion=CorDappFlow(platformVersion=11, corDappName=workflows-1.0, corDappHash=F8E3613207E5ABAEC38930FAA426F7BA91464AA72DAF3EFB74917A0BA71A146E), isEnabledTimedFlow=false), Inlined(flowClass=class net.corda.samples.obligation.flows.IOUSettleFlowResponder$call$signedTransactionFlow$1, subFlowVersion=CoreFlow(platformVersion=11), isEnabledTimedFlow=false), Inlined(flowClass=class net.corda.core.flows.ReceiveTransactionFlow, subFlowVersion=CoreFlow(platformVersion=11), isEnabledTimedFlow=false), Inlined(flowClass=class net.corda.core.internal.ResolveTransactionsFlow, subFlowVersion=CoreFlow(platformVersion=11), isEnabledTimedFlow=false)]
checkpoint.timestamp: 
    2023-01-31T07:18:19.123Z
    2023-01-31T07:18:19.125Z


 --- Transition of flow [65465552-2f28-4612-9b7f-4600ccd28d15] ---
  Timestamp: 2023-01-31T07:18:19.127Z
  Event: EnterSubFlow(subFlowClass=class net.corda.core.internal.FetchAttachmentsFlow, subFlowVersion=CoreFlow(platformVersion=11), isEnabledTimedFlow=false)
  Actions: 
    
  Continuation: ProcessEvents
  Diff between previous and next state:
checkpoint.checkpointState.subFlowStack: 
    [Inlined(flowClass=class net.corda.samples.obligation.flows.IOUSettleFlowResponder, subFlowVersion=CorDappFlow(platformVersion=11, corDappName=workflows-1.0, corDappHash=F8E3613207E5ABAEC38930FAA426F7BA91464AA72DAF3EFB74917A0BA71A146E), isEnabledTimedFlow=false), Inlined(flowClass=class net.corda.samples.obligation.flows.IOUSettleFlowResponder$call$signedTransactionFlow$1, subFlowVersion=CoreFlow(platformVersion=11), isEnabledTimedFlow=false), Inlined(flowClass=class net.corda.core.flows.ReceiveTransactionFlow, subFlowVersion=CoreFlow(platformVersion=11), isEnabledTimedFlow=false), Inlined(flowClass=class net.corda.core.internal.ResolveTransactionsFlow, subFlowVersion=CoreFlow(platformVersion=11), isEnabledTimedFlow=false)]
    [Inlined(flowClass=class net.corda.samples.obligation.flows.IOUSettleFlowResponder, subFlowVersion=CorDappFlow(platformVersion=11, corDappName=workflows-1.0, corDappHash=F8E3613207E5ABAEC38930FAA426F7BA91464AA72DAF3EFB74917A0BA71A146E), isEnabledTimedFlow=false), Inlined(flowClass=class net.corda.samples.obligation.flows.IOUSettleFlowResponder$call$signedTransactionFlow$1, subFlowVersion=CoreFlow(platformVersion=11), isEnabledTimedFlow=false), Inlined(flowClass=class net.corda.core.flows.ReceiveTransactionFlow, subFlowVersion=CoreFlow(platformVersion=11), isEnabledTimedFlow=false), Inlined(flowClass=class net.corda.core.internal.ResolveTransactionsFlow, subFlowVersion=CoreFlow(platformVersion=11), isEnabledTimedFlow=false), Inlined(flowClass=class net.corda.core.internal.FetchAttachmentsFlow, subFlowVersion=CoreFlow(platformVersion=11), isEnabledTimedFlow=false)]
checkpoint.timestamp: 
    2023-01-31T07:18:19.125Z
    2023-01-31T07:18:19.127Z


 --- Transition of flow [65465552-2f28-4612-9b7f-4600ccd28d15] ---
  Timestamp: 2023-01-31T07:18:19.127Z
  Event: LeaveSubFlow
  Actions: 
    
  Continuation: ProcessEvents
  Diff between previous and next state:
checkpoint.checkpointState.subFlowStack: 
    [Inlined(flowClass=class net.corda.samples.obligation.flows.IOUSettleFlowResponder, subFlowVersion=CorDappFlow(platformVersion=11, corDappName=workflows-1.0, corDappHash=F8E3613207E5ABAEC38930FAA426F7BA91464AA72DAF3EFB74917A0BA71A146E), isEnabledTimedFlow=false), Inlined(flowClass=class net.corda.samples.obligation.flows.IOUSettleFlowResponder$call$signedTransactionFlow$1, subFlowVersion=CoreFlow(platformVersion=11), isEnabledTimedFlow=false), Inlined(flowClass=class net.corda.core.flows.ReceiveTransactionFlow, subFlowVersion=CoreFlow(platformVersion=11), isEnabledTimedFlow=false), Inlined(flowClass=class net.corda.core.internal.ResolveTransactionsFlow, subFlowVersion=CoreFlow(platformVersion=11), isEnabledTimedFlow=false), Inlined(flowClass=class net.corda.core.internal.FetchAttachmentsFlow, subFlowVersion=CoreFlow(platformVersion=11), isEnabledTimedFlow=false)]
    [Inlined(flowClass=class net.corda.samples.obligation.flows.IOUSettleFlowResponder, subFlowVersion=CorDappFlow(platformVersion=11, corDappName=workflows-1.0, corDappHash=F8E3613207E5ABAEC38930FAA426F7BA91464AA72DAF3EFB74917A0BA71A146E), isEnabledTimedFlow=false), Inlined(flowClass=class net.corda.samples.obligation.flows.IOUSettleFlowResponder$call$signedTransactionFlow$1, subFlowVersion=CoreFlow(platformVersion=11), isEnabledTimedFlow=false), Inlined(flowClass=class net.corda.core.flows.ReceiveTransactionFlow, subFlowVersion=CoreFlow(platformVersion=11), isEnabledTimedFlow=false), Inlined(flowClass=class net.corda.core.internal.ResolveTransactionsFlow, subFlowVersion=CoreFlow(platformVersion=11), isEnabledTimedFlow=false)]


 --- Transition of flow [65465552-2f28-4612-9b7f-4600ccd28d15] ---
  Timestamp: 2023-01-31T07:18:19.127Z
  Event: EnterSubFlow(subFlowClass=class net.corda.core.internal.FetchNetworkParametersFlow, subFlowVersion=CoreFlow(platformVersion=11), isEnabledTimedFlow=false)
  Actions: 
    
  Continuation: ProcessEvents
  Diff between previous and next state:
checkpoint.checkpointState.subFlowStack: 
    [Inlined(flowClass=class net.corda.samples.obligation.flows.IOUSettleFlowResponder, subFlowVersion=CorDappFlow(platformVersion=11, corDappName=workflows-1.0, corDappHash=F8E3613207E5ABAEC38930FAA426F7BA91464AA72DAF3EFB74917A0BA71A146E), isEnabledTimedFlow=false), Inlined(flowClass=class net.corda.samples.obligation.flows.IOUSettleFlowResponder$call$signedTransactionFlow$1, subFlowVersion=CoreFlow(platformVersion=11), isEnabledTimedFlow=false), Inlined(flowClass=class net.corda.core.flows.ReceiveTransactionFlow, subFlowVersion=CoreFlow(platformVersion=11), isEnabledTimedFlow=false), Inlined(flowClass=class net.corda.core.internal.ResolveTransactionsFlow, subFlowVersion=CoreFlow(platformVersion=11), isEnabledTimedFlow=false)]
    [Inlined(flowClass=class net.corda.samples.obligation.flows.IOUSettleFlowResponder, subFlowVersion=CorDappFlow(platformVersion=11, corDappName=workflows-1.0, corDappHash=F8E3613207E5ABAEC38930FAA426F7BA91464AA72DAF3EFB74917A0BA71A146E), isEnabledTimedFlow=false), Inlined(flowClass=class net.corda.samples.obligation.flows.IOUSettleFlowResponder$call$signedTransactionFlow$1, subFlowVersion=CoreFlow(platformVersion=11), isEnabledTimedFlow=false), Inlined(flowClass=class net.corda.core.flows.ReceiveTransactionFlow, subFlowVersion=CoreFlow(platformVersion=11), isEnabledTimedFlow=false), Inlined(flowClass=class net.corda.core.internal.ResolveTransactionsFlow, subFlowVersion=CoreFlow(platformVersion=11), isEnabledTimedFlow=false), Inlined(flowClass=class net.corda.core.internal.FetchNetworkParametersFlow, subFlowVersion=CoreFlow(platformVersion=11), isEnabledTimedFlow=false)]


 --- Transition of flow [65465552-2f28-4612-9b7f-4600ccd28d15] ---
  Timestamp: 2023-01-31T07:18:19.127Z
  Event: LeaveSubFlow
  Actions: 
    
  Continuation: ProcessEvents
  Diff between previous and next state:
checkpoint.checkpointState.subFlowStack: 
    [Inlined(flowClass=class net.corda.samples.obligation.flows.IOUSettleFlowResponder, subFlowVersion=CorDappFlow(platformVersion=11, corDappName=workflows-1.0, corDappHash=F8E3613207E5ABAEC38930FAA426F7BA91464AA72DAF3EFB74917A0BA71A146E), isEnabledTimedFlow=false), Inlined(flowClass=class net.corda.samples.obligation.flows.IOUSettleFlowResponder$call$signedTransactionFlow$1, subFlowVersion=CoreFlow(platformVersion=11), isEnabledTimedFlow=false), Inlined(flowClass=class net.corda.core.flows.ReceiveTransactionFlow, subFlowVersion=CoreFlow(platformVersion=11), isEnabledTimedFlow=false), Inlined(flowClass=class net.corda.core.internal.ResolveTransactionsFlow, subFlowVersion=CoreFlow(platformVersion=11), isEnabledTimedFlow=false), Inlined(flowClass=class net.corda.core.internal.FetchNetworkParametersFlow, subFlowVersion=CoreFlow(platformVersion=11), isEnabledTimedFlow=false)]
    [Inlined(flowClass=class net.corda.samples.obligation.flows.IOUSettleFlowResponder, subFlowVersion=CorDappFlow(platformVersion=11, corDappName=workflows-1.0, corDappHash=F8E3613207E5ABAEC38930FAA426F7BA91464AA72DAF3EFB74917A0BA71A146E), isEnabledTimedFlow=false), Inlined(flowClass=class net.corda.samples.obligation.flows.IOUSettleFlowResponder$call$signedTransactionFlow$1, subFlowVersion=CoreFlow(platformVersion=11), isEnabledTimedFlow=false), Inlined(flowClass=class net.corda.core.flows.ReceiveTransactionFlow, subFlowVersion=CoreFlow(platformVersion=11), isEnabledTimedFlow=false), Inlined(flowClass=class net.corda.core.internal.ResolveTransactionsFlow, subFlowVersion=CoreFlow(platformVersion=11), isEnabledTimedFlow=false)]


 --- Transition of flow [65465552-2f28-4612-9b7f-4600ccd28d15] ---
  Timestamp: 2023-01-31T07:18:19.131Z
  Event: Suspend(ioRequest=Sleep(wakeUpAfter=2023-01-31T07:18:19.127Z), maySkipCheckpoint=false, fiber=6317571F848C91E947B1C80D48706AA6E6421E12738522E203F7BC72F140A974, currentStep=Starting)
  Actions: 
    PersistCheckpoint(id=[65465552-2f28-4612-9b7f-4600ccd28d15], checkpoint=Checkpoint(checkpointState=CheckpointState(invocationContext=InvocationContext(origin=Peer(party=O=Mock Company 1, L=London, C=GB), trace=Trace(invocationId=3e61d329-451f-4c54-becb-c2c3cfdaaa1c, timestamp: 2023-01-31T07:18:19.081Z, entityType: Invocation, sessionId=3e61d329-451f-4c54-becb-c2c3cfdaaa1c, timestamp: 2023-01-31T07:18:19.081Z, entityType: Session), actor=null, externalTrace=null, impersonatedActor=null, arguments=[], clientId=null), ourIdentity=O=Mock Company 3, L=London, C=GB, sessions={SessionId(toLong=-7881500851533551462)=Initiated(peerParty=O=Mock Company 1, L=London, C=GB, peerFlowInfo=FlowInfo(flowVersion=1, appName=<unknown>), receivedMessages=[], otherSideErrored=false, peerSinkSessionId=SessionId(toLong=7106756066069934968), deduplicationSeed=D-7106756066069934968-4795262264991213571)}, sessionsToBeClosed=[], subFlowStack=[Inlined(flowClass=class net.corda.samples.obligation.flows.IOUSettleFlowResponder, subFlowVersion=CorDappFlow(platformVersion=11, corDappName=workflows-1.0, corDappHash=F8E3613207E5ABAEC38930FAA426F7BA91464AA72DAF3EFB74917A0BA71A146E), isEnabledTimedFlow=false), Inlined(flowClass=class net.corda.samples.obligation.flows.IOUSettleFlowResponder$call$signedTransactionFlow$1, subFlowVersion=CoreFlow(platformVersion=11), isEnabledTimedFlow=false), Inlined(flowClass=class net.corda.core.flows.ReceiveTransactionFlow, subFlowVersion=CoreFlow(platformVersion=11), isEnabledTimedFlow=false), Inlined(flowClass=class net.corda.core.internal.ResolveTransactionsFlow, subFlowVersion=CoreFlow(platformVersion=11), isEnabledTimedFlow=false)], numberOfSuspends=3, numberOfCommits=4), flowState=Started(flowIORequest=Sleep(wakeUpAfter=2023-01-31T07:18:19.127Z), frozenFiber=6317571F848C91E947B1C80D48706AA6E6421E12738522E203F7BC72F140A974), errorState=Clean, result=null, status=RUNNABLE, progressStep=Starting, flowIoRequest=Sleep, compatible=true), isCheckpointUpdate=true)
    PersistDeduplicationFacts(deduplicationHandlers=[net.corda.testing.node.internal.MockNodeMessagingService$InMemoryDeduplicationHandler@534121f1])
    CommitTransaction
    AcknowledgeMessages(deduplicationHandlers=[net.corda.testing.node.internal.MockNodeMessagingService$InMemoryDeduplicationHandler@534121f1])
    ScheduleEvent(event=DoRemainingWork)
  Continuation: ProcessEvents
  Diff between previous and next state:
checkpoint.flowState.flowIORequest: 
    Receive(sessions=[FlowSessionImpl(destination=O=Mock Company 1, L=London, C=GB, sourceSessionId=SessionId(toLong=-7881500851533551462))])
    Sleep(wakeUpAfter=2023-01-31T07:18:19.127Z)
checkpoint.flowState.frozenFiber.hash: 
    10C9014CEB637B2BB13A672B602DA6FE5767E49DE753EFA07D80AAB2AC086724
    6317571F848C91E947B1C80D48706AA6E6421E12738522E203F7BC72F140A974
checkpoint.flowIoRequest: 
    SendAndReceive
    Sleep
checkpoint.checkpointState.numberOfSuspends: 
    2
    3
checkpoint.checkpointState.numberOfCommits: 
    3
    4
checkpoint.timestamp: 
    2023-01-31T07:18:19.127Z
    2023-01-31T07:18:19.129Z
numberOfCommits: 
    3
    4
isFlowResumed: 
    true
    false
pendingDeduplicationHandlers: 
    [net.corda.testing.node.internal.MockNodeMessagingService$InMemoryDeduplicationHandler@534121f1]
    []


 --- Transition of flow [65465552-2f28-4612-9b7f-4600ccd28d15] ---
  Timestamp: 2023-01-31T07:18:19.131Z
  Event: DoRemainingWork
  Actions: 
    SleepUntil(currentState=StateMachineState(checkpoint=Checkpoint(checkpointState=CheckpointState(invocationContext=InvocationContext(origin=Peer(party=O=Mock Company 1, L=London, C=GB), trace=Trace(invocationId=3e61d329-451f-4c54-becb-c2c3cfdaaa1c, timestamp: 2023-01-31T07:18:19.081Z, entityType: Invocation, sessionId=3e61d329-451f-4c54-becb-c2c3cfdaaa1c, timestamp: 2023-01-31T07:18:19.081Z, entityType: Session), actor=null, externalTrace=null, impersonatedActor=null, arguments=[], clientId=null), ourIdentity=O=Mock Company 3, L=London, C=GB, sessions={SessionId(toLong=-7881500851533551462)=Initiated(peerParty=O=Mock Company 1, L=London, C=GB, peerFlowInfo=FlowInfo(flowVersion=1, appName=<unknown>), receivedMessages=[], otherSideErrored=false, peerSinkSessionId=SessionId(toLong=7106756066069934968), deduplicationSeed=D-7106756066069934968-4795262264991213571)}, sessionsToBeClosed=[], subFlowStack=[Inlined(flowClass=class net.corda.samples.obligation.flows.IOUSettleFlowResponder, subFlowVersion=CorDappFlow(platformVersion=11, corDappName=workflows-1.0, corDappHash=F8E3613207E5ABAEC38930FAA426F7BA91464AA72DAF3EFB74917A0BA71A146E), isEnabledTimedFlow=false), Inlined(flowClass=class net.corda.samples.obligation.flows.IOUSettleFlowResponder$call$signedTransactionFlow$1, subFlowVersion=CoreFlow(platformVersion=11), isEnabledTimedFlow=false), Inlined(flowClass=class net.corda.core.flows.ReceiveTransactionFlow, subFlowVersion=CoreFlow(platformVersion=11), isEnabledTimedFlow=false), Inlined(flowClass=class net.corda.core.internal.ResolveTransactionsFlow, subFlowVersion=CoreFlow(platformVersion=11), isEnabledTimedFlow=false)], numberOfSuspends=3, numberOfCommits=4), flowState=Started(flowIORequest=Sleep(wakeUpAfter=2023-01-31T07:18:19.127Z), frozenFiber=6317571F848C91E947B1C80D48706AA6E6421E12738522E203F7BC72F140A974), errorState=Clean, result=null, status=RUNNABLE, progressStep=Starting, flowIoRequest=Sleep, compatible=true), flowLogic=net.corda.samples.obligation.flows.IOUSettleFlowResponder@8e2e06, pendingDeduplicationHandlers=[], isFlowResumed=false, isWaitingForFuture=true, future=java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask@863b3a3, isAnyCheckpointPersisted=true, isStartIdempotent=false, isRemoved=false, isKilled=false, isDead=false, senderUUID=5e9b81e5-439f-421e-bc83-def5a58fd155, reloadCheckpointAfterSuspendCount=null, numberOfCommits=4, lock=java.util.concurrent.Semaphore@6637a9cb[Permits = 0]), time=2023-01-31T07:18:19.127Z)
  Continuation: ProcessEvents
  Diff between previous and next state:
future: 
    null
    java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask@863b3a3
isWaitingForFuture: 
    false
    true


 --- Transition of flow [65465552-2f28-4612-9b7f-4600ccd28d15] ---
  Timestamp: 2023-01-31T07:18:19.132Z
  Event: WakeUpSleepyFlow
  Actions: 
    CreateTransaction
  Continuation: Resume(result=class kotlin.Unit)
  Diff between previous and next state:
future: 
    java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask@863b3a3
    null
isFlowResumed: 
    false
    true
isWaitingForFuture: 
    true
    false


 --- Transition of flow [65465552-2f28-4612-9b7f-4600ccd28d15] ---
  Timestamp: 2023-01-31T07:18:19.132Z
  Event: EnterSubFlow(subFlowClass=class net.corda.core.internal.FetchTransactionsFlow, subFlowVersion=CoreFlow(platformVersion=11), isEnabledTimedFlow=false)
  Actions: 
    
  Continuation: ProcessEvents
  Diff between previous and next state:
checkpoint.checkpointState.subFlowStack: 
    [Inlined(flowClass=class net.corda.samples.obligation.flows.IOUSettleFlowResponder, subFlowVersion=CorDappFlow(platformVersion=11, corDappName=workflows-1.0, corDappHash=F8E3613207E5ABAEC38930FAA426F7BA91464AA72DAF3EFB74917A0BA71A146E), isEnabledTimedFlow=false), Inlined(flowClass=class net.corda.samples.obligation.flows.IOUSettleFlowResponder$call$signedTransactionFlow$1, subFlowVersion=CoreFlow(platformVersion=11), isEnabledTimedFlow=false), Inlined(flowClass=class net.corda.core.flows.ReceiveTransactionFlow, subFlowVersion=CoreFlow(platformVersion=11), isEnabledTimedFlow=false), Inlined(flowClass=class net.corda.core.internal.ResolveTransactionsFlow, subFlowVersion=CoreFlow(platformVersion=11), isEnabledTimedFlow=false)]
    [Inlined(flowClass=class net.corda.samples.obligation.flows.IOUSettleFlowResponder, subFlowVersion=CorDappFlow(platformVersion=11, corDappName=workflows-1.0, corDappHash=F8E3613207E5ABAEC38930FAA426F7BA91464AA72DAF3EFB74917A0BA71A146E), isEnabledTimedFlow=false), Inlined(flowClass=class net.corda.samples.obligation.flows.IOUSettleFlowResponder$call$signedTransactionFlow$1, subFlowVersion=CoreFlow(platformVersion=11), isEnabledTimedFlow=false), Inlined(flowClass=class net.corda.core.flows.ReceiveTransactionFlow, subFlowVersion=CoreFlow(platformVersion=11), isEnabledTimedFlow=false), Inlined(flowClass=class net.corda.core.internal.ResolveTransactionsFlow, subFlowVersion=CoreFlow(platformVersion=11), isEnabledTimedFlow=false), Inlined(flowClass=class net.corda.core.internal.FetchTransactionsFlow, subFlowVersion=CoreFlow(platformVersion=11), isEnabledTimedFlow=false)]
checkpoint.timestamp: 
    2023-01-31T07:18:19.129Z
    2023-01-31T07:18:19.132Z


 --- Transition of flow [65465552-2f28-4612-9b7f-4600ccd28d15] ---
  Timestamp: 2023-01-31T07:18:19.132Z
  Event: LeaveSubFlow
  Actions: 
    
  Continuation: ProcessEvents
  Diff between previous and next state:
checkpoint.checkpointState.subFlowStack: 
    [Inlined(flowClass=class net.corda.samples.obligation.flows.IOUSettleFlowResponder, subFlowVersion=CorDappFlow(platformVersion=11, corDappName=workflows-1.0, corDappHash=F8E3613207E5ABAEC38930FAA426F7BA91464AA72DAF3EFB74917A0BA71A146E), isEnabledTimedFlow=false), Inlined(flowClass=class net.corda.samples.obligation.flows.IOUSettleFlowResponder$call$signedTransactionFlow$1, subFlowVersion=CoreFlow(platformVersion=11), isEnabledTimedFlow=false), Inlined(flowClass=class net.corda.core.flows.ReceiveTransactionFlow, subFlowVersion=CoreFlow(platformVersion=11), isEnabledTimedFlow=false), Inlined(flowClass=class net.corda.core.internal.ResolveTransactionsFlow, subFlowVersion=CoreFlow(platformVersion=11), isEnabledTimedFlow=false), Inlined(flowClass=class net.corda.core.internal.FetchTransactionsFlow, subFlowVersion=CoreFlow(platformVersion=11), isEnabledTimedFlow=false)]
    [Inlined(flowClass=class net.corda.samples.obligation.flows.IOUSettleFlowResponder, subFlowVersion=CorDappFlow(platformVersion=11, corDappName=workflows-1.0, corDappHash=F8E3613207E5ABAEC38930FAA426F7BA91464AA72DAF3EFB74917A0BA71A146E), isEnabledTimedFlow=false), Inlined(flowClass=class net.corda.samples.obligation.flows.IOUSettleFlowResponder$call$signedTransactionFlow$1, subFlowVersion=CoreFlow(platformVersion=11), isEnabledTimedFlow=false), Inlined(flowClass=class net.corda.core.flows.ReceiveTransactionFlow, subFlowVersion=CoreFlow(platformVersion=11), isEnabledTimedFlow=false), Inlined(flowClass=class net.corda.core.internal.ResolveTransactionsFlow, subFlowVersion=CoreFlow(platformVersion=11), isEnabledTimedFlow=false)]


 --- Transition of flow [65465552-2f28-4612-9b7f-4600ccd28d15] ---
  Timestamp: 2023-01-31T07:18:19.136Z
  Event: Suspend(ioRequest=Send(sessionToMessage={FlowSessionImpl(destination=O=Mock Company 1, L=London, C=GB, sourceSessionId=SessionId(toLong=-7881500851533551462))=768AED61FD2A58D74D7316731407E0600065080E1F3E6397EE4FA5AEFEE79295}), maySkipCheckpoint=false, fiber=7B3963E087DB133C740AA30FD953A8433D1FEE1FB45A695401E12EF359D5CA27, currentStep=Starting)
  Actions: 
    PersistCheckpoint(id=[65465552-2f28-4612-9b7f-4600ccd28d15], checkpoint=Checkpoint(checkpointState=CheckpointState(invocationContext=InvocationContext(origin=Peer(party=O=Mock Company 1, L=London, C=GB), trace=Trace(invocationId=3e61d329-451f-4c54-becb-c2c3cfdaaa1c, timestamp: 2023-01-31T07:18:19.081Z, entityType: Invocation, sessionId=3e61d329-451f-4c54-becb-c2c3cfdaaa1c, timestamp: 2023-01-31T07:18:19.081Z, entityType: Session), actor=null, externalTrace=null, impersonatedActor=null, arguments=[], clientId=null), ourIdentity=O=Mock Company 3, L=London, C=GB, sessions={SessionId(toLong=-7881500851533551462)=Initiated(peerParty=O=Mock Company 1, L=London, C=GB, peerFlowInfo=FlowInfo(flowVersion=1, appName=<unknown>), receivedMessages=[], otherSideErrored=false, peerSinkSessionId=SessionId(toLong=7106756066069934968), deduplicationSeed=D-7106756066069934968-4795262264991213571)}, sessionsToBeClosed=[], subFlowStack=[Inlined(flowClass=class net.corda.samples.obligation.flows.IOUSettleFlowResponder, subFlowVersion=CorDappFlow(platformVersion=11, corDappName=workflows-1.0, corDappHash=F8E3613207E5ABAEC38930FAA426F7BA91464AA72DAF3EFB74917A0BA71A146E), isEnabledTimedFlow=false), Inlined(flowClass=class net.corda.samples.obligation.flows.IOUSettleFlowResponder$call$signedTransactionFlow$1, subFlowVersion=CoreFlow(platformVersion=11), isEnabledTimedFlow=false), Inlined(flowClass=class net.corda.core.flows.ReceiveTransactionFlow, subFlowVersion=CoreFlow(platformVersion=11), isEnabledTimedFlow=false), Inlined(flowClass=class net.corda.core.internal.ResolveTransactionsFlow, subFlowVersion=CoreFlow(platformVersion=11), isEnabledTimedFlow=false)], numberOfSuspends=4, numberOfCommits=5), flowState=Started(flowIORequest=Send(sessionToMessage={FlowSessionImpl(destination=O=Mock Company 1, L=London, C=GB, sourceSessionId=SessionId(toLong=-7881500851533551462))=768AED61FD2A58D74D7316731407E0600065080E1F3E6397EE4FA5AEFEE79295}), frozenFiber=7B3963E087DB133C740AA30FD953A8433D1FEE1FB45A695401E12EF359D5CA27), errorState=Clean, result=null, status=RUNNABLE, progressStep=Starting, flowIoRequest=Send, compatible=true), isCheckpointUpdate=true)
    PersistDeduplicationFacts(deduplicationHandlers=[])
    CommitTransaction
    AcknowledgeMessages(deduplicationHandlers=[])
    ScheduleEvent(event=DoRemainingWork)
  Continuation: ProcessEvents
  Diff between previous and next state:
checkpoint.flowState.flowIORequest: 
    Sleep(wakeUpAfter=2023-01-31T07:18:19.127Z)
    Send(sessionToMessage={FlowSessionImpl(destination=O=Mock Company 1, L=London, C=GB, sourceSessionId=SessionId(toLong=-7881500851533551462))=768AED61FD2A58D74D7316731407E0600065080E1F3E6397EE4FA5AEFEE79295})
checkpoint.flowState.frozenFiber.hash: 
    6317571F848C91E947B1C80D48706AA6E6421E12738522E203F7BC72F140A974
    7B3963E087DB133C740AA30FD953A8433D1FEE1FB45A695401E12EF359D5CA27
checkpoint.flowIoRequest: 
    Sleep
    Send
checkpoint.checkpointState.numberOfSuspends: 
    3
    4
checkpoint.checkpointState.numberOfCommits: 
    4
    5
checkpoint.timestamp: 
    2023-01-31T07:18:19.132Z
    2023-01-31T07:18:19.134Z
numberOfCommits: 
    4
    5
isFlowResumed: 
    true
    false


 --- Transition of flow [65465552-2f28-4612-9b7f-4600ccd28d15] ---
  Timestamp: 2023-01-31T07:18:19.137Z
  Event: DoRemainingWork
  Actions: 
    SendMultiple(sendInitial=[], sendExisting=[SendExisting(peerParty=O=Mock Company 1, L=London, C=GB, message=ExistingSessionMessage(recipientSessionId=SessionId(toLong=7106756066069934968), payload=DataSessionMessage(payload=class net.corda.core.serialization.SerializedBytes)), deduplicationId=SenderDeduplicationId(deduplicationId=DeduplicationId(toString=N-D-7106756066069934968-4795262264991213571-4-0), senderUUID=5e9b81e5-439f-421e-bc83-def5a58fd155))])
    CreateTransaction
  Continuation: Resume(result=class kotlin.Unit)
  Diff between previous and next state:
isFlowResumed: 
    false
    true


 --- Transition of flow [65465552-2f28-4612-9b7f-4600ccd28d15] ---
  Timestamp: 2023-01-31T07:18:19.194Z
  Event: LeaveSubFlow
  Actions: 
    
  Continuation: ProcessEvents
  Diff between previous and next state:
checkpoint.checkpointState.subFlowStack: 
    [Inlined(flowClass=class net.corda.samples.obligation.flows.IOUSettleFlowResponder, subFlowVersion=CorDappFlow(platformVersion=11, corDappName=workflows-1.0, corDappHash=F8E3613207E5ABAEC38930FAA426F7BA91464AA72DAF3EFB74917A0BA71A146E), isEnabledTimedFlow=false), Inlined(flowClass=class net.corda.samples.obligation.flows.IOUSettleFlowResponder$call$signedTransactionFlow$1, subFlowVersion=CoreFlow(platformVersion=11), isEnabledTimedFlow=false), Inlined(flowClass=class net.corda.core.flows.ReceiveTransactionFlow, subFlowVersion=CoreFlow(platformVersion=11), isEnabledTimedFlow=false), Inlined(flowClass=class net.corda.core.internal.ResolveTransactionsFlow, subFlowVersion=CoreFlow(platformVersion=11), isEnabledTimedFlow=false)]
    [Inlined(flowClass=class net.corda.samples.obligation.flows.IOUSettleFlowResponder, subFlowVersion=CorDappFlow(platformVersion=11, corDappName=workflows-1.0, corDappHash=F8E3613207E5ABAEC38930FAA426F7BA91464AA72DAF3EFB74917A0BA71A146E), isEnabledTimedFlow=false), Inlined(flowClass=class net.corda.samples.obligation.flows.IOUSettleFlowResponder$call$signedTransactionFlow$1, subFlowVersion=CoreFlow(platformVersion=11), isEnabledTimedFlow=false), Inlined(flowClass=class net.corda.core.flows.ReceiveTransactionFlow, subFlowVersion=CoreFlow(platformVersion=11), isEnabledTimedFlow=false)]
checkpoint.timestamp: 
    2023-01-31T07:18:19.136Z
    2023-01-31T07:18:19.194Z


 --- Transition of flow [65465552-2f28-4612-9b7f-4600ccd28d15] ---
  Timestamp: 2023-01-31T07:18:19.272Z
  Event: LeaveSubFlow
  Actions: 
    
  Continuation: ProcessEvents
  Diff between previous and next state:
checkpoint.checkpointState.subFlowStack: 
    [Inlined(flowClass=class net.corda.samples.obligation.flows.IOUSettleFlowResponder, subFlowVersion=CorDappFlow(platformVersion=11, corDappName=workflows-1.0, corDappHash=F8E3613207E5ABAEC38930FAA426F7BA91464AA72DAF3EFB74917A0BA71A146E), isEnabledTimedFlow=false), Inlined(flowClass=class net.corda.samples.obligation.flows.IOUSettleFlowResponder$call$signedTransactionFlow$1, subFlowVersion=CoreFlow(platformVersion=11), isEnabledTimedFlow=false), Inlined(flowClass=class net.corda.core.flows.ReceiveTransactionFlow, subFlowVersion=CoreFlow(platformVersion=11), isEnabledTimedFlow=false)]
    [Inlined(flowClass=class net.corda.samples.obligation.flows.IOUSettleFlowResponder, subFlowVersion=CorDappFlow(platformVersion=11, corDappName=workflows-1.0, corDappHash=F8E3613207E5ABAEC38930FAA426F7BA91464AA72DAF3EFB74917A0BA71A146E), isEnabledTimedFlow=false), Inlined(flowClass=class net.corda.samples.obligation.flows.IOUSettleFlowResponder$call$signedTransactionFlow$1, subFlowVersion=CoreFlow(platformVersion=11), isEnabledTimedFlow=false)]
checkpoint.timestamp: 
    2023-01-31T07:18:19.194Z
    2023-01-31T07:18:19.272Z


 --- Transition of flow [65465552-2f28-4612-9b7f-4600ccd28d15] ---
  Timestamp: 2023-01-31T07:18:19.276Z
  Event: Suspend(ioRequest=Receive(sessions=[FlowSessionImpl(destination=O=Mock Company 1, L=London, C=GB, sourceSessionId=SessionId(toLong=-7881500851533551462))]), maySkipCheckpoint=false, fiber=5CE23CC9F8D83065D61265941B2446BFE549FB89055521BB268E91003B4E2B5A, currentStep=Starting)
  Actions: 
    PersistCheckpoint(id=[65465552-2f28-4612-9b7f-4600ccd28d15], checkpoint=Checkpoint(checkpointState=CheckpointState(invocationContext=InvocationContext(origin=Peer(party=O=Mock Company 1, L=London, C=GB), trace=Trace(invocationId=3e61d329-451f-4c54-becb-c2c3cfdaaa1c, timestamp: 2023-01-31T07:18:19.081Z, entityType: Invocation, sessionId=3e61d329-451f-4c54-becb-c2c3cfdaaa1c, timestamp: 2023-01-31T07:18:19.081Z, entityType: Session), actor=null, externalTrace=null, impersonatedActor=null, arguments=[], clientId=null), ourIdentity=O=Mock Company 3, L=London, C=GB, sessions={SessionId(toLong=-7881500851533551462)=Initiated(peerParty=O=Mock Company 1, L=London, C=GB, peerFlowInfo=FlowInfo(flowVersion=1, appName=<unknown>), receivedMessages=[], otherSideErrored=false, peerSinkSessionId=SessionId(toLong=7106756066069934968), deduplicationSeed=D-7106756066069934968-4795262264991213571)}, sessionsToBeClosed=[], subFlowStack=[Inlined(flowClass=class net.corda.samples.obligation.flows.IOUSettleFlowResponder, subFlowVersion=CorDappFlow(platformVersion=11, corDappName=workflows-1.0, corDappHash=F8E3613207E5ABAEC38930FAA426F7BA91464AA72DAF3EFB74917A0BA71A146E), isEnabledTimedFlow=false), Inlined(flowClass=class net.corda.samples.obligation.flows.IOUSettleFlowResponder$call$signedTransactionFlow$1, subFlowVersion=CoreFlow(platformVersion=11), isEnabledTimedFlow=false)], numberOfSuspends=5, numberOfCommits=6), flowState=Started(flowIORequest=Receive(sessions=[FlowSessionImpl(destination=O=Mock Company 1, L=London, C=GB, sourceSessionId=SessionId(toLong=-7881500851533551462))]), frozenFiber=5CE23CC9F8D83065D61265941B2446BFE549FB89055521BB268E91003B4E2B5A), errorState=Clean, result=null, status=RUNNABLE, progressStep=Starting, flowIoRequest=Receive, compatible=true), isCheckpointUpdate=true)
    PersistDeduplicationFacts(deduplicationHandlers=[])
    CommitTransaction
    AcknowledgeMessages(deduplicationHandlers=[])
    ScheduleEvent(event=DoRemainingWork)
  Continuation: ProcessEvents
  Diff between previous and next state:
checkpoint.flowState.flowIORequest: 
    Send(sessionToMessage={FlowSessionImpl(destination=O=Mock Company 1, L=London, C=GB, sourceSessionId=SessionId(toLong=-7881500851533551462))=768AED61FD2A58D74D7316731407E0600065080E1F3E6397EE4FA5AEFEE79295})
    Receive(sessions=[FlowSessionImpl(destination=O=Mock Company 1, L=London, C=GB, sourceSessionId=SessionId(toLong=-7881500851533551462))])
checkpoint.flowState.frozenFiber.hash: 
    7B3963E087DB133C740AA30FD953A8433D1FEE1FB45A695401E12EF359D5CA27
    5CE23CC9F8D83065D61265941B2446BFE549FB89055521BB268E91003B4E2B5A
checkpoint.flowIoRequest: 
    Send
    Receive
checkpoint.checkpointState.numberOfSuspends: 
    4
    5
checkpoint.checkpointState.numberOfCommits: 
    5
    6
checkpoint.timestamp: 
    2023-01-31T07:18:19.272Z
    2023-01-31T07:18:19.274Z
numberOfCommits: 
    5
    6
isFlowResumed: 
    true
    false


 --- Transition of flow [65465552-2f28-4612-9b7f-4600ccd28d15] ---
  Timestamp: 2023-01-31T07:18:19.276Z
  Event: DoRemainingWork
  Actions: 
    
  Continuation: ProcessEvents
  Diff between previous and next state:
null

 --- Transition of flow [65465552-2f28-4612-9b7f-4600ccd28d15] ---
  Timestamp: 2023-01-31T07:18:19.288Z
  Event: DeliverSessionMessage(sessionMessage=ExistingSessionMessage(recipientSessionId=SessionId(toLong=-7881500851533551462), payload=DataSessionMessage(payload=class net.corda.core.serialization.SerializedBytes)), deduplicationHandler=net.corda.testing.node.internal.MockNodeMessagingService$InMemoryDeduplicationHandler@723aa3a1, sender=O=Mock Company 1, L=London, C=GB)
  Actions: 
    ScheduleEvent(event=DoRemainingWork)
  Continuation: ProcessEvents
  Diff between previous and next state:
checkpoint.checkpointState.sessions.SessionId(toLong=-7881500851533551462).receivedMessages.isEmpty: 
    true
    false
checkpoint.timestamp: 
    2023-01-31T07:18:19.276Z
    2023-01-31T07:18:19.288Z
pendingDeduplicationHandlers: 
    []
    [net.corda.testing.node.internal.MockNodeMessagingService$InMemoryDeduplicationHandler@723aa3a1]


 --- Transition of flow [65465552-2f28-4612-9b7f-4600ccd28d15] ---
  Timestamp: 2023-01-31T07:18:19.288Z
  Event: DoRemainingWork
  Actions: 
    CreateTransaction
  Continuation: Resume(result=class java.util.LinkedHashMap)
  Diff between previous and next state:
checkpoint.checkpointState.sessions.SessionId(toLong=-7881500851533551462).receivedMessages.isEmpty: 
    false
    true
isFlowResumed: 
    false
    true


 --- Transition of flow [65465552-2f28-4612-9b7f-4600ccd28d15] ---
  Timestamp: 2023-01-31T07:18:19.298Z
  Event: Suspend(ioRequest=Send(sessionToMessage={FlowSessionImpl(destination=O=Mock Company 1, L=London, C=GB, sourceSessionId=SessionId(toLong=-7881500851533551462))=750D72D7B536ECC243AA7BCFE33530802252BFA2E786F5CF37FC8F4E9EAD1F04}), maySkipCheckpoint=false, fiber=FE7F145DF26470A5463ECE3C2BC0C7370DBA141497EC9979068C28CCA07981B6, currentStep=Starting)
  Actions: 
    PersistCheckpoint(id=[65465552-2f28-4612-9b7f-4600ccd28d15], checkpoint=Checkpoint(checkpointState=CheckpointState(invocationContext=InvocationContext(origin=Peer(party=O=Mock Company 1, L=London, C=GB), trace=Trace(invocationId=3e61d329-451f-4c54-becb-c2c3cfdaaa1c, timestamp: 2023-01-31T07:18:19.081Z, entityType: Invocation, sessionId=3e61d329-451f-4c54-becb-c2c3cfdaaa1c, timestamp: 2023-01-31T07:18:19.081Z, entityType: Session), actor=null, externalTrace=null, impersonatedActor=null, arguments=[], clientId=null), ourIdentity=O=Mock Company 3, L=London, C=GB, sessions={SessionId(toLong=-7881500851533551462)=Initiated(peerParty=O=Mock Company 1, L=London, C=GB, peerFlowInfo=FlowInfo(flowVersion=1, appName=<unknown>), receivedMessages=[], otherSideErrored=false, peerSinkSessionId=SessionId(toLong=7106756066069934968), deduplicationSeed=D-7106756066069934968-4795262264991213571)}, sessionsToBeClosed=[], subFlowStack=[Inlined(flowClass=class net.corda.samples.obligation.flows.IOUSettleFlowResponder, subFlowVersion=CorDappFlow(platformVersion=11, corDappName=workflows-1.0, corDappHash=F8E3613207E5ABAEC38930FAA426F7BA91464AA72DAF3EFB74917A0BA71A146E), isEnabledTimedFlow=false), Inlined(flowClass=class net.corda.samples.obligation.flows.IOUSettleFlowResponder$call$signedTransactionFlow$1, subFlowVersion=CoreFlow(platformVersion=11), isEnabledTimedFlow=false)], numberOfSuspends=6, numberOfCommits=7), flowState=Started(flowIORequest=Send(sessionToMessage={FlowSessionImpl(destination=O=Mock Company 1, L=London, C=GB, sourceSessionId=SessionId(toLong=-7881500851533551462))=750D72D7B536ECC243AA7BCFE33530802252BFA2E786F5CF37FC8F4E9EAD1F04}), frozenFiber=FE7F145DF26470A5463ECE3C2BC0C7370DBA141497EC9979068C28CCA07981B6), errorState=Clean, result=null, status=RUNNABLE, progressStep=Starting, flowIoRequest=Send, compatible=true), isCheckpointUpdate=true)
    PersistDeduplicationFacts(deduplicationHandlers=[net.corda.testing.node.internal.MockNodeMessagingService$InMemoryDeduplicationHandler@723aa3a1])
    CommitTransaction
    AcknowledgeMessages(deduplicationHandlers=[net.corda.testing.node.internal.MockNodeMessagingService$InMemoryDeduplicationHandler@723aa3a1])
    ScheduleEvent(event=DoRemainingWork)
  Continuation: ProcessEvents
  Diff between previous and next state:
checkpoint.flowState.flowIORequest: 
    Receive(sessions=[FlowSessionImpl(destination=O=Mock Company 1, L=London, C=GB, sourceSessionId=SessionId(toLong=-7881500851533551462))])
    Send(sessionToMessage={FlowSessionImpl(destination=O=Mock Company 1, L=London, C=GB, sourceSessionId=SessionId(toLong=-7881500851533551462))=750D72D7B536ECC243AA7BCFE33530802252BFA2E786F5CF37FC8F4E9EAD1F04})
checkpoint.flowState.frozenFiber.hash: 
    5CE23CC9F8D83065D61265941B2446BFE549FB89055521BB268E91003B4E2B5A
    FE7F145DF26470A5463ECE3C2BC0C7370DBA141497EC9979068C28CCA07981B6
checkpoint.flowIoRequest: 
    Receive
    Send
checkpoint.checkpointState.numberOfSuspends: 
    5
    6
checkpoint.checkpointState.numberOfCommits: 
    6
    7
checkpoint.timestamp: 
    2023-01-31T07:18:19.288Z
    2023-01-31T07:18:19.296Z
numberOfCommits: 
    6
    7
isFlowResumed: 
    true
    false
pendingDeduplicationHandlers: 
    [net.corda.testing.node.internal.MockNodeMessagingService$InMemoryDeduplicationHandler@723aa3a1]
    []


 --- Transition of flow [65465552-2f28-4612-9b7f-4600ccd28d15] ---
  Timestamp: 2023-01-31T07:18:19.299Z
  Event: DoRemainingWork
  Actions: 
    SendMultiple(sendInitial=[], sendExisting=[SendExisting(peerParty=O=Mock Company 1, L=London, C=GB, message=ExistingSessionMessage(recipientSessionId=SessionId(toLong=7106756066069934968), payload=DataSessionMessage(payload=class net.corda.core.serialization.SerializedBytes)), deduplicationId=SenderDeduplicationId(deduplicationId=DeduplicationId(toString=N-D-7106756066069934968-4795262264991213571-6-0), senderUUID=5e9b81e5-439f-421e-bc83-def5a58fd155))])
    CreateTransaction
  Continuation: Resume(result=class kotlin.Unit)
  Diff between previous and next state:
isFlowResumed: 
    false
    true


 --- Transition of flow [65465552-2f28-4612-9b7f-4600ccd28d15] ---
  Timestamp: 2023-01-31T07:18:19.299Z
  Event: LeaveSubFlow
  Actions: 
    
  Continuation: ProcessEvents
  Diff between previous and next state:
checkpoint.checkpointState.subFlowStack: 
    [Inlined(flowClass=class net.corda.samples.obligation.flows.IOUSettleFlowResponder, subFlowVersion=CorDappFlow(platformVersion=11, corDappName=workflows-1.0, corDappHash=F8E3613207E5ABAEC38930FAA426F7BA91464AA72DAF3EFB74917A0BA71A146E), isEnabledTimedFlow=false), Inlined(flowClass=class net.corda.samples.obligation.flows.IOUSettleFlowResponder$call$signedTransactionFlow$1, subFlowVersion=CoreFlow(platformVersion=11), isEnabledTimedFlow=false)]
    [Inlined(flowClass=class net.corda.samples.obligation.flows.IOUSettleFlowResponder, subFlowVersion=CorDappFlow(platformVersion=11, corDappName=workflows-1.0, corDappHash=F8E3613207E5ABAEC38930FAA426F7BA91464AA72DAF3EFB74917A0BA71A146E), isEnabledTimedFlow=false)]
checkpoint.timestamp: 
    2023-01-31T07:18:19.298Z
    2023-01-31T07:18:19.299Z


 --- Transition of flow [65465552-2f28-4612-9b7f-4600ccd28d15] ---
  Timestamp: 2023-01-31T07:18:19.299Z
  Event: EnterSubFlow(subFlowClass=class net.corda.core.flows.ReceiveFinalityFlow, subFlowVersion=CoreFlow(platformVersion=11), isEnabledTimedFlow=false)
  Actions: 
    
  Continuation: ProcessEvents
  Diff between previous and next state:
checkpoint.checkpointState.subFlowStack: 
    [Inlined(flowClass=class net.corda.samples.obligation.flows.IOUSettleFlowResponder, subFlowVersion=CorDappFlow(platformVersion=11, corDappName=workflows-1.0, corDappHash=F8E3613207E5ABAEC38930FAA426F7BA91464AA72DAF3EFB74917A0BA71A146E), isEnabledTimedFlow=false)]
    [Inlined(flowClass=class net.corda.samples.obligation.flows.IOUSettleFlowResponder, subFlowVersion=CorDappFlow(platformVersion=11, corDappName=workflows-1.0, corDappHash=F8E3613207E5ABAEC38930FAA426F7BA91464AA72DAF3EFB74917A0BA71A146E), isEnabledTimedFlow=false), Inlined(flowClass=class net.corda.core.flows.ReceiveFinalityFlow, subFlowVersion=CoreFlow(platformVersion=11), isEnabledTimedFlow=false)]


 --- Transition of flow [65465552-2f28-4612-9b7f-4600ccd28d15] ---
  Timestamp: 2023-01-31T07:18:19.300Z
  Event: EnterSubFlow(subFlowClass=class net.corda.core.flows.ReceiveFinalityFlow$call$1, subFlowVersion=CoreFlow(platformVersion=11), isEnabledTimedFlow=false)
  Actions: 
    
  Continuation: ProcessEvents
  Diff between previous and next state:
checkpoint.checkpointState.subFlowStack: 
    [Inlined(flowClass=class net.corda.samples.obligation.flows.IOUSettleFlowResponder, subFlowVersion=CorDappFlow(platformVersion=11, corDappName=workflows-1.0, corDappHash=F8E3613207E5ABAEC38930FAA426F7BA91464AA72DAF3EFB74917A0BA71A146E), isEnabledTimedFlow=false), Inlined(flowClass=class net.corda.core.flows.ReceiveFinalityFlow, subFlowVersion=CoreFlow(platformVersion=11), isEnabledTimedFlow=false)]
    [Inlined(flowClass=class net.corda.samples.obligation.flows.IOUSettleFlowResponder, subFlowVersion=CorDappFlow(platformVersion=11, corDappName=workflows-1.0, corDappHash=F8E3613207E5ABAEC38930FAA426F7BA91464AA72DAF3EFB74917A0BA71A146E), isEnabledTimedFlow=false), Inlined(flowClass=class net.corda.core.flows.ReceiveFinalityFlow, subFlowVersion=CoreFlow(platformVersion=11), isEnabledTimedFlow=false), Inlined(flowClass=class net.corda.core.flows.ReceiveFinalityFlow$call$1, subFlowVersion=CoreFlow(platformVersion=11), isEnabledTimedFlow=false)]


 --- Transition of flow [65465552-2f28-4612-9b7f-4600ccd28d15] ---
  Timestamp: 2023-01-31T07:18:19.303Z
  Event: Suspend(ioRequest=Receive(sessions=[FlowSessionImpl(destination=O=Mock Company 1, L=London, C=GB, sourceSessionId=SessionId(toLong=-7881500851533551462))]), maySkipCheckpoint=false, fiber=3897378BDF84ACD165BF765D5F3554B0450D320BF3026C1017658349E9DC7F62, currentStep=Starting)
  Actions: 
    PersistCheckpoint(id=[65465552-2f28-4612-9b7f-4600ccd28d15], checkpoint=Checkpoint(checkpointState=CheckpointState(invocationContext=InvocationContext(origin=Peer(party=O=Mock Company 1, L=London, C=GB), trace=Trace(invocationId=3e61d329-451f-4c54-becb-c2c3cfdaaa1c, timestamp: 2023-01-31T07:18:19.081Z, entityType: Invocation, sessionId=3e61d329-451f-4c54-becb-c2c3cfdaaa1c, timestamp: 2023-01-31T07:18:19.081Z, entityType: Session), actor=null, externalTrace=null, impersonatedActor=null, arguments=[], clientId=null), ourIdentity=O=Mock Company 3, L=London, C=GB, sessions={SessionId(toLong=-7881500851533551462)=Initiated(peerParty=O=Mock Company 1, L=London, C=GB, peerFlowInfo=FlowInfo(flowVersion=1, appName=<unknown>), receivedMessages=[], otherSideErrored=false, peerSinkSessionId=SessionId(toLong=7106756066069934968), deduplicationSeed=D-7106756066069934968-4795262264991213571)}, sessionsToBeClosed=[], subFlowStack=[Inlined(flowClass=class net.corda.samples.obligation.flows.IOUSettleFlowResponder, subFlowVersion=CorDappFlow(platformVersion=11, corDappName=workflows-1.0, corDappHash=F8E3613207E5ABAEC38930FAA426F7BA91464AA72DAF3EFB74917A0BA71A146E), isEnabledTimedFlow=false), Inlined(flowClass=class net.corda.core.flows.ReceiveFinalityFlow, subFlowVersion=CoreFlow(platformVersion=11), isEnabledTimedFlow=false), Inlined(flowClass=class net.corda.core.flows.ReceiveFinalityFlow$call$1, subFlowVersion=CoreFlow(platformVersion=11), isEnabledTimedFlow=false)], numberOfSuspends=7, numberOfCommits=8), flowState=Started(flowIORequest=Receive(sessions=[FlowSessionImpl(destination=O=Mock Company 1, L=London, C=GB, sourceSessionId=SessionId(toLong=-7881500851533551462))]), frozenFiber=3897378BDF84ACD165BF765D5F3554B0450D320BF3026C1017658349E9DC7F62), errorState=Clean, result=null, status=RUNNABLE, progressStep=Starting, flowIoRequest=Receive, compatible=true), isCheckpointUpdate=true)
    PersistDeduplicationFacts(deduplicationHandlers=[])
    CommitTransaction
    AcknowledgeMessages(deduplicationHandlers=[])
    ScheduleEvent(event=DoRemainingWork)
  Continuation: ProcessEvents
  Diff between previous and next state:
checkpoint.flowState.flowIORequest: 
    Send(sessionToMessage={FlowSessionImpl(destination=O=Mock Company 1, L=London, C=GB, sourceSessionId=SessionId(toLong=-7881500851533551462))=750D72D7B536ECC243AA7BCFE33530802252BFA2E786F5CF37FC8F4E9EAD1F04})
    Receive(sessions=[FlowSessionImpl(destination=O=Mock Company 1, L=London, C=GB, sourceSessionId=SessionId(toLong=-7881500851533551462))])
checkpoint.flowState.frozenFiber.hash: 
    FE7F145DF26470A5463ECE3C2BC0C7370DBA141497EC9979068C28CCA07981B6
    3897378BDF84ACD165BF765D5F3554B0450D320BF3026C1017658349E9DC7F62
checkpoint.flowIoRequest: 
    Send
    Receive
checkpoint.checkpointState.numberOfSuspends: 
    6
    7
checkpoint.checkpointState.numberOfCommits: 
    7
    8
checkpoint.timestamp: 
    2023-01-31T07:18:19.299Z
    2023-01-31T07:18:19.301Z
numberOfCommits: 
    7
    8
isFlowResumed: 
    true
    false


 --- Transition of flow [65465552-2f28-4612-9b7f-4600ccd28d15] ---
  Timestamp: 2023-01-31T07:18:19.303Z
  Event: DoRemainingWork
  Actions: 
    
  Continuation: ProcessEvents
  Diff between previous and next state:
null

 --- Transition of flow [65465552-2f28-4612-9b7f-4600ccd28d15] ---
  Timestamp: 2023-01-31T07:18:19.642Z
  Event: DeliverSessionMessage(sessionMessage=ExistingSessionMessage(recipientSessionId=SessionId(toLong=-7881500851533551462), payload=ErrorSessionMessage(flowException=null, errorId=-1030127781405848252)), deduplicationHandler=net.corda.testing.node.internal.MockNodeMessagingService$InMemoryDeduplicationHandler@5ef40921, sender=O=Mock Company 1, L=London, C=GB)
  Actions: 
    ScheduleEvent(event=DoRemainingWork)
  Continuation: ProcessEvents
  Diff between previous and next state:
checkpoint.checkpointState.sessions.SessionId(toLong=-7881500851533551462).receivedMessages.isEmpty: 
    true
    false
checkpoint.timestamp: 
    2023-01-31T07:18:19.303Z
    2023-01-31T07:18:19.642Z
pendingDeduplicationHandlers: 
    []
    [net.corda.testing.node.internal.MockNodeMessagingService$InMemoryDeduplicationHandler@5ef40921]


 --- Transition of flow [65465552-2f28-4612-9b7f-4600ccd28d15] ---
  Timestamp: 2023-01-31T07:18:19.642Z
  Event: DoRemainingWork
  Actions: 
    CreateTransaction
  Continuation: Throw(throwable=net.corda.core.flows.UnexpectedFlowEndException: Counter-flow errored)
  Diff between previous and next state:
checkpoint.checkpointState.sessions.SessionId(toLong=-7881500851533551462).receivedMessages.isEmpty: 
    false
    true
checkpoint.checkpointState.sessions.SessionId(toLong=-7881500851533551462).otherSideErrored: 
    false
    true
isFlowResumed: 
    false
    true


 --- Transition of flow [65465552-2f28-4612-9b7f-4600ccd28d15] ---
  Timestamp: 2023-01-31T07:18:19.643Z
  Event: LeaveSubFlow
  Actions: 
    
  Continuation: ProcessEvents
  Diff between previous and next state:
checkpoint.checkpointState.subFlowStack: 
    [Inlined(flowClass=class net.corda.samples.obligation.flows.IOUSettleFlowResponder, subFlowVersion=CorDappFlow(platformVersion=11, corDappName=workflows-1.0, corDappHash=F8E3613207E5ABAEC38930FAA426F7BA91464AA72DAF3EFB74917A0BA71A146E), isEnabledTimedFlow=false), Inlined(flowClass=class net.corda.core.flows.ReceiveFinalityFlow, subFlowVersion=CoreFlow(platformVersion=11), isEnabledTimedFlow=false), Inlined(flowClass=class net.corda.core.flows.ReceiveFinalityFlow$call$1, subFlowVersion=CoreFlow(platformVersion=11), isEnabledTimedFlow=false)]
    [Inlined(flowClass=class net.corda.samples.obligation.flows.IOUSettleFlowResponder, subFlowVersion=CorDappFlow(platformVersion=11, corDappName=workflows-1.0, corDappHash=F8E3613207E5ABAEC38930FAA426F7BA91464AA72DAF3EFB74917A0BA71A146E), isEnabledTimedFlow=false), Inlined(flowClass=class net.corda.core.flows.ReceiveFinalityFlow, subFlowVersion=CoreFlow(platformVersion=11), isEnabledTimedFlow=false)]
checkpoint.timestamp: 
    2023-01-31T07:18:19.642Z
    2023-01-31T07:18:19.643Z


 --- Transition of flow [65465552-2f28-4612-9b7f-4600ccd28d15] ---
  Timestamp: 2023-01-31T07:18:19.643Z
  Event: LeaveSubFlow
  Actions: 
    
  Continuation: ProcessEvents
  Diff between previous and next state:
checkpoint.checkpointState.subFlowStack: 
    [Inlined(flowClass=class net.corda.samples.obligation.flows.IOUSettleFlowResponder, subFlowVersion=CorDappFlow(platformVersion=11, corDappName=workflows-1.0, corDappHash=F8E3613207E5ABAEC38930FAA426F7BA91464AA72DAF3EFB74917A0BA71A146E), isEnabledTimedFlow=false), Inlined(flowClass=class net.corda.core.flows.ReceiveFinalityFlow, subFlowVersion=CoreFlow(platformVersion=11), isEnabledTimedFlow=false)]
    [Inlined(flowClass=class net.corda.samples.obligation.flows.IOUSettleFlowResponder, subFlowVersion=CorDappFlow(platformVersion=11, corDappName=workflows-1.0, corDappHash=F8E3613207E5ABAEC38930FAA426F7BA91464AA72DAF3EFB74917A0BA71A146E), isEnabledTimedFlow=false)]


 --- Transition of flow [65465552-2f28-4612-9b7f-4600ccd28d15] ---
  Timestamp: 2023-01-31T07:18:19.645Z
  Event: Error(exception=net.corda.core.flows.UnexpectedFlowEndException: Counter-flow errored, rollback=true)
  Actions: 
    RollbackTransaction
    ScheduleEvent(event=DoRemainingWork)
  Continuation: ProcessEvents
  Diff between previous and next state:
checkpoint.errorState: 
    Clean
    Errored(errors=[FlowError(errorId=-1030127781405848252, exception=net.corda.core.flows.UnexpectedFlowEndException: Counter-flow errored)], propagatedIndex=0, propagating=false)
isFlowResumed: 
    true
    false


 --- Transition of flow [65465552-2f28-4612-9b7f-4600ccd28d15] ---
  Timestamp: 2023-01-31T07:18:19.645Z
  Event: DoRemainingWork
  Actions: 
    
  Continuation: ProcessEvents
  Diff between previous and next state:
null

 --- Transition of flow [65465552-2f28-4612-9b7f-4600ccd28d15] ---
  Timestamp: 2023-01-31T07:18:19.645Z
  Event: StartErrorPropagation
  Actions: 
    ScheduleEvent(event=DoRemainingWork)
  Continuation: ProcessEvents
  Diff between previous and next state:
checkpoint.errorState.propagating: 
    false
    true
checkpoint.timestamp: 
    2023-01-31T07:18:19.643Z
    2023-01-31T07:18:19.645Z
 {fiber-id=10000028, flow-id=65465552-2f28-4612-9b7f-4600ccd28d15, invocation_id=3e61d329-451f-4c54-becb-c2c3cfdaaa1c, invocation_timestamp=2023-01-31T07:18:19.081Z, origin=O=Mock Company 1, L=London, C=GB, session_id=3e61d329-451f-4c54-becb-c2c3cfdaaa1c, session_timestamp=2023-01-31T07:18:19.081Z, thread-id=854, tx_id=05C00A07D836886589D1648346F3DFE14725CFEC3E8E68B19135B8905C73DF47}
[WARN ] 2023-01-31T07:18:19,658Z [Mock network] interceptors.DumpHistoryOnErrorInterceptor. - Flow [65465552-2f28-4612-9b7f-4600ccd28d15] error {fiber-id=10000028, flow-id=65465552-2f28-4612-9b7f-4600ccd28d15, invocation_id=3e61d329-451f-4c54-becb-c2c3cfdaaa1c, invocation_timestamp=2023-01-31T07:18:19.081Z, origin=O=Mock Company 1, L=London, C=GB, session_id=3e61d329-451f-4c54-becb-c2c3cfdaaa1c, session_timestamp=2023-01-31T07:18:19.081Z, thread-id=854, tx_id=05C00A07D836886589D1648346F3DFE14725CFEC3E8E68B19135B8905C73DF47}
net.corda.core.flows.UnexpectedFlowEndException: Counter-flow errored
	at Received unexpected counter-flow exception from peer O=Mock Company 1, L=London, C=GB.() ~[?:?]
	at net.corda.node.services.statemachine.FlowStateMachineImpl.fillInLocalStackTrace(FlowStateMachineImpl.kt:244) ~[corda-node-4.9.jar:?]
	at net.corda.node.services.statemachine.FlowStateMachineImpl.processEventsUntilFlowIsResumed(FlowStateMachineImpl.kt:225) ~[corda-node-4.9.jar:?]
	at net.corda.node.services.statemachine.FlowStateMachineImpl.suspend(FlowStateMachineImpl.kt:577) ~[corda-node-4.9.jar:?]
	at net.corda.node.services.statemachine.FlowSessionImpl.receive(FlowSessionImpl.kt:67) ~[corda-node-4.9.jar:?]
	at net.corda.node.services.statemachine.FlowSessionImpl.receive(FlowSessionImpl.kt:71) ~[corda-node-4.9.jar:?]
	at net.corda.core.flows.ReceiveTransactionFlow.call(ReceiveTransactionFlow.kt:103) ~[corda-core-4.9.jar:?]
	at net.corda.core.flows.ReceiveTransactionFlow.call(ReceiveTransactionFlow.kt:31) ~[corda-core-4.9.jar:?]
	at net.corda.node.services.statemachine.FlowStateMachineImpl.subFlow(FlowStateMachineImpl.kt:420) ~[corda-node-4.9.jar:?]
	at net.corda.core.flows.FlowLogic.subFlow(FlowLogic.kt:409) ~[corda-core-4.9.jar:?]
	at net.corda.core.flows.ReceiveFinalityFlow.call(FinalityFlow.kt:285) ~[corda-core-4.9.jar:?]
	at net.corda.core.flows.ReceiveFinalityFlow.call(FinalityFlow.kt:280) ~[corda-core-4.9.jar:?]
	at net.corda.node.services.statemachine.FlowStateMachineImpl.subFlow(FlowStateMachineImpl.kt:420) ~[corda-node-4.9.jar:?]
	at net.corda.core.flows.FlowLogic.subFlow(FlowLogic.kt:409) ~[corda-core-4.9.jar:?]
	at net.corda.samples.obligation.flows.IOUSettleFlowResponder.call(IOUSettleFlow.kt:139) ~[main/:?]
	at net.corda.samples.obligation.flows.IOUSettleFlowResponder.call(IOUSettleFlow.kt:126) ~[main/:?]
	at net.corda.node.services.statemachine.FlowStateMachineImpl.run(FlowStateMachineImpl.kt:349) ~[corda-node-4.9.jar:?]
	at net.corda.node.services.statemachine.FlowStateMachineImpl.run(FlowStateMachineImpl.kt:71) ~[corda-node-4.9.jar:?]
	at co.paralleluniverse.fibers.Fiber.run1(Fiber.java:1092) ~[quasar-core-0.7.10.jar:0.7.10]
	at co.paralleluniverse.fibers.Fiber.exec(Fiber.java:788) ~[quasar-core-0.7.10.jar:0.7.10]
	at co.paralleluniverse.fibers.RunnableFiberTask.doExec(RunnableFiberTask.java:100) ~[quasar-core-0.7.10.jar:0.7.10]
	at co.paralleluniverse.fibers.RunnableFiberTask.run(RunnableFiberTask.java:91) ~[quasar-core-0.7.10.jar:0.7.10]
	at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511) ~[?:1.8.0_202]
	at java.util.concurrent.FutureTask.run(FutureTask.java:266) ~[?:1.8.0_202]
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.access$201(ScheduledThreadPoolExecutor.java:180) ~[?:1.8.0_202]
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.run(ScheduledThreadPoolExecutor.java:293) ~[?:1.8.0_202]
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149) ~[?:1.8.0_202]
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624) ~[?:1.8.0_202]
	at net.corda.node.utilities.AffinityExecutor$ServiceAffinityExecutor$1$thread$1.run(AffinityExecutor.kt:63) ~[corda-node-4.9.jar:?]
[WARN ] 2023-01-31T07:18:19,658Z [Mock network] statemachine.ActionExecutorImpl. - Propagating error {fiber-id=10000028, flow-id=65465552-2f28-4612-9b7f-4600ccd28d15, invocation_id=3e61d329-451f-4c54-becb-c2c3cfdaaa1c, invocation_timestamp=2023-01-31T07:18:19.081Z, origin=O=Mock Company 1, L=London, C=GB, session_id=3e61d329-451f-4c54-becb-c2c3cfdaaa1c, session_timestamp=2023-01-31T07:18:19.081Z, thread-id=854, tx_id=05C00A07D836886589D1648346F3DFE14725CFEC3E8E68B19135B8905C73DF47}
[WARN ] 2023-01-31T07:18:19,677Z [Mock network] interceptors.DumpHistoryOnErrorInterceptor. - Flow [65465552-2f28-4612-9b7f-4600ccd28d15] errored, dumping all transitions:

 --- Transition of flow [65465552-2f28-4612-9b7f-4600ccd28d15] ---
  Timestamp: 2023-01-31T07:18:19.087Z
  Event: DoRemainingWork
  Actions: 
    CreateTransaction
    PersistCheckpoint(id=[65465552-2f28-4612-9b7f-4600ccd28d15], checkpoint=Checkpoint(checkpointState=CheckpointState(invocationContext=InvocationContext(origin=Peer(party=O=Mock Company 1, L=London, C=GB), trace=Trace(invocationId=3e61d329-451f-4c54-becb-c2c3cfdaaa1c, timestamp: 2023-01-31T07:18:19.081Z, entityType: Invocation, sessionId=3e61d329-451f-4c54-becb-c2c3cfdaaa1c, timestamp: 2023-01-31T07:18:19.081Z, entityType: Session), actor=null, externalTrace=null, impersonatedActor=null, arguments=[], clientId=null), ourIdentity=O=Mock Company 3, L=London, C=GB, sessions={}, sessionsToBeClosed=[], subFlowStack=[Inlined(flowClass=class net.corda.samples.obligation.flows.IOUSettleFlowResponder, subFlowVersion=CorDappFlow(platformVersion=11, corDappName=workflows-1.0, corDappHash=F8E3613207E5ABAEC38930FAA426F7BA91464AA72DAF3EFB74917A0BA71A146E), isEnabledTimedFlow=false)], numberOfSuspends=0, numberOfCommits=1), flowState=Unstarted(flowStart=Initiated, frozenFlowLogic=A795C23AF2C2C968B413E1B38F6B190AEB35ADFDEC5ACC3B38D17B9E941EA735), errorState=Clean, result=null, status=RUNNABLE, progressStep=null, flowIoRequest=null, compatible=true), isCheckpointUpdate=false)
    PersistDeduplicationFacts(deduplicationHandlers=[net.corda.testing.node.internal.MockNodeMessagingService$InMemoryDeduplicationHandler@2d029871])
    CommitTransaction
    AcknowledgeMessages(deduplicationHandlers=[net.corda.testing.node.internal.MockNodeMessagingService$InMemoryDeduplicationHandler@2d029871])
    SignalFlowHasStarted(flowId=[65465552-2f28-4612-9b7f-4600ccd28d15])
    SendExisting(peerParty=O=Mock Company 1, L=London, C=GB, message=ExistingSessionMessage(recipientSessionId=SessionId(toLong=7106756066069934968), payload=ConfirmSessionMessage(initiatedSessionId=SessionId(toLong=-7881500851533551462), initiatedFlowInfo=FlowInfo(flowVersion=1, appName=<unknown>))), deduplicationId=SenderDeduplicationId(deduplicationId=DeduplicationId(toString=N-D-7106756066069934968-4795262264991213571-0-0), senderUUID=5e9b81e5-439f-421e-bc83-def5a58fd155))
    CreateTransaction
  Continuation: Resume(result=null)
  Diff between previous and next state:
checkpoint.checkpointState.sessions.SessionId(toLong=-7881500851533551462): 
    null
    Initiated(peerParty=O=Mock Company 1, L=London, C=GB, peerFlowInfo=FlowInfo(flowVersion=1, appName=<unknown>), receivedMessages=[DataSessionMessage(payload=class net.corda.core.serialization.SerializedBytes)], otherSideErrored=false, peerSinkSessionId=SessionId(toLong=7106756066069934968), deduplicationSeed=D-7106756066069934968-4795262264991213571)
checkpoint.timestamp: 
    2023-01-31T07:18:19.082Z
    2023-01-31T07:18:19.083Z
isAnyCheckpointPersisted: 
    false
    true
isFlowResumed: 
    false
    true
pendingDeduplicationHandlers: 
    [net.corda.testing.node.internal.MockNodeMessagingService$InMemoryDeduplicationHandler@2d029871]
    []


 --- Transition of flow [65465552-2f28-4612-9b7f-4600ccd28d15] ---
  Timestamp: 2023-01-31T07:18:19.090Z
  Event: EnterSubFlow(subFlowClass=class net.corda.samples.obligation.flows.IOUSettleFlowResponder$call$signedTransactionFlow$1, subFlowVersion=CoreFlow(platformVersion=11), isEnabledTimedFlow=false)
  Actions: 
    
  Continuation: ProcessEvents
  Diff between previous and next state:
checkpoint.checkpointState.subFlowStack: 
    [Inlined(flowClass=class net.corda.samples.obligation.flows.IOUSettleFlowResponder, subFlowVersion=CorDappFlow(platformVersion=11, corDappName=workflows-1.0, corDappHash=F8E3613207E5ABAEC38930FAA426F7BA91464AA72DAF3EFB74917A0BA71A146E), isEnabledTimedFlow=false)]
    [Inlined(flowClass=class net.corda.samples.obligation.flows.IOUSettleFlowResponder, subFlowVersion=CorDappFlow(platformVersion=11, corDappName=workflows-1.0, corDappHash=F8E3613207E5ABAEC38930FAA426F7BA91464AA72DAF3EFB74917A0BA71A146E), isEnabledTimedFlow=false), Inlined(flowClass=class net.corda.samples.obligation.flows.IOUSettleFlowResponder$call$signedTransactionFlow$1, subFlowVersion=CoreFlow(platformVersion=11), isEnabledTimedFlow=false)]
checkpoint.timestamp: 
    2023-01-31T07:18:19.083Z
    2023-01-31T07:18:19.090Z


 --- Transition of flow [65465552-2f28-4612-9b7f-4600ccd28d15] ---
  Timestamp: 2023-01-31T07:18:19.091Z
  Event: EnterSubFlow(subFlowClass=class net.corda.core.flows.ReceiveTransactionFlow, subFlowVersion=CoreFlow(platformVersion=11), isEnabledTimedFlow=false)
  Actions: 
    
  Continuation: ProcessEvents
  Diff between previous and next state:
checkpoint.checkpointState.subFlowStack: 
    [Inlined(flowClass=class net.corda.samples.obligation.flows.IOUSettleFlowResponder, subFlowVersion=CorDappFlow(platformVersion=11, corDappName=workflows-1.0, corDappHash=F8E3613207E5ABAEC38930FAA426F7BA91464AA72DAF3EFB74917A0BA71A146E), isEnabledTimedFlow=false), Inlined(flowClass=class net.corda.samples.obligation.flows.IOUSettleFlowResponder$call$signedTransactionFlow$1, subFlowVersion=CoreFlow(platformVersion=11), isEnabledTimedFlow=false)]
    [Inlined(flowClass=class net.corda.samples.obligation.flows.IOUSettleFlowResponder, subFlowVersion=CorDappFlow(platformVersion=11, corDappName=workflows-1.0, corDappHash=F8E3613207E5ABAEC38930FAA426F7BA91464AA72DAF3EFB74917A0BA71A146E), isEnabledTimedFlow=false), Inlined(flowClass=class net.corda.samples.obligation.flows.IOUSettleFlowResponder$call$signedTransactionFlow$1, subFlowVersion=CoreFlow(platformVersion=11), isEnabledTimedFlow=false), Inlined(flowClass=class net.corda.core.flows.ReceiveTransactionFlow, subFlowVersion=CoreFlow(platformVersion=11), isEnabledTimedFlow=false)]
checkpoint.timestamp: 
    2023-01-31T07:18:19.090Z
    2023-01-31T07:18:19.091Z


 --- Transition of flow [65465552-2f28-4612-9b7f-4600ccd28d15] ---
  Timestamp: 2023-01-31T07:18:19.096Z
  Event: Suspend(ioRequest=Receive(sessions=[FlowSessionImpl(destination=O=Mock Company 1, L=London, C=GB, sourceSessionId=SessionId(toLong=-7881500851533551462))]), maySkipCheckpoint=false, fiber=1FD5453BA34F1C626549B753D35C1AEFAADB657A7D85C5BDA7040F35B221D7AB, currentStep=Starting)
  Actions: 
    PersistCheckpoint(id=[65465552-2f28-4612-9b7f-4600ccd28d15], checkpoint=Checkpoint(checkpointState=CheckpointState(invocationContext=InvocationContext(origin=Peer(party=O=Mock Company 1, L=London, C=GB), trace=Trace(invocationId=3e61d329-451f-4c54-becb-c2c3cfdaaa1c, timestamp: 2023-01-31T07:18:19.081Z, entityType: Invocation, sessionId=3e61d329-451f-4c54-becb-c2c3cfdaaa1c, timestamp: 2023-01-31T07:18:19.081Z, entityType: Session), actor=null, externalTrace=null, impersonatedActor=null, arguments=[], clientId=null), ourIdentity=O=Mock Company 3, L=London, C=GB, sessions={SessionId(toLong=-7881500851533551462)=Initiated(peerParty=O=Mock Company 1, L=London, C=GB, peerFlowInfo=FlowInfo(flowVersion=1, appName=<unknown>), receivedMessages=[DataSessionMessage(payload=class net.corda.core.serialization.SerializedBytes)], otherSideErrored=false, peerSinkSessionId=SessionId(toLong=7106756066069934968), deduplicationSeed=D-7106756066069934968-4795262264991213571)}, sessionsToBeClosed=[], subFlowStack=[Inlined(flowClass=class net.corda.samples.obligation.flows.IOUSettleFlowResponder, subFlowVersion=CorDappFlow(platformVersion=11, corDappName=workflows-1.0, corDappHash=F8E3613207E5ABAEC38930FAA426F7BA91464AA72DAF3EFB74917A0BA71A146E), isEnabledTimedFlow=false), Inlined(flowClass=class net.corda.samples.obligation.flows.IOUSettleFlowResponder$call$signedTransactionFlow$1, subFlowVersion=CoreFlow(platformVersion=11), isEnabledTimedFlow=false), Inlined(flowClass=class net.corda.core.flows.ReceiveTransactionFlow, subFlowVersion=CoreFlow(platformVersion=11), isEnabledTimedFlow=false)], numberOfSuspends=1, numberOfCommits=2), flowState=Started(flowIORequest=Receive(sessions=[FlowSessionImpl(destination=O=Mock Company 1, L=London, C=GB, sourceSessionId=SessionId(toLong=-7881500851533551462))]), frozenFiber=1FD5453BA34F1C626549B753D35C1AEFAADB657A7D85C5BDA7040F35B221D7AB), errorState=Clean, result=null, status=RUNNABLE, progressStep=Starting, flowIoRequest=Receive, compatible=true), isCheckpointUpdate=true)
    PersistDeduplicationFacts(deduplicationHandlers=[])
    CommitTransaction
    AcknowledgeMessages(deduplicationHandlers=[])
    ScheduleEvent(event=DoRemainingWork)
  Continuation: ProcessEvents
  Diff between previous and next state:
checkpoint.flowState: 
    Unstarted(flowStart=Initiated, frozenFlowLogic=A795C23AF2C2C968B413E1B38F6B190AEB35ADFDEC5ACC3B38D17B9E941EA735)
    Started(flowIORequest=Receive(sessions=[FlowSessionImpl(destination=O=Mock Company 1, L=London, C=GB, sourceSessionId=SessionId(toLong=-7881500851533551462))]), frozenFiber=1FD5453BA34F1C626549B753D35C1AEFAADB657A7D85C5BDA7040F35B221D7AB)
checkpoint.flowIoRequest: 
    null
    Receive
checkpoint.checkpointState.numberOfSuspends: 
    0
    1
checkpoint.checkpointState.numberOfCommits: 
    1
    2
checkpoint.progressStep: 
    null
    Starting
checkpoint.timestamp: 
    2023-01-31T07:18:19.091Z
    2023-01-31T07:18:19.093Z
numberOfCommits: 
    0
    2
isFlowResumed: 
    true
    false


 --- Transition of flow [65465552-2f28-4612-9b7f-4600ccd28d15] ---
  Timestamp: 2023-01-31T07:18:19.096Z
  Event: DoRemainingWork
  Actions: 
    CreateTransaction
  Continuation: Resume(result=class java.util.LinkedHashMap)
  Diff between previous and next state:
checkpoint.checkpointState.sessions.SessionId(toLong=-7881500851533551462).receivedMessages.isEmpty: 
    false
    true
checkpoint.timestamp: 
    2023-01-31T07:18:19.093Z
    2023-01-31T07:18:19.096Z
isFlowResumed: 
    false
    true


 --- Transition of flow [65465552-2f28-4612-9b7f-4600ccd28d15] ---
  Timestamp: 2023-01-31T07:18:19.099Z
  Event: EnterSubFlow(subFlowClass=class net.corda.core.internal.ResolveTransactionsFlow, subFlowVersion=CoreFlow(platformVersion=11), isEnabledTimedFlow=false)
  Actions: 
    
  Continuation: ProcessEvents
  Diff between previous and next state:
checkpoint.checkpointState.subFlowStack: 
    [Inlined(flowClass=class net.corda.samples.obligation.flows.IOUSettleFlowResponder, subFlowVersion=CorDappFlow(platformVersion=11, corDappName=workflows-1.0, corDappHash=F8E3613207E5ABAEC38930FAA426F7BA91464AA72DAF3EFB74917A0BA71A146E), isEnabledTimedFlow=false), Inlined(flowClass=class net.corda.samples.obligation.flows.IOUSettleFlowResponder$call$signedTransactionFlow$1, subFlowVersion=CoreFlow(platformVersion=11), isEnabledTimedFlow=false), Inlined(flowClass=class net.corda.core.flows.ReceiveTransactionFlow, subFlowVersion=CoreFlow(platformVersion=11), isEnabledTimedFlow=false)]
    [Inlined(flowClass=class net.corda.samples.obligation.flows.IOUSettleFlowResponder, subFlowVersion=CorDappFlow(platformVersion=11, corDappName=workflows-1.0, corDappHash=F8E3613207E5ABAEC38930FAA426F7BA91464AA72DAF3EFB74917A0BA71A146E), isEnabledTimedFlow=false), Inlined(flowClass=class net.corda.samples.obligation.flows.IOUSettleFlowResponder$call$signedTransactionFlow$1, subFlowVersion=CoreFlow(platformVersion=11), isEnabledTimedFlow=false), Inlined(flowClass=class net.corda.core.flows.ReceiveTransactionFlow, subFlowVersion=CoreFlow(platformVersion=11), isEnabledTimedFlow=false), Inlined(flowClass=class net.corda.core.internal.ResolveTransactionsFlow, subFlowVersion=CoreFlow(platformVersion=11), isEnabledTimedFlow=false)]
checkpoint.timestamp: 
    2023-01-31T07:18:19.096Z
    2023-01-31T07:18:19.099Z


 --- Transition of flow [65465552-2f28-4612-9b7f-4600ccd28d15] ---
  Timestamp: 2023-01-31T07:18:19.099Z
  Event: EnterSubFlow(subFlowClass=class net.corda.core.internal.FetchAttachmentsFlow, subFlowVersion=CoreFlow(platformVersion=11), isEnabledTimedFlow=false)
  Actions: 
    
  Continuation: ProcessEvents
  Diff between previous and next state:
checkpoint.checkpointState.subFlowStack: 
    [Inlined(flowClass=class net.corda.samples.obligation.flows.IOUSettleFlowResponder, subFlowVersion=CorDappFlow(platformVersion=11, corDappName=workflows-1.0, corDappHash=F8E3613207E5ABAEC38930FAA426F7BA91464AA72DAF3EFB74917A0BA71A146E), isEnabledTimedFlow=false), Inlined(flowClass=class net.corda.samples.obligation.flows.IOUSettleFlowResponder$call$signedTransactionFlow$1, subFlowVersion=CoreFlow(platformVersion=11), isEnabledTimedFlow=false), Inlined(flowClass=class net.corda.core.flows.ReceiveTransactionFlow, subFlowVersion=CoreFlow(platformVersion=11), isEnabledTimedFlow=false), Inlined(flowClass=class net.corda.core.internal.ResolveTransactionsFlow, subFlowVersion=CoreFlow(platformVersion=11), isEnabledTimedFlow=false)]
    [Inlined(flowClass=class net.corda.samples.obligation.flows.IOUSettleFlowResponder, subFlowVersion=CorDappFlow(platformVersion=11, corDappName=workflows-1.0, corDappHash=F8E3613207E5ABAEC38930FAA426F7BA91464AA72DAF3EFB74917A0BA71A146E), isEnabledTimedFlow=false), Inlined(flowClass=class net.corda.samples.obligation.flows.IOUSettleFlowResponder$call$signedTransactionFlow$1, subFlowVersion=CoreFlow(platformVersion=11), isEnabledTimedFlow=false), Inlined(flowClass=class net.corda.core.flows.ReceiveTransactionFlow, subFlowVersion=CoreFlow(platformVersion=11), isEnabledTimedFlow=false), Inlined(flowClass=class net.corda.core.internal.ResolveTransactionsFlow, subFlowVersion=CoreFlow(platformVersion=11), isEnabledTimedFlow=false), Inlined(flowClass=class net.corda.core.internal.FetchAttachmentsFlow, subFlowVersion=CoreFlow(platformVersion=11), isEnabledTimedFlow=false)]


 --- Transition of flow [65465552-2f28-4612-9b7f-4600ccd28d15] ---
  Timestamp: 2023-01-31T07:18:19.102Z
  Event: LeaveSubFlow
  Actions: 
    
  Continuation: ProcessEvents
  Diff between previous and next state:
checkpoint.checkpointState.subFlowStack: 
    [Inlined(flowClass=class net.corda.samples.obligation.flows.IOUSettleFlowResponder, subFlowVersion=CorDappFlow(platformVersion=11, corDappName=workflows-1.0, corDappHash=F8E3613207E5ABAEC38930FAA426F7BA91464AA72DAF3EFB74917A0BA71A146E), isEnabledTimedFlow=false), Inlined(flowClass=class net.corda.samples.obligation.flows.IOUSettleFlowResponder$call$signedTransactionFlow$1, subFlowVersion=CoreFlow(platformVersion=11), isEnabledTimedFlow=false), Inlined(flowClass=class net.corda.core.flows.ReceiveTransactionFlow, subFlowVersion=CoreFlow(platformVersion=11), isEnabledTimedFlow=false), Inlined(flowClass=class net.corda.core.internal.ResolveTransactionsFlow, subFlowVersion=CoreFlow(platformVersion=11), isEnabledTimedFlow=false), Inlined(flowClass=class net.corda.core.internal.FetchAttachmentsFlow, subFlowVersion=CoreFlow(platformVersion=11), isEnabledTimedFlow=false)]
    [Inlined(flowClass=class net.corda.samples.obligation.flows.IOUSettleFlowResponder, subFlowVersion=CorDappFlow(platformVersion=11, corDappName=workflows-1.0, corDappHash=F8E3613207E5ABAEC38930FAA426F7BA91464AA72DAF3EFB74917A0BA71A146E), isEnabledTimedFlow=false), Inlined(flowClass=class net.corda.samples.obligation.flows.IOUSettleFlowResponder$call$signedTransactionFlow$1, subFlowVersion=CoreFlow(platformVersion=11), isEnabledTimedFlow=false), Inlined(flowClass=class net.corda.core.flows.ReceiveTransactionFlow, subFlowVersion=CoreFlow(platformVersion=11), isEnabledTimedFlow=false), Inlined(flowClass=class net.corda.core.internal.ResolveTransactionsFlow, subFlowVersion=CoreFlow(platformVersion=11), isEnabledTimedFlow=false)]
checkpoint.timestamp: 
    2023-01-31T07:18:19.099Z
    2023-01-31T07:18:19.102Z


 --- Transition of flow [65465552-2f28-4612-9b7f-4600ccd28d15] ---
  Timestamp: 2023-01-31T07:18:19.102Z
  Event: EnterSubFlow(subFlowClass=class net.corda.core.internal.FetchNetworkParametersFlow, subFlowVersion=CoreFlow(platformVersion=11), isEnabledTimedFlow=false)
  Actions: 
    
  Continuation: ProcessEvents
  Diff between previous and next state:
checkpoint.checkpointState.subFlowStack: 
    [Inlined(flowClass=class net.corda.samples.obligation.flows.IOUSettleFlowResponder, subFlowVersion=CorDappFlow(platformVersion=11, corDappName=workflows-1.0, corDappHash=F8E3613207E5ABAEC38930FAA426F7BA91464AA72DAF3EFB74917A0BA71A146E), isEnabledTimedFlow=false), Inlined(flowClass=class net.corda.samples.obligation.flows.IOUSettleFlowResponder$call$signedTransactionFlow$1, subFlowVersion=CoreFlow(platformVersion=11), isEnabledTimedFlow=false), Inlined(flowClass=class net.corda.core.flows.ReceiveTransactionFlow, subFlowVersion=CoreFlow(platformVersion=11), isEnabledTimedFlow=false), Inlined(flowClass=class net.corda.core.internal.ResolveTransactionsFlow, subFlowVersion=CoreFlow(platformVersion=11), isEnabledTimedFlow=false)]
    [Inlined(flowClass=class net.corda.samples.obligation.flows.IOUSettleFlowResponder, subFlowVersion=CorDappFlow(platformVersion=11, corDappName=workflows-1.0, corDappHash=F8E3613207E5ABAEC38930FAA426F7BA91464AA72DAF3EFB74917A0BA71A146E), isEnabledTimedFlow=false), Inlined(flowClass=class net.corda.samples.obligation.flows.IOUSettleFlowResponder$call$signedTransactionFlow$1, subFlowVersion=CoreFlow(platformVersion=11), isEnabledTimedFlow=false), Inlined(flowClass=class net.corda.core.flows.ReceiveTransactionFlow, subFlowVersion=CoreFlow(platformVersion=11), isEnabledTimedFlow=false), Inlined(flowClass=class net.corda.core.internal.ResolveTransactionsFlow, subFlowVersion=CoreFlow(platformVersion=11), isEnabledTimedFlow=false), Inlined(flowClass=class net.corda.core.internal.FetchNetworkParametersFlow, subFlowVersion=CoreFlow(platformVersion=11), isEnabledTimedFlow=false)]


 --- Transition of flow [65465552-2f28-4612-9b7f-4600ccd28d15] ---
  Timestamp: 2023-01-31T07:18:19.102Z
  Event: LeaveSubFlow
  Actions: 
    
  Continuation: ProcessEvents
  Diff between previous and next state:
checkpoint.checkpointState.subFlowStack: 
    [Inlined(flowClass=class net.corda.samples.obligation.flows.IOUSettleFlowResponder, subFlowVersion=CorDappFlow(platformVersion=11, corDappName=workflows-1.0, corDappHash=F8E3613207E5ABAEC38930FAA426F7BA91464AA72DAF3EFB74917A0BA71A146E), isEnabledTimedFlow=false), Inlined(flowClass=class net.corda.samples.obligation.flows.IOUSettleFlowResponder$call$signedTransactionFlow$1, subFlowVersion=CoreFlow(platformVersion=11), isEnabledTimedFlow=false), Inlined(flowClass=class net.corda.core.flows.ReceiveTransactionFlow, subFlowVersion=CoreFlow(platformVersion=11), isEnabledTimedFlow=false), Inlined(flowClass=class net.corda.core.internal.ResolveTransactionsFlow, subFlowVersion=CoreFlow(platformVersion=11), isEnabledTimedFlow=false), Inlined(flowClass=class net.corda.core.internal.FetchNetworkParametersFlow, subFlowVersion=CoreFlow(platformVersion=11), isEnabledTimedFlow=false)]
    [Inlined(flowClass=class net.corda.samples.obligation.flows.IOUSettleFlowResponder, subFlowVersion=CorDappFlow(platformVersion=11, corDappName=workflows-1.0, corDappHash=F8E3613207E5ABAEC38930FAA426F7BA91464AA72DAF3EFB74917A0BA71A146E), isEnabledTimedFlow=false), Inlined(flowClass=class net.corda.samples.obligation.flows.IOUSettleFlowResponder$call$signedTransactionFlow$1, subFlowVersion=CoreFlow(platformVersion=11), isEnabledTimedFlow=false), Inlined(flowClass=class net.corda.core.flows.ReceiveTransactionFlow, subFlowVersion=CoreFlow(platformVersion=11), isEnabledTimedFlow=false), Inlined(flowClass=class net.corda.core.internal.ResolveTransactionsFlow, subFlowVersion=CoreFlow(platformVersion=11), isEnabledTimedFlow=false)]


 --- Transition of flow [65465552-2f28-4612-9b7f-4600ccd28d15] ---
  Timestamp: 2023-01-31T07:18:19.102Z
  Event: EnterSubFlow(subFlowClass=class net.corda.core.internal.FetchTransactionsFlow, subFlowVersion=CoreFlow(platformVersion=11), isEnabledTimedFlow=false)
  Actions: 
    
  Continuation: ProcessEvents
  Diff between previous and next state:
checkpoint.checkpointState.subFlowStack: 
    [Inlined(flowClass=class net.corda.samples.obligation.flows.IOUSettleFlowResponder, subFlowVersion=CorDappFlow(platformVersion=11, corDappName=workflows-1.0, corDappHash=F8E3613207E5ABAEC38930FAA426F7BA91464AA72DAF3EFB74917A0BA71A146E), isEnabledTimedFlow=false), Inlined(flowClass=class net.corda.samples.obligation.flows.IOUSettleFlowResponder$call$signedTransactionFlow$1, subFlowVersion=CoreFlow(platformVersion=11), isEnabledTimedFlow=false), Inlined(flowClass=class net.corda.core.flows.ReceiveTransactionFlow, subFlowVersion=CoreFlow(platformVersion=11), isEnabledTimedFlow=false), Inlined(flowClass=class net.corda.core.internal.ResolveTransactionsFlow, subFlowVersion=CoreFlow(platformVersion=11), isEnabledTimedFlow=false)]
    [Inlined(flowClass=class net.corda.samples.obligation.flows.IOUSettleFlowResponder, subFlowVersion=CorDappFlow(platformVersion=11, corDappName=workflows-1.0, corDappHash=F8E3613207E5ABAEC38930FAA426F7BA91464AA72DAF3EFB74917A0BA71A146E), isEnabledTimedFlow=false), Inlined(flowClass=class net.corda.samples.obligation.flows.IOUSettleFlowResponder$call$signedTransactionFlow$1, subFlowVersion=CoreFlow(platformVersion=11), isEnabledTimedFlow=false), Inlined(flowClass=class net.corda.core.flows.ReceiveTransactionFlow, subFlowVersion=CoreFlow(platformVersion=11), isEnabledTimedFlow=false), Inlined(flowClass=class net.corda.core.internal.ResolveTransactionsFlow, subFlowVersion=CoreFlow(platformVersion=11), isEnabledTimedFlow=false), Inlined(flowClass=class net.corda.core.internal.FetchTransactionsFlow, subFlowVersion=CoreFlow(platformVersion=11), isEnabledTimedFlow=false)]


 --- Transition of flow [65465552-2f28-4612-9b7f-4600ccd28d15] ---
  Timestamp: 2023-01-31T07:18:19.109Z
  Event: Suspend(ioRequest=SendAndReceive({FlowSessionImpl(destination=O=Mock Company 1, L=London, C=GB, sourceSessionId=SessionId(toLong=-7881500851533551462))=FlowSessionImpl(destination=O=Mock Company 1, L=London, C=GB, sourceSessionId=SessionId(toLong=-7881500851533551462))=F7334ACA5083C32E54A2E181968AF455FC284C9C764D17306F4A0D527974B71C}, shouldRetrySend=false), maySkipCheckpoint=false, fiber=10C9014CEB637B2BB13A672B602DA6FE5767E49DE753EFA07D80AAB2AC086724, currentStep=Starting)
  Actions: 
    PersistCheckpoint(id=[65465552-2f28-4612-9b7f-4600ccd28d15], checkpoint=Checkpoint(checkpointState=CheckpointState(invocationContext=InvocationContext(origin=Peer(party=O=Mock Company 1, L=London, C=GB), trace=Trace(invocationId=3e61d329-451f-4c54-becb-c2c3cfdaaa1c, timestamp: 2023-01-31T07:18:19.081Z, entityType: Invocation, sessionId=3e61d329-451f-4c54-becb-c2c3cfdaaa1c, timestamp: 2023-01-31T07:18:19.081Z, entityType: Session), actor=null, externalTrace=null, impersonatedActor=null, arguments=[], clientId=null), ourIdentity=O=Mock Company 3, L=London, C=GB, sessions={SessionId(toLong=-7881500851533551462)=Initiated(peerParty=O=Mock Company 1, L=London, C=GB, peerFlowInfo=FlowInfo(flowVersion=1, appName=<unknown>), receivedMessages=[], otherSideErrored=false, peerSinkSessionId=SessionId(toLong=7106756066069934968), deduplicationSeed=D-7106756066069934968-4795262264991213571)}, sessionsToBeClosed=[], subFlowStack=[Inlined(flowClass=class net.corda.samples.obligation.flows.IOUSettleFlowResponder, subFlowVersion=CorDappFlow(platformVersion=11, corDappName=workflows-1.0, corDappHash=F8E3613207E5ABAEC38930FAA426F7BA91464AA72DAF3EFB74917A0BA71A146E), isEnabledTimedFlow=false), Inlined(flowClass=class net.corda.samples.obligation.flows.IOUSettleFlowResponder$call$signedTransactionFlow$1, subFlowVersion=CoreFlow(platformVersion=11), isEnabledTimedFlow=false), Inlined(flowClass=class net.corda.core.flows.ReceiveTransactionFlow, subFlowVersion=CoreFlow(platformVersion=11), isEnabledTimedFlow=false), Inlined(flowClass=class net.corda.core.internal.ResolveTransactionsFlow, subFlowVersion=CoreFlow(platformVersion=11), isEnabledTimedFlow=false), Inlined(flowClass=class net.corda.core.internal.FetchTransactionsFlow, subFlowVersion=CoreFlow(platformVersion=11), isEnabledTimedFlow=false)], numberOfSuspends=2, numberOfCommits=3), flowState=Started(flowIORequest=SendAndReceive({FlowSessionImpl(destination=O=Mock Company 1, L=London, C=GB, sourceSessionId=SessionId(toLong=-7881500851533551462))=FlowSessionImpl(destination=O=Mock Company 1, L=London, C=GB, sourceSessionId=SessionId(toLong=-7881500851533551462))=F7334ACA5083C32E54A2E181968AF455FC284C9C764D17306F4A0D527974B71C}, shouldRetrySend=false), frozenFiber=10C9014CEB637B2BB13A672B602DA6FE5767E49DE753EFA07D80AAB2AC086724), errorState=Clean, result=null, status=RUNNABLE, progressStep=Starting, flowIoRequest=SendAndReceive, compatible=true), isCheckpointUpdate=true)
    PersistDeduplicationFacts(deduplicationHandlers=[])
    CommitTransaction
    AcknowledgeMessages(deduplicationHandlers=[])
    ScheduleEvent(event=DoRemainingWork)
  Continuation: ProcessEvents
  Diff between previous and next state:
checkpoint.flowState.flowIORequest: 
    Receive(sessions=[FlowSessionImpl(destination=O=Mock Company 1, L=London, C=GB, sourceSessionId=SessionId(toLong=-7881500851533551462))])
    SendAndReceive({FlowSessionImpl(destination=O=Mock Company 1, L=London, C=GB, sourceSessionId=SessionId(toLong=-7881500851533551462))=FlowSessionImpl(destination=O=Mock Company 1, L=London, C=GB, sourceSessionId=SessionId(toLong=-7881500851533551462))=F7334ACA5083C32E54A2E181968AF455FC284C9C764D17306F4A0D527974B71C}, shouldRetrySend=false)
checkpoint.flowState.frozenFiber.hash: 
    1FD5453BA34F1C626549B753D35C1AEFAADB657A7D85C5BDA7040F35B221D7AB
    10C9014CEB637B2BB13A672B602DA6FE5767E49DE753EFA07D80AAB2AC086724
checkpoint.flowIoRequest: 
    Receive
    SendAndReceive
checkpoint.checkpointState.numberOfSuspends: 
    1
    2
checkpoint.checkpointState.numberOfCommits: 
    2
    3
checkpoint.timestamp: 
    2023-01-31T07:18:19.102Z
    2023-01-31T07:18:19.107Z
numberOfCommits: 
    2
    3
isFlowResumed: 
    true
    false


 --- Transition of flow [65465552-2f28-4612-9b7f-4600ccd28d15] ---
  Timestamp: 2023-01-31T07:18:19.110Z
  Event: DoRemainingWork
  Actions: 
    SendMultiple(sendInitial=[], sendExisting=[SendExisting(peerParty=O=Mock Company 1, L=London, C=GB, message=ExistingSessionMessage(recipientSessionId=SessionId(toLong=7106756066069934968), payload=DataSessionMessage(payload=class net.corda.core.serialization.SerializedBytes)), deduplicationId=SenderDeduplicationId(deduplicationId=DeduplicationId(toString=N-D-7106756066069934968-4795262264991213571-2-0), senderUUID=5e9b81e5-439f-421e-bc83-def5a58fd155))])
  Continuation: ProcessEvents
  Diff between previous and next state:
checkpoint.flowState.flowIORequest: 
    SendAndReceive({FlowSessionImpl(destination=O=Mock Company 1, L=London, C=GB, sourceSessionId=SessionId(toLong=-7881500851533551462))=FlowSessionImpl(destination=O=Mock Company 1, L=London, C=GB, sourceSessionId=SessionId(toLong=-7881500851533551462))=F7334ACA5083C32E54A2E181968AF455FC284C9C764D17306F4A0D527974B71C}, shouldRetrySend=false)
    Receive(sessions=[FlowSessionImpl(destination=O=Mock Company 1, L=London, C=GB, sourceSessionId=SessionId(toLong=-7881500851533551462))])
checkpoint.timestamp: 
    2023-01-31T07:18:19.107Z
    2023-01-31T07:18:19.109Z


 --- Transition of flow [65465552-2f28-4612-9b7f-4600ccd28d15] ---
  Timestamp: 2023-01-31T07:18:19.123Z
  Event: DeliverSessionMessage(sessionMessage=ExistingSessionMessage(recipientSessionId=SessionId(toLong=-7881500851533551462), payload=DataSessionMessage(payload=class net.corda.core.serialization.SerializedBytes)), deduplicationHandler=net.corda.testing.node.internal.MockNodeMessagingService$InMemoryDeduplicationHandler@534121f1, sender=O=Mock Company 1, L=London, C=GB)
  Actions: 
    ScheduleEvent(event=DoRemainingWork)
  Continuation: ProcessEvents
  Diff between previous and next state:
checkpoint.checkpointState.sessions.SessionId(toLong=-7881500851533551462).receivedMessages.isEmpty: 
    true
    false
checkpoint.timestamp: 
    2023-01-31T07:18:19.109Z
    2023-01-31T07:18:19.123Z
pendingDeduplicationHandlers: 
    []
    [net.corda.testing.node.internal.MockNodeMessagingService$InMemoryDeduplicationHandler@534121f1]


 --- Transition of flow [65465552-2f28-4612-9b7f-4600ccd28d15] ---
  Timestamp: 2023-01-31T07:18:19.124Z
  Event: DoRemainingWork
  Actions: 
    CreateTransaction
  Continuation: Resume(result=class java.util.LinkedHashMap)
  Diff between previous and next state:
checkpoint.checkpointState.sessions.SessionId(toLong=-7881500851533551462).receivedMessages.isEmpty: 
    false
    true
isFlowResumed: 
    false
    true


 --- Transition of flow [65465552-2f28-4612-9b7f-4600ccd28d15] ---
  Timestamp: 2023-01-31T07:18:19.125Z
  Event: LeaveSubFlow
  Actions: 
    
  Continuation: ProcessEvents
  Diff between previous and next state:
checkpoint.checkpointState.subFlowStack: 
    [Inlined(flowClass=class net.corda.samples.obligation.flows.IOUSettleFlowResponder, subFlowVersion=CorDappFlow(platformVersion=11, corDappName=workflows-1.0, corDappHash=F8E3613207E5ABAEC38930FAA426F7BA91464AA72DAF3EFB74917A0BA71A146E), isEnabledTimedFlow=false), Inlined(flowClass=class net.corda.samples.obligation.flows.IOUSettleFlowResponder$call$signedTransactionFlow$1, subFlowVersion=CoreFlow(platformVersion=11), isEnabledTimedFlow=false), Inlined(flowClass=class net.corda.core.flows.ReceiveTransactionFlow, subFlowVersion=CoreFlow(platformVersion=11), isEnabledTimedFlow=false), Inlined(flowClass=class net.corda.core.internal.ResolveTransactionsFlow, subFlowVersion=CoreFlow(platformVersion=11), isEnabledTimedFlow=false), Inlined(flowClass=class net.corda.core.internal.FetchTransactionsFlow, subFlowVersion=CoreFlow(platformVersion=11), isEnabledTimedFlow=false)]
    [Inlined(flowClass=class net.corda.samples.obligation.flows.IOUSettleFlowResponder, subFlowVersion=CorDappFlow(platformVersion=11, corDappName=workflows-1.0, corDappHash=F8E3613207E5ABAEC38930FAA426F7BA91464AA72DAF3EFB74917A0BA71A146E), isEnabledTimedFlow=false), Inlined(flowClass=class net.corda.samples.obligation.flows.IOUSettleFlowResponder$call$signedTransactionFlow$1, subFlowVersion=CoreFlow(platformVersion=11), isEnabledTimedFlow=false), Inlined(flowClass=class net.corda.core.flows.ReceiveTransactionFlow, subFlowVersion=CoreFlow(platformVersion=11), isEnabledTimedFlow=false), Inlined(flowClass=class net.corda.core.internal.ResolveTransactionsFlow, subFlowVersion=CoreFlow(platformVersion=11), isEnabledTimedFlow=false)]
checkpoint.timestamp: 
    2023-01-31T07:18:19.123Z
    2023-01-31T07:18:19.125Z


 --- Transition of flow [65465552-2f28-4612-9b7f-4600ccd28d15] ---
  Timestamp: 2023-01-31T07:18:19.127Z
  Event: EnterSubFlow(subFlowClass=class net.corda.core.internal.FetchAttachmentsFlow, subFlowVersion=CoreFlow(platformVersion=11), isEnabledTimedFlow=false)
  Actions: 
    
  Continuation: ProcessEvents
  Diff between previous and next state:
checkpoint.checkpointState.subFlowStack: 
    [Inlined(flowClass=class net.corda.samples.obligation.flows.IOUSettleFlowResponder, subFlowVersion=CorDappFlow(platformVersion=11, corDappName=workflows-1.0, corDappHash=F8E3613207E5ABAEC38930FAA426F7BA91464AA72DAF3EFB74917A0BA71A146E), isEnabledTimedFlow=false), Inlined(flowClass=class net.corda.samples.obligation.flows.IOUSettleFlowResponder$call$signedTransactionFlow$1, subFlowVersion=CoreFlow(platformVersion=11), isEnabledTimedFlow=false), Inlined(flowClass=class net.corda.core.flows.ReceiveTransactionFlow, subFlowVersion=CoreFlow(platformVersion=11), isEnabledTimedFlow=false), Inlined(flowClass=class net.corda.core.internal.ResolveTransactionsFlow, subFlowVersion=CoreFlow(platformVersion=11), isEnabledTimedFlow=false)]
    [Inlined(flowClass=class net.corda.samples.obligation.flows.IOUSettleFlowResponder, subFlowVersion=CorDappFlow(platformVersion=11, corDappName=workflows-1.0, corDappHash=F8E3613207E5ABAEC38930FAA426F7BA91464AA72DAF3EFB74917A0BA71A146E), isEnabledTimedFlow=false), Inlined(flowClass=class net.corda.samples.obligation.flows.IOUSettleFlowResponder$call$signedTransactionFlow$1, subFlowVersion=CoreFlow(platformVersion=11), isEnabledTimedFlow=false), Inlined(flowClass=class net.corda.core.flows.ReceiveTransactionFlow, subFlowVersion=CoreFlow(platformVersion=11), isEnabledTimedFlow=false), Inlined(flowClass=class net.corda.core.internal.ResolveTransactionsFlow, subFlowVersion=CoreFlow(platformVersion=11), isEnabledTimedFlow=false), Inlined(flowClass=class net.corda.core.internal.FetchAttachmentsFlow, subFlowVersion=CoreFlow(platformVersion=11), isEnabledTimedFlow=false)]
checkpoint.timestamp: 
    2023-01-31T07:18:19.125Z
    2023-01-31T07:18:19.127Z


 --- Transition of flow [65465552-2f28-4612-9b7f-4600ccd28d15] ---
  Timestamp: 2023-01-31T07:18:19.127Z
  Event: LeaveSubFlow
  Actions: 
    
  Continuation: ProcessEvents
  Diff between previous and next state:
checkpoint.checkpointState.subFlowStack: 
    [Inlined(flowClass=class net.corda.samples.obligation.flows.IOUSettleFlowResponder, subFlowVersion=CorDappFlow(platformVersion=11, corDappName=workflows-1.0, corDappHash=F8E3613207E5ABAEC38930FAA426F7BA91464AA72DAF3EFB74917A0BA71A146E), isEnabledTimedFlow=false), Inlined(flowClass=class net.corda.samples.obligation.flows.IOUSettleFlowResponder$call$signedTransactionFlow$1, subFlowVersion=CoreFlow(platformVersion=11), isEnabledTimedFlow=false), Inlined(flowClass=class net.corda.core.flows.ReceiveTransactionFlow, subFlowVersion=CoreFlow(platformVersion=11), isEnabledTimedFlow=false), Inlined(flowClass=class net.corda.core.internal.ResolveTransactionsFlow, subFlowVersion=CoreFlow(platformVersion=11), isEnabledTimedFlow=false), Inlined(flowClass=class net.corda.core.internal.FetchAttachmentsFlow, subFlowVersion=CoreFlow(platformVersion=11), isEnabledTimedFlow=false)]
    [Inlined(flowClass=class net.corda.samples.obligation.flows.IOUSettleFlowResponder, subFlowVersion=CorDappFlow(platformVersion=11, corDappName=workflows-1.0, corDappHash=F8E3613207E5ABAEC38930FAA426F7BA91464AA72DAF3EFB74917A0BA71A146E), isEnabledTimedFlow=false), Inlined(flowClass=class net.corda.samples.obligation.flows.IOUSettleFlowResponder$call$signedTransactionFlow$1, subFlowVersion=CoreFlow(platformVersion=11), isEnabledTimedFlow=false), Inlined(flowClass=class net.corda.core.flows.ReceiveTransactionFlow, subFlowVersion=CoreFlow(platformVersion=11), isEnabledTimedFlow=false), Inlined(flowClass=class net.corda.core.internal.ResolveTransactionsFlow, subFlowVersion=CoreFlow(platformVersion=11), isEnabledTimedFlow=false)]


 --- Transition of flow [65465552-2f28-4612-9b7f-4600ccd28d15] ---
  Timestamp: 2023-01-31T07:18:19.127Z
  Event: EnterSubFlow(subFlowClass=class net.corda.core.internal.FetchNetworkParametersFlow, subFlowVersion=CoreFlow(platformVersion=11), isEnabledTimedFlow=false)
  Actions: 
    
  Continuation: ProcessEvents
  Diff between previous and next state:
checkpoint.checkpointState.subFlowStack: 
    [Inlined(flowClass=class net.corda.samples.obligation.flows.IOUSettleFlowResponder, subFlowVersion=CorDappFlow(platformVersion=11, corDappName=workflows-1.0, corDappHash=F8E3613207E5ABAEC38930FAA426F7BA91464AA72DAF3EFB74917A0BA71A146E), isEnabledTimedFlow=false), Inlined(flowClass=class net.corda.samples.obligation.flows.IOUSettleFlowResponder$call$signedTransactionFlow$1, subFlowVersion=CoreFlow(platformVersion=11), isEnabledTimedFlow=false), Inlined(flowClass=class net.corda.core.flows.ReceiveTransactionFlow, subFlowVersion=CoreFlow(platformVersion=11), isEnabledTimedFlow=false), Inlined(flowClass=class net.corda.core.internal.ResolveTransactionsFlow, subFlowVersion=CoreFlow(platformVersion=11), isEnabledTimedFlow=false)]
    [Inlined(flowClass=class net.corda.samples.obligation.flows.IOUSettleFlowResponder, subFlowVersion=CorDappFlow(platformVersion=11, corDappName=workflows-1.0, corDappHash=F8E3613207E5ABAEC38930FAA426F7BA91464AA72DAF3EFB74917A0BA71A146E), isEnabledTimedFlow=false), Inlined(flowClass=class net.corda.samples.obligation.flows.IOUSettleFlowResponder$call$signedTransactionFlow$1, subFlowVersion=CoreFlow(platformVersion=11), isEnabledTimedFlow=false), Inlined(flowClass=class net.corda.core.flows.ReceiveTransactionFlow, subFlowVersion=CoreFlow(platformVersion=11), isEnabledTimedFlow=false), Inlined(flowClass=class net.corda.core.internal.ResolveTransactionsFlow, subFlowVersion=CoreFlow(platformVersion=11), isEnabledTimedFlow=false), Inlined(flowClass=class net.corda.core.internal.FetchNetworkParametersFlow, subFlowVersion=CoreFlow(platformVersion=11), isEnabledTimedFlow=false)]


 --- Transition of flow [65465552-2f28-4612-9b7f-4600ccd28d15] ---
  Timestamp: 2023-01-31T07:18:19.127Z
  Event: LeaveSubFlow
  Actions: 
    
  Continuation: ProcessEvents
  Diff between previous and next state:
checkpoint.checkpointState.subFlowStack: 
    [Inlined(flowClass=class net.corda.samples.obligation.flows.IOUSettleFlowResponder, subFlowVersion=CorDappFlow(platformVersion=11, corDappName=workflows-1.0, corDappHash=F8E3613207E5ABAEC38930FAA426F7BA91464AA72DAF3EFB74917A0BA71A146E), isEnabledTimedFlow=false), Inlined(flowClass=class net.corda.samples.obligation.flows.IOUSettleFlowResponder$call$signedTransactionFlow$1, subFlowVersion=CoreFlow(platformVersion=11), isEnabledTimedFlow=false), Inlined(flowClass=class net.corda.core.flows.ReceiveTransactionFlow, subFlowVersion=CoreFlow(platformVersion=11), isEnabledTimedFlow=false), Inlined(flowClass=class net.corda.core.internal.ResolveTransactionsFlow, subFlowVersion=CoreFlow(platformVersion=11), isEnabledTimedFlow=false), Inlined(flowClass=class net.corda.core.internal.FetchNetworkParametersFlow, subFlowVersion=CoreFlow(platformVersion=11), isEnabledTimedFlow=false)]
    [Inlined(flowClass=class net.corda.samples.obligation.flows.IOUSettleFlowResponder, subFlowVersion=CorDappFlow(platformVersion=11, corDappName=workflows-1.0, corDappHash=F8E3613207E5ABAEC38930FAA426F7BA91464AA72DAF3EFB74917A0BA71A146E), isEnabledTimedFlow=false), Inlined(flowClass=class net.corda.samples.obligation.flows.IOUSettleFlowResponder$call$signedTransactionFlow$1, subFlowVersion=CoreFlow(platformVersion=11), isEnabledTimedFlow=false), Inlined(flowClass=class net.corda.core.flows.ReceiveTransactionFlow, subFlowVersion=CoreFlow(platformVersion=11), isEnabledTimedFlow=false), Inlined(flowClass=class net.corda.core.internal.ResolveTransactionsFlow, subFlowVersion=CoreFlow(platformVersion=11), isEnabledTimedFlow=false)]


 --- Transition of flow [65465552-2f28-4612-9b7f-4600ccd28d15] ---
  Timestamp: 2023-01-31T07:18:19.131Z
  Event: Suspend(ioRequest=Sleep(wakeUpAfter=2023-01-31T07:18:19.127Z), maySkipCheckpoint=false, fiber=6317571F848C91E947B1C80D48706AA6E6421E12738522E203F7BC72F140A974, currentStep=Starting)
  Actions: 
    PersistCheckpoint(id=[65465552-2f28-4612-9b7f-4600ccd28d15], checkpoint=Checkpoint(checkpointState=CheckpointState(invocationContext=InvocationContext(origin=Peer(party=O=Mock Company 1, L=London, C=GB), trace=Trace(invocationId=3e61d329-451f-4c54-becb-c2c3cfdaaa1c, timestamp: 2023-01-31T07:18:19.081Z, entityType: Invocation, sessionId=3e61d329-451f-4c54-becb-c2c3cfdaaa1c, timestamp: 2023-01-31T07:18:19.081Z, entityType: Session), actor=null, externalTrace=null, impersonatedActor=null, arguments=[], clientId=null), ourIdentity=O=Mock Company 3, L=London, C=GB, sessions={SessionId(toLong=-7881500851533551462)=Initiated(peerParty=O=Mock Company 1, L=London, C=GB, peerFlowInfo=FlowInfo(flowVersion=1, appName=<unknown>), receivedMessages=[], otherSideErrored=false, peerSinkSessionId=SessionId(toLong=7106756066069934968), deduplicationSeed=D-7106756066069934968-4795262264991213571)}, sessionsToBeClosed=[], subFlowStack=[Inlined(flowClass=class net.corda.samples.obligation.flows.IOUSettleFlowResponder, subFlowVersion=CorDappFlow(platformVersion=11, corDappName=workflows-1.0, corDappHash=F8E3613207E5ABAEC38930FAA426F7BA91464AA72DAF3EFB74917A0BA71A146E), isEnabledTimedFlow=false), Inlined(flowClass=class net.corda.samples.obligation.flows.IOUSettleFlowResponder$call$signedTransactionFlow$1, subFlowVersion=CoreFlow(platformVersion=11), isEnabledTimedFlow=false), Inlined(flowClass=class net.corda.core.flows.ReceiveTransactionFlow, subFlowVersion=CoreFlow(platformVersion=11), isEnabledTimedFlow=false), Inlined(flowClass=class net.corda.core.internal.ResolveTransactionsFlow, subFlowVersion=CoreFlow(platformVersion=11), isEnabledTimedFlow=false)], numberOfSuspends=3, numberOfCommits=4), flowState=Started(flowIORequest=Sleep(wakeUpAfter=2023-01-31T07:18:19.127Z), frozenFiber=6317571F848C91E947B1C80D48706AA6E6421E12738522E203F7BC72F140A974), errorState=Clean, result=null, status=RUNNABLE, progressStep=Starting, flowIoRequest=Sleep, compatible=true), isCheckpointUpdate=true)
    PersistDeduplicationFacts(deduplicationHandlers=[net.corda.testing.node.internal.MockNodeMessagingService$InMemoryDeduplicationHandler@534121f1])
    CommitTransaction
    AcknowledgeMessages(deduplicationHandlers=[net.corda.testing.node.internal.MockNodeMessagingService$InMemoryDeduplicationHandler@534121f1])
    ScheduleEvent(event=DoRemainingWork)
  Continuation: ProcessEvents
  Diff between previous and next state:
checkpoint.flowState.flowIORequest: 
    Receive(sessions=[FlowSessionImpl(destination=O=Mock Company 1, L=London, C=GB, sourceSessionId=SessionId(toLong=-7881500851533551462))])
    Sleep(wakeUpAfter=2023-01-31T07:18:19.127Z)
checkpoint.flowState.frozenFiber.hash: 
    10C9014CEB637B2BB13A672B602DA6FE5767E49DE753EFA07D80AAB2AC086724
    6317571F848C91E947B1C80D48706AA6E6421E12738522E203F7BC72F140A974
checkpoint.flowIoRequest: 
    SendAndReceive
    Sleep
checkpoint.checkpointState.numberOfSuspends: 
    2
    3
checkpoint.checkpointState.numberOfCommits: 
    3
    4
checkpoint.timestamp: 
    2023-01-31T07:18:19.127Z
    2023-01-31T07:18:19.129Z
numberOfCommits: 
    3
    4
isFlowResumed: 
    true
    false
pendingDeduplicationHandlers: 
    [net.corda.testing.node.internal.MockNodeMessagingService$InMemoryDeduplicationHandler@534121f1]
    []


 --- Transition of flow [65465552-2f28-4612-9b7f-4600ccd28d15] ---
  Timestamp: 2023-01-31T07:18:19.131Z
  Event: DoRemainingWork
  Actions: 
    SleepUntil(currentState=StateMachineState(checkpoint=Checkpoint(checkpointState=CheckpointState(invocationContext=InvocationContext(origin=Peer(party=O=Mock Company 1, L=London, C=GB), trace=Trace(invocationId=3e61d329-451f-4c54-becb-c2c3cfdaaa1c, timestamp: 2023-01-31T07:18:19.081Z, entityType: Invocation, sessionId=3e61d329-451f-4c54-becb-c2c3cfdaaa1c, timestamp: 2023-01-31T07:18:19.081Z, entityType: Session), actor=null, externalTrace=null, impersonatedActor=null, arguments=[], clientId=null), ourIdentity=O=Mock Company 3, L=London, C=GB, sessions={SessionId(toLong=-7881500851533551462)=Initiated(peerParty=O=Mock Company 1, L=London, C=GB, peerFlowInfo=FlowInfo(flowVersion=1, appName=<unknown>), receivedMessages=[], otherSideErrored=false, peerSinkSessionId=SessionId(toLong=7106756066069934968), deduplicationSeed=D-7106756066069934968-4795262264991213571)}, sessionsToBeClosed=[], subFlowStack=[Inlined(flowClass=class net.corda.samples.obligation.flows.IOUSettleFlowResponder, subFlowVersion=CorDappFlow(platformVersion=11, corDappName=workflows-1.0, corDappHash=F8E3613207E5ABAEC38930FAA426F7BA91464AA72DAF3EFB74917A0BA71A146E), isEnabledTimedFlow=false), Inlined(flowClass=class net.corda.samples.obligation.flows.IOUSettleFlowResponder$call$signedTransactionFlow$1, subFlowVersion=CoreFlow(platformVersion=11), isEnabledTimedFlow=false), Inlined(flowClass=class net.corda.core.flows.ReceiveTransactionFlow, subFlowVersion=CoreFlow(platformVersion=11), isEnabledTimedFlow=false), Inlined(flowClass=class net.corda.core.internal.ResolveTransactionsFlow, subFlowVersion=CoreFlow(platformVersion=11), isEnabledTimedFlow=false)], numberOfSuspends=3, numberOfCommits=4), flowState=Started(flowIORequest=Sleep(wakeUpAfter=2023-01-31T07:18:19.127Z), frozenFiber=6317571F848C91E947B1C80D48706AA6E6421E12738522E203F7BC72F140A974), errorState=Clean, result=null, status=RUNNABLE, progressStep=Starting, flowIoRequest=Sleep, compatible=true), flowLogic=net.corda.samples.obligation.flows.IOUSettleFlowResponder@8e2e06, pendingDeduplicationHandlers=[], isFlowResumed=false, isWaitingForFuture=true, future=java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask@863b3a3, isAnyCheckpointPersisted=true, isStartIdempotent=false, isRemoved=false, isKilled=false, isDead=false, senderUUID=5e9b81e5-439f-421e-bc83-def5a58fd155, reloadCheckpointAfterSuspendCount=null, numberOfCommits=4, lock=java.util.concurrent.Semaphore@6637a9cb[Permits = 0]), time=2023-01-31T07:18:19.127Z)
  Continuation: ProcessEvents
  Diff between previous and next state:
future: 
    null
    java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask@863b3a3
isWaitingForFuture: 
    false
    true


 --- Transition of flow [65465552-2f28-4612-9b7f-4600ccd28d15] ---
  Timestamp: 2023-01-31T07:18:19.132Z
  Event: WakeUpSleepyFlow
  Actions: 
    CreateTransaction
  Continuation: Resume(result=class kotlin.Unit)
  Diff between previous and next state:
future: 
    java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask@863b3a3
    null
isFlowResumed: 
    false
    true
isWaitingForFuture: 
    true
    false


 --- Transition of flow [65465552-2f28-4612-9b7f-4600ccd28d15] ---
  Timestamp: 2023-01-31T07:18:19.132Z
  Event: EnterSubFlow(subFlowClass=class net.corda.core.internal.FetchTransactionsFlow, subFlowVersion=CoreFlow(platformVersion=11), isEnabledTimedFlow=false)
  Actions: 
    
  Continuation: ProcessEvents
  Diff between previous and next state:
checkpoint.checkpointState.subFlowStack: 
    [Inlined(flowClass=class net.corda.samples.obligation.flows.IOUSettleFlowResponder, subFlowVersion=CorDappFlow(platformVersion=11, corDappName=workflows-1.0, corDappHash=F8E3613207E5ABAEC38930FAA426F7BA91464AA72DAF3EFB74917A0BA71A146E), isEnabledTimedFlow=false), Inlined(flowClass=class net.corda.samples.obligation.flows.IOUSettleFlowResponder$call$signedTransactionFlow$1, subFlowVersion=CoreFlow(platformVersion=11), isEnabledTimedFlow=false), Inlined(flowClass=class net.corda.core.flows.ReceiveTransactionFlow, subFlowVersion=CoreFlow(platformVersion=11), isEnabledTimedFlow=false), Inlined(flowClass=class net.corda.core.internal.ResolveTransactionsFlow, subFlowVersion=CoreFlow(platformVersion=11), isEnabledTimedFlow=false)]
    [Inlined(flowClass=class net.corda.samples.obligation.flows.IOUSettleFlowResponder, subFlowVersion=CorDappFlow(platformVersion=11, corDappName=workflows-1.0, corDappHash=F8E3613207E5ABAEC38930FAA426F7BA91464AA72DAF3EFB74917A0BA71A146E), isEnabledTimedFlow=false), Inlined(flowClass=class net.corda.samples.obligation.flows.IOUSettleFlowResponder$call$signedTransactionFlow$1, subFlowVersion=CoreFlow(platformVersion=11), isEnabledTimedFlow=false), Inlined(flowClass=class net.corda.core.flows.ReceiveTransactionFlow, subFlowVersion=CoreFlow(platformVersion=11), isEnabledTimedFlow=false), Inlined(flowClass=class net.corda.core.internal.ResolveTransactionsFlow, subFlowVersion=CoreFlow(platformVersion=11), isEnabledTimedFlow=false), Inlined(flowClass=class net.corda.core.internal.FetchTransactionsFlow, subFlowVersion=CoreFlow(platformVersion=11), isEnabledTimedFlow=false)]
checkpoint.timestamp: 
    2023-01-31T07:18:19.129Z
    2023-01-31T07:18:19.132Z


 --- Transition of flow [65465552-2f28-4612-9b7f-4600ccd28d15] ---
  Timestamp: 2023-01-31T07:18:19.132Z
  Event: LeaveSubFlow
  Actions: 
    
  Continuation: ProcessEvents
  Diff between previous and next state:
checkpoint.checkpointState.subFlowStack: 
    [Inlined(flowClass=class net.corda.samples.obligation.flows.IOUSettleFlowResponder, subFlowVersion=CorDappFlow(platformVersion=11, corDappName=workflows-1.0, corDappHash=F8E3613207E5ABAEC38930FAA426F7BA91464AA72DAF3EFB74917A0BA71A146E), isEnabledTimedFlow=false), Inlined(flowClass=class net.corda.samples.obligation.flows.IOUSettleFlowResponder$call$signedTransactionFlow$1, subFlowVersion=CoreFlow(platformVersion=11), isEnabledTimedFlow=false), Inlined(flowClass=class net.corda.core.flows.ReceiveTransactionFlow, subFlowVersion=CoreFlow(platformVersion=11), isEnabledTimedFlow=false), Inlined(flowClass=class net.corda.core.internal.ResolveTransactionsFlow, subFlowVersion=CoreFlow(platformVersion=11), isEnabledTimedFlow=false), Inlined(flowClass=class net.corda.core.internal.FetchTransactionsFlow, subFlowVersion=CoreFlow(platformVersion=11), isEnabledTimedFlow=false)]
    [Inlined(flowClass=class net.corda.samples.obligation.flows.IOUSettleFlowResponder, subFlowVersion=CorDappFlow(platformVersion=11, corDappName=workflows-1.0, corDappHash=F8E3613207E5ABAEC38930FAA426F7BA91464AA72DAF3EFB74917A0BA71A146E), isEnabledTimedFlow=false), Inlined(flowClass=class net.corda.samples.obligation.flows.IOUSettleFlowResponder$call$signedTransactionFlow$1, subFlowVersion=CoreFlow(platformVersion=11), isEnabledTimedFlow=false), Inlined(flowClass=class net.corda.core.flows.ReceiveTransactionFlow, subFlowVersion=CoreFlow(platformVersion=11), isEnabledTimedFlow=false), Inlined(flowClass=class net.corda.core.internal.ResolveTransactionsFlow, subFlowVersion=CoreFlow(platformVersion=11), isEnabledTimedFlow=false)]


 --- Transition of flow [65465552-2f28-4612-9b7f-4600ccd28d15] ---
  Timestamp: 2023-01-31T07:18:19.136Z
  Event: Suspend(ioRequest=Send(sessionToMessage={FlowSessionImpl(destination=O=Mock Company 1, L=London, C=GB, sourceSessionId=SessionId(toLong=-7881500851533551462))=768AED61FD2A58D74D7316731407E0600065080E1F3E6397EE4FA5AEFEE79295}), maySkipCheckpoint=false, fiber=7B3963E087DB133C740AA30FD953A8433D1FEE1FB45A695401E12EF359D5CA27, currentStep=Starting)
  Actions: 
    PersistCheckpoint(id=[65465552-2f28-4612-9b7f-4600ccd28d15], checkpoint=Checkpoint(checkpointState=CheckpointState(invocationContext=InvocationContext(origin=Peer(party=O=Mock Company 1, L=London, C=GB), trace=Trace(invocationId=3e61d329-451f-4c54-becb-c2c3cfdaaa1c, timestamp: 2023-01-31T07:18:19.081Z, entityType: Invocation, sessionId=3e61d329-451f-4c54-becb-c2c3cfdaaa1c, timestamp: 2023-01-31T07:18:19.081Z, entityType: Session), actor=null, externalTrace=null, impersonatedActor=null, arguments=[], clientId=null), ourIdentity=O=Mock Company 3, L=London, C=GB, sessions={SessionId(toLong=-7881500851533551462)=Initiated(peerParty=O=Mock Company 1, L=London, C=GB, peerFlowInfo=FlowInfo(flowVersion=1, appName=<unknown>), receivedMessages=[], otherSideErrored=false, peerSinkSessionId=SessionId(toLong=7106756066069934968), deduplicationSeed=D-7106756066069934968-4795262264991213571)}, sessionsToBeClosed=[], subFlowStack=[Inlined(flowClass=class net.corda.samples.obligation.flows.IOUSettleFlowResponder, subFlowVersion=CorDappFlow(platformVersion=11, corDappName=workflows-1.0, corDappHash=F8E3613207E5ABAEC38930FAA426F7BA91464AA72DAF3EFB74917A0BA71A146E), isEnabledTimedFlow=false), Inlined(flowClass=class net.corda.samples.obligation.flows.IOUSettleFlowResponder$call$signedTransactionFlow$1, subFlowVersion=CoreFlow(platformVersion=11), isEnabledTimedFlow=false), Inlined(flowClass=class net.corda.core.flows.ReceiveTransactionFlow, subFlowVersion=CoreFlow(platformVersion=11), isEnabledTimedFlow=false), Inlined(flowClass=class net.corda.core.internal.ResolveTransactionsFlow, subFlowVersion=CoreFlow(platformVersion=11), isEnabledTimedFlow=false)], numberOfSuspends=4, numberOfCommits=5), flowState=Started(flowIORequest=Send(sessionToMessage={FlowSessionImpl(destination=O=Mock Company 1, L=London, C=GB, sourceSessionId=SessionId(toLong=-7881500851533551462))=768AED61FD2A58D74D7316731407E0600065080E1F3E6397EE4FA5AEFEE79295}), frozenFiber=7B3963E087DB133C740AA30FD953A8433D1FEE1FB45A695401E12EF359D5CA27), errorState=Clean, result=null, status=RUNNABLE, progressStep=Starting, flowIoRequest=Send, compatible=true), isCheckpointUpdate=true)
    PersistDeduplicationFacts(deduplicationHandlers=[])
    CommitTransaction
    AcknowledgeMessages(deduplicationHandlers=[])
    ScheduleEvent(event=DoRemainingWork)
  Continuation: ProcessEvents
  Diff between previous and next state:
checkpoint.flowState.flowIORequest: 
    Sleep(wakeUpAfter=2023-01-31T07:18:19.127Z)
    Send(sessionToMessage={FlowSessionImpl(destination=O=Mock Company 1, L=London, C=GB, sourceSessionId=SessionId(toLong=-7881500851533551462))=768AED61FD2A58D74D7316731407E0600065080E1F3E6397EE4FA5AEFEE79295})
checkpoint.flowState.frozenFiber.hash: 
    6317571F848C91E947B1C80D48706AA6E6421E12738522E203F7BC72F140A974
    7B3963E087DB133C740AA30FD953A8433D1FEE1FB45A695401E12EF359D5CA27
checkpoint.flowIoRequest: 
    Sleep
    Send
checkpoint.checkpointState.numberOfSuspends: 
    3
    4
checkpoint.checkpointState.numberOfCommits: 
    4
    5
checkpoint.timestamp: 
    2023-01-31T07:18:19.132Z
    2023-01-31T07:18:19.134Z
numberOfCommits: 
    4
    5
isFlowResumed: 
    true
    false


 --- Transition of flow [65465552-2f28-4612-9b7f-4600ccd28d15] ---
  Timestamp: 2023-01-31T07:18:19.137Z
  Event: DoRemainingWork
  Actions: 
    SendMultiple(sendInitial=[], sendExisting=[SendExisting(peerParty=O=Mock Company 1, L=London, C=GB, message=ExistingSessionMessage(recipientSessionId=SessionId(toLong=7106756066069934968), payload=DataSessionMessage(payload=class net.corda.core.serialization.SerializedBytes)), deduplicationId=SenderDeduplicationId(deduplicationId=DeduplicationId(toString=N-D-7106756066069934968-4795262264991213571-4-0), senderUUID=5e9b81e5-439f-421e-bc83-def5a58fd155))])
    CreateTransaction
  Continuation: Resume(result=class kotlin.Unit)
  Diff between previous and next state:
isFlowResumed: 
    false
    true


 --- Transition of flow [65465552-2f28-4612-9b7f-4600ccd28d15] ---
  Timestamp: 2023-01-31T07:18:19.194Z
  Event: LeaveSubFlow
  Actions: 
    
  Continuation: ProcessEvents
  Diff between previous and next state:
checkpoint.checkpointState.subFlowStack: 
    [Inlined(flowClass=class net.corda.samples.obligation.flows.IOUSettleFlowResponder, subFlowVersion=CorDappFlow(platformVersion=11, corDappName=workflows-1.0, corDappHash=F8E3613207E5ABAEC38930FAA426F7BA91464AA72DAF3EFB74917A0BA71A146E), isEnabledTimedFlow=false), Inlined(flowClass=class net.corda.samples.obligation.flows.IOUSettleFlowResponder$call$signedTransactionFlow$1, subFlowVersion=CoreFlow(platformVersion=11), isEnabledTimedFlow=false), Inlined(flowClass=class net.corda.core.flows.ReceiveTransactionFlow, subFlowVersion=CoreFlow(platformVersion=11), isEnabledTimedFlow=false), Inlined(flowClass=class net.corda.core.internal.ResolveTransactionsFlow, subFlowVersion=CoreFlow(platformVersion=11), isEnabledTimedFlow=false)]
    [Inlined(flowClass=class net.corda.samples.obligation.flows.IOUSettleFlowResponder, subFlowVersion=CorDappFlow(platformVersion=11, corDappName=workflows-1.0, corDappHash=F8E3613207E5ABAEC38930FAA426F7BA91464AA72DAF3EFB74917A0BA71A146E), isEnabledTimedFlow=false), Inlined(flowClass=class net.corda.samples.obligation.flows.IOUSettleFlowResponder$call$signedTransactionFlow$1, subFlowVersion=CoreFlow(platformVersion=11), isEnabledTimedFlow=false), Inlined(flowClass=class net.corda.core.flows.ReceiveTransactionFlow, subFlowVersion=CoreFlow(platformVersion=11), isEnabledTimedFlow=false)]
checkpoint.timestamp: 
    2023-01-31T07:18:19.136Z
    2023-01-31T07:18:19.194Z


 --- Transition of flow [65465552-2f28-4612-9b7f-4600ccd28d15] ---
  Timestamp: 2023-01-31T07:18:19.272Z
  Event: LeaveSubFlow
  Actions: 
    
  Continuation: ProcessEvents
  Diff between previous and next state:
checkpoint.checkpointState.subFlowStack: 
    [Inlined(flowClass=class net.corda.samples.obligation.flows.IOUSettleFlowResponder, subFlowVersion=CorDappFlow(platformVersion=11, corDappName=workflows-1.0, corDappHash=F8E3613207E5ABAEC38930FAA426F7BA91464AA72DAF3EFB74917A0BA71A146E), isEnabledTimedFlow=false), Inlined(flowClass=class net.corda.samples.obligation.flows.IOUSettleFlowResponder$call$signedTransactionFlow$1, subFlowVersion=CoreFlow(platformVersion=11), isEnabledTimedFlow=false), Inlined(flowClass=class net.corda.core.flows.ReceiveTransactionFlow, subFlowVersion=CoreFlow(platformVersion=11), isEnabledTimedFlow=false)]
    [Inlined(flowClass=class net.corda.samples.obligation.flows.IOUSettleFlowResponder, subFlowVersion=CorDappFlow(platformVersion=11, corDappName=workflows-1.0, corDappHash=F8E3613207E5ABAEC38930FAA426F7BA91464AA72DAF3EFB74917A0BA71A146E), isEnabledTimedFlow=false), Inlined(flowClass=class net.corda.samples.obligation.flows.IOUSettleFlowResponder$call$signedTransactionFlow$1, subFlowVersion=CoreFlow(platformVersion=11), isEnabledTimedFlow=false)]
checkpoint.timestamp: 
    2023-01-31T07:18:19.194Z
    2023-01-31T07:18:19.272Z


 --- Transition of flow [65465552-2f28-4612-9b7f-4600ccd28d15] ---
  Timestamp: 2023-01-31T07:18:19.276Z
  Event: Suspend(ioRequest=Receive(sessions=[FlowSessionImpl(destination=O=Mock Company 1, L=London, C=GB, sourceSessionId=SessionId(toLong=-7881500851533551462))]), maySkipCheckpoint=false, fiber=5CE23CC9F8D83065D61265941B2446BFE549FB89055521BB268E91003B4E2B5A, currentStep=Starting)
  Actions: 
    PersistCheckpoint(id=[65465552-2f28-4612-9b7f-4600ccd28d15], checkpoint=Checkpoint(checkpointState=CheckpointState(invocationContext=InvocationContext(origin=Peer(party=O=Mock Company 1, L=London, C=GB), trace=Trace(invocationId=3e61d329-451f-4c54-becb-c2c3cfdaaa1c, timestamp: 2023-01-31T07:18:19.081Z, entityType: Invocation, sessionId=3e61d329-451f-4c54-becb-c2c3cfdaaa1c, timestamp: 2023-01-31T07:18:19.081Z, entityType: Session), actor=null, externalTrace=null, impersonatedActor=null, arguments=[], clientId=null), ourIdentity=O=Mock Company 3, L=London, C=GB, sessions={SessionId(toLong=-7881500851533551462)=Initiated(peerParty=O=Mock Company 1, L=London, C=GB, peerFlowInfo=FlowInfo(flowVersion=1, appName=<unknown>), receivedMessages=[], otherSideErrored=false, peerSinkSessionId=SessionId(toLong=7106756066069934968), deduplicationSeed=D-7106756066069934968-4795262264991213571)}, sessionsToBeClosed=[], subFlowStack=[Inlined(flowClass=class net.corda.samples.obligation.flows.IOUSettleFlowResponder, subFlowVersion=CorDappFlow(platformVersion=11, corDappName=workflows-1.0, corDappHash=F8E3613207E5ABAEC38930FAA426F7BA91464AA72DAF3EFB74917A0BA71A146E), isEnabledTimedFlow=false), Inlined(flowClass=class net.corda.samples.obligation.flows.IOUSettleFlowResponder$call$signedTransactionFlow$1, subFlowVersion=CoreFlow(platformVersion=11), isEnabledTimedFlow=false)], numberOfSuspends=5, numberOfCommits=6), flowState=Started(flowIORequest=Receive(sessions=[FlowSessionImpl(destination=O=Mock Company 1, L=London, C=GB, sourceSessionId=SessionId(toLong=-7881500851533551462))]), frozenFiber=5CE23CC9F8D83065D61265941B2446BFE549FB89055521BB268E91003B4E2B5A), errorState=Clean, result=null, status=RUNNABLE, progressStep=Starting, flowIoRequest=Receive, compatible=true), isCheckpointUpdate=true)
    PersistDeduplicationFacts(deduplicationHandlers=[])
    CommitTransaction
    AcknowledgeMessages(deduplicationHandlers=[])
    ScheduleEvent(event=DoRemainingWork)
  Continuation: ProcessEvents
  Diff between previous and next state:
checkpoint.flowState.flowIORequest: 
    Send(sessionToMessage={FlowSessionImpl(destination=O=Mock Company 1, L=London, C=GB, sourceSessionId=SessionId(toLong=-7881500851533551462))=768AED61FD2A58D74D7316731407E0600065080E1F3E6397EE4FA5AEFEE79295})
    Receive(sessions=[FlowSessionImpl(destination=O=Mock Company 1, L=London, C=GB, sourceSessionId=SessionId(toLong=-7881500851533551462))])
checkpoint.flowState.frozenFiber.hash: 
    7B3963E087DB133C740AA30FD953A8433D1FEE1FB45A695401E12EF359D5CA27
    5CE23CC9F8D83065D61265941B2446BFE549FB89055521BB268E91003B4E2B5A
checkpoint.flowIoRequest: 
    Send
    Receive
checkpoint.checkpointState.numberOfSuspends: 
    4
    5
checkpoint.checkpointState.numberOfCommits: 
    5
    6
checkpoint.timestamp: 
    2023-01-31T07:18:19.272Z
    2023-01-31T07:18:19.274Z
numberOfCommits: 
    5
    6
isFlowResumed: 
    true
    false


 --- Transition of flow [65465552-2f28-4612-9b7f-4600ccd28d15] ---
  Timestamp: 2023-01-31T07:18:19.276Z
  Event: DoRemainingWork
  Actions: 
    
  Continuation: ProcessEvents
  Diff between previous and next state:
null

 --- Transition of flow [65465552-2f28-4612-9b7f-4600ccd28d15] ---
  Timestamp: 2023-01-31T07:18:19.288Z
  Event: DeliverSessionMessage(sessionMessage=ExistingSessionMessage(recipientSessionId=SessionId(toLong=-7881500851533551462), payload=DataSessionMessage(payload=class net.corda.core.serialization.SerializedBytes)), deduplicationHandler=net.corda.testing.node.internal.MockNodeMessagingService$InMemoryDeduplicationHandler@723aa3a1, sender=O=Mock Company 1, L=London, C=GB)
  Actions: 
    ScheduleEvent(event=DoRemainingWork)
  Continuation: ProcessEvents
  Diff between previous and next state:
checkpoint.checkpointState.sessions.SessionId(toLong=-7881500851533551462).receivedMessages.isEmpty: 
    true
    false
checkpoint.timestamp: 
    2023-01-31T07:18:19.276Z
    2023-01-31T07:18:19.288Z
pendingDeduplicationHandlers: 
    []
    [net.corda.testing.node.internal.MockNodeMessagingService$InMemoryDeduplicationHandler@723aa3a1]


 --- Transition of flow [65465552-2f28-4612-9b7f-4600ccd28d15] ---
  Timestamp: 2023-01-31T07:18:19.288Z
  Event: DoRemainingWork
  Actions: 
    CreateTransaction
  Continuation: Resume(result=class java.util.LinkedHashMap)
  Diff between previous and next state:
checkpoint.checkpointState.sessions.SessionId(toLong=-7881500851533551462).receivedMessages.isEmpty: 
    false
    true
isFlowResumed: 
    false
    true


 --- Transition of flow [65465552-2f28-4612-9b7f-4600ccd28d15] ---
  Timestamp: 2023-01-31T07:18:19.298Z
  Event: Suspend(ioRequest=Send(sessionToMessage={FlowSessionImpl(destination=O=Mock Company 1, L=London, C=GB, sourceSessionId=SessionId(toLong=-7881500851533551462))=750D72D7B536ECC243AA7BCFE33530802252BFA2E786F5CF37FC8F4E9EAD1F04}), maySkipCheckpoint=false, fiber=FE7F145DF26470A5463ECE3C2BC0C7370DBA141497EC9979068C28CCA07981B6, currentStep=Starting)
  Actions: 
    PersistCheckpoint(id=[65465552-2f28-4612-9b7f-4600ccd28d15], checkpoint=Checkpoint(checkpointState=CheckpointState(invocationContext=InvocationContext(origin=Peer(party=O=Mock Company 1, L=London, C=GB), trace=Trace(invocationId=3e61d329-451f-4c54-becb-c2c3cfdaaa1c, timestamp: 2023-01-31T07:18:19.081Z, entityType: Invocation, sessionId=3e61d329-451f-4c54-becb-c2c3cfdaaa1c, timestamp: 2023-01-31T07:18:19.081Z, entityType: Session), actor=null, externalTrace=null, impersonatedActor=null, arguments=[], clientId=null), ourIdentity=O=Mock Company 3, L=London, C=GB, sessions={SessionId(toLong=-7881500851533551462)=Initiated(peerParty=O=Mock Company 1, L=London, C=GB, peerFlowInfo=FlowInfo(flowVersion=1, appName=<unknown>), receivedMessages=[], otherSideErrored=false, peerSinkSessionId=SessionId(toLong=7106756066069934968), deduplicationSeed=D-7106756066069934968-4795262264991213571)}, sessionsToBeClosed=[], subFlowStack=[Inlined(flowClass=class net.corda.samples.obligation.flows.IOUSettleFlowResponder, subFlowVersion=CorDappFlow(platformVersion=11, corDappName=workflows-1.0, corDappHash=F8E3613207E5ABAEC38930FAA426F7BA91464AA72DAF3EFB74917A0BA71A146E), isEnabledTimedFlow=false), Inlined(flowClass=class net.corda.samples.obligation.flows.IOUSettleFlowResponder$call$signedTransactionFlow$1, subFlowVersion=CoreFlow(platformVersion=11), isEnabledTimedFlow=false)], numberOfSuspends=6, numberOfCommits=7), flowState=Started(flowIORequest=Send(sessionToMessage={FlowSessionImpl(destination=O=Mock Company 1, L=London, C=GB, sourceSessionId=SessionId(toLong=-7881500851533551462))=750D72D7B536ECC243AA7BCFE33530802252BFA2E786F5CF37FC8F4E9EAD1F04}), frozenFiber=FE7F145DF26470A5463ECE3C2BC0C7370DBA141497EC9979068C28CCA07981B6), errorState=Clean, result=null, status=RUNNABLE, progressStep=Starting, flowIoRequest=Send, compatible=true), isCheckpointUpdate=true)
    PersistDeduplicationFacts(deduplicationHandlers=[net.corda.testing.node.internal.MockNodeMessagingService$InMemoryDeduplicationHandler@723aa3a1])
    CommitTransaction
    AcknowledgeMessages(deduplicationHandlers=[net.corda.testing.node.internal.MockNodeMessagingService$InMemoryDeduplicationHandler@723aa3a1])
    ScheduleEvent(event=DoRemainingWork)
  Continuation: ProcessEvents
  Diff between previous and next state:
checkpoint.flowState.flowIORequest: 
    Receive(sessions=[FlowSessionImpl(destination=O=Mock Company 1, L=London, C=GB, sourceSessionId=SessionId(toLong=-7881500851533551462))])
    Send(sessionToMessage={FlowSessionImpl(destination=O=Mock Company 1, L=London, C=GB, sourceSessionId=SessionId(toLong=-7881500851533551462))=750D72D7B536ECC243AA7BCFE33530802252BFA2E786F5CF37FC8F4E9EAD1F04})
checkpoint.flowState.frozenFiber.hash: 
    5CE23CC9F8D83065D61265941B2446BFE549FB89055521BB268E91003B4E2B5A
    FE7F145DF26470A5463ECE3C2BC0C7370DBA141497EC9979068C28CCA07981B6
checkpoint.flowIoRequest: 
    Receive
    Send
checkpoint.checkpointState.numberOfSuspends: 
    5
    6
checkpoint.checkpointState.numberOfCommits: 
    6
    7
checkpoint.timestamp: 
    2023-01-31T07:18:19.288Z
    2023-01-31T07:18:19.296Z
numberOfCommits: 
    6
    7
isFlowResumed: 
    true
    false
pendingDeduplicationHandlers: 
    [net.corda.testing.node.internal.MockNodeMessagingService$InMemoryDeduplicationHandler@723aa3a1]
    []


 --- Transition of flow [65465552-2f28-4612-9b7f-4600ccd28d15] ---
  Timestamp: 2023-01-31T07:18:19.299Z
  Event: DoRemainingWork
  Actions: 
    SendMultiple(sendInitial=[], sendExisting=[SendExisting(peerParty=O=Mock Company 1, L=London, C=GB, message=ExistingSessionMessage(recipientSessionId=SessionId(toLong=7106756066069934968), payload=DataSessionMessage(payload=class net.corda.core.serialization.SerializedBytes)), deduplicationId=SenderDeduplicationId(deduplicationId=DeduplicationId(toString=N-D-7106756066069934968-4795262264991213571-6-0), senderUUID=5e9b81e5-439f-421e-bc83-def5a58fd155))])
    CreateTransaction
  Continuation: Resume(result=class kotlin.Unit)
  Diff between previous and next state:
isFlowResumed: 
    false
    true


 --- Transition of flow [65465552-2f28-4612-9b7f-4600ccd28d15] ---
  Timestamp: 2023-01-31T07:18:19.299Z
  Event: LeaveSubFlow
  Actions: 
    
  Continuation: ProcessEvents
  Diff between previous and next state:
checkpoint.checkpointState.subFlowStack: 
    [Inlined(flowClass=class net.corda.samples.obligation.flows.IOUSettleFlowResponder, subFlowVersion=CorDappFlow(platformVersion=11, corDappName=workflows-1.0, corDappHash=F8E3613207E5ABAEC38930FAA426F7BA91464AA72DAF3EFB74917A0BA71A146E), isEnabledTimedFlow=false), Inlined(flowClass=class net.corda.samples.obligation.flows.IOUSettleFlowResponder$call$signedTransactionFlow$1, subFlowVersion=CoreFlow(platformVersion=11), isEnabledTimedFlow=false)]
    [Inlined(flowClass=class net.corda.samples.obligation.flows.IOUSettleFlowResponder, subFlowVersion=CorDappFlow(platformVersion=11, corDappName=workflows-1.0, corDappHash=F8E3613207E5ABAEC38930FAA426F7BA91464AA72DAF3EFB74917A0BA71A146E), isEnabledTimedFlow=false)]
checkpoint.timestamp: 
    2023-01-31T07:18:19.298Z
    2023-01-31T07:18:19.299Z


 --- Transition of flow [65465552-2f28-4612-9b7f-4600ccd28d15] ---
  Timestamp: 2023-01-31T07:18:19.299Z
  Event: EnterSubFlow(subFlowClass=class net.corda.core.flows.ReceiveFinalityFlow, subFlowVersion=CoreFlow(platformVersion=11), isEnabledTimedFlow=false)
  Actions: 
    
  Continuation: ProcessEvents
  Diff between previous and next state:
checkpoint.checkpointState.subFlowStack: 
    [Inlined(flowClass=class net.corda.samples.obligation.flows.IOUSettleFlowResponder, subFlowVersion=CorDappFlow(platformVersion=11, corDappName=workflows-1.0, corDappHash=F8E3613207E5ABAEC38930FAA426F7BA91464AA72DAF3EFB74917A0BA71A146E), isEnabledTimedFlow=false)]
    [Inlined(flowClass=class net.corda.samples.obligation.flows.IOUSettleFlowResponder, subFlowVersion=CorDappFlow(platformVersion=11, corDappName=workflows-1.0, corDappHash=F8E3613207E5ABAEC38930FAA426F7BA91464AA72DAF3EFB74917A0BA71A146E), isEnabledTimedFlow=false), Inlined(flowClass=class net.corda.core.flows.ReceiveFinalityFlow, subFlowVersion=CoreFlow(platformVersion=11), isEnabledTimedFlow=false)]


 --- Transition of flow [65465552-2f28-4612-9b7f-4600ccd28d15] ---
  Timestamp: 2023-01-31T07:18:19.300Z
  Event: EnterSubFlow(subFlowClass=class net.corda.core.flows.ReceiveFinalityFlow$call$1, subFlowVersion=CoreFlow(platformVersion=11), isEnabledTimedFlow=false)
  Actions: 
    
  Continuation: ProcessEvents
  Diff between previous and next state:
checkpoint.checkpointState.subFlowStack: 
    [Inlined(flowClass=class net.corda.samples.obligation.flows.IOUSettleFlowResponder, subFlowVersion=CorDappFlow(platformVersion=11, corDappName=workflows-1.0, corDappHash=F8E3613207E5ABAEC38930FAA426F7BA91464AA72DAF3EFB74917A0BA71A146E), isEnabledTimedFlow=false), Inlined(flowClass=class net.corda.core.flows.ReceiveFinalityFlow, subFlowVersion=CoreFlow(platformVersion=11), isEnabledTimedFlow=false)]
    [Inlined(flowClass=class net.corda.samples.obligation.flows.IOUSettleFlowResponder, subFlowVersion=CorDappFlow(platformVersion=11, corDappName=workflows-1.0, corDappHash=F8E3613207E5ABAEC38930FAA426F7BA91464AA72DAF3EFB74917A0BA71A146E), isEnabledTimedFlow=false), Inlined(flowClass=class net.corda.core.flows.ReceiveFinalityFlow, subFlowVersion=CoreFlow(platformVersion=11), isEnabledTimedFlow=false), Inlined(flowClass=class net.corda.core.flows.ReceiveFinalityFlow$call$1, subFlowVersion=CoreFlow(platformVersion=11), isEnabledTimedFlow=false)]


 --- Transition of flow [65465552-2f28-4612-9b7f-4600ccd28d15] ---
  Timestamp: 2023-01-31T07:18:19.303Z
  Event: Suspend(ioRequest=Receive(sessions=[FlowSessionImpl(destination=O=Mock Company 1, L=London, C=GB, sourceSessionId=SessionId(toLong=-7881500851533551462))]), maySkipCheckpoint=false, fiber=3897378BDF84ACD165BF765D5F3554B0450D320BF3026C1017658349E9DC7F62, currentStep=Starting)
  Actions: 
    PersistCheckpoint(id=[65465552-2f28-4612-9b7f-4600ccd28d15], checkpoint=Checkpoint(checkpointState=CheckpointState(invocationContext=InvocationContext(origin=Peer(party=O=Mock Company 1, L=London, C=GB), trace=Trace(invocationId=3e61d329-451f-4c54-becb-c2c3cfdaaa1c, timestamp: 2023-01-31T07:18:19.081Z, entityType: Invocation, sessionId=3e61d329-451f-4c54-becb-c2c3cfdaaa1c, timestamp: 2023-01-31T07:18:19.081Z, entityType: Session), actor=null, externalTrace=null, impersonatedActor=null, arguments=[], clientId=null), ourIdentity=O=Mock Company 3, L=London, C=GB, sessions={SessionId(toLong=-7881500851533551462)=Initiated(peerParty=O=Mock Company 1, L=London, C=GB, peerFlowInfo=FlowInfo(flowVersion=1, appName=<unknown>), receivedMessages=[], otherSideErrored=false, peerSinkSessionId=SessionId(toLong=7106756066069934968), deduplicationSeed=D-7106756066069934968-4795262264991213571)}, sessionsToBeClosed=[], subFlowStack=[Inlined(flowClass=class net.corda.samples.obligation.flows.IOUSettleFlowResponder, subFlowVersion=CorDappFlow(platformVersion=11, corDappName=workflows-1.0, corDappHash=F8E3613207E5ABAEC38930FAA426F7BA91464AA72DAF3EFB74917A0BA71A146E), isEnabledTimedFlow=false), Inlined(flowClass=class net.corda.core.flows.ReceiveFinalityFlow, subFlowVersion=CoreFlow(platformVersion=11), isEnabledTimedFlow=false), Inlined(flowClass=class net.corda.core.flows.ReceiveFinalityFlow$call$1, subFlowVersion=CoreFlow(platformVersion=11), isEnabledTimedFlow=false)], numberOfSuspends=7, numberOfCommits=8), flowState=Started(flowIORequest=Receive(sessions=[FlowSessionImpl(destination=O=Mock Company 1, L=London, C=GB, sourceSessionId=SessionId(toLong=-7881500851533551462))]), frozenFiber=3897378BDF84ACD165BF765D5F3554B0450D320BF3026C1017658349E9DC7F62), errorState=Clean, result=null, status=RUNNABLE, progressStep=Starting, flowIoRequest=Receive, compatible=true), isCheckpointUpdate=true)
    PersistDeduplicationFacts(deduplicationHandlers=[])
    CommitTransaction
    AcknowledgeMessages(deduplicationHandlers=[])
    ScheduleEvent(event=DoRemainingWork)
  Continuation: ProcessEvents
  Diff between previous and next state:
checkpoint.flowState.flowIORequest: 
    Send(sessionToMessage={FlowSessionImpl(destination=O=Mock Company 1, L=London, C=GB, sourceSessionId=SessionId(toLong=-7881500851533551462))=750D72D7B536ECC243AA7BCFE33530802252BFA2E786F5CF37FC8F4E9EAD1F04})
    Receive(sessions=[FlowSessionImpl(destination=O=Mock Company 1, L=London, C=GB, sourceSessionId=SessionId(toLong=-7881500851533551462))])
checkpoint.flowState.frozenFiber.hash: 
    FE7F145DF26470A5463ECE3C2BC0C7370DBA141497EC9979068C28CCA07981B6
    3897378BDF84ACD165BF765D5F3554B0450D320BF3026C1017658349E9DC7F62
checkpoint.flowIoRequest: 
    Send
    Receive
checkpoint.checkpointState.numberOfSuspends: 
    6
    7
checkpoint.checkpointState.numberOfCommits: 
    7
    8
checkpoint.timestamp: 
    2023-01-31T07:18:19.299Z
    2023-01-31T07:18:19.301Z
numberOfCommits: 
    7
    8
isFlowResumed: 
    true
    false


 --- Transition of flow [65465552-2f28-4612-9b7f-4600ccd28d15] ---
  Timestamp: 2023-01-31T07:18:19.303Z
  Event: DoRemainingWork
  Actions: 
    
  Continuation: ProcessEvents
  Diff between previous and next state:
null

 --- Transition of flow [65465552-2f28-4612-9b7f-4600ccd28d15] ---
  Timestamp: 2023-01-31T07:18:19.642Z
  Event: DeliverSessionMessage(sessionMessage=ExistingSessionMessage(recipientSessionId=SessionId(toLong=-7881500851533551462), payload=ErrorSessionMessage(flowException=null, errorId=-1030127781405848252)), deduplicationHandler=net.corda.testing.node.internal.MockNodeMessagingService$InMemoryDeduplicationHandler@5ef40921, sender=O=Mock Company 1, L=London, C=GB)
  Actions: 
    ScheduleEvent(event=DoRemainingWork)
  Continuation: ProcessEvents
  Diff between previous and next state:
checkpoint.checkpointState.sessions.SessionId(toLong=-7881500851533551462).receivedMessages.isEmpty: 
    true
    false
checkpoint.timestamp: 
    2023-01-31T07:18:19.303Z
    2023-01-31T07:18:19.642Z
pendingDeduplicationHandlers: 
    []
    [net.corda.testing.node.internal.MockNodeMessagingService$InMemoryDeduplicationHandler@5ef40921]


 --- Transition of flow [65465552-2f28-4612-9b7f-4600ccd28d15] ---
  Timestamp: 2023-01-31T07:18:19.642Z
  Event: DoRemainingWork
  Actions: 
    CreateTransaction
  Continuation: Throw(throwable=net.corda.core.flows.UnexpectedFlowEndException: Counter-flow errored)
  Diff between previous and next state:
checkpoint.checkpointState.sessions.SessionId(toLong=-7881500851533551462).receivedMessages.isEmpty: 
    false
    true
checkpoint.checkpointState.sessions.SessionId(toLong=-7881500851533551462).otherSideErrored: 
    false
    true
isFlowResumed: 
    false
    true


 --- Transition of flow [65465552-2f28-4612-9b7f-4600ccd28d15] ---
  Timestamp: 2023-01-31T07:18:19.643Z
  Event: LeaveSubFlow
  Actions: 
    
  Continuation: ProcessEvents
  Diff between previous and next state:
checkpoint.checkpointState.subFlowStack: 
    [Inlined(flowClass=class net.corda.samples.obligation.flows.IOUSettleFlowResponder, subFlowVersion=CorDappFlow(platformVersion=11, corDappName=workflows-1.0, corDappHash=F8E3613207E5ABAEC38930FAA426F7BA91464AA72DAF3EFB74917A0BA71A146E), isEnabledTimedFlow=false), Inlined(flowClass=class net.corda.core.flows.ReceiveFinalityFlow, subFlowVersion=CoreFlow(platformVersion=11), isEnabledTimedFlow=false), Inlined(flowClass=class net.corda.core.flows.ReceiveFinalityFlow$call$1, subFlowVersion=CoreFlow(platformVersion=11), isEnabledTimedFlow=false)]
    [Inlined(flowClass=class net.corda.samples.obligation.flows.IOUSettleFlowResponder, subFlowVersion=CorDappFlow(platformVersion=11, corDappName=workflows-1.0, corDappHash=F8E3613207E5ABAEC38930FAA426F7BA91464AA72DAF3EFB74917A0BA71A146E), isEnabledTimedFlow=false), Inlined(flowClass=class net.corda.core.flows.ReceiveFinalityFlow, subFlowVersion=CoreFlow(platformVersion=11), isEnabledTimedFlow=false)]
checkpoint.timestamp: 
    2023-01-31T07:18:19.642Z
    2023-01-31T07:18:19.643Z


 --- Transition of flow [65465552-2f28-4612-9b7f-4600ccd28d15] ---
  Timestamp: 2023-01-31T07:18:19.643Z
  Event: LeaveSubFlow
  Actions: 
    
  Continuation: ProcessEvents
  Diff between previous and next state:
checkpoint.checkpointState.subFlowStack: 
    [Inlined(flowClass=class net.corda.samples.obligation.flows.IOUSettleFlowResponder, subFlowVersion=CorDappFlow(platformVersion=11, corDappName=workflows-1.0, corDappHash=F8E3613207E5ABAEC38930FAA426F7BA91464AA72DAF3EFB74917A0BA71A146E), isEnabledTimedFlow=false), Inlined(flowClass=class net.corda.core.flows.ReceiveFinalityFlow, subFlowVersion=CoreFlow(platformVersion=11), isEnabledTimedFlow=false)]
    [Inlined(flowClass=class net.corda.samples.obligation.flows.IOUSettleFlowResponder, subFlowVersion=CorDappFlow(platformVersion=11, corDappName=workflows-1.0, corDappHash=F8E3613207E5ABAEC38930FAA426F7BA91464AA72DAF3EFB74917A0BA71A146E), isEnabledTimedFlow=false)]


 --- Transition of flow [65465552-2f28-4612-9b7f-4600ccd28d15] ---
  Timestamp: 2023-01-31T07:18:19.645Z
  Event: Error(exception=net.corda.core.flows.UnexpectedFlowEndException: Counter-flow errored, rollback=true)
  Actions: 
    RollbackTransaction
    ScheduleEvent(event=DoRemainingWork)
  Continuation: ProcessEvents
  Diff between previous and next state:
checkpoint.errorState: 
    Clean
    Errored(errors=[FlowError(errorId=-1030127781405848252, exception=net.corda.core.flows.UnexpectedFlowEndException: Counter-flow errored)], propagatedIndex=0, propagating=false)
isFlowResumed: 
    true
    false


 --- Transition of flow [65465552-2f28-4612-9b7f-4600ccd28d15] ---
  Timestamp: 2023-01-31T07:18:19.645Z
  Event: DoRemainingWork
  Actions: 
    
  Continuation: ProcessEvents
  Diff between previous and next state:
null

 --- Transition of flow [65465552-2f28-4612-9b7f-4600ccd28d15] ---
  Timestamp: 2023-01-31T07:18:19.645Z
  Event: StartErrorPropagation
  Actions: 
    ScheduleEvent(event=DoRemainingWork)
  Continuation: ProcessEvents
  Diff between previous and next state:
checkpoint.errorState.propagating: 
    false
    true
checkpoint.timestamp: 
    2023-01-31T07:18:19.643Z
    2023-01-31T07:18:19.645Z


 --- Transition of flow [65465552-2f28-4612-9b7f-4600ccd28d15] ---
  Timestamp: 2023-01-31T07:18:19.666Z
  Event: DoRemainingWork
  Actions: 
    PropagateErrors(errorMessages=[ErrorSessionMessage(flowException=null, errorId=-1030127781405848252)], sessions=[], senderUUID=5e9b81e5-439f-421e-bc83-def5a58fd155)
    CreateTransaction
    RemoveCheckpoint(id=[65465552-2f28-4612-9b7f-4600ccd28d15], mayHavePersistentResults=false)
    PersistDeduplicationFacts(deduplicationHandlers=[net.corda.testing.node.internal.MockNodeMessagingService$InMemoryDeduplicationHandler@5ef40921])
    ReleaseSoftLocks(uuid=65465552-2f28-4612-9b7f-4600ccd28d15)
    CommitTransaction
    AcknowledgeMessages(deduplicationHandlers=[net.corda.testing.node.internal.MockNodeMessagingService$InMemoryDeduplicationHandler@5ef40921])
    RemoveSessionBindings(sessionIds=[SessionId(toLong=-7881500851533551462)])
    RemoveFlow(flowId=[65465552-2f28-4612-9b7f-4600ccd28d15], removalReason=ErrorFinish(flowErrors=[FlowError(errorId=-1030127781405848252, exception=net.corda.core.flows.UnexpectedFlowEndException: Counter-flow errored)]), lastState=StateMachineState(checkpoint=Checkpoint(checkpointState=CheckpointState(invocationContext=InvocationContext(origin=Peer(party=O=Mock Company 1, L=London, C=GB), trace=Trace(invocationId=3e61d329-451f-4c54-becb-c2c3cfdaaa1c, timestamp: 2023-01-31T07:18:19.081Z, entityType: Invocation, sessionId=3e61d329-451f-4c54-becb-c2c3cfdaaa1c, timestamp: 2023-01-31T07:18:19.081Z, entityType: Session), actor=null, externalTrace=null, impersonatedActor=null, arguments=[], clientId=null), ourIdentity=O=Mock Company 3, L=London, C=GB, sessions={SessionId(toLong=-7881500851533551462)=Initiated(peerParty=O=Mock Company 1, L=London, C=GB, peerFlowInfo=FlowInfo(flowVersion=1, appName=<unknown>), receivedMessages=[], otherSideErrored=true, peerSinkSessionId=SessionId(toLong=7106756066069934968), deduplicationSeed=D-7106756066069934968-4795262264991213571)}, sessionsToBeClosed=[], subFlowStack=[Inlined(flowClass=class net.corda.samples.obligation.flows.IOUSettleFlowResponder, subFlowVersion=CorDappFlow(platformVersion=11, corDappName=workflows-1.0, corDappHash=F8E3613207E5ABAEC38930FAA426F7BA91464AA72DAF3EFB74917A0BA71A146E), isEnabledTimedFlow=false)], numberOfSuspends=7, numberOfCommits=9), flowState=net.corda.node.services.statemachine.FlowState$Finished@1e06cf9b, errorState=Errored(errors=[FlowError(errorId=-1030127781405848252, exception=net.corda.core.flows.UnexpectedFlowEndException: Counter-flow errored)], propagatedIndex=0, propagating=true), result=null, status=FAILED, progressStep=Starting, flowIoRequest=Receive, compatible=true), flowLogic=net.corda.samples.obligation.flows.IOUSettleFlowResponder@8e2e06, pendingDeduplicationHandlers=[], isFlowResumed=false, isWaitingForFuture=false, future=null, isAnyCheckpointPersisted=true, isStartIdempotent=false, isRemoved=true, isKilled=false, isDead=false, senderUUID=5e9b81e5-439f-421e-bc83-def5a58fd155, reloadCheckpointAfterSuspendCount=null, numberOfCommits=9, lock=java.util.concurrent.Semaphore@6637a9cb[Permits = 0]))
  Continuation: Abort
  Diff between previous and next state:
checkpoint.flowState: 
    Started(flowIORequest=Receive(sessions=[FlowSessionImpl(destination=O=Mock Company 1, L=London, C=GB, sourceSessionId=SessionId(toLong=-7881500851533551462))]), frozenFiber=3897378BDF84ACD165BF765D5F3554B0450D320BF3026C1017658349E9DC7F62)
    net.corda.node.services.statemachine.FlowState$Finished@1e06cf9b
checkpoint.status: 
    RUNNABLE
    FAILED
checkpoint.checkpointState.numberOfCommits: 
    8
    9
checkpoint.timestamp: 
    2023-01-31T07:18:19.645Z
    2023-01-31T07:18:19.658Z
numberOfCommits: 
    8
    9
isRemoved: 
    false
    true
pendingDeduplicationHandlers: 
    [net.corda.testing.node.internal.MockNodeMessagingService$InMemoryDeduplicationHandler@5ef40921]
    []
 {fiber-id=10000028, flow-id=65465552-2f28-4612-9b7f-4600ccd28d15, invocation_id=3e61d329-451f-4c54-becb-c2c3cfdaaa1c, invocation_timestamp=2023-01-31T07:18:19.081Z, origin=O=Mock Company 1, L=London, C=GB, session_id=3e61d329-451f-4c54-becb-c2c3cfdaaa1c, session_timestamp=2023-01-31T07:18:19.081Z, thread-id=854, tx_id=05C00A07D836886589D1648346F3DFE14725CFEC3E8E68B19135B8905C73DF47}
[WARN ] 2023-01-31T07:18:19,677Z [Mock network] interceptors.DumpHistoryOnErrorInterceptor. - Flow [65465552-2f28-4612-9b7f-4600ccd28d15] error {fiber-id=10000028, flow-id=65465552-2f28-4612-9b7f-4600ccd28d15, invocation_id=3e61d329-451f-4c54-becb-c2c3cfdaaa1c, invocation_timestamp=2023-01-31T07:18:19.081Z, origin=O=Mock Company 1, L=London, C=GB, session_id=3e61d329-451f-4c54-becb-c2c3cfdaaa1c, session_timestamp=2023-01-31T07:18:19.081Z, thread-id=854, tx_id=05C00A07D836886589D1648346F3DFE14725CFEC3E8E68B19135B8905C73DF47}
net.corda.core.flows.UnexpectedFlowEndException: Counter-flow errored
	at Received unexpected counter-flow exception from peer O=Mock Company 1, L=London, C=GB.() ~[?:?]
	at net.corda.node.services.statemachine.FlowStateMachineImpl.fillInLocalStackTrace(FlowStateMachineImpl.kt:244) ~[corda-node-4.9.jar:?]
	at net.corda.node.services.statemachine.FlowStateMachineImpl.processEventsUntilFlowIsResumed(FlowStateMachineImpl.kt:225) ~[corda-node-4.9.jar:?]
	at net.corda.node.services.statemachine.FlowStateMachineImpl.suspend(FlowStateMachineImpl.kt:577) ~[corda-node-4.9.jar:?]
	at net.corda.node.services.statemachine.FlowSessionImpl.receive(FlowSessionImpl.kt:67) ~[corda-node-4.9.jar:?]
	at net.corda.node.services.statemachine.FlowSessionImpl.receive(FlowSessionImpl.kt:71) ~[corda-node-4.9.jar:?]
	at net.corda.core.flows.ReceiveTransactionFlow.call(ReceiveTransactionFlow.kt:103) ~[corda-core-4.9.jar:?]
	at net.corda.core.flows.ReceiveTransactionFlow.call(ReceiveTransactionFlow.kt:31) ~[corda-core-4.9.jar:?]
	at net.corda.node.services.statemachine.FlowStateMachineImpl.subFlow(FlowStateMachineImpl.kt:420) ~[corda-node-4.9.jar:?]
	at net.corda.core.flows.FlowLogic.subFlow(FlowLogic.kt:409) ~[corda-core-4.9.jar:?]
	at net.corda.core.flows.ReceiveFinalityFlow.call(FinalityFlow.kt:285) ~[corda-core-4.9.jar:?]
	at net.corda.core.flows.ReceiveFinalityFlow.call(FinalityFlow.kt:280) ~[corda-core-4.9.jar:?]
	at net.corda.node.services.statemachine.FlowStateMachineImpl.subFlow(FlowStateMachineImpl.kt:420) ~[corda-node-4.9.jar:?]
	at net.corda.core.flows.FlowLogic.subFlow(FlowLogic.kt:409) ~[corda-core-4.9.jar:?]
	at net.corda.samples.obligation.flows.IOUSettleFlowResponder.call(IOUSettleFlow.kt:139) ~[main/:?]
	at net.corda.samples.obligation.flows.IOUSettleFlowResponder.call(IOUSettleFlow.kt:126) ~[main/:?]
	at net.corda.node.services.statemachine.FlowStateMachineImpl.run(FlowStateMachineImpl.kt:349) ~[corda-node-4.9.jar:?]
	at net.corda.node.services.statemachine.FlowStateMachineImpl.run(FlowStateMachineImpl.kt:71) ~[corda-node-4.9.jar:?]
	at co.paralleluniverse.fibers.Fiber.run1(Fiber.java:1092) ~[quasar-core-0.7.10.jar:0.7.10]
	at co.paralleluniverse.fibers.Fiber.exec(Fiber.java:788) ~[quasar-core-0.7.10.jar:0.7.10]
	at co.paralleluniverse.fibers.RunnableFiberTask.doExec(RunnableFiberTask.java:100) ~[quasar-core-0.7.10.jar:0.7.10]
	at co.paralleluniverse.fibers.RunnableFiberTask.run(RunnableFiberTask.java:91) ~[quasar-core-0.7.10.jar:0.7.10]
	at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511) ~[?:1.8.0_202]
	at java.util.concurrent.FutureTask.run(FutureTask.java:266) ~[?:1.8.0_202]
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.access$201(ScheduledThreadPoolExecutor.java:180) ~[?:1.8.0_202]
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.run(ScheduledThreadPoolExecutor.java:293) ~[?:1.8.0_202]
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149) ~[?:1.8.0_202]
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624) ~[?:1.8.0_202]
	at net.corda.node.utilities.AffinityExecutor$ServiceAffinityExecutor$1$thread$1.run(AffinityExecutor.kt:63) ~[corda-node-4.9.jar:?]
[INFO ] 2023-01-31T07:18:19,696Z [Test worker] persistence.CordaPersistence. - Closing HikariDataSource (HikariPool-1) {}
[INFO ] 2023-01-31T07:18:19,740Z [Test worker] internal.MockNodeMessagingService. - Status change to false {}
[INFO ] 2023-01-31T07:18:19,740Z [Test worker] internal.InternalMockNetwork$MockNode. - MessagingService active change to: false {}
[INFO ] 2023-01-31T07:18:19,747Z [Test worker] persistence.CordaPersistence. - Closing HikariDataSource (HikariPool-2) {}
[INFO ] 2023-01-31T07:18:19,773Z [Test worker] internal.MockNodeMessagingService. - Status change to false {}
[INFO ] 2023-01-31T07:18:19,773Z [Test worker] internal.InternalMockNetwork$MockNode. - MessagingService active change to: false {}
[INFO ] 2023-01-31T07:18:19,777Z [Test worker] persistence.CordaPersistence. - Closing HikariDataSource (HikariPool-3) {}
[INFO ] 2023-01-31T07:18:19,795Z [Test worker] internal.MockNodeMessagingService. - Status change to false {}
[INFO ] 2023-01-31T07:18:19,795Z [Test worker] internal.InternalMockNetwork$MockNode. - MessagingService active change to: false {}
[INFO ] 2023-01-31T07:18:19,797Z [Test worker] persistence.CordaPersistence. - Closing HikariDataSource (HikariPool-4) {}
[INFO ] 2023-01-31T07:18:19,818Z [Test worker] internal.MockNodeMessagingService. - Status change to false {}
[INFO ] 2023-01-31T07:18:19,818Z [Test worker] internal.InternalMockNetwork$MockNode. - MessagingService active change to: false {}
[INFO ] 2023-01-31T07:19:41,007Z [Test worker] internal.TestCordappImpl. - Generating CorDapp jar from local project in /Users/peter.li/Desktop/obligation-cordapp/workflows ... {}
[INFO ] 2023-01-31T07:19:41,157Z [Connection worker] internal.TestCordappImpl. - Build {}
[INFO ] 2023-01-31T07:19:45,371Z [Connection worker] internal.TestCordappImpl. - Starting Gradle Daemon {}
[INFO ] 2023-01-31T07:19:46,128Z [Connection worker] internal.TestCordappImpl. - Connecting to Gradle Daemon {}
[INFO ] 2023-01-31T07:19:46,139Z [Connection worker] internal.TestCordappImpl. - Starting Gradle Daemon {}
[INFO ] 2023-01-31T07:19:46,139Z [Connection worker] internal.TestCordappImpl. - Build {}
[INFO ] 2023-01-31T07:19:46,605Z [Connection worker] internal.TestCordappImpl. - Run build {}
[INFO ] 2023-01-31T07:19:46,628Z [Connection worker] internal.TestCordappImpl. - Evaluate settings {}
[INFO ] 2023-01-31T07:19:47,031Z [Connection worker] internal.TestCordappImpl. - Run build {}
[INFO ] 2023-01-31T07:19:47,031Z [Connection worker] internal.TestCordappImpl. - Configure build {}
[INFO ] 2023-01-31T07:19:47,031Z [Connection worker] internal.TestCordappImpl. - Load projects {}
[INFO ] 2023-01-31T07:19:47,183Z [Connection worker] internal.TestCordappImpl. - Configure build {}
[INFO ] 2023-01-31T07:19:47,183Z [Connection worker] internal.TestCordappImpl. - Configure project : {}
[INFO ] 2023-01-31T07:19:47,627Z [Connection worker] internal.TestCordappImpl. - Resolve dependencies of :classpath {}
[INFO ] 2023-01-31T07:20:01,113Z [Test worker] internal.TestCordappImpl. - Generating CorDapp jar from local project in /Users/peter.li/Desktop/obligation-cordapp/workflows ... {}
[INFO ] 2023-01-31T07:20:01,270Z [Connection worker] internal.TestCordappImpl. - Build {}
[INFO ] 2023-01-31T07:20:02,422Z [Connection worker] internal.TestCordappImpl. - Starting Gradle Daemon {}
[INFO ] 2023-01-31T07:20:03,193Z [Connection worker] internal.TestCordappImpl. - Connecting to Gradle Daemon {}
[INFO ] 2023-01-31T07:20:03,204Z [Connection worker] internal.TestCordappImpl. - Starting Gradle Daemon {}
[INFO ] 2023-01-31T07:20:03,205Z [Connection worker] internal.TestCordappImpl. - Build {}
[INFO ] 2023-01-31T07:20:03,680Z [Connection worker] internal.TestCordappImpl. - Run build {}
[INFO ] 2023-01-31T07:20:03,702Z [Connection worker] internal.TestCordappImpl. - Evaluate settings {}
[INFO ] 2023-01-31T07:20:04,101Z [Connection worker] internal.TestCordappImpl. - Run build {}
[INFO ] 2023-01-31T07:20:04,101Z [Connection worker] internal.TestCordappImpl. - Configure build {}
[INFO ] 2023-01-31T07:20:04,101Z [Connection worker] internal.TestCordappImpl. - Load projects {}
[INFO ] 2023-01-31T07:20:04,239Z [Connection worker] internal.TestCordappImpl. - Configure build {}
[INFO ] 2023-01-31T07:20:04,251Z [Connection worker] internal.TestCordappImpl. - Configure project : {}
[INFO ] 2023-01-31T07:20:04,683Z [Connection worker] internal.TestCordappImpl. - Resolve dependencies of :classpath {}
[INFO ] 2023-01-31T07:20:05,011Z [Connection worker] internal.TestCordappImpl. - Configure project : {}
[INFO ] 2023-01-31T07:20:05,011Z [Connection worker] internal.TestCordappImpl. - Resolve files of :classpath {}
[INFO ] 2023-01-31T07:20:05,043Z [Connection worker] internal.TestCordappImpl. - Configure project : {}
[INFO ] 2023-01-31T07:20:05,044Z [Connection worker] internal.TestCordappImpl. - Resolve files of :classpath {}
[INFO ] 2023-01-31T07:20:05,044Z [Connection worker] internal.TestCordappImpl. - Configure project : {}
[INFO ] 2023-01-31T07:20:05,982Z [Connection worker] internal.TestCordappImpl. - Configure build {}
[INFO ] 2023-01-31T07:20:05,982Z [Connection worker] internal.TestCordappImpl. - Configure project :clients {}
[INFO ] 2023-01-31T07:20:06,097Z [Connection worker] internal.TestCordappImpl. - Configure build {}
[INFO ] 2023-01-31T07:20:06,097Z [Connection worker] internal.TestCordappImpl. - Configure project :contracts {}
[INFO ] 2023-01-31T07:20:06,117Z [Connection worker] internal.TestCordappImpl. - Configure build {}
[INFO ] 2023-01-31T07:20:06,117Z [Connection worker] internal.TestCordappImpl. - Configure project :workflows {}
[INFO ] 2023-01-31T07:20:06,203Z [Connection worker] internal.TestCordappImpl. - Configure build {}
[INFO ] 2023-01-31T07:20:06,203Z [Connection worker] internal.TestCordappImpl. - Run build {}
[INFO ] 2023-01-31T07:20:06,305Z [Connection worker] internal.TestCordappImpl. - Resolve dependencies of :workflows:kotlinCompilerClasspath {}
[INFO ] 2023-01-31T07:20:06,317Z [Connection worker] internal.TestCordappImpl. - Run build {}
[INFO ] 2023-01-31T07:20:06,317Z [Connection worker] internal.TestCordappImpl. - Resolve files of :workflows:kotlinCompilerClasspath {}
[INFO ] 2023-01-31T07:20:06,317Z [Connection worker] internal.TestCordappImpl. - Run build {}
[INFO ] 2023-01-31T07:20:06,329Z [Connection worker] internal.TestCordappImpl. - Resolve dependencies of :contracts:kotlinCompilerClasspath {}
[INFO ] 2023-01-31T07:20:06,329Z [Connection worker] internal.TestCordappImpl. - Run build {}
[INFO ] 2023-01-31T07:20:06,329Z [Connection worker] internal.TestCordappImpl. - Resolve files of :contracts:kotlinCompilerClasspath {}
[INFO ] 2023-01-31T07:20:06,329Z [Connection worker] internal.TestCordappImpl. - Run build {}
[INFO ] 2023-01-31T07:20:06,340Z [Connection worker] internal.TestCordappImpl. - Run tasks {}
[INFO ] 2023-01-31T07:20:06,374Z [Connection worker] internal.TestCordappImpl. - Task :contracts:compileKotlin {}
[INFO ] 2023-01-31T07:20:06,374Z [Connection worker] internal.TestCordappImpl. - Resolve files of :contracts:kotlinCompilerClasspath {}
[INFO ] 2023-01-31T07:20:06,374Z [Connection worker] internal.TestCordappImpl. - Task :contracts:compileKotlin {}
[INFO ] 2023-01-31T07:20:06,451Z [Connection worker] internal.TestCordappImpl. - Resolve dependencies of :contracts:kotlinCompilerPluginClasspath {}
[INFO ] 2023-01-31T07:20:06,462Z [Connection worker] internal.TestCordappImpl. - Task :contracts:compileKotlin {}
[INFO ] 2023-01-31T07:20:06,462Z [Connection worker] internal.TestCordappImpl. - Resolve files of :contracts:kotlinCompilerPluginClasspath {}
[INFO ] 2023-01-31T07:20:06,462Z [Connection worker] internal.TestCordappImpl. - Task :contracts:compileKotlin {}
[INFO ] 2023-01-31T07:20:06,462Z [Connection worker] internal.TestCordappImpl. - Resolve dependencies of :contracts:compileClasspath {}
[INFO ] 2023-01-31T07:20:06,539Z [Connection worker] internal.TestCordappImpl. - Task :contracts:compileKotlin {}
[INFO ] 2023-01-31T07:20:06,539Z [Connection worker] internal.TestCordappImpl. - Resolve files of :contracts:compileClasspath {}
[INFO ] 2023-01-31T07:20:06,539Z [Connection worker] internal.TestCordappImpl. - Task :contracts:compileKotlin {}
[INFO ] 2023-01-31T07:20:06,920Z [Connection worker] internal.TestCordappImpl. - Resolve files of :contracts:compileClasspath {}
[INFO ] 2023-01-31T07:20:06,920Z [Connection worker] internal.TestCordappImpl. - Task :contracts:compileKotlin {}
[INFO ] 2023-01-31T07:20:06,931Z [Connection worker] internal.TestCordappImpl. - Resolve files of :contracts:kotlinCompilerPluginClasspath {}
[INFO ] 2023-01-31T07:20:06,931Z [Connection worker] internal.TestCordappImpl. - Task :contracts:compileKotlin {}
[INFO ] 2023-01-31T07:20:06,968Z [Connection worker] internal.TestCordappImpl. - Run tasks {}
[INFO ] 2023-01-31T07:20:06,979Z [Connection worker] internal.TestCordappImpl. - Task :contracts:compileJava {}
[INFO ] 2023-01-31T07:20:06,979Z [Connection worker] internal.TestCordappImpl. - Run tasks {}
[INFO ] 2023-01-31T07:20:06,979Z [Connection worker] internal.TestCordappImpl. - Task :contracts:processResources {}
[INFO ] 2023-01-31T07:20:06,979Z [Connection worker] internal.TestCordappImpl. - Run tasks {}
[INFO ] 2023-01-31T07:20:06,979Z [Connection worker] internal.TestCordappImpl. - Task :contracts:classes {}
[INFO ] 2023-01-31T07:20:06,979Z [Connection worker] internal.TestCordappImpl. - Run tasks {}
[INFO ] 2023-01-31T07:20:06,979Z [Connection worker] internal.TestCordappImpl. - Task :contracts:configureCordappFatJar {}
[INFO ] 2023-01-31T07:20:06,990Z [Connection worker] internal.TestCordappImpl. - Resolve dependencies of :contracts:runtime {}
[INFO ] 2023-01-31T07:20:07,012Z [Connection worker] internal.TestCordappImpl. - Task :contracts:configureCordappFatJar {}
[INFO ] 2023-01-31T07:20:07,012Z [Connection worker] internal.TestCordappImpl. - Resolve files of :contracts:runtime {}
[INFO ] 2023-01-31T07:20:07,023Z [Connection worker] internal.TestCordappImpl. - Task :contracts:configureCordappFatJar {}
[INFO ] 2023-01-31T07:20:07,024Z [Connection worker] internal.TestCordappImpl. - Resolve files of :contracts:runtime {}
[INFO ] 2023-01-31T07:20:07,024Z [Connection worker] internal.TestCordappImpl. - Task :contracts:configureCordappFatJar {}
[INFO ] 2023-01-31T07:20:07,024Z [Connection worker] internal.TestCordappImpl. - Resolve files of :contracts:runtime {}
[INFO ] 2023-01-31T07:20:07,024Z [Connection worker] internal.TestCordappImpl. - Task :contracts:configureCordappFatJar {}
[INFO ] 2023-01-31T07:20:07,024Z [Connection worker] internal.TestCordappImpl. - Resolve files of :contracts:runtime {}
[INFO ] 2023-01-31T07:20:07,024Z [Connection worker] internal.TestCordappImpl. - Task :contracts:configureCordappFatJar {}
[INFO ] 2023-01-31T07:20:07,024Z [Connection worker] internal.TestCordappImpl. - Resolve files of :contracts:runtime {}
[INFO ] 2023-01-31T07:20:07,024Z [Connection worker] internal.TestCordappImpl. - Task :contracts:configureCordappFatJar {}
[INFO ] 2023-01-31T07:20:07,034Z [Connection worker] internal.TestCordappImpl. - Run tasks {}
[INFO ] 2023-01-31T07:20:07,034Z [Connection worker] internal.TestCordappImpl. - Task :contracts:inspectClassesForKotlinIC {}
[INFO ] 2023-01-31T07:20:07,034Z [Connection worker] internal.TestCordappImpl. - Run tasks {}
[INFO ] 2023-01-31T07:20:07,036Z [Connection worker] internal.TestCordappImpl. - Task :contracts:jar {}
[INFO ] 2023-01-31T07:20:07,046Z [Connection worker] internal.TestCordappImpl. - Run tasks {}
[INFO ] 2023-01-31T07:20:07,046Z [Connection worker] internal.TestCordappImpl. - Task :workflows:compileKotlin {}
[INFO ] 2023-01-31T07:20:07,058Z [Connection worker] internal.TestCordappImpl. - Resolve files of :workflows:kotlinCompilerClasspath {}
[INFO ] 2023-01-31T07:20:07,058Z [Connection worker] internal.TestCordappImpl. - Task :workflows:compileKotlin {}
[INFO ] 2023-01-31T07:20:07,070Z [Connection worker] internal.TestCordappImpl. - Resolve dependencies of :workflows:kotlinCompilerPluginClasspath {}
[INFO ] 2023-01-31T07:20:07,070Z [Connection worker] internal.TestCordappImpl. - Task :workflows:compileKotlin {}
[INFO ] 2023-01-31T07:20:07,070Z [Connection worker] internal.TestCordappImpl. - Resolve files of :workflows:kotlinCompilerPluginClasspath {}
[INFO ] 2023-01-31T07:20:07,070Z [Connection worker] internal.TestCordappImpl. - Task :workflows:compileKotlin {}
[INFO ] 2023-01-31T07:20:07,070Z [Connection worker] internal.TestCordappImpl. - Resolve dependencies of :workflows:compileClasspath {}
[INFO ] 2023-01-31T07:20:07,091Z [Connection worker] internal.TestCordappImpl. - Task :workflows:compileKotlin {}
[INFO ] 2023-01-31T07:20:07,091Z [Connection worker] internal.TestCordappImpl. - Resolve files of :workflows:compileClasspath {}
[INFO ] 2023-01-31T07:20:07,091Z [Connection worker] internal.TestCordappImpl. - Task :workflows:compileKotlin {}
[INFO ] 2023-01-31T07:20:07,091Z [Connection worker] internal.TestCordappImpl. - Resolve files of :workflows:compileClasspath {}
[INFO ] 2023-01-31T07:20:07,091Z [Connection worker] internal.TestCordappImpl. - Task :workflows:compileKotlin {}
[INFO ] 2023-01-31T07:20:07,091Z [Connection worker] internal.TestCordappImpl. - Resolve files of :workflows:kotlinCompilerPluginClasspath {}
[INFO ] 2023-01-31T07:20:07,091Z [Connection worker] internal.TestCordappImpl. - Task :workflows:compileKotlin {}
[INFO ] 2023-01-31T07:20:07,104Z [Connection worker] internal.TestCordappImpl. - Run tasks {}
[INFO ] 2023-01-31T07:20:07,104Z [Connection worker] internal.TestCordappImpl. - Task :workflows:compileJava {}
[INFO ] 2023-01-31T07:20:07,104Z [Connection worker] internal.TestCordappImpl. - Run tasks {}
[INFO ] 2023-01-31T07:20:07,104Z [Connection worker] internal.TestCordappImpl. - Task :workflows:processResources {}
[INFO ] 2023-01-31T07:20:07,114Z [Connection worker] internal.TestCordappImpl. - Run tasks {}
[INFO ] 2023-01-31T07:20:07,114Z [Connection worker] internal.TestCordappImpl. - Task :workflows:classes {}
[INFO ] 2023-01-31T07:20:07,115Z [Connection worker] internal.TestCordappImpl. - Run tasks {}
[INFO ] 2023-01-31T07:20:07,115Z [Connection worker] internal.TestCordappImpl. - Task :workflows:configureCordappFatJar {}
[INFO ] 2023-01-31T07:20:07,115Z [Connection worker] internal.TestCordappImpl. - Resolve dependencies of :workflows:runtime {}
[INFO ] 2023-01-31T07:20:07,137Z [Connection worker] internal.TestCordappImpl. - Task :workflows:configureCordappFatJar {}
[INFO ] 2023-01-31T07:20:07,137Z [Connection worker] internal.TestCordappImpl. - Resolve files of :workflows:runtime {}
[INFO ] 2023-01-31T07:20:07,137Z [Connection worker] internal.TestCordappImpl. - Task :workflows:configureCordappFatJar {}
[INFO ] 2023-01-31T07:20:07,137Z [Connection worker] internal.TestCordappImpl. - Resolve files of :workflows:runtime {}
[INFO ] 2023-01-31T07:20:07,137Z [Connection worker] internal.TestCordappImpl. - Task :workflows:configureCordappFatJar {}
[INFO ] 2023-01-31T07:20:07,137Z [Connection worker] internal.TestCordappImpl. - Resolve files of :workflows:runtime {}
[INFO ] 2023-01-31T07:20:07,137Z [Connection worker] internal.TestCordappImpl. - Task :workflows:configureCordappFatJar {}
[INFO ] 2023-01-31T07:20:07,137Z [Connection worker] internal.TestCordappImpl. - Resolve files of :workflows:runtime {}
[INFO ] 2023-01-31T07:20:07,137Z [Connection worker] internal.TestCordappImpl. - Task :workflows:configureCordappFatJar {}
[INFO ] 2023-01-31T07:20:07,137Z [Connection worker] internal.TestCordappImpl. - Resolve files of :workflows:runtime {}
[INFO ] 2023-01-31T07:20:07,137Z [Connection worker] internal.TestCordappImpl. - Task :workflows:configureCordappFatJar {}
[INFO ] 2023-01-31T07:20:07,137Z [Connection worker] internal.TestCordappImpl. - Resolve files of :workflows:runtime {}
[INFO ] 2023-01-31T07:20:07,137Z [Connection worker] internal.TestCordappImpl. - Task :workflows:configureCordappFatJar {}
[INFO ] 2023-01-31T07:20:07,138Z [Connection worker] internal.TestCordappImpl. - Resolve files of :workflows:runtime {}
[INFO ] 2023-01-31T07:20:07,138Z [Connection worker] internal.TestCordappImpl. - Task :workflows:configureCordappFatJar {}
[INFO ] 2023-01-31T07:20:07,138Z [Connection worker] internal.TestCordappImpl. - Resolve files of :workflows:runtime {}
[INFO ] 2023-01-31T07:20:07,138Z [Connection worker] internal.TestCordappImpl. - Task :workflows:configureCordappFatJar {}
[INFO ] 2023-01-31T07:20:07,148Z [Connection worker] internal.TestCordappImpl. - Run tasks {}
[INFO ] 2023-01-31T07:20:07,148Z [Connection worker] internal.TestCordappImpl. - Task :workflows:inspectClassesForKotlinIC {}
[INFO ] 2023-01-31T07:20:07,148Z [Connection worker] internal.TestCordappImpl. - Run tasks {}
[INFO ] 2023-01-31T07:20:07,148Z [Connection worker] internal.TestCordappImpl. - Task :workflows:jar {}
[INFO ] 2023-01-31T07:20:07,169Z [Connection worker] internal.TestCordappImpl. - Run tasks {}
[INFO ] 2023-01-31T07:20:07,180Z [Connection worker] internal.TestCordappImpl. - Run build {}
[INFO ] 2023-01-31T07:20:07,180Z [Connection worker] internal.TestCordappImpl. - Build model 'java.lang.Void' for project ':workflows' {}
[INFO ] 2023-01-31T07:20:07,180Z [Connection worker] internal.TestCordappImpl. - Run build {}
[INFO ] 2023-01-31T07:20:07,197Z [Connection worker] internal.TestCordappImpl. - Build {}
[INFO ] 2023-01-31T07:20:07,214Z [Connection worker] internal.TestCordappImpl. - Deleting unused version-specific caches in /Users/peter.li/Desktop/obligation-cordapp/.gradle {}
[INFO ] 2023-01-31T07:20:07,214Z [Connection worker] internal.TestCordappImpl. - Build {}
[INFO ] 2023-01-31T07:20:07,245Z [Connection worker] internal.TestCordappImpl. -  {}
[INFO ] 2023-01-31T07:20:11,792Z [Test worker] cordapp.JarScanningCordappLoader. - Looking for CorDapps in [build/mock-network/20230131-072000.439-E5F9FEE180AC32C0/nodes/0/cordapps] {}
[INFO ] 2023-01-31T07:20:11,800Z [Test worker] cordapp.JarScanningCordappLoader. - Loading CorDapps from RestrictedURL(url=file:/Users/peter.li/Desktop/obligation-cordapp/workflows/build/mock-network/20230131-072000.439-E5F9FEE180AC32C0/nodes/0/cordapps/accounts-contracts-1.0.jar, rootPackageName=null), RestrictedURL(url=file:/Users/peter.li/Desktop/obligation-cordapp/workflows/build/mock-network/20230131-072000.439-E5F9FEE180AC32C0/nodes/0/cordapps/accounts-workflows-1.0.jar, rootPackageName=null), RestrictedURL(url=file:/Users/peter.li/Desktop/obligation-cordapp/workflows/build/mock-network/20230131-072000.439-E5F9FEE180AC32C0/nodes/0/cordapps/corda-finance-contracts-4.9.jar, rootPackageName=null), RestrictedURL(url=file:/Users/peter.li/Desktop/obligation-cordapp/workflows/build/mock-network/20230131-072000.439-E5F9FEE180AC32C0/nodes/0/cordapps/contracts-1.0.jar, rootPackageName=null), RestrictedURL(url=file:/Users/peter.li/Desktop/obligation-cordapp/workflows/build/mock-network/20230131-072000.439-E5F9FEE180AC32C0/nodes/0/cordapps/workflows-1.0.jar, rootPackageName=null) {}
[INFO ] 2023-01-31T07:20:11,811Z [Test worker] cordapp.JarScanningCordappLoader. - Scanning CorDapp in file:/Users/peter.li/Desktop/obligation-cordapp/workflows/build/mock-network/20230131-072000.439-E5F9FEE180AC32C0/nodes/0/cordapps/accounts-contracts-1.0.jar {}
[INFO ] 2023-01-31T07:20:11,908Z [Test worker] cordapp.JarScanningCordappLoader. - Scanning CorDapp in file:/Users/peter.li/Desktop/obligation-cordapp/workflows/build/mock-network/20230131-072000.439-E5F9FEE180AC32C0/nodes/0/cordapps/accounts-workflows-1.0.jar {}
[INFO ] 2023-01-31T07:20:12,083Z [Test worker] cordapp.JarScanningCordappLoader. - Scanning CorDapp in file:/Users/peter.li/Desktop/obligation-cordapp/workflows/build/mock-network/20230131-072000.439-E5F9FEE180AC32C0/nodes/0/cordapps/corda-finance-contracts-4.9.jar {}
[INFO ] 2023-01-31T07:20:12,200Z [Test worker] cordapp.JarScanningCordappLoader. - Scanning CorDapp in file:/Users/peter.li/Desktop/obligation-cordapp/workflows/build/mock-network/20230131-072000.439-E5F9FEE180AC32C0/nodes/0/cordapps/contracts-1.0.jar {}
[INFO ] 2023-01-31T07:20:12,212Z [Test worker] cordapp.JarScanningCordappLoader. - Scanning CorDapp in file:/Users/peter.li/Desktop/obligation-cordapp/workflows/build/mock-network/20230131-072000.439-E5F9FEE180AC32C0/nodes/0/cordapps/workflows-1.0.jar {}
[INFO ] 2023-01-31T07:20:13,276Z [Test worker] internal.InternalMockNetwork$MockNode. - MessagingService active change to: false {}
[INFO ] 2023-01-31T07:20:13,443Z [Test worker] internal.InternalMockNetwork$MockNode. - Flow external operation executor has a max of 2 threads {}
[INFO ] 2023-01-31T07:20:13,488Z [Test worker] internal.InternalMockNetwork$MockNode. - Node starting up ... {}
[INFO ] 2023-01-31T07:20:13,505Z [Test worker] internal.KeyStoreHandler. - Loaded trusted root certificate: DL7fwxLm5xbiMD8adUuYTsPZHAict46Ng4w6RNcySt5vAw, alias: cordarootca {}
[INFO ] 2023-01-31T07:20:13,510Z [Test worker] internal.KeyStoreHandler. - Loaded node identity key: DL6AmPz7b8UQAyLhdBk9mmwhi2RaUv5yqFEDCbmxzJzpGZ, alias: identity-private-key {}
[INFO ] 2023-01-31T07:20:13,614Z [Test worker] internal.NodeFlowManager. - Registered com.r3.corda.lib.accounts.workflows.flows.ShareStateAndSyncAccounts to initiate com.r3.corda.lib.accounts.workflows.flows.ReceiveStateAndSyncAccounts (version 1) {}
[INFO ] 2023-01-31T07:20:13,614Z [Test worker] internal.NodeFlowManager. - Registered com.r3.corda.lib.accounts.workflows.flows.ShareStateWithAccount to initiate com.r3.corda.lib.accounts.workflows.flows.ReceiveStateForAccount (version 1) {}
[INFO ] 2023-01-31T07:20:13,615Z [Test worker] internal.NodeFlowManager. - Registered com.r3.corda.lib.accounts.workflows.flows.RequestAccountInfo to initiate com.r3.corda.lib.accounts.workflows.flows.RequestAccountInfoHandler (version 1) {}
[INFO ] 2023-01-31T07:20:13,615Z [Test worker] internal.NodeFlowManager. - Registered com.r3.corda.lib.accounts.workflows.flows.RequestKeyForAccount to initiate com.r3.corda.lib.accounts.workflows.flows.SendKeyForAccount (version 1) {}
[INFO ] 2023-01-31T07:20:13,616Z [Test worker] internal.NodeFlowManager. - Registered com.r3.corda.lib.accounts.workflows.flows.ShareAccountInfo to initiate com.r3.corda.lib.accounts.workflows.flows.ShareAccountInfoHandler (version 1) {}
[INFO ] 2023-01-31T07:20:13,617Z [Test worker] internal.NodeFlowManager. - Registered net.corda.samples.obligation.flows.IOUIssueFlow to initiate net.corda.samples.obligation.flows.IOUIssueFlowResponder (version 1) {}
[INFO ] 2023-01-31T07:20:13,617Z [Test worker] internal.NodeFlowManager. - Registered net.corda.samples.obligation.flows.IOUSettleFlow to initiate net.corda.samples.obligation.flows.IOUSettleFlowResponder (version 1) {}
[INFO ] 2023-01-31T07:20:13,618Z [Test worker] internal.NodeFlowManager. - Registered net.corda.samples.obligation.flows.IOUTransferFlow to initiate net.corda.samples.obligation.flows.IOUTransferFlowResponder (version 1) {}
[INFO ] 2023-01-31T07:20:13,618Z [Test worker] internal.NodeFlowManager. - Registered net.corda.samples.obligation.flows.SyncKey to initiate net.corda.samples.obligation.flows.SyncKeyResponder (version 1) {}
[INFO ] 2023-01-31T07:20:13,678Z [Test worker] internal.InternalMockNetwork$MockNode. - Loaded network parameters: NetworkParameters {
      minimumPlatformVersion=4
      notaries=[NotaryInfo(identity=O=Notary, L=London, C=GB, validating=true)]
      maxMessageSize=10485760
      maxTransactionSize=524288000
      whitelistedContractImplementations {
        
      }
      eventHorizon=PT720H
      packageOwnership {
        
      }
      modifiedTime=2023-01-31T07:20:00.144Z
      epoch=1
  } {}
[INFO ] 2023-01-31T07:20:17,979Z [Test worker] internal.InternalMockNetwork$MockNode. - Connected to H2 database. {}
[INFO ] 2023-01-31T07:20:18,038Z [Test worker] persistence.HibernateConfiguration. - Init HibernateConfiguration for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1), AccountsContractsSchemaV1(name=com.r3.corda.lib.accounts.contracts.internal.schemas.AccountsContractsSchema, version=1), AccountsWorkflowsSchemaV1(name=com.r3.corda.lib.accounts.workflows.internal.schemas.AccountsWorkflowsSchema, version=1), CashSchemaV1(name=net.corda.finance.schemas.CashSchema, version=1), CommercialPaperSchemaV1(name=net.corda.finance.schemas.CommercialPaperSchema, version=1), JPANotarySchemaV1(name=net.corda.notary.jpa.JPANotarySchema, version=1)] {}
[INFO ] 2023-01-31T07:20:18,042Z [Test worker] factory.BaseSessionFactoryFactory. - Creating session factory for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1), AccountsContractsSchemaV1(name=com.r3.corda.lib.accounts.contracts.internal.schemas.AccountsContractsSchema, version=1), AccountsWorkflowsSchemaV1(name=com.r3.corda.lib.accounts.workflows.internal.schemas.AccountsWorkflowsSchema, version=1), CashSchemaV1(name=net.corda.finance.schemas.CashSchema, version=1), CommercialPaperSchemaV1(name=net.corda.finance.schemas.CommercialPaperSchema, version=1), JPANotarySchemaV1(name=net.corda.notary.jpa.JPANotarySchema, version=1)] {}
[INFO ] 2023-01-31T07:20:20,439Z [Test worker] factory.BaseSessionFactoryFactory. - Created session factory for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1), AccountsContractsSchemaV1(name=com.r3.corda.lib.accounts.contracts.internal.schemas.AccountsContractsSchema, version=1), AccountsWorkflowsSchemaV1(name=com.r3.corda.lib.accounts.workflows.internal.schemas.AccountsWorkflowsSchema, version=1), CashSchemaV1(name=net.corda.finance.schemas.CashSchema, version=1), CommercialPaperSchemaV1(name=net.corda.finance.schemas.CommercialPaperSchema, version=1), JPANotarySchemaV1(name=net.corda.notary.jpa.JPANotarySchema, version=1)] {}
[INFO ] 2023-01-31T07:20:20,708Z [Test worker] internal.InternalMockNetwork$MockNode. - Node-info has changed so submitting update. Old node-info was null {}
[INFO ] 2023-01-31T07:20:20,715Z [Test worker] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Notary, L=London, C=GB], platformVersion=11, serial=1675149620708), owningKey=DL6AmPz7b8UQAyLhdBk9mmwhi2RaUv5yqFEDCbmxzJzpGZ {}
[INFO ] 2023-01-31T07:20:20,715Z [Test worker] network.PersistentNetworkMapCache. - No previous node found for O=Notary, L=London, C=GB {}
[INFO ] 2023-01-31T07:20:20,865Z [Test worker] internal.InternalMockNetwork$MockNode. - New node-info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Notary, L=London, C=GB], platformVersion=11, serial=1675149620708) {}
[INFO ] 2023-01-31T07:20:20,922Z [Test worker] network.NetworkMapUpdater. - Auto-accept enabled for network parameter changes which modify only: [epoch, modifiedTime, packageOwnership, whitelistedContractImplementations] {}
[INFO ] 2023-01-31T07:20:20,952Z [Test worker] internal.MockNodeMessagingService. - Status change to true {}
[INFO ] 2023-01-31T07:20:20,953Z [Test worker] internal.InternalMockNetwork$MockNode. - MessagingService active change to: true {}
[INFO ] 2023-01-31T07:20:20,994Z [MockNode-1-2] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Notary, L=London, C=GB], platformVersion=11, serial=1675149620708), owningKey=DL6AmPz7b8UQAyLhdBk9mmwhi2RaUv5yqFEDCbmxzJzpGZ {}
[INFO ] 2023-01-31T07:20:20,994Z [MockNode-1-2] network.PersistentNetworkMapCache. - Previous node was identical to incoming one - doing nothing {}
[INFO ] 2023-01-31T07:20:21,096Z [Test worker] persistence.NodeAttachmentService. - Stored new attachment: id=D370FD972C7E07CE73F4F9B7886D226807F6B16C4EE287398B9C69384109DC14 uploader=app filename=Accounts SDK - States and Contracts {}
[INFO ] 2023-01-31T07:20:21,136Z [Test worker] persistence.NodeAttachmentService. - Stored new attachment: id=BD0C932EAF8B1FE96DCBBF275B914BCD776D14EDC8F97DCEBF7E15DA09C606AE uploader=app filename=Corda Finance Demo {}
[INFO ] 2023-01-31T07:20:21,151Z [Test worker] persistence.NodeAttachmentService. - Stored new attachment: id=8D797B45F40704FA4FD70921F5BC6E2D7B34450D345CE6788D2A87859EF63BD8 uploader=app filename=Obligation Contracts {}
[INFO ] 2023-01-31T07:20:21,167Z [Test worker] internal.InternalMockNetwork$MockNode. - Installed com.r3.corda.lib.accounts.workflows.services.KeyManagementBackedAccountService Corda service {}
[INFO ] 2023-01-31T07:20:21,168Z [Test worker] utilities.NotaryLoader. - Starting notary service: class net.corda.notary.jpa.JPANotaryService {}
[INFO ] 2023-01-31T07:20:21,890Z [Test worker] statemachine.SingleThreadedStateMachineManager. - Node ready, info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Notary, L=London, C=GB], platformVersion=11, serial=1675149620708) {}
[INFO ] 2023-01-31T07:20:21,899Z [Test worker] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Notary, L=London, C=GB], platformVersion=11, serial=1675149620708), owningKey=DL6AmPz7b8UQAyLhdBk9mmwhi2RaUv5yqFEDCbmxzJzpGZ {}
[INFO ] 2023-01-31T07:20:21,899Z [Test worker] network.PersistentNetworkMapCache. - Previous node was identical to incoming one - doing nothing {}
[INFO ] 2023-01-31T07:20:21,899Z [Test worker] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Notary, L=London, C=GB], platformVersion=11, serial=1675149620708), owningKey=DL6AmPz7b8UQAyLhdBk9mmwhi2RaUv5yqFEDCbmxzJzpGZ {}
[INFO ] 2023-01-31T07:20:21,899Z [Test worker] network.PersistentNetworkMapCache. - Previous node was identical to incoming one - doing nothing {}
[INFO ] 2023-01-31T07:20:21,914Z [Test worker] cordapp.JarScanningCordappLoader. - Looking for CorDapps in [build/mock-network/20230131-072000.439-E5F9FEE180AC32C0/nodes/1/cordapps] {}
[INFO ] 2023-01-31T07:20:21,915Z [Test worker] cordapp.JarScanningCordappLoader. - Loading CorDapps from RestrictedURL(url=file:/Users/peter.li/Desktop/obligation-cordapp/workflows/build/mock-network/20230131-072000.439-E5F9FEE180AC32C0/nodes/1/cordapps/accounts-contracts-1.0.jar, rootPackageName=null), RestrictedURL(url=file:/Users/peter.li/Desktop/obligation-cordapp/workflows/build/mock-network/20230131-072000.439-E5F9FEE180AC32C0/nodes/1/cordapps/accounts-workflows-1.0.jar, rootPackageName=null), RestrictedURL(url=file:/Users/peter.li/Desktop/obligation-cordapp/workflows/build/mock-network/20230131-072000.439-E5F9FEE180AC32C0/nodes/1/cordapps/corda-finance-contracts-4.9.jar, rootPackageName=null), RestrictedURL(url=file:/Users/peter.li/Desktop/obligation-cordapp/workflows/build/mock-network/20230131-072000.439-E5F9FEE180AC32C0/nodes/1/cordapps/contracts-1.0.jar, rootPackageName=null), RestrictedURL(url=file:/Users/peter.li/Desktop/obligation-cordapp/workflows/build/mock-network/20230131-072000.439-E5F9FEE180AC32C0/nodes/1/cordapps/workflows-1.0.jar, rootPackageName=null) {}
[INFO ] 2023-01-31T07:20:21,915Z [Test worker] cordapp.JarScanningCordappLoader. - Scanning CorDapp in file:/Users/peter.li/Desktop/obligation-cordapp/workflows/build/mock-network/20230131-072000.439-E5F9FEE180AC32C0/nodes/1/cordapps/accounts-contracts-1.0.jar {}
[INFO ] 2023-01-31T07:20:21,940Z [Test worker] cordapp.JarScanningCordappLoader. - Scanning CorDapp in file:/Users/peter.li/Desktop/obligation-cordapp/workflows/build/mock-network/20230131-072000.439-E5F9FEE180AC32C0/nodes/1/cordapps/accounts-workflows-1.0.jar {}
[INFO ] 2023-01-31T07:20:21,951Z [Test worker] cordapp.JarScanningCordappLoader. - Scanning CorDapp in file:/Users/peter.li/Desktop/obligation-cordapp/workflows/build/mock-network/20230131-072000.439-E5F9FEE180AC32C0/nodes/1/cordapps/corda-finance-contracts-4.9.jar {}
[INFO ] 2023-01-31T07:20:21,970Z [Test worker] cordapp.JarScanningCordappLoader. - Scanning CorDapp in file:/Users/peter.li/Desktop/obligation-cordapp/workflows/build/mock-network/20230131-072000.439-E5F9FEE180AC32C0/nodes/1/cordapps/contracts-1.0.jar {}
[INFO ] 2023-01-31T07:20:21,976Z [Test worker] cordapp.JarScanningCordappLoader. - Scanning CorDapp in file:/Users/peter.li/Desktop/obligation-cordapp/workflows/build/mock-network/20230131-072000.439-E5F9FEE180AC32C0/nodes/1/cordapps/workflows-1.0.jar {}
[INFO ] 2023-01-31T07:20:22,004Z [Test worker] internal.InternalMockNetwork$MockNode. - MessagingService active change to: false {}
[INFO ] 2023-01-31T07:20:22,005Z [Test worker] internal.InternalMockNetwork$MockNode. - Flow external operation executor has a max of 2 threads {}
[INFO ] 2023-01-31T07:20:22,007Z [Test worker] internal.InternalMockNetwork$MockNode. - Node starting up ... {}
[INFO ] 2023-01-31T07:20:22,051Z [Test worker] internal.KeyStoreHandler. - Loaded trusted root certificate: DL7fwxLm5xbiMD8adUuYTsPZHAict46Ng4w6RNcySt5vAw, alias: cordarootca {}
[INFO ] 2023-01-31T07:20:22,052Z [Test worker] internal.KeyStoreHandler. - Loaded node identity key: DLA1eUzzSBxvsjoX6d9L82t4o6Eaao42gXHUJ7ixCa16hB, alias: identity-private-key {}
[INFO ] 2023-01-31T07:20:22,057Z [Test worker] internal.NodeFlowManager. - Registered com.r3.corda.lib.accounts.workflows.flows.ShareStateAndSyncAccounts to initiate com.r3.corda.lib.accounts.workflows.flows.ReceiveStateAndSyncAccounts (version 1) {}
[INFO ] 2023-01-31T07:20:22,058Z [Test worker] internal.NodeFlowManager. - Registered com.r3.corda.lib.accounts.workflows.flows.ShareStateWithAccount to initiate com.r3.corda.lib.accounts.workflows.flows.ReceiveStateForAccount (version 1) {}
[INFO ] 2023-01-31T07:20:22,058Z [Test worker] internal.NodeFlowManager. - Registered com.r3.corda.lib.accounts.workflows.flows.RequestAccountInfo to initiate com.r3.corda.lib.accounts.workflows.flows.RequestAccountInfoHandler (version 1) {}
[INFO ] 2023-01-31T07:20:22,058Z [Test worker] internal.NodeFlowManager. - Registered com.r3.corda.lib.accounts.workflows.flows.RequestKeyForAccount to initiate com.r3.corda.lib.accounts.workflows.flows.SendKeyForAccount (version 1) {}
[INFO ] 2023-01-31T07:20:22,058Z [Test worker] internal.NodeFlowManager. - Registered com.r3.corda.lib.accounts.workflows.flows.ShareAccountInfo to initiate com.r3.corda.lib.accounts.workflows.flows.ShareAccountInfoHandler (version 1) {}
[INFO ] 2023-01-31T07:20:22,058Z [Test worker] internal.NodeFlowManager. - Registered net.corda.samples.obligation.flows.IOUIssueFlow to initiate net.corda.samples.obligation.flows.IOUIssueFlowResponder (version 1) {}
[INFO ] 2023-01-31T07:20:22,058Z [Test worker] internal.NodeFlowManager. - Registered net.corda.samples.obligation.flows.IOUSettleFlow to initiate net.corda.samples.obligation.flows.IOUSettleFlowResponder (version 1) {}
[INFO ] 2023-01-31T07:20:22,058Z [Test worker] internal.NodeFlowManager. - Registered net.corda.samples.obligation.flows.IOUTransferFlow to initiate net.corda.samples.obligation.flows.IOUTransferFlowResponder (version 1) {}
[INFO ] 2023-01-31T07:20:22,058Z [Test worker] internal.NodeFlowManager. - Registered net.corda.samples.obligation.flows.SyncKey to initiate net.corda.samples.obligation.flows.SyncKeyResponder (version 1) {}
[INFO ] 2023-01-31T07:20:22,063Z [Test worker] internal.InternalMockNetwork$MockNode. - Loaded network parameters: NetworkParameters {
      minimumPlatformVersion=4
      notaries=[NotaryInfo(identity=O=Notary, L=London, C=GB, validating=true)]
      maxMessageSize=10485760
      maxTransactionSize=524288000
      whitelistedContractImplementations {
        
      }
      eventHorizon=PT720H
      packageOwnership {
        
      }
      modifiedTime=2023-01-31T07:20:00.144Z
      epoch=1
  } {}
[INFO ] 2023-01-31T07:20:22,715Z [Test worker] internal.InternalMockNetwork$MockNode. - Connected to H2 database. {}
[INFO ] 2023-01-31T07:20:22,717Z [Test worker] persistence.HibernateConfiguration. - Init HibernateConfiguration for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1), AccountsContractsSchemaV1(name=com.r3.corda.lib.accounts.contracts.internal.schemas.AccountsContractsSchema, version=1), AccountsWorkflowsSchemaV1(name=com.r3.corda.lib.accounts.workflows.internal.schemas.AccountsWorkflowsSchema, version=1), CashSchemaV1(name=net.corda.finance.schemas.CashSchema, version=1), CommercialPaperSchemaV1(name=net.corda.finance.schemas.CommercialPaperSchema, version=1)] {}
[INFO ] 2023-01-31T07:20:22,717Z [Test worker] factory.BaseSessionFactoryFactory. - Creating session factory for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1), AccountsContractsSchemaV1(name=com.r3.corda.lib.accounts.contracts.internal.schemas.AccountsContractsSchema, version=1), AccountsWorkflowsSchemaV1(name=com.r3.corda.lib.accounts.workflows.internal.schemas.AccountsWorkflowsSchema, version=1), CashSchemaV1(name=net.corda.finance.schemas.CashSchema, version=1), CommercialPaperSchemaV1(name=net.corda.finance.schemas.CommercialPaperSchema, version=1)] {}
[INFO ] 2023-01-31T07:20:22,898Z [Test worker] factory.BaseSessionFactoryFactory. - Created session factory for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1), AccountsContractsSchemaV1(name=com.r3.corda.lib.accounts.contracts.internal.schemas.AccountsContractsSchema, version=1), AccountsWorkflowsSchemaV1(name=com.r3.corda.lib.accounts.workflows.internal.schemas.AccountsWorkflowsSchema, version=1), CashSchemaV1(name=net.corda.finance.schemas.CashSchema, version=1), CommercialPaperSchemaV1(name=net.corda.finance.schemas.CommercialPaperSchema, version=1)] {}
[INFO ] 2023-01-31T07:20:22,902Z [Test worker] internal.InternalMockNetwork$MockNode. - Node-info has changed so submitting update. Old node-info was null {}
[INFO ] 2023-01-31T07:20:22,906Z [Test worker] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 1, L=London, C=GB], platformVersion=11, serial=1675149622902), owningKey=DLA1eUzzSBxvsjoX6d9L82t4o6Eaao42gXHUJ7ixCa16hB {}
[INFO ] 2023-01-31T07:20:22,906Z [Test worker] network.PersistentNetworkMapCache. - No previous node found for O=Mock Company 1, L=London, C=GB {}
[INFO ] 2023-01-31T07:20:22,914Z [Test worker] internal.InternalMockNetwork$MockNode. - New node-info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 1, L=London, C=GB], platformVersion=11, serial=1675149622902) {}
[INFO ] 2023-01-31T07:20:22,921Z [Test worker] network.NetworkMapUpdater. - Auto-accept enabled for network parameter changes which modify only: [epoch, modifiedTime, packageOwnership, whitelistedContractImplementations] {}
[INFO ] 2023-01-31T07:20:22,922Z [Test worker] internal.MockNodeMessagingService. - Status change to true {}
[INFO ] 2023-01-31T07:20:22,922Z [Test worker] internal.InternalMockNetwork$MockNode. - MessagingService active change to: true {}
[INFO ] 2023-01-31T07:20:22,932Z [MockNode-2-2] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 1, L=London, C=GB], platformVersion=11, serial=1675149622902), owningKey=DLA1eUzzSBxvsjoX6d9L82t4o6Eaao42gXHUJ7ixCa16hB {}
[INFO ] 2023-01-31T07:20:22,932Z [MockNode-2-2] network.PersistentNetworkMapCache. - Previous node was identical to incoming one - doing nothing {}
[INFO ] 2023-01-31T07:20:22,953Z [Test worker] persistence.NodeAttachmentService. - Stored new attachment: id=D370FD972C7E07CE73F4F9B7886D226807F6B16C4EE287398B9C69384109DC14 uploader=app filename=Accounts SDK - States and Contracts {}
[INFO ] 2023-01-31T07:20:22,997Z [Test worker] persistence.NodeAttachmentService. - Stored new attachment: id=BD0C932EAF8B1FE96DCBBF275B914BCD776D14EDC8F97DCEBF7E15DA09C606AE uploader=app filename=Corda Finance Demo {}
[INFO ] 2023-01-31T07:20:23,015Z [Test worker] persistence.NodeAttachmentService. - Stored new attachment: id=8D797B45F40704FA4FD70921F5BC6E2D7B34450D345CE6788D2A87859EF63BD8 uploader=app filename=Obligation Contracts {}
[INFO ] 2023-01-31T07:20:23,019Z [Test worker] internal.InternalMockNetwork$MockNode. - Installed com.r3.corda.lib.accounts.workflows.services.KeyManagementBackedAccountService Corda service {}
[INFO ] 2023-01-31T07:20:23,048Z [Test worker] statemachine.SingleThreadedStateMachineManager. - Node ready, info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 1, L=London, C=GB], platformVersion=11, serial=1675149622902) {}
[INFO ] 2023-01-31T07:20:23,052Z [Test worker] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Notary, L=London, C=GB], platformVersion=11, serial=1675149620708), owningKey=DL6AmPz7b8UQAyLhdBk9mmwhi2RaUv5yqFEDCbmxzJzpGZ {}
[INFO ] 2023-01-31T07:20:23,052Z [Test worker] network.PersistentNetworkMapCache. - No previous node found for O=Notary, L=London, C=GB {}
[INFO ] 2023-01-31T07:20:23,070Z [Test worker] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 1, L=London, C=GB], platformVersion=11, serial=1675149622902), owningKey=DLA1eUzzSBxvsjoX6d9L82t4o6Eaao42gXHUJ7ixCa16hB {}
[INFO ] 2023-01-31T07:20:23,070Z [Test worker] network.PersistentNetworkMapCache. - No previous node found for O=Mock Company 1, L=London, C=GB {}
[INFO ] 2023-01-31T07:20:23,082Z [Test worker] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 1, L=London, C=GB], platformVersion=11, serial=1675149622902), owningKey=DLA1eUzzSBxvsjoX6d9L82t4o6Eaao42gXHUJ7ixCa16hB {}
[INFO ] 2023-01-31T07:20:23,082Z [Test worker] network.PersistentNetworkMapCache. - Previous node was identical to incoming one - doing nothing {}
[INFO ] 2023-01-31T07:20:23,082Z [Test worker] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 1, L=London, C=GB], platformVersion=11, serial=1675149622902), owningKey=DLA1eUzzSBxvsjoX6d9L82t4o6Eaao42gXHUJ7ixCa16hB {}
[INFO ] 2023-01-31T07:20:23,082Z [Test worker] network.PersistentNetworkMapCache. - Previous node was identical to incoming one - doing nothing {}
[INFO ] 2023-01-31T07:20:23,096Z [Test worker] cordapp.JarScanningCordappLoader. - Looking for CorDapps in [build/mock-network/20230131-072000.439-E5F9FEE180AC32C0/nodes/2/cordapps] {}
[INFO ] 2023-01-31T07:20:23,097Z [Test worker] cordapp.JarScanningCordappLoader. - Loading CorDapps from RestrictedURL(url=file:/Users/peter.li/Desktop/obligation-cordapp/workflows/build/mock-network/20230131-072000.439-E5F9FEE180AC32C0/nodes/2/cordapps/accounts-contracts-1.0.jar, rootPackageName=null), RestrictedURL(url=file:/Users/peter.li/Desktop/obligation-cordapp/workflows/build/mock-network/20230131-072000.439-E5F9FEE180AC32C0/nodes/2/cordapps/accounts-workflows-1.0.jar, rootPackageName=null), RestrictedURL(url=file:/Users/peter.li/Desktop/obligation-cordapp/workflows/build/mock-network/20230131-072000.439-E5F9FEE180AC32C0/nodes/2/cordapps/corda-finance-contracts-4.9.jar, rootPackageName=null), RestrictedURL(url=file:/Users/peter.li/Desktop/obligation-cordapp/workflows/build/mock-network/20230131-072000.439-E5F9FEE180AC32C0/nodes/2/cordapps/contracts-1.0.jar, rootPackageName=null), RestrictedURL(url=file:/Users/peter.li/Desktop/obligation-cordapp/workflows/build/mock-network/20230131-072000.439-E5F9FEE180AC32C0/nodes/2/cordapps/workflows-1.0.jar, rootPackageName=null) {}
[INFO ] 2023-01-31T07:20:23,097Z [Test worker] cordapp.JarScanningCordappLoader. - Scanning CorDapp in file:/Users/peter.li/Desktop/obligation-cordapp/workflows/build/mock-network/20230131-072000.439-E5F9FEE180AC32C0/nodes/2/cordapps/accounts-contracts-1.0.jar {}
[INFO ] 2023-01-31T07:20:23,123Z [Test worker] cordapp.JarScanningCordappLoader. - Scanning CorDapp in file:/Users/peter.li/Desktop/obligation-cordapp/workflows/build/mock-network/20230131-072000.439-E5F9FEE180AC32C0/nodes/2/cordapps/accounts-workflows-1.0.jar {}
[INFO ] 2023-01-31T07:20:23,133Z [Test worker] cordapp.JarScanningCordappLoader. - Scanning CorDapp in file:/Users/peter.li/Desktop/obligation-cordapp/workflows/build/mock-network/20230131-072000.439-E5F9FEE180AC32C0/nodes/2/cordapps/corda-finance-contracts-4.9.jar {}
[INFO ] 2023-01-31T07:20:23,149Z [Test worker] cordapp.JarScanningCordappLoader. - Scanning CorDapp in file:/Users/peter.li/Desktop/obligation-cordapp/workflows/build/mock-network/20230131-072000.439-E5F9FEE180AC32C0/nodes/2/cordapps/contracts-1.0.jar {}
[INFO ] 2023-01-31T07:20:23,155Z [Test worker] cordapp.JarScanningCordappLoader. - Scanning CorDapp in file:/Users/peter.li/Desktop/obligation-cordapp/workflows/build/mock-network/20230131-072000.439-E5F9FEE180AC32C0/nodes/2/cordapps/workflows-1.0.jar {}
[INFO ] 2023-01-31T07:20:23,183Z [Test worker] internal.InternalMockNetwork$MockNode. - MessagingService active change to: false {}
[INFO ] 2023-01-31T07:20:23,184Z [Test worker] internal.InternalMockNetwork$MockNode. - Flow external operation executor has a max of 2 threads {}
[INFO ] 2023-01-31T07:20:23,185Z [Test worker] internal.InternalMockNetwork$MockNode. - Node starting up ... {}
[INFO ] 2023-01-31T07:20:23,235Z [Test worker] internal.KeyStoreHandler. - Loaded trusted root certificate: DL7fwxLm5xbiMD8adUuYTsPZHAict46Ng4w6RNcySt5vAw, alias: cordarootca {}
[INFO ] 2023-01-31T07:20:23,235Z [Test worker] internal.KeyStoreHandler. - Loaded node identity key: DLEm47G5Mb8T8LchXNHocvXrXUXxw3dFJyoSkRqme6KdE3, alias: identity-private-key {}
[INFO ] 2023-01-31T07:20:23,242Z [Test worker] internal.NodeFlowManager. - Registered com.r3.corda.lib.accounts.workflows.flows.ShareStateAndSyncAccounts to initiate com.r3.corda.lib.accounts.workflows.flows.ReceiveStateAndSyncAccounts (version 1) {}
[INFO ] 2023-01-31T07:20:23,242Z [Test worker] internal.NodeFlowManager. - Registered com.r3.corda.lib.accounts.workflows.flows.ShareStateWithAccount to initiate com.r3.corda.lib.accounts.workflows.flows.ReceiveStateForAccount (version 1) {}
[INFO ] 2023-01-31T07:20:23,242Z [Test worker] internal.NodeFlowManager. - Registered com.r3.corda.lib.accounts.workflows.flows.RequestAccountInfo to initiate com.r3.corda.lib.accounts.workflows.flows.RequestAccountInfoHandler (version 1) {}
[INFO ] 2023-01-31T07:20:23,242Z [Test worker] internal.NodeFlowManager. - Registered com.r3.corda.lib.accounts.workflows.flows.RequestKeyForAccount to initiate com.r3.corda.lib.accounts.workflows.flows.SendKeyForAccount (version 1) {}
[INFO ] 2023-01-31T07:20:23,242Z [Test worker] internal.NodeFlowManager. - Registered com.r3.corda.lib.accounts.workflows.flows.ShareAccountInfo to initiate com.r3.corda.lib.accounts.workflows.flows.ShareAccountInfoHandler (version 1) {}
[INFO ] 2023-01-31T07:20:23,242Z [Test worker] internal.NodeFlowManager. - Registered net.corda.samples.obligation.flows.IOUIssueFlow to initiate net.corda.samples.obligation.flows.IOUIssueFlowResponder (version 1) {}
[INFO ] 2023-01-31T07:20:23,242Z [Test worker] internal.NodeFlowManager. - Registered net.corda.samples.obligation.flows.IOUSettleFlow to initiate net.corda.samples.obligation.flows.IOUSettleFlowResponder (version 1) {}
[INFO ] 2023-01-31T07:20:23,242Z [Test worker] internal.NodeFlowManager. - Registered net.corda.samples.obligation.flows.IOUTransferFlow to initiate net.corda.samples.obligation.flows.IOUTransferFlowResponder (version 1) {}
[INFO ] 2023-01-31T07:20:23,242Z [Test worker] internal.NodeFlowManager. - Registered net.corda.samples.obligation.flows.SyncKey to initiate net.corda.samples.obligation.flows.SyncKeyResponder (version 1) {}
[INFO ] 2023-01-31T07:20:23,248Z [Test worker] internal.InternalMockNetwork$MockNode. - Loaded network parameters: NetworkParameters {
      minimumPlatformVersion=4
      notaries=[NotaryInfo(identity=O=Notary, L=London, C=GB, validating=true)]
      maxMessageSize=10485760
      maxTransactionSize=524288000
      whitelistedContractImplementations {
        
      }
      eventHorizon=PT720H
      packageOwnership {
        
      }
      modifiedTime=2023-01-31T07:20:00.144Z
      epoch=1
  } {}
[INFO ] 2023-01-31T07:20:23,830Z [Test worker] internal.InternalMockNetwork$MockNode. - Connected to H2 database. {}
[INFO ] 2023-01-31T07:20:23,831Z [Test worker] persistence.HibernateConfiguration. - Init HibernateConfiguration for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1), AccountsContractsSchemaV1(name=com.r3.corda.lib.accounts.contracts.internal.schemas.AccountsContractsSchema, version=1), AccountsWorkflowsSchemaV1(name=com.r3.corda.lib.accounts.workflows.internal.schemas.AccountsWorkflowsSchema, version=1), CashSchemaV1(name=net.corda.finance.schemas.CashSchema, version=1), CommercialPaperSchemaV1(name=net.corda.finance.schemas.CommercialPaperSchema, version=1)] {}
[INFO ] 2023-01-31T07:20:23,831Z [Test worker] factory.BaseSessionFactoryFactory. - Creating session factory for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1), AccountsContractsSchemaV1(name=com.r3.corda.lib.accounts.contracts.internal.schemas.AccountsContractsSchema, version=1), AccountsWorkflowsSchemaV1(name=com.r3.corda.lib.accounts.workflows.internal.schemas.AccountsWorkflowsSchema, version=1), CashSchemaV1(name=net.corda.finance.schemas.CashSchema, version=1), CommercialPaperSchemaV1(name=net.corda.finance.schemas.CommercialPaperSchema, version=1)] {}
[INFO ] 2023-01-31T07:20:23,995Z [Test worker] factory.BaseSessionFactoryFactory. - Created session factory for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1), AccountsContractsSchemaV1(name=com.r3.corda.lib.accounts.contracts.internal.schemas.AccountsContractsSchema, version=1), AccountsWorkflowsSchemaV1(name=com.r3.corda.lib.accounts.workflows.internal.schemas.AccountsWorkflowsSchema, version=1), CashSchemaV1(name=net.corda.finance.schemas.CashSchema, version=1), CommercialPaperSchemaV1(name=net.corda.finance.schemas.CommercialPaperSchema, version=1)] {}
[INFO ] 2023-01-31T07:20:24,000Z [Test worker] internal.InternalMockNetwork$MockNode. - Node-info has changed so submitting update. Old node-info was null {}
[INFO ] 2023-01-31T07:20:24,003Z [Test worker] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 2, L=London, C=GB], platformVersion=11, serial=1675149624000), owningKey=DLEm47G5Mb8T8LchXNHocvXrXUXxw3dFJyoSkRqme6KdE3 {}
[INFO ] 2023-01-31T07:20:24,003Z [Test worker] network.PersistentNetworkMapCache. - No previous node found for O=Mock Company 2, L=London, C=GB {}
[INFO ] 2023-01-31T07:20:24,010Z [Test worker] internal.InternalMockNetwork$MockNode. - New node-info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 2, L=London, C=GB], platformVersion=11, serial=1675149624000) {}
[INFO ] 2023-01-31T07:20:24,017Z [Test worker] network.NetworkMapUpdater. - Auto-accept enabled for network parameter changes which modify only: [epoch, modifiedTime, packageOwnership, whitelistedContractImplementations] {}
[INFO ] 2023-01-31T07:20:24,018Z [Test worker] internal.MockNodeMessagingService. - Status change to true {}
[INFO ] 2023-01-31T07:20:24,018Z [Test worker] internal.InternalMockNetwork$MockNode. - MessagingService active change to: true {}
[INFO ] 2023-01-31T07:20:24,029Z [MockNode-3-2] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 2, L=London, C=GB], platformVersion=11, serial=1675149624000), owningKey=DLEm47G5Mb8T8LchXNHocvXrXUXxw3dFJyoSkRqme6KdE3 {}
[INFO ] 2023-01-31T07:20:24,029Z [MockNode-3-2] network.PersistentNetworkMapCache. - Previous node was identical to incoming one - doing nothing {}
[INFO ] 2023-01-31T07:20:24,053Z [Test worker] persistence.NodeAttachmentService. - Stored new attachment: id=D370FD972C7E07CE73F4F9B7886D226807F6B16C4EE287398B9C69384109DC14 uploader=app filename=Accounts SDK - States and Contracts {}
[INFO ] 2023-01-31T07:20:24,092Z [Test worker] persistence.NodeAttachmentService. - Stored new attachment: id=BD0C932EAF8B1FE96DCBBF275B914BCD776D14EDC8F97DCEBF7E15DA09C606AE uploader=app filename=Corda Finance Demo {}
[INFO ] 2023-01-31T07:20:24,107Z [Test worker] persistence.NodeAttachmentService. - Stored new attachment: id=8D797B45F40704FA4FD70921F5BC6E2D7B34450D345CE6788D2A87859EF63BD8 uploader=app filename=Obligation Contracts {}
[INFO ] 2023-01-31T07:20:24,109Z [Test worker] internal.InternalMockNetwork$MockNode. - Installed com.r3.corda.lib.accounts.workflows.services.KeyManagementBackedAccountService Corda service {}
[INFO ] 2023-01-31T07:20:24,131Z [Test worker] statemachine.SingleThreadedStateMachineManager. - Node ready, info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 2, L=London, C=GB], platformVersion=11, serial=1675149624000) {}
[INFO ] 2023-01-31T07:20:24,134Z [Test worker] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Notary, L=London, C=GB], platformVersion=11, serial=1675149620708), owningKey=DL6AmPz7b8UQAyLhdBk9mmwhi2RaUv5yqFEDCbmxzJzpGZ {}
[INFO ] 2023-01-31T07:20:24,134Z [Test worker] network.PersistentNetworkMapCache. - No previous node found for O=Notary, L=London, C=GB {}
[INFO ] 2023-01-31T07:20:24,148Z [Test worker] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 2, L=London, C=GB], platformVersion=11, serial=1675149624000), owningKey=DLEm47G5Mb8T8LchXNHocvXrXUXxw3dFJyoSkRqme6KdE3 {}
[INFO ] 2023-01-31T07:20:24,148Z [Test worker] network.PersistentNetworkMapCache. - No previous node found for O=Mock Company 2, L=London, C=GB {}
[INFO ] 2023-01-31T07:20:24,161Z [Test worker] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 1, L=London, C=GB], platformVersion=11, serial=1675149622902), owningKey=DLA1eUzzSBxvsjoX6d9L82t4o6Eaao42gXHUJ7ixCa16hB {}
[INFO ] 2023-01-31T07:20:24,161Z [Test worker] network.PersistentNetworkMapCache. - No previous node found for O=Mock Company 1, L=London, C=GB {}
[INFO ] 2023-01-31T07:20:24,172Z [Test worker] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 2, L=London, C=GB], platformVersion=11, serial=1675149624000), owningKey=DLEm47G5Mb8T8LchXNHocvXrXUXxw3dFJyoSkRqme6KdE3 {}
[INFO ] 2023-01-31T07:20:24,172Z [Test worker] network.PersistentNetworkMapCache. - No previous node found for O=Mock Company 2, L=London, C=GB {}
[INFO ] 2023-01-31T07:20:24,181Z [Test worker] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 2, L=London, C=GB], platformVersion=11, serial=1675149624000), owningKey=DLEm47G5Mb8T8LchXNHocvXrXUXxw3dFJyoSkRqme6KdE3 {}
[INFO ] 2023-01-31T07:20:24,181Z [Test worker] network.PersistentNetworkMapCache. - Previous node was identical to incoming one - doing nothing {}
[INFO ] 2023-01-31T07:20:24,181Z [Test worker] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 2, L=London, C=GB], platformVersion=11, serial=1675149624000), owningKey=DLEm47G5Mb8T8LchXNHocvXrXUXxw3dFJyoSkRqme6KdE3 {}
[INFO ] 2023-01-31T07:20:24,181Z [Test worker] network.PersistentNetworkMapCache. - Previous node was identical to incoming one - doing nothing {}
[INFO ] 2023-01-31T07:20:24,192Z [Test worker] cordapp.JarScanningCordappLoader. - Looking for CorDapps in [build/mock-network/20230131-072000.439-E5F9FEE180AC32C0/nodes/3/cordapps] {}
[INFO ] 2023-01-31T07:20:24,192Z [Test worker] cordapp.JarScanningCordappLoader. - Loading CorDapps from RestrictedURL(url=file:/Users/peter.li/Desktop/obligation-cordapp/workflows/build/mock-network/20230131-072000.439-E5F9FEE180AC32C0/nodes/3/cordapps/accounts-contracts-1.0.jar, rootPackageName=null), RestrictedURL(url=file:/Users/peter.li/Desktop/obligation-cordapp/workflows/build/mock-network/20230131-072000.439-E5F9FEE180AC32C0/nodes/3/cordapps/accounts-workflows-1.0.jar, rootPackageName=null), RestrictedURL(url=file:/Users/peter.li/Desktop/obligation-cordapp/workflows/build/mock-network/20230131-072000.439-E5F9FEE180AC32C0/nodes/3/cordapps/corda-finance-contracts-4.9.jar, rootPackageName=null), RestrictedURL(url=file:/Users/peter.li/Desktop/obligation-cordapp/workflows/build/mock-network/20230131-072000.439-E5F9FEE180AC32C0/nodes/3/cordapps/contracts-1.0.jar, rootPackageName=null), RestrictedURL(url=file:/Users/peter.li/Desktop/obligation-cordapp/workflows/build/mock-network/20230131-072000.439-E5F9FEE180AC32C0/nodes/3/cordapps/workflows-1.0.jar, rootPackageName=null) {}
[INFO ] 2023-01-31T07:20:24,192Z [Test worker] cordapp.JarScanningCordappLoader. - Scanning CorDapp in file:/Users/peter.li/Desktop/obligation-cordapp/workflows/build/mock-network/20230131-072000.439-E5F9FEE180AC32C0/nodes/3/cordapps/accounts-contracts-1.0.jar {}
[INFO ] 2023-01-31T07:20:24,212Z [Test worker] cordapp.JarScanningCordappLoader. - Scanning CorDapp in file:/Users/peter.li/Desktop/obligation-cordapp/workflows/build/mock-network/20230131-072000.439-E5F9FEE180AC32C0/nodes/3/cordapps/accounts-workflows-1.0.jar {}
[INFO ] 2023-01-31T07:20:24,220Z [Test worker] cordapp.JarScanningCordappLoader. - Scanning CorDapp in file:/Users/peter.li/Desktop/obligation-cordapp/workflows/build/mock-network/20230131-072000.439-E5F9FEE180AC32C0/nodes/3/cordapps/corda-finance-contracts-4.9.jar {}
[INFO ] 2023-01-31T07:20:24,235Z [Test worker] cordapp.JarScanningCordappLoader. - Scanning CorDapp in file:/Users/peter.li/Desktop/obligation-cordapp/workflows/build/mock-network/20230131-072000.439-E5F9FEE180AC32C0/nodes/3/cordapps/contracts-1.0.jar {}
[INFO ] 2023-01-31T07:20:24,240Z [Test worker] cordapp.JarScanningCordappLoader. - Scanning CorDapp in file:/Users/peter.li/Desktop/obligation-cordapp/workflows/build/mock-network/20230131-072000.439-E5F9FEE180AC32C0/nodes/3/cordapps/workflows-1.0.jar {}
[INFO ] 2023-01-31T07:20:24,263Z [Test worker] internal.InternalMockNetwork$MockNode. - MessagingService active change to: false {}
[INFO ] 2023-01-31T07:20:24,264Z [Test worker] internal.InternalMockNetwork$MockNode. - Flow external operation executor has a max of 2 threads {}
[INFO ] 2023-01-31T07:20:24,265Z [Test worker] internal.InternalMockNetwork$MockNode. - Node starting up ... {}
[INFO ] 2023-01-31T07:20:24,300Z [Test worker] internal.KeyStoreHandler. - Loaded trusted root certificate: DL7fwxLm5xbiMD8adUuYTsPZHAict46Ng4w6RNcySt5vAw, alias: cordarootca {}
[INFO ] 2023-01-31T07:20:24,300Z [Test worker] internal.KeyStoreHandler. - Loaded node identity key: DL7AcsGXFn5mhECAbEGyjEu4JfkdQppTjdpArGoUsK4Rn3, alias: identity-private-key {}
[INFO ] 2023-01-31T07:20:24,305Z [Test worker] internal.NodeFlowManager. - Registered com.r3.corda.lib.accounts.workflows.flows.ShareStateAndSyncAccounts to initiate com.r3.corda.lib.accounts.workflows.flows.ReceiveStateAndSyncAccounts (version 1) {}
[INFO ] 2023-01-31T07:20:24,305Z [Test worker] internal.NodeFlowManager. - Registered com.r3.corda.lib.accounts.workflows.flows.ShareStateWithAccount to initiate com.r3.corda.lib.accounts.workflows.flows.ReceiveStateForAccount (version 1) {}
[INFO ] 2023-01-31T07:20:24,305Z [Test worker] internal.NodeFlowManager. - Registered com.r3.corda.lib.accounts.workflows.flows.RequestAccountInfo to initiate com.r3.corda.lib.accounts.workflows.flows.RequestAccountInfoHandler (version 1) {}
[INFO ] 2023-01-31T07:20:24,306Z [Test worker] internal.NodeFlowManager. - Registered com.r3.corda.lib.accounts.workflows.flows.RequestKeyForAccount to initiate com.r3.corda.lib.accounts.workflows.flows.SendKeyForAccount (version 1) {}
[INFO ] 2023-01-31T07:20:24,306Z [Test worker] internal.NodeFlowManager. - Registered com.r3.corda.lib.accounts.workflows.flows.ShareAccountInfo to initiate com.r3.corda.lib.accounts.workflows.flows.ShareAccountInfoHandler (version 1) {}
[INFO ] 2023-01-31T07:20:24,306Z [Test worker] internal.NodeFlowManager. - Registered net.corda.samples.obligation.flows.IOUIssueFlow to initiate net.corda.samples.obligation.flows.IOUIssueFlowResponder (version 1) {}
[INFO ] 2023-01-31T07:20:24,306Z [Test worker] internal.NodeFlowManager. - Registered net.corda.samples.obligation.flows.IOUSettleFlow to initiate net.corda.samples.obligation.flows.IOUSettleFlowResponder (version 1) {}
[INFO ] 2023-01-31T07:20:24,306Z [Test worker] internal.NodeFlowManager. - Registered net.corda.samples.obligation.flows.IOUTransferFlow to initiate net.corda.samples.obligation.flows.IOUTransferFlowResponder (version 1) {}
[INFO ] 2023-01-31T07:20:24,306Z [Test worker] internal.NodeFlowManager. - Registered net.corda.samples.obligation.flows.SyncKey to initiate net.corda.samples.obligation.flows.SyncKeyResponder (version 1) {}
[INFO ] 2023-01-31T07:20:24,310Z [Test worker] internal.InternalMockNetwork$MockNode. - Loaded network parameters: NetworkParameters {
      minimumPlatformVersion=4
      notaries=[NotaryInfo(identity=O=Notary, L=London, C=GB, validating=true)]
      maxMessageSize=10485760
      maxTransactionSize=524288000
      whitelistedContractImplementations {
        
      }
      eventHorizon=PT720H
      packageOwnership {
        
      }
      modifiedTime=2023-01-31T07:20:00.144Z
      epoch=1
  } {}
[INFO ] 2023-01-31T07:20:24,835Z [Test worker] internal.InternalMockNetwork$MockNode. - Connected to H2 database. {}
[INFO ] 2023-01-31T07:20:24,836Z [Test worker] persistence.HibernateConfiguration. - Init HibernateConfiguration for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1), AccountsContractsSchemaV1(name=com.r3.corda.lib.accounts.contracts.internal.schemas.AccountsContractsSchema, version=1), AccountsWorkflowsSchemaV1(name=com.r3.corda.lib.accounts.workflows.internal.schemas.AccountsWorkflowsSchema, version=1), CashSchemaV1(name=net.corda.finance.schemas.CashSchema, version=1), CommercialPaperSchemaV1(name=net.corda.finance.schemas.CommercialPaperSchema, version=1)] {}
[INFO ] 2023-01-31T07:20:24,836Z [Test worker] factory.BaseSessionFactoryFactory. - Creating session factory for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1), AccountsContractsSchemaV1(name=com.r3.corda.lib.accounts.contracts.internal.schemas.AccountsContractsSchema, version=1), AccountsWorkflowsSchemaV1(name=com.r3.corda.lib.accounts.workflows.internal.schemas.AccountsWorkflowsSchema, version=1), CashSchemaV1(name=net.corda.finance.schemas.CashSchema, version=1), CommercialPaperSchemaV1(name=net.corda.finance.schemas.CommercialPaperSchema, version=1)] {}
[INFO ] 2023-01-31T07:20:24,967Z [Test worker] factory.BaseSessionFactoryFactory. - Created session factory for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1), AccountsContractsSchemaV1(name=com.r3.corda.lib.accounts.contracts.internal.schemas.AccountsContractsSchema, version=1), AccountsWorkflowsSchemaV1(name=com.r3.corda.lib.accounts.workflows.internal.schemas.AccountsWorkflowsSchema, version=1), CashSchemaV1(name=net.corda.finance.schemas.CashSchema, version=1), CommercialPaperSchemaV1(name=net.corda.finance.schemas.CommercialPaperSchema, version=1)] {}
[INFO ] 2023-01-31T07:20:24,971Z [Test worker] internal.InternalMockNetwork$MockNode. - Node-info has changed so submitting update. Old node-info was null {}
[INFO ] 2023-01-31T07:20:24,975Z [Test worker] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 3, L=London, C=GB], platformVersion=11, serial=1675149624971), owningKey=DL7AcsGXFn5mhECAbEGyjEu4JfkdQppTjdpArGoUsK4Rn3 {}
[INFO ] 2023-01-31T07:20:24,975Z [Test worker] network.PersistentNetworkMapCache. - No previous node found for O=Mock Company 3, L=London, C=GB {}
[INFO ] 2023-01-31T07:20:24,983Z [Test worker] internal.InternalMockNetwork$MockNode. - New node-info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 3, L=London, C=GB], platformVersion=11, serial=1675149624971) {}
[INFO ] 2023-01-31T07:20:24,990Z [Test worker] network.NetworkMapUpdater. - Auto-accept enabled for network parameter changes which modify only: [epoch, modifiedTime, packageOwnership, whitelistedContractImplementations] {}
[INFO ] 2023-01-31T07:20:24,991Z [Test worker] internal.MockNodeMessagingService. - Status change to true {}
[INFO ] 2023-01-31T07:20:24,991Z [Test worker] internal.InternalMockNetwork$MockNode. - MessagingService active change to: true {}
[INFO ] 2023-01-31T07:20:25,006Z [MockNode-4-2] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 3, L=London, C=GB], platformVersion=11, serial=1675149624971), owningKey=DL7AcsGXFn5mhECAbEGyjEu4JfkdQppTjdpArGoUsK4Rn3 {}
[INFO ] 2023-01-31T07:20:25,006Z [MockNode-4-2] network.PersistentNetworkMapCache. - Previous node was identical to incoming one - doing nothing {}
[INFO ] 2023-01-31T07:20:25,031Z [Test worker] persistence.NodeAttachmentService. - Stored new attachment: id=D370FD972C7E07CE73F4F9B7886D226807F6B16C4EE287398B9C69384109DC14 uploader=app filename=Accounts SDK - States and Contracts {}
[INFO ] 2023-01-31T07:20:25,071Z [Test worker] persistence.NodeAttachmentService. - Stored new attachment: id=BD0C932EAF8B1FE96DCBBF275B914BCD776D14EDC8F97DCEBF7E15DA09C606AE uploader=app filename=Corda Finance Demo {}
[INFO ] 2023-01-31T07:20:25,084Z [Test worker] persistence.NodeAttachmentService. - Stored new attachment: id=8D797B45F40704FA4FD70921F5BC6E2D7B34450D345CE6788D2A87859EF63BD8 uploader=app filename=Obligation Contracts {}
[INFO ] 2023-01-31T07:20:25,086Z [Test worker] internal.InternalMockNetwork$MockNode. - Installed com.r3.corda.lib.accounts.workflows.services.KeyManagementBackedAccountService Corda service {}
[INFO ] 2023-01-31T07:20:25,102Z [Test worker] statemachine.SingleThreadedStateMachineManager. - Node ready, info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 3, L=London, C=GB], platformVersion=11, serial=1675149624971) {}
[INFO ] 2023-01-31T07:20:25,104Z [Test worker] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Notary, L=London, C=GB], platformVersion=11, serial=1675149620708), owningKey=DL6AmPz7b8UQAyLhdBk9mmwhi2RaUv5yqFEDCbmxzJzpGZ {}
[INFO ] 2023-01-31T07:20:25,104Z [Test worker] network.PersistentNetworkMapCache. - No previous node found for O=Notary, L=London, C=GB {}
[INFO ] 2023-01-31T07:20:25,112Z [Test worker] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 3, L=London, C=GB], platformVersion=11, serial=1675149624971), owningKey=DL7AcsGXFn5mhECAbEGyjEu4JfkdQppTjdpArGoUsK4Rn3 {}
[INFO ] 2023-01-31T07:20:25,112Z [Test worker] network.PersistentNetworkMapCache. - No previous node found for O=Mock Company 3, L=London, C=GB {}
[INFO ] 2023-01-31T07:20:25,121Z [Test worker] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 1, L=London, C=GB], platformVersion=11, serial=1675149622902), owningKey=DLA1eUzzSBxvsjoX6d9L82t4o6Eaao42gXHUJ7ixCa16hB {}
[INFO ] 2023-01-31T07:20:25,121Z [Test worker] network.PersistentNetworkMapCache. - No previous node found for O=Mock Company 1, L=London, C=GB {}
[INFO ] 2023-01-31T07:20:25,129Z [Test worker] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 3, L=London, C=GB], platformVersion=11, serial=1675149624971), owningKey=DL7AcsGXFn5mhECAbEGyjEu4JfkdQppTjdpArGoUsK4Rn3 {}
[INFO ] 2023-01-31T07:20:25,129Z [Test worker] network.PersistentNetworkMapCache. - No previous node found for O=Mock Company 3, L=London, C=GB {}
[INFO ] 2023-01-31T07:20:25,138Z [Test worker] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 2, L=London, C=GB], platformVersion=11, serial=1675149624000), owningKey=DLEm47G5Mb8T8LchXNHocvXrXUXxw3dFJyoSkRqme6KdE3 {}
[INFO ] 2023-01-31T07:20:25,138Z [Test worker] network.PersistentNetworkMapCache. - No previous node found for O=Mock Company 2, L=London, C=GB {}
[INFO ] 2023-01-31T07:20:25,146Z [Test worker] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 3, L=London, C=GB], platformVersion=11, serial=1675149624971), owningKey=DL7AcsGXFn5mhECAbEGyjEu4JfkdQppTjdpArGoUsK4Rn3 {}
[INFO ] 2023-01-31T07:20:25,146Z [Test worker] network.PersistentNetworkMapCache. - No previous node found for O=Mock Company 3, L=London, C=GB {}
[INFO ] 2023-01-31T07:20:25,153Z [Test worker] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 3, L=London, C=GB], platformVersion=11, serial=1675149624971), owningKey=DL7AcsGXFn5mhECAbEGyjEu4JfkdQppTjdpArGoUsK4Rn3 {}
[INFO ] 2023-01-31T07:20:25,153Z [Test worker] network.PersistentNetworkMapCache. - Previous node was identical to incoming one - doing nothing {}
[INFO ] 2023-01-31T07:20:25,153Z [Test worker] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 3, L=London, C=GB], platformVersion=11, serial=1675149624971), owningKey=DL7AcsGXFn5mhECAbEGyjEu4JfkdQppTjdpArGoUsK4Rn3 {}
[INFO ] 2023-01-31T07:20:25,153Z [Test worker] network.PersistentNetworkMapCache. - Previous node was identical to incoming one - doing nothing {}
[WARN ] 2023-01-31T07:20:25,155Z [Test worker] internal.NodeFlowManager. - Multiple flows are registered for InitiatingFlow: class net.corda.samples.obligation.flows.IOUIssueFlow, currently using: class net.corda.samples.obligation.flows.IOUIssueFlowResponder {}
[INFO ] 2023-01-31T07:20:25,155Z [Test worker] internal.NodeFlowManager. - Registered net.corda.samples.obligation.flows.IOUIssueFlow to initiate net.corda.samples.obligation.flows.IOUIssueFlowResponder (version 1) {}
[WARN ] 2023-01-31T07:20:25,158Z [Test worker] internal.NodeFlowManager. - Multiple flows are registered for InitiatingFlow: class net.corda.samples.obligation.flows.IOUIssueFlow, currently using: class net.corda.samples.obligation.flows.IOUIssueFlowResponder {}
[INFO ] 2023-01-31T07:20:25,158Z [Test worker] internal.NodeFlowManager. - Registered net.corda.samples.obligation.flows.IOUIssueFlow to initiate net.corda.samples.obligation.flows.IOUIssueFlowResponder (version 1) {}
[WARN ] 2023-01-31T07:20:25,158Z [Test worker] internal.NodeFlowManager. - Multiple flows are registered for InitiatingFlow: class net.corda.samples.obligation.flows.IOUIssueFlow, currently using: class net.corda.samples.obligation.flows.IOUIssueFlowResponder {}
[INFO ] 2023-01-31T07:20:25,158Z [Test worker] internal.NodeFlowManager. - Registered net.corda.samples.obligation.flows.IOUIssueFlow to initiate net.corda.samples.obligation.flows.IOUIssueFlowResponder (version 1) {}
[WARN ] 2023-01-31T07:20:25,158Z [Test worker] internal.NodeFlowManager. - Multiple flows are registered for InitiatingFlow: class net.corda.samples.obligation.flows.IOUSettleFlow, currently using: class net.corda.samples.obligation.flows.IOUSettleFlowResponder {}
[INFO ] 2023-01-31T07:20:25,158Z [Test worker] internal.NodeFlowManager. - Registered net.corda.samples.obligation.flows.IOUSettleFlow to initiate net.corda.samples.obligation.flows.IOUSettleFlowResponder (version 1) {}
[WARN ] 2023-01-31T07:20:25,158Z [Test worker] internal.NodeFlowManager. - Multiple flows are registered for InitiatingFlow: class net.corda.samples.obligation.flows.IOUSettleFlow, currently using: class net.corda.samples.obligation.flows.IOUSettleFlowResponder {}
[INFO ] 2023-01-31T07:20:25,158Z [Test worker] internal.NodeFlowManager. - Registered net.corda.samples.obligation.flows.IOUSettleFlow to initiate net.corda.samples.obligation.flows.IOUSettleFlowResponder (version 1) {}
[WARN ] 2023-01-31T07:20:25,158Z [Test worker] internal.NodeFlowManager. - Multiple flows are registered for InitiatingFlow: class net.corda.samples.obligation.flows.IOUSettleFlow, currently using: class net.corda.samples.obligation.flows.IOUSettleFlowResponder {}
[INFO ] 2023-01-31T07:20:25,158Z [Test worker] internal.NodeFlowManager. - Registered net.corda.samples.obligation.flows.IOUSettleFlow to initiate net.corda.samples.obligation.flows.IOUSettleFlowResponder (version 1) {}
[INFO ] 2023-01-31T07:20:25,958Z [Mock network] corda.flow. - No need to notarise this transaction. {actor_id=Only For Testing, actor_owning_identity=O=Mock Company 1, L=London, C=GB, actor_store_id=TEST, fiber-id=10000001, flow-id=c782a6e3-05e7-425a-bc43-436785c91c67, invocation_id=6a8c507e-4640-4635-91c3-a97163886a54, invocation_timestamp=2023-01-31T07:20:25.187Z, origin=Only For Testing, session_id=6a8c507e-4640-4635-91c3-a97163886a54, session_timestamp=2023-01-31T07:20:25.187Z, thread-id=854, tx_id=DC8DBEC3B81C9F2E7DC1CE062FB252F025369653656B345ED196D21BACE911E1}
[INFO ] 2023-01-31T07:20:25,958Z [Mock network] corda.flow. - Recording transaction locally. {actor_id=Only For Testing, actor_owning_identity=O=Mock Company 1, L=London, C=GB, actor_store_id=TEST, fiber-id=10000001, flow-id=c782a6e3-05e7-425a-bc43-436785c91c67, invocation_id=6a8c507e-4640-4635-91c3-a97163886a54, invocation_timestamp=2023-01-31T07:20:25.187Z, origin=Only For Testing, session_id=6a8c507e-4640-4635-91c3-a97163886a54, session_timestamp=2023-01-31T07:20:25.187Z, thread-id=854, tx_id=DC8DBEC3B81C9F2E7DC1CE062FB252F025369653656B345ED196D21BACE911E1}
[INFO ] 2023-01-31T07:20:26,056Z [Mock network] corda.flow. - Recorded transaction locally successfully. {actor_id=Only For Testing, actor_owning_identity=O=Mock Company 1, L=London, C=GB, actor_store_id=TEST, fiber-id=10000001, flow-id=c782a6e3-05e7-425a-bc43-436785c91c67, invocation_id=6a8c507e-4640-4635-91c3-a97163886a54, invocation_timestamp=2023-01-31T07:20:25.187Z, origin=Only For Testing, session_id=6a8c507e-4640-4635-91c3-a97163886a54, session_timestamp=2023-01-31T07:20:25.187Z, thread-id=854, tx_id=DC8DBEC3B81C9F2E7DC1CE062FB252F025369653656B345ED196D21BACE911E1}
[INFO ] 2023-01-31T07:20:26,056Z [Mock network] corda.flow. - All parties received the transaction successfully. {actor_id=Only For Testing, actor_owning_identity=O=Mock Company 1, L=London, C=GB, actor_store_id=TEST, fiber-id=10000001, flow-id=c782a6e3-05e7-425a-bc43-436785c91c67, invocation_id=6a8c507e-4640-4635-91c3-a97163886a54, invocation_timestamp=2023-01-31T07:20:25.187Z, origin=Only For Testing, session_id=6a8c507e-4640-4635-91c3-a97163886a54, session_timestamp=2023-01-31T07:20:25.187Z, thread-id=854, tx_id=DC8DBEC3B81C9F2E7DC1CE062FB252F025369653656B345ED196D21BACE911E1}
[INFO ] 2023-01-31T07:20:26,230Z [Mock network] corda.flow. - Received transaction acknowledgement request from party O=Mock Company 1, L=London, C=GB. {fiber-id=10000002, flow-id=6e6c9f7b-1d12-4e36-895e-c5456f3dca1c, invocation_id=ed69c8a6-214f-48f6-a256-d61bcb7a0dc8, invocation_timestamp=2023-01-31T07:20:26.187Z, origin=O=Mock Company 1, L=London, C=GB, session_id=ed69c8a6-214f-48f6-a256-d61bcb7a0dc8, session_timestamp=2023-01-31T07:20:26.187Z, thread-id=854, tx_id=DC8DBEC3B81C9F2E7DC1CE062FB252F025369653656B345ED196D21BACE911E1}
[INFO ] 2023-01-31T07:20:26,274Z [Mock network] corda.flow. - Transaction dependencies resolution completed. {fiber-id=10000002, flow-id=6e6c9f7b-1d12-4e36-895e-c5456f3dca1c, invocation_id=ed69c8a6-214f-48f6-a256-d61bcb7a0dc8, invocation_timestamp=2023-01-31T07:20:26.187Z, origin=O=Mock Company 1, L=London, C=GB, session_id=ed69c8a6-214f-48f6-a256-d61bcb7a0dc8, session_timestamp=2023-01-31T07:20:26.187Z, thread-id=854, tx_id=DC8DBEC3B81C9F2E7DC1CE062FB252F025369653656B345ED196D21BACE911E1}
[INFO ] 2023-01-31T07:20:26,339Z [Mock network] corda.flow. - Successfully received fully signed tx. Sending it to the vault for processing. {fiber-id=10000002, flow-id=6e6c9f7b-1d12-4e36-895e-c5456f3dca1c, invocation_id=ed69c8a6-214f-48f6-a256-d61bcb7a0dc8, invocation_timestamp=2023-01-31T07:20:26.187Z, origin=O=Mock Company 1, L=London, C=GB, session_id=ed69c8a6-214f-48f6-a256-d61bcb7a0dc8, session_timestamp=2023-01-31T07:20:26.187Z, thread-id=854, tx_id=DC8DBEC3B81C9F2E7DC1CE062FB252F025369653656B345ED196D21BACE911E1}
[INFO ] 2023-01-31T07:20:26,347Z [Mock network] corda.flow. - Successfully recorded received transaction locally. {fiber-id=10000002, flow-id=6e6c9f7b-1d12-4e36-895e-c5456f3dca1c, invocation_id=ed69c8a6-214f-48f6-a256-d61bcb7a0dc8, invocation_timestamp=2023-01-31T07:20:26.187Z, origin=O=Mock Company 1, L=London, C=GB, session_id=ed69c8a6-214f-48f6-a256-d61bcb7a0dc8, session_timestamp=2023-01-31T07:20:26.187Z, thread-id=854, tx_id=DC8DBEC3B81C9F2E7DC1CE062FB252F025369653656B345ED196D21BACE911E1}
[INFO ] 2023-01-31T07:20:26,432Z [Mock network] corda.flow. - Received transaction acknowledgement request from party O=Mock Company 1, L=London, C=GB. {fiber-id=10000003, flow-id=8ddc2583-b767-4346-94ca-4a702eefc4dc, invocation_id=1fd34d00-bb09-4ce1-9a9e-ded50e8a913f, invocation_timestamp=2023-01-31T07:20:26.417Z, origin=O=Mock Company 1, L=London, C=GB, session_id=1fd34d00-bb09-4ce1-9a9e-ded50e8a913f, session_timestamp=2023-01-31T07:20:26.417Z, thread-id=854, tx_id=DC8DBEC3B81C9F2E7DC1CE062FB252F025369653656B345ED196D21BACE911E1}
[INFO ] 2023-01-31T07:20:26,441Z [Mock network] corda.flow. - Transaction dependencies resolution completed. {fiber-id=10000003, flow-id=8ddc2583-b767-4346-94ca-4a702eefc4dc, invocation_id=1fd34d00-bb09-4ce1-9a9e-ded50e8a913f, invocation_timestamp=2023-01-31T07:20:26.417Z, origin=O=Mock Company 1, L=London, C=GB, session_id=1fd34d00-bb09-4ce1-9a9e-ded50e8a913f, session_timestamp=2023-01-31T07:20:26.417Z, thread-id=854, tx_id=DC8DBEC3B81C9F2E7DC1CE062FB252F025369653656B345ED196D21BACE911E1}
[INFO ] 2023-01-31T07:20:26,469Z [Mock network] corda.flow. - Successfully received fully signed tx. Sending it to the vault for processing. {fiber-id=10000003, flow-id=8ddc2583-b767-4346-94ca-4a702eefc4dc, invocation_id=1fd34d00-bb09-4ce1-9a9e-ded50e8a913f, invocation_timestamp=2023-01-31T07:20:26.417Z, origin=O=Mock Company 1, L=London, C=GB, session_id=1fd34d00-bb09-4ce1-9a9e-ded50e8a913f, session_timestamp=2023-01-31T07:20:26.417Z, thread-id=854, tx_id=DC8DBEC3B81C9F2E7DC1CE062FB252F025369653656B345ED196D21BACE911E1}
[INFO ] 2023-01-31T07:20:26,476Z [Mock network] corda.flow. - Successfully recorded received transaction locally. {fiber-id=10000003, flow-id=8ddc2583-b767-4346-94ca-4a702eefc4dc, invocation_id=1fd34d00-bb09-4ce1-9a9e-ded50e8a913f, invocation_timestamp=2023-01-31T07:20:26.417Z, origin=O=Mock Company 1, L=London, C=GB, session_id=1fd34d00-bb09-4ce1-9a9e-ded50e8a913f, session_timestamp=2023-01-31T07:20:26.417Z, thread-id=854, tx_id=DC8DBEC3B81C9F2E7DC1CE062FB252F025369653656B345ED196D21BACE911E1}
[INFO ] 2023-01-31T07:20:26,514Z [Mock network] corda.flow. - No need to notarise this transaction. {actor_id=Only For Testing, actor_owning_identity=O=Mock Company 2, L=London, C=GB, actor_store_id=TEST, fiber-id=10000004, flow-id=7420311f-aff2-43ac-a304-b1c999906e42, invocation_id=c40e955b-ff68-496c-ba10-e421370079f9, invocation_timestamp=2023-01-31T07:20:26.498Z, origin=Only For Testing, session_id=c40e955b-ff68-496c-ba10-e421370079f9, session_timestamp=2023-01-31T07:20:26.498Z, thread-id=854, tx_id=E8F3F75F7A002CBD116271E71A8E6853610881F25B3AB043D8C6C46AC46B774E}
[INFO ] 2023-01-31T07:20:26,514Z [Mock network] corda.flow. - Recording transaction locally. {actor_id=Only For Testing, actor_owning_identity=O=Mock Company 2, L=London, C=GB, actor_store_id=TEST, fiber-id=10000004, flow-id=7420311f-aff2-43ac-a304-b1c999906e42, invocation_id=c40e955b-ff68-496c-ba10-e421370079f9, invocation_timestamp=2023-01-31T07:20:26.498Z, origin=Only For Testing, session_id=c40e955b-ff68-496c-ba10-e421370079f9, session_timestamp=2023-01-31T07:20:26.498Z, thread-id=854, tx_id=E8F3F75F7A002CBD116271E71A8E6853610881F25B3AB043D8C6C46AC46B774E}
[INFO ] 2023-01-31T07:20:26,518Z [Mock network] corda.flow. - Recorded transaction locally successfully. {actor_id=Only For Testing, actor_owning_identity=O=Mock Company 2, L=London, C=GB, actor_store_id=TEST, fiber-id=10000004, flow-id=7420311f-aff2-43ac-a304-b1c999906e42, invocation_id=c40e955b-ff68-496c-ba10-e421370079f9, invocation_timestamp=2023-01-31T07:20:26.498Z, origin=Only For Testing, session_id=c40e955b-ff68-496c-ba10-e421370079f9, session_timestamp=2023-01-31T07:20:26.498Z, thread-id=854, tx_id=E8F3F75F7A002CBD116271E71A8E6853610881F25B3AB043D8C6C46AC46B774E}
[INFO ] 2023-01-31T07:20:26,518Z [Mock network] corda.flow. - All parties received the transaction successfully. {actor_id=Only For Testing, actor_owning_identity=O=Mock Company 2, L=London, C=GB, actor_store_id=TEST, fiber-id=10000004, flow-id=7420311f-aff2-43ac-a304-b1c999906e42, invocation_id=c40e955b-ff68-496c-ba10-e421370079f9, invocation_timestamp=2023-01-31T07:20:26.498Z, origin=Only For Testing, session_id=c40e955b-ff68-496c-ba10-e421370079f9, session_timestamp=2023-01-31T07:20:26.498Z, thread-id=854, tx_id=E8F3F75F7A002CBD116271E71A8E6853610881F25B3AB043D8C6C46AC46B774E}
[INFO ] 2023-01-31T07:20:26,543Z [Mock network] corda.flow. - Received transaction acknowledgement request from party O=Mock Company 2, L=London, C=GB. {fiber-id=10000005, flow-id=52421617-1065-4ac2-9494-e2ca4b72d9cf, invocation_id=9ef7ad42-8198-46ec-9080-a730f1abd051, invocation_timestamp=2023-01-31T07:20:26.532Z, origin=O=Mock Company 2, L=London, C=GB, session_id=9ef7ad42-8198-46ec-9080-a730f1abd051, session_timestamp=2023-01-31T07:20:26.532Z, thread-id=854, tx_id=E8F3F75F7A002CBD116271E71A8E6853610881F25B3AB043D8C6C46AC46B774E}
[INFO ] 2023-01-31T07:20:26,552Z [Mock network] corda.flow. - Transaction dependencies resolution completed. {fiber-id=10000005, flow-id=52421617-1065-4ac2-9494-e2ca4b72d9cf, invocation_id=9ef7ad42-8198-46ec-9080-a730f1abd051, invocation_timestamp=2023-01-31T07:20:26.532Z, origin=O=Mock Company 2, L=London, C=GB, session_id=9ef7ad42-8198-46ec-9080-a730f1abd051, session_timestamp=2023-01-31T07:20:26.532Z, thread-id=854, tx_id=E8F3F75F7A002CBD116271E71A8E6853610881F25B3AB043D8C6C46AC46B774E}
[INFO ] 2023-01-31T07:20:26,557Z [Mock network] corda.flow. - Successfully received fully signed tx. Sending it to the vault for processing. {fiber-id=10000005, flow-id=52421617-1065-4ac2-9494-e2ca4b72d9cf, invocation_id=9ef7ad42-8198-46ec-9080-a730f1abd051, invocation_timestamp=2023-01-31T07:20:26.532Z, origin=O=Mock Company 2, L=London, C=GB, session_id=9ef7ad42-8198-46ec-9080-a730f1abd051, session_timestamp=2023-01-31T07:20:26.532Z, thread-id=854, tx_id=E8F3F75F7A002CBD116271E71A8E6853610881F25B3AB043D8C6C46AC46B774E}
[INFO ] 2023-01-31T07:20:26,562Z [Mock network] corda.flow. - Successfully recorded received transaction locally. {fiber-id=10000005, flow-id=52421617-1065-4ac2-9494-e2ca4b72d9cf, invocation_id=9ef7ad42-8198-46ec-9080-a730f1abd051, invocation_timestamp=2023-01-31T07:20:26.532Z, origin=O=Mock Company 2, L=London, C=GB, session_id=9ef7ad42-8198-46ec-9080-a730f1abd051, session_timestamp=2023-01-31T07:20:26.532Z, thread-id=854, tx_id=E8F3F75F7A002CBD116271E71A8E6853610881F25B3AB043D8C6C46AC46B774E}
[INFO ] 2023-01-31T07:20:26,627Z [Mock network] corda.flow. - Received transaction acknowledgement request from party O=Mock Company 2, L=London, C=GB. {fiber-id=10000006, flow-id=327a84c5-3b5c-48d0-815c-4539965e1f35, invocation_id=f22e7633-4083-490d-a211-18aeee96d461, invocation_timestamp=2023-01-31T07:20:26.608Z, origin=O=Mock Company 2, L=London, C=GB, session_id=f22e7633-4083-490d-a211-18aeee96d461, session_timestamp=2023-01-31T07:20:26.608Z, thread-id=854, tx_id=E8F3F75F7A002CBD116271E71A8E6853610881F25B3AB043D8C6C46AC46B774E}
[INFO ] 2023-01-31T07:20:26,635Z [Mock network] corda.flow. - Transaction dependencies resolution completed. {fiber-id=10000006, flow-id=327a84c5-3b5c-48d0-815c-4539965e1f35, invocation_id=f22e7633-4083-490d-a211-18aeee96d461, invocation_timestamp=2023-01-31T07:20:26.608Z, origin=O=Mock Company 2, L=London, C=GB, session_id=f22e7633-4083-490d-a211-18aeee96d461, session_timestamp=2023-01-31T07:20:26.608Z, thread-id=854, tx_id=E8F3F75F7A002CBD116271E71A8E6853610881F25B3AB043D8C6C46AC46B774E}
[INFO ] 2023-01-31T07:20:26,639Z [Mock network] corda.flow. - Successfully received fully signed tx. Sending it to the vault for processing. {fiber-id=10000006, flow-id=327a84c5-3b5c-48d0-815c-4539965e1f35, invocation_id=f22e7633-4083-490d-a211-18aeee96d461, invocation_timestamp=2023-01-31T07:20:26.608Z, origin=O=Mock Company 2, L=London, C=GB, session_id=f22e7633-4083-490d-a211-18aeee96d461, session_timestamp=2023-01-31T07:20:26.608Z, thread-id=854, tx_id=E8F3F75F7A002CBD116271E71A8E6853610881F25B3AB043D8C6C46AC46B774E}
[INFO ] 2023-01-31T07:20:26,646Z [Mock network] corda.flow. - Successfully recorded received transaction locally. {fiber-id=10000006, flow-id=327a84c5-3b5c-48d0-815c-4539965e1f35, invocation_id=f22e7633-4083-490d-a211-18aeee96d461, invocation_timestamp=2023-01-31T07:20:26.608Z, origin=O=Mock Company 2, L=London, C=GB, session_id=f22e7633-4083-490d-a211-18aeee96d461, session_timestamp=2023-01-31T07:20:26.608Z, thread-id=854, tx_id=E8F3F75F7A002CBD116271E71A8E6853610881F25B3AB043D8C6C46AC46B774E}
[INFO ] 2023-01-31T07:20:26,687Z [Mock network] corda.flow. - No need to notarise this transaction. {actor_id=Only For Testing, actor_owning_identity=O=Mock Company 3, L=London, C=GB, actor_store_id=TEST, fiber-id=10000007, flow-id=028834ed-d38e-43a3-8661-02a971ddadb2, invocation_id=7202351a-df3a-4a25-98bb-1ccbd67ea414, invocation_timestamp=2023-01-31T07:20:26.670Z, origin=Only For Testing, session_id=7202351a-df3a-4a25-98bb-1ccbd67ea414, session_timestamp=2023-01-31T07:20:26.670Z, thread-id=854, tx_id=79D36D3D7DD85811BAEC102EF9893334B5D9CE464AFF15759EA79472AF490EDF}
[INFO ] 2023-01-31T07:20:26,687Z [Mock network] corda.flow. - Recording transaction locally. {actor_id=Only For Testing, actor_owning_identity=O=Mock Company 3, L=London, C=GB, actor_store_id=TEST, fiber-id=10000007, flow-id=028834ed-d38e-43a3-8661-02a971ddadb2, invocation_id=7202351a-df3a-4a25-98bb-1ccbd67ea414, invocation_timestamp=2023-01-31T07:20:26.670Z, origin=Only For Testing, session_id=7202351a-df3a-4a25-98bb-1ccbd67ea414, session_timestamp=2023-01-31T07:20:26.670Z, thread-id=854, tx_id=79D36D3D7DD85811BAEC102EF9893334B5D9CE464AFF15759EA79472AF490EDF}
[INFO ] 2023-01-31T07:20:26,690Z [Mock network] corda.flow. - Recorded transaction locally successfully. {actor_id=Only For Testing, actor_owning_identity=O=Mock Company 3, L=London, C=GB, actor_store_id=TEST, fiber-id=10000007, flow-id=028834ed-d38e-43a3-8661-02a971ddadb2, invocation_id=7202351a-df3a-4a25-98bb-1ccbd67ea414, invocation_timestamp=2023-01-31T07:20:26.670Z, origin=Only For Testing, session_id=7202351a-df3a-4a25-98bb-1ccbd67ea414, session_timestamp=2023-01-31T07:20:26.670Z, thread-id=854, tx_id=79D36D3D7DD85811BAEC102EF9893334B5D9CE464AFF15759EA79472AF490EDF}
[INFO ] 2023-01-31T07:20:26,690Z [Mock network] corda.flow. - All parties received the transaction successfully. {actor_id=Only For Testing, actor_owning_identity=O=Mock Company 3, L=London, C=GB, actor_store_id=TEST, fiber-id=10000007, flow-id=028834ed-d38e-43a3-8661-02a971ddadb2, invocation_id=7202351a-df3a-4a25-98bb-1ccbd67ea414, invocation_timestamp=2023-01-31T07:20:26.670Z, origin=Only For Testing, session_id=7202351a-df3a-4a25-98bb-1ccbd67ea414, session_timestamp=2023-01-31T07:20:26.670Z, thread-id=854, tx_id=79D36D3D7DD85811BAEC102EF9893334B5D9CE464AFF15759EA79472AF490EDF}
[INFO ] 2023-01-31T07:20:26,712Z [Mock network] corda.flow. - Received transaction acknowledgement request from party O=Mock Company 3, L=London, C=GB. {fiber-id=10000008, flow-id=bd5c2e29-581d-48c8-966b-f8b685874b39, invocation_id=2772303a-3ed7-4f16-a09a-c71df9292e3b, invocation_timestamp=2023-01-31T07:20:26.703Z, origin=O=Mock Company 3, L=London, C=GB, session_id=2772303a-3ed7-4f16-a09a-c71df9292e3b, session_timestamp=2023-01-31T07:20:26.703Z, thread-id=854, tx_id=79D36D3D7DD85811BAEC102EF9893334B5D9CE464AFF15759EA79472AF490EDF}
[INFO ] 2023-01-31T07:20:26,720Z [Mock network] corda.flow. - Transaction dependencies resolution completed. {fiber-id=10000008, flow-id=bd5c2e29-581d-48c8-966b-f8b685874b39, invocation_id=2772303a-3ed7-4f16-a09a-c71df9292e3b, invocation_timestamp=2023-01-31T07:20:26.703Z, origin=O=Mock Company 3, L=London, C=GB, session_id=2772303a-3ed7-4f16-a09a-c71df9292e3b, session_timestamp=2023-01-31T07:20:26.703Z, thread-id=854, tx_id=79D36D3D7DD85811BAEC102EF9893334B5D9CE464AFF15759EA79472AF490EDF}
[INFO ] 2023-01-31T07:20:26,723Z [Mock network] corda.flow. - Successfully received fully signed tx. Sending it to the vault for processing. {fiber-id=10000008, flow-id=bd5c2e29-581d-48c8-966b-f8b685874b39, invocation_id=2772303a-3ed7-4f16-a09a-c71df9292e3b, invocation_timestamp=2023-01-31T07:20:26.703Z, origin=O=Mock Company 3, L=London, C=GB, session_id=2772303a-3ed7-4f16-a09a-c71df9292e3b, session_timestamp=2023-01-31T07:20:26.703Z, thread-id=854, tx_id=79D36D3D7DD85811BAEC102EF9893334B5D9CE464AFF15759EA79472AF490EDF}
[INFO ] 2023-01-31T07:20:26,727Z [Mock network] corda.flow. - Successfully recorded received transaction locally. {fiber-id=10000008, flow-id=bd5c2e29-581d-48c8-966b-f8b685874b39, invocation_id=2772303a-3ed7-4f16-a09a-c71df9292e3b, invocation_timestamp=2023-01-31T07:20:26.703Z, origin=O=Mock Company 3, L=London, C=GB, session_id=2772303a-3ed7-4f16-a09a-c71df9292e3b, session_timestamp=2023-01-31T07:20:26.703Z, thread-id=854, tx_id=79D36D3D7DD85811BAEC102EF9893334B5D9CE464AFF15759EA79472AF490EDF}
[INFO ] 2023-01-31T07:20:26,760Z [Mock network] corda.flow. - Received transaction acknowledgement request from party O=Mock Company 3, L=London, C=GB. {fiber-id=10000009, flow-id=06c951b6-4aa6-4687-8e4e-9c567d450064, invocation_id=b9e7cc9d-96d8-4cf3-9baa-e4f687d6537f, invocation_timestamp=2023-01-31T07:20:26.751Z, origin=O=Mock Company 3, L=London, C=GB, session_id=b9e7cc9d-96d8-4cf3-9baa-e4f687d6537f, session_timestamp=2023-01-31T07:20:26.751Z, thread-id=854, tx_id=79D36D3D7DD85811BAEC102EF9893334B5D9CE464AFF15759EA79472AF490EDF}
[INFO ] 2023-01-31T07:20:26,767Z [Mock network] corda.flow. - Transaction dependencies resolution completed. {fiber-id=10000009, flow-id=06c951b6-4aa6-4687-8e4e-9c567d450064, invocation_id=b9e7cc9d-96d8-4cf3-9baa-e4f687d6537f, invocation_timestamp=2023-01-31T07:20:26.751Z, origin=O=Mock Company 3, L=London, C=GB, session_id=b9e7cc9d-96d8-4cf3-9baa-e4f687d6537f, session_timestamp=2023-01-31T07:20:26.751Z, thread-id=854, tx_id=79D36D3D7DD85811BAEC102EF9893334B5D9CE464AFF15759EA79472AF490EDF}
[INFO ] 2023-01-31T07:20:26,770Z [Mock network] corda.flow. - Successfully received fully signed tx. Sending it to the vault for processing. {fiber-id=10000009, flow-id=06c951b6-4aa6-4687-8e4e-9c567d450064, invocation_id=b9e7cc9d-96d8-4cf3-9baa-e4f687d6537f, invocation_timestamp=2023-01-31T07:20:26.751Z, origin=O=Mock Company 3, L=London, C=GB, session_id=b9e7cc9d-96d8-4cf3-9baa-e4f687d6537f, session_timestamp=2023-01-31T07:20:26.751Z, thread-id=854, tx_id=79D36D3D7DD85811BAEC102EF9893334B5D9CE464AFF15759EA79472AF490EDF}
[INFO ] 2023-01-31T07:20:26,774Z [Mock network] corda.flow. - Successfully recorded received transaction locally. {fiber-id=10000009, flow-id=06c951b6-4aa6-4687-8e4e-9c567d450064, invocation_id=b9e7cc9d-96d8-4cf3-9baa-e4f687d6537f, invocation_timestamp=2023-01-31T07:20:26.751Z, origin=O=Mock Company 3, L=London, C=GB, session_id=b9e7cc9d-96d8-4cf3-9baa-e4f687d6537f, session_timestamp=2023-01-31T07:20:26.751Z, thread-id=854, tx_id=79D36D3D7DD85811BAEC102EF9893334B5D9CE464AFF15759EA79472AF490EDF}
[INFO ] 2023-01-31T07:20:26,820Z [Mock network] identity.PersistentIdentityService. - Linking: 54B8AE5F10825F3953DE1D665314E82B344F2E46FFD276283A18AFA5FA657AF9 to O=Mock Company 1, L=London, C=GB {actor_id=Only For Testing, actor_owning_identity=O=Mock Company 1, L=London, C=GB, actor_store_id=TEST, fiber-id=10000011, flow-id=fec00cf4-71be-4342-bbc9-923783647ca0, invocation_id=f925fe52-7cb6-4d81-bc07-801a016e0a9c, invocation_timestamp=2023-01-31T07:20:26.807Z, origin=Only For Testing, session_id=f925fe52-7cb6-4d81-bc07-801a016e0a9c, session_timestamp=2023-01-31T07:20:26.807Z, thread-id=854}
[INFO ] 2023-01-31T07:20:26,912Z [Mock network] identity.PersistentIdentityService. - Linking: 3E159D258A7CC82668B127B3AB1813236A9BB7FA1EAB6F1B00DBF5A81F152483 to O=Mock Company 2, L=London, C=GB {fiber-id=10000012, flow-id=136955a4-0695-46ce-9924-b8c607771ce9, invocation_id=576a922b-57f5-4049-a976-cdc0814738fe, invocation_timestamp=2023-01-31T07:20:26.834Z, origin=O=Mock Company 1, L=London, C=GB, session_id=576a922b-57f5-4049-a976-cdc0814738fe, session_timestamp=2023-01-31T07:20:26.834Z, thread-id=854}
[INFO ] 2023-01-31T07:20:26,945Z [Mock network] identity.PersistentIdentityService. - Linking: 3E159D258A7CC82668B127B3AB1813236A9BB7FA1EAB6F1B00DBF5A81F152483 to O=Mock Company 2, L=London, C=GB {actor_id=Only For Testing, actor_owning_identity=O=Mock Company 1, L=London, C=GB, actor_store_id=TEST, fiber-id=10000011, flow-id=fec00cf4-71be-4342-bbc9-923783647ca0, invocation_id=f925fe52-7cb6-4d81-bc07-801a016e0a9c, invocation_timestamp=2023-01-31T07:20:26.807Z, origin=Only For Testing, session_id=f925fe52-7cb6-4d81-bc07-801a016e0a9c, session_timestamp=2023-01-31T07:20:26.807Z, thread-id=854}
[INFO ] 2023-01-31T07:20:27,073Z [Mock network] corda.flow. - Received transaction acknowledgement request from party O=Mock Company 1, L=London, C=GB. {fiber-id=10000013, flow-id=424e0ae2-a8e7-409e-9aa2-fdbb26d38dfc, invocation_id=4abe05ca-7643-4a91-a67f-02e6d8d5f559, invocation_timestamp=2023-01-31T07:20:27.056Z, origin=O=Mock Company 1, L=London, C=GB, session_id=4abe05ca-7643-4a91-a67f-02e6d8d5f559, session_timestamp=2023-01-31T07:20:27.056Z, thread-id=854, tx_id=914539949FDFAFEB61262255DA50AD0A12B1148B5274DFDF5E71F3977C9AF86C}
[INFO ] 2023-01-31T07:20:27,079Z [Mock network] corda.flow. - Transaction dependencies resolution completed. {fiber-id=10000013, flow-id=424e0ae2-a8e7-409e-9aa2-fdbb26d38dfc, invocation_id=4abe05ca-7643-4a91-a67f-02e6d8d5f559, invocation_timestamp=2023-01-31T07:20:27.056Z, origin=O=Mock Company 1, L=London, C=GB, session_id=4abe05ca-7643-4a91-a67f-02e6d8d5f559, session_timestamp=2023-01-31T07:20:27.056Z, thread-id=854, tx_id=914539949FDFAFEB61262255DA50AD0A12B1148B5274DFDF5E71F3977C9AF86C}
[INFO ] 2023-01-31T07:20:27,196Z [Mock network] corda.flow. - No need to notarise this transaction. {actor_id=Only For Testing, actor_owning_identity=O=Mock Company 1, L=London, C=GB, actor_store_id=TEST, fiber-id=10000011, flow-id=fec00cf4-71be-4342-bbc9-923783647ca0, invocation_id=f925fe52-7cb6-4d81-bc07-801a016e0a9c, invocation_timestamp=2023-01-31T07:20:26.807Z, origin=Only For Testing, session_id=f925fe52-7cb6-4d81-bc07-801a016e0a9c, session_timestamp=2023-01-31T07:20:26.807Z, thread-id=854, tx_id=914539949FDFAFEB61262255DA50AD0A12B1148B5274DFDF5E71F3977C9AF86C}
[INFO ] 2023-01-31T07:20:27,196Z [Mock network] corda.flow. - Recording transaction locally. {actor_id=Only For Testing, actor_owning_identity=O=Mock Company 1, L=London, C=GB, actor_store_id=TEST, fiber-id=10000011, flow-id=fec00cf4-71be-4342-bbc9-923783647ca0, invocation_id=f925fe52-7cb6-4d81-bc07-801a016e0a9c, invocation_timestamp=2023-01-31T07:20:26.807Z, origin=Only For Testing, session_id=f925fe52-7cb6-4d81-bc07-801a016e0a9c, session_timestamp=2023-01-31T07:20:26.807Z, thread-id=854, tx_id=914539949FDFAFEB61262255DA50AD0A12B1148B5274DFDF5E71F3977C9AF86C}
[INFO ] 2023-01-31T07:20:27,203Z [Mock network] corda.flow. - Recorded transaction locally successfully. {actor_id=Only For Testing, actor_owning_identity=O=Mock Company 1, L=London, C=GB, actor_store_id=TEST, fiber-id=10000011, flow-id=fec00cf4-71be-4342-bbc9-923783647ca0, invocation_id=f925fe52-7cb6-4d81-bc07-801a016e0a9c, invocation_timestamp=2023-01-31T07:20:26.807Z, origin=Only For Testing, session_id=f925fe52-7cb6-4d81-bc07-801a016e0a9c, session_timestamp=2023-01-31T07:20:26.807Z, thread-id=854, tx_id=914539949FDFAFEB61262255DA50AD0A12B1148B5274DFDF5E71F3977C9AF86C}
[INFO ] 2023-01-31T07:20:27,224Z [Mock network] corda.flow. - Received transaction acknowledgement request from party O=Mock Company 1, L=London, C=GB. {fiber-id=10000013, flow-id=424e0ae2-a8e7-409e-9aa2-fdbb26d38dfc, invocation_id=4abe05ca-7643-4a91-a67f-02e6d8d5f559, invocation_timestamp=2023-01-31T07:20:27.056Z, origin=O=Mock Company 1, L=London, C=GB, session_id=4abe05ca-7643-4a91-a67f-02e6d8d5f559, session_timestamp=2023-01-31T07:20:27.056Z, thread-id=854, tx_id=914539949FDFAFEB61262255DA50AD0A12B1148B5274DFDF5E71F3977C9AF86C}
[INFO ] 2023-01-31T07:20:27,230Z [Mock network] corda.flow. - Transaction dependencies resolution completed. {fiber-id=10000013, flow-id=424e0ae2-a8e7-409e-9aa2-fdbb26d38dfc, invocation_id=4abe05ca-7643-4a91-a67f-02e6d8d5f559, invocation_timestamp=2023-01-31T07:20:27.056Z, origin=O=Mock Company 1, L=London, C=GB, session_id=4abe05ca-7643-4a91-a67f-02e6d8d5f559, session_timestamp=2023-01-31T07:20:27.056Z, thread-id=854, tx_id=914539949FDFAFEB61262255DA50AD0A12B1148B5274DFDF5E71F3977C9AF86C}
[INFO ] 2023-01-31T07:20:27,235Z [Mock network] corda.flow. - Successfully received fully signed tx. Sending it to the vault for processing. {fiber-id=10000013, flow-id=424e0ae2-a8e7-409e-9aa2-fdbb26d38dfc, invocation_id=4abe05ca-7643-4a91-a67f-02e6d8d5f559, invocation_timestamp=2023-01-31T07:20:27.056Z, origin=O=Mock Company 1, L=London, C=GB, session_id=4abe05ca-7643-4a91-a67f-02e6d8d5f559, session_timestamp=2023-01-31T07:20:27.056Z, thread-id=854, tx_id=914539949FDFAFEB61262255DA50AD0A12B1148B5274DFDF5E71F3977C9AF86C}
[INFO ] 2023-01-31T07:20:27,240Z [Mock network] corda.flow. - Successfully recorded received transaction locally. {fiber-id=10000013, flow-id=424e0ae2-a8e7-409e-9aa2-fdbb26d38dfc, invocation_id=4abe05ca-7643-4a91-a67f-02e6d8d5f559, invocation_timestamp=2023-01-31T07:20:27.056Z, origin=O=Mock Company 1, L=London, C=GB, session_id=4abe05ca-7643-4a91-a67f-02e6d8d5f559, session_timestamp=2023-01-31T07:20:27.056Z, thread-id=854, tx_id=914539949FDFAFEB61262255DA50AD0A12B1148B5274DFDF5E71F3977C9AF86C}
[WARN ] 2023-01-31T07:20:27,242Z [Mock network] persistence.AbstractPartyToX500NameAsStringConverter. - Identity service unable to resolve AbstractParty: Anonymous(DL6hiacbWbUsztt6cPbcU2VWuoYvp6qEmMJZUoM9EAFBCt) {actor_id=Only For Testing, actor_owning_identity=O=Mock Company 1, L=London, C=GB, actor_store_id=TEST, fiber-id=10000013, flow-id=424e0ae2-a8e7-409e-9aa2-fdbb26d38dfc, invocation_id=4abe05ca-7643-4a91-a67f-02e6d8d5f559, invocation_timestamp=2023-01-31T07:20:27.056Z, origin=O=Mock Company 1, L=London, C=GB, session_id=4abe05ca-7643-4a91-a67f-02e6d8d5f559, session_timestamp=2023-01-31T07:20:27.056Z, thread-id=854}
[INFO ] 2023-01-31T07:20:27,246Z [Mock network] corda.flow. - Party O=Mock Company 2, L=London, C=GB received the transaction. {actor_id=Only For Testing, actor_owning_identity=O=Mock Company 1, L=London, C=GB, actor_store_id=TEST, fiber-id=10000011, flow-id=fec00cf4-71be-4342-bbc9-923783647ca0, invocation_id=f925fe52-7cb6-4d81-bc07-801a016e0a9c, invocation_timestamp=2023-01-31T07:20:26.807Z, origin=Only For Testing, session_id=f925fe52-7cb6-4d81-bc07-801a016e0a9c, session_timestamp=2023-01-31T07:20:26.807Z, thread-id=854, tx_id=914539949FDFAFEB61262255DA50AD0A12B1148B5274DFDF5E71F3977C9AF86C}
[INFO ] 2023-01-31T07:20:27,246Z [Mock network] corda.flow. - All parties received the transaction successfully. {actor_id=Only For Testing, actor_owning_identity=O=Mock Company 1, L=London, C=GB, actor_store_id=TEST, fiber-id=10000011, flow-id=fec00cf4-71be-4342-bbc9-923783647ca0, invocation_id=f925fe52-7cb6-4d81-bc07-801a016e0a9c, invocation_timestamp=2023-01-31T07:20:26.807Z, origin=Only For Testing, session_id=f925fe52-7cb6-4d81-bc07-801a016e0a9c, session_timestamp=2023-01-31T07:20:26.807Z, thread-id=854, tx_id=914539949FDFAFEB61262255DA50AD0A12B1148B5274DFDF5E71F3977C9AF86C}
[INFO ] 2023-01-31T07:20:27,294Z [Mock network] corda.flow. - Received transaction acknowledgement request from party O=Mock Company 1, L=London, C=GB. {fiber-id=10000014, flow-id=01e77c96-632a-44a7-b230-a2bc5348b05b, invocation_id=a69ac31f-f90e-45e1-8245-d272aaf7e587, invocation_timestamp=2023-01-31T07:20:27.276Z, origin=O=Mock Company 1, L=London, C=GB, session_id=a69ac31f-f90e-45e1-8245-d272aaf7e587, session_timestamp=2023-01-31T07:20:27.276Z, thread-id=854, tx_id=E8F3F75F7A002CBD116271E71A8E6853610881F25B3AB043D8C6C46AC46B774E}
[INFO ] 2023-01-31T07:20:27,299Z [Mock network] corda.flow. - Transaction dependencies resolution completed. {fiber-id=10000014, flow-id=01e77c96-632a-44a7-b230-a2bc5348b05b, invocation_id=a69ac31f-f90e-45e1-8245-d272aaf7e587, invocation_timestamp=2023-01-31T07:20:27.276Z, origin=O=Mock Company 1, L=London, C=GB, session_id=a69ac31f-f90e-45e1-8245-d272aaf7e587, session_timestamp=2023-01-31T07:20:27.276Z, thread-id=854, tx_id=E8F3F75F7A002CBD116271E71A8E6853610881F25B3AB043D8C6C46AC46B774E}
[INFO ] 2023-01-31T07:20:27,302Z [Mock network] corda.flow. - Successfully received fully signed tx. Sending it to the vault for processing. {fiber-id=10000014, flow-id=01e77c96-632a-44a7-b230-a2bc5348b05b, invocation_id=a69ac31f-f90e-45e1-8245-d272aaf7e587, invocation_timestamp=2023-01-31T07:20:27.276Z, origin=O=Mock Company 1, L=London, C=GB, session_id=a69ac31f-f90e-45e1-8245-d272aaf7e587, session_timestamp=2023-01-31T07:20:27.276Z, thread-id=854, tx_id=E8F3F75F7A002CBD116271E71A8E6853610881F25B3AB043D8C6C46AC46B774E}
[INFO ] 2023-01-31T07:20:27,306Z [Mock network] corda.flow. - Successfully recorded received transaction locally. {fiber-id=10000014, flow-id=01e77c96-632a-44a7-b230-a2bc5348b05b, invocation_id=a69ac31f-f90e-45e1-8245-d272aaf7e587, invocation_timestamp=2023-01-31T07:20:27.276Z, origin=O=Mock Company 1, L=London, C=GB, session_id=a69ac31f-f90e-45e1-8245-d272aaf7e587, session_timestamp=2023-01-31T07:20:27.276Z, thread-id=854, tx_id=E8F3F75F7A002CBD116271E71A8E6853610881F25B3AB043D8C6C46AC46B774E}
[INFO ] 2023-01-31T07:20:27,327Z [Mock network] identity.PersistentIdentityService. - An existing entry for DL5BMPmvKpta8UrDXWHJNfKbzXBvSjy9MnnWCMFE9xKZsp already exists. {fiber-id=10000014, flow-id=01e77c96-632a-44a7-b230-a2bc5348b05b, invocation_id=a69ac31f-f90e-45e1-8245-d272aaf7e587, invocation_timestamp=2023-01-31T07:20:27.276Z, origin=O=Mock Company 1, L=London, C=GB, session_id=a69ac31f-f90e-45e1-8245-d272aaf7e587, session_timestamp=2023-01-31T07:20:27.276Z, thread-id=854, tx_id=E8F3F75F7A002CBD116271E71A8E6853610881F25B3AB043D8C6C46AC46B774E}
[INFO ] 2023-01-31T07:20:27,333Z [Mock network] corda.flow. - Received transaction acknowledgement request from party O=Mock Company 1, L=London, C=GB. {fiber-id=10000014, flow-id=01e77c96-632a-44a7-b230-a2bc5348b05b, invocation_id=a69ac31f-f90e-45e1-8245-d272aaf7e587, invocation_timestamp=2023-01-31T07:20:27.276Z, origin=O=Mock Company 1, L=London, C=GB, session_id=a69ac31f-f90e-45e1-8245-d272aaf7e587, session_timestamp=2023-01-31T07:20:27.276Z, thread-id=854, tx_id=DC8DBEC3B81C9F2E7DC1CE062FB252F025369653656B345ED196D21BACE911E1}
[INFO ] 2023-01-31T07:20:27,337Z [Mock network] corda.flow. - Transaction dependencies resolution completed. {fiber-id=10000014, flow-id=01e77c96-632a-44a7-b230-a2bc5348b05b, invocation_id=a69ac31f-f90e-45e1-8245-d272aaf7e587, invocation_timestamp=2023-01-31T07:20:27.276Z, origin=O=Mock Company 1, L=London, C=GB, session_id=a69ac31f-f90e-45e1-8245-d272aaf7e587, session_timestamp=2023-01-31T07:20:27.276Z, thread-id=854, tx_id=DC8DBEC3B81C9F2E7DC1CE062FB252F025369653656B345ED196D21BACE911E1}
[INFO ] 2023-01-31T07:20:27,340Z [Mock network] corda.flow. - Successfully received fully signed tx. Sending it to the vault for processing. {fiber-id=10000014, flow-id=01e77c96-632a-44a7-b230-a2bc5348b05b, invocation_id=a69ac31f-f90e-45e1-8245-d272aaf7e587, invocation_timestamp=2023-01-31T07:20:27.276Z, origin=O=Mock Company 1, L=London, C=GB, session_id=a69ac31f-f90e-45e1-8245-d272aaf7e587, session_timestamp=2023-01-31T07:20:27.276Z, thread-id=854, tx_id=DC8DBEC3B81C9F2E7DC1CE062FB252F025369653656B345ED196D21BACE911E1}
[INFO ] 2023-01-31T07:20:27,342Z [Mock network] corda.flow. - Successfully recorded received transaction locally. {fiber-id=10000014, flow-id=01e77c96-632a-44a7-b230-a2bc5348b05b, invocation_id=a69ac31f-f90e-45e1-8245-d272aaf7e587, invocation_timestamp=2023-01-31T07:20:27.276Z, origin=O=Mock Company 1, L=London, C=GB, session_id=a69ac31f-f90e-45e1-8245-d272aaf7e587, session_timestamp=2023-01-31T07:20:27.276Z, thread-id=854, tx_id=DC8DBEC3B81C9F2E7DC1CE062FB252F025369653656B345ED196D21BACE911E1}
[INFO ] 2023-01-31T07:20:27,359Z [Mock network] identity.PersistentIdentityService. - Linking: 54B8AE5F10825F3953DE1D665314E82B344F2E46FFD276283A18AFA5FA657AF9 to O=Mock Company 1, L=London, C=GB {fiber-id=10000014, flow-id=01e77c96-632a-44a7-b230-a2bc5348b05b, invocation_id=a69ac31f-f90e-45e1-8245-d272aaf7e587, invocation_timestamp=2023-01-31T07:20:27.276Z, origin=O=Mock Company 1, L=London, C=GB, session_id=a69ac31f-f90e-45e1-8245-d272aaf7e587, session_timestamp=2023-01-31T07:20:27.276Z, thread-id=854, tx_id=DC8DBEC3B81C9F2E7DC1CE062FB252F025369653656B345ED196D21BACE911E1}
[INFO ] 2023-01-31T07:20:27,366Z [Mock network] corda.flow. - Received transaction acknowledgement request from party O=Mock Company 1, L=London, C=GB. {fiber-id=10000014, flow-id=01e77c96-632a-44a7-b230-a2bc5348b05b, invocation_id=a69ac31f-f90e-45e1-8245-d272aaf7e587, invocation_timestamp=2023-01-31T07:20:27.276Z, origin=O=Mock Company 1, L=London, C=GB, session_id=a69ac31f-f90e-45e1-8245-d272aaf7e587, session_timestamp=2023-01-31T07:20:27.276Z, thread-id=854, tx_id=914539949FDFAFEB61262255DA50AD0A12B1148B5274DFDF5E71F3977C9AF86C}
[INFO ] 2023-01-31T07:20:27,370Z [Mock network] corda.flow. - Transaction dependencies resolution completed. {fiber-id=10000014, flow-id=01e77c96-632a-44a7-b230-a2bc5348b05b, invocation_id=a69ac31f-f90e-45e1-8245-d272aaf7e587, invocation_timestamp=2023-01-31T07:20:27.276Z, origin=O=Mock Company 1, L=London, C=GB, session_id=a69ac31f-f90e-45e1-8245-d272aaf7e587, session_timestamp=2023-01-31T07:20:27.276Z, thread-id=854, tx_id=914539949FDFAFEB61262255DA50AD0A12B1148B5274DFDF5E71F3977C9AF86C}
[INFO ] 2023-01-31T07:20:27,374Z [Mock network] corda.flow. - Successfully received fully signed tx. Sending it to the vault for processing. {fiber-id=10000014, flow-id=01e77c96-632a-44a7-b230-a2bc5348b05b, invocation_id=a69ac31f-f90e-45e1-8245-d272aaf7e587, invocation_timestamp=2023-01-31T07:20:27.276Z, origin=O=Mock Company 1, L=London, C=GB, session_id=a69ac31f-f90e-45e1-8245-d272aaf7e587, session_timestamp=2023-01-31T07:20:27.276Z, thread-id=854, tx_id=914539949FDFAFEB61262255DA50AD0A12B1148B5274DFDF5E71F3977C9AF86C}
[INFO ] 2023-01-31T07:20:27,377Z [Mock network] corda.flow. - Successfully recorded received transaction locally. {fiber-id=10000014, flow-id=01e77c96-632a-44a7-b230-a2bc5348b05b, invocation_id=a69ac31f-f90e-45e1-8245-d272aaf7e587, invocation_timestamp=2023-01-31T07:20:27.276Z, origin=O=Mock Company 1, L=London, C=GB, session_id=a69ac31f-f90e-45e1-8245-d272aaf7e587, session_timestamp=2023-01-31T07:20:27.276Z, thread-id=854, tx_id=914539949FDFAFEB61262255DA50AD0A12B1148B5274DFDF5E71F3977C9AF86C}
[INFO ] 2023-01-31T07:20:27,459Z [Mock network] identity.PersistentIdentityService. - Linking: 1CBD56875A24473050AE71BD3C1C3B857B8AC9A57913823530A1D8699A123747 to O=Mock Company 1, L=London, C=GB {fiber-id=10000017, flow-id=b29dcde3-babc-4af2-8c80-7fdb8d2b1eb7, invocation_id=14cd2130-8afa-4f88-b85e-47ad335a1c3e, invocation_timestamp=2023-01-31T07:20:27.435Z, origin=O=Mock Company 2, L=London, C=GB, session_id=14cd2130-8afa-4f88-b85e-47ad335a1c3e, session_timestamp=2023-01-31T07:20:27.435Z, thread-id=854}
[INFO ] 2023-01-31T07:20:27,471Z [Mock network] identity.PersistentIdentityService. - Linking: 1CBD56875A24473050AE71BD3C1C3B857B8AC9A57913823530A1D8699A123747 to O=Mock Company 1, L=London, C=GB {actor_id=Only For Testing, actor_owning_identity=O=Mock Company 2, L=London, C=GB, actor_store_id=TEST, fiber-id=10000016, flow-id=d7757aac-09a5-48a7-a226-d25992ebe5da, invocation_id=07910db1-3b71-44ce-885a-8909578d8f9f, invocation_timestamp=2023-01-31T07:20:27.413Z, origin=Only For Testing, session_id=07910db1-3b71-44ce-885a-8909578d8f9f, session_timestamp=2023-01-31T07:20:27.413Z, thread-id=854}
[INFO ] 2023-01-31T07:20:27,477Z [Mock network] identity.PersistentIdentityService. - Linking: 2D51CE3627A3DC76A83A38E06A0562DD4E406560E87AA9AB22179D753A82F92B to O=Mock Company 2, L=London, C=GB {actor_id=Only For Testing, actor_owning_identity=O=Mock Company 2, L=London, C=GB, actor_store_id=TEST, fiber-id=10000016, flow-id=d7757aac-09a5-48a7-a226-d25992ebe5da, invocation_id=07910db1-3b71-44ce-885a-8909578d8f9f, invocation_timestamp=2023-01-31T07:20:27.413Z, origin=Only For Testing, session_id=07910db1-3b71-44ce-885a-8909578d8f9f, session_timestamp=2023-01-31T07:20:27.413Z, thread-id=854}
[INFO ] 2023-01-31T07:20:27,525Z [Mock network] identity.PersistentIdentityService. - Linking: B293BEBEE9548636C0F55C47DCEBA356CA088A32E2F7EEA0BFC7FE12EAC9C3C6 to O=Mock Company 3, L=London, C=GB {fiber-id=10000018, flow-id=7a1b1581-f81d-4e02-bddf-830da3cfb353, invocation_id=e305c824-3b2e-4d98-89b6-858e8cb7c09f, invocation_timestamp=2023-01-31T07:20:27.490Z, origin=O=Mock Company 2, L=London, C=GB, session_id=e305c824-3b2e-4d98-89b6-858e8cb7c09f, session_timestamp=2023-01-31T07:20:27.490Z, thread-id=854}
[INFO ] 2023-01-31T07:20:27,540Z [Mock network] identity.PersistentIdentityService. - Linking: B293BEBEE9548636C0F55C47DCEBA356CA088A32E2F7EEA0BFC7FE12EAC9C3C6 to O=Mock Company 3, L=London, C=GB {actor_id=Only For Testing, actor_owning_identity=O=Mock Company 2, L=London, C=GB, actor_store_id=TEST, fiber-id=10000016, flow-id=d7757aac-09a5-48a7-a226-d25992ebe5da, invocation_id=07910db1-3b71-44ce-885a-8909578d8f9f, invocation_timestamp=2023-01-31T07:20:27.413Z, origin=Only For Testing, session_id=07910db1-3b71-44ce-885a-8909578d8f9f, session_timestamp=2023-01-31T07:20:27.413Z, thread-id=854}
[INFO ] 2023-01-31T07:20:27,611Z [Mock network] corda.flow. - Received transaction acknowledgement request from party O=Mock Company 2, L=London, C=GB. {fiber-id=10000019, flow-id=8c701374-71a3-46d2-b66c-a464f6c301ec, invocation_id=40240d46-ec70-4a9f-8abd-1fde7e65df3e, invocation_timestamp=2023-01-31T07:20:27.602Z, origin=O=Mock Company 2, L=London, C=GB, session_id=40240d46-ec70-4a9f-8abd-1fde7e65df3e, session_timestamp=2023-01-31T07:20:27.602Z, thread-id=854, tx_id=BBE5924B8FECC18CC2570D628BD2B977E8C3BDF1F861C7B2606DC75B4D2B38DF}
[INFO ] 2023-01-31T07:20:27,710Z [Mock network] corda.flow. - Transaction dependencies resolution completed. {fiber-id=10000019, flow-id=8c701374-71a3-46d2-b66c-a464f6c301ec, invocation_id=40240d46-ec70-4a9f-8abd-1fde7e65df3e, invocation_timestamp=2023-01-31T07:20:27.602Z, origin=O=Mock Company 2, L=London, C=GB, session_id=40240d46-ec70-4a9f-8abd-1fde7e65df3e, session_timestamp=2023-01-31T07:20:27.602Z, thread-id=854, tx_id=BBE5924B8FECC18CC2570D628BD2B977E8C3BDF1F861C7B2606DC75B4D2B38DF}
[INFO ] 2023-01-31T07:20:27,755Z [Mock network] corda.flow. - Received transaction acknowledgement request from party O=Mock Company 2, L=London, C=GB. {fiber-id=10000020, flow-id=dafd7513-c2a5-4b08-830a-68875e3e276b, invocation_id=ed96b512-1eca-4435-a508-d9279bde5d19, invocation_timestamp=2023-01-31T07:20:27.748Z, origin=O=Mock Company 2, L=London, C=GB, session_id=ed96b512-1eca-4435-a508-d9279bde5d19, session_timestamp=2023-01-31T07:20:27.748Z, thread-id=854, tx_id=BBE5924B8FECC18CC2570D628BD2B977E8C3BDF1F861C7B2606DC75B4D2B38DF}
[INFO ] 2023-01-31T07:20:27,761Z [Mock network] corda.flow. - Transaction dependencies resolution completed. {fiber-id=10000020, flow-id=dafd7513-c2a5-4b08-830a-68875e3e276b, invocation_id=ed96b512-1eca-4435-a508-d9279bde5d19, invocation_timestamp=2023-01-31T07:20:27.748Z, origin=O=Mock Company 2, L=London, C=GB, session_id=ed96b512-1eca-4435-a508-d9279bde5d19, session_timestamp=2023-01-31T07:20:27.748Z, thread-id=854, tx_id=BBE5924B8FECC18CC2570D628BD2B977E8C3BDF1F861C7B2606DC75B4D2B38DF}
[INFO ] 2023-01-31T07:20:27,831Z [Mock network] corda.flow. - Sending transaction to notary: O=Notary, L=London, C=GB. {actor_id=Only For Testing, actor_owning_identity=O=Mock Company 2, L=London, C=GB, actor_store_id=TEST, fiber-id=10000016, flow-id=d7757aac-09a5-48a7-a226-d25992ebe5da, invocation_id=07910db1-3b71-44ce-885a-8909578d8f9f, invocation_timestamp=2023-01-31T07:20:27.413Z, origin=Only For Testing, session_id=07910db1-3b71-44ce-885a-8909578d8f9f, session_timestamp=2023-01-31T07:20:27.413Z, thread-id=854, tx_id=BBE5924B8FECC18CC2570D628BD2B977E8C3BDF1F861C7B2606DC75B4D2B38DF}
[INFO ] 2023-01-31T07:20:27,872Z [Mock network] corda.flow. - Received a notarisation request for Tx [BBE5924B8FECC18CC2570D628BD2B977E8C3BDF1F861C7B2606DC75B4D2B38DF] from [O=Mock Company 2, L=London, C=GB] {fiber-id=10000021, flow-id=00d05926-7172-4422-888c-7235479842fd, invocation_id=b96568a7-94d8-4af5-b46a-6f9e7fcfd2b4, invocation_timestamp=2023-01-31T07:20:27.858Z, origin=O=Mock Company 2, L=London, C=GB, session_id=b96568a7-94d8-4af5-b46a-6f9e7fcfd2b4, session_timestamp=2023-01-31T07:20:27.858Z, thread-id=854}
[INFO ] 2023-01-31T07:20:28,113Z [Notary request queue processor] jpa.JPAUniquenessProvider. - Processing notarization requests with 1 input states and 0 references {}
[INFO ] 2023-01-31T07:20:28,139Z [Mock network] corda.flow. - Transaction [BBE5924B8FECC18CC2570D628BD2B977E8C3BDF1F861C7B2606DC75B4D2B38DF] successfully notarised, sending signature back to [O=Mock Company 2, L=London, C=GB] {fiber-id=10000021, flow-id=00d05926-7172-4422-888c-7235479842fd, invocation_id=b96568a7-94d8-4af5-b46a-6f9e7fcfd2b4, invocation_timestamp=2023-01-31T07:20:27.858Z, origin=O=Mock Company 2, L=London, C=GB, session_id=b96568a7-94d8-4af5-b46a-6f9e7fcfd2b4, session_timestamp=2023-01-31T07:20:27.858Z, thread-id=854}
[INFO ] 2023-01-31T07:20:28,195Z [Mock network] corda.flow. - Notary responded (O=Notary, L=London, C=GB). {actor_id=Only For Testing, actor_owning_identity=O=Mock Company 2, L=London, C=GB, actor_store_id=TEST, fiber-id=10000016, flow-id=d7757aac-09a5-48a7-a226-d25992ebe5da, invocation_id=07910db1-3b71-44ce-885a-8909578d8f9f, invocation_timestamp=2023-01-31T07:20:27.413Z, origin=Only For Testing, session_id=07910db1-3b71-44ce-885a-8909578d8f9f, session_timestamp=2023-01-31T07:20:27.413Z, thread-id=854, tx_id=BBE5924B8FECC18CC2570D628BD2B977E8C3BDF1F861C7B2606DC75B4D2B38DF}
[INFO ] 2023-01-31T07:20:28,197Z [Mock network] corda.flow. - Recording transaction locally. {actor_id=Only For Testing, actor_owning_identity=O=Mock Company 2, L=London, C=GB, actor_store_id=TEST, fiber-id=10000016, flow-id=d7757aac-09a5-48a7-a226-d25992ebe5da, invocation_id=07910db1-3b71-44ce-885a-8909578d8f9f, invocation_timestamp=2023-01-31T07:20:27.413Z, origin=Only For Testing, session_id=07910db1-3b71-44ce-885a-8909578d8f9f, session_timestamp=2023-01-31T07:20:27.413Z, thread-id=854, tx_id=BBE5924B8FECC18CC2570D628BD2B977E8C3BDF1F861C7B2606DC75B4D2B38DF}
[INFO ] 2023-01-31T07:20:28,206Z [Mock network] corda.flow. - Recorded transaction locally successfully. {actor_id=Only For Testing, actor_owning_identity=O=Mock Company 2, L=London, C=GB, actor_store_id=TEST, fiber-id=10000016, flow-id=d7757aac-09a5-48a7-a226-d25992ebe5da, invocation_id=07910db1-3b71-44ce-885a-8909578d8f9f, invocation_timestamp=2023-01-31T07:20:27.413Z, origin=Only For Testing, session_id=07910db1-3b71-44ce-885a-8909578d8f9f, session_timestamp=2023-01-31T07:20:27.413Z, thread-id=854, tx_id=BBE5924B8FECC18CC2570D628BD2B977E8C3BDF1F861C7B2606DC75B4D2B38DF}
[INFO ] 2023-01-31T07:20:28,214Z [Mock network] corda.flow. - Received transaction acknowledgement request from party O=Mock Company 2, L=London, C=GB. {fiber-id=10000019, flow-id=8c701374-71a3-46d2-b66c-a464f6c301ec, invocation_id=40240d46-ec70-4a9f-8abd-1fde7e65df3e, invocation_timestamp=2023-01-31T07:20:27.602Z, origin=O=Mock Company 2, L=London, C=GB, session_id=40240d46-ec70-4a9f-8abd-1fde7e65df3e, session_timestamp=2023-01-31T07:20:27.602Z, thread-id=854, tx_id=BBE5924B8FECC18CC2570D628BD2B977E8C3BDF1F861C7B2606DC75B4D2B38DF}
[INFO ] 2023-01-31T07:20:28,220Z [Mock network] corda.flow. - Transaction dependencies resolution completed. {fiber-id=10000019, flow-id=8c701374-71a3-46d2-b66c-a464f6c301ec, invocation_id=40240d46-ec70-4a9f-8abd-1fde7e65df3e, invocation_timestamp=2023-01-31T07:20:27.602Z, origin=O=Mock Company 2, L=London, C=GB, session_id=40240d46-ec70-4a9f-8abd-1fde7e65df3e, session_timestamp=2023-01-31T07:20:27.602Z, thread-id=854, tx_id=BBE5924B8FECC18CC2570D628BD2B977E8C3BDF1F861C7B2606DC75B4D2B38DF}
[INFO ] 2023-01-31T07:20:28,226Z [Mock network] corda.flow. - Successfully received fully signed tx. Sending it to the vault for processing. {fiber-id=10000019, flow-id=8c701374-71a3-46d2-b66c-a464f6c301ec, invocation_id=40240d46-ec70-4a9f-8abd-1fde7e65df3e, invocation_timestamp=2023-01-31T07:20:27.602Z, origin=O=Mock Company 2, L=London, C=GB, session_id=40240d46-ec70-4a9f-8abd-1fde7e65df3e, session_timestamp=2023-01-31T07:20:27.602Z, thread-id=854, tx_id=BBE5924B8FECC18CC2570D628BD2B977E8C3BDF1F861C7B2606DC75B4D2B38DF}
[INFO ] 2023-01-31T07:20:28,239Z [Mock network] corda.flow. - Successfully recorded received transaction locally. {fiber-id=10000019, flow-id=8c701374-71a3-46d2-b66c-a464f6c301ec, invocation_id=40240d46-ec70-4a9f-8abd-1fde7e65df3e, invocation_timestamp=2023-01-31T07:20:27.602Z, origin=O=Mock Company 2, L=London, C=GB, session_id=40240d46-ec70-4a9f-8abd-1fde7e65df3e, session_timestamp=2023-01-31T07:20:27.602Z, thread-id=854, tx_id=BBE5924B8FECC18CC2570D628BD2B977E8C3BDF1F861C7B2606DC75B4D2B38DF}
[WARN ] 2023-01-31T07:20:28,242Z [Mock network] persistence.AbstractPartyToX500NameAsStringConverter. - Identity service unable to resolve AbstractParty: Anonymous(DL6hiacbWbUsztt6cPbcU2VWuoYvp6qEmMJZUoM9EAFBCt) {actor_id=Only For Testing, actor_owning_identity=O=Mock Company 2, L=London, C=GB, actor_store_id=TEST, fiber-id=10000019, flow-id=8c701374-71a3-46d2-b66c-a464f6c301ec, invocation_id=40240d46-ec70-4a9f-8abd-1fde7e65df3e, invocation_timestamp=2023-01-31T07:20:27.602Z, origin=O=Mock Company 2, L=London, C=GB, session_id=40240d46-ec70-4a9f-8abd-1fde7e65df3e, session_timestamp=2023-01-31T07:20:27.602Z, thread-id=854}
[INFO ] 2023-01-31T07:20:28,247Z [Mock network] corda.flow. - Party O=Mock Company 3, L=London, C=GB received the transaction. {actor_id=Only For Testing, actor_owning_identity=O=Mock Company 2, L=London, C=GB, actor_store_id=TEST, fiber-id=10000016, flow-id=d7757aac-09a5-48a7-a226-d25992ebe5da, invocation_id=07910db1-3b71-44ce-885a-8909578d8f9f, invocation_timestamp=2023-01-31T07:20:27.413Z, origin=Only For Testing, session_id=07910db1-3b71-44ce-885a-8909578d8f9f, session_timestamp=2023-01-31T07:20:27.413Z, thread-id=854, tx_id=BBE5924B8FECC18CC2570D628BD2B977E8C3BDF1F861C7B2606DC75B4D2B38DF}
[INFO ] 2023-01-31T07:20:28,255Z [Mock network] corda.flow. - Received transaction acknowledgement request from party O=Mock Company 2, L=London, C=GB. {fiber-id=10000020, flow-id=dafd7513-c2a5-4b08-830a-68875e3e276b, invocation_id=ed96b512-1eca-4435-a508-d9279bde5d19, invocation_timestamp=2023-01-31T07:20:27.748Z, origin=O=Mock Company 2, L=London, C=GB, session_id=ed96b512-1eca-4435-a508-d9279bde5d19, session_timestamp=2023-01-31T07:20:27.748Z, thread-id=854, tx_id=BBE5924B8FECC18CC2570D628BD2B977E8C3BDF1F861C7B2606DC75B4D2B38DF}
[INFO ] 2023-01-31T07:20:28,261Z [Mock network] corda.flow. - Transaction dependencies resolution completed. {fiber-id=10000020, flow-id=dafd7513-c2a5-4b08-830a-68875e3e276b, invocation_id=ed96b512-1eca-4435-a508-d9279bde5d19, invocation_timestamp=2023-01-31T07:20:27.748Z, origin=O=Mock Company 2, L=London, C=GB, session_id=ed96b512-1eca-4435-a508-d9279bde5d19, session_timestamp=2023-01-31T07:20:27.748Z, thread-id=854, tx_id=BBE5924B8FECC18CC2570D628BD2B977E8C3BDF1F861C7B2606DC75B4D2B38DF}
[INFO ] 2023-01-31T07:20:28,268Z [Mock network] corda.flow. - Successfully received fully signed tx. Sending it to the vault for processing. {fiber-id=10000020, flow-id=dafd7513-c2a5-4b08-830a-68875e3e276b, invocation_id=ed96b512-1eca-4435-a508-d9279bde5d19, invocation_timestamp=2023-01-31T07:20:27.748Z, origin=O=Mock Company 2, L=London, C=GB, session_id=ed96b512-1eca-4435-a508-d9279bde5d19, session_timestamp=2023-01-31T07:20:27.748Z, thread-id=854, tx_id=BBE5924B8FECC18CC2570D628BD2B977E8C3BDF1F861C7B2606DC75B4D2B38DF}
[INFO ] 2023-01-31T07:20:28,275Z [Mock network] corda.flow. - Successfully recorded received transaction locally. {fiber-id=10000020, flow-id=dafd7513-c2a5-4b08-830a-68875e3e276b, invocation_id=ed96b512-1eca-4435-a508-d9279bde5d19, invocation_timestamp=2023-01-31T07:20:27.748Z, origin=O=Mock Company 2, L=London, C=GB, session_id=ed96b512-1eca-4435-a508-d9279bde5d19, session_timestamp=2023-01-31T07:20:27.748Z, thread-id=854, tx_id=BBE5924B8FECC18CC2570D628BD2B977E8C3BDF1F861C7B2606DC75B4D2B38DF}
[WARN ] 2023-01-31T07:20:28,277Z [Mock network] persistence.AbstractPartyToX500NameAsStringConverter. - Identity service unable to resolve AbstractParty: Anonymous(DLD26EjKQqbafNiUmHNe7ispJrqqEUxNs6hU7LaGwkUNgM) {actor_id=Only For Testing, actor_owning_identity=O=Mock Company 2, L=London, C=GB, actor_store_id=TEST, fiber-id=10000020, flow-id=dafd7513-c2a5-4b08-830a-68875e3e276b, invocation_id=ed96b512-1eca-4435-a508-d9279bde5d19, invocation_timestamp=2023-01-31T07:20:27.748Z, origin=O=Mock Company 2, L=London, C=GB, session_id=ed96b512-1eca-4435-a508-d9279bde5d19, session_timestamp=2023-01-31T07:20:27.748Z, thread-id=854}
[INFO ] 2023-01-31T07:20:28,283Z [Mock network] corda.flow. - Party O=Mock Company 1, L=London, C=GB received the transaction. {actor_id=Only For Testing, actor_owning_identity=O=Mock Company 2, L=London, C=GB, actor_store_id=TEST, fiber-id=10000016, flow-id=d7757aac-09a5-48a7-a226-d25992ebe5da, invocation_id=07910db1-3b71-44ce-885a-8909578d8f9f, invocation_timestamp=2023-01-31T07:20:27.413Z, origin=Only For Testing, session_id=07910db1-3b71-44ce-885a-8909578d8f9f, session_timestamp=2023-01-31T07:20:27.413Z, thread-id=854, tx_id=BBE5924B8FECC18CC2570D628BD2B977E8C3BDF1F861C7B2606DC75B4D2B38DF}
[INFO ] 2023-01-31T07:20:28,283Z [Mock network] corda.flow. - All parties received the transaction successfully. {actor_id=Only For Testing, actor_owning_identity=O=Mock Company 2, L=London, C=GB, actor_store_id=TEST, fiber-id=10000016, flow-id=d7757aac-09a5-48a7-a226-d25992ebe5da, invocation_id=07910db1-3b71-44ce-885a-8909578d8f9f, invocation_timestamp=2023-01-31T07:20:27.413Z, origin=Only For Testing, session_id=07910db1-3b71-44ce-885a-8909578d8f9f, session_timestamp=2023-01-31T07:20:27.413Z, thread-id=854, tx_id=BBE5924B8FECC18CC2570D628BD2B977E8C3BDF1F861C7B2606DC75B4D2B38DF}
[INFO ] 2023-01-31T07:20:28,337Z [Mock network] corda.flow. - Received transaction acknowledgement request from party O=Mock Company 3, L=London, C=GB. {fiber-id=10000024, flow-id=6487fb65-c676-45e9-a35f-1c17c39e5939, invocation_id=be9e3ee8-767a-480a-a0e9-aacbf10b31ec, invocation_timestamp=2023-01-31T07:20:28.322Z, origin=O=Mock Company 3, L=London, C=GB, session_id=be9e3ee8-767a-480a-a0e9-aacbf10b31ec, session_timestamp=2023-01-31T07:20:28.322Z, thread-id=854, tx_id=79D36D3D7DD85811BAEC102EF9893334B5D9CE464AFF15759EA79472AF490EDF}
[INFO ] 2023-01-31T07:20:28,342Z [Mock network] corda.flow. - Transaction dependencies resolution completed. {fiber-id=10000024, flow-id=6487fb65-c676-45e9-a35f-1c17c39e5939, invocation_id=be9e3ee8-767a-480a-a0e9-aacbf10b31ec, invocation_timestamp=2023-01-31T07:20:28.322Z, origin=O=Mock Company 3, L=London, C=GB, session_id=be9e3ee8-767a-480a-a0e9-aacbf10b31ec, session_timestamp=2023-01-31T07:20:28.322Z, thread-id=854, tx_id=79D36D3D7DD85811BAEC102EF9893334B5D9CE464AFF15759EA79472AF490EDF}
[INFO ] 2023-01-31T07:20:28,344Z [Mock network] corda.flow. - Successfully received fully signed tx. Sending it to the vault for processing. {fiber-id=10000024, flow-id=6487fb65-c676-45e9-a35f-1c17c39e5939, invocation_id=be9e3ee8-767a-480a-a0e9-aacbf10b31ec, invocation_timestamp=2023-01-31T07:20:28.322Z, origin=O=Mock Company 3, L=London, C=GB, session_id=be9e3ee8-767a-480a-a0e9-aacbf10b31ec, session_timestamp=2023-01-31T07:20:28.322Z, thread-id=854, tx_id=79D36D3D7DD85811BAEC102EF9893334B5D9CE464AFF15759EA79472AF490EDF}
[INFO ] 2023-01-31T07:20:28,347Z [Mock network] corda.flow. - Successfully recorded received transaction locally. {fiber-id=10000024, flow-id=6487fb65-c676-45e9-a35f-1c17c39e5939, invocation_id=be9e3ee8-767a-480a-a0e9-aacbf10b31ec, invocation_timestamp=2023-01-31T07:20:28.322Z, origin=O=Mock Company 3, L=London, C=GB, session_id=be9e3ee8-767a-480a-a0e9-aacbf10b31ec, session_timestamp=2023-01-31T07:20:28.322Z, thread-id=854, tx_id=79D36D3D7DD85811BAEC102EF9893334B5D9CE464AFF15759EA79472AF490EDF}
[INFO ] 2023-01-31T07:20:28,363Z [Mock network] identity.PersistentIdentityService. - Linking: B293BEBEE9548636C0F55C47DCEBA356CA088A32E2F7EEA0BFC7FE12EAC9C3C6 to O=Mock Company 3, L=London, C=GB {fiber-id=10000024, flow-id=6487fb65-c676-45e9-a35f-1c17c39e5939, invocation_id=be9e3ee8-767a-480a-a0e9-aacbf10b31ec, invocation_timestamp=2023-01-31T07:20:28.322Z, origin=O=Mock Company 3, L=London, C=GB, session_id=be9e3ee8-767a-480a-a0e9-aacbf10b31ec, session_timestamp=2023-01-31T07:20:28.322Z, thread-id=854, tx_id=79D36D3D7DD85811BAEC102EF9893334B5D9CE464AFF15759EA79472AF490EDF}
[INFO ] 2023-01-31T07:20:28,370Z [Mock network] corda.flow. - Received transaction acknowledgement request from party O=Mock Company 3, L=London, C=GB. {fiber-id=10000024, flow-id=6487fb65-c676-45e9-a35f-1c17c39e5939, invocation_id=be9e3ee8-767a-480a-a0e9-aacbf10b31ec, invocation_timestamp=2023-01-31T07:20:28.322Z, origin=O=Mock Company 3, L=London, C=GB, session_id=be9e3ee8-767a-480a-a0e9-aacbf10b31ec, session_timestamp=2023-01-31T07:20:28.322Z, thread-id=854, tx_id=BBE5924B8FECC18CC2570D628BD2B977E8C3BDF1F861C7B2606DC75B4D2B38DF}
[INFO ] 2023-01-31T07:20:28,377Z [Mock network] corda.flow. - Transaction dependencies resolution completed. {fiber-id=10000024, flow-id=6487fb65-c676-45e9-a35f-1c17c39e5939, invocation_id=be9e3ee8-767a-480a-a0e9-aacbf10b31ec, invocation_timestamp=2023-01-31T07:20:28.322Z, origin=O=Mock Company 3, L=London, C=GB, session_id=be9e3ee8-767a-480a-a0e9-aacbf10b31ec, session_timestamp=2023-01-31T07:20:28.322Z, thread-id=854, tx_id=BBE5924B8FECC18CC2570D628BD2B977E8C3BDF1F861C7B2606DC75B4D2B38DF}
[INFO ] 2023-01-31T07:20:28,386Z [Mock network] corda.flow. - Successfully received fully signed tx. Sending it to the vault for processing. {fiber-id=10000024, flow-id=6487fb65-c676-45e9-a35f-1c17c39e5939, invocation_id=be9e3ee8-767a-480a-a0e9-aacbf10b31ec, invocation_timestamp=2023-01-31T07:20:28.322Z, origin=O=Mock Company 3, L=London, C=GB, session_id=be9e3ee8-767a-480a-a0e9-aacbf10b31ec, session_timestamp=2023-01-31T07:20:28.322Z, thread-id=854, tx_id=BBE5924B8FECC18CC2570D628BD2B977E8C3BDF1F861C7B2606DC75B4D2B38DF}
[INFO ] 2023-01-31T07:20:28,392Z [Mock network] corda.flow. - Successfully recorded received transaction locally. {fiber-id=10000024, flow-id=6487fb65-c676-45e9-a35f-1c17c39e5939, invocation_id=be9e3ee8-767a-480a-a0e9-aacbf10b31ec, invocation_timestamp=2023-01-31T07:20:28.322Z, origin=O=Mock Company 3, L=London, C=GB, session_id=be9e3ee8-767a-480a-a0e9-aacbf10b31ec, session_timestamp=2023-01-31T07:20:28.322Z, thread-id=854, tx_id=BBE5924B8FECC18CC2570D628BD2B977E8C3BDF1F861C7B2606DC75B4D2B38DF}
[INFO ] 2023-01-31T07:20:28,410Z [Mock network] identity.PersistentIdentityService. - Linking: 33A3D05EE93D4C4DD153F61EF761F13E521328D3FE69110A85DB43913E261733 to O=Mock Company 1, L=London, C=GB {actor_id=Only For Testing, actor_owning_identity=O=Mock Company 1, L=London, C=GB, actor_store_id=TEST, fiber-id=10000025, flow-id=9084c642-2b16-4288-8649-79e366321e11, invocation_id=da3e51a3-f912-42db-ad89-fbee02eec616, invocation_timestamp=2023-01-31T07:20:28.404Z, origin=Only For Testing, session_id=da3e51a3-f912-42db-ad89-fbee02eec616, session_timestamp=2023-01-31T07:20:28.404Z, thread-id=854}
[INFO ] 2023-01-31T07:20:28,537Z [Mock network] corda.flow. - No need to notarise this transaction. {actor_id=Only For Testing, actor_owning_identity=O=Mock Company 1, L=London, C=GB, actor_store_id=TEST, fiber-id=10000025, flow-id=9084c642-2b16-4288-8649-79e366321e11, invocation_id=da3e51a3-f912-42db-ad89-fbee02eec616, invocation_timestamp=2023-01-31T07:20:28.404Z, origin=Only For Testing, session_id=da3e51a3-f912-42db-ad89-fbee02eec616, session_timestamp=2023-01-31T07:20:28.404Z, thread-id=854, tx_id=B4B0E7AB73AD48E535B239DA8CE9ABAB8C510EE311E3E848576835A405C9A404}
[INFO ] 2023-01-31T07:20:28,537Z [Mock network] corda.flow. - Recording transaction locally. {actor_id=Only For Testing, actor_owning_identity=O=Mock Company 1, L=London, C=GB, actor_store_id=TEST, fiber-id=10000025, flow-id=9084c642-2b16-4288-8649-79e366321e11, invocation_id=da3e51a3-f912-42db-ad89-fbee02eec616, invocation_timestamp=2023-01-31T07:20:28.404Z, origin=Only For Testing, session_id=da3e51a3-f912-42db-ad89-fbee02eec616, session_timestamp=2023-01-31T07:20:28.404Z, thread-id=854, tx_id=B4B0E7AB73AD48E535B239DA8CE9ABAB8C510EE311E3E848576835A405C9A404}
[INFO ] 2023-01-31T07:20:28,553Z [Mock network] corda.flow. - Recorded transaction locally successfully. {actor_id=Only For Testing, actor_owning_identity=O=Mock Company 1, L=London, C=GB, actor_store_id=TEST, fiber-id=10000025, flow-id=9084c642-2b16-4288-8649-79e366321e11, invocation_id=da3e51a3-f912-42db-ad89-fbee02eec616, invocation_timestamp=2023-01-31T07:20:28.404Z, origin=Only For Testing, session_id=da3e51a3-f912-42db-ad89-fbee02eec616, session_timestamp=2023-01-31T07:20:28.404Z, thread-id=854, tx_id=B4B0E7AB73AD48E535B239DA8CE9ABAB8C510EE311E3E848576835A405C9A404}
[INFO ] 2023-01-31T07:20:28,553Z [Mock network] corda.flow. - All parties received the transaction successfully. {actor_id=Only For Testing, actor_owning_identity=O=Mock Company 1, L=London, C=GB, actor_store_id=TEST, fiber-id=10000025, flow-id=9084c642-2b16-4288-8649-79e366321e11, invocation_id=da3e51a3-f912-42db-ad89-fbee02eec616, invocation_timestamp=2023-01-31T07:20:28.404Z, origin=Only For Testing, session_id=da3e51a3-f912-42db-ad89-fbee02eec616, session_timestamp=2023-01-31T07:20:28.404Z, thread-id=854, tx_id=B4B0E7AB73AD48E535B239DA8CE9ABAB8C510EE311E3E848576835A405C9A404}
[INFO ] 2023-01-31T07:20:28,569Z [Mock network] identity.PersistentIdentityService. - Linking: 4D0082F3C1A4A2FBEB4AE0D178C9D8969E4B7D98EB46438D1DDEE2B4C7EA0D41 to O=Mock Company 1, L=London, C=GB {actor_id=Only For Testing, actor_owning_identity=O=Mock Company 1, L=London, C=GB, actor_store_id=TEST, fiber-id=10000026, flow-id=2557549c-e38c-4ba1-ac27-7cabf15a901c, invocation_id=befa9de1-7e93-426c-8469-e71321b9b160, invocation_timestamp=2023-01-31T07:20:28.565Z, origin=Only For Testing, session_id=befa9de1-7e93-426c-8469-e71321b9b160, session_timestamp=2023-01-31T07:20:28.565Z, thread-id=854}
[INFO ] 2023-01-31T07:20:28,578Z [Mock network] corda.flow. - No need to notarise this transaction. {actor_id=Only For Testing, actor_owning_identity=O=Mock Company 1, L=London, C=GB, actor_store_id=TEST, fiber-id=10000026, flow-id=2557549c-e38c-4ba1-ac27-7cabf15a901c, invocation_id=befa9de1-7e93-426c-8469-e71321b9b160, invocation_timestamp=2023-01-31T07:20:28.565Z, origin=Only For Testing, session_id=befa9de1-7e93-426c-8469-e71321b9b160, session_timestamp=2023-01-31T07:20:28.565Z, thread-id=854, tx_id=2D4A02223011FCE03E3C16F39B864CA4244DBA5D930C7E0A1B119C5C147578AE}
[INFO ] 2023-01-31T07:20:28,578Z [Mock network] corda.flow. - Recording transaction locally. {actor_id=Only For Testing, actor_owning_identity=O=Mock Company 1, L=London, C=GB, actor_store_id=TEST, fiber-id=10000026, flow-id=2557549c-e38c-4ba1-ac27-7cabf15a901c, invocation_id=befa9de1-7e93-426c-8469-e71321b9b160, invocation_timestamp=2023-01-31T07:20:28.565Z, origin=Only For Testing, session_id=befa9de1-7e93-426c-8469-e71321b9b160, session_timestamp=2023-01-31T07:20:28.565Z, thread-id=854, tx_id=2D4A02223011FCE03E3C16F39B864CA4244DBA5D930C7E0A1B119C5C147578AE}
[INFO ] 2023-01-31T07:20:28,582Z [Mock network] corda.flow. - Recorded transaction locally successfully. {actor_id=Only For Testing, actor_owning_identity=O=Mock Company 1, L=London, C=GB, actor_store_id=TEST, fiber-id=10000026, flow-id=2557549c-e38c-4ba1-ac27-7cabf15a901c, invocation_id=befa9de1-7e93-426c-8469-e71321b9b160, invocation_timestamp=2023-01-31T07:20:28.565Z, origin=Only For Testing, session_id=befa9de1-7e93-426c-8469-e71321b9b160, session_timestamp=2023-01-31T07:20:28.565Z, thread-id=854, tx_id=2D4A02223011FCE03E3C16F39B864CA4244DBA5D930C7E0A1B119C5C147578AE}
[INFO ] 2023-01-31T07:20:28,582Z [Mock network] corda.flow. - All parties received the transaction successfully. {actor_id=Only For Testing, actor_owning_identity=O=Mock Company 1, L=London, C=GB, actor_store_id=TEST, fiber-id=10000026, flow-id=2557549c-e38c-4ba1-ac27-7cabf15a901c, invocation_id=befa9de1-7e93-426c-8469-e71321b9b160, invocation_timestamp=2023-01-31T07:20:28.565Z, origin=Only For Testing, session_id=befa9de1-7e93-426c-8469-e71321b9b160, session_timestamp=2023-01-31T07:20:28.565Z, thread-id=854, tx_id=2D4A02223011FCE03E3C16F39B864CA4244DBA5D930C7E0A1B119C5C147578AE}
[INFO ] 2023-01-31T07:20:28,610Z [Mock network] identity.PersistentIdentityService. - Linking: 48A76985F3A909AFB7E361B476F63150249F42D2C4399F8E872D5CF6952CB409 to O=Mock Company 1, L=London, C=GB {actor_id=Only For Testing, actor_owning_identity=O=Mock Company 1, L=London, C=GB, actor_store_id=TEST, fiber-id=10000028, flow-id=3a7ab516-8bae-4f21-82a3-ce2ce8872d5f, invocation_id=fff996b3-92b9-475d-ad90-f87a06e74497, invocation_timestamp=2023-01-31T07:20:28.604Z, origin=Only For Testing, session_id=fff996b3-92b9-475d-ad90-f87a06e74497, session_timestamp=2023-01-31T07:20:28.604Z, thread-id=854}
[INFO ] 2023-01-31T07:20:28,649Z [Mock network] identity.PersistentIdentityService. - Linking: 5BA6E438D87BEAB61E74787C01964103E0371AE73C6F076101282363FFE535BC to O=Mock Company 3, L=London, C=GB {fiber-id=10000029, flow-id=03ced3c3-b79e-4211-99f3-619147130d95, invocation_id=0cc92778-3500-4342-909e-8c7008964821, invocation_timestamp=2023-01-31T07:20:28.626Z, origin=O=Mock Company 1, L=London, C=GB, session_id=0cc92778-3500-4342-909e-8c7008964821, session_timestamp=2023-01-31T07:20:28.626Z, thread-id=854}
[INFO ] 2023-01-31T07:20:28,658Z [Mock network] identity.PersistentIdentityService. - Linking: 5BA6E438D87BEAB61E74787C01964103E0371AE73C6F076101282363FFE535BC to O=Mock Company 3, L=London, C=GB {actor_id=Only For Testing, actor_owning_identity=O=Mock Company 1, L=London, C=GB, actor_store_id=TEST, fiber-id=10000028, flow-id=3a7ab516-8bae-4f21-82a3-ce2ce8872d5f, invocation_id=fff996b3-92b9-475d-ad90-f87a06e74497, invocation_timestamp=2023-01-31T07:20:28.604Z, origin=Only For Testing, session_id=fff996b3-92b9-475d-ad90-f87a06e74497, session_timestamp=2023-01-31T07:20:28.604Z, thread-id=854}
[INFO ] 2023-01-31T07:20:29,066Z [Mock network] corda.flow. - Received transaction acknowledgement request from party O=Mock Company 1, L=London, C=GB. {fiber-id=10000030, flow-id=5e5bed5e-e417-4956-9f66-ab9c2fc49376, invocation_id=03a62822-931e-4838-8dee-bc8846259a17, invocation_timestamp=2023-01-31T07:20:29.055Z, origin=O=Mock Company 1, L=London, C=GB, session_id=03a62822-931e-4838-8dee-bc8846259a17, session_timestamp=2023-01-31T07:20:29.055Z, thread-id=854, tx_id=1CB4DD49732F67A90CB4F4F8C001018900963A97EE2B803FF5E7F568C7DD6866}
[INFO ] 2023-01-31T07:20:29,152Z [Mock network] corda.flow. - Transaction dependencies resolution completed. {fiber-id=10000030, flow-id=5e5bed5e-e417-4956-9f66-ab9c2fc49376, invocation_id=03a62822-931e-4838-8dee-bc8846259a17, invocation_timestamp=2023-01-31T07:20:29.055Z, origin=O=Mock Company 1, L=London, C=GB, session_id=03a62822-931e-4838-8dee-bc8846259a17, session_timestamp=2023-01-31T07:20:29.055Z, thread-id=854, tx_id=1CB4DD49732F67A90CB4F4F8C001018900963A97EE2B803FF5E7F568C7DD6866}
[INFO ] 2023-01-31T07:20:29,268Z [Mock network] corda.flow. - Sending transaction to notary: O=Notary, L=London, C=GB. {actor_id=Only For Testing, actor_owning_identity=O=Mock Company 1, L=London, C=GB, actor_store_id=TEST, fiber-id=10000028, flow-id=3a7ab516-8bae-4f21-82a3-ce2ce8872d5f, invocation_id=fff996b3-92b9-475d-ad90-f87a06e74497, invocation_timestamp=2023-01-31T07:20:28.604Z, origin=Only For Testing, session_id=fff996b3-92b9-475d-ad90-f87a06e74497, session_timestamp=2023-01-31T07:20:28.604Z, thread-id=854, tx_id=1CB4DD49732F67A90CB4F4F8C001018900963A97EE2B803FF5E7F568C7DD6866}
[INFO ] 2023-01-31T07:20:29,288Z [Mock network] corda.flow. - Received a notarisation request for Tx [1CB4DD49732F67A90CB4F4F8C001018900963A97EE2B803FF5E7F568C7DD6866] from [O=Mock Company 1, L=London, C=GB] {fiber-id=10000031, flow-id=e2fea61c-1612-4af9-a6a1-0a1180891ed3, invocation_id=c9d08180-b7f0-4e4f-815a-2eae7d4c4162, invocation_timestamp=2023-01-31T07:20:29.277Z, origin=O=Mock Company 1, L=London, C=GB, session_id=c9d08180-b7f0-4e4f-815a-2eae7d4c4162, session_timestamp=2023-01-31T07:20:29.277Z, thread-id=854}
[INFO ] 2023-01-31T07:20:29,845Z [Notary request queue processor] jpa.JPAUniquenessProvider. - Processing notarization requests with 2 input states and 0 references {}
[INFO ] 2023-01-31T07:20:29,852Z [Mock network] corda.flow. - Transaction [1CB4DD49732F67A90CB4F4F8C001018900963A97EE2B803FF5E7F568C7DD6866] successfully notarised, sending signature back to [O=Mock Company 1, L=London, C=GB] {fiber-id=10000031, flow-id=e2fea61c-1612-4af9-a6a1-0a1180891ed3, invocation_id=c9d08180-b7f0-4e4f-815a-2eae7d4c4162, invocation_timestamp=2023-01-31T07:20:29.277Z, origin=O=Mock Company 1, L=London, C=GB, session_id=c9d08180-b7f0-4e4f-815a-2eae7d4c4162, session_timestamp=2023-01-31T07:20:29.277Z, thread-id=854}
[INFO ] 2023-01-31T07:20:29,910Z [Mock network] corda.flow. - Notary responded (O=Notary, L=London, C=GB). {actor_id=Only For Testing, actor_owning_identity=O=Mock Company 1, L=London, C=GB, actor_store_id=TEST, fiber-id=10000028, flow-id=3a7ab516-8bae-4f21-82a3-ce2ce8872d5f, invocation_id=fff996b3-92b9-475d-ad90-f87a06e74497, invocation_timestamp=2023-01-31T07:20:28.604Z, origin=Only For Testing, session_id=fff996b3-92b9-475d-ad90-f87a06e74497, session_timestamp=2023-01-31T07:20:28.604Z, thread-id=854, tx_id=1CB4DD49732F67A90CB4F4F8C001018900963A97EE2B803FF5E7F568C7DD6866}
[INFO ] 2023-01-31T07:20:29,911Z [Mock network] corda.flow. - Recording transaction locally. {actor_id=Only For Testing, actor_owning_identity=O=Mock Company 1, L=London, C=GB, actor_store_id=TEST, fiber-id=10000028, flow-id=3a7ab516-8bae-4f21-82a3-ce2ce8872d5f, invocation_id=fff996b3-92b9-475d-ad90-f87a06e74497, invocation_timestamp=2023-01-31T07:20:28.604Z, origin=Only For Testing, session_id=fff996b3-92b9-475d-ad90-f87a06e74497, session_timestamp=2023-01-31T07:20:28.604Z, thread-id=854, tx_id=1CB4DD49732F67A90CB4F4F8C001018900963A97EE2B803FF5E7F568C7DD6866}
[INFO ] 2023-01-31T07:20:29,921Z [Mock network] corda.flow. - Recorded transaction locally successfully. {actor_id=Only For Testing, actor_owning_identity=O=Mock Company 1, L=London, C=GB, actor_store_id=TEST, fiber-id=10000028, flow-id=3a7ab516-8bae-4f21-82a3-ce2ce8872d5f, invocation_id=fff996b3-92b9-475d-ad90-f87a06e74497, invocation_timestamp=2023-01-31T07:20:28.604Z, origin=Only For Testing, session_id=fff996b3-92b9-475d-ad90-f87a06e74497, session_timestamp=2023-01-31T07:20:28.604Z, thread-id=854, tx_id=1CB4DD49732F67A90CB4F4F8C001018900963A97EE2B803FF5E7F568C7DD6866}
[INFO ] 2023-01-31T07:20:29,942Z [Mock network] corda.flow. - Received transaction acknowledgement request from party O=Mock Company 1, L=London, C=GB. {fiber-id=10000030, flow-id=5e5bed5e-e417-4956-9f66-ab9c2fc49376, invocation_id=03a62822-931e-4838-8dee-bc8846259a17, invocation_timestamp=2023-01-31T07:20:29.055Z, origin=O=Mock Company 1, L=London, C=GB, session_id=03a62822-931e-4838-8dee-bc8846259a17, session_timestamp=2023-01-31T07:20:29.055Z, thread-id=854, tx_id=1CB4DD49732F67A90CB4F4F8C001018900963A97EE2B803FF5E7F568C7DD6866}
[INFO ] 2023-01-31T07:20:29,947Z [Mock network] corda.flow. - Transaction dependencies resolution completed. {fiber-id=10000030, flow-id=5e5bed5e-e417-4956-9f66-ab9c2fc49376, invocation_id=03a62822-931e-4838-8dee-bc8846259a17, invocation_timestamp=2023-01-31T07:20:29.055Z, origin=O=Mock Company 1, L=London, C=GB, session_id=03a62822-931e-4838-8dee-bc8846259a17, session_timestamp=2023-01-31T07:20:29.055Z, thread-id=854, tx_id=1CB4DD49732F67A90CB4F4F8C001018900963A97EE2B803FF5E7F568C7DD6866}
[INFO ] 2023-01-31T07:20:29,954Z [Mock network] corda.flow. - Successfully received fully signed tx. Sending it to the vault for processing. {fiber-id=10000030, flow-id=5e5bed5e-e417-4956-9f66-ab9c2fc49376, invocation_id=03a62822-931e-4838-8dee-bc8846259a17, invocation_timestamp=2023-01-31T07:20:29.055Z, origin=O=Mock Company 1, L=London, C=GB, session_id=03a62822-931e-4838-8dee-bc8846259a17, session_timestamp=2023-01-31T07:20:29.055Z, thread-id=854, tx_id=1CB4DD49732F67A90CB4F4F8C001018900963A97EE2B803FF5E7F568C7DD6866}
[WARN ] 2023-01-31T07:20:29,963Z [Mock network] persistence.AbstractPartyToX500NameAsStringConverter. - Identity service unable to resolve AbstractParty: Anonymous(DL6hiacbWbUsztt6cPbcU2VWuoYvp6qEmMJZUoM9EAFBCt) {fiber-id=10000030, flow-id=5e5bed5e-e417-4956-9f66-ab9c2fc49376, invocation_id=03a62822-931e-4838-8dee-bc8846259a17, invocation_timestamp=2023-01-31T07:20:29.055Z, origin=O=Mock Company 1, L=London, C=GB, session_id=03a62822-931e-4838-8dee-bc8846259a17, session_timestamp=2023-01-31T07:20:29.055Z, thread-id=854, tx_id=1CB4DD49732F67A90CB4F4F8C001018900963A97EE2B803FF5E7F568C7DD6866}
[INFO ] 2023-01-31T07:20:29,965Z [Mock network] corda.flow. - Successfully recorded received transaction locally. {fiber-id=10000030, flow-id=5e5bed5e-e417-4956-9f66-ab9c2fc49376, invocation_id=03a62822-931e-4838-8dee-bc8846259a17, invocation_timestamp=2023-01-31T07:20:29.055Z, origin=O=Mock Company 1, L=London, C=GB, session_id=03a62822-931e-4838-8dee-bc8846259a17, session_timestamp=2023-01-31T07:20:29.055Z, thread-id=854, tx_id=1CB4DD49732F67A90CB4F4F8C001018900963A97EE2B803FF5E7F568C7DD6866}
[INFO ] 2023-01-31T07:20:29,972Z [Mock network] corda.flow. - Party O=Mock Company 3, L=London, C=GB received the transaction. {actor_id=Only For Testing, actor_owning_identity=O=Mock Company 1, L=London, C=GB, actor_store_id=TEST, fiber-id=10000028, flow-id=3a7ab516-8bae-4f21-82a3-ce2ce8872d5f, invocation_id=fff996b3-92b9-475d-ad90-f87a06e74497, invocation_timestamp=2023-01-31T07:20:28.604Z, origin=Only For Testing, session_id=fff996b3-92b9-475d-ad90-f87a06e74497, session_timestamp=2023-01-31T07:20:28.604Z, thread-id=854, tx_id=1CB4DD49732F67A90CB4F4F8C001018900963A97EE2B803FF5E7F568C7DD6866}
[INFO ] 2023-01-31T07:20:29,972Z [Mock network] corda.flow. - All parties received the transaction successfully. {actor_id=Only For Testing, actor_owning_identity=O=Mock Company 1, L=London, C=GB, actor_store_id=TEST, fiber-id=10000028, flow-id=3a7ab516-8bae-4f21-82a3-ce2ce8872d5f, invocation_id=fff996b3-92b9-475d-ad90-f87a06e74497, invocation_timestamp=2023-01-31T07:20:28.604Z, origin=Only For Testing, session_id=fff996b3-92b9-475d-ad90-f87a06e74497, session_timestamp=2023-01-31T07:20:28.604Z, thread-id=854, tx_id=1CB4DD49732F67A90CB4F4F8C001018900963A97EE2B803FF5E7F568C7DD6866}
[INFO ] 2023-01-31T07:20:30,005Z [Test worker] persistence.CordaPersistence. - Closing HikariDataSource (HikariPool-1) {}
[INFO ] 2023-01-31T07:20:30,024Z [Test worker] internal.MockNodeMessagingService. - Status change to false {}
[INFO ] 2023-01-31T07:20:30,024Z [Test worker] internal.InternalMockNetwork$MockNode. - MessagingService active change to: false {}
[INFO ] 2023-01-31T07:20:30,026Z [Test worker] persistence.CordaPersistence. - Closing HikariDataSource (HikariPool-2) {}
[INFO ] 2023-01-31T07:20:30,041Z [Test worker] internal.MockNodeMessagingService. - Status change to false {}
[INFO ] 2023-01-31T07:20:30,041Z [Test worker] internal.InternalMockNetwork$MockNode. - MessagingService active change to: false {}
[INFO ] 2023-01-31T07:20:30,043Z [Test worker] persistence.CordaPersistence. - Closing HikariDataSource (HikariPool-3) {}
[INFO ] 2023-01-31T07:20:30,053Z [Test worker] internal.MockNodeMessagingService. - Status change to false {}
[INFO ] 2023-01-31T07:20:30,053Z [Test worker] internal.InternalMockNetwork$MockNode. - MessagingService active change to: false {}
[INFO ] 2023-01-31T07:20:30,055Z [Test worker] persistence.CordaPersistence. - Closing HikariDataSource (HikariPool-4) {}
[INFO ] 2023-01-31T07:20:30,068Z [Test worker] internal.MockNodeMessagingService. - Status change to false {}
[INFO ] 2023-01-31T07:20:30,068Z [Test worker] internal.InternalMockNetwork$MockNode. - MessagingService active change to: false {}
[INFO ] 2023-01-31T07:39:57,992Z [Test worker] internal.TestCordappImpl. - Generating CorDapp jar from local project in /Users/peter.li/Desktop/obligation-cordapp/workflows ... {}
[INFO ] 2023-01-31T07:39:58,139Z [Connection worker] internal.TestCordappImpl. - Build {}
[INFO ] 2023-01-31T07:39:59,782Z [Connection worker] internal.TestCordappImpl. - Starting Gradle Daemon {}
[INFO ] 2023-01-31T07:40:00,645Z [Connection worker] internal.TestCordappImpl. - Connecting to Gradle Daemon {}
[INFO ] 2023-01-31T07:40:00,657Z [Connection worker] internal.TestCordappImpl. - Starting Gradle Daemon {}
[INFO ] 2023-01-31T07:40:00,658Z [Connection worker] internal.TestCordappImpl. - Build {}
[INFO ] 2023-01-31T07:40:01,272Z [Connection worker] internal.TestCordappImpl. - Run build {}
[INFO ] 2023-01-31T07:40:01,294Z [Connection worker] internal.TestCordappImpl. - Evaluate settings {}
[INFO ] 2023-01-31T07:40:01,790Z [Connection worker] internal.TestCordappImpl. - Run build {}
[INFO ] 2023-01-31T07:40:01,800Z [Connection worker] internal.TestCordappImpl. - Configure build {}
[INFO ] 2023-01-31T07:40:01,800Z [Connection worker] internal.TestCordappImpl. - Load projects {}
[INFO ] 2023-01-31T07:40:02,011Z [Connection worker] internal.TestCordappImpl. - Configure build {}
[INFO ] 2023-01-31T07:40:02,021Z [Connection worker] internal.TestCordappImpl. - Configure project : {}
[INFO ] 2023-01-31T07:40:02,589Z [Connection worker] internal.TestCordappImpl. - Resolve dependencies of :classpath {}
[INFO ] 2023-01-31T07:40:02,954Z [Connection worker] internal.TestCordappImpl. - Configure project : {}
[INFO ] 2023-01-31T07:40:02,966Z [Connection worker] internal.TestCordappImpl. - Resolve files of :classpath {}
[INFO ] 2023-01-31T07:40:02,998Z [Connection worker] internal.TestCordappImpl. - Configure project : {}
[INFO ] 2023-01-31T07:40:02,998Z [Connection worker] internal.TestCordappImpl. - Resolve files of :classpath {}
[INFO ] 2023-01-31T07:40:02,998Z [Connection worker] internal.TestCordappImpl. - Configure project : {}
[INFO ] 2023-01-31T07:40:04,257Z [Connection worker] internal.TestCordappImpl. - Configure build {}
[INFO ] 2023-01-31T07:40:04,257Z [Connection worker] internal.TestCordappImpl. - Configure project :clients {}
[INFO ] 2023-01-31T07:40:04,438Z [Connection worker] internal.TestCordappImpl. - Configure build {}
[INFO ] 2023-01-31T07:40:04,438Z [Connection worker] internal.TestCordappImpl. - Configure project :contracts {}
[INFO ] 2023-01-31T07:40:04,482Z [Connection worker] internal.TestCordappImpl. - Configure build {}
[INFO ] 2023-01-31T07:40:04,482Z [Connection worker] internal.TestCordappImpl. - Configure project :workflows {}
[INFO ] 2023-01-31T07:40:04,650Z [Connection worker] internal.TestCordappImpl. - Configure build {}
[INFO ] 2023-01-31T07:40:04,650Z [Connection worker] internal.TestCordappImpl. - Run build {}
[INFO ] 2023-01-31T07:40:04,739Z [Connection worker] internal.TestCordappImpl. - Resolve dependencies of :workflows:kotlinCompilerClasspath {}
[INFO ] 2023-01-31T07:40:04,750Z [Connection worker] internal.TestCordappImpl. - Run build {}
[INFO ] 2023-01-31T07:40:04,750Z [Connection worker] internal.TestCordappImpl. - Resolve files of :workflows:kotlinCompilerClasspath {}
[INFO ] 2023-01-31T07:40:04,750Z [Connection worker] internal.TestCordappImpl. - Run build {}
[INFO ] 2023-01-31T07:40:04,760Z [Connection worker] internal.TestCordappImpl. - Resolve dependencies of :contracts:kotlinCompilerClasspath {}
[INFO ] 2023-01-31T07:40:04,770Z [Connection worker] internal.TestCordappImpl. - Run build {}
[INFO ] 2023-01-31T07:40:04,770Z [Connection worker] internal.TestCordappImpl. - Resolve files of :contracts:kotlinCompilerClasspath {}
[INFO ] 2023-01-31T07:40:04,771Z [Connection worker] internal.TestCordappImpl. - Run build {}
[INFO ] 2023-01-31T07:40:04,781Z [Connection worker] internal.TestCordappImpl. - Run tasks {}
[INFO ] 2023-01-31T07:40:04,812Z [Connection worker] internal.TestCordappImpl. - Task :contracts:compileKotlin {}
[INFO ] 2023-01-31T07:40:04,822Z [Connection worker] internal.TestCordappImpl. - Resolve files of :contracts:kotlinCompilerClasspath {}
[INFO ] 2023-01-31T07:40:04,823Z [Connection worker] internal.TestCordappImpl. - Task :contracts:compileKotlin {}
[INFO ] 2023-01-31T07:40:04,894Z [Connection worker] internal.TestCordappImpl. - Resolve dependencies of :contracts:kotlinCompilerPluginClasspath {}
[INFO ] 2023-01-31T07:40:04,906Z [Connection worker] internal.TestCordappImpl. - Task :contracts:compileKotlin {}
[INFO ] 2023-01-31T07:40:04,906Z [Connection worker] internal.TestCordappImpl. - Resolve files of :contracts:kotlinCompilerPluginClasspath {}
[INFO ] 2023-01-31T07:40:04,906Z [Connection worker] internal.TestCordappImpl. - Task :contracts:compileKotlin {}
[INFO ] 2023-01-31T07:40:04,906Z [Connection worker] internal.TestCordappImpl. - Resolve dependencies of :contracts:compileClasspath {}
[INFO ] 2023-01-31T07:40:04,980Z [Connection worker] internal.TestCordappImpl. - Task :contracts:compileKotlin {}
[INFO ] 2023-01-31T07:40:04,980Z [Connection worker] internal.TestCordappImpl. - Resolve files of :contracts:compileClasspath {}
[INFO ] 2023-01-31T07:40:04,991Z [Connection worker] internal.TestCordappImpl. - Task :contracts:compileKotlin {}
[INFO ] 2023-01-31T07:40:05,515Z [Connection worker] internal.TestCordappImpl. - Resolve files of :contracts:compileClasspath {}
[INFO ] 2023-01-31T07:40:05,515Z [Connection worker] internal.TestCordappImpl. - Task :contracts:compileKotlin {}
[INFO ] 2023-01-31T07:40:05,528Z [Connection worker] internal.TestCordappImpl. - Resolve files of :contracts:kotlinCompilerPluginClasspath {}
[INFO ] 2023-01-31T07:40:05,528Z [Connection worker] internal.TestCordappImpl. - Task :contracts:compileKotlin {}
[INFO ] 2023-01-31T07:40:05,549Z [Connection worker] internal.TestCordappImpl. - Run tasks {}
[INFO ] 2023-01-31T07:40:05,561Z [Connection worker] internal.TestCordappImpl. - Task :contracts:compileJava {}
[INFO ] 2023-01-31T07:40:05,561Z [Connection worker] internal.TestCordappImpl. - Run tasks {}
[INFO ] 2023-01-31T07:40:05,561Z [Connection worker] internal.TestCordappImpl. - Task :contracts:processResources {}
[INFO ] 2023-01-31T07:40:05,561Z [Connection worker] internal.TestCordappImpl. - Run tasks {}
[INFO ] 2023-01-31T07:40:05,561Z [Connection worker] internal.TestCordappImpl. - Task :contracts:classes {}
[INFO ] 2023-01-31T07:40:05,561Z [Connection worker] internal.TestCordappImpl. - Run tasks {}
[INFO ] 2023-01-31T07:40:05,561Z [Connection worker] internal.TestCordappImpl. - Task :contracts:configureCordappFatJar {}
[INFO ] 2023-01-31T07:40:05,571Z [Connection worker] internal.TestCordappImpl. - Resolve dependencies of :contracts:runtime {}
[INFO ] 2023-01-31T07:40:05,593Z [Connection worker] internal.TestCordappImpl. - Task :contracts:configureCordappFatJar {}
[INFO ] 2023-01-31T07:40:05,593Z [Connection worker] internal.TestCordappImpl. - Resolve files of :contracts:runtime {}
[INFO ] 2023-01-31T07:40:05,605Z [Connection worker] internal.TestCordappImpl. - Task :contracts:configureCordappFatJar {}
[INFO ] 2023-01-31T07:40:05,605Z [Connection worker] internal.TestCordappImpl. - Resolve files of :contracts:runtime {}
[INFO ] 2023-01-31T07:40:05,605Z [Connection worker] internal.TestCordappImpl. - Task :contracts:configureCordappFatJar {}
[INFO ] 2023-01-31T07:40:05,605Z [Connection worker] internal.TestCordappImpl. - Resolve files of :contracts:runtime {}
[INFO ] 2023-01-31T07:40:05,605Z [Connection worker] internal.TestCordappImpl. - Task :contracts:configureCordappFatJar {}
[INFO ] 2023-01-31T07:40:05,605Z [Connection worker] internal.TestCordappImpl. - Resolve files of :contracts:runtime {}
[INFO ] 2023-01-31T07:40:05,605Z [Connection worker] internal.TestCordappImpl. - Task :contracts:configureCordappFatJar {}
[INFO ] 2023-01-31T07:40:05,605Z [Connection worker] internal.TestCordappImpl. - Resolve files of :contracts:runtime {}
[INFO ] 2023-01-31T07:40:05,605Z [Connection worker] internal.TestCordappImpl. - Task :contracts:configureCordappFatJar {}
[INFO ] 2023-01-31T07:40:05,605Z [Connection worker] internal.TestCordappImpl. - Run tasks {}
[INFO ] 2023-01-31T07:40:05,605Z [Connection worker] internal.TestCordappImpl. - Task :contracts:inspectClassesForKotlinIC {}
[INFO ] 2023-01-31T07:40:05,616Z [Connection worker] internal.TestCordappImpl. - Run tasks {}
[INFO ] 2023-01-31T07:40:05,616Z [Connection worker] internal.TestCordappImpl. - Task :contracts:jar {}
[INFO ] 2023-01-31T07:40:05,626Z [Connection worker] internal.TestCordappImpl. - Run tasks {}
[INFO ] 2023-01-31T07:40:05,627Z [Connection worker] internal.TestCordappImpl. - Task :workflows:compileKotlin {}
[INFO ] 2023-01-31T07:40:05,627Z [Connection worker] internal.TestCordappImpl. - Resolve files of :workflows:kotlinCompilerClasspath {}
[INFO ] 2023-01-31T07:40:05,627Z [Connection worker] internal.TestCordappImpl. - Task :workflows:compileKotlin {}
[INFO ] 2023-01-31T07:40:05,648Z [Connection worker] internal.TestCordappImpl. - Resolve dependencies of :workflows:kotlinCompilerPluginClasspath {}
[INFO ] 2023-01-31T07:40:05,648Z [Connection worker] internal.TestCordappImpl. - Task :workflows:compileKotlin {}
[INFO ] 2023-01-31T07:40:05,648Z [Connection worker] internal.TestCordappImpl. - Resolve files of :workflows:kotlinCompilerPluginClasspath {}
[INFO ] 2023-01-31T07:40:05,648Z [Connection worker] internal.TestCordappImpl. - Task :workflows:compileKotlin {}
[INFO ] 2023-01-31T07:40:05,648Z [Connection worker] internal.TestCordappImpl. - Resolve dependencies of :workflows:compileClasspath {}
[INFO ] 2023-01-31T07:40:05,668Z [Connection worker] internal.TestCordappImpl. - Task :workflows:compileKotlin {}
[INFO ] 2023-01-31T07:40:05,669Z [Connection worker] internal.TestCordappImpl. - Resolve files of :workflows:compileClasspath {}
[INFO ] 2023-01-31T07:40:05,669Z [Connection worker] internal.TestCordappImpl. - Task :workflows:compileKotlin {}
[INFO ] 2023-01-31T07:40:05,669Z [Connection worker] internal.TestCordappImpl. - Resolve files of :workflows:compileClasspath {}
[INFO ] 2023-01-31T07:40:05,669Z [Connection worker] internal.TestCordappImpl. - Task :workflows:compileKotlin {}
[INFO ] 2023-01-31T07:40:05,679Z [Connection worker] internal.TestCordappImpl. - Resolve files of :workflows:kotlinCompilerPluginClasspath {}
[INFO ] 2023-01-31T07:40:05,679Z [Connection worker] internal.TestCordappImpl. - Task :workflows:compileKotlin {}
[INFO ] 2023-01-31T07:40:05,679Z [Connection worker] internal.TestCordappImpl. - Run tasks {}
[INFO ] 2023-01-31T07:40:05,679Z [Connection worker] internal.TestCordappImpl. - Task :workflows:compileJava {}
[INFO ] 2023-01-31T07:40:05,690Z [Connection worker] internal.TestCordappImpl. - Run tasks {}
[INFO ] 2023-01-31T07:40:05,690Z [Connection worker] internal.TestCordappImpl. - Task :workflows:processResources {}
[INFO ] 2023-01-31T07:40:05,690Z [Connection worker] internal.TestCordappImpl. - Run tasks {}
[INFO ] 2023-01-31T07:40:05,690Z [Connection worker] internal.TestCordappImpl. - Task :workflows:classes {}
[INFO ] 2023-01-31T07:40:05,690Z [Connection worker] internal.TestCordappImpl. - Run tasks {}
[INFO ] 2023-01-31T07:40:05,690Z [Connection worker] internal.TestCordappImpl. - Task :workflows:configureCordappFatJar {}
[INFO ] 2023-01-31T07:40:05,690Z [Connection worker] internal.TestCordappImpl. - Resolve dependencies of :workflows:runtime {}
[INFO ] 2023-01-31T07:40:05,723Z [Connection worker] internal.TestCordappImpl. - Task :workflows:configureCordappFatJar {}
[INFO ] 2023-01-31T07:40:05,724Z [Connection worker] internal.TestCordappImpl. - Resolve files of :workflows:runtime {}
[INFO ] 2023-01-31T07:40:05,732Z [Connection worker] internal.TestCordappImpl. - Task :workflows:configureCordappFatJar {}
[INFO ] 2023-01-31T07:40:05,733Z [Connection worker] internal.TestCordappImpl. - Resolve files of :workflows:runtime {}
[INFO ] 2023-01-31T07:40:05,733Z [Connection worker] internal.TestCordappImpl. - Task :workflows:configureCordappFatJar {}
[INFO ] 2023-01-31T07:40:05,733Z [Connection worker] internal.TestCordappImpl. - Resolve files of :workflows:runtime {}
[INFO ] 2023-01-31T07:40:05,733Z [Connection worker] internal.TestCordappImpl. - Task :workflows:configureCordappFatJar {}
[INFO ] 2023-01-31T07:40:05,733Z [Connection worker] internal.TestCordappImpl. - Resolve files of :workflows:runtime {}
[INFO ] 2023-01-31T07:40:05,733Z [Connection worker] internal.TestCordappImpl. - Task :workflows:configureCordappFatJar {}
[INFO ] 2023-01-31T07:40:05,733Z [Connection worker] internal.TestCordappImpl. - Resolve files of :workflows:runtime {}
[INFO ] 2023-01-31T07:40:05,733Z [Connection worker] internal.TestCordappImpl. - Task :workflows:configureCordappFatJar {}
[INFO ] 2023-01-31T07:40:05,733Z [Connection worker] internal.TestCordappImpl. - Resolve files of :workflows:runtime {}
[INFO ] 2023-01-31T07:40:05,733Z [Connection worker] internal.TestCordappImpl. - Task :workflows:configureCordappFatJar {}
[INFO ] 2023-01-31T07:40:05,733Z [Connection worker] internal.TestCordappImpl. - Resolve files of :workflows:runtime {}
[INFO ] 2023-01-31T07:40:05,733Z [Connection worker] internal.TestCordappImpl. - Task :workflows:configureCordappFatJar {}
[INFO ] 2023-01-31T07:40:05,733Z [Connection worker] internal.TestCordappImpl. - Resolve files of :workflows:runtime {}
[INFO ] 2023-01-31T07:40:05,733Z [Connection worker] internal.TestCordappImpl. - Task :workflows:configureCordappFatJar {}
[INFO ] 2023-01-31T07:40:05,733Z [Connection worker] internal.TestCordappImpl. - Run tasks {}
[INFO ] 2023-01-31T07:40:05,733Z [Connection worker] internal.TestCordappImpl. - Task :workflows:inspectClassesForKotlinIC {}
[INFO ] 2023-01-31T07:40:05,736Z [Connection worker] internal.TestCordappImpl. - Run tasks {}
[INFO ] 2023-01-31T07:40:05,736Z [Connection worker] internal.TestCordappImpl. - Task :workflows:jar {}
[INFO ] 2023-01-31T07:40:05,746Z [Connection worker] internal.TestCordappImpl. - Run tasks {}
[INFO ] 2023-01-31T07:40:05,756Z [Connection worker] internal.TestCordappImpl. - Run build {}
[INFO ] 2023-01-31T07:40:05,756Z [Connection worker] internal.TestCordappImpl. - Build model 'java.lang.Void' for project ':workflows' {}
[INFO ] 2023-01-31T07:40:05,756Z [Connection worker] internal.TestCordappImpl. - Run build {}
[INFO ] 2023-01-31T07:40:05,774Z [Connection worker] internal.TestCordappImpl. - Build {}
[INFO ] 2023-01-31T07:40:05,803Z [Connection worker] internal.TestCordappImpl. - Deleting unused version-specific caches in /Users/peter.li/Desktop/obligation-cordapp/.gradle {}
[INFO ] 2023-01-31T07:40:05,804Z [Connection worker] internal.TestCordappImpl. - Build {}
[INFO ] 2023-01-31T07:40:05,834Z [Connection worker] internal.TestCordappImpl. -  {}
[INFO ] 2023-01-31T07:40:10,570Z [Test worker] cordapp.JarScanningCordappLoader. - Looking for CorDapps in [build/mock-network/20230131-073957.370-ECD4BC5405C34C06/nodes/0/cordapps] {}
[INFO ] 2023-01-31T07:40:10,580Z [Test worker] cordapp.JarScanningCordappLoader. - Loading CorDapps from RestrictedURL(url=file:/Users/peter.li/Desktop/obligation-cordapp/workflows/build/mock-network/20230131-073957.370-ECD4BC5405C34C06/nodes/0/cordapps/accounts-contracts-1.0.jar, rootPackageName=null), RestrictedURL(url=file:/Users/peter.li/Desktop/obligation-cordapp/workflows/build/mock-network/20230131-073957.370-ECD4BC5405C34C06/nodes/0/cordapps/accounts-workflows-1.0.jar, rootPackageName=null), RestrictedURL(url=file:/Users/peter.li/Desktop/obligation-cordapp/workflows/build/mock-network/20230131-073957.370-ECD4BC5405C34C06/nodes/0/cordapps/corda-finance-contracts-4.9.jar, rootPackageName=null), RestrictedURL(url=file:/Users/peter.li/Desktop/obligation-cordapp/workflows/build/mock-network/20230131-073957.370-ECD4BC5405C34C06/nodes/0/cordapps/contracts-1.0.jar, rootPackageName=null), RestrictedURL(url=file:/Users/peter.li/Desktop/obligation-cordapp/workflows/build/mock-network/20230131-073957.370-ECD4BC5405C34C06/nodes/0/cordapps/workflows-1.0.jar, rootPackageName=null) {}
[INFO ] 2023-01-31T07:40:10,594Z [Test worker] cordapp.JarScanningCordappLoader. - Scanning CorDapp in file:/Users/peter.li/Desktop/obligation-cordapp/workflows/build/mock-network/20230131-073957.370-ECD4BC5405C34C06/nodes/0/cordapps/accounts-contracts-1.0.jar {}
[INFO ] 2023-01-31T07:40:10,703Z [Test worker] cordapp.JarScanningCordappLoader. - Scanning CorDapp in file:/Users/peter.li/Desktop/obligation-cordapp/workflows/build/mock-network/20230131-073957.370-ECD4BC5405C34C06/nodes/0/cordapps/accounts-workflows-1.0.jar {}
[INFO ] 2023-01-31T07:40:10,867Z [Test worker] cordapp.JarScanningCordappLoader. - Scanning CorDapp in file:/Users/peter.li/Desktop/obligation-cordapp/workflows/build/mock-network/20230131-073957.370-ECD4BC5405C34C06/nodes/0/cordapps/corda-finance-contracts-4.9.jar {}
[INFO ] 2023-01-31T07:40:11,008Z [Test worker] cordapp.JarScanningCordappLoader. - Scanning CorDapp in file:/Users/peter.li/Desktop/obligation-cordapp/workflows/build/mock-network/20230131-073957.370-ECD4BC5405C34C06/nodes/0/cordapps/contracts-1.0.jar {}
[INFO ] 2023-01-31T07:40:11,019Z [Test worker] cordapp.JarScanningCordappLoader. - Scanning CorDapp in file:/Users/peter.li/Desktop/obligation-cordapp/workflows/build/mock-network/20230131-073957.370-ECD4BC5405C34C06/nodes/0/cordapps/workflows-1.0.jar {}
[INFO ] 2023-01-31T07:40:12,501Z [Test worker] internal.InternalMockNetwork$MockNode. - MessagingService active change to: false {}
[INFO ] 2023-01-31T07:40:12,686Z [Test worker] internal.InternalMockNetwork$MockNode. - Flow external operation executor has a max of 2 threads {}
[INFO ] 2023-01-31T07:40:12,733Z [Test worker] internal.InternalMockNetwork$MockNode. - Node starting up ... {}
[INFO ] 2023-01-31T07:40:12,752Z [Test worker] internal.KeyStoreHandler. - Loaded trusted root certificate: DL7fwxLm5xbiMD8adUuYTsPZHAict46Ng4w6RNcySt5vAw, alias: cordarootca {}
[INFO ] 2023-01-31T07:40:12,755Z [Test worker] internal.KeyStoreHandler. - Loaded node identity key: DL4Tc2LGbxqqnnKbmj6bKEwhWzJ8uEQ8GP9yEGkmMXgpUY, alias: identity-private-key {}
[INFO ] 2023-01-31T07:40:12,857Z [Test worker] internal.NodeFlowManager. - Registered com.r3.corda.lib.accounts.workflows.flows.ShareStateAndSyncAccounts to initiate com.r3.corda.lib.accounts.workflows.flows.ReceiveStateAndSyncAccounts (version 1) {}
[INFO ] 2023-01-31T07:40:12,857Z [Test worker] internal.NodeFlowManager. - Registered com.r3.corda.lib.accounts.workflows.flows.ShareStateWithAccount to initiate com.r3.corda.lib.accounts.workflows.flows.ReceiveStateForAccount (version 1) {}
[INFO ] 2023-01-31T07:40:12,857Z [Test worker] internal.NodeFlowManager. - Registered com.r3.corda.lib.accounts.workflows.flows.RequestAccountInfo to initiate com.r3.corda.lib.accounts.workflows.flows.RequestAccountInfoHandler (version 1) {}
[INFO ] 2023-01-31T07:40:12,858Z [Test worker] internal.NodeFlowManager. - Registered com.r3.corda.lib.accounts.workflows.flows.RequestKeyForAccount to initiate com.r3.corda.lib.accounts.workflows.flows.SendKeyForAccount (version 1) {}
[INFO ] 2023-01-31T07:40:12,858Z [Test worker] internal.NodeFlowManager. - Registered com.r3.corda.lib.accounts.workflows.flows.ShareAccountInfo to initiate com.r3.corda.lib.accounts.workflows.flows.ShareAccountInfoHandler (version 1) {}
[INFO ] 2023-01-31T07:40:12,859Z [Test worker] internal.NodeFlowManager. - Registered net.corda.samples.obligation.flows.IOUIssueFlow to initiate net.corda.samples.obligation.flows.IOUIssueFlowResponder (version 1) {}
[INFO ] 2023-01-31T07:40:12,861Z [Test worker] internal.NodeFlowManager. - Registered net.corda.samples.obligation.flows.IOUSettleFlow to initiate net.corda.samples.obligation.flows.IOUSettleFlowResponder (version 1) {}
[INFO ] 2023-01-31T07:40:12,861Z [Test worker] internal.NodeFlowManager. - Registered net.corda.samples.obligation.flows.IOUTransferFlow to initiate net.corda.samples.obligation.flows.IOUTransferFlowResponder (version 1) {}
[INFO ] 2023-01-31T07:40:12,862Z [Test worker] internal.NodeFlowManager. - Registered net.corda.samples.obligation.flows.SyncKey to initiate net.corda.samples.obligation.flows.SyncKeyResponder (version 1) {}
[INFO ] 2023-01-31T07:40:12,933Z [Test worker] internal.InternalMockNetwork$MockNode. - Loaded network parameters: NetworkParameters {
      minimumPlatformVersion=4
      notaries=[NotaryInfo(identity=O=Notary, L=London, C=GB, validating=true)]
      maxMessageSize=10485760
      maxTransactionSize=524288000
      whitelistedContractImplementations {
        
      }
      eventHorizon=PT720H
      packageOwnership {
        
      }
      modifiedTime=2023-01-31T07:39:57.111Z
      epoch=1
  } {}
[INFO ] 2023-01-31T07:40:18,281Z [Test worker] internal.InternalMockNetwork$MockNode. - Connected to H2 database. {}
[INFO ] 2023-01-31T07:40:18,338Z [Test worker] persistence.HibernateConfiguration. - Init HibernateConfiguration for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1), AccountsContractsSchemaV1(name=com.r3.corda.lib.accounts.contracts.internal.schemas.AccountsContractsSchema, version=1), AccountsWorkflowsSchemaV1(name=com.r3.corda.lib.accounts.workflows.internal.schemas.AccountsWorkflowsSchema, version=1), CashSchemaV1(name=net.corda.finance.schemas.CashSchema, version=1), CommercialPaperSchemaV1(name=net.corda.finance.schemas.CommercialPaperSchema, version=1), JPANotarySchemaV1(name=net.corda.notary.jpa.JPANotarySchema, version=1)] {}
[INFO ] 2023-01-31T07:40:18,342Z [Test worker] factory.BaseSessionFactoryFactory. - Creating session factory for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1), AccountsContractsSchemaV1(name=com.r3.corda.lib.accounts.contracts.internal.schemas.AccountsContractsSchema, version=1), AccountsWorkflowsSchemaV1(name=com.r3.corda.lib.accounts.workflows.internal.schemas.AccountsWorkflowsSchema, version=1), CashSchemaV1(name=net.corda.finance.schemas.CashSchema, version=1), CommercialPaperSchemaV1(name=net.corda.finance.schemas.CommercialPaperSchema, version=1), JPANotarySchemaV1(name=net.corda.notary.jpa.JPANotarySchema, version=1)] {}
[INFO ] 2023-01-31T07:40:20,500Z [Test worker] factory.BaseSessionFactoryFactory. - Created session factory for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1), AccountsContractsSchemaV1(name=com.r3.corda.lib.accounts.contracts.internal.schemas.AccountsContractsSchema, version=1), AccountsWorkflowsSchemaV1(name=com.r3.corda.lib.accounts.workflows.internal.schemas.AccountsWorkflowsSchema, version=1), CashSchemaV1(name=net.corda.finance.schemas.CashSchema, version=1), CommercialPaperSchemaV1(name=net.corda.finance.schemas.CommercialPaperSchema, version=1), JPANotarySchemaV1(name=net.corda.notary.jpa.JPANotarySchema, version=1)] {}
[INFO ] 2023-01-31T07:40:20,762Z [Test worker] internal.InternalMockNetwork$MockNode. - Node-info has changed so submitting update. Old node-info was null {}
[INFO ] 2023-01-31T07:40:20,772Z [Test worker] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Notary, L=London, C=GB], platformVersion=11, serial=1675150820762), owningKey=DL4Tc2LGbxqqnnKbmj6bKEwhWzJ8uEQ8GP9yEGkmMXgpUY {}
[INFO ] 2023-01-31T07:40:20,772Z [Test worker] network.PersistentNetworkMapCache. - No previous node found for O=Notary, L=London, C=GB {}
[INFO ] 2023-01-31T07:40:20,966Z [Test worker] internal.InternalMockNetwork$MockNode. - New node-info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Notary, L=London, C=GB], platformVersion=11, serial=1675150820762) {}
[INFO ] 2023-01-31T07:40:21,019Z [Test worker] network.NetworkMapUpdater. - Auto-accept enabled for network parameter changes which modify only: [epoch, modifiedTime, packageOwnership, whitelistedContractImplementations] {}
[INFO ] 2023-01-31T07:40:21,052Z [Test worker] internal.MockNodeMessagingService. - Status change to true {}
[INFO ] 2023-01-31T07:40:21,062Z [Test worker] internal.InternalMockNetwork$MockNode. - MessagingService active change to: true {}
[INFO ] 2023-01-31T07:40:21,116Z [MockNode-1-2] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Notary, L=London, C=GB], platformVersion=11, serial=1675150820762), owningKey=DL4Tc2LGbxqqnnKbmj6bKEwhWzJ8uEQ8GP9yEGkmMXgpUY {}
[INFO ] 2023-01-31T07:40:21,116Z [MockNode-1-2] network.PersistentNetworkMapCache. - Previous node was identical to incoming one - doing nothing {}
[INFO ] 2023-01-31T07:40:21,212Z [Test worker] persistence.NodeAttachmentService. - Stored new attachment: id=D370FD972C7E07CE73F4F9B7886D226807F6B16C4EE287398B9C69384109DC14 uploader=app filename=Accounts SDK - States and Contracts {}
[INFO ] 2023-01-31T07:40:21,255Z [Test worker] persistence.NodeAttachmentService. - Stored new attachment: id=BD0C932EAF8B1FE96DCBBF275B914BCD776D14EDC8F97DCEBF7E15DA09C606AE uploader=app filename=Corda Finance Demo {}
[INFO ] 2023-01-31T07:40:21,270Z [Test worker] persistence.NodeAttachmentService. - Stored new attachment: id=8D797B45F40704FA4FD70921F5BC6E2D7B34450D345CE6788D2A87859EF63BD8 uploader=app filename=Obligation Contracts {}
[INFO ] 2023-01-31T07:40:21,284Z [Test worker] internal.InternalMockNetwork$MockNode. - Installed com.r3.corda.lib.accounts.workflows.services.KeyManagementBackedAccountService Corda service {}
[INFO ] 2023-01-31T07:40:21,284Z [Test worker] utilities.NotaryLoader. - Starting notary service: class net.corda.notary.jpa.JPANotaryService {}
[INFO ] 2023-01-31T07:40:22,036Z [Test worker] statemachine.SingleThreadedStateMachineManager. - Node ready, info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Notary, L=London, C=GB], platformVersion=11, serial=1675150820762) {}
[INFO ] 2023-01-31T07:40:22,047Z [Test worker] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Notary, L=London, C=GB], platformVersion=11, serial=1675150820762), owningKey=DL4Tc2LGbxqqnnKbmj6bKEwhWzJ8uEQ8GP9yEGkmMXgpUY {}
[INFO ] 2023-01-31T07:40:22,047Z [Test worker] network.PersistentNetworkMapCache. - Previous node was identical to incoming one - doing nothing {}
[INFO ] 2023-01-31T07:40:22,048Z [Test worker] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Notary, L=London, C=GB], platformVersion=11, serial=1675150820762), owningKey=DL4Tc2LGbxqqnnKbmj6bKEwhWzJ8uEQ8GP9yEGkmMXgpUY {}
[INFO ] 2023-01-31T07:40:22,048Z [Test worker] network.PersistentNetworkMapCache. - Previous node was identical to incoming one - doing nothing {}
[INFO ] 2023-01-31T07:40:22,069Z [Test worker] cordapp.JarScanningCordappLoader. - Looking for CorDapps in [build/mock-network/20230131-073957.370-ECD4BC5405C34C06/nodes/1/cordapps] {}
[INFO ] 2023-01-31T07:40:22,070Z [Test worker] cordapp.JarScanningCordappLoader. - Loading CorDapps from RestrictedURL(url=file:/Users/peter.li/Desktop/obligation-cordapp/workflows/build/mock-network/20230131-073957.370-ECD4BC5405C34C06/nodes/1/cordapps/accounts-contracts-1.0.jar, rootPackageName=null), RestrictedURL(url=file:/Users/peter.li/Desktop/obligation-cordapp/workflows/build/mock-network/20230131-073957.370-ECD4BC5405C34C06/nodes/1/cordapps/accounts-workflows-1.0.jar, rootPackageName=null), RestrictedURL(url=file:/Users/peter.li/Desktop/obligation-cordapp/workflows/build/mock-network/20230131-073957.370-ECD4BC5405C34C06/nodes/1/cordapps/corda-finance-contracts-4.9.jar, rootPackageName=null), RestrictedURL(url=file:/Users/peter.li/Desktop/obligation-cordapp/workflows/build/mock-network/20230131-073957.370-ECD4BC5405C34C06/nodes/1/cordapps/contracts-1.0.jar, rootPackageName=null), RestrictedURL(url=file:/Users/peter.li/Desktop/obligation-cordapp/workflows/build/mock-network/20230131-073957.370-ECD4BC5405C34C06/nodes/1/cordapps/workflows-1.0.jar, rootPackageName=null) {}
[INFO ] 2023-01-31T07:40:22,070Z [Test worker] cordapp.JarScanningCordappLoader. - Scanning CorDapp in file:/Users/peter.li/Desktop/obligation-cordapp/workflows/build/mock-network/20230131-073957.370-ECD4BC5405C34C06/nodes/1/cordapps/accounts-contracts-1.0.jar {}
[INFO ] 2023-01-31T07:40:22,094Z [Test worker] cordapp.JarScanningCordappLoader. - Scanning CorDapp in file:/Users/peter.li/Desktop/obligation-cordapp/workflows/build/mock-network/20230131-073957.370-ECD4BC5405C34C06/nodes/1/cordapps/accounts-workflows-1.0.jar {}
[INFO ] 2023-01-31T07:40:22,105Z [Test worker] cordapp.JarScanningCordappLoader. - Scanning CorDapp in file:/Users/peter.li/Desktop/obligation-cordapp/workflows/build/mock-network/20230131-073957.370-ECD4BC5405C34C06/nodes/1/cordapps/corda-finance-contracts-4.9.jar {}
[INFO ] 2023-01-31T07:40:22,120Z [Test worker] cordapp.JarScanningCordappLoader. - Scanning CorDapp in file:/Users/peter.li/Desktop/obligation-cordapp/workflows/build/mock-network/20230131-073957.370-ECD4BC5405C34C06/nodes/1/cordapps/contracts-1.0.jar {}
[INFO ] 2023-01-31T07:40:22,126Z [Test worker] cordapp.JarScanningCordappLoader. - Scanning CorDapp in file:/Users/peter.li/Desktop/obligation-cordapp/workflows/build/mock-network/20230131-073957.370-ECD4BC5405C34C06/nodes/1/cordapps/workflows-1.0.jar {}
[INFO ] 2023-01-31T07:40:22,163Z [Test worker] internal.InternalMockNetwork$MockNode. - MessagingService active change to: false {}
[INFO ] 2023-01-31T07:40:22,164Z [Test worker] internal.InternalMockNetwork$MockNode. - Flow external operation executor has a max of 2 threads {}
[INFO ] 2023-01-31T07:40:22,166Z [Test worker] internal.InternalMockNetwork$MockNode. - Node starting up ... {}
[INFO ] 2023-01-31T07:40:22,216Z [Test worker] internal.KeyStoreHandler. - Loaded trusted root certificate: DL7fwxLm5xbiMD8adUuYTsPZHAict46Ng4w6RNcySt5vAw, alias: cordarootca {}
[INFO ] 2023-01-31T07:40:22,216Z [Test worker] internal.KeyStoreHandler. - Loaded node identity key: DL4ZoP3RgkGW15CX3aGiP8qB4W12hkUm2BTVy9zQmzdzVm, alias: identity-private-key {}
[INFO ] 2023-01-31T07:40:22,223Z [Test worker] internal.NodeFlowManager. - Registered com.r3.corda.lib.accounts.workflows.flows.ShareStateAndSyncAccounts to initiate com.r3.corda.lib.accounts.workflows.flows.ReceiveStateAndSyncAccounts (version 1) {}
[INFO ] 2023-01-31T07:40:22,223Z [Test worker] internal.NodeFlowManager. - Registered com.r3.corda.lib.accounts.workflows.flows.ShareStateWithAccount to initiate com.r3.corda.lib.accounts.workflows.flows.ReceiveStateForAccount (version 1) {}
[INFO ] 2023-01-31T07:40:22,223Z [Test worker] internal.NodeFlowManager. - Registered com.r3.corda.lib.accounts.workflows.flows.RequestAccountInfo to initiate com.r3.corda.lib.accounts.workflows.flows.RequestAccountInfoHandler (version 1) {}
[INFO ] 2023-01-31T07:40:22,223Z [Test worker] internal.NodeFlowManager. - Registered com.r3.corda.lib.accounts.workflows.flows.RequestKeyForAccount to initiate com.r3.corda.lib.accounts.workflows.flows.SendKeyForAccount (version 1) {}
[INFO ] 2023-01-31T07:40:22,223Z [Test worker] internal.NodeFlowManager. - Registered com.r3.corda.lib.accounts.workflows.flows.ShareAccountInfo to initiate com.r3.corda.lib.accounts.workflows.flows.ShareAccountInfoHandler (version 1) {}
[INFO ] 2023-01-31T07:40:22,223Z [Test worker] internal.NodeFlowManager. - Registered net.corda.samples.obligation.flows.IOUIssueFlow to initiate net.corda.samples.obligation.flows.IOUIssueFlowResponder (version 1) {}
[INFO ] 2023-01-31T07:40:22,223Z [Test worker] internal.NodeFlowManager. - Registered net.corda.samples.obligation.flows.IOUSettleFlow to initiate net.corda.samples.obligation.flows.IOUSettleFlowResponder (version 1) {}
[INFO ] 2023-01-31T07:40:22,223Z [Test worker] internal.NodeFlowManager. - Registered net.corda.samples.obligation.flows.IOUTransferFlow to initiate net.corda.samples.obligation.flows.IOUTransferFlowResponder (version 1) {}
[INFO ] 2023-01-31T07:40:22,223Z [Test worker] internal.NodeFlowManager. - Registered net.corda.samples.obligation.flows.SyncKey to initiate net.corda.samples.obligation.flows.SyncKeyResponder (version 1) {}
[INFO ] 2023-01-31T07:40:22,230Z [Test worker] internal.InternalMockNetwork$MockNode. - Loaded network parameters: NetworkParameters {
      minimumPlatformVersion=4
      notaries=[NotaryInfo(identity=O=Notary, L=London, C=GB, validating=true)]
      maxMessageSize=10485760
      maxTransactionSize=524288000
      whitelistedContractImplementations {
        
      }
      eventHorizon=PT720H
      packageOwnership {
        
      }
      modifiedTime=2023-01-31T07:39:57.111Z
      epoch=1
  } {}
[INFO ] 2023-01-31T07:40:22,995Z [Test worker] internal.InternalMockNetwork$MockNode. - Connected to H2 database. {}
[INFO ] 2023-01-31T07:40:22,996Z [Test worker] persistence.HibernateConfiguration. - Init HibernateConfiguration for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1), AccountsContractsSchemaV1(name=com.r3.corda.lib.accounts.contracts.internal.schemas.AccountsContractsSchema, version=1), AccountsWorkflowsSchemaV1(name=com.r3.corda.lib.accounts.workflows.internal.schemas.AccountsWorkflowsSchema, version=1), CashSchemaV1(name=net.corda.finance.schemas.CashSchema, version=1), CommercialPaperSchemaV1(name=net.corda.finance.schemas.CommercialPaperSchema, version=1)] {}
[INFO ] 2023-01-31T07:40:22,996Z [Test worker] factory.BaseSessionFactoryFactory. - Creating session factory for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1), AccountsContractsSchemaV1(name=com.r3.corda.lib.accounts.contracts.internal.schemas.AccountsContractsSchema, version=1), AccountsWorkflowsSchemaV1(name=com.r3.corda.lib.accounts.workflows.internal.schemas.AccountsWorkflowsSchema, version=1), CashSchemaV1(name=net.corda.finance.schemas.CashSchema, version=1), CommercialPaperSchemaV1(name=net.corda.finance.schemas.CommercialPaperSchema, version=1)] {}
[INFO ] 2023-01-31T07:40:23,151Z [Test worker] factory.BaseSessionFactoryFactory. - Created session factory for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1), AccountsContractsSchemaV1(name=com.r3.corda.lib.accounts.contracts.internal.schemas.AccountsContractsSchema, version=1), AccountsWorkflowsSchemaV1(name=com.r3.corda.lib.accounts.workflows.internal.schemas.AccountsWorkflowsSchema, version=1), CashSchemaV1(name=net.corda.finance.schemas.CashSchema, version=1), CommercialPaperSchemaV1(name=net.corda.finance.schemas.CommercialPaperSchema, version=1)] {}
[INFO ] 2023-01-31T07:40:23,155Z [Test worker] internal.InternalMockNetwork$MockNode. - Node-info has changed so submitting update. Old node-info was null {}
[INFO ] 2023-01-31T07:40:23,159Z [Test worker] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 1, L=London, C=GB], platformVersion=11, serial=1675150823155), owningKey=DL4ZoP3RgkGW15CX3aGiP8qB4W12hkUm2BTVy9zQmzdzVm {}
[INFO ] 2023-01-31T07:40:23,159Z [Test worker] network.PersistentNetworkMapCache. - No previous node found for O=Mock Company 1, L=London, C=GB {}
[INFO ] 2023-01-31T07:40:23,167Z [Test worker] internal.InternalMockNetwork$MockNode. - New node-info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 1, L=London, C=GB], platformVersion=11, serial=1675150823155) {}
[INFO ] 2023-01-31T07:40:23,174Z [Test worker] network.NetworkMapUpdater. - Auto-accept enabled for network parameter changes which modify only: [epoch, modifiedTime, packageOwnership, whitelistedContractImplementations] {}
[INFO ] 2023-01-31T07:40:23,175Z [Test worker] internal.MockNodeMessagingService. - Status change to true {}
[INFO ] 2023-01-31T07:40:23,175Z [Test worker] internal.InternalMockNetwork$MockNode. - MessagingService active change to: true {}
[INFO ] 2023-01-31T07:40:23,187Z [MockNode-2-2] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 1, L=London, C=GB], platformVersion=11, serial=1675150823155), owningKey=DL4ZoP3RgkGW15CX3aGiP8qB4W12hkUm2BTVy9zQmzdzVm {}
[INFO ] 2023-01-31T07:40:23,187Z [MockNode-2-2] network.PersistentNetworkMapCache. - Previous node was identical to incoming one - doing nothing {}
[INFO ] 2023-01-31T07:40:23,214Z [Test worker] persistence.NodeAttachmentService. - Stored new attachment: id=D370FD972C7E07CE73F4F9B7886D226807F6B16C4EE287398B9C69384109DC14 uploader=app filename=Accounts SDK - States and Contracts {}
[INFO ] 2023-01-31T07:40:23,262Z [Test worker] persistence.NodeAttachmentService. - Stored new attachment: id=BD0C932EAF8B1FE96DCBBF275B914BCD776D14EDC8F97DCEBF7E15DA09C606AE uploader=app filename=Corda Finance Demo {}
[INFO ] 2023-01-31T07:40:23,309Z [Test worker] persistence.NodeAttachmentService. - Stored new attachment: id=8D797B45F40704FA4FD70921F5BC6E2D7B34450D345CE6788D2A87859EF63BD8 uploader=app filename=Obligation Contracts {}
[INFO ] 2023-01-31T07:40:23,314Z [Test worker] internal.InternalMockNetwork$MockNode. - Installed com.r3.corda.lib.accounts.workflows.services.KeyManagementBackedAccountService Corda service {}
[INFO ] 2023-01-31T07:40:23,345Z [Test worker] statemachine.SingleThreadedStateMachineManager. - Node ready, info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 1, L=London, C=GB], platformVersion=11, serial=1675150823155) {}
[INFO ] 2023-01-31T07:40:23,348Z [Test worker] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Notary, L=London, C=GB], platformVersion=11, serial=1675150820762), owningKey=DL4Tc2LGbxqqnnKbmj6bKEwhWzJ8uEQ8GP9yEGkmMXgpUY {}
[INFO ] 2023-01-31T07:40:23,348Z [Test worker] network.PersistentNetworkMapCache. - No previous node found for O=Notary, L=London, C=GB {}
[INFO ] 2023-01-31T07:40:23,364Z [Test worker] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 1, L=London, C=GB], platformVersion=11, serial=1675150823155), owningKey=DL4ZoP3RgkGW15CX3aGiP8qB4W12hkUm2BTVy9zQmzdzVm {}
[INFO ] 2023-01-31T07:40:23,364Z [Test worker] network.PersistentNetworkMapCache. - No previous node found for O=Mock Company 1, L=London, C=GB {}
[INFO ] 2023-01-31T07:40:23,375Z [Test worker] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 1, L=London, C=GB], platformVersion=11, serial=1675150823155), owningKey=DL4ZoP3RgkGW15CX3aGiP8qB4W12hkUm2BTVy9zQmzdzVm {}
[INFO ] 2023-01-31T07:40:23,375Z [Test worker] network.PersistentNetworkMapCache. - Previous node was identical to incoming one - doing nothing {}
[INFO ] 2023-01-31T07:40:23,375Z [Test worker] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 1, L=London, C=GB], platformVersion=11, serial=1675150823155), owningKey=DL4ZoP3RgkGW15CX3aGiP8qB4W12hkUm2BTVy9zQmzdzVm {}
[INFO ] 2023-01-31T07:40:23,375Z [Test worker] network.PersistentNetworkMapCache. - Previous node was identical to incoming one - doing nothing {}
[INFO ] 2023-01-31T07:40:23,390Z [Test worker] cordapp.JarScanningCordappLoader. - Looking for CorDapps in [build/mock-network/20230131-073957.370-ECD4BC5405C34C06/nodes/2/cordapps] {}
[INFO ] 2023-01-31T07:40:23,391Z [Test worker] cordapp.JarScanningCordappLoader. - Loading CorDapps from RestrictedURL(url=file:/Users/peter.li/Desktop/obligation-cordapp/workflows/build/mock-network/20230131-073957.370-ECD4BC5405C34C06/nodes/2/cordapps/accounts-contracts-1.0.jar, rootPackageName=null), RestrictedURL(url=file:/Users/peter.li/Desktop/obligation-cordapp/workflows/build/mock-network/20230131-073957.370-ECD4BC5405C34C06/nodes/2/cordapps/accounts-workflows-1.0.jar, rootPackageName=null), RestrictedURL(url=file:/Users/peter.li/Desktop/obligation-cordapp/workflows/build/mock-network/20230131-073957.370-ECD4BC5405C34C06/nodes/2/cordapps/corda-finance-contracts-4.9.jar, rootPackageName=null), RestrictedURL(url=file:/Users/peter.li/Desktop/obligation-cordapp/workflows/build/mock-network/20230131-073957.370-ECD4BC5405C34C06/nodes/2/cordapps/contracts-1.0.jar, rootPackageName=null), RestrictedURL(url=file:/Users/peter.li/Desktop/obligation-cordapp/workflows/build/mock-network/20230131-073957.370-ECD4BC5405C34C06/nodes/2/cordapps/workflows-1.0.jar, rootPackageName=null) {}
[INFO ] 2023-01-31T07:40:23,391Z [Test worker] cordapp.JarScanningCordappLoader. - Scanning CorDapp in file:/Users/peter.li/Desktop/obligation-cordapp/workflows/build/mock-network/20230131-073957.370-ECD4BC5405C34C06/nodes/2/cordapps/accounts-contracts-1.0.jar {}
[INFO ] 2023-01-31T07:40:23,415Z [Test worker] cordapp.JarScanningCordappLoader. - Scanning CorDapp in file:/Users/peter.li/Desktop/obligation-cordapp/workflows/build/mock-network/20230131-073957.370-ECD4BC5405C34C06/nodes/2/cordapps/accounts-workflows-1.0.jar {}
[INFO ] 2023-01-31T07:40:23,427Z [Test worker] cordapp.JarScanningCordappLoader. - Scanning CorDapp in file:/Users/peter.li/Desktop/obligation-cordapp/workflows/build/mock-network/20230131-073957.370-ECD4BC5405C34C06/nodes/2/cordapps/corda-finance-contracts-4.9.jar {}
[INFO ] 2023-01-31T07:40:23,438Z [Test worker] cordapp.JarScanningCordappLoader. - Scanning CorDapp in file:/Users/peter.li/Desktop/obligation-cordapp/workflows/build/mock-network/20230131-073957.370-ECD4BC5405C34C06/nodes/2/cordapps/contracts-1.0.jar {}
[INFO ] 2023-01-31T07:40:23,444Z [Test worker] cordapp.JarScanningCordappLoader. - Scanning CorDapp in file:/Users/peter.li/Desktop/obligation-cordapp/workflows/build/mock-network/20230131-073957.370-ECD4BC5405C34C06/nodes/2/cordapps/workflows-1.0.jar {}
[INFO ] 2023-01-31T07:40:23,477Z [Test worker] internal.InternalMockNetwork$MockNode. - MessagingService active change to: false {}
[INFO ] 2023-01-31T07:40:23,478Z [Test worker] internal.InternalMockNetwork$MockNode. - Flow external operation executor has a max of 2 threads {}
[INFO ] 2023-01-31T07:40:23,480Z [Test worker] internal.InternalMockNetwork$MockNode. - Node starting up ... {}
[INFO ] 2023-01-31T07:40:23,540Z [Test worker] internal.KeyStoreHandler. - Loaded trusted root certificate: DL7fwxLm5xbiMD8adUuYTsPZHAict46Ng4w6RNcySt5vAw, alias: cordarootca {}
[INFO ] 2023-01-31T07:40:23,540Z [Test worker] internal.KeyStoreHandler. - Loaded node identity key: DLETsrvR69hBfBw2G6DxAXeb2fmrHjqwcL4pdhsXzmugru, alias: identity-private-key {}
[INFO ] 2023-01-31T07:40:23,550Z [Test worker] internal.NodeFlowManager. - Registered com.r3.corda.lib.accounts.workflows.flows.ShareStateAndSyncAccounts to initiate com.r3.corda.lib.accounts.workflows.flows.ReceiveStateAndSyncAccounts (version 1) {}
[INFO ] 2023-01-31T07:40:23,550Z [Test worker] internal.NodeFlowManager. - Registered com.r3.corda.lib.accounts.workflows.flows.ShareStateWithAccount to initiate com.r3.corda.lib.accounts.workflows.flows.ReceiveStateForAccount (version 1) {}
[INFO ] 2023-01-31T07:40:23,550Z [Test worker] internal.NodeFlowManager. - Registered com.r3.corda.lib.accounts.workflows.flows.RequestAccountInfo to initiate com.r3.corda.lib.accounts.workflows.flows.RequestAccountInfoHandler (version 1) {}
[INFO ] 2023-01-31T07:40:23,550Z [Test worker] internal.NodeFlowManager. - Registered com.r3.corda.lib.accounts.workflows.flows.RequestKeyForAccount to initiate com.r3.corda.lib.accounts.workflows.flows.SendKeyForAccount (version 1) {}
[INFO ] 2023-01-31T07:40:23,550Z [Test worker] internal.NodeFlowManager. - Registered com.r3.corda.lib.accounts.workflows.flows.ShareAccountInfo to initiate com.r3.corda.lib.accounts.workflows.flows.ShareAccountInfoHandler (version 1) {}
[INFO ] 2023-01-31T07:40:23,550Z [Test worker] internal.NodeFlowManager. - Registered net.corda.samples.obligation.flows.IOUIssueFlow to initiate net.corda.samples.obligation.flows.IOUIssueFlowResponder (version 1) {}
[INFO ] 2023-01-31T07:40:23,550Z [Test worker] internal.NodeFlowManager. - Registered net.corda.samples.obligation.flows.IOUSettleFlow to initiate net.corda.samples.obligation.flows.IOUSettleFlowResponder (version 1) {}
[INFO ] 2023-01-31T07:40:23,550Z [Test worker] internal.NodeFlowManager. - Registered net.corda.samples.obligation.flows.IOUTransferFlow to initiate net.corda.samples.obligation.flows.IOUTransferFlowResponder (version 1) {}
[INFO ] 2023-01-31T07:40:23,550Z [Test worker] internal.NodeFlowManager. - Registered net.corda.samples.obligation.flows.SyncKey to initiate net.corda.samples.obligation.flows.SyncKeyResponder (version 1) {}
[INFO ] 2023-01-31T07:40:23,558Z [Test worker] internal.InternalMockNetwork$MockNode. - Loaded network parameters: NetworkParameters {
      minimumPlatformVersion=4
      notaries=[NotaryInfo(identity=O=Notary, L=London, C=GB, validating=true)]
      maxMessageSize=10485760
      maxTransactionSize=524288000
      whitelistedContractImplementations {
        
      }
      eventHorizon=PT720H
      packageOwnership {
        
      }
      modifiedTime=2023-01-31T07:39:57.111Z
      epoch=1
  } {}
[INFO ] 2023-01-31T07:40:24,385Z [Test worker] internal.InternalMockNetwork$MockNode. - Connected to H2 database. {}
[INFO ] 2023-01-31T07:40:24,386Z [Test worker] persistence.HibernateConfiguration. - Init HibernateConfiguration for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1), AccountsContractsSchemaV1(name=com.r3.corda.lib.accounts.contracts.internal.schemas.AccountsContractsSchema, version=1), AccountsWorkflowsSchemaV1(name=com.r3.corda.lib.accounts.workflows.internal.schemas.AccountsWorkflowsSchema, version=1), CashSchemaV1(name=net.corda.finance.schemas.CashSchema, version=1), CommercialPaperSchemaV1(name=net.corda.finance.schemas.CommercialPaperSchema, version=1)] {}
[INFO ] 2023-01-31T07:40:24,386Z [Test worker] factory.BaseSessionFactoryFactory. - Creating session factory for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1), AccountsContractsSchemaV1(name=com.r3.corda.lib.accounts.contracts.internal.schemas.AccountsContractsSchema, version=1), AccountsWorkflowsSchemaV1(name=com.r3.corda.lib.accounts.workflows.internal.schemas.AccountsWorkflowsSchema, version=1), CashSchemaV1(name=net.corda.finance.schemas.CashSchema, version=1), CommercialPaperSchemaV1(name=net.corda.finance.schemas.CommercialPaperSchema, version=1)] {}
[INFO ] 2023-01-31T07:40:24,529Z [Test worker] factory.BaseSessionFactoryFactory. - Created session factory for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1), AccountsContractsSchemaV1(name=com.r3.corda.lib.accounts.contracts.internal.schemas.AccountsContractsSchema, version=1), AccountsWorkflowsSchemaV1(name=com.r3.corda.lib.accounts.workflows.internal.schemas.AccountsWorkflowsSchema, version=1), CashSchemaV1(name=net.corda.finance.schemas.CashSchema, version=1), CommercialPaperSchemaV1(name=net.corda.finance.schemas.CommercialPaperSchema, version=1)] {}
[INFO ] 2023-01-31T07:40:24,534Z [Test worker] internal.InternalMockNetwork$MockNode. - Node-info has changed so submitting update. Old node-info was null {}
[INFO ] 2023-01-31T07:40:24,538Z [Test worker] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 2, L=London, C=GB], platformVersion=11, serial=1675150824534), owningKey=DLETsrvR69hBfBw2G6DxAXeb2fmrHjqwcL4pdhsXzmugru {}
[INFO ] 2023-01-31T07:40:24,538Z [Test worker] network.PersistentNetworkMapCache. - No previous node found for O=Mock Company 2, L=London, C=GB {}
[INFO ] 2023-01-31T07:40:24,546Z [Test worker] internal.InternalMockNetwork$MockNode. - New node-info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 2, L=London, C=GB], platformVersion=11, serial=1675150824534) {}
[INFO ] 2023-01-31T07:40:24,554Z [Test worker] network.NetworkMapUpdater. - Auto-accept enabled for network parameter changes which modify only: [epoch, modifiedTime, packageOwnership, whitelistedContractImplementations] {}
[INFO ] 2023-01-31T07:40:24,555Z [Test worker] internal.MockNodeMessagingService. - Status change to true {}
[INFO ] 2023-01-31T07:40:24,555Z [Test worker] internal.InternalMockNetwork$MockNode. - MessagingService active change to: true {}
[INFO ] 2023-01-31T07:40:24,566Z [MockNode-3-2] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 2, L=London, C=GB], platformVersion=11, serial=1675150824534), owningKey=DLETsrvR69hBfBw2G6DxAXeb2fmrHjqwcL4pdhsXzmugru {}
[INFO ] 2023-01-31T07:40:24,566Z [MockNode-3-2] network.PersistentNetworkMapCache. - Previous node was identical to incoming one - doing nothing {}
[INFO ] 2023-01-31T07:40:24,590Z [Test worker] persistence.NodeAttachmentService. - Stored new attachment: id=D370FD972C7E07CE73F4F9B7886D226807F6B16C4EE287398B9C69384109DC14 uploader=app filename=Accounts SDK - States and Contracts {}
[INFO ] 2023-01-31T07:40:24,628Z [Test worker] persistence.NodeAttachmentService. - Stored new attachment: id=BD0C932EAF8B1FE96DCBBF275B914BCD776D14EDC8F97DCEBF7E15DA09C606AE uploader=app filename=Corda Finance Demo {}
[INFO ] 2023-01-31T07:40:24,646Z [Test worker] persistence.NodeAttachmentService. - Stored new attachment: id=8D797B45F40704FA4FD70921F5BC6E2D7B34450D345CE6788D2A87859EF63BD8 uploader=app filename=Obligation Contracts {}
[INFO ] 2023-01-31T07:40:24,649Z [Test worker] internal.InternalMockNetwork$MockNode. - Installed com.r3.corda.lib.accounts.workflows.services.KeyManagementBackedAccountService Corda service {}
[INFO ] 2023-01-31T07:40:24,670Z [Test worker] statemachine.SingleThreadedStateMachineManager. - Node ready, info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 2, L=London, C=GB], platformVersion=11, serial=1675150824534) {}
[INFO ] 2023-01-31T07:40:24,672Z [Test worker] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Notary, L=London, C=GB], platformVersion=11, serial=1675150820762), owningKey=DL4Tc2LGbxqqnnKbmj6bKEwhWzJ8uEQ8GP9yEGkmMXgpUY {}
[INFO ] 2023-01-31T07:40:24,672Z [Test worker] network.PersistentNetworkMapCache. - No previous node found for O=Notary, L=London, C=GB {}
[INFO ] 2023-01-31T07:40:24,682Z [Test worker] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 2, L=London, C=GB], platformVersion=11, serial=1675150824534), owningKey=DLETsrvR69hBfBw2G6DxAXeb2fmrHjqwcL4pdhsXzmugru {}
[INFO ] 2023-01-31T07:40:24,682Z [Test worker] network.PersistentNetworkMapCache. - No previous node found for O=Mock Company 2, L=London, C=GB {}
[INFO ] 2023-01-31T07:40:24,712Z [Test worker] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 1, L=London, C=GB], platformVersion=11, serial=1675150823155), owningKey=DL4ZoP3RgkGW15CX3aGiP8qB4W12hkUm2BTVy9zQmzdzVm {}
[INFO ] 2023-01-31T07:40:24,712Z [Test worker] network.PersistentNetworkMapCache. - No previous node found for O=Mock Company 1, L=London, C=GB {}
[INFO ] 2023-01-31T07:40:24,727Z [Test worker] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 2, L=London, C=GB], platformVersion=11, serial=1675150824534), owningKey=DLETsrvR69hBfBw2G6DxAXeb2fmrHjqwcL4pdhsXzmugru {}
[INFO ] 2023-01-31T07:40:24,728Z [Test worker] network.PersistentNetworkMapCache. - No previous node found for O=Mock Company 2, L=London, C=GB {}
[INFO ] 2023-01-31T07:40:24,740Z [Test worker] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 2, L=London, C=GB], platformVersion=11, serial=1675150824534), owningKey=DLETsrvR69hBfBw2G6DxAXeb2fmrHjqwcL4pdhsXzmugru {}
[INFO ] 2023-01-31T07:40:24,740Z [Test worker] network.PersistentNetworkMapCache. - Previous node was identical to incoming one - doing nothing {}
[INFO ] 2023-01-31T07:40:24,740Z [Test worker] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 2, L=London, C=GB], platformVersion=11, serial=1675150824534), owningKey=DLETsrvR69hBfBw2G6DxAXeb2fmrHjqwcL4pdhsXzmugru {}
[INFO ] 2023-01-31T07:40:24,740Z [Test worker] network.PersistentNetworkMapCache. - Previous node was identical to incoming one - doing nothing {}
[INFO ] 2023-01-31T07:40:24,754Z [Test worker] cordapp.JarScanningCordappLoader. - Looking for CorDapps in [build/mock-network/20230131-073957.370-ECD4BC5405C34C06/nodes/3/cordapps] {}
[INFO ] 2023-01-31T07:40:24,754Z [Test worker] cordapp.JarScanningCordappLoader. - Loading CorDapps from RestrictedURL(url=file:/Users/peter.li/Desktop/obligation-cordapp/workflows/build/mock-network/20230131-073957.370-ECD4BC5405C34C06/nodes/3/cordapps/accounts-contracts-1.0.jar, rootPackageName=null), RestrictedURL(url=file:/Users/peter.li/Desktop/obligation-cordapp/workflows/build/mock-network/20230131-073957.370-ECD4BC5405C34C06/nodes/3/cordapps/accounts-workflows-1.0.jar, rootPackageName=null), RestrictedURL(url=file:/Users/peter.li/Desktop/obligation-cordapp/workflows/build/mock-network/20230131-073957.370-ECD4BC5405C34C06/nodes/3/cordapps/corda-finance-contracts-4.9.jar, rootPackageName=null), RestrictedURL(url=file:/Users/peter.li/Desktop/obligation-cordapp/workflows/build/mock-network/20230131-073957.370-ECD4BC5405C34C06/nodes/3/cordapps/contracts-1.0.jar, rootPackageName=null), RestrictedURL(url=file:/Users/peter.li/Desktop/obligation-cordapp/workflows/build/mock-network/20230131-073957.370-ECD4BC5405C34C06/nodes/3/cordapps/workflows-1.0.jar, rootPackageName=null) {}
[INFO ] 2023-01-31T07:40:24,755Z [Test worker] cordapp.JarScanningCordappLoader. - Scanning CorDapp in file:/Users/peter.li/Desktop/obligation-cordapp/workflows/build/mock-network/20230131-073957.370-ECD4BC5405C34C06/nodes/3/cordapps/accounts-contracts-1.0.jar {}
[INFO ] 2023-01-31T07:40:24,778Z [Test worker] cordapp.JarScanningCordappLoader. - Scanning CorDapp in file:/Users/peter.li/Desktop/obligation-cordapp/workflows/build/mock-network/20230131-073957.370-ECD4BC5405C34C06/nodes/3/cordapps/accounts-workflows-1.0.jar {}
[INFO ] 2023-01-31T07:40:24,785Z [Test worker] cordapp.JarScanningCordappLoader. - Scanning CorDapp in file:/Users/peter.li/Desktop/obligation-cordapp/workflows/build/mock-network/20230131-073957.370-ECD4BC5405C34C06/nodes/3/cordapps/corda-finance-contracts-4.9.jar {}
[INFO ] 2023-01-31T07:40:24,800Z [Test worker] cordapp.JarScanningCordappLoader. - Scanning CorDapp in file:/Users/peter.li/Desktop/obligation-cordapp/workflows/build/mock-network/20230131-073957.370-ECD4BC5405C34C06/nodes/3/cordapps/contracts-1.0.jar {}
[INFO ] 2023-01-31T07:40:24,806Z [Test worker] cordapp.JarScanningCordappLoader. - Scanning CorDapp in file:/Users/peter.li/Desktop/obligation-cordapp/workflows/build/mock-network/20230131-073957.370-ECD4BC5405C34C06/nodes/3/cordapps/workflows-1.0.jar {}
[INFO ] 2023-01-31T07:40:24,827Z [Test worker] internal.InternalMockNetwork$MockNode. - MessagingService active change to: false {}
[INFO ] 2023-01-31T07:40:24,828Z [Test worker] internal.InternalMockNetwork$MockNode. - Flow external operation executor has a max of 2 threads {}
[INFO ] 2023-01-31T07:40:24,830Z [Test worker] internal.InternalMockNetwork$MockNode. - Node starting up ... {}
[INFO ] 2023-01-31T07:40:24,866Z [Test worker] internal.KeyStoreHandler. - Loaded trusted root certificate: DL7fwxLm5xbiMD8adUuYTsPZHAict46Ng4w6RNcySt5vAw, alias: cordarootca {}
[INFO ] 2023-01-31T07:40:24,866Z [Test worker] internal.KeyStoreHandler. - Loaded node identity key: DL5Q7rSXnDfXXR8n5vqz1XBC2fk4NmQKKCZqYnF3WDmQrt, alias: identity-private-key {}
[INFO ] 2023-01-31T07:40:24,872Z [Test worker] internal.NodeFlowManager. - Registered com.r3.corda.lib.accounts.workflows.flows.ShareStateAndSyncAccounts to initiate com.r3.corda.lib.accounts.workflows.flows.ReceiveStateAndSyncAccounts (version 1) {}
[INFO ] 2023-01-31T07:40:24,872Z [Test worker] internal.NodeFlowManager. - Registered com.r3.corda.lib.accounts.workflows.flows.ShareStateWithAccount to initiate com.r3.corda.lib.accounts.workflows.flows.ReceiveStateForAccount (version 1) {}
[INFO ] 2023-01-31T07:40:24,872Z [Test worker] internal.NodeFlowManager. - Registered com.r3.corda.lib.accounts.workflows.flows.RequestAccountInfo to initiate com.r3.corda.lib.accounts.workflows.flows.RequestAccountInfoHandler (version 1) {}
[INFO ] 2023-01-31T07:40:24,872Z [Test worker] internal.NodeFlowManager. - Registered com.r3.corda.lib.accounts.workflows.flows.RequestKeyForAccount to initiate com.r3.corda.lib.accounts.workflows.flows.SendKeyForAccount (version 1) {}
[INFO ] 2023-01-31T07:40:24,872Z [Test worker] internal.NodeFlowManager. - Registered com.r3.corda.lib.accounts.workflows.flows.ShareAccountInfo to initiate com.r3.corda.lib.accounts.workflows.flows.ShareAccountInfoHandler (version 1) {}
[INFO ] 2023-01-31T07:40:24,872Z [Test worker] internal.NodeFlowManager. - Registered net.corda.samples.obligation.flows.IOUIssueFlow to initiate net.corda.samples.obligation.flows.IOUIssueFlowResponder (version 1) {}
[INFO ] 2023-01-31T07:40:24,872Z [Test worker] internal.NodeFlowManager. - Registered net.corda.samples.obligation.flows.IOUSettleFlow to initiate net.corda.samples.obligation.flows.IOUSettleFlowResponder (version 1) {}
[INFO ] 2023-01-31T07:40:24,872Z [Test worker] internal.NodeFlowManager. - Registered net.corda.samples.obligation.flows.IOUTransferFlow to initiate net.corda.samples.obligation.flows.IOUTransferFlowResponder (version 1) {}
[INFO ] 2023-01-31T07:40:24,872Z [Test worker] internal.NodeFlowManager. - Registered net.corda.samples.obligation.flows.SyncKey to initiate net.corda.samples.obligation.flows.SyncKeyResponder (version 1) {}
[INFO ] 2023-01-31T07:40:24,876Z [Test worker] internal.InternalMockNetwork$MockNode. - Loaded network parameters: NetworkParameters {
      minimumPlatformVersion=4
      notaries=[NotaryInfo(identity=O=Notary, L=London, C=GB, validating=true)]
      maxMessageSize=10485760
      maxTransactionSize=524288000
      whitelistedContractImplementations {
        
      }
      eventHorizon=PT720H
      packageOwnership {
        
      }
      modifiedTime=2023-01-31T07:39:57.111Z
      epoch=1
  } {}
[INFO ] 2023-01-31T07:40:25,424Z [Test worker] internal.InternalMockNetwork$MockNode. - Connected to H2 database. {}
[INFO ] 2023-01-31T07:40:25,426Z [Test worker] persistence.HibernateConfiguration. - Init HibernateConfiguration for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1), AccountsContractsSchemaV1(name=com.r3.corda.lib.accounts.contracts.internal.schemas.AccountsContractsSchema, version=1), AccountsWorkflowsSchemaV1(name=com.r3.corda.lib.accounts.workflows.internal.schemas.AccountsWorkflowsSchema, version=1), CashSchemaV1(name=net.corda.finance.schemas.CashSchema, version=1), CommercialPaperSchemaV1(name=net.corda.finance.schemas.CommercialPaperSchema, version=1)] {}
[INFO ] 2023-01-31T07:40:25,426Z [Test worker] factory.BaseSessionFactoryFactory. - Creating session factory for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1), AccountsContractsSchemaV1(name=com.r3.corda.lib.accounts.contracts.internal.schemas.AccountsContractsSchema, version=1), AccountsWorkflowsSchemaV1(name=com.r3.corda.lib.accounts.workflows.internal.schemas.AccountsWorkflowsSchema, version=1), CashSchemaV1(name=net.corda.finance.schemas.CashSchema, version=1), CommercialPaperSchemaV1(name=net.corda.finance.schemas.CommercialPaperSchema, version=1)] {}
[INFO ] 2023-01-31T07:40:25,558Z [Test worker] factory.BaseSessionFactoryFactory. - Created session factory for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1), AccountsContractsSchemaV1(name=com.r3.corda.lib.accounts.contracts.internal.schemas.AccountsContractsSchema, version=1), AccountsWorkflowsSchemaV1(name=com.r3.corda.lib.accounts.workflows.internal.schemas.AccountsWorkflowsSchema, version=1), CashSchemaV1(name=net.corda.finance.schemas.CashSchema, version=1), CommercialPaperSchemaV1(name=net.corda.finance.schemas.CommercialPaperSchema, version=1)] {}
[INFO ] 2023-01-31T07:40:25,561Z [Test worker] internal.InternalMockNetwork$MockNode. - Node-info has changed so submitting update. Old node-info was null {}
[INFO ] 2023-01-31T07:40:25,565Z [Test worker] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 3, L=London, C=GB], platformVersion=11, serial=1675150825562), owningKey=DL5Q7rSXnDfXXR8n5vqz1XBC2fk4NmQKKCZqYnF3WDmQrt {}
[INFO ] 2023-01-31T07:40:25,565Z [Test worker] network.PersistentNetworkMapCache. - No previous node found for O=Mock Company 3, L=London, C=GB {}
[INFO ] 2023-01-31T07:40:25,572Z [Test worker] internal.InternalMockNetwork$MockNode. - New node-info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 3, L=London, C=GB], platformVersion=11, serial=1675150825562) {}
[INFO ] 2023-01-31T07:40:25,578Z [Test worker] network.NetworkMapUpdater. - Auto-accept enabled for network parameter changes which modify only: [epoch, modifiedTime, packageOwnership, whitelistedContractImplementations] {}
[INFO ] 2023-01-31T07:40:25,579Z [Test worker] internal.MockNodeMessagingService. - Status change to true {}
[INFO ] 2023-01-31T07:40:25,579Z [Test worker] internal.InternalMockNetwork$MockNode. - MessagingService active change to: true {}
[INFO ] 2023-01-31T07:40:25,589Z [MockNode-4-2] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 3, L=London, C=GB], platformVersion=11, serial=1675150825562), owningKey=DL5Q7rSXnDfXXR8n5vqz1XBC2fk4NmQKKCZqYnF3WDmQrt {}
[INFO ] 2023-01-31T07:40:25,589Z [MockNode-4-2] network.PersistentNetworkMapCache. - Previous node was identical to incoming one - doing nothing {}
[INFO ] 2023-01-31T07:40:25,610Z [Test worker] persistence.NodeAttachmentService. - Stored new attachment: id=D370FD972C7E07CE73F4F9B7886D226807F6B16C4EE287398B9C69384109DC14 uploader=app filename=Accounts SDK - States and Contracts {}
[INFO ] 2023-01-31T07:40:25,652Z [Test worker] persistence.NodeAttachmentService. - Stored new attachment: id=BD0C932EAF8B1FE96DCBBF275B914BCD776D14EDC8F97DCEBF7E15DA09C606AE uploader=app filename=Corda Finance Demo {}
[INFO ] 2023-01-31T07:40:25,673Z [Test worker] persistence.NodeAttachmentService. - Stored new attachment: id=8D797B45F40704FA4FD70921F5BC6E2D7B34450D345CE6788D2A87859EF63BD8 uploader=app filename=Obligation Contracts {}
[INFO ] 2023-01-31T07:40:25,677Z [Test worker] internal.InternalMockNetwork$MockNode. - Installed com.r3.corda.lib.accounts.workflows.services.KeyManagementBackedAccountService Corda service {}
[INFO ] 2023-01-31T07:40:25,704Z [Test worker] statemachine.SingleThreadedStateMachineManager. - Node ready, info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 3, L=London, C=GB], platformVersion=11, serial=1675150825562) {}
[INFO ] 2023-01-31T07:40:25,706Z [Test worker] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Notary, L=London, C=GB], platformVersion=11, serial=1675150820762), owningKey=DL4Tc2LGbxqqnnKbmj6bKEwhWzJ8uEQ8GP9yEGkmMXgpUY {}
[INFO ] 2023-01-31T07:40:25,706Z [Test worker] network.PersistentNetworkMapCache. - No previous node found for O=Notary, L=London, C=GB {}
[INFO ] 2023-01-31T07:40:25,722Z [Test worker] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 3, L=London, C=GB], platformVersion=11, serial=1675150825562), owningKey=DL5Q7rSXnDfXXR8n5vqz1XBC2fk4NmQKKCZqYnF3WDmQrt {}
[INFO ] 2023-01-31T07:40:25,722Z [Test worker] network.PersistentNetworkMapCache. - No previous node found for O=Mock Company 3, L=London, C=GB {}
[INFO ] 2023-01-31T07:40:25,740Z [Test worker] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 1, L=London, C=GB], platformVersion=11, serial=1675150823155), owningKey=DL4ZoP3RgkGW15CX3aGiP8qB4W12hkUm2BTVy9zQmzdzVm {}
[INFO ] 2023-01-31T07:40:25,740Z [Test worker] network.PersistentNetworkMapCache. - No previous node found for O=Mock Company 1, L=London, C=GB {}
[INFO ] 2023-01-31T07:40:25,754Z [Test worker] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 3, L=London, C=GB], platformVersion=11, serial=1675150825562), owningKey=DL5Q7rSXnDfXXR8n5vqz1XBC2fk4NmQKKCZqYnF3WDmQrt {}
[INFO ] 2023-01-31T07:40:25,754Z [Test worker] network.PersistentNetworkMapCache. - No previous node found for O=Mock Company 3, L=London, C=GB {}
[INFO ] 2023-01-31T07:40:25,768Z [Test worker] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 2, L=London, C=GB], platformVersion=11, serial=1675150824534), owningKey=DLETsrvR69hBfBw2G6DxAXeb2fmrHjqwcL4pdhsXzmugru {}
[INFO ] 2023-01-31T07:40:25,768Z [Test worker] network.PersistentNetworkMapCache. - No previous node found for O=Mock Company 2, L=London, C=GB {}
[INFO ] 2023-01-31T07:40:25,782Z [Test worker] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 3, L=London, C=GB], platformVersion=11, serial=1675150825562), owningKey=DL5Q7rSXnDfXXR8n5vqz1XBC2fk4NmQKKCZqYnF3WDmQrt {}
[INFO ] 2023-01-31T07:40:25,782Z [Test worker] network.PersistentNetworkMapCache. - No previous node found for O=Mock Company 3, L=London, C=GB {}
[INFO ] 2023-01-31T07:40:25,796Z [Test worker] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 3, L=London, C=GB], platformVersion=11, serial=1675150825562), owningKey=DL5Q7rSXnDfXXR8n5vqz1XBC2fk4NmQKKCZqYnF3WDmQrt {}
[INFO ] 2023-01-31T07:40:25,796Z [Test worker] network.PersistentNetworkMapCache. - Previous node was identical to incoming one - doing nothing {}
[INFO ] 2023-01-31T07:40:25,797Z [Test worker] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 3, L=London, C=GB], platformVersion=11, serial=1675150825562), owningKey=DL5Q7rSXnDfXXR8n5vqz1XBC2fk4NmQKKCZqYnF3WDmQrt {}
[INFO ] 2023-01-31T07:40:25,797Z [Test worker] network.PersistentNetworkMapCache. - Previous node was identical to incoming one - doing nothing {}
[WARN ] 2023-01-31T07:40:25,799Z [Test worker] internal.NodeFlowManager. - Multiple flows are registered for InitiatingFlow: class net.corda.samples.obligation.flows.IOUIssueFlow, currently using: class net.corda.samples.obligation.flows.IOUIssueFlowResponder {}
[INFO ] 2023-01-31T07:40:25,799Z [Test worker] internal.NodeFlowManager. - Registered net.corda.samples.obligation.flows.IOUIssueFlow to initiate net.corda.samples.obligation.flows.IOUIssueFlowResponder (version 1) {}
[WARN ] 2023-01-31T07:40:25,805Z [Test worker] internal.NodeFlowManager. - Multiple flows are registered for InitiatingFlow: class net.corda.samples.obligation.flows.IOUIssueFlow, currently using: class net.corda.samples.obligation.flows.IOUIssueFlowResponder {}
[INFO ] 2023-01-31T07:40:25,805Z [Test worker] internal.NodeFlowManager. - Registered net.corda.samples.obligation.flows.IOUIssueFlow to initiate net.corda.samples.obligation.flows.IOUIssueFlowResponder (version 1) {}
[WARN ] 2023-01-31T07:40:25,805Z [Test worker] internal.NodeFlowManager. - Multiple flows are registered for InitiatingFlow: class net.corda.samples.obligation.flows.IOUIssueFlow, currently using: class net.corda.samples.obligation.flows.IOUIssueFlowResponder {}
[INFO ] 2023-01-31T07:40:25,805Z [Test worker] internal.NodeFlowManager. - Registered net.corda.samples.obligation.flows.IOUIssueFlow to initiate net.corda.samples.obligation.flows.IOUIssueFlowResponder (version 1) {}
[WARN ] 2023-01-31T07:40:25,806Z [Test worker] internal.NodeFlowManager. - Multiple flows are registered for InitiatingFlow: class net.corda.samples.obligation.flows.IOUSettleFlow, currently using: class net.corda.samples.obligation.flows.IOUSettleFlowResponder {}
[INFO ] 2023-01-31T07:40:25,806Z [Test worker] internal.NodeFlowManager. - Registered net.corda.samples.obligation.flows.IOUSettleFlow to initiate net.corda.samples.obligation.flows.IOUSettleFlowResponder (version 1) {}
[WARN ] 2023-01-31T07:40:25,806Z [Test worker] internal.NodeFlowManager. - Multiple flows are registered for InitiatingFlow: class net.corda.samples.obligation.flows.IOUSettleFlow, currently using: class net.corda.samples.obligation.flows.IOUSettleFlowResponder {}
[INFO ] 2023-01-31T07:40:25,806Z [Test worker] internal.NodeFlowManager. - Registered net.corda.samples.obligation.flows.IOUSettleFlow to initiate net.corda.samples.obligation.flows.IOUSettleFlowResponder (version 1) {}
[WARN ] 2023-01-31T07:40:25,806Z [Test worker] internal.NodeFlowManager. - Multiple flows are registered for InitiatingFlow: class net.corda.samples.obligation.flows.IOUSettleFlow, currently using: class net.corda.samples.obligation.flows.IOUSettleFlowResponder {}
[INFO ] 2023-01-31T07:40:25,806Z [Test worker] internal.NodeFlowManager. - Registered net.corda.samples.obligation.flows.IOUSettleFlow to initiate net.corda.samples.obligation.flows.IOUSettleFlowResponder (version 1) {}
[INFO ] 2023-01-31T07:40:26,702Z [Mock network] corda.flow. - No need to notarise this transaction. {actor_id=Only For Testing, actor_owning_identity=O=Mock Company 1, L=London, C=GB, actor_store_id=TEST, fiber-id=10000001, flow-id=1f45e4b1-3a83-4ad2-a5d3-c31d51a9271a, invocation_id=9e21caa9-53ce-462a-9f5d-e5d382b35275, invocation_timestamp=2023-01-31T07:40:25.861Z, origin=Only For Testing, session_id=9e21caa9-53ce-462a-9f5d-e5d382b35275, session_timestamp=2023-01-31T07:40:25.861Z, thread-id=854, tx_id=CBC25B4A661C4F24A01CFDD7F45B14A31D465E32C3B3AF601D4A7D98F37E4A65}
[INFO ] 2023-01-31T07:40:26,702Z [Mock network] corda.flow. - Recording transaction locally. {actor_id=Only For Testing, actor_owning_identity=O=Mock Company 1, L=London, C=GB, actor_store_id=TEST, fiber-id=10000001, flow-id=1f45e4b1-3a83-4ad2-a5d3-c31d51a9271a, invocation_id=9e21caa9-53ce-462a-9f5d-e5d382b35275, invocation_timestamp=2023-01-31T07:40:25.861Z, origin=Only For Testing, session_id=9e21caa9-53ce-462a-9f5d-e5d382b35275, session_timestamp=2023-01-31T07:40:25.861Z, thread-id=854, tx_id=CBC25B4A661C4F24A01CFDD7F45B14A31D465E32C3B3AF601D4A7D98F37E4A65}
[INFO ] 2023-01-31T07:40:26,811Z [Mock network] corda.flow. - Recorded transaction locally successfully. {actor_id=Only For Testing, actor_owning_identity=O=Mock Company 1, L=London, C=GB, actor_store_id=TEST, fiber-id=10000001, flow-id=1f45e4b1-3a83-4ad2-a5d3-c31d51a9271a, invocation_id=9e21caa9-53ce-462a-9f5d-e5d382b35275, invocation_timestamp=2023-01-31T07:40:25.861Z, origin=Only For Testing, session_id=9e21caa9-53ce-462a-9f5d-e5d382b35275, session_timestamp=2023-01-31T07:40:25.861Z, thread-id=854, tx_id=CBC25B4A661C4F24A01CFDD7F45B14A31D465E32C3B3AF601D4A7D98F37E4A65}
[INFO ] 2023-01-31T07:40:26,811Z [Mock network] corda.flow. - All parties received the transaction successfully. {actor_id=Only For Testing, actor_owning_identity=O=Mock Company 1, L=London, C=GB, actor_store_id=TEST, fiber-id=10000001, flow-id=1f45e4b1-3a83-4ad2-a5d3-c31d51a9271a, invocation_id=9e21caa9-53ce-462a-9f5d-e5d382b35275, invocation_timestamp=2023-01-31T07:40:25.861Z, origin=Only For Testing, session_id=9e21caa9-53ce-462a-9f5d-e5d382b35275, session_timestamp=2023-01-31T07:40:25.861Z, thread-id=854, tx_id=CBC25B4A661C4F24A01CFDD7F45B14A31D465E32C3B3AF601D4A7D98F37E4A65}
[INFO ] 2023-01-31T07:40:27,010Z [Mock network] corda.flow. - Received transaction acknowledgement request from party O=Mock Company 1, L=London, C=GB. {fiber-id=10000002, flow-id=a04bd970-65f3-4d14-8830-836d141e1ed5, invocation_id=f33ab163-06bb-40f5-b484-68d0e87fd995, invocation_timestamp=2023-01-31T07:40:26.964Z, origin=O=Mock Company 1, L=London, C=GB, session_id=f33ab163-06bb-40f5-b484-68d0e87fd995, session_timestamp=2023-01-31T07:40:26.964Z, thread-id=854, tx_id=CBC25B4A661C4F24A01CFDD7F45B14A31D465E32C3B3AF601D4A7D98F37E4A65}
[INFO ] 2023-01-31T07:40:27,054Z [Mock network] corda.flow. - Transaction dependencies resolution completed. {fiber-id=10000002, flow-id=a04bd970-65f3-4d14-8830-836d141e1ed5, invocation_id=f33ab163-06bb-40f5-b484-68d0e87fd995, invocation_timestamp=2023-01-31T07:40:26.964Z, origin=O=Mock Company 1, L=London, C=GB, session_id=f33ab163-06bb-40f5-b484-68d0e87fd995, session_timestamp=2023-01-31T07:40:26.964Z, thread-id=854, tx_id=CBC25B4A661C4F24A01CFDD7F45B14A31D465E32C3B3AF601D4A7D98F37E4A65}
[INFO ] 2023-01-31T07:40:27,146Z [Mock network] corda.flow. - Successfully received fully signed tx. Sending it to the vault for processing. {fiber-id=10000002, flow-id=a04bd970-65f3-4d14-8830-836d141e1ed5, invocation_id=f33ab163-06bb-40f5-b484-68d0e87fd995, invocation_timestamp=2023-01-31T07:40:26.964Z, origin=O=Mock Company 1, L=London, C=GB, session_id=f33ab163-06bb-40f5-b484-68d0e87fd995, session_timestamp=2023-01-31T07:40:26.964Z, thread-id=854, tx_id=CBC25B4A661C4F24A01CFDD7F45B14A31D465E32C3B3AF601D4A7D98F37E4A65}
[INFO ] 2023-01-31T07:40:27,154Z [Mock network] corda.flow. - Successfully recorded received transaction locally. {fiber-id=10000002, flow-id=a04bd970-65f3-4d14-8830-836d141e1ed5, invocation_id=f33ab163-06bb-40f5-b484-68d0e87fd995, invocation_timestamp=2023-01-31T07:40:26.964Z, origin=O=Mock Company 1, L=London, C=GB, session_id=f33ab163-06bb-40f5-b484-68d0e87fd995, session_timestamp=2023-01-31T07:40:26.964Z, thread-id=854, tx_id=CBC25B4A661C4F24A01CFDD7F45B14A31D465E32C3B3AF601D4A7D98F37E4A65}
[INFO ] 2023-01-31T07:40:27,229Z [Mock network] corda.flow. - Received transaction acknowledgement request from party O=Mock Company 1, L=London, C=GB. {fiber-id=10000003, flow-id=1a915ab5-012d-4996-9849-ae54d8099bfa, invocation_id=56604257-b5cd-48d5-8ce0-f7a9a41ed7eb, invocation_timestamp=2023-01-31T07:40:27.213Z, origin=O=Mock Company 1, L=London, C=GB, session_id=56604257-b5cd-48d5-8ce0-f7a9a41ed7eb, session_timestamp=2023-01-31T07:40:27.213Z, thread-id=854, tx_id=CBC25B4A661C4F24A01CFDD7F45B14A31D465E32C3B3AF601D4A7D98F37E4A65}
[INFO ] 2023-01-31T07:40:27,241Z [Mock network] corda.flow. - Transaction dependencies resolution completed. {fiber-id=10000003, flow-id=1a915ab5-012d-4996-9849-ae54d8099bfa, invocation_id=56604257-b5cd-48d5-8ce0-f7a9a41ed7eb, invocation_timestamp=2023-01-31T07:40:27.213Z, origin=O=Mock Company 1, L=London, C=GB, session_id=56604257-b5cd-48d5-8ce0-f7a9a41ed7eb, session_timestamp=2023-01-31T07:40:27.213Z, thread-id=854, tx_id=CBC25B4A661C4F24A01CFDD7F45B14A31D465E32C3B3AF601D4A7D98F37E4A65}
[INFO ] 2023-01-31T07:40:27,283Z [Mock network] corda.flow. - Successfully received fully signed tx. Sending it to the vault for processing. {fiber-id=10000003, flow-id=1a915ab5-012d-4996-9849-ae54d8099bfa, invocation_id=56604257-b5cd-48d5-8ce0-f7a9a41ed7eb, invocation_timestamp=2023-01-31T07:40:27.213Z, origin=O=Mock Company 1, L=London, C=GB, session_id=56604257-b5cd-48d5-8ce0-f7a9a41ed7eb, session_timestamp=2023-01-31T07:40:27.213Z, thread-id=854, tx_id=CBC25B4A661C4F24A01CFDD7F45B14A31D465E32C3B3AF601D4A7D98F37E4A65}
[INFO ] 2023-01-31T07:40:27,291Z [Mock network] corda.flow. - Successfully recorded received transaction locally. {fiber-id=10000003, flow-id=1a915ab5-012d-4996-9849-ae54d8099bfa, invocation_id=56604257-b5cd-48d5-8ce0-f7a9a41ed7eb, invocation_timestamp=2023-01-31T07:40:27.213Z, origin=O=Mock Company 1, L=London, C=GB, session_id=56604257-b5cd-48d5-8ce0-f7a9a41ed7eb, session_timestamp=2023-01-31T07:40:27.213Z, thread-id=854, tx_id=CBC25B4A661C4F24A01CFDD7F45B14A31D465E32C3B3AF601D4A7D98F37E4A65}
[INFO ] 2023-01-31T07:40:27,334Z [Mock network] corda.flow. - No need to notarise this transaction. {actor_id=Only For Testing, actor_owning_identity=O=Mock Company 2, L=London, C=GB, actor_store_id=TEST, fiber-id=10000004, flow-id=9a20332f-a6b0-4886-b921-c96952e63329, invocation_id=43298900-9c7b-49bf-ad41-871c5221f827, invocation_timestamp=2023-01-31T07:40:27.315Z, origin=Only For Testing, session_id=43298900-9c7b-49bf-ad41-871c5221f827, session_timestamp=2023-01-31T07:40:27.315Z, thread-id=854, tx_id=5AF095A8DF6060D0AA6EBA807F5C6E928E546BBB3A1D532C3E2D77898163CC3E}
[INFO ] 2023-01-31T07:40:27,334Z [Mock network] corda.flow. - Recording transaction locally. {actor_id=Only For Testing, actor_owning_identity=O=Mock Company 2, L=London, C=GB, actor_store_id=TEST, fiber-id=10000004, flow-id=9a20332f-a6b0-4886-b921-c96952e63329, invocation_id=43298900-9c7b-49bf-ad41-871c5221f827, invocation_timestamp=2023-01-31T07:40:27.315Z, origin=Only For Testing, session_id=43298900-9c7b-49bf-ad41-871c5221f827, session_timestamp=2023-01-31T07:40:27.315Z, thread-id=854, tx_id=5AF095A8DF6060D0AA6EBA807F5C6E928E546BBB3A1D532C3E2D77898163CC3E}
[INFO ] 2023-01-31T07:40:27,338Z [Mock network] corda.flow. - Recorded transaction locally successfully. {actor_id=Only For Testing, actor_owning_identity=O=Mock Company 2, L=London, C=GB, actor_store_id=TEST, fiber-id=10000004, flow-id=9a20332f-a6b0-4886-b921-c96952e63329, invocation_id=43298900-9c7b-49bf-ad41-871c5221f827, invocation_timestamp=2023-01-31T07:40:27.315Z, origin=Only For Testing, session_id=43298900-9c7b-49bf-ad41-871c5221f827, session_timestamp=2023-01-31T07:40:27.315Z, thread-id=854, tx_id=5AF095A8DF6060D0AA6EBA807F5C6E928E546BBB3A1D532C3E2D77898163CC3E}
[INFO ] 2023-01-31T07:40:27,338Z [Mock network] corda.flow. - All parties received the transaction successfully. {actor_id=Only For Testing, actor_owning_identity=O=Mock Company 2, L=London, C=GB, actor_store_id=TEST, fiber-id=10000004, flow-id=9a20332f-a6b0-4886-b921-c96952e63329, invocation_id=43298900-9c7b-49bf-ad41-871c5221f827, invocation_timestamp=2023-01-31T07:40:27.315Z, origin=Only For Testing, session_id=43298900-9c7b-49bf-ad41-871c5221f827, session_timestamp=2023-01-31T07:40:27.315Z, thread-id=854, tx_id=5AF095A8DF6060D0AA6EBA807F5C6E928E546BBB3A1D532C3E2D77898163CC3E}
[INFO ] 2023-01-31T07:40:27,364Z [Mock network] corda.flow. - Received transaction acknowledgement request from party O=Mock Company 2, L=London, C=GB. {fiber-id=10000005, flow-id=14d43a71-3a49-4387-ae97-18b595f78556, invocation_id=209b7065-bca1-48e4-8c1f-d7ec01b6378a, invocation_timestamp=2023-01-31T07:40:27.354Z, origin=O=Mock Company 2, L=London, C=GB, session_id=209b7065-bca1-48e4-8c1f-d7ec01b6378a, session_timestamp=2023-01-31T07:40:27.354Z, thread-id=854, tx_id=5AF095A8DF6060D0AA6EBA807F5C6E928E546BBB3A1D532C3E2D77898163CC3E}
[INFO ] 2023-01-31T07:40:27,373Z [Mock network] corda.flow. - Transaction dependencies resolution completed. {fiber-id=10000005, flow-id=14d43a71-3a49-4387-ae97-18b595f78556, invocation_id=209b7065-bca1-48e4-8c1f-d7ec01b6378a, invocation_timestamp=2023-01-31T07:40:27.354Z, origin=O=Mock Company 2, L=London, C=GB, session_id=209b7065-bca1-48e4-8c1f-d7ec01b6378a, session_timestamp=2023-01-31T07:40:27.354Z, thread-id=854, tx_id=5AF095A8DF6060D0AA6EBA807F5C6E928E546BBB3A1D532C3E2D77898163CC3E}
[INFO ] 2023-01-31T07:40:27,378Z [Mock network] corda.flow. - Successfully received fully signed tx. Sending it to the vault for processing. {fiber-id=10000005, flow-id=14d43a71-3a49-4387-ae97-18b595f78556, invocation_id=209b7065-bca1-48e4-8c1f-d7ec01b6378a, invocation_timestamp=2023-01-31T07:40:27.354Z, origin=O=Mock Company 2, L=London, C=GB, session_id=209b7065-bca1-48e4-8c1f-d7ec01b6378a, session_timestamp=2023-01-31T07:40:27.354Z, thread-id=854, tx_id=5AF095A8DF6060D0AA6EBA807F5C6E928E546BBB3A1D532C3E2D77898163CC3E}
[INFO ] 2023-01-31T07:40:27,386Z [Mock network] corda.flow. - Successfully recorded received transaction locally. {fiber-id=10000005, flow-id=14d43a71-3a49-4387-ae97-18b595f78556, invocation_id=209b7065-bca1-48e4-8c1f-d7ec01b6378a, invocation_timestamp=2023-01-31T07:40:27.354Z, origin=O=Mock Company 2, L=London, C=GB, session_id=209b7065-bca1-48e4-8c1f-d7ec01b6378a, session_timestamp=2023-01-31T07:40:27.354Z, thread-id=854, tx_id=5AF095A8DF6060D0AA6EBA807F5C6E928E546BBB3A1D532C3E2D77898163CC3E}
[INFO ] 2023-01-31T07:40:27,457Z [Mock network] corda.flow. - Received transaction acknowledgement request from party O=Mock Company 2, L=London, C=GB. {fiber-id=10000006, flow-id=b1df0b43-cf53-4f6d-a33a-3f5aa69aa989, invocation_id=69063874-01c9-4e8c-8b1e-c16ec9f1512f, invocation_timestamp=2023-01-31T07:40:27.431Z, origin=O=Mock Company 2, L=London, C=GB, session_id=69063874-01c9-4e8c-8b1e-c16ec9f1512f, session_timestamp=2023-01-31T07:40:27.431Z, thread-id=854, tx_id=5AF095A8DF6060D0AA6EBA807F5C6E928E546BBB3A1D532C3E2D77898163CC3E}
[INFO ] 2023-01-31T07:40:27,481Z [Mock network] corda.flow. - Transaction dependencies resolution completed. {fiber-id=10000006, flow-id=b1df0b43-cf53-4f6d-a33a-3f5aa69aa989, invocation_id=69063874-01c9-4e8c-8b1e-c16ec9f1512f, invocation_timestamp=2023-01-31T07:40:27.431Z, origin=O=Mock Company 2, L=London, C=GB, session_id=69063874-01c9-4e8c-8b1e-c16ec9f1512f, session_timestamp=2023-01-31T07:40:27.431Z, thread-id=854, tx_id=5AF095A8DF6060D0AA6EBA807F5C6E928E546BBB3A1D532C3E2D77898163CC3E}
[INFO ] 2023-01-31T07:40:27,487Z [Mock network] corda.flow. - Successfully received fully signed tx. Sending it to the vault for processing. {fiber-id=10000006, flow-id=b1df0b43-cf53-4f6d-a33a-3f5aa69aa989, invocation_id=69063874-01c9-4e8c-8b1e-c16ec9f1512f, invocation_timestamp=2023-01-31T07:40:27.431Z, origin=O=Mock Company 2, L=London, C=GB, session_id=69063874-01c9-4e8c-8b1e-c16ec9f1512f, session_timestamp=2023-01-31T07:40:27.431Z, thread-id=854, tx_id=5AF095A8DF6060D0AA6EBA807F5C6E928E546BBB3A1D532C3E2D77898163CC3E}
[INFO ] 2023-01-31T07:40:27,495Z [Mock network] corda.flow. - Successfully recorded received transaction locally. {fiber-id=10000006, flow-id=b1df0b43-cf53-4f6d-a33a-3f5aa69aa989, invocation_id=69063874-01c9-4e8c-8b1e-c16ec9f1512f, invocation_timestamp=2023-01-31T07:40:27.431Z, origin=O=Mock Company 2, L=London, C=GB, session_id=69063874-01c9-4e8c-8b1e-c16ec9f1512f, session_timestamp=2023-01-31T07:40:27.431Z, thread-id=854, tx_id=5AF095A8DF6060D0AA6EBA807F5C6E928E546BBB3A1D532C3E2D77898163CC3E}
[INFO ] 2023-01-31T07:40:27,551Z [Mock network] corda.flow. - No need to notarise this transaction. {actor_id=Only For Testing, actor_owning_identity=O=Mock Company 3, L=London, C=GB, actor_store_id=TEST, fiber-id=10000007, flow-id=2477a273-b42e-4026-ac29-976ee3095bee, invocation_id=f9710a38-9791-4334-bbbe-9397b8bd97a5, invocation_timestamp=2023-01-31T07:40:27.525Z, origin=Only For Testing, session_id=f9710a38-9791-4334-bbbe-9397b8bd97a5, session_timestamp=2023-01-31T07:40:27.525Z, thread-id=854, tx_id=FD5DD51DB5CB395CAA1171D4BDDCC0A06427B5FD2C5BC3F5B41985F05D4B20E3}
[INFO ] 2023-01-31T07:40:27,551Z [Mock network] corda.flow. - Recording transaction locally. {actor_id=Only For Testing, actor_owning_identity=O=Mock Company 3, L=London, C=GB, actor_store_id=TEST, fiber-id=10000007, flow-id=2477a273-b42e-4026-ac29-976ee3095bee, invocation_id=f9710a38-9791-4334-bbbe-9397b8bd97a5, invocation_timestamp=2023-01-31T07:40:27.525Z, origin=Only For Testing, session_id=f9710a38-9791-4334-bbbe-9397b8bd97a5, session_timestamp=2023-01-31T07:40:27.525Z, thread-id=854, tx_id=FD5DD51DB5CB395CAA1171D4BDDCC0A06427B5FD2C5BC3F5B41985F05D4B20E3}
[INFO ] 2023-01-31T07:40:27,555Z [Mock network] corda.flow. - Recorded transaction locally successfully. {actor_id=Only For Testing, actor_owning_identity=O=Mock Company 3, L=London, C=GB, actor_store_id=TEST, fiber-id=10000007, flow-id=2477a273-b42e-4026-ac29-976ee3095bee, invocation_id=f9710a38-9791-4334-bbbe-9397b8bd97a5, invocation_timestamp=2023-01-31T07:40:27.525Z, origin=Only For Testing, session_id=f9710a38-9791-4334-bbbe-9397b8bd97a5, session_timestamp=2023-01-31T07:40:27.525Z, thread-id=854, tx_id=FD5DD51DB5CB395CAA1171D4BDDCC0A06427B5FD2C5BC3F5B41985F05D4B20E3}
[INFO ] 2023-01-31T07:40:27,555Z [Mock network] corda.flow. - All parties received the transaction successfully. {actor_id=Only For Testing, actor_owning_identity=O=Mock Company 3, L=London, C=GB, actor_store_id=TEST, fiber-id=10000007, flow-id=2477a273-b42e-4026-ac29-976ee3095bee, invocation_id=f9710a38-9791-4334-bbbe-9397b8bd97a5, invocation_timestamp=2023-01-31T07:40:27.525Z, origin=Only For Testing, session_id=f9710a38-9791-4334-bbbe-9397b8bd97a5, session_timestamp=2023-01-31T07:40:27.525Z, thread-id=854, tx_id=FD5DD51DB5CB395CAA1171D4BDDCC0A06427B5FD2C5BC3F5B41985F05D4B20E3}
[INFO ] 2023-01-31T07:40:27,585Z [Mock network] corda.flow. - Received transaction acknowledgement request from party O=Mock Company 3, L=London, C=GB. {fiber-id=10000008, flow-id=9c409e0d-eb81-42b6-a176-819ff6a156a7, invocation_id=cba24736-7178-437e-b504-89379d30ffc9, invocation_timestamp=2023-01-31T07:40:27.574Z, origin=O=Mock Company 3, L=London, C=GB, session_id=cba24736-7178-437e-b504-89379d30ffc9, session_timestamp=2023-01-31T07:40:27.574Z, thread-id=854, tx_id=FD5DD51DB5CB395CAA1171D4BDDCC0A06427B5FD2C5BC3F5B41985F05D4B20E3}
[INFO ] 2023-01-31T07:40:27,592Z [Mock network] corda.flow. - Transaction dependencies resolution completed. {fiber-id=10000008, flow-id=9c409e0d-eb81-42b6-a176-819ff6a156a7, invocation_id=cba24736-7178-437e-b504-89379d30ffc9, invocation_timestamp=2023-01-31T07:40:27.574Z, origin=O=Mock Company 3, L=London, C=GB, session_id=cba24736-7178-437e-b504-89379d30ffc9, session_timestamp=2023-01-31T07:40:27.574Z, thread-id=854, tx_id=FD5DD51DB5CB395CAA1171D4BDDCC0A06427B5FD2C5BC3F5B41985F05D4B20E3}
[INFO ] 2023-01-31T07:40:27,597Z [Mock network] corda.flow. - Successfully received fully signed tx. Sending it to the vault for processing. {fiber-id=10000008, flow-id=9c409e0d-eb81-42b6-a176-819ff6a156a7, invocation_id=cba24736-7178-437e-b504-89379d30ffc9, invocation_timestamp=2023-01-31T07:40:27.574Z, origin=O=Mock Company 3, L=London, C=GB, session_id=cba24736-7178-437e-b504-89379d30ffc9, session_timestamp=2023-01-31T07:40:27.574Z, thread-id=854, tx_id=FD5DD51DB5CB395CAA1171D4BDDCC0A06427B5FD2C5BC3F5B41985F05D4B20E3}
[INFO ] 2023-01-31T07:40:27,602Z [Mock network] corda.flow. - Successfully recorded received transaction locally. {fiber-id=10000008, flow-id=9c409e0d-eb81-42b6-a176-819ff6a156a7, invocation_id=cba24736-7178-437e-b504-89379d30ffc9, invocation_timestamp=2023-01-31T07:40:27.574Z, origin=O=Mock Company 3, L=London, C=GB, session_id=cba24736-7178-437e-b504-89379d30ffc9, session_timestamp=2023-01-31T07:40:27.574Z, thread-id=854, tx_id=FD5DD51DB5CB395CAA1171D4BDDCC0A06427B5FD2C5BC3F5B41985F05D4B20E3}
[INFO ] 2023-01-31T07:40:27,642Z [Mock network] corda.flow. - Received transaction acknowledgement request from party O=Mock Company 3, L=London, C=GB. {fiber-id=10000009, flow-id=478d1f51-60aa-45ca-babd-072d8200bb5d, invocation_id=55ce98d8-4750-474b-819b-9b1d624be7b6, invocation_timestamp=2023-01-31T07:40:27.628Z, origin=O=Mock Company 3, L=London, C=GB, session_id=55ce98d8-4750-474b-819b-9b1d624be7b6, session_timestamp=2023-01-31T07:40:27.628Z, thread-id=854, tx_id=FD5DD51DB5CB395CAA1171D4BDDCC0A06427B5FD2C5BC3F5B41985F05D4B20E3}
[INFO ] 2023-01-31T07:40:27,651Z [Mock network] corda.flow. - Transaction dependencies resolution completed. {fiber-id=10000009, flow-id=478d1f51-60aa-45ca-babd-072d8200bb5d, invocation_id=55ce98d8-4750-474b-819b-9b1d624be7b6, invocation_timestamp=2023-01-31T07:40:27.628Z, origin=O=Mock Company 3, L=London, C=GB, session_id=55ce98d8-4750-474b-819b-9b1d624be7b6, session_timestamp=2023-01-31T07:40:27.628Z, thread-id=854, tx_id=FD5DD51DB5CB395CAA1171D4BDDCC0A06427B5FD2C5BC3F5B41985F05D4B20E3}
[INFO ] 2023-01-31T07:40:27,656Z [Mock network] corda.flow. - Successfully received fully signed tx. Sending it to the vault for processing. {fiber-id=10000009, flow-id=478d1f51-60aa-45ca-babd-072d8200bb5d, invocation_id=55ce98d8-4750-474b-819b-9b1d624be7b6, invocation_timestamp=2023-01-31T07:40:27.628Z, origin=O=Mock Company 3, L=London, C=GB, session_id=55ce98d8-4750-474b-819b-9b1d624be7b6, session_timestamp=2023-01-31T07:40:27.628Z, thread-id=854, tx_id=FD5DD51DB5CB395CAA1171D4BDDCC0A06427B5FD2C5BC3F5B41985F05D4B20E3}
[INFO ] 2023-01-31T07:40:27,663Z [Mock network] corda.flow. - Successfully recorded received transaction locally. {fiber-id=10000009, flow-id=478d1f51-60aa-45ca-babd-072d8200bb5d, invocation_id=55ce98d8-4750-474b-819b-9b1d624be7b6, invocation_timestamp=2023-01-31T07:40:27.628Z, origin=O=Mock Company 3, L=London, C=GB, session_id=55ce98d8-4750-474b-819b-9b1d624be7b6, session_timestamp=2023-01-31T07:40:27.628Z, thread-id=854, tx_id=FD5DD51DB5CB395CAA1171D4BDDCC0A06427B5FD2C5BC3F5B41985F05D4B20E3}
[INFO ] 2023-01-31T07:40:27,742Z [Mock network] identity.PersistentIdentityService. - Linking: 3229C378230E3A54CAE01452B55A1C15B674B83165A89689928383863ACF2FB1 to O=Mock Company 1, L=London, C=GB {actor_id=Only For Testing, actor_owning_identity=O=Mock Company 1, L=London, C=GB, actor_store_id=TEST, fiber-id=10000011, flow-id=f71a10c6-c8fd-468b-9b85-057fede2793b, invocation_id=01fad651-24b8-4552-a349-05a1d5d301ba, invocation_timestamp=2023-01-31T07:40:27.723Z, origin=Only For Testing, session_id=01fad651-24b8-4552-a349-05a1d5d301ba, session_timestamp=2023-01-31T07:40:27.723Z, thread-id=854}
[INFO ] 2023-01-31T07:40:27,858Z [Mock network] identity.PersistentIdentityService. - Linking: D5D575B74398576FC959CBA028D4249ED19B7EE1AF12EABE8A21DC53E7AF5F7B to O=Mock Company 2, L=London, C=GB {fiber-id=10000012, flow-id=1d30c52f-02d5-4063-8166-a42c9221379f, invocation_id=16791db2-34a2-435f-8a66-05685071abcc, invocation_timestamp=2023-01-31T07:40:27.767Z, origin=O=Mock Company 1, L=London, C=GB, session_id=16791db2-34a2-435f-8a66-05685071abcc, session_timestamp=2023-01-31T07:40:27.767Z, thread-id=854}
[INFO ] 2023-01-31T07:40:27,885Z [Mock network] identity.PersistentIdentityService. - Linking: D5D575B74398576FC959CBA028D4249ED19B7EE1AF12EABE8A21DC53E7AF5F7B to O=Mock Company 2, L=London, C=GB {actor_id=Only For Testing, actor_owning_identity=O=Mock Company 1, L=London, C=GB, actor_store_id=TEST, fiber-id=10000011, flow-id=f71a10c6-c8fd-468b-9b85-057fede2793b, invocation_id=01fad651-24b8-4552-a349-05a1d5d301ba, invocation_timestamp=2023-01-31T07:40:27.723Z, origin=Only For Testing, session_id=01fad651-24b8-4552-a349-05a1d5d301ba, session_timestamp=2023-01-31T07:40:27.723Z, thread-id=854}
[INFO ] 2023-01-31T07:40:28,079Z [Mock network] corda.flow. - Received transaction acknowledgement request from party O=Mock Company 1, L=London, C=GB. {fiber-id=10000013, flow-id=7d8d31f5-174d-4e14-8759-9864eacf1206, invocation_id=e390b3a7-49e0-41e0-9af5-454a77a66e9f, invocation_timestamp=2023-01-31T07:40:28.055Z, origin=O=Mock Company 1, L=London, C=GB, session_id=e390b3a7-49e0-41e0-9af5-454a77a66e9f, session_timestamp=2023-01-31T07:40:28.055Z, thread-id=854, tx_id=57E4527476FBCE447820B1C9B844E548587A0EC8B4A75AB1094E55AA39B4AC98}
[INFO ] 2023-01-31T07:40:28,087Z [Mock network] corda.flow. - Transaction dependencies resolution completed. {fiber-id=10000013, flow-id=7d8d31f5-174d-4e14-8759-9864eacf1206, invocation_id=e390b3a7-49e0-41e0-9af5-454a77a66e9f, invocation_timestamp=2023-01-31T07:40:28.055Z, origin=O=Mock Company 1, L=London, C=GB, session_id=e390b3a7-49e0-41e0-9af5-454a77a66e9f, session_timestamp=2023-01-31T07:40:28.055Z, thread-id=854, tx_id=57E4527476FBCE447820B1C9B844E548587A0EC8B4A75AB1094E55AA39B4AC98}
[INFO ] 2023-01-31T07:40:28,199Z [Mock network] corda.flow. - No need to notarise this transaction. {actor_id=Only For Testing, actor_owning_identity=O=Mock Company 1, L=London, C=GB, actor_store_id=TEST, fiber-id=10000011, flow-id=f71a10c6-c8fd-468b-9b85-057fede2793b, invocation_id=01fad651-24b8-4552-a349-05a1d5d301ba, invocation_timestamp=2023-01-31T07:40:27.723Z, origin=Only For Testing, session_id=01fad651-24b8-4552-a349-05a1d5d301ba, session_timestamp=2023-01-31T07:40:27.723Z, thread-id=854, tx_id=57E4527476FBCE447820B1C9B844E548587A0EC8B4A75AB1094E55AA39B4AC98}
[INFO ] 2023-01-31T07:40:28,199Z [Mock network] corda.flow. - Recording transaction locally. {actor_id=Only For Testing, actor_owning_identity=O=Mock Company 1, L=London, C=GB, actor_store_id=TEST, fiber-id=10000011, flow-id=f71a10c6-c8fd-468b-9b85-057fede2793b, invocation_id=01fad651-24b8-4552-a349-05a1d5d301ba, invocation_timestamp=2023-01-31T07:40:27.723Z, origin=Only For Testing, session_id=01fad651-24b8-4552-a349-05a1d5d301ba, session_timestamp=2023-01-31T07:40:27.723Z, thread-id=854, tx_id=57E4527476FBCE447820B1C9B844E548587A0EC8B4A75AB1094E55AA39B4AC98}
[INFO ] 2023-01-31T07:40:28,203Z [Mock network] corda.flow. - Recorded transaction locally successfully. {actor_id=Only For Testing, actor_owning_identity=O=Mock Company 1, L=London, C=GB, actor_store_id=TEST, fiber-id=10000011, flow-id=f71a10c6-c8fd-468b-9b85-057fede2793b, invocation_id=01fad651-24b8-4552-a349-05a1d5d301ba, invocation_timestamp=2023-01-31T07:40:27.723Z, origin=Only For Testing, session_id=01fad651-24b8-4552-a349-05a1d5d301ba, session_timestamp=2023-01-31T07:40:27.723Z, thread-id=854, tx_id=57E4527476FBCE447820B1C9B844E548587A0EC8B4A75AB1094E55AA39B4AC98}
[INFO ] 2023-01-31T07:40:28,221Z [Mock network] corda.flow. - Received transaction acknowledgement request from party O=Mock Company 1, L=London, C=GB. {fiber-id=10000013, flow-id=7d8d31f5-174d-4e14-8759-9864eacf1206, invocation_id=e390b3a7-49e0-41e0-9af5-454a77a66e9f, invocation_timestamp=2023-01-31T07:40:28.055Z, origin=O=Mock Company 1, L=London, C=GB, session_id=e390b3a7-49e0-41e0-9af5-454a77a66e9f, session_timestamp=2023-01-31T07:40:28.055Z, thread-id=854, tx_id=57E4527476FBCE447820B1C9B844E548587A0EC8B4A75AB1094E55AA39B4AC98}
[INFO ] 2023-01-31T07:40:28,226Z [Mock network] corda.flow. - Transaction dependencies resolution completed. {fiber-id=10000013, flow-id=7d8d31f5-174d-4e14-8759-9864eacf1206, invocation_id=e390b3a7-49e0-41e0-9af5-454a77a66e9f, invocation_timestamp=2023-01-31T07:40:28.055Z, origin=O=Mock Company 1, L=London, C=GB, session_id=e390b3a7-49e0-41e0-9af5-454a77a66e9f, session_timestamp=2023-01-31T07:40:28.055Z, thread-id=854, tx_id=57E4527476FBCE447820B1C9B844E548587A0EC8B4A75AB1094E55AA39B4AC98}
[INFO ] 2023-01-31T07:40:28,231Z [Mock network] corda.flow. - Successfully received fully signed tx. Sending it to the vault for processing. {fiber-id=10000013, flow-id=7d8d31f5-174d-4e14-8759-9864eacf1206, invocation_id=e390b3a7-49e0-41e0-9af5-454a77a66e9f, invocation_timestamp=2023-01-31T07:40:28.055Z, origin=O=Mock Company 1, L=London, C=GB, session_id=e390b3a7-49e0-41e0-9af5-454a77a66e9f, session_timestamp=2023-01-31T07:40:28.055Z, thread-id=854, tx_id=57E4527476FBCE447820B1C9B844E548587A0EC8B4A75AB1094E55AA39B4AC98}
[INFO ] 2023-01-31T07:40:28,236Z [Mock network] corda.flow. - Successfully recorded received transaction locally. {fiber-id=10000013, flow-id=7d8d31f5-174d-4e14-8759-9864eacf1206, invocation_id=e390b3a7-49e0-41e0-9af5-454a77a66e9f, invocation_timestamp=2023-01-31T07:40:28.055Z, origin=O=Mock Company 1, L=London, C=GB, session_id=e390b3a7-49e0-41e0-9af5-454a77a66e9f, session_timestamp=2023-01-31T07:40:28.055Z, thread-id=854, tx_id=57E4527476FBCE447820B1C9B844E548587A0EC8B4A75AB1094E55AA39B4AC98}
[WARN ] 2023-01-31T07:40:28,239Z [Mock network] persistence.AbstractPartyToX500NameAsStringConverter. - Identity service unable to resolve AbstractParty: Anonymous(DL4NpKc81zgeaLsrpjtFT75vEhoeG6E2Yy82fLrFuwFfFW) {actor_id=Only For Testing, actor_owning_identity=O=Mock Company 1, L=London, C=GB, actor_store_id=TEST, fiber-id=10000013, flow-id=7d8d31f5-174d-4e14-8759-9864eacf1206, invocation_id=e390b3a7-49e0-41e0-9af5-454a77a66e9f, invocation_timestamp=2023-01-31T07:40:28.055Z, origin=O=Mock Company 1, L=London, C=GB, session_id=e390b3a7-49e0-41e0-9af5-454a77a66e9f, session_timestamp=2023-01-31T07:40:28.055Z, thread-id=854}
[INFO ] 2023-01-31T07:40:28,244Z [Mock network] corda.flow. - Party O=Mock Company 2, L=London, C=GB received the transaction. {actor_id=Only For Testing, actor_owning_identity=O=Mock Company 1, L=London, C=GB, actor_store_id=TEST, fiber-id=10000011, flow-id=f71a10c6-c8fd-468b-9b85-057fede2793b, invocation_id=01fad651-24b8-4552-a349-05a1d5d301ba, invocation_timestamp=2023-01-31T07:40:27.723Z, origin=Only For Testing, session_id=01fad651-24b8-4552-a349-05a1d5d301ba, session_timestamp=2023-01-31T07:40:27.723Z, thread-id=854, tx_id=57E4527476FBCE447820B1C9B844E548587A0EC8B4A75AB1094E55AA39B4AC98}
[INFO ] 2023-01-31T07:40:28,244Z [Mock network] corda.flow. - All parties received the transaction successfully. {actor_id=Only For Testing, actor_owning_identity=O=Mock Company 1, L=London, C=GB, actor_store_id=TEST, fiber-id=10000011, flow-id=f71a10c6-c8fd-468b-9b85-057fede2793b, invocation_id=01fad651-24b8-4552-a349-05a1d5d301ba, invocation_timestamp=2023-01-31T07:40:27.723Z, origin=Only For Testing, session_id=01fad651-24b8-4552-a349-05a1d5d301ba, session_timestamp=2023-01-31T07:40:27.723Z, thread-id=854, tx_id=57E4527476FBCE447820B1C9B844E548587A0EC8B4A75AB1094E55AA39B4AC98}
[INFO ] 2023-01-31T07:40:28,300Z [Mock network] corda.flow. - Received transaction acknowledgement request from party O=Mock Company 1, L=London, C=GB. {fiber-id=10000014, flow-id=d4cf55dc-8abc-4010-a6a7-7ab1046d5d24, invocation_id=9a0dfa06-2315-4c2e-9d6d-3cfe8c31e275, invocation_timestamp=2023-01-31T07:40:28.280Z, origin=O=Mock Company 1, L=London, C=GB, session_id=9a0dfa06-2315-4c2e-9d6d-3cfe8c31e275, session_timestamp=2023-01-31T07:40:28.280Z, thread-id=854, tx_id=5AF095A8DF6060D0AA6EBA807F5C6E928E546BBB3A1D532C3E2D77898163CC3E}
[INFO ] 2023-01-31T07:40:28,305Z [Mock network] corda.flow. - Transaction dependencies resolution completed. {fiber-id=10000014, flow-id=d4cf55dc-8abc-4010-a6a7-7ab1046d5d24, invocation_id=9a0dfa06-2315-4c2e-9d6d-3cfe8c31e275, invocation_timestamp=2023-01-31T07:40:28.280Z, origin=O=Mock Company 1, L=London, C=GB, session_id=9a0dfa06-2315-4c2e-9d6d-3cfe8c31e275, session_timestamp=2023-01-31T07:40:28.280Z, thread-id=854, tx_id=5AF095A8DF6060D0AA6EBA807F5C6E928E546BBB3A1D532C3E2D77898163CC3E}
[INFO ] 2023-01-31T07:40:28,307Z [Mock network] corda.flow. - Successfully received fully signed tx. Sending it to the vault for processing. {fiber-id=10000014, flow-id=d4cf55dc-8abc-4010-a6a7-7ab1046d5d24, invocation_id=9a0dfa06-2315-4c2e-9d6d-3cfe8c31e275, invocation_timestamp=2023-01-31T07:40:28.280Z, origin=O=Mock Company 1, L=London, C=GB, session_id=9a0dfa06-2315-4c2e-9d6d-3cfe8c31e275, session_timestamp=2023-01-31T07:40:28.280Z, thread-id=854, tx_id=5AF095A8DF6060D0AA6EBA807F5C6E928E546BBB3A1D532C3E2D77898163CC3E}
[INFO ] 2023-01-31T07:40:28,311Z [Mock network] corda.flow. - Successfully recorded received transaction locally. {fiber-id=10000014, flow-id=d4cf55dc-8abc-4010-a6a7-7ab1046d5d24, invocation_id=9a0dfa06-2315-4c2e-9d6d-3cfe8c31e275, invocation_timestamp=2023-01-31T07:40:28.280Z, origin=O=Mock Company 1, L=London, C=GB, session_id=9a0dfa06-2315-4c2e-9d6d-3cfe8c31e275, session_timestamp=2023-01-31T07:40:28.280Z, thread-id=854, tx_id=5AF095A8DF6060D0AA6EBA807F5C6E928E546BBB3A1D532C3E2D77898163CC3E}
[INFO ] 2023-01-31T07:40:28,331Z [Mock network] identity.PersistentIdentityService. - An existing entry for DLFPidE5S4BvGGxLeTWtsimFo1v12LqHuX6ePDZ2uk5itS already exists. {fiber-id=10000014, flow-id=d4cf55dc-8abc-4010-a6a7-7ab1046d5d24, invocation_id=9a0dfa06-2315-4c2e-9d6d-3cfe8c31e275, invocation_timestamp=2023-01-31T07:40:28.280Z, origin=O=Mock Company 1, L=London, C=GB, session_id=9a0dfa06-2315-4c2e-9d6d-3cfe8c31e275, session_timestamp=2023-01-31T07:40:28.280Z, thread-id=854, tx_id=5AF095A8DF6060D0AA6EBA807F5C6E928E546BBB3A1D532C3E2D77898163CC3E}
[INFO ] 2023-01-31T07:40:28,338Z [Mock network] corda.flow. - Received transaction acknowledgement request from party O=Mock Company 1, L=London, C=GB. {fiber-id=10000014, flow-id=d4cf55dc-8abc-4010-a6a7-7ab1046d5d24, invocation_id=9a0dfa06-2315-4c2e-9d6d-3cfe8c31e275, invocation_timestamp=2023-01-31T07:40:28.280Z, origin=O=Mock Company 1, L=London, C=GB, session_id=9a0dfa06-2315-4c2e-9d6d-3cfe8c31e275, session_timestamp=2023-01-31T07:40:28.280Z, thread-id=854, tx_id=CBC25B4A661C4F24A01CFDD7F45B14A31D465E32C3B3AF601D4A7D98F37E4A65}
[INFO ] 2023-01-31T07:40:28,344Z [Mock network] corda.flow. - Transaction dependencies resolution completed. {fiber-id=10000014, flow-id=d4cf55dc-8abc-4010-a6a7-7ab1046d5d24, invocation_id=9a0dfa06-2315-4c2e-9d6d-3cfe8c31e275, invocation_timestamp=2023-01-31T07:40:28.280Z, origin=O=Mock Company 1, L=London, C=GB, session_id=9a0dfa06-2315-4c2e-9d6d-3cfe8c31e275, session_timestamp=2023-01-31T07:40:28.280Z, thread-id=854, tx_id=CBC25B4A661C4F24A01CFDD7F45B14A31D465E32C3B3AF601D4A7D98F37E4A65}
[INFO ] 2023-01-31T07:40:28,347Z [Mock network] corda.flow. - Successfully received fully signed tx. Sending it to the vault for processing. {fiber-id=10000014, flow-id=d4cf55dc-8abc-4010-a6a7-7ab1046d5d24, invocation_id=9a0dfa06-2315-4c2e-9d6d-3cfe8c31e275, invocation_timestamp=2023-01-31T07:40:28.280Z, origin=O=Mock Company 1, L=London, C=GB, session_id=9a0dfa06-2315-4c2e-9d6d-3cfe8c31e275, session_timestamp=2023-01-31T07:40:28.280Z, thread-id=854, tx_id=CBC25B4A661C4F24A01CFDD7F45B14A31D465E32C3B3AF601D4A7D98F37E4A65}
[INFO ] 2023-01-31T07:40:28,350Z [Mock network] corda.flow. - Successfully recorded received transaction locally. {fiber-id=10000014, flow-id=d4cf55dc-8abc-4010-a6a7-7ab1046d5d24, invocation_id=9a0dfa06-2315-4c2e-9d6d-3cfe8c31e275, invocation_timestamp=2023-01-31T07:40:28.280Z, origin=O=Mock Company 1, L=London, C=GB, session_id=9a0dfa06-2315-4c2e-9d6d-3cfe8c31e275, session_timestamp=2023-01-31T07:40:28.280Z, thread-id=854, tx_id=CBC25B4A661C4F24A01CFDD7F45B14A31D465E32C3B3AF601D4A7D98F37E4A65}
[INFO ] 2023-01-31T07:40:28,369Z [Mock network] identity.PersistentIdentityService. - Linking: 3229C378230E3A54CAE01452B55A1C15B674B83165A89689928383863ACF2FB1 to O=Mock Company 1, L=London, C=GB {fiber-id=10000014, flow-id=d4cf55dc-8abc-4010-a6a7-7ab1046d5d24, invocation_id=9a0dfa06-2315-4c2e-9d6d-3cfe8c31e275, invocation_timestamp=2023-01-31T07:40:28.280Z, origin=O=Mock Company 1, L=London, C=GB, session_id=9a0dfa06-2315-4c2e-9d6d-3cfe8c31e275, session_timestamp=2023-01-31T07:40:28.280Z, thread-id=854, tx_id=CBC25B4A661C4F24A01CFDD7F45B14A31D465E32C3B3AF601D4A7D98F37E4A65}
[INFO ] 2023-01-31T07:40:28,377Z [Mock network] corda.flow. - Received transaction acknowledgement request from party O=Mock Company 1, L=London, C=GB. {fiber-id=10000014, flow-id=d4cf55dc-8abc-4010-a6a7-7ab1046d5d24, invocation_id=9a0dfa06-2315-4c2e-9d6d-3cfe8c31e275, invocation_timestamp=2023-01-31T07:40:28.280Z, origin=O=Mock Company 1, L=London, C=GB, session_id=9a0dfa06-2315-4c2e-9d6d-3cfe8c31e275, session_timestamp=2023-01-31T07:40:28.280Z, thread-id=854, tx_id=57E4527476FBCE447820B1C9B844E548587A0EC8B4A75AB1094E55AA39B4AC98}
[INFO ] 2023-01-31T07:40:28,382Z [Mock network] corda.flow. - Transaction dependencies resolution completed. {fiber-id=10000014, flow-id=d4cf55dc-8abc-4010-a6a7-7ab1046d5d24, invocation_id=9a0dfa06-2315-4c2e-9d6d-3cfe8c31e275, invocation_timestamp=2023-01-31T07:40:28.280Z, origin=O=Mock Company 1, L=London, C=GB, session_id=9a0dfa06-2315-4c2e-9d6d-3cfe8c31e275, session_timestamp=2023-01-31T07:40:28.280Z, thread-id=854, tx_id=57E4527476FBCE447820B1C9B844E548587A0EC8B4A75AB1094E55AA39B4AC98}
[INFO ] 2023-01-31T07:40:28,385Z [Mock network] corda.flow. - Successfully received fully signed tx. Sending it to the vault for processing. {fiber-id=10000014, flow-id=d4cf55dc-8abc-4010-a6a7-7ab1046d5d24, invocation_id=9a0dfa06-2315-4c2e-9d6d-3cfe8c31e275, invocation_timestamp=2023-01-31T07:40:28.280Z, origin=O=Mock Company 1, L=London, C=GB, session_id=9a0dfa06-2315-4c2e-9d6d-3cfe8c31e275, session_timestamp=2023-01-31T07:40:28.280Z, thread-id=854, tx_id=57E4527476FBCE447820B1C9B844E548587A0EC8B4A75AB1094E55AA39B4AC98}
[INFO ] 2023-01-31T07:40:28,389Z [Mock network] corda.flow. - Successfully recorded received transaction locally. {fiber-id=10000014, flow-id=d4cf55dc-8abc-4010-a6a7-7ab1046d5d24, invocation_id=9a0dfa06-2315-4c2e-9d6d-3cfe8c31e275, invocation_timestamp=2023-01-31T07:40:28.280Z, origin=O=Mock Company 1, L=London, C=GB, session_id=9a0dfa06-2315-4c2e-9d6d-3cfe8c31e275, session_timestamp=2023-01-31T07:40:28.280Z, thread-id=854, tx_id=57E4527476FBCE447820B1C9B844E548587A0EC8B4A75AB1094E55AA39B4AC98}
[INFO ] 2023-01-31T07:40:28,493Z [Mock network] identity.PersistentIdentityService. - Linking: 0E76506335939406DC45983CF8EFDF335440AD6EC3134FB93CF3DA0286D394FD to O=Mock Company 1, L=London, C=GB {fiber-id=10000017, flow-id=9ffd8dfb-acc8-4626-96e0-27bd79a39ade, invocation_id=15a704dc-0aeb-475e-8787-c84aeddd7aac, invocation_timestamp=2023-01-31T07:40:28.458Z, origin=O=Mock Company 2, L=London, C=GB, session_id=15a704dc-0aeb-475e-8787-c84aeddd7aac, session_timestamp=2023-01-31T07:40:28.458Z, thread-id=854}
[INFO ] 2023-01-31T07:40:28,508Z [Mock network] identity.PersistentIdentityService. - Linking: 0E76506335939406DC45983CF8EFDF335440AD6EC3134FB93CF3DA0286D394FD to O=Mock Company 1, L=London, C=GB {actor_id=Only For Testing, actor_owning_identity=O=Mock Company 2, L=London, C=GB, actor_store_id=TEST, fiber-id=10000016, flow-id=8c131dd4-0f56-41b6-b45b-885cba9ff0d8, invocation_id=bb1f3810-d32f-46d3-a877-8bbe77c633b1, invocation_timestamp=2023-01-31T07:40:28.429Z, origin=Only For Testing, session_id=bb1f3810-d32f-46d3-a877-8bbe77c633b1, session_timestamp=2023-01-31T07:40:28.429Z, thread-id=854}
[INFO ] 2023-01-31T07:40:28,513Z [Mock network] identity.PersistentIdentityService. - Linking: 5A8A13D694707AA60F4B0C10297876235E48D90754AF9F0938786AF7671813FE to O=Mock Company 2, L=London, C=GB {actor_id=Only For Testing, actor_owning_identity=O=Mock Company 2, L=London, C=GB, actor_store_id=TEST, fiber-id=10000016, flow-id=8c131dd4-0f56-41b6-b45b-885cba9ff0d8, invocation_id=bb1f3810-d32f-46d3-a877-8bbe77c633b1, invocation_timestamp=2023-01-31T07:40:28.429Z, origin=Only For Testing, session_id=bb1f3810-d32f-46d3-a877-8bbe77c633b1, session_timestamp=2023-01-31T07:40:28.429Z, thread-id=854}
[INFO ] 2023-01-31T07:40:28,563Z [Mock network] identity.PersistentIdentityService. - Linking: 88F68B9A66FC3F9BECCC49BECF560237F3DE11D34D650BD37B41485DC272343E to O=Mock Company 3, L=London, C=GB {fiber-id=10000018, flow-id=d9be095e-a6af-442d-99c6-e33577e6c54b, invocation_id=f409e77f-c028-41bd-936d-00613fb4915f, invocation_timestamp=2023-01-31T07:40:28.525Z, origin=O=Mock Company 2, L=London, C=GB, session_id=f409e77f-c028-41bd-936d-00613fb4915f, session_timestamp=2023-01-31T07:40:28.525Z, thread-id=854}
[INFO ] 2023-01-31T07:40:28,577Z [Mock network] identity.PersistentIdentityService. - Linking: 88F68B9A66FC3F9BECCC49BECF560237F3DE11D34D650BD37B41485DC272343E to O=Mock Company 3, L=London, C=GB {actor_id=Only For Testing, actor_owning_identity=O=Mock Company 2, L=London, C=GB, actor_store_id=TEST, fiber-id=10000016, flow-id=8c131dd4-0f56-41b6-b45b-885cba9ff0d8, invocation_id=bb1f3810-d32f-46d3-a877-8bbe77c633b1, invocation_timestamp=2023-01-31T07:40:28.429Z, origin=Only For Testing, session_id=bb1f3810-d32f-46d3-a877-8bbe77c633b1, session_timestamp=2023-01-31T07:40:28.429Z, thread-id=854}
[INFO ] 2023-01-31T07:40:28,641Z [Mock network] corda.flow. - Received transaction acknowledgement request from party O=Mock Company 2, L=London, C=GB. {fiber-id=10000019, flow-id=df2c51f6-1ead-42c7-8f00-78fb77ca40df, invocation_id=8aa22a24-1170-4920-9182-20770be255a4, invocation_timestamp=2023-01-31T07:40:28.627Z, origin=O=Mock Company 2, L=London, C=GB, session_id=8aa22a24-1170-4920-9182-20770be255a4, session_timestamp=2023-01-31T07:40:28.627Z, thread-id=854, tx_id=A322CEAA8092FECBD5978E5F12A42FFDF28FF9A43C76A26C13149C7EDFD13ED2}
[INFO ] 2023-01-31T07:40:28,776Z [Mock network] corda.flow. - Transaction dependencies resolution completed. {fiber-id=10000019, flow-id=df2c51f6-1ead-42c7-8f00-78fb77ca40df, invocation_id=8aa22a24-1170-4920-9182-20770be255a4, invocation_timestamp=2023-01-31T07:40:28.627Z, origin=O=Mock Company 2, L=London, C=GB, session_id=8aa22a24-1170-4920-9182-20770be255a4, session_timestamp=2023-01-31T07:40:28.627Z, thread-id=854, tx_id=A322CEAA8092FECBD5978E5F12A42FFDF28FF9A43C76A26C13149C7EDFD13ED2}
[INFO ] 2023-01-31T07:40:28,860Z [Mock network] corda.flow. - Received transaction acknowledgement request from party O=Mock Company 2, L=London, C=GB. {fiber-id=10000020, flow-id=3848065a-febc-4931-ba58-c8dda08bdcd1, invocation_id=df399c6e-ae29-4e23-8bba-0971b73e7786, invocation_timestamp=2023-01-31T07:40:28.846Z, origin=O=Mock Company 2, L=London, C=GB, session_id=df399c6e-ae29-4e23-8bba-0971b73e7786, session_timestamp=2023-01-31T07:40:28.846Z, thread-id=854, tx_id=A322CEAA8092FECBD5978E5F12A42FFDF28FF9A43C76A26C13149C7EDFD13ED2}
[INFO ] 2023-01-31T07:40:28,870Z [Mock network] corda.flow. - Transaction dependencies resolution completed. {fiber-id=10000020, flow-id=3848065a-febc-4931-ba58-c8dda08bdcd1, invocation_id=df399c6e-ae29-4e23-8bba-0971b73e7786, invocation_timestamp=2023-01-31T07:40:28.846Z, origin=O=Mock Company 2, L=London, C=GB, session_id=df399c6e-ae29-4e23-8bba-0971b73e7786, session_timestamp=2023-01-31T07:40:28.846Z, thread-id=854, tx_id=A322CEAA8092FECBD5978E5F12A42FFDF28FF9A43C76A26C13149C7EDFD13ED2}
[INFO ] 2023-01-31T07:40:29,200Z [Mock network] corda.flow. - Sending transaction to notary: O=Notary, L=London, C=GB. {actor_id=Only For Testing, actor_owning_identity=O=Mock Company 2, L=London, C=GB, actor_store_id=TEST, fiber-id=10000016, flow-id=8c131dd4-0f56-41b6-b45b-885cba9ff0d8, invocation_id=bb1f3810-d32f-46d3-a877-8bbe77c633b1, invocation_timestamp=2023-01-31T07:40:28.429Z, origin=Only For Testing, session_id=bb1f3810-d32f-46d3-a877-8bbe77c633b1, session_timestamp=2023-01-31T07:40:28.429Z, thread-id=854, tx_id=A322CEAA8092FECBD5978E5F12A42FFDF28FF9A43C76A26C13149C7EDFD13ED2}
[INFO ] 2023-01-31T07:40:29,243Z [Mock network] corda.flow. - Received a notarisation request for Tx [A322CEAA8092FECBD5978E5F12A42FFDF28FF9A43C76A26C13149C7EDFD13ED2] from [O=Mock Company 2, L=London, C=GB] {fiber-id=10000021, flow-id=14759142-e3fc-4f8c-a4d2-c062fcf73a75, invocation_id=6c3fdf88-28ba-4ef4-8781-eb8a39c672b1, invocation_timestamp=2023-01-31T07:40:29.229Z, origin=O=Mock Company 2, L=London, C=GB, session_id=6c3fdf88-28ba-4ef4-8781-eb8a39c672b1, session_timestamp=2023-01-31T07:40:29.229Z, thread-id=854}
[INFO ] 2023-01-31T07:40:29,355Z [Notary request queue processor] jpa.JPAUniquenessProvider. - Processing notarization requests with 1 input states and 0 references {}
[INFO ] 2023-01-31T07:40:29,385Z [Mock network] corda.flow. - Transaction [A322CEAA8092FECBD5978E5F12A42FFDF28FF9A43C76A26C13149C7EDFD13ED2] successfully notarised, sending signature back to [O=Mock Company 2, L=London, C=GB] {fiber-id=10000021, flow-id=14759142-e3fc-4f8c-a4d2-c062fcf73a75, invocation_id=6c3fdf88-28ba-4ef4-8781-eb8a39c672b1, invocation_timestamp=2023-01-31T07:40:29.229Z, origin=O=Mock Company 2, L=London, C=GB, session_id=6c3fdf88-28ba-4ef4-8781-eb8a39c672b1, session_timestamp=2023-01-31T07:40:29.229Z, thread-id=854}
[INFO ] 2023-01-31T07:40:29,404Z [Mock network] corda.flow. - Notary responded (O=Notary, L=London, C=GB). {actor_id=Only For Testing, actor_owning_identity=O=Mock Company 2, L=London, C=GB, actor_store_id=TEST, fiber-id=10000016, flow-id=8c131dd4-0f56-41b6-b45b-885cba9ff0d8, invocation_id=bb1f3810-d32f-46d3-a877-8bbe77c633b1, invocation_timestamp=2023-01-31T07:40:28.429Z, origin=Only For Testing, session_id=bb1f3810-d32f-46d3-a877-8bbe77c633b1, session_timestamp=2023-01-31T07:40:28.429Z, thread-id=854, tx_id=A322CEAA8092FECBD5978E5F12A42FFDF28FF9A43C76A26C13149C7EDFD13ED2}
[INFO ] 2023-01-31T07:40:29,405Z [Mock network] corda.flow. - Recording transaction locally. {actor_id=Only For Testing, actor_owning_identity=O=Mock Company 2, L=London, C=GB, actor_store_id=TEST, fiber-id=10000016, flow-id=8c131dd4-0f56-41b6-b45b-885cba9ff0d8, invocation_id=bb1f3810-d32f-46d3-a877-8bbe77c633b1, invocation_timestamp=2023-01-31T07:40:28.429Z, origin=Only For Testing, session_id=bb1f3810-d32f-46d3-a877-8bbe77c633b1, session_timestamp=2023-01-31T07:40:28.429Z, thread-id=854, tx_id=A322CEAA8092FECBD5978E5F12A42FFDF28FF9A43C76A26C13149C7EDFD13ED2}
[INFO ] 2023-01-31T07:40:29,413Z [Mock network] corda.flow. - Recorded transaction locally successfully. {actor_id=Only For Testing, actor_owning_identity=O=Mock Company 2, L=London, C=GB, actor_store_id=TEST, fiber-id=10000016, flow-id=8c131dd4-0f56-41b6-b45b-885cba9ff0d8, invocation_id=bb1f3810-d32f-46d3-a877-8bbe77c633b1, invocation_timestamp=2023-01-31T07:40:28.429Z, origin=Only For Testing, session_id=bb1f3810-d32f-46d3-a877-8bbe77c633b1, session_timestamp=2023-01-31T07:40:28.429Z, thread-id=854, tx_id=A322CEAA8092FECBD5978E5F12A42FFDF28FF9A43C76A26C13149C7EDFD13ED2}
[INFO ] 2023-01-31T07:40:29,423Z [Mock network] corda.flow. - Received transaction acknowledgement request from party O=Mock Company 2, L=London, C=GB. {fiber-id=10000019, flow-id=df2c51f6-1ead-42c7-8f00-78fb77ca40df, invocation_id=8aa22a24-1170-4920-9182-20770be255a4, invocation_timestamp=2023-01-31T07:40:28.627Z, origin=O=Mock Company 2, L=London, C=GB, session_id=8aa22a24-1170-4920-9182-20770be255a4, session_timestamp=2023-01-31T07:40:28.627Z, thread-id=854, tx_id=A322CEAA8092FECBD5978E5F12A42FFDF28FF9A43C76A26C13149C7EDFD13ED2}
[INFO ] 2023-01-31T07:40:29,431Z [Mock network] corda.flow. - Transaction dependencies resolution completed. {fiber-id=10000019, flow-id=df2c51f6-1ead-42c7-8f00-78fb77ca40df, invocation_id=8aa22a24-1170-4920-9182-20770be255a4, invocation_timestamp=2023-01-31T07:40:28.627Z, origin=O=Mock Company 2, L=London, C=GB, session_id=8aa22a24-1170-4920-9182-20770be255a4, session_timestamp=2023-01-31T07:40:28.627Z, thread-id=854, tx_id=A322CEAA8092FECBD5978E5F12A42FFDF28FF9A43C76A26C13149C7EDFD13ED2}
[INFO ] 2023-01-31T07:40:29,439Z [Mock network] corda.flow. - Successfully received fully signed tx. Sending it to the vault for processing. {fiber-id=10000019, flow-id=df2c51f6-1ead-42c7-8f00-78fb77ca40df, invocation_id=8aa22a24-1170-4920-9182-20770be255a4, invocation_timestamp=2023-01-31T07:40:28.627Z, origin=O=Mock Company 2, L=London, C=GB, session_id=8aa22a24-1170-4920-9182-20770be255a4, session_timestamp=2023-01-31T07:40:28.627Z, thread-id=854, tx_id=A322CEAA8092FECBD5978E5F12A42FFDF28FF9A43C76A26C13149C7EDFD13ED2}
[INFO ] 2023-01-31T07:40:29,444Z [Mock network] corda.flow. - Successfully recorded received transaction locally. {fiber-id=10000019, flow-id=df2c51f6-1ead-42c7-8f00-78fb77ca40df, invocation_id=8aa22a24-1170-4920-9182-20770be255a4, invocation_timestamp=2023-01-31T07:40:28.627Z, origin=O=Mock Company 2, L=London, C=GB, session_id=8aa22a24-1170-4920-9182-20770be255a4, session_timestamp=2023-01-31T07:40:28.627Z, thread-id=854, tx_id=A322CEAA8092FECBD5978E5F12A42FFDF28FF9A43C76A26C13149C7EDFD13ED2}
[WARN ] 2023-01-31T07:40:29,446Z [Mock network] persistence.AbstractPartyToX500NameAsStringConverter. - Identity service unable to resolve AbstractParty: Anonymous(DL4NpKc81zgeaLsrpjtFT75vEhoeG6E2Yy82fLrFuwFfFW) {actor_id=Only For Testing, actor_owning_identity=O=Mock Company 2, L=London, C=GB, actor_store_id=TEST, fiber-id=10000019, flow-id=df2c51f6-1ead-42c7-8f00-78fb77ca40df, invocation_id=8aa22a24-1170-4920-9182-20770be255a4, invocation_timestamp=2023-01-31T07:40:28.627Z, origin=O=Mock Company 2, L=London, C=GB, session_id=8aa22a24-1170-4920-9182-20770be255a4, session_timestamp=2023-01-31T07:40:28.627Z, thread-id=854}
[INFO ] 2023-01-31T07:40:29,452Z [Mock network] corda.flow. - Party O=Mock Company 3, L=London, C=GB received the transaction. {actor_id=Only For Testing, actor_owning_identity=O=Mock Company 2, L=London, C=GB, actor_store_id=TEST, fiber-id=10000016, flow-id=8c131dd4-0f56-41b6-b45b-885cba9ff0d8, invocation_id=bb1f3810-d32f-46d3-a877-8bbe77c633b1, invocation_timestamp=2023-01-31T07:40:28.429Z, origin=Only For Testing, session_id=bb1f3810-d32f-46d3-a877-8bbe77c633b1, session_timestamp=2023-01-31T07:40:28.429Z, thread-id=854, tx_id=A322CEAA8092FECBD5978E5F12A42FFDF28FF9A43C76A26C13149C7EDFD13ED2}
[INFO ] 2023-01-31T07:40:29,460Z [Mock network] corda.flow. - Received transaction acknowledgement request from party O=Mock Company 2, L=London, C=GB. {fiber-id=10000020, flow-id=3848065a-febc-4931-ba58-c8dda08bdcd1, invocation_id=df399c6e-ae29-4e23-8bba-0971b73e7786, invocation_timestamp=2023-01-31T07:40:28.846Z, origin=O=Mock Company 2, L=London, C=GB, session_id=df399c6e-ae29-4e23-8bba-0971b73e7786, session_timestamp=2023-01-31T07:40:28.846Z, thread-id=854, tx_id=A322CEAA8092FECBD5978E5F12A42FFDF28FF9A43C76A26C13149C7EDFD13ED2}
[INFO ] 2023-01-31T07:40:29,466Z [Mock network] corda.flow. - Transaction dependencies resolution completed. {fiber-id=10000020, flow-id=3848065a-febc-4931-ba58-c8dda08bdcd1, invocation_id=df399c6e-ae29-4e23-8bba-0971b73e7786, invocation_timestamp=2023-01-31T07:40:28.846Z, origin=O=Mock Company 2, L=London, C=GB, session_id=df399c6e-ae29-4e23-8bba-0971b73e7786, session_timestamp=2023-01-31T07:40:28.846Z, thread-id=854, tx_id=A322CEAA8092FECBD5978E5F12A42FFDF28FF9A43C76A26C13149C7EDFD13ED2}
[INFO ] 2023-01-31T07:40:29,473Z [Mock network] corda.flow. - Successfully received fully signed tx. Sending it to the vault for processing. {fiber-id=10000020, flow-id=3848065a-febc-4931-ba58-c8dda08bdcd1, invocation_id=df399c6e-ae29-4e23-8bba-0971b73e7786, invocation_timestamp=2023-01-31T07:40:28.846Z, origin=O=Mock Company 2, L=London, C=GB, session_id=df399c6e-ae29-4e23-8bba-0971b73e7786, session_timestamp=2023-01-31T07:40:28.846Z, thread-id=854, tx_id=A322CEAA8092FECBD5978E5F12A42FFDF28FF9A43C76A26C13149C7EDFD13ED2}
[INFO ] 2023-01-31T07:40:29,479Z [Mock network] corda.flow. - Successfully recorded received transaction locally. {fiber-id=10000020, flow-id=3848065a-febc-4931-ba58-c8dda08bdcd1, invocation_id=df399c6e-ae29-4e23-8bba-0971b73e7786, invocation_timestamp=2023-01-31T07:40:28.846Z, origin=O=Mock Company 2, L=London, C=GB, session_id=df399c6e-ae29-4e23-8bba-0971b73e7786, session_timestamp=2023-01-31T07:40:28.846Z, thread-id=854, tx_id=A322CEAA8092FECBD5978E5F12A42FFDF28FF9A43C76A26C13149C7EDFD13ED2}
[WARN ] 2023-01-31T07:40:29,481Z [Mock network] persistence.AbstractPartyToX500NameAsStringConverter. - Identity service unable to resolve AbstractParty: Anonymous(DLADeVatA6nCeWpq8u2w5yZ2rkLJawaSeD5RjCjN9WiQCD) {actor_id=Only For Testing, actor_owning_identity=O=Mock Company 2, L=London, C=GB, actor_store_id=TEST, fiber-id=10000020, flow-id=3848065a-febc-4931-ba58-c8dda08bdcd1, invocation_id=df399c6e-ae29-4e23-8bba-0971b73e7786, invocation_timestamp=2023-01-31T07:40:28.846Z, origin=O=Mock Company 2, L=London, C=GB, session_id=df399c6e-ae29-4e23-8bba-0971b73e7786, session_timestamp=2023-01-31T07:40:28.846Z, thread-id=854}
[INFO ] 2023-01-31T07:40:29,487Z [Mock network] corda.flow. - Party O=Mock Company 1, L=London, C=GB received the transaction. {actor_id=Only For Testing, actor_owning_identity=O=Mock Company 2, L=London, C=GB, actor_store_id=TEST, fiber-id=10000016, flow-id=8c131dd4-0f56-41b6-b45b-885cba9ff0d8, invocation_id=bb1f3810-d32f-46d3-a877-8bbe77c633b1, invocation_timestamp=2023-01-31T07:40:28.429Z, origin=Only For Testing, session_id=bb1f3810-d32f-46d3-a877-8bbe77c633b1, session_timestamp=2023-01-31T07:40:28.429Z, thread-id=854, tx_id=A322CEAA8092FECBD5978E5F12A42FFDF28FF9A43C76A26C13149C7EDFD13ED2}
[INFO ] 2023-01-31T07:40:29,487Z [Mock network] corda.flow. - All parties received the transaction successfully. {actor_id=Only For Testing, actor_owning_identity=O=Mock Company 2, L=London, C=GB, actor_store_id=TEST, fiber-id=10000016, flow-id=8c131dd4-0f56-41b6-b45b-885cba9ff0d8, invocation_id=bb1f3810-d32f-46d3-a877-8bbe77c633b1, invocation_timestamp=2023-01-31T07:40:28.429Z, origin=Only For Testing, session_id=bb1f3810-d32f-46d3-a877-8bbe77c633b1, session_timestamp=2023-01-31T07:40:28.429Z, thread-id=854, tx_id=A322CEAA8092FECBD5978E5F12A42FFDF28FF9A43C76A26C13149C7EDFD13ED2}
[INFO ] 2023-01-31T07:40:29,513Z [Mock network] identity.PersistentIdentityService. - Linking: AB93B1E5F577A117D037AE10D9670939757895DD46BF5B0BA557092599B2FF6F to O=Mock Company 1, L=London, C=GB {actor_id=Only For Testing, actor_owning_identity=O=Mock Company 1, L=London, C=GB, actor_store_id=TEST, fiber-id=10000023, flow-id=9fa159fa-67f2-4741-8a5b-a56ec36423f7, invocation_id=c86bca51-f178-49e6-b323-e90fcf102dd5, invocation_timestamp=2023-01-31T07:40:29.507Z, origin=Only For Testing, session_id=c86bca51-f178-49e6-b323-e90fcf102dd5, session_timestamp=2023-01-31T07:40:29.507Z, thread-id=854}
[INFO ] 2023-01-31T07:40:29,628Z [Mock network] corda.flow. - No need to notarise this transaction. {actor_id=Only For Testing, actor_owning_identity=O=Mock Company 1, L=London, C=GB, actor_store_id=TEST, fiber-id=10000023, flow-id=9fa159fa-67f2-4741-8a5b-a56ec36423f7, invocation_id=c86bca51-f178-49e6-b323-e90fcf102dd5, invocation_timestamp=2023-01-31T07:40:29.507Z, origin=Only For Testing, session_id=c86bca51-f178-49e6-b323-e90fcf102dd5, session_timestamp=2023-01-31T07:40:29.507Z, thread-id=854, tx_id=A9F517212CE45EB46D5E21DAE1F0C905BC846F40102778AEAEA17DBEBF8B91DC}
[INFO ] 2023-01-31T07:40:29,628Z [Mock network] corda.flow. - Recording transaction locally. {actor_id=Only For Testing, actor_owning_identity=O=Mock Company 1, L=London, C=GB, actor_store_id=TEST, fiber-id=10000023, flow-id=9fa159fa-67f2-4741-8a5b-a56ec36423f7, invocation_id=c86bca51-f178-49e6-b323-e90fcf102dd5, invocation_timestamp=2023-01-31T07:40:29.507Z, origin=Only For Testing, session_id=c86bca51-f178-49e6-b323-e90fcf102dd5, session_timestamp=2023-01-31T07:40:29.507Z, thread-id=854, tx_id=A9F517212CE45EB46D5E21DAE1F0C905BC846F40102778AEAEA17DBEBF8B91DC}
[INFO ] 2023-01-31T07:40:29,646Z [Mock network] corda.flow. - Recorded transaction locally successfully. {actor_id=Only For Testing, actor_owning_identity=O=Mock Company 1, L=London, C=GB, actor_store_id=TEST, fiber-id=10000023, flow-id=9fa159fa-67f2-4741-8a5b-a56ec36423f7, invocation_id=c86bca51-f178-49e6-b323-e90fcf102dd5, invocation_timestamp=2023-01-31T07:40:29.507Z, origin=Only For Testing, session_id=c86bca51-f178-49e6-b323-e90fcf102dd5, session_timestamp=2023-01-31T07:40:29.507Z, thread-id=854, tx_id=A9F517212CE45EB46D5E21DAE1F0C905BC846F40102778AEAEA17DBEBF8B91DC}
[INFO ] 2023-01-31T07:40:29,646Z [Mock network] corda.flow. - All parties received the transaction successfully. {actor_id=Only For Testing, actor_owning_identity=O=Mock Company 1, L=London, C=GB, actor_store_id=TEST, fiber-id=10000023, flow-id=9fa159fa-67f2-4741-8a5b-a56ec36423f7, invocation_id=c86bca51-f178-49e6-b323-e90fcf102dd5, invocation_timestamp=2023-01-31T07:40:29.507Z, origin=Only For Testing, session_id=c86bca51-f178-49e6-b323-e90fcf102dd5, session_timestamp=2023-01-31T07:40:29.507Z, thread-id=854, tx_id=A9F517212CE45EB46D5E21DAE1F0C905BC846F40102778AEAEA17DBEBF8B91DC}
[INFO ] 2023-01-31T07:40:29,665Z [Mock network] identity.PersistentIdentityService. - Linking: C7E6A3AC851B9EBC0CEDFC07AD8C81AFE7EF21715D36441629E5FB492B9B07B2 to O=Mock Company 1, L=London, C=GB {actor_id=Only For Testing, actor_owning_identity=O=Mock Company 1, L=London, C=GB, actor_store_id=TEST, fiber-id=10000024, flow-id=2b1849f1-cc7b-45a0-8eef-c6a26d3574bc, invocation_id=fc7df8cf-5f49-4ddf-ba22-bc00e1cd7ec2, invocation_timestamp=2023-01-31T07:40:29.661Z, origin=Only For Testing, session_id=fc7df8cf-5f49-4ddf-ba22-bc00e1cd7ec2, session_timestamp=2023-01-31T07:40:29.661Z, thread-id=854}
[INFO ] 2023-01-31T07:40:29,678Z [Mock network] corda.flow. - No need to notarise this transaction. {actor_id=Only For Testing, actor_owning_identity=O=Mock Company 1, L=London, C=GB, actor_store_id=TEST, fiber-id=10000024, flow-id=2b1849f1-cc7b-45a0-8eef-c6a26d3574bc, invocation_id=fc7df8cf-5f49-4ddf-ba22-bc00e1cd7ec2, invocation_timestamp=2023-01-31T07:40:29.661Z, origin=Only For Testing, session_id=fc7df8cf-5f49-4ddf-ba22-bc00e1cd7ec2, session_timestamp=2023-01-31T07:40:29.661Z, thread-id=854, tx_id=78D515AD5AE2C93C4E258B4247B51F23778A2A0E44780A44DAFCE95B6959DC91}
[INFO ] 2023-01-31T07:40:29,678Z [Mock network] corda.flow. - Recording transaction locally. {actor_id=Only For Testing, actor_owning_identity=O=Mock Company 1, L=London, C=GB, actor_store_id=TEST, fiber-id=10000024, flow-id=2b1849f1-cc7b-45a0-8eef-c6a26d3574bc, invocation_id=fc7df8cf-5f49-4ddf-ba22-bc00e1cd7ec2, invocation_timestamp=2023-01-31T07:40:29.661Z, origin=Only For Testing, session_id=fc7df8cf-5f49-4ddf-ba22-bc00e1cd7ec2, session_timestamp=2023-01-31T07:40:29.661Z, thread-id=854, tx_id=78D515AD5AE2C93C4E258B4247B51F23778A2A0E44780A44DAFCE95B6959DC91}
[INFO ] 2023-01-31T07:40:29,689Z [Mock network] corda.flow. - Recorded transaction locally successfully. {actor_id=Only For Testing, actor_owning_identity=O=Mock Company 1, L=London, C=GB, actor_store_id=TEST, fiber-id=10000024, flow-id=2b1849f1-cc7b-45a0-8eef-c6a26d3574bc, invocation_id=fc7df8cf-5f49-4ddf-ba22-bc00e1cd7ec2, invocation_timestamp=2023-01-31T07:40:29.661Z, origin=Only For Testing, session_id=fc7df8cf-5f49-4ddf-ba22-bc00e1cd7ec2, session_timestamp=2023-01-31T07:40:29.661Z, thread-id=854, tx_id=78D515AD5AE2C93C4E258B4247B51F23778A2A0E44780A44DAFCE95B6959DC91}
[INFO ] 2023-01-31T07:40:29,689Z [Mock network] corda.flow. - All parties received the transaction successfully. {actor_id=Only For Testing, actor_owning_identity=O=Mock Company 1, L=London, C=GB, actor_store_id=TEST, fiber-id=10000024, flow-id=2b1849f1-cc7b-45a0-8eef-c6a26d3574bc, invocation_id=fc7df8cf-5f49-4ddf-ba22-bc00e1cd7ec2, invocation_timestamp=2023-01-31T07:40:29.661Z, origin=Only For Testing, session_id=fc7df8cf-5f49-4ddf-ba22-bc00e1cd7ec2, session_timestamp=2023-01-31T07:40:29.661Z, thread-id=854, tx_id=78D515AD5AE2C93C4E258B4247B51F23778A2A0E44780A44DAFCE95B6959DC91}
[INFO ] 2023-01-31T07:40:29,742Z [Mock network] identity.PersistentIdentityService. - Linking: CE7870AD5B944142FE39ED5289C618B71E5C2F05A5C773D8DE54F611AF73BE89 to O=Mock Company 1, L=London, C=GB {actor_id=Only For Testing, actor_owning_identity=O=Mock Company 1, L=London, C=GB, actor_store_id=TEST, fiber-id=10000026, flow-id=02219a88-233c-4408-8fb0-e37b50b53e04, invocation_id=814ec657-afd9-4711-ba0b-0009fd895e7f, invocation_timestamp=2023-01-31T07:40:29.715Z, origin=Only For Testing, session_id=814ec657-afd9-4711-ba0b-0009fd895e7f, session_timestamp=2023-01-31T07:40:29.715Z, thread-id=854}
[INFO ] 2023-01-31T07:40:29,787Z [Mock network] identity.PersistentIdentityService. - Linking: 8DBC731B57B832CB2E4477CEFDCA9A713DD9D35BAC300E07318E82CC90ADCE59 to O=Mock Company 3, L=London, C=GB {fiber-id=10000027, flow-id=340a3811-1b7e-4393-90d0-2fab6db95018, invocation_id=b0a5084e-e589-403e-be16-e128305ef796, invocation_timestamp=2023-01-31T07:40:29.761Z, origin=O=Mock Company 1, L=London, C=GB, session_id=b0a5084e-e589-403e-be16-e128305ef796, session_timestamp=2023-01-31T07:40:29.761Z, thread-id=854}
[INFO ] 2023-01-31T07:40:29,797Z [Mock network] identity.PersistentIdentityService. - Linking: 8DBC731B57B832CB2E4477CEFDCA9A713DD9D35BAC300E07318E82CC90ADCE59 to O=Mock Company 3, L=London, C=GB {actor_id=Only For Testing, actor_owning_identity=O=Mock Company 1, L=London, C=GB, actor_store_id=TEST, fiber-id=10000026, flow-id=02219a88-233c-4408-8fb0-e37b50b53e04, invocation_id=814ec657-afd9-4711-ba0b-0009fd895e7f, invocation_timestamp=2023-01-31T07:40:29.715Z, origin=Only For Testing, session_id=814ec657-afd9-4711-ba0b-0009fd895e7f, session_timestamp=2023-01-31T07:40:29.715Z, thread-id=854}
[INFO ] 2023-01-31T07:40:30,001Z [Mock network] corda.flow. - Received transaction acknowledgement request from party O=Mock Company 1, L=London, C=GB. {fiber-id=10000028, flow-id=1e1a8f4c-486e-4901-ba69-3c906954bdac, invocation_id=e9eb1dcd-004a-4c84-aa69-318e9319d299, invocation_timestamp=2023-01-31T07:40:29.984Z, origin=O=Mock Company 1, L=London, C=GB, session_id=e9eb1dcd-004a-4c84-aa69-318e9319d299, session_timestamp=2023-01-31T07:40:29.984Z, thread-id=854, tx_id=5776DD8CA997A5CC61E2E97CA1BD831E77AAEE5DE7213BE5AC35DB26A3B61748}
[INFO ] 2023-01-31T07:40:30,311Z [Mock network] corda.flow. - Transaction dependencies resolution completed. {fiber-id=10000028, flow-id=1e1a8f4c-486e-4901-ba69-3c906954bdac, invocation_id=e9eb1dcd-004a-4c84-aa69-318e9319d299, invocation_timestamp=2023-01-31T07:40:29.984Z, origin=O=Mock Company 1, L=London, C=GB, session_id=e9eb1dcd-004a-4c84-aa69-318e9319d299, session_timestamp=2023-01-31T07:40:29.984Z, thread-id=854, tx_id=5776DD8CA997A5CC61E2E97CA1BD831E77AAEE5DE7213BE5AC35DB26A3B61748}
[INFO ] 2023-01-31T07:40:30,423Z [Mock network] corda.flow. - Flow raised an error: Could not find Party for Anonymous(DLADeVatA6nCeWpq8u2w5yZ2rkLJawaSeD5RjCjN9WiQCD). Sending it to flow hospital to be triaged. {actor_id=Only For Testing, actor_owning_identity=O=Mock Company 1, L=London, C=GB, actor_store_id=TEST, fiber-id=10000026, flow-id=02219a88-233c-4408-8fb0-e37b50b53e04, invocation_id=814ec657-afd9-4711-ba0b-0009fd895e7f, invocation_timestamp=2023-01-31T07:40:29.715Z, origin=Only For Testing, session_id=814ec657-afd9-4711-ba0b-0009fd895e7f, session_timestamp=2023-01-31T07:40:29.715Z, thread-id=854, tx_id=5776DD8CA997A5CC61E2E97CA1BD831E77AAEE5DE7213BE5AC35DB26A3B61748}
[INFO ] 2023-01-31T07:40:30,427Z [Mock network] statemachine.StaffedFlowHospital. - Flow [02219a88-233c-4408-8fb0-e37b50b53e04] admitted to hospital in state StateMachineState(checkpoint=Checkpoint(checkpointState=CheckpointState(invocationContext=InvocationContext(origin=RPC(actor=Actor(id=Id(value=Only For Testing), serviceId=AuthServiceId(value=TEST), owningLegalIdentity=O=Mock Company 1, L=London, C=GB)), trace=Trace(invocationId=814ec657-afd9-4711-ba0b-0009fd895e7f, timestamp: 2023-01-31T07:40:29.715Z, entityType: Invocation, sessionId=814ec657-afd9-4711-ba0b-0009fd895e7f, timestamp: 2023-01-31T07:40:29.715Z, entityType: Session), actor=Actor(id=Id(value=Only For Testing), serviceId=AuthServiceId(value=TEST), owningLegalIdentity=O=Mock Company 1, L=London, C=GB), externalTrace=null, impersonatedActor=null, arguments=[], clientId=null), ourIdentity=O=Mock Company 1, L=London, C=GB, sessions={SessionId(toLong=-3358756275887911989)=Initiated(peerParty=O=Mock Company 3, L=London, C=GB, peerFlowInfo=FlowInfo(flowVersion=1, appName=<unknown>), receivedMessages=[], otherSideErrored=false, peerSinkSessionId=SessionId(toLong=2957585445716046757), deduplicationSeed=R--3358756275887911989-5594156702427061583)}, sessionsToBeClosed=[], subFlowStack=[Initiating(flowClass=class net.corda.samples.obligation.flows.IOUSettleFlow, classToInitiateWith=class net.corda.samples.obligation.flows.IOUSettleFlow, flowInfo=FlowInfo(flowVersion=1, appName=<unknown>), subFlowVersion=CorDappFlow(platformVersion=11, corDappName=workflows-1.0, corDappHash=F8E3613207E5ABAEC38930FAA426F7BA91464AA72DAF3EFB74917A0BA71A146E), isEnabledTimedFlow=false)], numberOfSuspends=6, numberOfCommits=7), flowState=Started(flowIORequest=Receive(sessions=[FlowSessionImpl(destination=O=Mock Company 3, L=London, C=GB, sourceSessionId=SessionId(toLong=-3358756275887911989))]), frozenFiber=36B3747FAEAA5570C90229D45B47CD814A145185F8C8F6E45922B34B9F609168), errorState=Clean, result=null, status=RUNNABLE, progressStep=Starting, flowIoRequest=Receive, compatible=true), flowLogic=net.corda.samples.obligation.flows.IOUSettleFlow@71458343, pendingDeduplicationHandlers=[net.corda.testing.node.internal.MockNodeMessagingService$InMemoryDeduplicationHandler@2ad966ff], isFlowResumed=true, isWaitingForFuture=false, future=null, isAnyCheckpointPersisted=true, isStartIdempotent=false, isRemoved=false, isKilled=false, isDead=false, senderUUID=b7a8af6e-2e00-46fb-860a-22ad29e03037, reloadCheckpointAfterSuspendCount=null, numberOfCommits=7, lock=java.util.concurrent.Semaphore@3bc6e1dd[Permits = 0]) {actor_id=Only For Testing, actor_owning_identity=O=Mock Company 1, L=London, C=GB, actor_store_id=TEST, fiber-id=10000026, flow-id=02219a88-233c-4408-8fb0-e37b50b53e04, invocation_id=814ec657-afd9-4711-ba0b-0009fd895e7f, invocation_timestamp=2023-01-31T07:40:29.715Z, origin=Only For Testing, session_id=814ec657-afd9-4711-ba0b-0009fd895e7f, session_timestamp=2023-01-31T07:40:29.715Z, thread-id=854, tx_id=5776DD8CA997A5CC61E2E97CA1BD831E77AAEE5DE7213BE5AC35DB26A3B61748}
[INFO ] 2023-01-31T07:40:30,429Z [Mock network] statemachine.StaffedFlowHospital. - Error 1 of 1: {actor_id=Only For Testing, actor_owning_identity=O=Mock Company 1, L=London, C=GB, actor_store_id=TEST, fiber-id=10000026, flow-id=02219a88-233c-4408-8fb0-e37b50b53e04, invocation_id=814ec657-afd9-4711-ba0b-0009fd895e7f, invocation_timestamp=2023-01-31T07:40:29.715Z, origin=Only For Testing, session_id=814ec657-afd9-4711-ba0b-0009fd895e7f, session_timestamp=2023-01-31T07:40:29.715Z, thread-id=854, tx_id=5776DD8CA997A5CC61E2E97CA1BD831E77AAEE5DE7213BE5AC35DB26A3B61748}
java.lang.IllegalArgumentException: Could not find Party for Anonymous(DLADeVatA6nCeWpq8u2w5yZ2rkLJawaSeD5RjCjN9WiQCD)
	at net.corda.core.identity.IdentityUtils.groupAbstractPartyByWellKnownParty(IdentityUtils.kt:47) ~[corda-core-4.9.jar:?]
	at net.corda.core.identity.IdentityUtils.groupAbstractPartyByWellKnownParty(IdentityUtils.kt:63) ~[corda-core-4.9.jar:?]
	at net.corda.core.flows.FinalityFlow.extractExternalParticipants(FinalityFlow.kt:252) ~[corda-core-4.9.jar:?]
	at net.corda.core.flows.FinalityFlow.call(FinalityFlow.kt:162) ~[corda-core-4.9.jar:?]
	at net.corda.core.flows.FinalityFlow.call(FinalityFlow.kt:43) ~[corda-core-4.9.jar:?]
	at net.corda.node.services.statemachine.FlowStateMachineImpl.subFlow(FlowStateMachineImpl.kt:420) ~[corda-node-4.9.jar:?]
	at net.corda.core.flows.FlowLogic.subFlow(FlowLogic.kt:409) ~[corda-core-4.9.jar:?]
	at net.corda.samples.obligation.flows.IOUSettleFlow.call(IOUSettleFlow.kt:116) ~[main/:?]
	at net.corda.samples.obligation.flows.IOUSettleFlow.call(IOUSettleFlow.kt:30) ~[main/:?]
	at net.corda.node.services.statemachine.FlowStateMachineImpl.run(FlowStateMachineImpl.kt:349) ~[corda-node-4.9.jar:?]
	at net.corda.node.services.statemachine.FlowStateMachineImpl.run(FlowStateMachineImpl.kt:71) ~[corda-node-4.9.jar:?]
	at co.paralleluniverse.fibers.Fiber.run1(Fiber.java:1092) ~[quasar-core-0.7.10.jar:0.7.10]
	at co.paralleluniverse.fibers.Fiber.exec(Fiber.java:788) ~[quasar-core-0.7.10.jar:0.7.10]
	at co.paralleluniverse.fibers.RunnableFiberTask.doExec(RunnableFiberTask.java:100) ~[quasar-core-0.7.10.jar:0.7.10]
	at co.paralleluniverse.fibers.RunnableFiberTask.run(RunnableFiberTask.java:91) ~[quasar-core-0.7.10.jar:0.7.10]
	at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511) ~[?:1.8.0_202]
	at java.util.concurrent.FutureTask.run(FutureTask.java:266) ~[?:1.8.0_202]
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.access$201(ScheduledThreadPoolExecutor.java:180) ~[?:1.8.0_202]
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.run(ScheduledThreadPoolExecutor.java:293) ~[?:1.8.0_202]
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149) ~[?:1.8.0_202]
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624) ~[?:1.8.0_202]
	at net.corda.node.utilities.AffinityExecutor$ServiceAffinityExecutor$1$thread$1.run(AffinityExecutor.kt:63) ~[corda-node-4.9.jar:?]
[INFO ] 2023-01-31T07:40:30,433Z [Mock network] statemachine.StaffedFlowHospital. - Flow error allowed to propagate {actor_id=Only For Testing, actor_owning_identity=O=Mock Company 1, L=London, C=GB, actor_store_id=TEST, fiber-id=10000026, flow-id=02219a88-233c-4408-8fb0-e37b50b53e04, invocation_id=814ec657-afd9-4711-ba0b-0009fd895e7f, invocation_timestamp=2023-01-31T07:40:29.715Z, origin=Only For Testing, session_id=814ec657-afd9-4711-ba0b-0009fd895e7f, session_timestamp=2023-01-31T07:40:29.715Z, thread-id=854, tx_id=5776DD8CA997A5CC61E2E97CA1BD831E77AAEE5DE7213BE5AC35DB26A3B61748}
java.lang.IllegalArgumentException: Could not find Party for Anonymous(DLADeVatA6nCeWpq8u2w5yZ2rkLJawaSeD5RjCjN9WiQCD)
	at net.corda.core.identity.IdentityUtils.groupAbstractPartyByWellKnownParty(IdentityUtils.kt:47) ~[corda-core-4.9.jar:?]
	at net.corda.core.identity.IdentityUtils.groupAbstractPartyByWellKnownParty(IdentityUtils.kt:63) ~[corda-core-4.9.jar:?]
	at net.corda.core.flows.FinalityFlow.extractExternalParticipants(FinalityFlow.kt:252) ~[corda-core-4.9.jar:?]
	at net.corda.core.flows.FinalityFlow.call(FinalityFlow.kt:162) ~[corda-core-4.9.jar:?]
	at net.corda.core.flows.FinalityFlow.call(FinalityFlow.kt:43) ~[corda-core-4.9.jar:?]
	at net.corda.node.services.statemachine.FlowStateMachineImpl.subFlow(FlowStateMachineImpl.kt:420) ~[corda-node-4.9.jar:?]
	at net.corda.core.flows.FlowLogic.subFlow(FlowLogic.kt:409) ~[corda-core-4.9.jar:?]
	at net.corda.samples.obligation.flows.IOUSettleFlow.call(IOUSettleFlow.kt:116) ~[main/:?]
	at net.corda.samples.obligation.flows.IOUSettleFlow.call(IOUSettleFlow.kt:30) ~[main/:?]
	at net.corda.node.services.statemachine.FlowStateMachineImpl.run(FlowStateMachineImpl.kt:349) ~[corda-node-4.9.jar:?]
	at net.corda.node.services.statemachine.FlowStateMachineImpl.run(FlowStateMachineImpl.kt:71) ~[corda-node-4.9.jar:?]
	at co.paralleluniverse.fibers.Fiber.run1(Fiber.java:1092) ~[quasar-core-0.7.10.jar:0.7.10]
	at co.paralleluniverse.fibers.Fiber.exec(Fiber.java:788) ~[quasar-core-0.7.10.jar:0.7.10]
	at co.paralleluniverse.fibers.RunnableFiberTask.doExec(RunnableFiberTask.java:100) ~[quasar-core-0.7.10.jar:0.7.10]
	at co.paralleluniverse.fibers.RunnableFiberTask.run(RunnableFiberTask.java:91) ~[quasar-core-0.7.10.jar:0.7.10]
	at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511) ~[?:1.8.0_202]
	at java.util.concurrent.FutureTask.run(FutureTask.java:266) ~[?:1.8.0_202]
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.access$201(ScheduledThreadPoolExecutor.java:180) ~[?:1.8.0_202]
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.run(ScheduledThreadPoolExecutor.java:293) ~[?:1.8.0_202]
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149) ~[?:1.8.0_202]
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624) ~[?:1.8.0_202]
	at net.corda.node.utilities.AffinityExecutor$ServiceAffinityExecutor$1$thread$1.run(AffinityExecutor.kt:63) ~[corda-node-4.9.jar:?]
[WARN ] 2023-01-31T07:40:30,474Z [Mock network] interceptors.DumpHistoryOnErrorInterceptor. - Flow [02219a88-233c-4408-8fb0-e37b50b53e04] errored, dumping all transitions:

 --- Transition of flow [02219a88-233c-4408-8fb0-e37b50b53e04] ---
  Timestamp: 2023-01-31T07:40:29.739Z
  Event: DoRemainingWork
  Actions: 
    CreateTransaction
    PersistCheckpoint(id=[02219a88-233c-4408-8fb0-e37b50b53e04], checkpoint=Checkpoint(checkpointState=CheckpointState(invocationContext=InvocationContext(origin=RPC(actor=Actor(id=Id(value=Only For Testing), serviceId=AuthServiceId(value=TEST), owningLegalIdentity=O=Mock Company 1, L=London, C=GB)), trace=Trace(invocationId=814ec657-afd9-4711-ba0b-0009fd895e7f, timestamp: 2023-01-31T07:40:29.715Z, entityType: Invocation, sessionId=814ec657-afd9-4711-ba0b-0009fd895e7f, timestamp: 2023-01-31T07:40:29.715Z, entityType: Session), actor=Actor(id=Id(value=Only For Testing), serviceId=AuthServiceId(value=TEST), owningLegalIdentity=O=Mock Company 1, L=London, C=GB), externalTrace=null, impersonatedActor=null, arguments=[], clientId=null), ourIdentity=O=Mock Company 1, L=London, C=GB, sessions={}, sessionsToBeClosed=[], subFlowStack=[Initiating(flowClass=class net.corda.samples.obligation.flows.IOUSettleFlow, classToInitiateWith=class net.corda.samples.obligation.flows.IOUSettleFlow, flowInfo=FlowInfo(flowVersion=1, appName=<unknown>), subFlowVersion=CorDappFlow(platformVersion=11, corDappName=workflows-1.0, corDappHash=F8E3613207E5ABAEC38930FAA426F7BA91464AA72DAF3EFB74917A0BA71A146E), isEnabledTimedFlow=false)], numberOfSuspends=0, numberOfCommits=1), flowState=Unstarted(flowStart=Explicit, frozenFlowLogic=E5D89117AA0B3572BCDE43EA87C38B41B96F1EC6D9F1A949D1A49463EB040B85), errorState=Clean, result=null, status=RUNNABLE, progressStep=null, flowIoRequest=null, compatible=true), isCheckpointUpdate=false)
    PersistDeduplicationFacts(deduplicationHandlers=[net.corda.node.internal.FlowStarterImpl$startFlow$startFlowEvent$1@f5b7308])
    CommitTransaction
    AcknowledgeMessages(deduplicationHandlers=[net.corda.node.internal.FlowStarterImpl$startFlow$startFlowEvent$1@f5b7308])
    SignalFlowHasStarted(flowId=[02219a88-233c-4408-8fb0-e37b50b53e04])
    CreateTransaction
  Continuation: Resume(result=null)
  Diff between previous and next state:
pendingDeduplicationHandlers: 
    [net.corda.node.internal.FlowStarterImpl$startFlow$startFlowEvent$1@f5b7308]
    []
isAnyCheckpointPersisted: 
    false
    true
isFlowResumed: 
    false
    true


 --- Transition of flow [02219a88-233c-4408-8fb0-e37b50b53e04] ---
  Timestamp: 2023-01-31T07:40:29.741Z
  Event: EnterSubFlow(subFlowClass=class net.corda.samples.obligation.accountUtil.NewKeyForAccount, subFlowVersion=CorDappFlow(platformVersion=11, corDappName=workflows-1.0, corDappHash=F8E3613207E5ABAEC38930FAA426F7BA91464AA72DAF3EFB74917A0BA71A146E), isEnabledTimedFlow=false)
  Actions: 
    
  Continuation: ProcessEvents
  Diff between previous and next state:
checkpoint.checkpointState.subFlowStack: 
    [Initiating(flowClass=class net.corda.samples.obligation.flows.IOUSettleFlow, classToInitiateWith=class net.corda.samples.obligation.flows.IOUSettleFlow, flowInfo=FlowInfo(flowVersion=1, appName=<unknown>), subFlowVersion=CorDappFlow(platformVersion=11, corDappName=workflows-1.0, corDappHash=F8E3613207E5ABAEC38930FAA426F7BA91464AA72DAF3EFB74917A0BA71A146E), isEnabledTimedFlow=false)]
    [Initiating(flowClass=class net.corda.samples.obligation.flows.IOUSettleFlow, classToInitiateWith=class net.corda.samples.obligation.flows.IOUSettleFlow, flowInfo=FlowInfo(flowVersion=1, appName=<unknown>), subFlowVersion=CorDappFlow(platformVersion=11, corDappName=workflows-1.0, corDappHash=F8E3613207E5ABAEC38930FAA426F7BA91464AA72DAF3EFB74917A0BA71A146E), isEnabledTimedFlow=false), Inlined(flowClass=class net.corda.samples.obligation.accountUtil.NewKeyForAccount, subFlowVersion=CorDappFlow(platformVersion=11, corDappName=workflows-1.0, corDappHash=F8E3613207E5ABAEC38930FAA426F7BA91464AA72DAF3EFB74917A0BA71A146E), isEnabledTimedFlow=false)]
checkpoint.timestamp: 
    2023-01-31T07:40:29.716Z
    2023-01-31T07:40:29.741Z


 --- Transition of flow [02219a88-233c-4408-8fb0-e37b50b53e04] ---
  Timestamp: 2023-01-31T07:40:29.745Z
  Event: LeaveSubFlow
  Actions: 
    
  Continuation: ProcessEvents
  Diff between previous and next state:
checkpoint.checkpointState.subFlowStack: 
    [Initiating(flowClass=class net.corda.samples.obligation.flows.IOUSettleFlow, classToInitiateWith=class net.corda.samples.obligation.flows.IOUSettleFlow, flowInfo=FlowInfo(flowVersion=1, appName=<unknown>), subFlowVersion=CorDappFlow(platformVersion=11, corDappName=workflows-1.0, corDappHash=F8E3613207E5ABAEC38930FAA426F7BA91464AA72DAF3EFB74917A0BA71A146E), isEnabledTimedFlow=false), Inlined(flowClass=class net.corda.samples.obligation.accountUtil.NewKeyForAccount, subFlowVersion=CorDappFlow(platformVersion=11, corDappName=workflows-1.0, corDappHash=F8E3613207E5ABAEC38930FAA426F7BA91464AA72DAF3EFB74917A0BA71A146E), isEnabledTimedFlow=false)]
    [Initiating(flowClass=class net.corda.samples.obligation.flows.IOUSettleFlow, classToInitiateWith=class net.corda.samples.obligation.flows.IOUSettleFlow, flowInfo=FlowInfo(flowVersion=1, appName=<unknown>), subFlowVersion=CorDappFlow(platformVersion=11, corDappName=workflows-1.0, corDappHash=F8E3613207E5ABAEC38930FAA426F7BA91464AA72DAF3EFB74917A0BA71A146E), isEnabledTimedFlow=false)]
checkpoint.timestamp: 
    2023-01-31T07:40:29.741Z
    2023-01-31T07:40:29.745Z


 --- Transition of flow [02219a88-233c-4408-8fb0-e37b50b53e04] ---
  Timestamp: 2023-01-31T07:40:29.751Z
  Event: EnterSubFlow(subFlowClass=class com.r3.corda.lib.accounts.workflows.flows.RequestKeyForAccount, subFlowVersion=CorDappFlow(platformVersion=11, corDappName=accounts-workflows-1.0, corDappHash=80555705CE83A631D1BDD61E9C14A7C2215BB67FAB1411547C4D4B3D66F8402E), isEnabledTimedFlow=false)
  Actions: 
    
  Continuation: ProcessEvents
  Diff between previous and next state:
checkpoint.checkpointState.subFlowStack: 
    [Initiating(flowClass=class net.corda.samples.obligation.flows.IOUSettleFlow, classToInitiateWith=class net.corda.samples.obligation.flows.IOUSettleFlow, flowInfo=FlowInfo(flowVersion=1, appName=<unknown>), subFlowVersion=CorDappFlow(platformVersion=11, corDappName=workflows-1.0, corDappHash=F8E3613207E5ABAEC38930FAA426F7BA91464AA72DAF3EFB74917A0BA71A146E), isEnabledTimedFlow=false)]
    [Initiating(flowClass=class net.corda.samples.obligation.flows.IOUSettleFlow, classToInitiateWith=class net.corda.samples.obligation.flows.IOUSettleFlow, flowInfo=FlowInfo(flowVersion=1, appName=<unknown>), subFlowVersion=CorDappFlow(platformVersion=11, corDappName=workflows-1.0, corDappHash=F8E3613207E5ABAEC38930FAA426F7BA91464AA72DAF3EFB74917A0BA71A146E), isEnabledTimedFlow=false), Initiating(flowClass=class com.r3.corda.lib.accounts.workflows.flows.RequestKeyForAccount, classToInitiateWith=class com.r3.corda.lib.accounts.workflows.flows.RequestKeyForAccount, flowInfo=FlowInfo(flowVersion=1, appName=accounts-workflows-1.0), subFlowVersion=CorDappFlow(platformVersion=11, corDappName=accounts-workflows-1.0, corDappHash=80555705CE83A631D1BDD61E9C14A7C2215BB67FAB1411547C4D4B3D66F8402E), isEnabledTimedFlow=false)]
checkpoint.timestamp: 
    2023-01-31T07:40:29.745Z
    2023-01-31T07:40:29.751Z


 --- Transition of flow [02219a88-233c-4408-8fb0-e37b50b53e04] ---
  Timestamp: 2023-01-31T07:40:29.752Z
  Event: InitiateFlow(destination=O=Mock Company 3, L=London, C=GB, wellKnownParty=O=Mock Company 3, L=London, C=GB)
  Actions: 
    AddSessionBinding(flowId=[02219a88-233c-4408-8fb0-e37b50b53e04], sessionId=SessionId(toLong=1764390314782059977))
  Continuation: Resume(result=class net.corda.node.services.statemachine.FlowSessionImpl)
  Diff between previous and next state:
checkpoint.checkpointState.sessions.SessionId(toLong=1764390314782059977): 
    null
    Uninitiated(destination=O=Mock Company 3, L=London, C=GB, initiatingSubFlow=Initiating(flowClass=class com.r3.corda.lib.accounts.workflows.flows.RequestKeyForAccount, classToInitiateWith=class com.r3.corda.lib.accounts.workflows.flows.RequestKeyForAccount, flowInfo=FlowInfo(flowVersion=1, appName=accounts-workflows-1.0), subFlowVersion=CorDappFlow(platformVersion=11, corDappName=accounts-workflows-1.0, corDappHash=80555705CE83A631D1BDD61E9C14A7C2215BB67FAB1411547C4D4B3D66F8402E), isEnabledTimedFlow=false), sourceSessionId=SessionId(toLong=1764390314782059977), additionalEntropy=-1578739467683743056)
checkpoint.timestamp: 
    2023-01-31T07:40:29.751Z
    2023-01-31T07:40:29.752Z


 --- Transition of flow [02219a88-233c-4408-8fb0-e37b50b53e04] ---
  Timestamp: 2023-01-31T07:40:29.752Z
  Event: EnterSubFlow(subFlowClass=class com.r3.corda.lib.accounts.workflows.flows.RequestKeyForAccountFlow, subFlowVersion=CorDappFlow(platformVersion=11, corDappName=accounts-workflows-1.0, corDappHash=80555705CE83A631D1BDD61E9C14A7C2215BB67FAB1411547C4D4B3D66F8402E), isEnabledTimedFlow=false)
  Actions: 
    
  Continuation: ProcessEvents
  Diff between previous and next state:
checkpoint.checkpointState.subFlowStack: 
    [Initiating(flowClass=class net.corda.samples.obligation.flows.IOUSettleFlow, classToInitiateWith=class net.corda.samples.obligation.flows.IOUSettleFlow, flowInfo=FlowInfo(flowVersion=1, appName=<unknown>), subFlowVersion=CorDappFlow(platformVersion=11, corDappName=workflows-1.0, corDappHash=F8E3613207E5ABAEC38930FAA426F7BA91464AA72DAF3EFB74917A0BA71A146E), isEnabledTimedFlow=false), Initiating(flowClass=class com.r3.corda.lib.accounts.workflows.flows.RequestKeyForAccount, classToInitiateWith=class com.r3.corda.lib.accounts.workflows.flows.RequestKeyForAccount, flowInfo=FlowInfo(flowVersion=1, appName=accounts-workflows-1.0), subFlowVersion=CorDappFlow(platformVersion=11, corDappName=accounts-workflows-1.0, corDappHash=80555705CE83A631D1BDD61E9C14A7C2215BB67FAB1411547C4D4B3D66F8402E), isEnabledTimedFlow=false)]
    [Initiating(flowClass=class net.corda.samples.obligation.flows.IOUSettleFlow, classToInitiateWith=class net.corda.samples.obligation.flows.IOUSettleFlow, flowInfo=FlowInfo(flowVersion=1, appName=<unknown>), subFlowVersion=CorDappFlow(platformVersion=11, corDappName=workflows-1.0, corDappHash=F8E3613207E5ABAEC38930FAA426F7BA91464AA72DAF3EFB74917A0BA71A146E), isEnabledTimedFlow=false), Initiating(flowClass=class com.r3.corda.lib.accounts.workflows.flows.RequestKeyForAccount, classToInitiateWith=class com.r3.corda.lib.accounts.workflows.flows.RequestKeyForAccount, flowInfo=FlowInfo(flowVersion=1, appName=accounts-workflows-1.0), subFlowVersion=CorDappFlow(platformVersion=11, corDappName=accounts-workflows-1.0, corDappHash=80555705CE83A631D1BDD61E9C14A7C2215BB67FAB1411547C4D4B3D66F8402E), isEnabledTimedFlow=false), Inlined(flowClass=class com.r3.corda.lib.accounts.workflows.flows.RequestKeyForAccountFlow, subFlowVersion=CorDappFlow(platformVersion=11, corDappName=accounts-workflows-1.0, corDappHash=80555705CE83A631D1BDD61E9C14A7C2215BB67FAB1411547C4D4B3D66F8402E), isEnabledTimedFlow=false)]


 --- Transition of flow [02219a88-233c-4408-8fb0-e37b50b53e04] ---
  Timestamp: 2023-01-31T07:40:29.759Z
  Event: Suspend(ioRequest=SendAndReceive({FlowSessionImpl(destination=O=Mock Company 3, L=London, C=GB, sourceSessionId=SessionId(toLong=1764390314782059977))=FlowSessionImpl(destination=O=Mock Company 3, L=London, C=GB, sourceSessionId=SessionId(toLong=1764390314782059977))=32C3871DB081C18FA53F4901ED55F839581D988078B76D840ED4204E034F1FA8}, shouldRetrySend=false), maySkipCheckpoint=false, fiber=ECD7047ADE6CCBEBE32BCBD00639443595FD86585BDECCD28A0B10504072DCC0, currentStep=Starting)
  Actions: 
    PersistCheckpoint(id=[02219a88-233c-4408-8fb0-e37b50b53e04], checkpoint=Checkpoint(checkpointState=CheckpointState(invocationContext=InvocationContext(origin=RPC(actor=Actor(id=Id(value=Only For Testing), serviceId=AuthServiceId(value=TEST), owningLegalIdentity=O=Mock Company 1, L=London, C=GB)), trace=Trace(invocationId=814ec657-afd9-4711-ba0b-0009fd895e7f, timestamp: 2023-01-31T07:40:29.715Z, entityType: Invocation, sessionId=814ec657-afd9-4711-ba0b-0009fd895e7f, timestamp: 2023-01-31T07:40:29.715Z, entityType: Session), actor=Actor(id=Id(value=Only For Testing), serviceId=AuthServiceId(value=TEST), owningLegalIdentity=O=Mock Company 1, L=London, C=GB), externalTrace=null, impersonatedActor=null, arguments=[], clientId=null), ourIdentity=O=Mock Company 1, L=London, C=GB, sessions={SessionId(toLong=1764390314782059977)=Uninitiated(destination=O=Mock Company 3, L=London, C=GB, initiatingSubFlow=Initiating(flowClass=class com.r3.corda.lib.accounts.workflows.flows.RequestKeyForAccount, classToInitiateWith=class com.r3.corda.lib.accounts.workflows.flows.RequestKeyForAccount, flowInfo=FlowInfo(flowVersion=1, appName=accounts-workflows-1.0), subFlowVersion=CorDappFlow(platformVersion=11, corDappName=accounts-workflows-1.0, corDappHash=80555705CE83A631D1BDD61E9C14A7C2215BB67FAB1411547C4D4B3D66F8402E), isEnabledTimedFlow=false), sourceSessionId=SessionId(toLong=1764390314782059977), additionalEntropy=-1578739467683743056)}, sessionsToBeClosed=[], subFlowStack=[Initiating(flowClass=class net.corda.samples.obligation.flows.IOUSettleFlow, classToInitiateWith=class net.corda.samples.obligation.flows.IOUSettleFlow, flowInfo=FlowInfo(flowVersion=1, appName=<unknown>), subFlowVersion=CorDappFlow(platformVersion=11, corDappName=workflows-1.0, corDappHash=F8E3613207E5ABAEC38930FAA426F7BA91464AA72DAF3EFB74917A0BA71A146E), isEnabledTimedFlow=false), Initiating(flowClass=class com.r3.corda.lib.accounts.workflows.flows.RequestKeyForAccount, classToInitiateWith=class com.r3.corda.lib.accounts.workflows.flows.RequestKeyForAccount, flowInfo=FlowInfo(flowVersion=1, appName=accounts-workflows-1.0), subFlowVersion=CorDappFlow(platformVersion=11, corDappName=accounts-workflows-1.0, corDappHash=80555705CE83A631D1BDD61E9C14A7C2215BB67FAB1411547C4D4B3D66F8402E), isEnabledTimedFlow=false), Inlined(flowClass=class com.r3.corda.lib.accounts.workflows.flows.RequestKeyForAccountFlow, subFlowVersion=CorDappFlow(platformVersion=11, corDappName=accounts-workflows-1.0, corDappHash=80555705CE83A631D1BDD61E9C14A7C2215BB67FAB1411547C4D4B3D66F8402E), isEnabledTimedFlow=false)], numberOfSuspends=1, numberOfCommits=2), flowState=Started(flowIORequest=SendAndReceive({FlowSessionImpl(destination=O=Mock Company 3, L=London, C=GB, sourceSessionId=SessionId(toLong=1764390314782059977))=FlowSessionImpl(destination=O=Mock Company 3, L=London, C=GB, sourceSessionId=SessionId(toLong=1764390314782059977))=32C3871DB081C18FA53F4901ED55F839581D988078B76D840ED4204E034F1FA8}, shouldRetrySend=false), frozenFiber=ECD7047ADE6CCBEBE32BCBD00639443595FD86585BDECCD28A0B10504072DCC0), errorState=Clean, result=null, status=RUNNABLE, progressStep=Starting, flowIoRequest=SendAndReceive, compatible=true), isCheckpointUpdate=true)
    PersistDeduplicationFacts(deduplicationHandlers=[])
    CommitTransaction
    AcknowledgeMessages(deduplicationHandlers=[])
    ScheduleEvent(event=DoRemainingWork)
  Continuation: ProcessEvents
  Diff between previous and next state:
numberOfCommits: 
    0
    2
checkpoint.flowIoRequest: 
    null
    SendAndReceive
checkpoint.checkpointState.numberOfCommits: 
    1
    2
checkpoint.checkpointState.numberOfSuspends: 
    0
    1
checkpoint.flowState: 
    Unstarted(flowStart=Explicit, frozenFlowLogic=E5D89117AA0B3572BCDE43EA87C38B41B96F1EC6D9F1A949D1A49463EB040B85)
    Started(flowIORequest=SendAndReceive({FlowSessionImpl(destination=O=Mock Company 3, L=London, C=GB, sourceSessionId=SessionId(toLong=1764390314782059977))=FlowSessionImpl(destination=O=Mock Company 3, L=London, C=GB, sourceSessionId=SessionId(toLong=1764390314782059977))=32C3871DB081C18FA53F4901ED55F839581D988078B76D840ED4204E034F1FA8}, shouldRetrySend=false), frozenFiber=ECD7047ADE6CCBEBE32BCBD00639443595FD86585BDECCD28A0B10504072DCC0)
checkpoint.progressStep: 
    null
    Starting
checkpoint.timestamp: 
    2023-01-31T07:40:29.752Z
    2023-01-31T07:40:29.758Z
isFlowResumed: 
    true
    false


 --- Transition of flow [02219a88-233c-4408-8fb0-e37b50b53e04] ---
  Timestamp: 2023-01-31T07:40:29.760Z
  Event: DoRemainingWork
  Actions: 
    SendMultiple(sendInitial=[SendInitial(destination=O=Mock Company 3, L=London, C=GB, initialise=InitialSessionMessage(initiatorSessionId=SessionId(toLong=1764390314782059977), initiationEntropy=-1578739467683743056, initiatorFlowClassName=com.r3.corda.lib.accounts.workflows.flows.RequestKeyForAccount, appName=accounts-workflows-1.0, firstPayload=class net.corda.core.serialization.SerializedBytes), deduplicationId=SenderDeduplicationId(deduplicationId=DeduplicationId(toString=N-R-1764390314782059977--1578739467683743056-1-0), senderUUID=b7a8af6e-2e00-46fb-860a-22ad29e03037))], sendExisting=[])
  Continuation: ProcessEvents
  Diff between previous and next state:
checkpoint.checkpointState.sessions.SessionId(toLong=1764390314782059977): 
    Uninitiated(destination=O=Mock Company 3, L=London, C=GB, initiatingSubFlow=Initiating(flowClass=class com.r3.corda.lib.accounts.workflows.flows.RequestKeyForAccount, classToInitiateWith=class com.r3.corda.lib.accounts.workflows.flows.RequestKeyForAccount, flowInfo=FlowInfo(flowVersion=1, appName=accounts-workflows-1.0), subFlowVersion=CorDappFlow(platformVersion=11, corDappName=accounts-workflows-1.0, corDappHash=80555705CE83A631D1BDD61E9C14A7C2215BB67FAB1411547C4D4B3D66F8402E), isEnabledTimedFlow=false), sourceSessionId=SessionId(toLong=1764390314782059977), additionalEntropy=-1578739467683743056)
    Initiating(bufferedMessages=[], rejectionError=null, deduplicationSeed=R-1764390314782059977--1578739467683743056)
checkpoint.flowState.flowIORequest: 
    SendAndReceive({FlowSessionImpl(destination=O=Mock Company 3, L=London, C=GB, sourceSessionId=SessionId(toLong=1764390314782059977))=FlowSessionImpl(destination=O=Mock Company 3, L=London, C=GB, sourceSessionId=SessionId(toLong=1764390314782059977))=32C3871DB081C18FA53F4901ED55F839581D988078B76D840ED4204E034F1FA8}, shouldRetrySend=false)
    Receive(sessions=[FlowSessionImpl(destination=O=Mock Company 3, L=London, C=GB, sourceSessionId=SessionId(toLong=1764390314782059977))])
checkpoint.timestamp: 
    2023-01-31T07:40:29.758Z
    2023-01-31T07:40:29.760Z


 --- Transition of flow [02219a88-233c-4408-8fb0-e37b50b53e04] ---
  Timestamp: 2023-01-31T07:40:29.779Z
  Event: DeliverSessionMessage(sessionMessage=ExistingSessionMessage(recipientSessionId=SessionId(toLong=1764390314782059977), payload=ConfirmSessionMessage(initiatedSessionId=SessionId(toLong=-8103511418606744257), initiatedFlowInfo=FlowInfo(flowVersion=1, appName=accounts-workflows-1.0))), deduplicationHandler=net.corda.testing.node.internal.MockNodeMessagingService$InMemoryDeduplicationHandler@3ac2988c, sender=O=Mock Company 3, L=London, C=GB)
  Actions: 
    ScheduleEvent(event=DoRemainingWork)
  Continuation: ProcessEvents
  Diff between previous and next state:
pendingDeduplicationHandlers: 
    []
    [net.corda.testing.node.internal.MockNodeMessagingService$InMemoryDeduplicationHandler@3ac2988c]
checkpoint.checkpointState.sessions.SessionId(toLong=1764390314782059977): 
    Initiating(bufferedMessages=[], rejectionError=null, deduplicationSeed=R-1764390314782059977--1578739467683743056)
    Initiated(peerParty=O=Mock Company 3, L=London, C=GB, peerFlowInfo=FlowInfo(flowVersion=1, appName=accounts-workflows-1.0), receivedMessages=[], otherSideErrored=false, peerSinkSessionId=SessionId(toLong=-8103511418606744257), deduplicationSeed=R-1764390314782059977--1578739467683743056)
checkpoint.timestamp: 
    2023-01-31T07:40:29.760Z
    2023-01-31T07:40:29.779Z


 --- Transition of flow [02219a88-233c-4408-8fb0-e37b50b53e04] ---
  Timestamp: 2023-01-31T07:40:29.779Z
  Event: DoRemainingWork
  Actions: 
    
  Continuation: ProcessEvents
  Diff between previous and next state:
null

 --- Transition of flow [02219a88-233c-4408-8fb0-e37b50b53e04] ---
  Timestamp: 2023-01-31T07:40:29.780Z
  Event: DeliverSessionMessage(sessionMessage=ExistingSessionMessage(recipientSessionId=SessionId(toLong=1764390314782059977), payload=DataSessionMessage(payload=class net.corda.core.serialization.SerializedBytes)), deduplicationHandler=net.corda.testing.node.internal.MockNodeMessagingService$InMemoryDeduplicationHandler@a788a, sender=O=Mock Company 3, L=London, C=GB)
  Actions: 
    ScheduleEvent(event=DoRemainingWork)
  Continuation: ProcessEvents
  Diff between previous and next state:
pendingDeduplicationHandlers: 
    [net.corda.testing.node.internal.MockNodeMessagingService$InMemoryDeduplicationHandler@3ac2988c]
    [net.corda.testing.node.internal.MockNodeMessagingService$InMemoryDeduplicationHandler@3ac2988c, net.corda.testing.node.internal.MockNodeMessagingService$InMemoryDeduplicationHandler@a788a]
checkpoint.checkpointState.sessions.SessionId(toLong=1764390314782059977).receivedMessages.isEmpty: 
    true
    false
checkpoint.timestamp: 
    2023-01-31T07:40:29.779Z
    2023-01-31T07:40:29.780Z


 --- Transition of flow [02219a88-233c-4408-8fb0-e37b50b53e04] ---
  Timestamp: 2023-01-31T07:40:29.780Z
  Event: DoRemainingWork
  Actions: 
    CreateTransaction
  Continuation: Resume(result=class java.util.LinkedHashMap)
  Diff between previous and next state:
checkpoint.checkpointState.sessions.SessionId(toLong=1764390314782059977).receivedMessages.isEmpty: 
    false
    true
isFlowResumed: 
    false
    true


 --- Transition of flow [02219a88-233c-4408-8fb0-e37b50b53e04] ---
  Timestamp: 2023-01-31T07:40:29.780Z
  Event: EnterSubFlow(subFlowClass=class com.r3.corda.lib.ci.workflows.RequestKeyFlow, subFlowVersion=CoreFlow(platformVersion=11), isEnabledTimedFlow=false)
  Actions: 
    
  Continuation: ProcessEvents
  Diff between previous and next state:
checkpoint.checkpointState.subFlowStack: 
    [Initiating(flowClass=class net.corda.samples.obligation.flows.IOUSettleFlow, classToInitiateWith=class net.corda.samples.obligation.flows.IOUSettleFlow, flowInfo=FlowInfo(flowVersion=1, appName=<unknown>), subFlowVersion=CorDappFlow(platformVersion=11, corDappName=workflows-1.0, corDappHash=F8E3613207E5ABAEC38930FAA426F7BA91464AA72DAF3EFB74917A0BA71A146E), isEnabledTimedFlow=false), Initiating(flowClass=class com.r3.corda.lib.accounts.workflows.flows.RequestKeyForAccount, classToInitiateWith=class com.r3.corda.lib.accounts.workflows.flows.RequestKeyForAccount, flowInfo=FlowInfo(flowVersion=1, appName=accounts-workflows-1.0), subFlowVersion=CorDappFlow(platformVersion=11, corDappName=accounts-workflows-1.0, corDappHash=80555705CE83A631D1BDD61E9C14A7C2215BB67FAB1411547C4D4B3D66F8402E), isEnabledTimedFlow=false), Inlined(flowClass=class com.r3.corda.lib.accounts.workflows.flows.RequestKeyForAccountFlow, subFlowVersion=CorDappFlow(platformVersion=11, corDappName=accounts-workflows-1.0, corDappHash=80555705CE83A631D1BDD61E9C14A7C2215BB67FAB1411547C4D4B3D66F8402E), isEnabledTimedFlow=false)]
    [Initiating(flowClass=class net.corda.samples.obligation.flows.IOUSettleFlow, classToInitiateWith=class net.corda.samples.obligation.flows.IOUSettleFlow, flowInfo=FlowInfo(flowVersion=1, appName=<unknown>), subFlowVersion=CorDappFlow(platformVersion=11, corDappName=workflows-1.0, corDappHash=F8E3613207E5ABAEC38930FAA426F7BA91464AA72DAF3EFB74917A0BA71A146E), isEnabledTimedFlow=false), Initiating(flowClass=class com.r3.corda.lib.accounts.workflows.flows.RequestKeyForAccount, classToInitiateWith=class com.r3.corda.lib.accounts.workflows.flows.RequestKeyForAccount, flowInfo=FlowInfo(flowVersion=1, appName=accounts-workflows-1.0), subFlowVersion=CorDappFlow(platformVersion=11, corDappName=accounts-workflows-1.0, corDappHash=80555705CE83A631D1BDD61E9C14A7C2215BB67FAB1411547C4D4B3D66F8402E), isEnabledTimedFlow=false), Inlined(flowClass=class com.r3.corda.lib.accounts.workflows.flows.RequestKeyForAccountFlow, subFlowVersion=CorDappFlow(platformVersion=11, corDappName=accounts-workflows-1.0, corDappHash=80555705CE83A631D1BDD61E9C14A7C2215BB67FAB1411547C4D4B3D66F8402E), isEnabledTimedFlow=false), Inlined(flowClass=class com.r3.corda.lib.ci.workflows.RequestKeyFlow, subFlowVersion=CoreFlow(platformVersion=11), isEnabledTimedFlow=false)]


 --- Transition of flow [02219a88-233c-4408-8fb0-e37b50b53e04] ---
  Timestamp: 2023-01-31T07:40:29.784Z
  Event: Suspend(ioRequest=SendAndReceive({FlowSessionImpl(destination=O=Mock Company 3, L=London, C=GB, sourceSessionId=SessionId(toLong=1764390314782059977))=FlowSessionImpl(destination=O=Mock Company 3, L=London, C=GB, sourceSessionId=SessionId(toLong=1764390314782059977))=C17E64A52EAD39F1F5BEA57E2EB91911F702CD3B6008D556A190E915451EA37A}, shouldRetrySend=false), maySkipCheckpoint=false, fiber=D336AD22D3D36238A7DFAB7F2361DCB02DE98D31992976CD65091C6A8537FA6E, currentStep=Starting)
  Actions: 
    PersistCheckpoint(id=[02219a88-233c-4408-8fb0-e37b50b53e04], checkpoint=Checkpoint(checkpointState=CheckpointState(invocationContext=InvocationContext(origin=RPC(actor=Actor(id=Id(value=Only For Testing), serviceId=AuthServiceId(value=TEST), owningLegalIdentity=O=Mock Company 1, L=London, C=GB)), trace=Trace(invocationId=814ec657-afd9-4711-ba0b-0009fd895e7f, timestamp: 2023-01-31T07:40:29.715Z, entityType: Invocation, sessionId=814ec657-afd9-4711-ba0b-0009fd895e7f, timestamp: 2023-01-31T07:40:29.715Z, entityType: Session), actor=Actor(id=Id(value=Only For Testing), serviceId=AuthServiceId(value=TEST), owningLegalIdentity=O=Mock Company 1, L=London, C=GB), externalTrace=null, impersonatedActor=null, arguments=[], clientId=null), ourIdentity=O=Mock Company 1, L=London, C=GB, sessions={SessionId(toLong=1764390314782059977)=Initiated(peerParty=O=Mock Company 3, L=London, C=GB, peerFlowInfo=FlowInfo(flowVersion=1, appName=accounts-workflows-1.0), receivedMessages=[], otherSideErrored=false, peerSinkSessionId=SessionId(toLong=-8103511418606744257), deduplicationSeed=R-1764390314782059977--1578739467683743056)}, sessionsToBeClosed=[], subFlowStack=[Initiating(flowClass=class net.corda.samples.obligation.flows.IOUSettleFlow, classToInitiateWith=class net.corda.samples.obligation.flows.IOUSettleFlow, flowInfo=FlowInfo(flowVersion=1, appName=<unknown>), subFlowVersion=CorDappFlow(platformVersion=11, corDappName=workflows-1.0, corDappHash=F8E3613207E5ABAEC38930FAA426F7BA91464AA72DAF3EFB74917A0BA71A146E), isEnabledTimedFlow=false), Initiating(flowClass=class com.r3.corda.lib.accounts.workflows.flows.RequestKeyForAccount, classToInitiateWith=class com.r3.corda.lib.accounts.workflows.flows.RequestKeyForAccount, flowInfo=FlowInfo(flowVersion=1, appName=accounts-workflows-1.0), subFlowVersion=CorDappFlow(platformVersion=11, corDappName=accounts-workflows-1.0, corDappHash=80555705CE83A631D1BDD61E9C14A7C2215BB67FAB1411547C4D4B3D66F8402E), isEnabledTimedFlow=false), Inlined(flowClass=class com.r3.corda.lib.accounts.workflows.flows.RequestKeyForAccountFlow, subFlowVersion=CorDappFlow(platformVersion=11, corDappName=accounts-workflows-1.0, corDappHash=80555705CE83A631D1BDD61E9C14A7C2215BB67FAB1411547C4D4B3D66F8402E), isEnabledTimedFlow=false), Inlined(flowClass=class com.r3.corda.lib.ci.workflows.RequestKeyFlow, subFlowVersion=CoreFlow(platformVersion=11), isEnabledTimedFlow=false)], numberOfSuspends=2, numberOfCommits=3), flowState=Started(flowIORequest=SendAndReceive({FlowSessionImpl(destination=O=Mock Company 3, L=London, C=GB, sourceSessionId=SessionId(toLong=1764390314782059977))=FlowSessionImpl(destination=O=Mock Company 3, L=London, C=GB, sourceSessionId=SessionId(toLong=1764390314782059977))=C17E64A52EAD39F1F5BEA57E2EB91911F702CD3B6008D556A190E915451EA37A}, shouldRetrySend=false), frozenFiber=D336AD22D3D36238A7DFAB7F2361DCB02DE98D31992976CD65091C6A8537FA6E), errorState=Clean, result=null, status=RUNNABLE, progressStep=Starting, flowIoRequest=SendAndReceive, compatible=true), isCheckpointUpdate=true)
    PersistDeduplicationFacts(deduplicationHandlers=[net.corda.testing.node.internal.MockNodeMessagingService$InMemoryDeduplicationHandler@3ac2988c, net.corda.testing.node.internal.MockNodeMessagingService$InMemoryDeduplicationHandler@a788a])
    CommitTransaction
    AcknowledgeMessages(deduplicationHandlers=[net.corda.testing.node.internal.MockNodeMessagingService$InMemoryDeduplicationHandler@3ac2988c, net.corda.testing.node.internal.MockNodeMessagingService$InMemoryDeduplicationHandler@a788a])
    ScheduleEvent(event=DoRemainingWork)
  Continuation: ProcessEvents
  Diff between previous and next state:
pendingDeduplicationHandlers: 
    [net.corda.testing.node.internal.MockNodeMessagingService$InMemoryDeduplicationHandler@3ac2988c, net.corda.testing.node.internal.MockNodeMessagingService$InMemoryDeduplicationHandler@a788a]
    []
numberOfCommits: 
    2
    3
checkpoint.checkpointState.numberOfCommits: 
    2
    3
checkpoint.checkpointState.numberOfSuspends: 
    1
    2
checkpoint.flowState.frozenFiber.hash: 
    ECD7047ADE6CCBEBE32BCBD00639443595FD86585BDECCD28A0B10504072DCC0
    D336AD22D3D36238A7DFAB7F2361DCB02DE98D31992976CD65091C6A8537FA6E
checkpoint.flowState.flowIORequest: 
    Receive(sessions=[FlowSessionImpl(destination=O=Mock Company 3, L=London, C=GB, sourceSessionId=SessionId(toLong=1764390314782059977))])
    SendAndReceive({FlowSessionImpl(destination=O=Mock Company 3, L=London, C=GB, sourceSessionId=SessionId(toLong=1764390314782059977))=FlowSessionImpl(destination=O=Mock Company 3, L=London, C=GB, sourceSessionId=SessionId(toLong=1764390314782059977))=C17E64A52EAD39F1F5BEA57E2EB91911F702CD3B6008D556A190E915451EA37A}, shouldRetrySend=false)
checkpoint.timestamp: 
    2023-01-31T07:40:29.780Z
    2023-01-31T07:40:29.782Z
isFlowResumed: 
    true
    false


 --- Transition of flow [02219a88-233c-4408-8fb0-e37b50b53e04] ---
  Timestamp: 2023-01-31T07:40:29.784Z
  Event: DoRemainingWork
  Actions: 
    SendMultiple(sendInitial=[], sendExisting=[SendExisting(peerParty=O=Mock Company 3, L=London, C=GB, message=ExistingSessionMessage(recipientSessionId=SessionId(toLong=-8103511418606744257), payload=DataSessionMessage(payload=class net.corda.core.serialization.SerializedBytes)), deduplicationId=SenderDeduplicationId(deduplicationId=DeduplicationId(toString=N-R-1764390314782059977--1578739467683743056-2-0), senderUUID=b7a8af6e-2e00-46fb-860a-22ad29e03037))])
  Continuation: ProcessEvents
  Diff between previous and next state:
checkpoint.flowState.flowIORequest: 
    SendAndReceive({FlowSessionImpl(destination=O=Mock Company 3, L=London, C=GB, sourceSessionId=SessionId(toLong=1764390314782059977))=FlowSessionImpl(destination=O=Mock Company 3, L=London, C=GB, sourceSessionId=SessionId(toLong=1764390314782059977))=C17E64A52EAD39F1F5BEA57E2EB91911F702CD3B6008D556A190E915451EA37A}, shouldRetrySend=false)
    Receive(sessions=[FlowSessionImpl(destination=O=Mock Company 3, L=London, C=GB, sourceSessionId=SessionId(toLong=1764390314782059977))])
checkpoint.timestamp: 
    2023-01-31T07:40:29.782Z
    2023-01-31T07:40:29.784Z


 --- Transition of flow [02219a88-233c-4408-8fb0-e37b50b53e04] ---
  Timestamp: 2023-01-31T07:40:29.795Z
  Event: DeliverSessionMessage(sessionMessage=ExistingSessionMessage(recipientSessionId=SessionId(toLong=1764390314782059977), payload=DataSessionMessage(payload=class net.corda.core.serialization.SerializedBytes)), deduplicationHandler=net.corda.testing.node.internal.MockNodeMessagingService$InMemoryDeduplicationHandler@7b44e192, sender=O=Mock Company 3, L=London, C=GB)
  Actions: 
    ScheduleEvent(event=DoRemainingWork)
  Continuation: ProcessEvents
  Diff between previous and next state:
pendingDeduplicationHandlers: 
    []
    [net.corda.testing.node.internal.MockNodeMessagingService$InMemoryDeduplicationHandler@7b44e192]
checkpoint.checkpointState.sessions.SessionId(toLong=1764390314782059977).receivedMessages.isEmpty: 
    true
    false
checkpoint.timestamp: 
    2023-01-31T07:40:29.784Z
    2023-01-31T07:40:29.795Z


 --- Transition of flow [02219a88-233c-4408-8fb0-e37b50b53e04] ---
  Timestamp: 2023-01-31T07:40:29.795Z
  Event: DoRemainingWork
  Actions: 
    CreateTransaction
  Continuation: Resume(result=class java.util.LinkedHashMap)
  Diff between previous and next state:
checkpoint.checkpointState.sessions.SessionId(toLong=1764390314782059977).receivedMessages.isEmpty: 
    false
    true
isFlowResumed: 
    false
    true


 --- Transition of flow [02219a88-233c-4408-8fb0-e37b50b53e04] ---
  Timestamp: 2023-01-31T07:40:29.797Z
  Event: LeaveSubFlow
  Actions: 
    
  Continuation: ProcessEvents
  Diff between previous and next state:
checkpoint.checkpointState.subFlowStack: 
    [Initiating(flowClass=class net.corda.samples.obligation.flows.IOUSettleFlow, classToInitiateWith=class net.corda.samples.obligation.flows.IOUSettleFlow, flowInfo=FlowInfo(flowVersion=1, appName=<unknown>), subFlowVersion=CorDappFlow(platformVersion=11, corDappName=workflows-1.0, corDappHash=F8E3613207E5ABAEC38930FAA426F7BA91464AA72DAF3EFB74917A0BA71A146E), isEnabledTimedFlow=false), Initiating(flowClass=class com.r3.corda.lib.accounts.workflows.flows.RequestKeyForAccount, classToInitiateWith=class com.r3.corda.lib.accounts.workflows.flows.RequestKeyForAccount, flowInfo=FlowInfo(flowVersion=1, appName=accounts-workflows-1.0), subFlowVersion=CorDappFlow(platformVersion=11, corDappName=accounts-workflows-1.0, corDappHash=80555705CE83A631D1BDD61E9C14A7C2215BB67FAB1411547C4D4B3D66F8402E), isEnabledTimedFlow=false), Inlined(flowClass=class com.r3.corda.lib.accounts.workflows.flows.RequestKeyForAccountFlow, subFlowVersion=CorDappFlow(platformVersion=11, corDappName=accounts-workflows-1.0, corDappHash=80555705CE83A631D1BDD61E9C14A7C2215BB67FAB1411547C4D4B3D66F8402E), isEnabledTimedFlow=false), Inlined(flowClass=class com.r3.corda.lib.ci.workflows.RequestKeyFlow, subFlowVersion=CoreFlow(platformVersion=11), isEnabledTimedFlow=false)]
    [Initiating(flowClass=class net.corda.samples.obligation.flows.IOUSettleFlow, classToInitiateWith=class net.corda.samples.obligation.flows.IOUSettleFlow, flowInfo=FlowInfo(flowVersion=1, appName=<unknown>), subFlowVersion=CorDappFlow(platformVersion=11, corDappName=workflows-1.0, corDappHash=F8E3613207E5ABAEC38930FAA426F7BA91464AA72DAF3EFB74917A0BA71A146E), isEnabledTimedFlow=false), Initiating(flowClass=class com.r3.corda.lib.accounts.workflows.flows.RequestKeyForAccount, classToInitiateWith=class com.r3.corda.lib.accounts.workflows.flows.RequestKeyForAccount, flowInfo=FlowInfo(flowVersion=1, appName=accounts-workflows-1.0), subFlowVersion=CorDappFlow(platformVersion=11, corDappName=accounts-workflows-1.0, corDappHash=80555705CE83A631D1BDD61E9C14A7C2215BB67FAB1411547C4D4B3D66F8402E), isEnabledTimedFlow=false), Inlined(flowClass=class com.r3.corda.lib.accounts.workflows.flows.RequestKeyForAccountFlow, subFlowVersion=CorDappFlow(platformVersion=11, corDappName=accounts-workflows-1.0, corDappHash=80555705CE83A631D1BDD61E9C14A7C2215BB67FAB1411547C4D4B3D66F8402E), isEnabledTimedFlow=false)]
checkpoint.timestamp: 
    2023-01-31T07:40:29.795Z
    2023-01-31T07:40:29.797Z


 --- Transition of flow [02219a88-233c-4408-8fb0-e37b50b53e04] ---
  Timestamp: 2023-01-31T07:40:29.797Z
  Event: LeaveSubFlow
  Actions: 
    
  Continuation: ProcessEvents
  Diff between previous and next state:
checkpoint.checkpointState.subFlowStack: 
    [Initiating(flowClass=class net.corda.samples.obligation.flows.IOUSettleFlow, classToInitiateWith=class net.corda.samples.obligation.flows.IOUSettleFlow, flowInfo=FlowInfo(flowVersion=1, appName=<unknown>), subFlowVersion=CorDappFlow(platformVersion=11, corDappName=workflows-1.0, corDappHash=F8E3613207E5ABAEC38930FAA426F7BA91464AA72DAF3EFB74917A0BA71A146E), isEnabledTimedFlow=false), Initiating(flowClass=class com.r3.corda.lib.accounts.workflows.flows.RequestKeyForAccount, classToInitiateWith=class com.r3.corda.lib.accounts.workflows.flows.RequestKeyForAccount, flowInfo=FlowInfo(flowVersion=1, appName=accounts-workflows-1.0), subFlowVersion=CorDappFlow(platformVersion=11, corDappName=accounts-workflows-1.0, corDappHash=80555705CE83A631D1BDD61E9C14A7C2215BB67FAB1411547C4D4B3D66F8402E), isEnabledTimedFlow=false), Inlined(flowClass=class com.r3.corda.lib.accounts.workflows.flows.RequestKeyForAccountFlow, subFlowVersion=CorDappFlow(platformVersion=11, corDappName=accounts-workflows-1.0, corDappHash=80555705CE83A631D1BDD61E9C14A7C2215BB67FAB1411547C4D4B3D66F8402E), isEnabledTimedFlow=false)]
    [Initiating(flowClass=class net.corda.samples.obligation.flows.IOUSettleFlow, classToInitiateWith=class net.corda.samples.obligation.flows.IOUSettleFlow, flowInfo=FlowInfo(flowVersion=1, appName=<unknown>), subFlowVersion=CorDappFlow(platformVersion=11, corDappName=workflows-1.0, corDappHash=F8E3613207E5ABAEC38930FAA426F7BA91464AA72DAF3EFB74917A0BA71A146E), isEnabledTimedFlow=false), Initiating(flowClass=class com.r3.corda.lib.accounts.workflows.flows.RequestKeyForAccount, classToInitiateWith=class com.r3.corda.lib.accounts.workflows.flows.RequestKeyForAccount, flowInfo=FlowInfo(flowVersion=1, appName=accounts-workflows-1.0), subFlowVersion=CorDappFlow(platformVersion=11, corDappName=accounts-workflows-1.0, corDappHash=80555705CE83A631D1BDD61E9C14A7C2215BB67FAB1411547C4D4B3D66F8402E), isEnabledTimedFlow=false)]


 --- Transition of flow [02219a88-233c-4408-8fb0-e37b50b53e04] ---
  Timestamp: 2023-01-31T07:40:29.797Z
  Event: LeaveSubFlow
  Actions: 
    
  Continuation: ProcessEvents
  Diff between previous and next state:
checkpoint.checkpointState.subFlowStack: 
    [Initiating(flowClass=class net.corda.samples.obligation.flows.IOUSettleFlow, classToInitiateWith=class net.corda.samples.obligation.flows.IOUSettleFlow, flowInfo=FlowInfo(flowVersion=1, appName=<unknown>), subFlowVersion=CorDappFlow(platformVersion=11, corDappName=workflows-1.0, corDappHash=F8E3613207E5ABAEC38930FAA426F7BA91464AA72DAF3EFB74917A0BA71A146E), isEnabledTimedFlow=false), Initiating(flowClass=class com.r3.corda.lib.accounts.workflows.flows.RequestKeyForAccount, classToInitiateWith=class com.r3.corda.lib.accounts.workflows.flows.RequestKeyForAccount, flowInfo=FlowInfo(flowVersion=1, appName=accounts-workflows-1.0), subFlowVersion=CorDappFlow(platformVersion=11, corDappName=accounts-workflows-1.0, corDappHash=80555705CE83A631D1BDD61E9C14A7C2215BB67FAB1411547C4D4B3D66F8402E), isEnabledTimedFlow=false)]
    [Initiating(flowClass=class net.corda.samples.obligation.flows.IOUSettleFlow, classToInitiateWith=class net.corda.samples.obligation.flows.IOUSettleFlow, flowInfo=FlowInfo(flowVersion=1, appName=<unknown>), subFlowVersion=CorDappFlow(platformVersion=11, corDappName=workflows-1.0, corDappHash=F8E3613207E5ABAEC38930FAA426F7BA91464AA72DAF3EFB74917A0BA71A146E), isEnabledTimedFlow=false)]


 --- Transition of flow [02219a88-233c-4408-8fb0-e37b50b53e04] ---
  Timestamp: 2023-01-31T07:40:29.974Z
  Event: InitiateFlow(destination=O=Mock Company 3, L=London, C=GB, wellKnownParty=O=Mock Company 3, L=London, C=GB)
  Actions: 
    AddSessionBinding(flowId=[02219a88-233c-4408-8fb0-e37b50b53e04], sessionId=SessionId(toLong=-3358756275887911989))
  Continuation: Resume(result=class net.corda.node.services.statemachine.FlowSessionImpl)
  Diff between previous and next state:
checkpoint.checkpointState.sessions.SessionId(toLong=-3358756275887911989): 
    null
    Uninitiated(destination=O=Mock Company 3, L=London, C=GB, initiatingSubFlow=Initiating(flowClass=class net.corda.samples.obligation.flows.IOUSettleFlow, classToInitiateWith=class net.corda.samples.obligation.flows.IOUSettleFlow, flowInfo=FlowInfo(flowVersion=1, appName=<unknown>), subFlowVersion=CorDappFlow(platformVersion=11, corDappName=workflows-1.0, corDappHash=F8E3613207E5ABAEC38930FAA426F7BA91464AA72DAF3EFB74917A0BA71A146E), isEnabledTimedFlow=false), sourceSessionId=SessionId(toLong=-3358756275887911989), additionalEntropy=5594156702427061583)
checkpoint.timestamp: 
    2023-01-31T07:40:29.797Z
    2023-01-31T07:40:29.974Z


 --- Transition of flow [02219a88-233c-4408-8fb0-e37b50b53e04] ---
  Timestamp: 2023-01-31T07:40:29.974Z
  Event: EnterSubFlow(subFlowClass=class net.corda.core.flows.CollectSignatureFlow, subFlowVersion=CoreFlow(platformVersion=11), isEnabledTimedFlow=false)
  Actions: 
    
  Continuation: ProcessEvents
  Diff between previous and next state:
checkpoint.checkpointState.subFlowStack: 
    [Initiating(flowClass=class net.corda.samples.obligation.flows.IOUSettleFlow, classToInitiateWith=class net.corda.samples.obligation.flows.IOUSettleFlow, flowInfo=FlowInfo(flowVersion=1, appName=<unknown>), subFlowVersion=CorDappFlow(platformVersion=11, corDappName=workflows-1.0, corDappHash=F8E3613207E5ABAEC38930FAA426F7BA91464AA72DAF3EFB74917A0BA71A146E), isEnabledTimedFlow=false)]
    [Initiating(flowClass=class net.corda.samples.obligation.flows.IOUSettleFlow, classToInitiateWith=class net.corda.samples.obligation.flows.IOUSettleFlow, flowInfo=FlowInfo(flowVersion=1, appName=<unknown>), subFlowVersion=CorDappFlow(platformVersion=11, corDappName=workflows-1.0, corDappHash=F8E3613207E5ABAEC38930FAA426F7BA91464AA72DAF3EFB74917A0BA71A146E), isEnabledTimedFlow=false), Inlined(flowClass=class net.corda.core.flows.CollectSignatureFlow, subFlowVersion=CoreFlow(platformVersion=11), isEnabledTimedFlow=false)]


 --- Transition of flow [02219a88-233c-4408-8fb0-e37b50b53e04] ---
  Timestamp: 2023-01-31T07:40:29.974Z
  Event: EnterSubFlow(subFlowClass=class net.corda.core.flows.SendTransactionFlow, subFlowVersion=CoreFlow(platformVersion=11), isEnabledTimedFlow=false)
  Actions: 
    
  Continuation: ProcessEvents
  Diff between previous and next state:
checkpoint.checkpointState.subFlowStack: 
    [Initiating(flowClass=class net.corda.samples.obligation.flows.IOUSettleFlow, classToInitiateWith=class net.corda.samples.obligation.flows.IOUSettleFlow, flowInfo=FlowInfo(flowVersion=1, appName=<unknown>), subFlowVersion=CorDappFlow(platformVersion=11, corDappName=workflows-1.0, corDappHash=F8E3613207E5ABAEC38930FAA426F7BA91464AA72DAF3EFB74917A0BA71A146E), isEnabledTimedFlow=false), Inlined(flowClass=class net.corda.core.flows.CollectSignatureFlow, subFlowVersion=CoreFlow(platformVersion=11), isEnabledTimedFlow=false)]
    [Initiating(flowClass=class net.corda.samples.obligation.flows.IOUSettleFlow, classToInitiateWith=class net.corda.samples.obligation.flows.IOUSettleFlow, flowInfo=FlowInfo(flowVersion=1, appName=<unknown>), subFlowVersion=CorDappFlow(platformVersion=11, corDappName=workflows-1.0, corDappHash=F8E3613207E5ABAEC38930FAA426F7BA91464AA72DAF3EFB74917A0BA71A146E), isEnabledTimedFlow=false), Inlined(flowClass=class net.corda.core.flows.CollectSignatureFlow, subFlowVersion=CoreFlow(platformVersion=11), isEnabledTimedFlow=false), Inlined(flowClass=class net.corda.core.flows.SendTransactionFlow, subFlowVersion=CoreFlow(platformVersion=11), isEnabledTimedFlow=false)]


 --- Transition of flow [02219a88-233c-4408-8fb0-e37b50b53e04] ---
  Timestamp: 2023-01-31T07:40:29.980Z
  Event: Suspend(ioRequest=SendAndReceive({FlowSessionImpl(destination=O=Mock Company 3, L=London, C=GB, sourceSessionId=SessionId(toLong=-3358756275887911989))=FlowSessionImpl(destination=O=Mock Company 3, L=London, C=GB, sourceSessionId=SessionId(toLong=-3358756275887911989))=0199C1180DE8353B8E6C1ECA799D22B2B4818E48B8724563CE6B968CA81B20EF}, shouldRetrySend=false), maySkipCheckpoint=false, fiber=3108E21592D8A7C0C14A3FC7648F512BE18D2E67660BEFDBCE6D99B48BFDFA78, currentStep=Starting)
  Actions: 
    PersistCheckpoint(id=[02219a88-233c-4408-8fb0-e37b50b53e04], checkpoint=Checkpoint(checkpointState=CheckpointState(invocationContext=InvocationContext(origin=RPC(actor=Actor(id=Id(value=Only For Testing), serviceId=AuthServiceId(value=TEST), owningLegalIdentity=O=Mock Company 1, L=London, C=GB)), trace=Trace(invocationId=814ec657-afd9-4711-ba0b-0009fd895e7f, timestamp: 2023-01-31T07:40:29.715Z, entityType: Invocation, sessionId=814ec657-afd9-4711-ba0b-0009fd895e7f, timestamp: 2023-01-31T07:40:29.715Z, entityType: Session), actor=Actor(id=Id(value=Only For Testing), serviceId=AuthServiceId(value=TEST), owningLegalIdentity=O=Mock Company 1, L=London, C=GB), externalTrace=null, impersonatedActor=null, arguments=[], clientId=null), ourIdentity=O=Mock Company 1, L=London, C=GB, sessions={SessionId(toLong=1764390314782059977)=Initiated(peerParty=O=Mock Company 3, L=London, C=GB, peerFlowInfo=FlowInfo(flowVersion=1, appName=accounts-workflows-1.0), receivedMessages=[], otherSideErrored=false, peerSinkSessionId=SessionId(toLong=-8103511418606744257), deduplicationSeed=R-1764390314782059977--1578739467683743056), SessionId(toLong=-3358756275887911989)=Uninitiated(destination=O=Mock Company 3, L=London, C=GB, initiatingSubFlow=Initiating(flowClass=class net.corda.samples.obligation.flows.IOUSettleFlow, classToInitiateWith=class net.corda.samples.obligation.flows.IOUSettleFlow, flowInfo=FlowInfo(flowVersion=1, appName=<unknown>), subFlowVersion=CorDappFlow(platformVersion=11, corDappName=workflows-1.0, corDappHash=F8E3613207E5ABAEC38930FAA426F7BA91464AA72DAF3EFB74917A0BA71A146E), isEnabledTimedFlow=false), sourceSessionId=SessionId(toLong=-3358756275887911989), additionalEntropy=5594156702427061583)}, sessionsToBeClosed=[], subFlowStack=[Initiating(flowClass=class net.corda.samples.obligation.flows.IOUSettleFlow, classToInitiateWith=class net.corda.samples.obligation.flows.IOUSettleFlow, flowInfo=FlowInfo(flowVersion=1, appName=<unknown>), subFlowVersion=CorDappFlow(platformVersion=11, corDappName=workflows-1.0, corDappHash=F8E3613207E5ABAEC38930FAA426F7BA91464AA72DAF3EFB74917A0BA71A146E), isEnabledTimedFlow=false), Inlined(flowClass=class net.corda.core.flows.CollectSignatureFlow, subFlowVersion=CoreFlow(platformVersion=11), isEnabledTimedFlow=false), Inlined(flowClass=class net.corda.core.flows.SendTransactionFlow, subFlowVersion=CoreFlow(platformVersion=11), isEnabledTimedFlow=false)], numberOfSuspends=3, numberOfCommits=4), flowState=Started(flowIORequest=SendAndReceive({FlowSessionImpl(destination=O=Mock Company 3, L=London, C=GB, sourceSessionId=SessionId(toLong=-3358756275887911989))=FlowSessionImpl(destination=O=Mock Company 3, L=London, C=GB, sourceSessionId=SessionId(toLong=-3358756275887911989))=0199C1180DE8353B8E6C1ECA799D22B2B4818E48B8724563CE6B968CA81B20EF}, shouldRetrySend=false), frozenFiber=3108E21592D8A7C0C14A3FC7648F512BE18D2E67660BEFDBCE6D99B48BFDFA78), errorState=Clean, result=null, status=RUNNABLE, progressStep=Starting, flowIoRequest=SendAndReceive, compatible=true), isCheckpointUpdate=true)
    PersistDeduplicationFacts(deduplicationHandlers=[net.corda.testing.node.internal.MockNodeMessagingService$InMemoryDeduplicationHandler@7b44e192])
    CommitTransaction
    AcknowledgeMessages(deduplicationHandlers=[net.corda.testing.node.internal.MockNodeMessagingService$InMemoryDeduplicationHandler@7b44e192])
    ScheduleEvent(event=DoRemainingWork)
  Continuation: ProcessEvents
  Diff between previous and next state:
pendingDeduplicationHandlers: 
    [net.corda.testing.node.internal.MockNodeMessagingService$InMemoryDeduplicationHandler@7b44e192]
    []
numberOfCommits: 
    3
    4
checkpoint.checkpointState.numberOfCommits: 
    3
    4
checkpoint.checkpointState.numberOfSuspends: 
    2
    3
checkpoint.flowState.frozenFiber.hash: 
    D336AD22D3D36238A7DFAB7F2361DCB02DE98D31992976CD65091C6A8537FA6E
    3108E21592D8A7C0C14A3FC7648F512BE18D2E67660BEFDBCE6D99B48BFDFA78
checkpoint.flowState.flowIORequest: 
    Receive(sessions=[FlowSessionImpl(destination=O=Mock Company 3, L=London, C=GB, sourceSessionId=SessionId(toLong=1764390314782059977))])
    SendAndReceive({FlowSessionImpl(destination=O=Mock Company 3, L=London, C=GB, sourceSessionId=SessionId(toLong=-3358756275887911989))=FlowSessionImpl(destination=O=Mock Company 3, L=London, C=GB, sourceSessionId=SessionId(toLong=-3358756275887911989))=0199C1180DE8353B8E6C1ECA799D22B2B4818E48B8724563CE6B968CA81B20EF}, shouldRetrySend=false)
checkpoint.timestamp: 
    2023-01-31T07:40:29.974Z
    2023-01-31T07:40:29.978Z
isFlowResumed: 
    true
    false


 --- Transition of flow [02219a88-233c-4408-8fb0-e37b50b53e04] ---
  Timestamp: 2023-01-31T07:40:29.982Z
  Event: DoRemainingWork
  Actions: 
    SendMultiple(sendInitial=[SendInitial(destination=O=Mock Company 3, L=London, C=GB, initialise=InitialSessionMessage(initiatorSessionId=SessionId(toLong=-3358756275887911989), initiationEntropy=5594156702427061583, initiatorFlowClassName=net.corda.samples.obligation.flows.IOUSettleFlow, appName=<unknown>, firstPayload=class net.corda.core.serialization.SerializedBytes), deduplicationId=SenderDeduplicationId(deduplicationId=DeduplicationId(toString=N-R--3358756275887911989-5594156702427061583-3-0), senderUUID=b7a8af6e-2e00-46fb-860a-22ad29e03037))], sendExisting=[])
  Continuation: ProcessEvents
  Diff between previous and next state:
checkpoint.checkpointState.sessions.SessionId(toLong=-3358756275887911989): 
    Uninitiated(destination=O=Mock Company 3, L=London, C=GB, initiatingSubFlow=Initiating(flowClass=class net.corda.samples.obligation.flows.IOUSettleFlow, classToInitiateWith=class net.corda.samples.obligation.flows.IOUSettleFlow, flowInfo=FlowInfo(flowVersion=1, appName=<unknown>), subFlowVersion=CorDappFlow(platformVersion=11, corDappName=workflows-1.0, corDappHash=F8E3613207E5ABAEC38930FAA426F7BA91464AA72DAF3EFB74917A0BA71A146E), isEnabledTimedFlow=false), sourceSessionId=SessionId(toLong=-3358756275887911989), additionalEntropy=5594156702427061583)
    Initiating(bufferedMessages=[], rejectionError=null, deduplicationSeed=R--3358756275887911989-5594156702427061583)
checkpoint.flowState.flowIORequest: 
    SendAndReceive({FlowSessionImpl(destination=O=Mock Company 3, L=London, C=GB, sourceSessionId=SessionId(toLong=-3358756275887911989))=FlowSessionImpl(destination=O=Mock Company 3, L=London, C=GB, sourceSessionId=SessionId(toLong=-3358756275887911989))=0199C1180DE8353B8E6C1ECA799D22B2B4818E48B8724563CE6B968CA81B20EF}, shouldRetrySend=false)
    Receive(sessions=[FlowSessionImpl(destination=O=Mock Company 3, L=London, C=GB, sourceSessionId=SessionId(toLong=-3358756275887911989))])
checkpoint.timestamp: 
    2023-01-31T07:40:29.978Z
    2023-01-31T07:40:29.980Z


 --- Transition of flow [02219a88-233c-4408-8fb0-e37b50b53e04] ---
  Timestamp: 2023-01-31T07:40:30.012Z
  Event: DeliverSessionMessage(sessionMessage=ExistingSessionMessage(recipientSessionId=SessionId(toLong=1764390314782059977), payload=net.corda.node.services.statemachine.EndSessionMessage@54d08a5d), deduplicationHandler=net.corda.testing.node.internal.MockNodeMessagingService$InMemoryDeduplicationHandler@53e5e534, sender=O=Mock Company 3, L=London, C=GB)
  Actions: 
    ScheduleEvent(event=DoRemainingWork)
  Continuation: ProcessEvents
  Diff between previous and next state:
pendingDeduplicationHandlers: 
    []
    [net.corda.testing.node.internal.MockNodeMessagingService$InMemoryDeduplicationHandler@53e5e534]
checkpoint.checkpointState.sessions.SessionId(toLong=1764390314782059977).receivedMessages.isEmpty: 
    true
    false
checkpoint.checkpointState.sessionsToBeClosed: 
    []
    [SessionId(toLong=1764390314782059977)]
checkpoint.timestamp: 
    2023-01-31T07:40:29.980Z
    2023-01-31T07:40:30.012Z


 --- Transition of flow [02219a88-233c-4408-8fb0-e37b50b53e04] ---
  Timestamp: 2023-01-31T07:40:30.012Z
  Event: DoRemainingWork
  Actions: 
    RemoveSessionBindings(sessionIds=[SessionId(toLong=1764390314782059977)])
  Continuation: ProcessEvents
  Diff between previous and next state:
checkpoint.checkpointState.sessions.SessionId(toLong=1764390314782059977): 
    Initiated(peerParty=O=Mock Company 3, L=London, C=GB, peerFlowInfo=FlowInfo(flowVersion=1, appName=accounts-workflows-1.0), receivedMessages=[net.corda.node.services.statemachine.EndSessionMessage@54d08a5d], otherSideErrored=false, peerSinkSessionId=SessionId(toLong=-8103511418606744257), deduplicationSeed=R-1764390314782059977--1578739467683743056)
    null
checkpoint.checkpointState.sessionsToBeClosed: 
    [SessionId(toLong=1764390314782059977)]
    []


 --- Transition of flow [02219a88-233c-4408-8fb0-e37b50b53e04] ---
  Timestamp: 2023-01-31T07:40:30.017Z
  Event: DeliverSessionMessage(sessionMessage=ExistingSessionMessage(recipientSessionId=SessionId(toLong=-3358756275887911989), payload=ConfirmSessionMessage(initiatedSessionId=SessionId(toLong=2957585445716046757), initiatedFlowInfo=FlowInfo(flowVersion=1, appName=<unknown>))), deduplicationHandler=net.corda.testing.node.internal.MockNodeMessagingService$InMemoryDeduplicationHandler@6b7a856d, sender=O=Mock Company 3, L=London, C=GB)
  Actions: 
    ScheduleEvent(event=DoRemainingWork)
  Continuation: ProcessEvents
  Diff between previous and next state:
pendingDeduplicationHandlers: 
    [net.corda.testing.node.internal.MockNodeMessagingService$InMemoryDeduplicationHandler@53e5e534]
    [net.corda.testing.node.internal.MockNodeMessagingService$InMemoryDeduplicationHandler@53e5e534, net.corda.testing.node.internal.MockNodeMessagingService$InMemoryDeduplicationHandler@6b7a856d]
checkpoint.checkpointState.sessions.SessionId(toLong=-3358756275887911989): 
    Initiating(bufferedMessages=[], rejectionError=null, deduplicationSeed=R--3358756275887911989-5594156702427061583)
    Initiated(peerParty=O=Mock Company 3, L=London, C=GB, peerFlowInfo=FlowInfo(flowVersion=1, appName=<unknown>), receivedMessages=[], otherSideErrored=false, peerSinkSessionId=SessionId(toLong=2957585445716046757), deduplicationSeed=R--3358756275887911989-5594156702427061583)
checkpoint.timestamp: 
    2023-01-31T07:40:30.012Z
    2023-01-31T07:40:30.017Z


 --- Transition of flow [02219a88-233c-4408-8fb0-e37b50b53e04] ---
  Timestamp: 2023-01-31T07:40:30.018Z
  Event: DoRemainingWork
  Actions: 
    
  Continuation: ProcessEvents
  Diff between previous and next state:
null

 --- Transition of flow [02219a88-233c-4408-8fb0-e37b50b53e04] ---
  Timestamp: 2023-01-31T07:40:30.020Z
  Event: DeliverSessionMessage(sessionMessage=ExistingSessionMessage(recipientSessionId=SessionId(toLong=-3358756275887911989), payload=DataSessionMessage(payload=class net.corda.core.serialization.SerializedBytes)), deduplicationHandler=net.corda.testing.node.internal.MockNodeMessagingService$InMemoryDeduplicationHandler@77923689, sender=O=Mock Company 3, L=London, C=GB)
  Actions: 
    ScheduleEvent(event=DoRemainingWork)
  Continuation: ProcessEvents
  Diff between previous and next state:
pendingDeduplicationHandlers: 
    [net.corda.testing.node.internal.MockNodeMessagingService$InMemoryDeduplicationHandler@53e5e534, net.corda.testing.node.internal.MockNodeMessagingService$InMemoryDeduplicationHandler@6b7a856d]
    [net.corda.testing.node.internal.MockNodeMessagingService$InMemoryDeduplicationHandler@53e5e534, net.corda.testing.node.internal.MockNodeMessagingService$InMemoryDeduplicationHandler@6b7a856d, net.corda.testing.node.internal.MockNodeMessagingService$InMemoryDeduplicationHandler@77923689]
checkpoint.checkpointState.sessions.SessionId(toLong=-3358756275887911989).receivedMessages.isEmpty: 
    true
    false
checkpoint.timestamp: 
    2023-01-31T07:40:30.017Z
    2023-01-31T07:40:30.020Z


 --- Transition of flow [02219a88-233c-4408-8fb0-e37b50b53e04] ---
  Timestamp: 2023-01-31T07:40:30.020Z
  Event: DoRemainingWork
  Actions: 
    CreateTransaction
  Continuation: Resume(result=class java.util.LinkedHashMap)
  Diff between previous and next state:
checkpoint.checkpointState.sessions.SessionId(toLong=-3358756275887911989).receivedMessages.isEmpty: 
    false
    true
isFlowResumed: 
    false
    true


 --- Transition of flow [02219a88-233c-4408-8fb0-e37b50b53e04] ---
  Timestamp: 2023-01-31T07:40:30.028Z
  Event: Suspend(ioRequest=SendAndReceive({FlowSessionImpl(destination=O=Mock Company 3, L=London, C=GB, sourceSessionId=SessionId(toLong=-3358756275887911989))=FlowSessionImpl(destination=O=Mock Company 3, L=London, C=GB, sourceSessionId=SessionId(toLong=-3358756275887911989))=54C4E5C46B8A0802F147096D9052FC3D44DD8FF113F770CA6C18719B3874987E}, shouldRetrySend=false), maySkipCheckpoint=false, fiber=49A2A4975984CCABC4FBDF043CA07F60F55CB0D3FDA8D96B97C523F3D945A0D9, currentStep=Starting)
  Actions: 
    PersistCheckpoint(id=[02219a88-233c-4408-8fb0-e37b50b53e04], checkpoint=Checkpoint(checkpointState=CheckpointState(invocationContext=InvocationContext(origin=RPC(actor=Actor(id=Id(value=Only For Testing), serviceId=AuthServiceId(value=TEST), owningLegalIdentity=O=Mock Company 1, L=London, C=GB)), trace=Trace(invocationId=814ec657-afd9-4711-ba0b-0009fd895e7f, timestamp: 2023-01-31T07:40:29.715Z, entityType: Invocation, sessionId=814ec657-afd9-4711-ba0b-0009fd895e7f, timestamp: 2023-01-31T07:40:29.715Z, entityType: Session), actor=Actor(id=Id(value=Only For Testing), serviceId=AuthServiceId(value=TEST), owningLegalIdentity=O=Mock Company 1, L=London, C=GB), externalTrace=null, impersonatedActor=null, arguments=[], clientId=null), ourIdentity=O=Mock Company 1, L=London, C=GB, sessions={SessionId(toLong=-3358756275887911989)=Initiated(peerParty=O=Mock Company 3, L=London, C=GB, peerFlowInfo=FlowInfo(flowVersion=1, appName=<unknown>), receivedMessages=[], otherSideErrored=false, peerSinkSessionId=SessionId(toLong=2957585445716046757), deduplicationSeed=R--3358756275887911989-5594156702427061583)}, sessionsToBeClosed=[], subFlowStack=[Initiating(flowClass=class net.corda.samples.obligation.flows.IOUSettleFlow, classToInitiateWith=class net.corda.samples.obligation.flows.IOUSettleFlow, flowInfo=FlowInfo(flowVersion=1, appName=<unknown>), subFlowVersion=CorDappFlow(platformVersion=11, corDappName=workflows-1.0, corDappHash=F8E3613207E5ABAEC38930FAA426F7BA91464AA72DAF3EFB74917A0BA71A146E), isEnabledTimedFlow=false), Inlined(flowClass=class net.corda.core.flows.CollectSignatureFlow, subFlowVersion=CoreFlow(platformVersion=11), isEnabledTimedFlow=false), Inlined(flowClass=class net.corda.core.flows.SendTransactionFlow, subFlowVersion=CoreFlow(platformVersion=11), isEnabledTimedFlow=false)], numberOfSuspends=4, numberOfCommits=5), flowState=Started(flowIORequest=SendAndReceive({FlowSessionImpl(destination=O=Mock Company 3, L=London, C=GB, sourceSessionId=SessionId(toLong=-3358756275887911989))=FlowSessionImpl(destination=O=Mock Company 3, L=London, C=GB, sourceSessionId=SessionId(toLong=-3358756275887911989))=54C4E5C46B8A0802F147096D9052FC3D44DD8FF113F770CA6C18719B3874987E}, shouldRetrySend=false), frozenFiber=49A2A4975984CCABC4FBDF043CA07F60F55CB0D3FDA8D96B97C523F3D945A0D9), errorState=Clean, result=null, status=RUNNABLE, progressStep=Starting, flowIoRequest=SendAndReceive, compatible=true), isCheckpointUpdate=true)
    PersistDeduplicationFacts(deduplicationHandlers=[net.corda.testing.node.internal.MockNodeMessagingService$InMemoryDeduplicationHandler@53e5e534, net.corda.testing.node.internal.MockNodeMessagingService$InMemoryDeduplicationHandler@6b7a856d, net.corda.testing.node.internal.MockNodeMessagingService$InMemoryDeduplicationHandler@77923689])
    CommitTransaction
    AcknowledgeMessages(deduplicationHandlers=[net.corda.testing.node.internal.MockNodeMessagingService$InMemoryDeduplicationHandler@53e5e534, net.corda.testing.node.internal.MockNodeMessagingService$InMemoryDeduplicationHandler@6b7a856d, net.corda.testing.node.internal.MockNodeMessagingService$InMemoryDeduplicationHandler@77923689])
    ScheduleEvent(event=DoRemainingWork)
  Continuation: ProcessEvents
  Diff between previous and next state:
pendingDeduplicationHandlers: 
    [net.corda.testing.node.internal.MockNodeMessagingService$InMemoryDeduplicationHandler@53e5e534, net.corda.testing.node.internal.MockNodeMessagingService$InMemoryDeduplicationHandler@6b7a856d, net.corda.testing.node.internal.MockNodeMessagingService$InMemoryDeduplicationHandler@77923689]
    []
numberOfCommits: 
    4
    5
checkpoint.checkpointState.numberOfCommits: 
    4
    5
checkpoint.checkpointState.numberOfSuspends: 
    3
    4
checkpoint.flowState.frozenFiber.hash: 
    3108E21592D8A7C0C14A3FC7648F512BE18D2E67660BEFDBCE6D99B48BFDFA78
    49A2A4975984CCABC4FBDF043CA07F60F55CB0D3FDA8D96B97C523F3D945A0D9
checkpoint.flowState.flowIORequest: 
    Receive(sessions=[FlowSessionImpl(destination=O=Mock Company 3, L=London, C=GB, sourceSessionId=SessionId(toLong=-3358756275887911989))])
    SendAndReceive({FlowSessionImpl(destination=O=Mock Company 3, L=London, C=GB, sourceSessionId=SessionId(toLong=-3358756275887911989))=FlowSessionImpl(destination=O=Mock Company 3, L=London, C=GB, sourceSessionId=SessionId(toLong=-3358756275887911989))=54C4E5C46B8A0802F147096D9052FC3D44DD8FF113F770CA6C18719B3874987E}, shouldRetrySend=false)
checkpoint.timestamp: 
    2023-01-31T07:40:30.020Z
    2023-01-31T07:40:30.025Z
isFlowResumed: 
    true
    false


 --- Transition of flow [02219a88-233c-4408-8fb0-e37b50b53e04] ---
  Timestamp: 2023-01-31T07:40:30.029Z
  Event: DoRemainingWork
  Actions: 
    SendMultiple(sendInitial=[], sendExisting=[SendExisting(peerParty=O=Mock Company 3, L=London, C=GB, message=ExistingSessionMessage(recipientSessionId=SessionId(toLong=2957585445716046757), payload=DataSessionMessage(payload=class net.corda.core.serialization.SerializedBytes)), deduplicationId=SenderDeduplicationId(deduplicationId=DeduplicationId(toString=N-R--3358756275887911989-5594156702427061583-4-0), senderUUID=b7a8af6e-2e00-46fb-860a-22ad29e03037))])
  Continuation: ProcessEvents
  Diff between previous and next state:
checkpoint.flowState.flowIORequest: 
    SendAndReceive({FlowSessionImpl(destination=O=Mock Company 3, L=London, C=GB, sourceSessionId=SessionId(toLong=-3358756275887911989))=FlowSessionImpl(destination=O=Mock Company 3, L=London, C=GB, sourceSessionId=SessionId(toLong=-3358756275887911989))=54C4E5C46B8A0802F147096D9052FC3D44DD8FF113F770CA6C18719B3874987E}, shouldRetrySend=false)
    Receive(sessions=[FlowSessionImpl(destination=O=Mock Company 3, L=London, C=GB, sourceSessionId=SessionId(toLong=-3358756275887911989))])
checkpoint.timestamp: 
    2023-01-31T07:40:30.025Z
    2023-01-31T07:40:30.028Z


 --- Transition of flow [02219a88-233c-4408-8fb0-e37b50b53e04] ---
  Timestamp: 2023-01-31T07:40:30.385Z
  Event: DeliverSessionMessage(sessionMessage=ExistingSessionMessage(recipientSessionId=SessionId(toLong=-3358756275887911989), payload=DataSessionMessage(payload=class net.corda.core.serialization.SerializedBytes)), deduplicationHandler=net.corda.testing.node.internal.MockNodeMessagingService$InMemoryDeduplicationHandler@41054bde, sender=O=Mock Company 3, L=London, C=GB)
  Actions: 
    ScheduleEvent(event=DoRemainingWork)
  Continuation: ProcessEvents
  Diff between previous and next state:
pendingDeduplicationHandlers: 
    []
    [net.corda.testing.node.internal.MockNodeMessagingService$InMemoryDeduplicationHandler@41054bde]
checkpoint.checkpointState.sessions.SessionId(toLong=-3358756275887911989).receivedMessages.isEmpty: 
    true
    false
checkpoint.timestamp: 
    2023-01-31T07:40:30.028Z
    2023-01-31T07:40:30.385Z


 --- Transition of flow [02219a88-233c-4408-8fb0-e37b50b53e04] ---
  Timestamp: 2023-01-31T07:40:30.385Z
  Event: DoRemainingWork
  Actions: 
    CreateTransaction
  Continuation: Resume(result=class java.util.LinkedHashMap)
  Diff between previous and next state:
checkpoint.checkpointState.sessions.SessionId(toLong=-3358756275887911989).receivedMessages.isEmpty: 
    false
    true
isFlowResumed: 
    false
    true


 --- Transition of flow [02219a88-233c-4408-8fb0-e37b50b53e04] ---
  Timestamp: 2023-01-31T07:40:30.385Z
  Event: LeaveSubFlow
  Actions: 
    
  Continuation: ProcessEvents
  Diff between previous and next state:
checkpoint.checkpointState.subFlowStack: 
    [Initiating(flowClass=class net.corda.samples.obligation.flows.IOUSettleFlow, classToInitiateWith=class net.corda.samples.obligation.flows.IOUSettleFlow, flowInfo=FlowInfo(flowVersion=1, appName=<unknown>), subFlowVersion=CorDappFlow(platformVersion=11, corDappName=workflows-1.0, corDappHash=F8E3613207E5ABAEC38930FAA426F7BA91464AA72DAF3EFB74917A0BA71A146E), isEnabledTimedFlow=false), Inlined(flowClass=class net.corda.core.flows.CollectSignatureFlow, subFlowVersion=CoreFlow(platformVersion=11), isEnabledTimedFlow=false), Inlined(flowClass=class net.corda.core.flows.SendTransactionFlow, subFlowVersion=CoreFlow(platformVersion=11), isEnabledTimedFlow=false)]
    [Initiating(flowClass=class net.corda.samples.obligation.flows.IOUSettleFlow, classToInitiateWith=class net.corda.samples.obligation.flows.IOUSettleFlow, flowInfo=FlowInfo(flowVersion=1, appName=<unknown>), subFlowVersion=CorDappFlow(platformVersion=11, corDappName=workflows-1.0, corDappHash=F8E3613207E5ABAEC38930FAA426F7BA91464AA72DAF3EFB74917A0BA71A146E), isEnabledTimedFlow=false), Inlined(flowClass=class net.corda.core.flows.CollectSignatureFlow, subFlowVersion=CoreFlow(platformVersion=11), isEnabledTimedFlow=false)]


 --- Transition of flow [02219a88-233c-4408-8fb0-e37b50b53e04] ---
  Timestamp: 2023-01-31T07:40:30.389Z
  Event: Suspend(ioRequest=Send(sessionToMessage={FlowSessionImpl(destination=O=Mock Company 3, L=London, C=GB, sourceSessionId=SessionId(toLong=-3358756275887911989))=F8D4741D3E5672AA07A60AD3651B3BAA957ADA2E752421CEE6DCF81E94EEF592}), maySkipCheckpoint=false, fiber=C6A420453C0F4FBC54DD12F177CE4FD9D625E646B814F1A919639883C01B5E05, currentStep=Starting)
  Actions: 
    PersistCheckpoint(id=[02219a88-233c-4408-8fb0-e37b50b53e04], checkpoint=Checkpoint(checkpointState=CheckpointState(invocationContext=InvocationContext(origin=RPC(actor=Actor(id=Id(value=Only For Testing), serviceId=AuthServiceId(value=TEST), owningLegalIdentity=O=Mock Company 1, L=London, C=GB)), trace=Trace(invocationId=814ec657-afd9-4711-ba0b-0009fd895e7f, timestamp: 2023-01-31T07:40:29.715Z, entityType: Invocation, sessionId=814ec657-afd9-4711-ba0b-0009fd895e7f, timestamp: 2023-01-31T07:40:29.715Z, entityType: Session), actor=Actor(id=Id(value=Only For Testing), serviceId=AuthServiceId(value=TEST), owningLegalIdentity=O=Mock Company 1, L=London, C=GB), externalTrace=null, impersonatedActor=null, arguments=[], clientId=null), ourIdentity=O=Mock Company 1, L=London, C=GB, sessions={SessionId(toLong=-3358756275887911989)=Initiated(peerParty=O=Mock Company 3, L=London, C=GB, peerFlowInfo=FlowInfo(flowVersion=1, appName=<unknown>), receivedMessages=[], otherSideErrored=false, peerSinkSessionId=SessionId(toLong=2957585445716046757), deduplicationSeed=R--3358756275887911989-5594156702427061583)}, sessionsToBeClosed=[], subFlowStack=[Initiating(flowClass=class net.corda.samples.obligation.flows.IOUSettleFlow, classToInitiateWith=class net.corda.samples.obligation.flows.IOUSettleFlow, flowInfo=FlowInfo(flowVersion=1, appName=<unknown>), subFlowVersion=CorDappFlow(platformVersion=11, corDappName=workflows-1.0, corDappHash=F8E3613207E5ABAEC38930FAA426F7BA91464AA72DAF3EFB74917A0BA71A146E), isEnabledTimedFlow=false), Inlined(flowClass=class net.corda.core.flows.CollectSignatureFlow, subFlowVersion=CoreFlow(platformVersion=11), isEnabledTimedFlow=false)], numberOfSuspends=5, numberOfCommits=6), flowState=Started(flowIORequest=Send(sessionToMessage={FlowSessionImpl(destination=O=Mock Company 3, L=London, C=GB, sourceSessionId=SessionId(toLong=-3358756275887911989))=F8D4741D3E5672AA07A60AD3651B3BAA957ADA2E752421CEE6DCF81E94EEF592}), frozenFiber=C6A420453C0F4FBC54DD12F177CE4FD9D625E646B814F1A919639883C01B5E05), errorState=Clean, result=null, status=RUNNABLE, progressStep=Starting, flowIoRequest=Send, compatible=true), isCheckpointUpdate=true)
    PersistDeduplicationFacts(deduplicationHandlers=[net.corda.testing.node.internal.MockNodeMessagingService$InMemoryDeduplicationHandler@41054bde])
    CommitTransaction
    AcknowledgeMessages(deduplicationHandlers=[net.corda.testing.node.internal.MockNodeMessagingService$InMemoryDeduplicationHandler@41054bde])
    ScheduleEvent(event=DoRemainingWork)
  Continuation: ProcessEvents
  Diff between previous and next state:
pendingDeduplicationHandlers: 
    [net.corda.testing.node.internal.MockNodeMessagingService$InMemoryDeduplicationHandler@41054bde]
    []
numberOfCommits: 
    5
    6
checkpoint.flowIoRequest: 
    SendAndReceive
    Send
checkpoint.checkpointState.numberOfCommits: 
    5
    6
checkpoint.checkpointState.numberOfSuspends: 
    4
    5
checkpoint.flowState.frozenFiber.hash: 
    49A2A4975984CCABC4FBDF043CA07F60F55CB0D3FDA8D96B97C523F3D945A0D9
    C6A420453C0F4FBC54DD12F177CE4FD9D625E646B814F1A919639883C01B5E05
checkpoint.flowState.flowIORequest: 
    Receive(sessions=[FlowSessionImpl(destination=O=Mock Company 3, L=London, C=GB, sourceSessionId=SessionId(toLong=-3358756275887911989))])
    Send(sessionToMessage={FlowSessionImpl(destination=O=Mock Company 3, L=London, C=GB, sourceSessionId=SessionId(toLong=-3358756275887911989))=F8D4741D3E5672AA07A60AD3651B3BAA957ADA2E752421CEE6DCF81E94EEF592})
checkpoint.timestamp: 
    2023-01-31T07:40:30.385Z
    2023-01-31T07:40:30.387Z
isFlowResumed: 
    true
    false


 --- Transition of flow [02219a88-233c-4408-8fb0-e37b50b53e04] ---
  Timestamp: 2023-01-31T07:40:30.389Z
  Event: DoRemainingWork
  Actions: 
    SendMultiple(sendInitial=[], sendExisting=[SendExisting(peerParty=O=Mock Company 3, L=London, C=GB, message=ExistingSessionMessage(recipientSessionId=SessionId(toLong=2957585445716046757), payload=DataSessionMessage(payload=class net.corda.core.serialization.SerializedBytes)), deduplicationId=SenderDeduplicationId(deduplicationId=DeduplicationId(toString=N-R--3358756275887911989-5594156702427061583-5-0), senderUUID=b7a8af6e-2e00-46fb-860a-22ad29e03037))])
    CreateTransaction
  Continuation: Resume(result=class kotlin.Unit)
  Diff between previous and next state:
isFlowResumed: 
    false
    true


 --- Transition of flow [02219a88-233c-4408-8fb0-e37b50b53e04] ---
  Timestamp: 2023-01-31T07:40:30.393Z
  Event: Suspend(ioRequest=Receive(sessions=[FlowSessionImpl(destination=O=Mock Company 3, L=London, C=GB, sourceSessionId=SessionId(toLong=-3358756275887911989))]), maySkipCheckpoint=false, fiber=36B3747FAEAA5570C90229D45B47CD814A145185F8C8F6E45922B34B9F609168, currentStep=Starting)
  Actions: 
    PersistCheckpoint(id=[02219a88-233c-4408-8fb0-e37b50b53e04], checkpoint=Checkpoint(checkpointState=CheckpointState(invocationContext=InvocationContext(origin=RPC(actor=Actor(id=Id(value=Only For Testing), serviceId=AuthServiceId(value=TEST), owningLegalIdentity=O=Mock Company 1, L=London, C=GB)), trace=Trace(invocationId=814ec657-afd9-4711-ba0b-0009fd895e7f, timestamp: 2023-01-31T07:40:29.715Z, entityType: Invocation, sessionId=814ec657-afd9-4711-ba0b-0009fd895e7f, timestamp: 2023-01-31T07:40:29.715Z, entityType: Session), actor=Actor(id=Id(value=Only For Testing), serviceId=AuthServiceId(value=TEST), owningLegalIdentity=O=Mock Company 1, L=London, C=GB), externalTrace=null, impersonatedActor=null, arguments=[], clientId=null), ourIdentity=O=Mock Company 1, L=London, C=GB, sessions={SessionId(toLong=-3358756275887911989)=Initiated(peerParty=O=Mock Company 3, L=London, C=GB, peerFlowInfo=FlowInfo(flowVersion=1, appName=<unknown>), receivedMessages=[], otherSideErrored=false, peerSinkSessionId=SessionId(toLong=2957585445716046757), deduplicationSeed=R--3358756275887911989-5594156702427061583)}, sessionsToBeClosed=[], subFlowStack=[Initiating(flowClass=class net.corda.samples.obligation.flows.IOUSettleFlow, classToInitiateWith=class net.corda.samples.obligation.flows.IOUSettleFlow, flowInfo=FlowInfo(flowVersion=1, appName=<unknown>), subFlowVersion=CorDappFlow(platformVersion=11, corDappName=workflows-1.0, corDappHash=F8E3613207E5ABAEC38930FAA426F7BA91464AA72DAF3EFB74917A0BA71A146E), isEnabledTimedFlow=false), Inlined(flowClass=class net.corda.core.flows.CollectSignatureFlow, subFlowVersion=CoreFlow(platformVersion=11), isEnabledTimedFlow=false)], numberOfSuspends=6, numberOfCommits=7), flowState=Started(flowIORequest=Receive(sessions=[FlowSessionImpl(destination=O=Mock Company 3, L=London, C=GB, sourceSessionId=SessionId(toLong=-3358756275887911989))]), frozenFiber=36B3747FAEAA5570C90229D45B47CD814A145185F8C8F6E45922B34B9F609168), errorState=Clean, result=null, status=RUNNABLE, progressStep=Starting, flowIoRequest=Receive, compatible=true), isCheckpointUpdate=true)
    PersistDeduplicationFacts(deduplicationHandlers=[])
    CommitTransaction
    AcknowledgeMessages(deduplicationHandlers=[])
    ScheduleEvent(event=DoRemainingWork)
  Continuation: ProcessEvents
  Diff between previous and next state:
numberOfCommits: 
    6
    7
checkpoint.flowIoRequest: 
    Send
    Receive
checkpoint.checkpointState.numberOfCommits: 
    6
    7
checkpoint.checkpointState.numberOfSuspends: 
    5
    6
checkpoint.flowState.frozenFiber.hash: 
    C6A420453C0F4FBC54DD12F177CE4FD9D625E646B814F1A919639883C01B5E05
    36B3747FAEAA5570C90229D45B47CD814A145185F8C8F6E45922B34B9F609168
checkpoint.flowState.flowIORequest: 
    Send(sessionToMessage={FlowSessionImpl(destination=O=Mock Company 3, L=London, C=GB, sourceSessionId=SessionId(toLong=-3358756275887911989))=F8D4741D3E5672AA07A60AD3651B3BAA957ADA2E752421CEE6DCF81E94EEF592})
    Receive(sessions=[FlowSessionImpl(destination=O=Mock Company 3, L=London, C=GB, sourceSessionId=SessionId(toLong=-3358756275887911989))])
checkpoint.timestamp: 
    2023-01-31T07:40:30.389Z
    2023-01-31T07:40:30.391Z
isFlowResumed: 
    true
    false


 --- Transition of flow [02219a88-233c-4408-8fb0-e37b50b53e04] ---
  Timestamp: 2023-01-31T07:40:30.393Z
  Event: DoRemainingWork
  Actions: 
    
  Continuation: ProcessEvents
  Diff between previous and next state:
null

 --- Transition of flow [02219a88-233c-4408-8fb0-e37b50b53e04] ---
  Timestamp: 2023-01-31T07:40:30.409Z
  Event: DeliverSessionMessage(sessionMessage=ExistingSessionMessage(recipientSessionId=SessionId(toLong=-3358756275887911989), payload=DataSessionMessage(payload=class net.corda.core.serialization.SerializedBytes)), deduplicationHandler=net.corda.testing.node.internal.MockNodeMessagingService$InMemoryDeduplicationHandler@2ad966ff, sender=O=Mock Company 3, L=London, C=GB)
  Actions: 
    ScheduleEvent(event=DoRemainingWork)
  Continuation: ProcessEvents
  Diff between previous and next state:
pendingDeduplicationHandlers: 
    []
    [net.corda.testing.node.internal.MockNodeMessagingService$InMemoryDeduplicationHandler@2ad966ff]
checkpoint.checkpointState.sessions.SessionId(toLong=-3358756275887911989).receivedMessages.isEmpty: 
    true
    false
checkpoint.timestamp: 
    2023-01-31T07:40:30.393Z
    2023-01-31T07:40:30.409Z


 --- Transition of flow [02219a88-233c-4408-8fb0-e37b50b53e04] ---
  Timestamp: 2023-01-31T07:40:30.409Z
  Event: DoRemainingWork
  Actions: 
    CreateTransaction
  Continuation: Resume(result=class java.util.LinkedHashMap)
  Diff between previous and next state:
checkpoint.checkpointState.sessions.SessionId(toLong=-3358756275887911989).receivedMessages.isEmpty: 
    false
    true
isFlowResumed: 
    false
    true


 --- Transition of flow [02219a88-233c-4408-8fb0-e37b50b53e04] ---
  Timestamp: 2023-01-31T07:40:30.410Z
  Event: LeaveSubFlow
  Actions: 
    
  Continuation: ProcessEvents
  Diff between previous and next state:
checkpoint.checkpointState.subFlowStack: 
    [Initiating(flowClass=class net.corda.samples.obligation.flows.IOUSettleFlow, classToInitiateWith=class net.corda.samples.obligation.flows.IOUSettleFlow, flowInfo=FlowInfo(flowVersion=1, appName=<unknown>), subFlowVersion=CorDappFlow(platformVersion=11, corDappName=workflows-1.0, corDappHash=F8E3613207E5ABAEC38930FAA426F7BA91464AA72DAF3EFB74917A0BA71A146E), isEnabledTimedFlow=false), Inlined(flowClass=class net.corda.core.flows.CollectSignatureFlow, subFlowVersion=CoreFlow(platformVersion=11), isEnabledTimedFlow=false)]
    [Initiating(flowClass=class net.corda.samples.obligation.flows.IOUSettleFlow, classToInitiateWith=class net.corda.samples.obligation.flows.IOUSettleFlow, flowInfo=FlowInfo(flowVersion=1, appName=<unknown>), subFlowVersion=CorDappFlow(platformVersion=11, corDappName=workflows-1.0, corDappHash=F8E3613207E5ABAEC38930FAA426F7BA91464AA72DAF3EFB74917A0BA71A146E), isEnabledTimedFlow=false)]
checkpoint.timestamp: 
    2023-01-31T07:40:30.409Z
    2023-01-31T07:40:30.410Z


 --- Transition of flow [02219a88-233c-4408-8fb0-e37b50b53e04] ---
  Timestamp: 2023-01-31T07:40:30.410Z
  Event: EnterSubFlow(subFlowClass=class net.corda.core.flows.FinalityFlow, subFlowVersion=CoreFlow(platformVersion=11), isEnabledTimedFlow=false)
  Actions: 
    
  Continuation: ProcessEvents
  Diff between previous and next state:
checkpoint.checkpointState.subFlowStack: 
    [Initiating(flowClass=class net.corda.samples.obligation.flows.IOUSettleFlow, classToInitiateWith=class net.corda.samples.obligation.flows.IOUSettleFlow, flowInfo=FlowInfo(flowVersion=1, appName=<unknown>), subFlowVersion=CorDappFlow(platformVersion=11, corDappName=workflows-1.0, corDappHash=F8E3613207E5ABAEC38930FAA426F7BA91464AA72DAF3EFB74917A0BA71A146E), isEnabledTimedFlow=false)]
    [Initiating(flowClass=class net.corda.samples.obligation.flows.IOUSettleFlow, classToInitiateWith=class net.corda.samples.obligation.flows.IOUSettleFlow, flowInfo=FlowInfo(flowVersion=1, appName=<unknown>), subFlowVersion=CorDappFlow(platformVersion=11, corDappName=workflows-1.0, corDappHash=F8E3613207E5ABAEC38930FAA426F7BA91464AA72DAF3EFB74917A0BA71A146E), isEnabledTimedFlow=false), Initiating(flowClass=class net.corda.core.flows.FinalityFlow, classToInitiateWith=class net.corda.core.flows.FinalityFlow, flowInfo=FlowInfo(flowVersion=1, appName=corda-core-4.9), subFlowVersion=CoreFlow(platformVersion=11), isEnabledTimedFlow=false)]


 --- Transition of flow [02219a88-233c-4408-8fb0-e37b50b53e04] ---
  Timestamp: 2023-01-31T07:40:30.423Z
  Event: LeaveSubFlow
  Actions: 
    
  Continuation: ProcessEvents
  Diff between previous and next state:
checkpoint.checkpointState.subFlowStack: 
    [Initiating(flowClass=class net.corda.samples.obligation.flows.IOUSettleFlow, classToInitiateWith=class net.corda.samples.obligation.flows.IOUSettleFlow, flowInfo=FlowInfo(flowVersion=1, appName=<unknown>), subFlowVersion=CorDappFlow(platformVersion=11, corDappName=workflows-1.0, corDappHash=F8E3613207E5ABAEC38930FAA426F7BA91464AA72DAF3EFB74917A0BA71A146E), isEnabledTimedFlow=false), Initiating(flowClass=class net.corda.core.flows.FinalityFlow, classToInitiateWith=class net.corda.core.flows.FinalityFlow, flowInfo=FlowInfo(flowVersion=1, appName=corda-core-4.9), subFlowVersion=CoreFlow(platformVersion=11), isEnabledTimedFlow=false)]
    [Initiating(flowClass=class net.corda.samples.obligation.flows.IOUSettleFlow, classToInitiateWith=class net.corda.samples.obligation.flows.IOUSettleFlow, flowInfo=FlowInfo(flowVersion=1, appName=<unknown>), subFlowVersion=CorDappFlow(platformVersion=11, corDappName=workflows-1.0, corDappHash=F8E3613207E5ABAEC38930FAA426F7BA91464AA72DAF3EFB74917A0BA71A146E), isEnabledTimedFlow=false)]
checkpoint.timestamp: 
    2023-01-31T07:40:30.410Z
    2023-01-31T07:40:30.423Z


 --- Transition of flow [02219a88-233c-4408-8fb0-e37b50b53e04] ---
  Timestamp: 2023-01-31T07:40:30.435Z
  Event: Error(exception=java.lang.IllegalArgumentException: Could not find Party for Anonymous(DLADeVatA6nCeWpq8u2w5yZ2rkLJawaSeD5RjCjN9WiQCD), rollback=true)
  Actions: 
    RollbackTransaction
    ScheduleEvent(event=DoRemainingWork)
  Continuation: ProcessEvents
  Diff between previous and next state:
checkpoint.errorState: 
    Clean
    Errored(errors=[FlowError(errorId=-4448502163904690932, exception=java.lang.IllegalArgumentException: Could not find Party for Anonymous(DLADeVatA6nCeWpq8u2w5yZ2rkLJawaSeD5RjCjN9WiQCD))], propagatedIndex=0, propagating=false)
checkpoint.timestamp: 
    2023-01-31T07:40:30.423Z
    2023-01-31T07:40:30.426Z
isFlowResumed: 
    true
    false


 --- Transition of flow [02219a88-233c-4408-8fb0-e37b50b53e04] ---
  Timestamp: 2023-01-31T07:40:30.439Z
  Event: DoRemainingWork
  Actions: 
    
  Continuation: ProcessEvents
  Diff between previous and next state:
null

 --- Transition of flow [02219a88-233c-4408-8fb0-e37b50b53e04] ---
  Timestamp: 2023-01-31T07:40:30.440Z
  Event: StartErrorPropagation
  Actions: 
    ScheduleEvent(event=DoRemainingWork)
  Continuation: ProcessEvents
  Diff between previous and next state:
checkpoint.errorState.propagating: 
    false
    true
checkpoint.timestamp: 
    2023-01-31T07:40:30.426Z
    2023-01-31T07:40:30.440Z
 {actor_id=Only For Testing, actor_owning_identity=O=Mock Company 1, L=London, C=GB, actor_store_id=TEST, fiber-id=10000026, flow-id=02219a88-233c-4408-8fb0-e37b50b53e04, invocation_id=814ec657-afd9-4711-ba0b-0009fd895e7f, invocation_timestamp=2023-01-31T07:40:29.715Z, origin=Only For Testing, session_id=814ec657-afd9-4711-ba0b-0009fd895e7f, session_timestamp=2023-01-31T07:40:29.715Z, thread-id=854, tx_id=5776DD8CA997A5CC61E2E97CA1BD831E77AAEE5DE7213BE5AC35DB26A3B61748}
[WARN ] 2023-01-31T07:40:30,474Z [Mock network] interceptors.DumpHistoryOnErrorInterceptor. - Flow [02219a88-233c-4408-8fb0-e37b50b53e04] error {actor_id=Only For Testing, actor_owning_identity=O=Mock Company 1, L=London, C=GB, actor_store_id=TEST, fiber-id=10000026, flow-id=02219a88-233c-4408-8fb0-e37b50b53e04, invocation_id=814ec657-afd9-4711-ba0b-0009fd895e7f, invocation_timestamp=2023-01-31T07:40:29.715Z, origin=Only For Testing, session_id=814ec657-afd9-4711-ba0b-0009fd895e7f, session_timestamp=2023-01-31T07:40:29.715Z, thread-id=854, tx_id=5776DD8CA997A5CC61E2E97CA1BD831E77AAEE5DE7213BE5AC35DB26A3B61748}
java.lang.IllegalArgumentException: Could not find Party for Anonymous(DLADeVatA6nCeWpq8u2w5yZ2rkLJawaSeD5RjCjN9WiQCD)
	at net.corda.core.identity.IdentityUtils.groupAbstractPartyByWellKnownParty(IdentityUtils.kt:47) ~[corda-core-4.9.jar:?]
	at net.corda.core.identity.IdentityUtils.groupAbstractPartyByWellKnownParty(IdentityUtils.kt:63) ~[corda-core-4.9.jar:?]
	at net.corda.core.flows.FinalityFlow.extractExternalParticipants(FinalityFlow.kt:252) ~[corda-core-4.9.jar:?]
	at net.corda.core.flows.FinalityFlow.call(FinalityFlow.kt:162) ~[corda-core-4.9.jar:?]
	at net.corda.core.flows.FinalityFlow.call(FinalityFlow.kt:43) ~[corda-core-4.9.jar:?]
	at net.corda.node.services.statemachine.FlowStateMachineImpl.subFlow(FlowStateMachineImpl.kt:420) ~[corda-node-4.9.jar:?]
	at net.corda.core.flows.FlowLogic.subFlow(FlowLogic.kt:409) ~[corda-core-4.9.jar:?]
	at net.corda.samples.obligation.flows.IOUSettleFlow.call(IOUSettleFlow.kt:116) ~[main/:?]
	at net.corda.samples.obligation.flows.IOUSettleFlow.call(IOUSettleFlow.kt:30) ~[main/:?]
	at net.corda.node.services.statemachine.FlowStateMachineImpl.run(FlowStateMachineImpl.kt:349) ~[corda-node-4.9.jar:?]
	at net.corda.node.services.statemachine.FlowStateMachineImpl.run(FlowStateMachineImpl.kt:71) ~[corda-node-4.9.jar:?]
	at co.paralleluniverse.fibers.Fiber.run1(Fiber.java:1092) ~[quasar-core-0.7.10.jar:0.7.10]
	at co.paralleluniverse.fibers.Fiber.exec(Fiber.java:788) ~[quasar-core-0.7.10.jar:0.7.10]
	at co.paralleluniverse.fibers.RunnableFiberTask.doExec(RunnableFiberTask.java:100) ~[quasar-core-0.7.10.jar:0.7.10]
	at co.paralleluniverse.fibers.RunnableFiberTask.run(RunnableFiberTask.java:91) ~[quasar-core-0.7.10.jar:0.7.10]
	at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511) ~[?:1.8.0_202]
	at java.util.concurrent.FutureTask.run(FutureTask.java:266) ~[?:1.8.0_202]
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.access$201(ScheduledThreadPoolExecutor.java:180) ~[?:1.8.0_202]
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.run(ScheduledThreadPoolExecutor.java:293) ~[?:1.8.0_202]
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149) ~[?:1.8.0_202]
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624) ~[?:1.8.0_202]
	at net.corda.node.utilities.AffinityExecutor$ServiceAffinityExecutor$1$thread$1.run(AffinityExecutor.kt:63) ~[corda-node-4.9.jar:?]
[WARN ] 2023-01-31T07:40:30,475Z [Mock network] statemachine.ActionExecutorImpl. - Propagating error {actor_id=Only For Testing, actor_owning_identity=O=Mock Company 1, L=London, C=GB, actor_store_id=TEST, fiber-id=10000026, flow-id=02219a88-233c-4408-8fb0-e37b50b53e04, invocation_id=814ec657-afd9-4711-ba0b-0009fd895e7f, invocation_timestamp=2023-01-31T07:40:29.715Z, origin=Only For Testing, session_id=814ec657-afd9-4711-ba0b-0009fd895e7f, session_timestamp=2023-01-31T07:40:29.715Z, thread-id=854, tx_id=5776DD8CA997A5CC61E2E97CA1BD831E77AAEE5DE7213BE5AC35DB26A3B61748}
[WARN ] 2023-01-31T07:40:30,596Z [Mock network] interceptors.DumpHistoryOnErrorInterceptor. - Flow [02219a88-233c-4408-8fb0-e37b50b53e04] errored, dumping all transitions:

 --- Transition of flow [02219a88-233c-4408-8fb0-e37b50b53e04] ---
  Timestamp: 2023-01-31T07:40:29.739Z
  Event: DoRemainingWork
  Actions: 
    CreateTransaction
    PersistCheckpoint(id=[02219a88-233c-4408-8fb0-e37b50b53e04], checkpoint=Checkpoint(checkpointState=CheckpointState(invocationContext=InvocationContext(origin=RPC(actor=Actor(id=Id(value=Only For Testing), serviceId=AuthServiceId(value=TEST), owningLegalIdentity=O=Mock Company 1, L=London, C=GB)), trace=Trace(invocationId=814ec657-afd9-4711-ba0b-0009fd895e7f, timestamp: 2023-01-31T07:40:29.715Z, entityType: Invocation, sessionId=814ec657-afd9-4711-ba0b-0009fd895e7f, timestamp: 2023-01-31T07:40:29.715Z, entityType: Session), actor=Actor(id=Id(value=Only For Testing), serviceId=AuthServiceId(value=TEST), owningLegalIdentity=O=Mock Company 1, L=London, C=GB), externalTrace=null, impersonatedActor=null, arguments=[], clientId=null), ourIdentity=O=Mock Company 1, L=London, C=GB, sessions={}, sessionsToBeClosed=[], subFlowStack=[Initiating(flowClass=class net.corda.samples.obligation.flows.IOUSettleFlow, classToInitiateWith=class net.corda.samples.obligation.flows.IOUSettleFlow, flowInfo=FlowInfo(flowVersion=1, appName=<unknown>), subFlowVersion=CorDappFlow(platformVersion=11, corDappName=workflows-1.0, corDappHash=F8E3613207E5ABAEC38930FAA426F7BA91464AA72DAF3EFB74917A0BA71A146E), isEnabledTimedFlow=false)], numberOfSuspends=0, numberOfCommits=1), flowState=Unstarted(flowStart=Explicit, frozenFlowLogic=E5D89117AA0B3572BCDE43EA87C38B41B96F1EC6D9F1A949D1A49463EB040B85), errorState=Clean, result=null, status=RUNNABLE, progressStep=null, flowIoRequest=null, compatible=true), isCheckpointUpdate=false)
    PersistDeduplicationFacts(deduplicationHandlers=[net.corda.node.internal.FlowStarterImpl$startFlow$startFlowEvent$1@f5b7308])
    CommitTransaction
    AcknowledgeMessages(deduplicationHandlers=[net.corda.node.internal.FlowStarterImpl$startFlow$startFlowEvent$1@f5b7308])
    SignalFlowHasStarted(flowId=[02219a88-233c-4408-8fb0-e37b50b53e04])
    CreateTransaction
  Continuation: Resume(result=null)
  Diff between previous and next state:
pendingDeduplicationHandlers: 
    [net.corda.node.internal.FlowStarterImpl$startFlow$startFlowEvent$1@f5b7308]
    []
isAnyCheckpointPersisted: 
    false
    true
isFlowResumed: 
    false
    true


 --- Transition of flow [02219a88-233c-4408-8fb0-e37b50b53e04] ---
  Timestamp: 2023-01-31T07:40:29.741Z
  Event: EnterSubFlow(subFlowClass=class net.corda.samples.obligation.accountUtil.NewKeyForAccount, subFlowVersion=CorDappFlow(platformVersion=11, corDappName=workflows-1.0, corDappHash=F8E3613207E5ABAEC38930FAA426F7BA91464AA72DAF3EFB74917A0BA71A146E), isEnabledTimedFlow=false)
  Actions: 
    
  Continuation: ProcessEvents
  Diff between previous and next state:
checkpoint.checkpointState.subFlowStack: 
    [Initiating(flowClass=class net.corda.samples.obligation.flows.IOUSettleFlow, classToInitiateWith=class net.corda.samples.obligation.flows.IOUSettleFlow, flowInfo=FlowInfo(flowVersion=1, appName=<unknown>), subFlowVersion=CorDappFlow(platformVersion=11, corDappName=workflows-1.0, corDappHash=F8E3613207E5ABAEC38930FAA426F7BA91464AA72DAF3EFB74917A0BA71A146E), isEnabledTimedFlow=false)]
    [Initiating(flowClass=class net.corda.samples.obligation.flows.IOUSettleFlow, classToInitiateWith=class net.corda.samples.obligation.flows.IOUSettleFlow, flowInfo=FlowInfo(flowVersion=1, appName=<unknown>), subFlowVersion=CorDappFlow(platformVersion=11, corDappName=workflows-1.0, corDappHash=F8E3613207E5ABAEC38930FAA426F7BA91464AA72DAF3EFB74917A0BA71A146E), isEnabledTimedFlow=false), Inlined(flowClass=class net.corda.samples.obligation.accountUtil.NewKeyForAccount, subFlowVersion=CorDappFlow(platformVersion=11, corDappName=workflows-1.0, corDappHash=F8E3613207E5ABAEC38930FAA426F7BA91464AA72DAF3EFB74917A0BA71A146E), isEnabledTimedFlow=false)]
checkpoint.timestamp: 
    2023-01-31T07:40:29.716Z
    2023-01-31T07:40:29.741Z


 --- Transition of flow [02219a88-233c-4408-8fb0-e37b50b53e04] ---
  Timestamp: 2023-01-31T07:40:29.745Z
  Event: LeaveSubFlow
  Actions: 
    
  Continuation: ProcessEvents
  Diff between previous and next state:
checkpoint.checkpointState.subFlowStack: 
    [Initiating(flowClass=class net.corda.samples.obligation.flows.IOUSettleFlow, classToInitiateWith=class net.corda.samples.obligation.flows.IOUSettleFlow, flowInfo=FlowInfo(flowVersion=1, appName=<unknown>), subFlowVersion=CorDappFlow(platformVersion=11, corDappName=workflows-1.0, corDappHash=F8E3613207E5ABAEC38930FAA426F7BA91464AA72DAF3EFB74917A0BA71A146E), isEnabledTimedFlow=false), Inlined(flowClass=class net.corda.samples.obligation.accountUtil.NewKeyForAccount, subFlowVersion=CorDappFlow(platformVersion=11, corDappName=workflows-1.0, corDappHash=F8E3613207E5ABAEC38930FAA426F7BA91464AA72DAF3EFB74917A0BA71A146E), isEnabledTimedFlow=false)]
    [Initiating(flowClass=class net.corda.samples.obligation.flows.IOUSettleFlow, classToInitiateWith=class net.corda.samples.obligation.flows.IOUSettleFlow, flowInfo=FlowInfo(flowVersion=1, appName=<unknown>), subFlowVersion=CorDappFlow(platformVersion=11, corDappName=workflows-1.0, corDappHash=F8E3613207E5ABAEC38930FAA426F7BA91464AA72DAF3EFB74917A0BA71A146E), isEnabledTimedFlow=false)]
checkpoint.timestamp: 
    2023-01-31T07:40:29.741Z
    2023-01-31T07:40:29.745Z


 --- Transition of flow [02219a88-233c-4408-8fb0-e37b50b53e04] ---
  Timestamp: 2023-01-31T07:40:29.751Z
  Event: EnterSubFlow(subFlowClass=class com.r3.corda.lib.accounts.workflows.flows.RequestKeyForAccount, subFlowVersion=CorDappFlow(platformVersion=11, corDappName=accounts-workflows-1.0, corDappHash=80555705CE83A631D1BDD61E9C14A7C2215BB67FAB1411547C4D4B3D66F8402E), isEnabledTimedFlow=false)
  Actions: 
    
  Continuation: ProcessEvents
  Diff between previous and next state:
checkpoint.checkpointState.subFlowStack: 
    [Initiating(flowClass=class net.corda.samples.obligation.flows.IOUSettleFlow, classToInitiateWith=class net.corda.samples.obligation.flows.IOUSettleFlow, flowInfo=FlowInfo(flowVersion=1, appName=<unknown>), subFlowVersion=CorDappFlow(platformVersion=11, corDappName=workflows-1.0, corDappHash=F8E3613207E5ABAEC38930FAA426F7BA91464AA72DAF3EFB74917A0BA71A146E), isEnabledTimedFlow=false)]
    [Initiating(flowClass=class net.corda.samples.obligation.flows.IOUSettleFlow, classToInitiateWith=class net.corda.samples.obligation.flows.IOUSettleFlow, flowInfo=FlowInfo(flowVersion=1, appName=<unknown>), subFlowVersion=CorDappFlow(platformVersion=11, corDappName=workflows-1.0, corDappHash=F8E3613207E5ABAEC38930FAA426F7BA91464AA72DAF3EFB74917A0BA71A146E), isEnabledTimedFlow=false), Initiating(flowClass=class com.r3.corda.lib.accounts.workflows.flows.RequestKeyForAccount, classToInitiateWith=class com.r3.corda.lib.accounts.workflows.flows.RequestKeyForAccount, flowInfo=FlowInfo(flowVersion=1, appName=accounts-workflows-1.0), subFlowVersion=CorDappFlow(platformVersion=11, corDappName=accounts-workflows-1.0, corDappHash=80555705CE83A631D1BDD61E9C14A7C2215BB67FAB1411547C4D4B3D66F8402E), isEnabledTimedFlow=false)]
checkpoint.timestamp: 
    2023-01-31T07:40:29.745Z
    2023-01-31T07:40:29.751Z


 --- Transition of flow [02219a88-233c-4408-8fb0-e37b50b53e04] ---
  Timestamp: 2023-01-31T07:40:29.752Z
  Event: InitiateFlow(destination=O=Mock Company 3, L=London, C=GB, wellKnownParty=O=Mock Company 3, L=London, C=GB)
  Actions: 
    AddSessionBinding(flowId=[02219a88-233c-4408-8fb0-e37b50b53e04], sessionId=SessionId(toLong=1764390314782059977))
  Continuation: Resume(result=class net.corda.node.services.statemachine.FlowSessionImpl)
  Diff between previous and next state:
checkpoint.checkpointState.sessions.SessionId(toLong=1764390314782059977): 
    null
    Uninitiated(destination=O=Mock Company 3, L=London, C=GB, initiatingSubFlow=Initiating(flowClass=class com.r3.corda.lib.accounts.workflows.flows.RequestKeyForAccount, classToInitiateWith=class com.r3.corda.lib.accounts.workflows.flows.RequestKeyForAccount, flowInfo=FlowInfo(flowVersion=1, appName=accounts-workflows-1.0), subFlowVersion=CorDappFlow(platformVersion=11, corDappName=accounts-workflows-1.0, corDappHash=80555705CE83A631D1BDD61E9C14A7C2215BB67FAB1411547C4D4B3D66F8402E), isEnabledTimedFlow=false), sourceSessionId=SessionId(toLong=1764390314782059977), additionalEntropy=-1578739467683743056)
checkpoint.timestamp: 
    2023-01-31T07:40:29.751Z
    2023-01-31T07:40:29.752Z


 --- Transition of flow [02219a88-233c-4408-8fb0-e37b50b53e04] ---
  Timestamp: 2023-01-31T07:40:29.752Z
  Event: EnterSubFlow(subFlowClass=class com.r3.corda.lib.accounts.workflows.flows.RequestKeyForAccountFlow, subFlowVersion=CorDappFlow(platformVersion=11, corDappName=accounts-workflows-1.0, corDappHash=80555705CE83A631D1BDD61E9C14A7C2215BB67FAB1411547C4D4B3D66F8402E), isEnabledTimedFlow=false)
  Actions: 
    
  Continuation: ProcessEvents
  Diff between previous and next state:
checkpoint.checkpointState.subFlowStack: 
    [Initiating(flowClass=class net.corda.samples.obligation.flows.IOUSettleFlow, classToInitiateWith=class net.corda.samples.obligation.flows.IOUSettleFlow, flowInfo=FlowInfo(flowVersion=1, appName=<unknown>), subFlowVersion=CorDappFlow(platformVersion=11, corDappName=workflows-1.0, corDappHash=F8E3613207E5ABAEC38930FAA426F7BA91464AA72DAF3EFB74917A0BA71A146E), isEnabledTimedFlow=false), Initiating(flowClass=class com.r3.corda.lib.accounts.workflows.flows.RequestKeyForAccount, classToInitiateWith=class com.r3.corda.lib.accounts.workflows.flows.RequestKeyForAccount, flowInfo=FlowInfo(flowVersion=1, appName=accounts-workflows-1.0), subFlowVersion=CorDappFlow(platformVersion=11, corDappName=accounts-workflows-1.0, corDappHash=80555705CE83A631D1BDD61E9C14A7C2215BB67FAB1411547C4D4B3D66F8402E), isEnabledTimedFlow=false)]
    [Initiating(flowClass=class net.corda.samples.obligation.flows.IOUSettleFlow, classToInitiateWith=class net.corda.samples.obligation.flows.IOUSettleFlow, flowInfo=FlowInfo(flowVersion=1, appName=<unknown>), subFlowVersion=CorDappFlow(platformVersion=11, corDappName=workflows-1.0, corDappHash=F8E3613207E5ABAEC38930FAA426F7BA91464AA72DAF3EFB74917A0BA71A146E), isEnabledTimedFlow=false), Initiating(flowClass=class com.r3.corda.lib.accounts.workflows.flows.RequestKeyForAccount, classToInitiateWith=class com.r3.corda.lib.accounts.workflows.flows.RequestKeyForAccount, flowInfo=FlowInfo(flowVersion=1, appName=accounts-workflows-1.0), subFlowVersion=CorDappFlow(platformVersion=11, corDappName=accounts-workflows-1.0, corDappHash=80555705CE83A631D1BDD61E9C14A7C2215BB67FAB1411547C4D4B3D66F8402E), isEnabledTimedFlow=false), Inlined(flowClass=class com.r3.corda.lib.accounts.workflows.flows.RequestKeyForAccountFlow, subFlowVersion=CorDappFlow(platformVersion=11, corDappName=accounts-workflows-1.0, corDappHash=80555705CE83A631D1BDD61E9C14A7C2215BB67FAB1411547C4D4B3D66F8402E), isEnabledTimedFlow=false)]


 --- Transition of flow [02219a88-233c-4408-8fb0-e37b50b53e04] ---
  Timestamp: 2023-01-31T07:40:29.759Z
  Event: Suspend(ioRequest=SendAndReceive({FlowSessionImpl(destination=O=Mock Company 3, L=London, C=GB, sourceSessionId=SessionId(toLong=1764390314782059977))=FlowSessionImpl(destination=O=Mock Company 3, L=London, C=GB, sourceSessionId=SessionId(toLong=1764390314782059977))=32C3871DB081C18FA53F4901ED55F839581D988078B76D840ED4204E034F1FA8}, shouldRetrySend=false), maySkipCheckpoint=false, fiber=ECD7047ADE6CCBEBE32BCBD00639443595FD86585BDECCD28A0B10504072DCC0, currentStep=Starting)
  Actions: 
    PersistCheckpoint(id=[02219a88-233c-4408-8fb0-e37b50b53e04], checkpoint=Checkpoint(checkpointState=CheckpointState(invocationContext=InvocationContext(origin=RPC(actor=Actor(id=Id(value=Only For Testing), serviceId=AuthServiceId(value=TEST), owningLegalIdentity=O=Mock Company 1, L=London, C=GB)), trace=Trace(invocationId=814ec657-afd9-4711-ba0b-0009fd895e7f, timestamp: 2023-01-31T07:40:29.715Z, entityType: Invocation, sessionId=814ec657-afd9-4711-ba0b-0009fd895e7f, timestamp: 2023-01-31T07:40:29.715Z, entityType: Session), actor=Actor(id=Id(value=Only For Testing), serviceId=AuthServiceId(value=TEST), owningLegalIdentity=O=Mock Company 1, L=London, C=GB), externalTrace=null, impersonatedActor=null, arguments=[], clientId=null), ourIdentity=O=Mock Company 1, L=London, C=GB, sessions={SessionId(toLong=1764390314782059977)=Uninitiated(destination=O=Mock Company 3, L=London, C=GB, initiatingSubFlow=Initiating(flowClass=class com.r3.corda.lib.accounts.workflows.flows.RequestKeyForAccount, classToInitiateWith=class com.r3.corda.lib.accounts.workflows.flows.RequestKeyForAccount, flowInfo=FlowInfo(flowVersion=1, appName=accounts-workflows-1.0), subFlowVersion=CorDappFlow(platformVersion=11, corDappName=accounts-workflows-1.0, corDappHash=80555705CE83A631D1BDD61E9C14A7C2215BB67FAB1411547C4D4B3D66F8402E), isEnabledTimedFlow=false), sourceSessionId=SessionId(toLong=1764390314782059977), additionalEntropy=-1578739467683743056)}, sessionsToBeClosed=[], subFlowStack=[Initiating(flowClass=class net.corda.samples.obligation.flows.IOUSettleFlow, classToInitiateWith=class net.corda.samples.obligation.flows.IOUSettleFlow, flowInfo=FlowInfo(flowVersion=1, appName=<unknown>), subFlowVersion=CorDappFlow(platformVersion=11, corDappName=workflows-1.0, corDappHash=F8E3613207E5ABAEC38930FAA426F7BA91464AA72DAF3EFB74917A0BA71A146E), isEnabledTimedFlow=false), Initiating(flowClass=class com.r3.corda.lib.accounts.workflows.flows.RequestKeyForAccount, classToInitiateWith=class com.r3.corda.lib.accounts.workflows.flows.RequestKeyForAccount, flowInfo=FlowInfo(flowVersion=1, appName=accounts-workflows-1.0), subFlowVersion=CorDappFlow(platformVersion=11, corDappName=accounts-workflows-1.0, corDappHash=80555705CE83A631D1BDD61E9C14A7C2215BB67FAB1411547C4D4B3D66F8402E), isEnabledTimedFlow=false), Inlined(flowClass=class com.r3.corda.lib.accounts.workflows.flows.RequestKeyForAccountFlow, subFlowVersion=CorDappFlow(platformVersion=11, corDappName=accounts-workflows-1.0, corDappHash=80555705CE83A631D1BDD61E9C14A7C2215BB67FAB1411547C4D4B3D66F8402E), isEnabledTimedFlow=false)], numberOfSuspends=1, numberOfCommits=2), flowState=Started(flowIORequest=SendAndReceive({FlowSessionImpl(destination=O=Mock Company 3, L=London, C=GB, sourceSessionId=SessionId(toLong=1764390314782059977))=FlowSessionImpl(destination=O=Mock Company 3, L=London, C=GB, sourceSessionId=SessionId(toLong=1764390314782059977))=32C3871DB081C18FA53F4901ED55F839581D988078B76D840ED4204E034F1FA8}, shouldRetrySend=false), frozenFiber=ECD7047ADE6CCBEBE32BCBD00639443595FD86585BDECCD28A0B10504072DCC0), errorState=Clean, result=null, status=RUNNABLE, progressStep=Starting, flowIoRequest=SendAndReceive, compatible=true), isCheckpointUpdate=true)
    PersistDeduplicationFacts(deduplicationHandlers=[])
    CommitTransaction
    AcknowledgeMessages(deduplicationHandlers=[])
    ScheduleEvent(event=DoRemainingWork)
  Continuation: ProcessEvents
  Diff between previous and next state:
numberOfCommits: 
    0
    2
checkpoint.flowIoRequest: 
    null
    SendAndReceive
checkpoint.checkpointState.numberOfCommits: 
    1
    2
checkpoint.checkpointState.numberOfSuspends: 
    0
    1
checkpoint.flowState: 
    Unstarted(flowStart=Explicit, frozenFlowLogic=E5D89117AA0B3572BCDE43EA87C38B41B96F1EC6D9F1A949D1A49463EB040B85)
    Started(flowIORequest=SendAndReceive({FlowSessionImpl(destination=O=Mock Company 3, L=London, C=GB, sourceSessionId=SessionId(toLong=1764390314782059977))=FlowSessionImpl(destination=O=Mock Company 3, L=London, C=GB, sourceSessionId=SessionId(toLong=1764390314782059977))=32C3871DB081C18FA53F4901ED55F839581D988078B76D840ED4204E034F1FA8}, shouldRetrySend=false), frozenFiber=ECD7047ADE6CCBEBE32BCBD00639443595FD86585BDECCD28A0B10504072DCC0)
checkpoint.progressStep: 
    null
    Starting
checkpoint.timestamp: 
    2023-01-31T07:40:29.752Z
    2023-01-31T07:40:29.758Z
isFlowResumed: 
    true
    false


 --- Transition of flow [02219a88-233c-4408-8fb0-e37b50b53e04] ---
  Timestamp: 2023-01-31T07:40:29.760Z
  Event: DoRemainingWork
  Actions: 
    SendMultiple(sendInitial=[SendInitial(destination=O=Mock Company 3, L=London, C=GB, initialise=InitialSessionMessage(initiatorSessionId=SessionId(toLong=1764390314782059977), initiationEntropy=-1578739467683743056, initiatorFlowClassName=com.r3.corda.lib.accounts.workflows.flows.RequestKeyForAccount, appName=accounts-workflows-1.0, firstPayload=class net.corda.core.serialization.SerializedBytes), deduplicationId=SenderDeduplicationId(deduplicationId=DeduplicationId(toString=N-R-1764390314782059977--1578739467683743056-1-0), senderUUID=b7a8af6e-2e00-46fb-860a-22ad29e03037))], sendExisting=[])
  Continuation: ProcessEvents
  Diff between previous and next state:
checkpoint.checkpointState.sessions.SessionId(toLong=1764390314782059977): 
    Uninitiated(destination=O=Mock Company 3, L=London, C=GB, initiatingSubFlow=Initiating(flowClass=class com.r3.corda.lib.accounts.workflows.flows.RequestKeyForAccount, classToInitiateWith=class com.r3.corda.lib.accounts.workflows.flows.RequestKeyForAccount, flowInfo=FlowInfo(flowVersion=1, appName=accounts-workflows-1.0), subFlowVersion=CorDappFlow(platformVersion=11, corDappName=accounts-workflows-1.0, corDappHash=80555705CE83A631D1BDD61E9C14A7C2215BB67FAB1411547C4D4B3D66F8402E), isEnabledTimedFlow=false), sourceSessionId=SessionId(toLong=1764390314782059977), additionalEntropy=-1578739467683743056)
    Initiating(bufferedMessages=[], rejectionError=null, deduplicationSeed=R-1764390314782059977--1578739467683743056)
checkpoint.flowState.flowIORequest: 
    SendAndReceive({FlowSessionImpl(destination=O=Mock Company 3, L=London, C=GB, sourceSessionId=SessionId(toLong=1764390314782059977))=FlowSessionImpl(destination=O=Mock Company 3, L=London, C=GB, sourceSessionId=SessionId(toLong=1764390314782059977))=32C3871DB081C18FA53F4901ED55F839581D988078B76D840ED4204E034F1FA8}, shouldRetrySend=false)
    Receive(sessions=[FlowSessionImpl(destination=O=Mock Company 3, L=London, C=GB, sourceSessionId=SessionId(toLong=1764390314782059977))])
checkpoint.timestamp: 
    2023-01-31T07:40:29.758Z
    2023-01-31T07:40:29.760Z


 --- Transition of flow [02219a88-233c-4408-8fb0-e37b50b53e04] ---
  Timestamp: 2023-01-31T07:40:29.779Z
  Event: DeliverSessionMessage(sessionMessage=ExistingSessionMessage(recipientSessionId=SessionId(toLong=1764390314782059977), payload=ConfirmSessionMessage(initiatedSessionId=SessionId(toLong=-8103511418606744257), initiatedFlowInfo=FlowInfo(flowVersion=1, appName=accounts-workflows-1.0))), deduplicationHandler=net.corda.testing.node.internal.MockNodeMessagingService$InMemoryDeduplicationHandler@3ac2988c, sender=O=Mock Company 3, L=London, C=GB)
  Actions: 
    ScheduleEvent(event=DoRemainingWork)
  Continuation: ProcessEvents
  Diff between previous and next state:
pendingDeduplicationHandlers: 
    []
    [net.corda.testing.node.internal.MockNodeMessagingService$InMemoryDeduplicationHandler@3ac2988c]
checkpoint.checkpointState.sessions.SessionId(toLong=1764390314782059977): 
    Initiating(bufferedMessages=[], rejectionError=null, deduplicationSeed=R-1764390314782059977--1578739467683743056)
    Initiated(peerParty=O=Mock Company 3, L=London, C=GB, peerFlowInfo=FlowInfo(flowVersion=1, appName=accounts-workflows-1.0), receivedMessages=[], otherSideErrored=false, peerSinkSessionId=SessionId(toLong=-8103511418606744257), deduplicationSeed=R-1764390314782059977--1578739467683743056)
checkpoint.timestamp: 
    2023-01-31T07:40:29.760Z
    2023-01-31T07:40:29.779Z


 --- Transition of flow [02219a88-233c-4408-8fb0-e37b50b53e04] ---
  Timestamp: 2023-01-31T07:40:29.779Z
  Event: DoRemainingWork
  Actions: 
    
  Continuation: ProcessEvents
  Diff between previous and next state:
null

 --- Transition of flow [02219a88-233c-4408-8fb0-e37b50b53e04] ---
  Timestamp: 2023-01-31T07:40:29.780Z
  Event: DeliverSessionMessage(sessionMessage=ExistingSessionMessage(recipientSessionId=SessionId(toLong=1764390314782059977), payload=DataSessionMessage(payload=class net.corda.core.serialization.SerializedBytes)), deduplicationHandler=net.corda.testing.node.internal.MockNodeMessagingService$InMemoryDeduplicationHandler@a788a, sender=O=Mock Company 3, L=London, C=GB)
  Actions: 
    ScheduleEvent(event=DoRemainingWork)
  Continuation: ProcessEvents
  Diff between previous and next state:
pendingDeduplicationHandlers: 
    [net.corda.testing.node.internal.MockNodeMessagingService$InMemoryDeduplicationHandler@3ac2988c]
    [net.corda.testing.node.internal.MockNodeMessagingService$InMemoryDeduplicationHandler@3ac2988c, net.corda.testing.node.internal.MockNodeMessagingService$InMemoryDeduplicationHandler@a788a]
checkpoint.checkpointState.sessions.SessionId(toLong=1764390314782059977).receivedMessages.isEmpty: 
    true
    false
checkpoint.timestamp: 
    2023-01-31T07:40:29.779Z
    2023-01-31T07:40:29.780Z


 --- Transition of flow [02219a88-233c-4408-8fb0-e37b50b53e04] ---
  Timestamp: 2023-01-31T07:40:29.780Z
  Event: DoRemainingWork
  Actions: 
    CreateTransaction
  Continuation: Resume(result=class java.util.LinkedHashMap)
  Diff between previous and next state:
checkpoint.checkpointState.sessions.SessionId(toLong=1764390314782059977).receivedMessages.isEmpty: 
    false
    true
isFlowResumed: 
    false
    true


 --- Transition of flow [02219a88-233c-4408-8fb0-e37b50b53e04] ---
  Timestamp: 2023-01-31T07:40:29.780Z
  Event: EnterSubFlow(subFlowClass=class com.r3.corda.lib.ci.workflows.RequestKeyFlow, subFlowVersion=CoreFlow(platformVersion=11), isEnabledTimedFlow=false)
  Actions: 
    
  Continuation: ProcessEvents
  Diff between previous and next state:
checkpoint.checkpointState.subFlowStack: 
    [Initiating(flowClass=class net.corda.samples.obligation.flows.IOUSettleFlow, classToInitiateWith=class net.corda.samples.obligation.flows.IOUSettleFlow, flowInfo=FlowInfo(flowVersion=1, appName=<unknown>), subFlowVersion=CorDappFlow(platformVersion=11, corDappName=workflows-1.0, corDappHash=F8E3613207E5ABAEC38930FAA426F7BA91464AA72DAF3EFB74917A0BA71A146E), isEnabledTimedFlow=false), Initiating(flowClass=class com.r3.corda.lib.accounts.workflows.flows.RequestKeyForAccount, classToInitiateWith=class com.r3.corda.lib.accounts.workflows.flows.RequestKeyForAccount, flowInfo=FlowInfo(flowVersion=1, appName=accounts-workflows-1.0), subFlowVersion=CorDappFlow(platformVersion=11, corDappName=accounts-workflows-1.0, corDappHash=80555705CE83A631D1BDD61E9C14A7C2215BB67FAB1411547C4D4B3D66F8402E), isEnabledTimedFlow=false), Inlined(flowClass=class com.r3.corda.lib.accounts.workflows.flows.RequestKeyForAccountFlow, subFlowVersion=CorDappFlow(platformVersion=11, corDappName=accounts-workflows-1.0, corDappHash=80555705CE83A631D1BDD61E9C14A7C2215BB67FAB1411547C4D4B3D66F8402E), isEnabledTimedFlow=false)]
    [Initiating(flowClass=class net.corda.samples.obligation.flows.IOUSettleFlow, classToInitiateWith=class net.corda.samples.obligation.flows.IOUSettleFlow, flowInfo=FlowInfo(flowVersion=1, appName=<unknown>), subFlowVersion=CorDappFlow(platformVersion=11, corDappName=workflows-1.0, corDappHash=F8E3613207E5ABAEC38930FAA426F7BA91464AA72DAF3EFB74917A0BA71A146E), isEnabledTimedFlow=false), Initiating(flowClass=class com.r3.corda.lib.accounts.workflows.flows.RequestKeyForAccount, classToInitiateWith=class com.r3.corda.lib.accounts.workflows.flows.RequestKeyForAccount, flowInfo=FlowInfo(flowVersion=1, appName=accounts-workflows-1.0), subFlowVersion=CorDappFlow(platformVersion=11, corDappName=accounts-workflows-1.0, corDappHash=80555705CE83A631D1BDD61E9C14A7C2215BB67FAB1411547C4D4B3D66F8402E), isEnabledTimedFlow=false), Inlined(flowClass=class com.r3.corda.lib.accounts.workflows.flows.RequestKeyForAccountFlow, subFlowVersion=CorDappFlow(platformVersion=11, corDappName=accounts-workflows-1.0, corDappHash=80555705CE83A631D1BDD61E9C14A7C2215BB67FAB1411547C4D4B3D66F8402E), isEnabledTimedFlow=false), Inlined(flowClass=class com.r3.corda.lib.ci.workflows.RequestKeyFlow, subFlowVersion=CoreFlow(platformVersion=11), isEnabledTimedFlow=false)]


 --- Transition of flow [02219a88-233c-4408-8fb0-e37b50b53e04] ---
  Timestamp: 2023-01-31T07:40:29.784Z
  Event: Suspend(ioRequest=SendAndReceive({FlowSessionImpl(destination=O=Mock Company 3, L=London, C=GB, sourceSessionId=SessionId(toLong=1764390314782059977))=FlowSessionImpl(destination=O=Mock Company 3, L=London, C=GB, sourceSessionId=SessionId(toLong=1764390314782059977))=C17E64A52EAD39F1F5BEA57E2EB91911F702CD3B6008D556A190E915451EA37A}, shouldRetrySend=false), maySkipCheckpoint=false, fiber=D336AD22D3D36238A7DFAB7F2361DCB02DE98D31992976CD65091C6A8537FA6E, currentStep=Starting)
  Actions: 
    PersistCheckpoint(id=[02219a88-233c-4408-8fb0-e37b50b53e04], checkpoint=Checkpoint(checkpointState=CheckpointState(invocationContext=InvocationContext(origin=RPC(actor=Actor(id=Id(value=Only For Testing), serviceId=AuthServiceId(value=TEST), owningLegalIdentity=O=Mock Company 1, L=London, C=GB)), trace=Trace(invocationId=814ec657-afd9-4711-ba0b-0009fd895e7f, timestamp: 2023-01-31T07:40:29.715Z, entityType: Invocation, sessionId=814ec657-afd9-4711-ba0b-0009fd895e7f, timestamp: 2023-01-31T07:40:29.715Z, entityType: Session), actor=Actor(id=Id(value=Only For Testing), serviceId=AuthServiceId(value=TEST), owningLegalIdentity=O=Mock Company 1, L=London, C=GB), externalTrace=null, impersonatedActor=null, arguments=[], clientId=null), ourIdentity=O=Mock Company 1, L=London, C=GB, sessions={SessionId(toLong=1764390314782059977)=Initiated(peerParty=O=Mock Company 3, L=London, C=GB, peerFlowInfo=FlowInfo(flowVersion=1, appName=accounts-workflows-1.0), receivedMessages=[], otherSideErrored=false, peerSinkSessionId=SessionId(toLong=-8103511418606744257), deduplicationSeed=R-1764390314782059977--1578739467683743056)}, sessionsToBeClosed=[], subFlowStack=[Initiating(flowClass=class net.corda.samples.obligation.flows.IOUSettleFlow, classToInitiateWith=class net.corda.samples.obligation.flows.IOUSettleFlow, flowInfo=FlowInfo(flowVersion=1, appName=<unknown>), subFlowVersion=CorDappFlow(platformVersion=11, corDappName=workflows-1.0, corDappHash=F8E3613207E5ABAEC38930FAA426F7BA91464AA72DAF3EFB74917A0BA71A146E), isEnabledTimedFlow=false), Initiating(flowClass=class com.r3.corda.lib.accounts.workflows.flows.RequestKeyForAccount, classToInitiateWith=class com.r3.corda.lib.accounts.workflows.flows.RequestKeyForAccount, flowInfo=FlowInfo(flowVersion=1, appName=accounts-workflows-1.0), subFlowVersion=CorDappFlow(platformVersion=11, corDappName=accounts-workflows-1.0, corDappHash=80555705CE83A631D1BDD61E9C14A7C2215BB67FAB1411547C4D4B3D66F8402E), isEnabledTimedFlow=false), Inlined(flowClass=class com.r3.corda.lib.accounts.workflows.flows.RequestKeyForAccountFlow, subFlowVersion=CorDappFlow(platformVersion=11, corDappName=accounts-workflows-1.0, corDappHash=80555705CE83A631D1BDD61E9C14A7C2215BB67FAB1411547C4D4B3D66F8402E), isEnabledTimedFlow=false), Inlined(flowClass=class com.r3.corda.lib.ci.workflows.RequestKeyFlow, subFlowVersion=CoreFlow(platformVersion=11), isEnabledTimedFlow=false)], numberOfSuspends=2, numberOfCommits=3), flowState=Started(flowIORequest=SendAndReceive({FlowSessionImpl(destination=O=Mock Company 3, L=London, C=GB, sourceSessionId=SessionId(toLong=1764390314782059977))=FlowSessionImpl(destination=O=Mock Company 3, L=London, C=GB, sourceSessionId=SessionId(toLong=1764390314782059977))=C17E64A52EAD39F1F5BEA57E2EB91911F702CD3B6008D556A190E915451EA37A}, shouldRetrySend=false), frozenFiber=D336AD22D3D36238A7DFAB7F2361DCB02DE98D31992976CD65091C6A8537FA6E), errorState=Clean, result=null, status=RUNNABLE, progressStep=Starting, flowIoRequest=SendAndReceive, compatible=true), isCheckpointUpdate=true)
    PersistDeduplicationFacts(deduplicationHandlers=[net.corda.testing.node.internal.MockNodeMessagingService$InMemoryDeduplicationHandler@3ac2988c, net.corda.testing.node.internal.MockNodeMessagingService$InMemoryDeduplicationHandler@a788a])
    CommitTransaction
    AcknowledgeMessages(deduplicationHandlers=[net.corda.testing.node.internal.MockNodeMessagingService$InMemoryDeduplicationHandler@3ac2988c, net.corda.testing.node.internal.MockNodeMessagingService$InMemoryDeduplicationHandler@a788a])
    ScheduleEvent(event=DoRemainingWork)
  Continuation: ProcessEvents
  Diff between previous and next state:
pendingDeduplicationHandlers: 
    [net.corda.testing.node.internal.MockNodeMessagingService$InMemoryDeduplicationHandler@3ac2988c, net.corda.testing.node.internal.MockNodeMessagingService$InMemoryDeduplicationHandler@a788a]
    []
numberOfCommits: 
    2
    3
checkpoint.checkpointState.numberOfCommits: 
    2
    3
checkpoint.checkpointState.numberOfSuspends: 
    1
    2
checkpoint.flowState.frozenFiber.hash: 
    ECD7047ADE6CCBEBE32BCBD00639443595FD86585BDECCD28A0B10504072DCC0
    D336AD22D3D36238A7DFAB7F2361DCB02DE98D31992976CD65091C6A8537FA6E
checkpoint.flowState.flowIORequest: 
    Receive(sessions=[FlowSessionImpl(destination=O=Mock Company 3, L=London, C=GB, sourceSessionId=SessionId(toLong=1764390314782059977))])
    SendAndReceive({FlowSessionImpl(destination=O=Mock Company 3, L=London, C=GB, sourceSessionId=SessionId(toLong=1764390314782059977))=FlowSessionImpl(destination=O=Mock Company 3, L=London, C=GB, sourceSessionId=SessionId(toLong=1764390314782059977))=C17E64A52EAD39F1F5BEA57E2EB91911F702CD3B6008D556A190E915451EA37A}, shouldRetrySend=false)
checkpoint.timestamp: 
    2023-01-31T07:40:29.780Z
    2023-01-31T07:40:29.782Z
isFlowResumed: 
    true
    false


 --- Transition of flow [02219a88-233c-4408-8fb0-e37b50b53e04] ---
  Timestamp: 2023-01-31T07:40:29.784Z
  Event: DoRemainingWork
  Actions: 
    SendMultiple(sendInitial=[], sendExisting=[SendExisting(peerParty=O=Mock Company 3, L=London, C=GB, message=ExistingSessionMessage(recipientSessionId=SessionId(toLong=-8103511418606744257), payload=DataSessionMessage(payload=class net.corda.core.serialization.SerializedBytes)), deduplicationId=SenderDeduplicationId(deduplicationId=DeduplicationId(toString=N-R-1764390314782059977--1578739467683743056-2-0), senderUUID=b7a8af6e-2e00-46fb-860a-22ad29e03037))])
  Continuation: ProcessEvents
  Diff between previous and next state:
checkpoint.flowState.flowIORequest: 
    SendAndReceive({FlowSessionImpl(destination=O=Mock Company 3, L=London, C=GB, sourceSessionId=SessionId(toLong=1764390314782059977))=FlowSessionImpl(destination=O=Mock Company 3, L=London, C=GB, sourceSessionId=SessionId(toLong=1764390314782059977))=C17E64A52EAD39F1F5BEA57E2EB91911F702CD3B6008D556A190E915451EA37A}, shouldRetrySend=false)
    Receive(sessions=[FlowSessionImpl(destination=O=Mock Company 3, L=London, C=GB, sourceSessionId=SessionId(toLong=1764390314782059977))])
checkpoint.timestamp: 
    2023-01-31T07:40:29.782Z
    2023-01-31T07:40:29.784Z


 --- Transition of flow [02219a88-233c-4408-8fb0-e37b50b53e04] ---
  Timestamp: 2023-01-31T07:40:29.795Z
  Event: DeliverSessionMessage(sessionMessage=ExistingSessionMessage(recipientSessionId=SessionId(toLong=1764390314782059977), payload=DataSessionMessage(payload=class net.corda.core.serialization.SerializedBytes)), deduplicationHandler=net.corda.testing.node.internal.MockNodeMessagingService$InMemoryDeduplicationHandler@7b44e192, sender=O=Mock Company 3, L=London, C=GB)
  Actions: 
    ScheduleEvent(event=DoRemainingWork)
  Continuation: ProcessEvents
  Diff between previous and next state:
pendingDeduplicationHandlers: 
    []
    [net.corda.testing.node.internal.MockNodeMessagingService$InMemoryDeduplicationHandler@7b44e192]
checkpoint.checkpointState.sessions.SessionId(toLong=1764390314782059977).receivedMessages.isEmpty: 
    true
    false
checkpoint.timestamp: 
    2023-01-31T07:40:29.784Z
    2023-01-31T07:40:29.795Z


 --- Transition of flow [02219a88-233c-4408-8fb0-e37b50b53e04] ---
  Timestamp: 2023-01-31T07:40:29.795Z
  Event: DoRemainingWork
  Actions: 
    CreateTransaction
  Continuation: Resume(result=class java.util.LinkedHashMap)
  Diff between previous and next state:
checkpoint.checkpointState.sessions.SessionId(toLong=1764390314782059977).receivedMessages.isEmpty: 
    false
    true
isFlowResumed: 
    false
    true


 --- Transition of flow [02219a88-233c-4408-8fb0-e37b50b53e04] ---
  Timestamp: 2023-01-31T07:40:29.797Z
  Event: LeaveSubFlow
  Actions: 
    
  Continuation: ProcessEvents
  Diff between previous and next state:
checkpoint.checkpointState.subFlowStack: 
    [Initiating(flowClass=class net.corda.samples.obligation.flows.IOUSettleFlow, classToInitiateWith=class net.corda.samples.obligation.flows.IOUSettleFlow, flowInfo=FlowInfo(flowVersion=1, appName=<unknown>), subFlowVersion=CorDappFlow(platformVersion=11, corDappName=workflows-1.0, corDappHash=F8E3613207E5ABAEC38930FAA426F7BA91464AA72DAF3EFB74917A0BA71A146E), isEnabledTimedFlow=false), Initiating(flowClass=class com.r3.corda.lib.accounts.workflows.flows.RequestKeyForAccount, classToInitiateWith=class com.r3.corda.lib.accounts.workflows.flows.RequestKeyForAccount, flowInfo=FlowInfo(flowVersion=1, appName=accounts-workflows-1.0), subFlowVersion=CorDappFlow(platformVersion=11, corDappName=accounts-workflows-1.0, corDappHash=80555705CE83A631D1BDD61E9C14A7C2215BB67FAB1411547C4D4B3D66F8402E), isEnabledTimedFlow=false), Inlined(flowClass=class com.r3.corda.lib.accounts.workflows.flows.RequestKeyForAccountFlow, subFlowVersion=CorDappFlow(platformVersion=11, corDappName=accounts-workflows-1.0, corDappHash=80555705CE83A631D1BDD61E9C14A7C2215BB67FAB1411547C4D4B3D66F8402E), isEnabledTimedFlow=false), Inlined(flowClass=class com.r3.corda.lib.ci.workflows.RequestKeyFlow, subFlowVersion=CoreFlow(platformVersion=11), isEnabledTimedFlow=false)]
    [Initiating(flowClass=class net.corda.samples.obligation.flows.IOUSettleFlow, classToInitiateWith=class net.corda.samples.obligation.flows.IOUSettleFlow, flowInfo=FlowInfo(flowVersion=1, appName=<unknown>), subFlowVersion=CorDappFlow(platformVersion=11, corDappName=workflows-1.0, corDappHash=F8E3613207E5ABAEC38930FAA426F7BA91464AA72DAF3EFB74917A0BA71A146E), isEnabledTimedFlow=false), Initiating(flowClass=class com.r3.corda.lib.accounts.workflows.flows.RequestKeyForAccount, classToInitiateWith=class com.r3.corda.lib.accounts.workflows.flows.RequestKeyForAccount, flowInfo=FlowInfo(flowVersion=1, appName=accounts-workflows-1.0), subFlowVersion=CorDappFlow(platformVersion=11, corDappName=accounts-workflows-1.0, corDappHash=80555705CE83A631D1BDD61E9C14A7C2215BB67FAB1411547C4D4B3D66F8402E), isEnabledTimedFlow=false), Inlined(flowClass=class com.r3.corda.lib.accounts.workflows.flows.RequestKeyForAccountFlow, subFlowVersion=CorDappFlow(platformVersion=11, corDappName=accounts-workflows-1.0, corDappHash=80555705CE83A631D1BDD61E9C14A7C2215BB67FAB1411547C4D4B3D66F8402E), isEnabledTimedFlow=false)]
checkpoint.timestamp: 
    2023-01-31T07:40:29.795Z
    2023-01-31T07:40:29.797Z


 --- Transition of flow [02219a88-233c-4408-8fb0-e37b50b53e04] ---
  Timestamp: 2023-01-31T07:40:29.797Z
  Event: LeaveSubFlow
  Actions: 
    
  Continuation: ProcessEvents
  Diff between previous and next state:
checkpoint.checkpointState.subFlowStack: 
    [Initiating(flowClass=class net.corda.samples.obligation.flows.IOUSettleFlow, classToInitiateWith=class net.corda.samples.obligation.flows.IOUSettleFlow, flowInfo=FlowInfo(flowVersion=1, appName=<unknown>), subFlowVersion=CorDappFlow(platformVersion=11, corDappName=workflows-1.0, corDappHash=F8E3613207E5ABAEC38930FAA426F7BA91464AA72DAF3EFB74917A0BA71A146E), isEnabledTimedFlow=false), Initiating(flowClass=class com.r3.corda.lib.accounts.workflows.flows.RequestKeyForAccount, classToInitiateWith=class com.r3.corda.lib.accounts.workflows.flows.RequestKeyForAccount, flowInfo=FlowInfo(flowVersion=1, appName=accounts-workflows-1.0), subFlowVersion=CorDappFlow(platformVersion=11, corDappName=accounts-workflows-1.0, corDappHash=80555705CE83A631D1BDD61E9C14A7C2215BB67FAB1411547C4D4B3D66F8402E), isEnabledTimedFlow=false), Inlined(flowClass=class com.r3.corda.lib.accounts.workflows.flows.RequestKeyForAccountFlow, subFlowVersion=CorDappFlow(platformVersion=11, corDappName=accounts-workflows-1.0, corDappHash=80555705CE83A631D1BDD61E9C14A7C2215BB67FAB1411547C4D4B3D66F8402E), isEnabledTimedFlow=false)]
    [Initiating(flowClass=class net.corda.samples.obligation.flows.IOUSettleFlow, classToInitiateWith=class net.corda.samples.obligation.flows.IOUSettleFlow, flowInfo=FlowInfo(flowVersion=1, appName=<unknown>), subFlowVersion=CorDappFlow(platformVersion=11, corDappName=workflows-1.0, corDappHash=F8E3613207E5ABAEC38930FAA426F7BA91464AA72DAF3EFB74917A0BA71A146E), isEnabledTimedFlow=false), Initiating(flowClass=class com.r3.corda.lib.accounts.workflows.flows.RequestKeyForAccount, classToInitiateWith=class com.r3.corda.lib.accounts.workflows.flows.RequestKeyForAccount, flowInfo=FlowInfo(flowVersion=1, appName=accounts-workflows-1.0), subFlowVersion=CorDappFlow(platformVersion=11, corDappName=accounts-workflows-1.0, corDappHash=80555705CE83A631D1BDD61E9C14A7C2215BB67FAB1411547C4D4B3D66F8402E), isEnabledTimedFlow=false)]


 --- Transition of flow [02219a88-233c-4408-8fb0-e37b50b53e04] ---
  Timestamp: 2023-01-31T07:40:29.797Z
  Event: LeaveSubFlow
  Actions: 
    
  Continuation: ProcessEvents
  Diff between previous and next state:
checkpoint.checkpointState.subFlowStack: 
    [Initiating(flowClass=class net.corda.samples.obligation.flows.IOUSettleFlow, classToInitiateWith=class net.corda.samples.obligation.flows.IOUSettleFlow, flowInfo=FlowInfo(flowVersion=1, appName=<unknown>), subFlowVersion=CorDappFlow(platformVersion=11, corDappName=workflows-1.0, corDappHash=F8E3613207E5ABAEC38930FAA426F7BA91464AA72DAF3EFB74917A0BA71A146E), isEnabledTimedFlow=false), Initiating(flowClass=class com.r3.corda.lib.accounts.workflows.flows.RequestKeyForAccount, classToInitiateWith=class com.r3.corda.lib.accounts.workflows.flows.RequestKeyForAccount, flowInfo=FlowInfo(flowVersion=1, appName=accounts-workflows-1.0), subFlowVersion=CorDappFlow(platformVersion=11, corDappName=accounts-workflows-1.0, corDappHash=80555705CE83A631D1BDD61E9C14A7C2215BB67FAB1411547C4D4B3D66F8402E), isEnabledTimedFlow=false)]
    [Initiating(flowClass=class net.corda.samples.obligation.flows.IOUSettleFlow, classToInitiateWith=class net.corda.samples.obligation.flows.IOUSettleFlow, flowInfo=FlowInfo(flowVersion=1, appName=<unknown>), subFlowVersion=CorDappFlow(platformVersion=11, corDappName=workflows-1.0, corDappHash=F8E3613207E5ABAEC38930FAA426F7BA91464AA72DAF3EFB74917A0BA71A146E), isEnabledTimedFlow=false)]


 --- Transition of flow [02219a88-233c-4408-8fb0-e37b50b53e04] ---
  Timestamp: 2023-01-31T07:40:29.974Z
  Event: InitiateFlow(destination=O=Mock Company 3, L=London, C=GB, wellKnownParty=O=Mock Company 3, L=London, C=GB)
  Actions: 
    AddSessionBinding(flowId=[02219a88-233c-4408-8fb0-e37b50b53e04], sessionId=SessionId(toLong=-3358756275887911989))
  Continuation: Resume(result=class net.corda.node.services.statemachine.FlowSessionImpl)
  Diff between previous and next state:
checkpoint.checkpointState.sessions.SessionId(toLong=-3358756275887911989): 
    null
    Uninitiated(destination=O=Mock Company 3, L=London, C=GB, initiatingSubFlow=Initiating(flowClass=class net.corda.samples.obligation.flows.IOUSettleFlow, classToInitiateWith=class net.corda.samples.obligation.flows.IOUSettleFlow, flowInfo=FlowInfo(flowVersion=1, appName=<unknown>), subFlowVersion=CorDappFlow(platformVersion=11, corDappName=workflows-1.0, corDappHash=F8E3613207E5ABAEC38930FAA426F7BA91464AA72DAF3EFB74917A0BA71A146E), isEnabledTimedFlow=false), sourceSessionId=SessionId(toLong=-3358756275887911989), additionalEntropy=5594156702427061583)
checkpoint.timestamp: 
    2023-01-31T07:40:29.797Z
    2023-01-31T07:40:29.974Z


 --- Transition of flow [02219a88-233c-4408-8fb0-e37b50b53e04] ---
  Timestamp: 2023-01-31T07:40:29.974Z
  Event: EnterSubFlow(subFlowClass=class net.corda.core.flows.CollectSignatureFlow, subFlowVersion=CoreFlow(platformVersion=11), isEnabledTimedFlow=false)
  Actions: 
    
  Continuation: ProcessEvents
  Diff between previous and next state:
checkpoint.checkpointState.subFlowStack: 
    [Initiating(flowClass=class net.corda.samples.obligation.flows.IOUSettleFlow, classToInitiateWith=class net.corda.samples.obligation.flows.IOUSettleFlow, flowInfo=FlowInfo(flowVersion=1, appName=<unknown>), subFlowVersion=CorDappFlow(platformVersion=11, corDappName=workflows-1.0, corDappHash=F8E3613207E5ABAEC38930FAA426F7BA91464AA72DAF3EFB74917A0BA71A146E), isEnabledTimedFlow=false)]
    [Initiating(flowClass=class net.corda.samples.obligation.flows.IOUSettleFlow, classToInitiateWith=class net.corda.samples.obligation.flows.IOUSettleFlow, flowInfo=FlowInfo(flowVersion=1, appName=<unknown>), subFlowVersion=CorDappFlow(platformVersion=11, corDappName=workflows-1.0, corDappHash=F8E3613207E5ABAEC38930FAA426F7BA91464AA72DAF3EFB74917A0BA71A146E), isEnabledTimedFlow=false), Inlined(flowClass=class net.corda.core.flows.CollectSignatureFlow, subFlowVersion=CoreFlow(platformVersion=11), isEnabledTimedFlow=false)]


 --- Transition of flow [02219a88-233c-4408-8fb0-e37b50b53e04] ---
  Timestamp: 2023-01-31T07:40:29.974Z
  Event: EnterSubFlow(subFlowClass=class net.corda.core.flows.SendTransactionFlow, subFlowVersion=CoreFlow(platformVersion=11), isEnabledTimedFlow=false)
  Actions: 
    
  Continuation: ProcessEvents
  Diff between previous and next state:
checkpoint.checkpointState.subFlowStack: 
    [Initiating(flowClass=class net.corda.samples.obligation.flows.IOUSettleFlow, classToInitiateWith=class net.corda.samples.obligation.flows.IOUSettleFlow, flowInfo=FlowInfo(flowVersion=1, appName=<unknown>), subFlowVersion=CorDappFlow(platformVersion=11, corDappName=workflows-1.0, corDappHash=F8E3613207E5ABAEC38930FAA426F7BA91464AA72DAF3EFB74917A0BA71A146E), isEnabledTimedFlow=false), Inlined(flowClass=class net.corda.core.flows.CollectSignatureFlow, subFlowVersion=CoreFlow(platformVersion=11), isEnabledTimedFlow=false)]
    [Initiating(flowClass=class net.corda.samples.obligation.flows.IOUSettleFlow, classToInitiateWith=class net.corda.samples.obligation.flows.IOUSettleFlow, flowInfo=FlowInfo(flowVersion=1, appName=<unknown>), subFlowVersion=CorDappFlow(platformVersion=11, corDappName=workflows-1.0, corDappHash=F8E3613207E5ABAEC38930FAA426F7BA91464AA72DAF3EFB74917A0BA71A146E), isEnabledTimedFlow=false), Inlined(flowClass=class net.corda.core.flows.CollectSignatureFlow, subFlowVersion=CoreFlow(platformVersion=11), isEnabledTimedFlow=false), Inlined(flowClass=class net.corda.core.flows.SendTransactionFlow, subFlowVersion=CoreFlow(platformVersion=11), isEnabledTimedFlow=false)]


 --- Transition of flow [02219a88-233c-4408-8fb0-e37b50b53e04] ---
  Timestamp: 2023-01-31T07:40:29.980Z
  Event: Suspend(ioRequest=SendAndReceive({FlowSessionImpl(destination=O=Mock Company 3, L=London, C=GB, sourceSessionId=SessionId(toLong=-3358756275887911989))=FlowSessionImpl(destination=O=Mock Company 3, L=London, C=GB, sourceSessionId=SessionId(toLong=-3358756275887911989))=0199C1180DE8353B8E6C1ECA799D22B2B4818E48B8724563CE6B968CA81B20EF}, shouldRetrySend=false), maySkipCheckpoint=false, fiber=3108E21592D8A7C0C14A3FC7648F512BE18D2E67660BEFDBCE6D99B48BFDFA78, currentStep=Starting)
  Actions: 
    PersistCheckpoint(id=[02219a88-233c-4408-8fb0-e37b50b53e04], checkpoint=Checkpoint(checkpointState=CheckpointState(invocationContext=InvocationContext(origin=RPC(actor=Actor(id=Id(value=Only For Testing), serviceId=AuthServiceId(value=TEST), owningLegalIdentity=O=Mock Company 1, L=London, C=GB)), trace=Trace(invocationId=814ec657-afd9-4711-ba0b-0009fd895e7f, timestamp: 2023-01-31T07:40:29.715Z, entityType: Invocation, sessionId=814ec657-afd9-4711-ba0b-0009fd895e7f, timestamp: 2023-01-31T07:40:29.715Z, entityType: Session), actor=Actor(id=Id(value=Only For Testing), serviceId=AuthServiceId(value=TEST), owningLegalIdentity=O=Mock Company 1, L=London, C=GB), externalTrace=null, impersonatedActor=null, arguments=[], clientId=null), ourIdentity=O=Mock Company 1, L=London, C=GB, sessions={SessionId(toLong=1764390314782059977)=Initiated(peerParty=O=Mock Company 3, L=London, C=GB, peerFlowInfo=FlowInfo(flowVersion=1, appName=accounts-workflows-1.0), receivedMessages=[], otherSideErrored=false, peerSinkSessionId=SessionId(toLong=-8103511418606744257), deduplicationSeed=R-1764390314782059977--1578739467683743056), SessionId(toLong=-3358756275887911989)=Uninitiated(destination=O=Mock Company 3, L=London, C=GB, initiatingSubFlow=Initiating(flowClass=class net.corda.samples.obligation.flows.IOUSettleFlow, classToInitiateWith=class net.corda.samples.obligation.flows.IOUSettleFlow, flowInfo=FlowInfo(flowVersion=1, appName=<unknown>), subFlowVersion=CorDappFlow(platformVersion=11, corDappName=workflows-1.0, corDappHash=F8E3613207E5ABAEC38930FAA426F7BA91464AA72DAF3EFB74917A0BA71A146E), isEnabledTimedFlow=false), sourceSessionId=SessionId(toLong=-3358756275887911989), additionalEntropy=5594156702427061583)}, sessionsToBeClosed=[], subFlowStack=[Initiating(flowClass=class net.corda.samples.obligation.flows.IOUSettleFlow, classToInitiateWith=class net.corda.samples.obligation.flows.IOUSettleFlow, flowInfo=FlowInfo(flowVersion=1, appName=<unknown>), subFlowVersion=CorDappFlow(platformVersion=11, corDappName=workflows-1.0, corDappHash=F8E3613207E5ABAEC38930FAA426F7BA91464AA72DAF3EFB74917A0BA71A146E), isEnabledTimedFlow=false), Inlined(flowClass=class net.corda.core.flows.CollectSignatureFlow, subFlowVersion=CoreFlow(platformVersion=11), isEnabledTimedFlow=false), Inlined(flowClass=class net.corda.core.flows.SendTransactionFlow, subFlowVersion=CoreFlow(platformVersion=11), isEnabledTimedFlow=false)], numberOfSuspends=3, numberOfCommits=4), flowState=Started(flowIORequest=SendAndReceive({FlowSessionImpl(destination=O=Mock Company 3, L=London, C=GB, sourceSessionId=SessionId(toLong=-3358756275887911989))=FlowSessionImpl(destination=O=Mock Company 3, L=London, C=GB, sourceSessionId=SessionId(toLong=-3358756275887911989))=0199C1180DE8353B8E6C1ECA799D22B2B4818E48B8724563CE6B968CA81B20EF}, shouldRetrySend=false), frozenFiber=3108E21592D8A7C0C14A3FC7648F512BE18D2E67660BEFDBCE6D99B48BFDFA78), errorState=Clean, result=null, status=RUNNABLE, progressStep=Starting, flowIoRequest=SendAndReceive, compatible=true), isCheckpointUpdate=true)
    PersistDeduplicationFacts(deduplicationHandlers=[net.corda.testing.node.internal.MockNodeMessagingService$InMemoryDeduplicationHandler@7b44e192])
    CommitTransaction
    AcknowledgeMessages(deduplicationHandlers=[net.corda.testing.node.internal.MockNodeMessagingService$InMemoryDeduplicationHandler@7b44e192])
    ScheduleEvent(event=DoRemainingWork)
  Continuation: ProcessEvents
  Diff between previous and next state:
pendingDeduplicationHandlers: 
    [net.corda.testing.node.internal.MockNodeMessagingService$InMemoryDeduplicationHandler@7b44e192]
    []
numberOfCommits: 
    3
    4
checkpoint.checkpointState.numberOfCommits: 
    3
    4
checkpoint.checkpointState.numberOfSuspends: 
    2
    3
checkpoint.flowState.frozenFiber.hash: 
    D336AD22D3D36238A7DFAB7F2361DCB02DE98D31992976CD65091C6A8537FA6E
    3108E21592D8A7C0C14A3FC7648F512BE18D2E67660BEFDBCE6D99B48BFDFA78
checkpoint.flowState.flowIORequest: 
    Receive(sessions=[FlowSessionImpl(destination=O=Mock Company 3, L=London, C=GB, sourceSessionId=SessionId(toLong=1764390314782059977))])
    SendAndReceive({FlowSessionImpl(destination=O=Mock Company 3, L=London, C=GB, sourceSessionId=SessionId(toLong=-3358756275887911989))=FlowSessionImpl(destination=O=Mock Company 3, L=London, C=GB, sourceSessionId=SessionId(toLong=-3358756275887911989))=0199C1180DE8353B8E6C1ECA799D22B2B4818E48B8724563CE6B968CA81B20EF}, shouldRetrySend=false)
checkpoint.timestamp: 
    2023-01-31T07:40:29.974Z
    2023-01-31T07:40:29.978Z
isFlowResumed: 
    true
    false


 --- Transition of flow [02219a88-233c-4408-8fb0-e37b50b53e04] ---
  Timestamp: 2023-01-31T07:40:29.982Z
  Event: DoRemainingWork
  Actions: 
    SendMultiple(sendInitial=[SendInitial(destination=O=Mock Company 3, L=London, C=GB, initialise=InitialSessionMessage(initiatorSessionId=SessionId(toLong=-3358756275887911989), initiationEntropy=5594156702427061583, initiatorFlowClassName=net.corda.samples.obligation.flows.IOUSettleFlow, appName=<unknown>, firstPayload=class net.corda.core.serialization.SerializedBytes), deduplicationId=SenderDeduplicationId(deduplicationId=DeduplicationId(toString=N-R--3358756275887911989-5594156702427061583-3-0), senderUUID=b7a8af6e-2e00-46fb-860a-22ad29e03037))], sendExisting=[])
  Continuation: ProcessEvents
  Diff between previous and next state:
checkpoint.checkpointState.sessions.SessionId(toLong=-3358756275887911989): 
    Uninitiated(destination=O=Mock Company 3, L=London, C=GB, initiatingSubFlow=Initiating(flowClass=class net.corda.samples.obligation.flows.IOUSettleFlow, classToInitiateWith=class net.corda.samples.obligation.flows.IOUSettleFlow, flowInfo=FlowInfo(flowVersion=1, appName=<unknown>), subFlowVersion=CorDappFlow(platformVersion=11, corDappName=workflows-1.0, corDappHash=F8E3613207E5ABAEC38930FAA426F7BA91464AA72DAF3EFB74917A0BA71A146E), isEnabledTimedFlow=false), sourceSessionId=SessionId(toLong=-3358756275887911989), additionalEntropy=5594156702427061583)
    Initiating(bufferedMessages=[], rejectionError=null, deduplicationSeed=R--3358756275887911989-5594156702427061583)
checkpoint.flowState.flowIORequest: 
    SendAndReceive({FlowSessionImpl(destination=O=Mock Company 3, L=London, C=GB, sourceSessionId=SessionId(toLong=-3358756275887911989))=FlowSessionImpl(destination=O=Mock Company 3, L=London, C=GB, sourceSessionId=SessionId(toLong=-3358756275887911989))=0199C1180DE8353B8E6C1ECA799D22B2B4818E48B8724563CE6B968CA81B20EF}, shouldRetrySend=false)
    Receive(sessions=[FlowSessionImpl(destination=O=Mock Company 3, L=London, C=GB, sourceSessionId=SessionId(toLong=-3358756275887911989))])
checkpoint.timestamp: 
    2023-01-31T07:40:29.978Z
    2023-01-31T07:40:29.980Z


 --- Transition of flow [02219a88-233c-4408-8fb0-e37b50b53e04] ---
  Timestamp: 2023-01-31T07:40:30.012Z
  Event: DeliverSessionMessage(sessionMessage=ExistingSessionMessage(recipientSessionId=SessionId(toLong=1764390314782059977), payload=net.corda.node.services.statemachine.EndSessionMessage@54d08a5d), deduplicationHandler=net.corda.testing.node.internal.MockNodeMessagingService$InMemoryDeduplicationHandler@53e5e534, sender=O=Mock Company 3, L=London, C=GB)
  Actions: 
    ScheduleEvent(event=DoRemainingWork)
  Continuation: ProcessEvents
  Diff between previous and next state:
pendingDeduplicationHandlers: 
    []
    [net.corda.testing.node.internal.MockNodeMessagingService$InMemoryDeduplicationHandler@53e5e534]
checkpoint.checkpointState.sessions.SessionId(toLong=1764390314782059977).receivedMessages.isEmpty: 
    true
    false
checkpoint.checkpointState.sessionsToBeClosed: 
    []
    [SessionId(toLong=1764390314782059977)]
checkpoint.timestamp: 
    2023-01-31T07:40:29.980Z
    2023-01-31T07:40:30.012Z


 --- Transition of flow [02219a88-233c-4408-8fb0-e37b50b53e04] ---
  Timestamp: 2023-01-31T07:40:30.012Z
  Event: DoRemainingWork
  Actions: 
    RemoveSessionBindings(sessionIds=[SessionId(toLong=1764390314782059977)])
  Continuation: ProcessEvents
  Diff between previous and next state:
checkpoint.checkpointState.sessions.SessionId(toLong=1764390314782059977): 
    Initiated(peerParty=O=Mock Company 3, L=London, C=GB, peerFlowInfo=FlowInfo(flowVersion=1, appName=accounts-workflows-1.0), receivedMessages=[net.corda.node.services.statemachine.EndSessionMessage@54d08a5d], otherSideErrored=false, peerSinkSessionId=SessionId(toLong=-8103511418606744257), deduplicationSeed=R-1764390314782059977--1578739467683743056)
    null
checkpoint.checkpointState.sessionsToBeClosed: 
    [SessionId(toLong=1764390314782059977)]
    []


 --- Transition of flow [02219a88-233c-4408-8fb0-e37b50b53e04] ---
  Timestamp: 2023-01-31T07:40:30.017Z
  Event: DeliverSessionMessage(sessionMessage=ExistingSessionMessage(recipientSessionId=SessionId(toLong=-3358756275887911989), payload=ConfirmSessionMessage(initiatedSessionId=SessionId(toLong=2957585445716046757), initiatedFlowInfo=FlowInfo(flowVersion=1, appName=<unknown>))), deduplicationHandler=net.corda.testing.node.internal.MockNodeMessagingService$InMemoryDeduplicationHandler@6b7a856d, sender=O=Mock Company 3, L=London, C=GB)
  Actions: 
    ScheduleEvent(event=DoRemainingWork)
  Continuation: ProcessEvents
  Diff between previous and next state:
pendingDeduplicationHandlers: 
    [net.corda.testing.node.internal.MockNodeMessagingService$InMemoryDeduplicationHandler@53e5e534]
    [net.corda.testing.node.internal.MockNodeMessagingService$InMemoryDeduplicationHandler@53e5e534, net.corda.testing.node.internal.MockNodeMessagingService$InMemoryDeduplicationHandler@6b7a856d]
checkpoint.checkpointState.sessions.SessionId(toLong=-3358756275887911989): 
    Initiating(bufferedMessages=[], rejectionError=null, deduplicationSeed=R--3358756275887911989-5594156702427061583)
    Initiated(peerParty=O=Mock Company 3, L=London, C=GB, peerFlowInfo=FlowInfo(flowVersion=1, appName=<unknown>), receivedMessages=[], otherSideErrored=false, peerSinkSessionId=SessionId(toLong=2957585445716046757), deduplicationSeed=R--3358756275887911989-5594156702427061583)
checkpoint.timestamp: 
    2023-01-31T07:40:30.012Z
    2023-01-31T07:40:30.017Z


 --- Transition of flow [02219a88-233c-4408-8fb0-e37b50b53e04] ---
  Timestamp: 2023-01-31T07:40:30.018Z
  Event: DoRemainingWork
  Actions: 
    
  Continuation: ProcessEvents
  Diff between previous and next state:
null

 --- Transition of flow [02219a88-233c-4408-8fb0-e37b50b53e04] ---
  Timestamp: 2023-01-31T07:40:30.020Z
  Event: DeliverSessionMessage(sessionMessage=ExistingSessionMessage(recipientSessionId=SessionId(toLong=-3358756275887911989), payload=DataSessionMessage(payload=class net.corda.core.serialization.SerializedBytes)), deduplicationHandler=net.corda.testing.node.internal.MockNodeMessagingService$InMemoryDeduplicationHandler@77923689, sender=O=Mock Company 3, L=London, C=GB)
  Actions: 
    ScheduleEvent(event=DoRemainingWork)
  Continuation: ProcessEvents
  Diff between previous and next state:
pendingDeduplicationHandlers: 
    [net.corda.testing.node.internal.MockNodeMessagingService$InMemoryDeduplicationHandler@53e5e534, net.corda.testing.node.internal.MockNodeMessagingService$InMemoryDeduplicationHandler@6b7a856d]
    [net.corda.testing.node.internal.MockNodeMessagingService$InMemoryDeduplicationHandler@53e5e534, net.corda.testing.node.internal.MockNodeMessagingService$InMemoryDeduplicationHandler@6b7a856d, net.corda.testing.node.internal.MockNodeMessagingService$InMemoryDeduplicationHandler@77923689]
checkpoint.checkpointState.sessions.SessionId(toLong=-3358756275887911989).receivedMessages.isEmpty: 
    true
    false
checkpoint.timestamp: 
    2023-01-31T07:40:30.017Z
    2023-01-31T07:40:30.020Z


 --- Transition of flow [02219a88-233c-4408-8fb0-e37b50b53e04] ---
  Timestamp: 2023-01-31T07:40:30.020Z
  Event: DoRemainingWork
  Actions: 
    CreateTransaction
  Continuation: Resume(result=class java.util.LinkedHashMap)
  Diff between previous and next state:
checkpoint.checkpointState.sessions.SessionId(toLong=-3358756275887911989).receivedMessages.isEmpty: 
    false
    true
isFlowResumed: 
    false
    true


 --- Transition of flow [02219a88-233c-4408-8fb0-e37b50b53e04] ---
  Timestamp: 2023-01-31T07:40:30.028Z
  Event: Suspend(ioRequest=SendAndReceive({FlowSessionImpl(destination=O=Mock Company 3, L=London, C=GB, sourceSessionId=SessionId(toLong=-3358756275887911989))=FlowSessionImpl(destination=O=Mock Company 3, L=London, C=GB, sourceSessionId=SessionId(toLong=-3358756275887911989))=54C4E5C46B8A0802F147096D9052FC3D44DD8FF113F770CA6C18719B3874987E}, shouldRetrySend=false), maySkipCheckpoint=false, fiber=49A2A4975984CCABC4FBDF043CA07F60F55CB0D3FDA8D96B97C523F3D945A0D9, currentStep=Starting)
  Actions: 
    PersistCheckpoint(id=[02219a88-233c-4408-8fb0-e37b50b53e04], checkpoint=Checkpoint(checkpointState=CheckpointState(invocationContext=InvocationContext(origin=RPC(actor=Actor(id=Id(value=Only For Testing), serviceId=AuthServiceId(value=TEST), owningLegalIdentity=O=Mock Company 1, L=London, C=GB)), trace=Trace(invocationId=814ec657-afd9-4711-ba0b-0009fd895e7f, timestamp: 2023-01-31T07:40:29.715Z, entityType: Invocation, sessionId=814ec657-afd9-4711-ba0b-0009fd895e7f, timestamp: 2023-01-31T07:40:29.715Z, entityType: Session), actor=Actor(id=Id(value=Only For Testing), serviceId=AuthServiceId(value=TEST), owningLegalIdentity=O=Mock Company 1, L=London, C=GB), externalTrace=null, impersonatedActor=null, arguments=[], clientId=null), ourIdentity=O=Mock Company 1, L=London, C=GB, sessions={SessionId(toLong=-3358756275887911989)=Initiated(peerParty=O=Mock Company 3, L=London, C=GB, peerFlowInfo=FlowInfo(flowVersion=1, appName=<unknown>), receivedMessages=[], otherSideErrored=false, peerSinkSessionId=SessionId(toLong=2957585445716046757), deduplicationSeed=R--3358756275887911989-5594156702427061583)}, sessionsToBeClosed=[], subFlowStack=[Initiating(flowClass=class net.corda.samples.obligation.flows.IOUSettleFlow, classToInitiateWith=class net.corda.samples.obligation.flows.IOUSettleFlow, flowInfo=FlowInfo(flowVersion=1, appName=<unknown>), subFlowVersion=CorDappFlow(platformVersion=11, corDappName=workflows-1.0, corDappHash=F8E3613207E5ABAEC38930FAA426F7BA91464AA72DAF3EFB74917A0BA71A146E), isEnabledTimedFlow=false), Inlined(flowClass=class net.corda.core.flows.CollectSignatureFlow, subFlowVersion=CoreFlow(platformVersion=11), isEnabledTimedFlow=false), Inlined(flowClass=class net.corda.core.flows.SendTransactionFlow, subFlowVersion=CoreFlow(platformVersion=11), isEnabledTimedFlow=false)], numberOfSuspends=4, numberOfCommits=5), flowState=Started(flowIORequest=SendAndReceive({FlowSessionImpl(destination=O=Mock Company 3, L=London, C=GB, sourceSessionId=SessionId(toLong=-3358756275887911989))=FlowSessionImpl(destination=O=Mock Company 3, L=London, C=GB, sourceSessionId=SessionId(toLong=-3358756275887911989))=54C4E5C46B8A0802F147096D9052FC3D44DD8FF113F770CA6C18719B3874987E}, shouldRetrySend=false), frozenFiber=49A2A4975984CCABC4FBDF043CA07F60F55CB0D3FDA8D96B97C523F3D945A0D9), errorState=Clean, result=null, status=RUNNABLE, progressStep=Starting, flowIoRequest=SendAndReceive, compatible=true), isCheckpointUpdate=true)
    PersistDeduplicationFacts(deduplicationHandlers=[net.corda.testing.node.internal.MockNodeMessagingService$InMemoryDeduplicationHandler@53e5e534, net.corda.testing.node.internal.MockNodeMessagingService$InMemoryDeduplicationHandler@6b7a856d, net.corda.testing.node.internal.MockNodeMessagingService$InMemoryDeduplicationHandler@77923689])
    CommitTransaction
    AcknowledgeMessages(deduplicationHandlers=[net.corda.testing.node.internal.MockNodeMessagingService$InMemoryDeduplicationHandler@53e5e534, net.corda.testing.node.internal.MockNodeMessagingService$InMemoryDeduplicationHandler@6b7a856d, net.corda.testing.node.internal.MockNodeMessagingService$InMemoryDeduplicationHandler@77923689])
    ScheduleEvent(event=DoRemainingWork)
  Continuation: ProcessEvents
  Diff between previous and next state:
pendingDeduplicationHandlers: 
    [net.corda.testing.node.internal.MockNodeMessagingService$InMemoryDeduplicationHandler@53e5e534, net.corda.testing.node.internal.MockNodeMessagingService$InMemoryDeduplicationHandler@6b7a856d, net.corda.testing.node.internal.MockNodeMessagingService$InMemoryDeduplicationHandler@77923689]
    []
numberOfCommits: 
    4
    5
checkpoint.checkpointState.numberOfCommits: 
    4
    5
checkpoint.checkpointState.numberOfSuspends: 
    3
    4
checkpoint.flowState.frozenFiber.hash: 
    3108E21592D8A7C0C14A3FC7648F512BE18D2E67660BEFDBCE6D99B48BFDFA78
    49A2A4975984CCABC4FBDF043CA07F60F55CB0D3FDA8D96B97C523F3D945A0D9
checkpoint.flowState.flowIORequest: 
    Receive(sessions=[FlowSessionImpl(destination=O=Mock Company 3, L=London, C=GB, sourceSessionId=SessionId(toLong=-3358756275887911989))])
    SendAndReceive({FlowSessionImpl(destination=O=Mock Company 3, L=London, C=GB, sourceSessionId=SessionId(toLong=-3358756275887911989))=FlowSessionImpl(destination=O=Mock Company 3, L=London, C=GB, sourceSessionId=SessionId(toLong=-3358756275887911989))=54C4E5C46B8A0802F147096D9052FC3D44DD8FF113F770CA6C18719B3874987E}, shouldRetrySend=false)
checkpoint.timestamp: 
    2023-01-31T07:40:30.020Z
    2023-01-31T07:40:30.025Z
isFlowResumed: 
    true
    false


 --- Transition of flow [02219a88-233c-4408-8fb0-e37b50b53e04] ---
  Timestamp: 2023-01-31T07:40:30.029Z
  Event: DoRemainingWork
  Actions: 
    SendMultiple(sendInitial=[], sendExisting=[SendExisting(peerParty=O=Mock Company 3, L=London, C=GB, message=ExistingSessionMessage(recipientSessionId=SessionId(toLong=2957585445716046757), payload=DataSessionMessage(payload=class net.corda.core.serialization.SerializedBytes)), deduplicationId=SenderDeduplicationId(deduplicationId=DeduplicationId(toString=N-R--3358756275887911989-5594156702427061583-4-0), senderUUID=b7a8af6e-2e00-46fb-860a-22ad29e03037))])
  Continuation: ProcessEvents
  Diff between previous and next state:
checkpoint.flowState.flowIORequest: 
    SendAndReceive({FlowSessionImpl(destination=O=Mock Company 3, L=London, C=GB, sourceSessionId=SessionId(toLong=-3358756275887911989))=FlowSessionImpl(destination=O=Mock Company 3, L=London, C=GB, sourceSessionId=SessionId(toLong=-3358756275887911989))=54C4E5C46B8A0802F147096D9052FC3D44DD8FF113F770CA6C18719B3874987E}, shouldRetrySend=false)
    Receive(sessions=[FlowSessionImpl(destination=O=Mock Company 3, L=London, C=GB, sourceSessionId=SessionId(toLong=-3358756275887911989))])
checkpoint.timestamp: 
    2023-01-31T07:40:30.025Z
    2023-01-31T07:40:30.028Z


 --- Transition of flow [02219a88-233c-4408-8fb0-e37b50b53e04] ---
  Timestamp: 2023-01-31T07:40:30.385Z
  Event: DeliverSessionMessage(sessionMessage=ExistingSessionMessage(recipientSessionId=SessionId(toLong=-3358756275887911989), payload=DataSessionMessage(payload=class net.corda.core.serialization.SerializedBytes)), deduplicationHandler=net.corda.testing.node.internal.MockNodeMessagingService$InMemoryDeduplicationHandler@41054bde, sender=O=Mock Company 3, L=London, C=GB)
  Actions: 
    ScheduleEvent(event=DoRemainingWork)
  Continuation: ProcessEvents
  Diff between previous and next state:
pendingDeduplicationHandlers: 
    []
    [net.corda.testing.node.internal.MockNodeMessagingService$InMemoryDeduplicationHandler@41054bde]
checkpoint.checkpointState.sessions.SessionId(toLong=-3358756275887911989).receivedMessages.isEmpty: 
    true
    false
checkpoint.timestamp: 
    2023-01-31T07:40:30.028Z
    2023-01-31T07:40:30.385Z


 --- Transition of flow [02219a88-233c-4408-8fb0-e37b50b53e04] ---
  Timestamp: 2023-01-31T07:40:30.385Z
  Event: DoRemainingWork
  Actions: 
    CreateTransaction
  Continuation: Resume(result=class java.util.LinkedHashMap)
  Diff between previous and next state:
checkpoint.checkpointState.sessions.SessionId(toLong=-3358756275887911989).receivedMessages.isEmpty: 
    false
    true
isFlowResumed: 
    false
    true


 --- Transition of flow [02219a88-233c-4408-8fb0-e37b50b53e04] ---
  Timestamp: 2023-01-31T07:40:30.385Z
  Event: LeaveSubFlow
  Actions: 
    
  Continuation: ProcessEvents
  Diff between previous and next state:
checkpoint.checkpointState.subFlowStack: 
    [Initiating(flowClass=class net.corda.samples.obligation.flows.IOUSettleFlow, classToInitiateWith=class net.corda.samples.obligation.flows.IOUSettleFlow, flowInfo=FlowInfo(flowVersion=1, appName=<unknown>), subFlowVersion=CorDappFlow(platformVersion=11, corDappName=workflows-1.0, corDappHash=F8E3613207E5ABAEC38930FAA426F7BA91464AA72DAF3EFB74917A0BA71A146E), isEnabledTimedFlow=false), Inlined(flowClass=class net.corda.core.flows.CollectSignatureFlow, subFlowVersion=CoreFlow(platformVersion=11), isEnabledTimedFlow=false), Inlined(flowClass=class net.corda.core.flows.SendTransactionFlow, subFlowVersion=CoreFlow(platformVersion=11), isEnabledTimedFlow=false)]
    [Initiating(flowClass=class net.corda.samples.obligation.flows.IOUSettleFlow, classToInitiateWith=class net.corda.samples.obligation.flows.IOUSettleFlow, flowInfo=FlowInfo(flowVersion=1, appName=<unknown>), subFlowVersion=CorDappFlow(platformVersion=11, corDappName=workflows-1.0, corDappHash=F8E3613207E5ABAEC38930FAA426F7BA91464AA72DAF3EFB74917A0BA71A146E), isEnabledTimedFlow=false), Inlined(flowClass=class net.corda.core.flows.CollectSignatureFlow, subFlowVersion=CoreFlow(platformVersion=11), isEnabledTimedFlow=false)]


 --- Transition of flow [02219a88-233c-4408-8fb0-e37b50b53e04] ---
  Timestamp: 2023-01-31T07:40:30.389Z
  Event: Suspend(ioRequest=Send(sessionToMessage={FlowSessionImpl(destination=O=Mock Company 3, L=London, C=GB, sourceSessionId=SessionId(toLong=-3358756275887911989))=F8D4741D3E5672AA07A60AD3651B3BAA957ADA2E752421CEE6DCF81E94EEF592}), maySkipCheckpoint=false, fiber=C6A420453C0F4FBC54DD12F177CE4FD9D625E646B814F1A919639883C01B5E05, currentStep=Starting)
  Actions: 
    PersistCheckpoint(id=[02219a88-233c-4408-8fb0-e37b50b53e04], checkpoint=Checkpoint(checkpointState=CheckpointState(invocationContext=InvocationContext(origin=RPC(actor=Actor(id=Id(value=Only For Testing), serviceId=AuthServiceId(value=TEST), owningLegalIdentity=O=Mock Company 1, L=London, C=GB)), trace=Trace(invocationId=814ec657-afd9-4711-ba0b-0009fd895e7f, timestamp: 2023-01-31T07:40:29.715Z, entityType: Invocation, sessionId=814ec657-afd9-4711-ba0b-0009fd895e7f, timestamp: 2023-01-31T07:40:29.715Z, entityType: Session), actor=Actor(id=Id(value=Only For Testing), serviceId=AuthServiceId(value=TEST), owningLegalIdentity=O=Mock Company 1, L=London, C=GB), externalTrace=null, impersonatedActor=null, arguments=[], clientId=null), ourIdentity=O=Mock Company 1, L=London, C=GB, sessions={SessionId(toLong=-3358756275887911989)=Initiated(peerParty=O=Mock Company 3, L=London, C=GB, peerFlowInfo=FlowInfo(flowVersion=1, appName=<unknown>), receivedMessages=[], otherSideErrored=false, peerSinkSessionId=SessionId(toLong=2957585445716046757), deduplicationSeed=R--3358756275887911989-5594156702427061583)}, sessionsToBeClosed=[], subFlowStack=[Initiating(flowClass=class net.corda.samples.obligation.flows.IOUSettleFlow, classToInitiateWith=class net.corda.samples.obligation.flows.IOUSettleFlow, flowInfo=FlowInfo(flowVersion=1, appName=<unknown>), subFlowVersion=CorDappFlow(platformVersion=11, corDappName=workflows-1.0, corDappHash=F8E3613207E5ABAEC38930FAA426F7BA91464AA72DAF3EFB74917A0BA71A146E), isEnabledTimedFlow=false), Inlined(flowClass=class net.corda.core.flows.CollectSignatureFlow, subFlowVersion=CoreFlow(platformVersion=11), isEnabledTimedFlow=false)], numberOfSuspends=5, numberOfCommits=6), flowState=Started(flowIORequest=Send(sessionToMessage={FlowSessionImpl(destination=O=Mock Company 3, L=London, C=GB, sourceSessionId=SessionId(toLong=-3358756275887911989))=F8D4741D3E5672AA07A60AD3651B3BAA957ADA2E752421CEE6DCF81E94EEF592}), frozenFiber=C6A420453C0F4FBC54DD12F177CE4FD9D625E646B814F1A919639883C01B5E05), errorState=Clean, result=null, status=RUNNABLE, progressStep=Starting, flowIoRequest=Send, compatible=true), isCheckpointUpdate=true)
    PersistDeduplicationFacts(deduplicationHandlers=[net.corda.testing.node.internal.MockNodeMessagingService$InMemoryDeduplicationHandler@41054bde])
    CommitTransaction
    AcknowledgeMessages(deduplicationHandlers=[net.corda.testing.node.internal.MockNodeMessagingService$InMemoryDeduplicationHandler@41054bde])
    ScheduleEvent(event=DoRemainingWork)
  Continuation: ProcessEvents
  Diff between previous and next state:
pendingDeduplicationHandlers: 
    [net.corda.testing.node.internal.MockNodeMessagingService$InMemoryDeduplicationHandler@41054bde]
    []
numberOfCommits: 
    5
    6
checkpoint.flowIoRequest: 
    SendAndReceive
    Send
checkpoint.checkpointState.numberOfCommits: 
    5
    6
checkpoint.checkpointState.numberOfSuspends: 
    4
    5
checkpoint.flowState.frozenFiber.hash: 
    49A2A4975984CCABC4FBDF043CA07F60F55CB0D3FDA8D96B97C523F3D945A0D9
    C6A420453C0F4FBC54DD12F177CE4FD9D625E646B814F1A919639883C01B5E05
checkpoint.flowState.flowIORequest: 
    Receive(sessions=[FlowSessionImpl(destination=O=Mock Company 3, L=London, C=GB, sourceSessionId=SessionId(toLong=-3358756275887911989))])
    Send(sessionToMessage={FlowSessionImpl(destination=O=Mock Company 3, L=London, C=GB, sourceSessionId=SessionId(toLong=-3358756275887911989))=F8D4741D3E5672AA07A60AD3651B3BAA957ADA2E752421CEE6DCF81E94EEF592})
checkpoint.timestamp: 
    2023-01-31T07:40:30.385Z
    2023-01-31T07:40:30.387Z
isFlowResumed: 
    true
    false


 --- Transition of flow [02219a88-233c-4408-8fb0-e37b50b53e04] ---
  Timestamp: 2023-01-31T07:40:30.389Z
  Event: DoRemainingWork
  Actions: 
    SendMultiple(sendInitial=[], sendExisting=[SendExisting(peerParty=O=Mock Company 3, L=London, C=GB, message=ExistingSessionMessage(recipientSessionId=SessionId(toLong=2957585445716046757), payload=DataSessionMessage(payload=class net.corda.core.serialization.SerializedBytes)), deduplicationId=SenderDeduplicationId(deduplicationId=DeduplicationId(toString=N-R--3358756275887911989-5594156702427061583-5-0), senderUUID=b7a8af6e-2e00-46fb-860a-22ad29e03037))])
    CreateTransaction
  Continuation: Resume(result=class kotlin.Unit)
  Diff between previous and next state:
isFlowResumed: 
    false
    true


 --- Transition of flow [02219a88-233c-4408-8fb0-e37b50b53e04] ---
  Timestamp: 2023-01-31T07:40:30.393Z
  Event: Suspend(ioRequest=Receive(sessions=[FlowSessionImpl(destination=O=Mock Company 3, L=London, C=GB, sourceSessionId=SessionId(toLong=-3358756275887911989))]), maySkipCheckpoint=false, fiber=36B3747FAEAA5570C90229D45B47CD814A145185F8C8F6E45922B34B9F609168, currentStep=Starting)
  Actions: 
    PersistCheckpoint(id=[02219a88-233c-4408-8fb0-e37b50b53e04], checkpoint=Checkpoint(checkpointState=CheckpointState(invocationContext=InvocationContext(origin=RPC(actor=Actor(id=Id(value=Only For Testing), serviceId=AuthServiceId(value=TEST), owningLegalIdentity=O=Mock Company 1, L=London, C=GB)), trace=Trace(invocationId=814ec657-afd9-4711-ba0b-0009fd895e7f, timestamp: 2023-01-31T07:40:29.715Z, entityType: Invocation, sessionId=814ec657-afd9-4711-ba0b-0009fd895e7f, timestamp: 2023-01-31T07:40:29.715Z, entityType: Session), actor=Actor(id=Id(value=Only For Testing), serviceId=AuthServiceId(value=TEST), owningLegalIdentity=O=Mock Company 1, L=London, C=GB), externalTrace=null, impersonatedActor=null, arguments=[], clientId=null), ourIdentity=O=Mock Company 1, L=London, C=GB, sessions={SessionId(toLong=-3358756275887911989)=Initiated(peerParty=O=Mock Company 3, L=London, C=GB, peerFlowInfo=FlowInfo(flowVersion=1, appName=<unknown>), receivedMessages=[], otherSideErrored=false, peerSinkSessionId=SessionId(toLong=2957585445716046757), deduplicationSeed=R--3358756275887911989-5594156702427061583)}, sessionsToBeClosed=[], subFlowStack=[Initiating(flowClass=class net.corda.samples.obligation.flows.IOUSettleFlow, classToInitiateWith=class net.corda.samples.obligation.flows.IOUSettleFlow, flowInfo=FlowInfo(flowVersion=1, appName=<unknown>), subFlowVersion=CorDappFlow(platformVersion=11, corDappName=workflows-1.0, corDappHash=F8E3613207E5ABAEC38930FAA426F7BA91464AA72DAF3EFB74917A0BA71A146E), isEnabledTimedFlow=false), Inlined(flowClass=class net.corda.core.flows.CollectSignatureFlow, subFlowVersion=CoreFlow(platformVersion=11), isEnabledTimedFlow=false)], numberOfSuspends=6, numberOfCommits=7), flowState=Started(flowIORequest=Receive(sessions=[FlowSessionImpl(destination=O=Mock Company 3, L=London, C=GB, sourceSessionId=SessionId(toLong=-3358756275887911989))]), frozenFiber=36B3747FAEAA5570C90229D45B47CD814A145185F8C8F6E45922B34B9F609168), errorState=Clean, result=null, status=RUNNABLE, progressStep=Starting, flowIoRequest=Receive, compatible=true), isCheckpointUpdate=true)
    PersistDeduplicationFacts(deduplicationHandlers=[])
    CommitTransaction
    AcknowledgeMessages(deduplicationHandlers=[])
    ScheduleEvent(event=DoRemainingWork)
  Continuation: ProcessEvents
  Diff between previous and next state:
numberOfCommits: 
    6
    7
checkpoint.flowIoRequest: 
    Send
    Receive
checkpoint.checkpointState.numberOfCommits: 
    6
    7
checkpoint.checkpointState.numberOfSuspends: 
    5
    6
checkpoint.flowState.frozenFiber.hash: 
    C6A420453C0F4FBC54DD12F177CE4FD9D625E646B814F1A919639883C01B5E05
    36B3747FAEAA5570C90229D45B47CD814A145185F8C8F6E45922B34B9F609168
checkpoint.flowState.flowIORequest: 
    Send(sessionToMessage={FlowSessionImpl(destination=O=Mock Company 3, L=London, C=GB, sourceSessionId=SessionId(toLong=-3358756275887911989))=F8D4741D3E5672AA07A60AD3651B3BAA957ADA2E752421CEE6DCF81E94EEF592})
    Receive(sessions=[FlowSessionImpl(destination=O=Mock Company 3, L=London, C=GB, sourceSessionId=SessionId(toLong=-3358756275887911989))])
checkpoint.timestamp: 
    2023-01-31T07:40:30.389Z
    2023-01-31T07:40:30.391Z
isFlowResumed: 
    true
    false


 --- Transition of flow [02219a88-233c-4408-8fb0-e37b50b53e04] ---
  Timestamp: 2023-01-31T07:40:30.393Z
  Event: DoRemainingWork
  Actions: 
    
  Continuation: ProcessEvents
  Diff between previous and next state:
null

 --- Transition of flow [02219a88-233c-4408-8fb0-e37b50b53e04] ---
  Timestamp: 2023-01-31T07:40:30.409Z
  Event: DeliverSessionMessage(sessionMessage=ExistingSessionMessage(recipientSessionId=SessionId(toLong=-3358756275887911989), payload=DataSessionMessage(payload=class net.corda.core.serialization.SerializedBytes)), deduplicationHandler=net.corda.testing.node.internal.MockNodeMessagingService$InMemoryDeduplicationHandler@2ad966ff, sender=O=Mock Company 3, L=London, C=GB)
  Actions: 
    ScheduleEvent(event=DoRemainingWork)
  Continuation: ProcessEvents
  Diff between previous and next state:
pendingDeduplicationHandlers: 
    []
    [net.corda.testing.node.internal.MockNodeMessagingService$InMemoryDeduplicationHandler@2ad966ff]
checkpoint.checkpointState.sessions.SessionId(toLong=-3358756275887911989).receivedMessages.isEmpty: 
    true
    false
checkpoint.timestamp: 
    2023-01-31T07:40:30.393Z
    2023-01-31T07:40:30.409Z


 --- Transition of flow [02219a88-233c-4408-8fb0-e37b50b53e04] ---
  Timestamp: 2023-01-31T07:40:30.409Z
  Event: DoRemainingWork
  Actions: 
    CreateTransaction
  Continuation: Resume(result=class java.util.LinkedHashMap)
  Diff between previous and next state:
checkpoint.checkpointState.sessions.SessionId(toLong=-3358756275887911989).receivedMessages.isEmpty: 
    false
    true
isFlowResumed: 
    false
    true


 --- Transition of flow [02219a88-233c-4408-8fb0-e37b50b53e04] ---
  Timestamp: 2023-01-31T07:40:30.410Z
  Event: LeaveSubFlow
  Actions: 
    
  Continuation: ProcessEvents
  Diff between previous and next state:
checkpoint.checkpointState.subFlowStack: 
    [Initiating(flowClass=class net.corda.samples.obligation.flows.IOUSettleFlow, classToInitiateWith=class net.corda.samples.obligation.flows.IOUSettleFlow, flowInfo=FlowInfo(flowVersion=1, appName=<unknown>), subFlowVersion=CorDappFlow(platformVersion=11, corDappName=workflows-1.0, corDappHash=F8E3613207E5ABAEC38930FAA426F7BA91464AA72DAF3EFB74917A0BA71A146E), isEnabledTimedFlow=false), Inlined(flowClass=class net.corda.core.flows.CollectSignatureFlow, subFlowVersion=CoreFlow(platformVersion=11), isEnabledTimedFlow=false)]
    [Initiating(flowClass=class net.corda.samples.obligation.flows.IOUSettleFlow, classToInitiateWith=class net.corda.samples.obligation.flows.IOUSettleFlow, flowInfo=FlowInfo(flowVersion=1, appName=<unknown>), subFlowVersion=CorDappFlow(platformVersion=11, corDappName=workflows-1.0, corDappHash=F8E3613207E5ABAEC38930FAA426F7BA91464AA72DAF3EFB74917A0BA71A146E), isEnabledTimedFlow=false)]
checkpoint.timestamp: 
    2023-01-31T07:40:30.409Z
    2023-01-31T07:40:30.410Z


 --- Transition of flow [02219a88-233c-4408-8fb0-e37b50b53e04] ---
  Timestamp: 2023-01-31T07:40:30.410Z
  Event: EnterSubFlow(subFlowClass=class net.corda.core.flows.FinalityFlow, subFlowVersion=CoreFlow(platformVersion=11), isEnabledTimedFlow=false)
  Actions: 
    
  Continuation: ProcessEvents
  Diff between previous and next state:
checkpoint.checkpointState.subFlowStack: 
    [Initiating(flowClass=class net.corda.samples.obligation.flows.IOUSettleFlow, classToInitiateWith=class net.corda.samples.obligation.flows.IOUSettleFlow, flowInfo=FlowInfo(flowVersion=1, appName=<unknown>), subFlowVersion=CorDappFlow(platformVersion=11, corDappName=workflows-1.0, corDappHash=F8E3613207E5ABAEC38930FAA426F7BA91464AA72DAF3EFB74917A0BA71A146E), isEnabledTimedFlow=false)]
    [Initiating(flowClass=class net.corda.samples.obligation.flows.IOUSettleFlow, classToInitiateWith=class net.corda.samples.obligation.flows.IOUSettleFlow, flowInfo=FlowInfo(flowVersion=1, appName=<unknown>), subFlowVersion=CorDappFlow(platformVersion=11, corDappName=workflows-1.0, corDappHash=F8E3613207E5ABAEC38930FAA426F7BA91464AA72DAF3EFB74917A0BA71A146E), isEnabledTimedFlow=false), Initiating(flowClass=class net.corda.core.flows.FinalityFlow, classToInitiateWith=class net.corda.core.flows.FinalityFlow, flowInfo=FlowInfo(flowVersion=1, appName=corda-core-4.9), subFlowVersion=CoreFlow(platformVersion=11), isEnabledTimedFlow=false)]


 --- Transition of flow [02219a88-233c-4408-8fb0-e37b50b53e04] ---
  Timestamp: 2023-01-31T07:40:30.423Z
  Event: LeaveSubFlow
  Actions: 
    
  Continuation: ProcessEvents
  Diff between previous and next state:
checkpoint.checkpointState.subFlowStack: 
    [Initiating(flowClass=class net.corda.samples.obligation.flows.IOUSettleFlow, classToInitiateWith=class net.corda.samples.obligation.flows.IOUSettleFlow, flowInfo=FlowInfo(flowVersion=1, appName=<unknown>), subFlowVersion=CorDappFlow(platformVersion=11, corDappName=workflows-1.0, corDappHash=F8E3613207E5ABAEC38930FAA426F7BA91464AA72DAF3EFB74917A0BA71A146E), isEnabledTimedFlow=false), Initiating(flowClass=class net.corda.core.flows.FinalityFlow, classToInitiateWith=class net.corda.core.flows.FinalityFlow, flowInfo=FlowInfo(flowVersion=1, appName=corda-core-4.9), subFlowVersion=CoreFlow(platformVersion=11), isEnabledTimedFlow=false)]
    [Initiating(flowClass=class net.corda.samples.obligation.flows.IOUSettleFlow, classToInitiateWith=class net.corda.samples.obligation.flows.IOUSettleFlow, flowInfo=FlowInfo(flowVersion=1, appName=<unknown>), subFlowVersion=CorDappFlow(platformVersion=11, corDappName=workflows-1.0, corDappHash=F8E3613207E5ABAEC38930FAA426F7BA91464AA72DAF3EFB74917A0BA71A146E), isEnabledTimedFlow=false)]
checkpoint.timestamp: 
    2023-01-31T07:40:30.410Z
    2023-01-31T07:40:30.423Z


 --- Transition of flow [02219a88-233c-4408-8fb0-e37b50b53e04] ---
  Timestamp: 2023-01-31T07:40:30.435Z
  Event: Error(exception=java.lang.IllegalArgumentException: Could not find Party for Anonymous(DLADeVatA6nCeWpq8u2w5yZ2rkLJawaSeD5RjCjN9WiQCD), rollback=true)
  Actions: 
    RollbackTransaction
    ScheduleEvent(event=DoRemainingWork)
  Continuation: ProcessEvents
  Diff between previous and next state:
checkpoint.errorState: 
    Clean
    Errored(errors=[FlowError(errorId=-4448502163904690932, exception=java.lang.IllegalArgumentException: Could not find Party for Anonymous(DLADeVatA6nCeWpq8u2w5yZ2rkLJawaSeD5RjCjN9WiQCD))], propagatedIndex=0, propagating=false)
checkpoint.timestamp: 
    2023-01-31T07:40:30.423Z
    2023-01-31T07:40:30.426Z
isFlowResumed: 
    true
    false


 --- Transition of flow [02219a88-233c-4408-8fb0-e37b50b53e04] ---
  Timestamp: 2023-01-31T07:40:30.439Z
  Event: DoRemainingWork
  Actions: 
    
  Continuation: ProcessEvents
  Diff between previous and next state:
null

 --- Transition of flow [02219a88-233c-4408-8fb0-e37b50b53e04] ---
  Timestamp: 2023-01-31T07:40:30.440Z
  Event: StartErrorPropagation
  Actions: 
    ScheduleEvent(event=DoRemainingWork)
  Continuation: ProcessEvents
  Diff between previous and next state:
checkpoint.errorState.propagating: 
    false
    true
checkpoint.timestamp: 
    2023-01-31T07:40:30.426Z
    2023-01-31T07:40:30.440Z


 --- Transition of flow [02219a88-233c-4408-8fb0-e37b50b53e04] ---
  Timestamp: 2023-01-31T07:40:30.583Z
  Event: DoRemainingWork
  Actions: 
    PropagateErrors(errorMessages=[ErrorSessionMessage(flowException=null, errorId=-4448502163904690932)], sessions=[Initiated(peerParty=O=Mock Company 3, L=London, C=GB, peerFlowInfo=FlowInfo(flowVersion=1, appName=<unknown>), receivedMessages=[], otherSideErrored=false, peerSinkSessionId=SessionId(toLong=2957585445716046757), deduplicationSeed=R--3358756275887911989-5594156702427061583)], senderUUID=b7a8af6e-2e00-46fb-860a-22ad29e03037)
    CreateTransaction
    RemoveCheckpoint(id=[02219a88-233c-4408-8fb0-e37b50b53e04], mayHavePersistentResults=false)
    PersistDeduplicationFacts(deduplicationHandlers=[net.corda.testing.node.internal.MockNodeMessagingService$InMemoryDeduplicationHandler@2ad966ff])
    ReleaseSoftLocks(uuid=02219a88-233c-4408-8fb0-e37b50b53e04)
    CommitTransaction
    AcknowledgeMessages(deduplicationHandlers=[net.corda.testing.node.internal.MockNodeMessagingService$InMemoryDeduplicationHandler@2ad966ff])
    RemoveSessionBindings(sessionIds=[SessionId(toLong=-3358756275887911989)])
    RemoveFlow(flowId=[02219a88-233c-4408-8fb0-e37b50b53e04], removalReason=ErrorFinish(flowErrors=[FlowError(errorId=-4448502163904690932, exception=java.lang.IllegalArgumentException: Could not find Party for Anonymous(DLADeVatA6nCeWpq8u2w5yZ2rkLJawaSeD5RjCjN9WiQCD))]), lastState=StateMachineState(checkpoint=Checkpoint(checkpointState=CheckpointState(invocationContext=InvocationContext(origin=RPC(actor=Actor(id=Id(value=Only For Testing), serviceId=AuthServiceId(value=TEST), owningLegalIdentity=O=Mock Company 1, L=London, C=GB)), trace=Trace(invocationId=814ec657-afd9-4711-ba0b-0009fd895e7f, timestamp: 2023-01-31T07:40:29.715Z, entityType: Invocation, sessionId=814ec657-afd9-4711-ba0b-0009fd895e7f, timestamp: 2023-01-31T07:40:29.715Z, entityType: Session), actor=Actor(id=Id(value=Only For Testing), serviceId=AuthServiceId(value=TEST), owningLegalIdentity=O=Mock Company 1, L=London, C=GB), externalTrace=null, impersonatedActor=null, arguments=[], clientId=null), ourIdentity=O=Mock Company 1, L=London, C=GB, sessions={SessionId(toLong=-3358756275887911989)=Initiated(peerParty=O=Mock Company 3, L=London, C=GB, peerFlowInfo=FlowInfo(flowVersion=1, appName=<unknown>), receivedMessages=[], otherSideErrored=false, peerSinkSessionId=SessionId(toLong=2957585445716046757), deduplicationSeed=R--3358756275887911989-5594156702427061583)}, sessionsToBeClosed=[], subFlowStack=[Initiating(flowClass=class net.corda.samples.obligation.flows.IOUSettleFlow, classToInitiateWith=class net.corda.samples.obligation.flows.IOUSettleFlow, flowInfo=FlowInfo(flowVersion=1, appName=<unknown>), subFlowVersion=CorDappFlow(platformVersion=11, corDappName=workflows-1.0, corDappHash=F8E3613207E5ABAEC38930FAA426F7BA91464AA72DAF3EFB74917A0BA71A146E), isEnabledTimedFlow=false)], numberOfSuspends=6, numberOfCommits=8), flowState=net.corda.node.services.statemachine.FlowState$Finished@2ff2612f, errorState=Errored(errors=[FlowError(errorId=-4448502163904690932, exception=java.lang.IllegalArgumentException: Could not find Party for Anonymous(DLADeVatA6nCeWpq8u2w5yZ2rkLJawaSeD5RjCjN9WiQCD))], propagatedIndex=0, propagating=true), result=null, status=FAILED, progressStep=Starting, flowIoRequest=Receive, compatible=true), flowLogic=net.corda.samples.obligation.flows.IOUSettleFlow@71458343, pendingDeduplicationHandlers=[], isFlowResumed=false, isWaitingForFuture=false, future=null, isAnyCheckpointPersisted=true, isStartIdempotent=false, isRemoved=true, isKilled=false, isDead=false, senderUUID=b7a8af6e-2e00-46fb-860a-22ad29e03037, reloadCheckpointAfterSuspendCount=null, numberOfCommits=8, lock=java.util.concurrent.Semaphore@3bc6e1dd[Permits = 0]))
  Continuation: Abort
  Diff between previous and next state:
pendingDeduplicationHandlers: 
    [net.corda.testing.node.internal.MockNodeMessagingService$InMemoryDeduplicationHandler@2ad966ff]
    []
isRemoved: 
    false
    true
numberOfCommits: 
    7
    8
checkpoint.status: 
    RUNNABLE
    FAILED
checkpoint.checkpointState.numberOfCommits: 
    7
    8
checkpoint.flowState: 
    Started(flowIORequest=Receive(sessions=[FlowSessionImpl(destination=O=Mock Company 3, L=London, C=GB, sourceSessionId=SessionId(toLong=-3358756275887911989))]), frozenFiber=36B3747FAEAA5570C90229D45B47CD814A145185F8C8F6E45922B34B9F609168)
    net.corda.node.services.statemachine.FlowState$Finished@2ff2612f
checkpoint.timestamp: 
    2023-01-31T07:40:30.440Z
    2023-01-31T07:40:30.474Z
 {actor_id=Only For Testing, actor_owning_identity=O=Mock Company 1, L=London, C=GB, actor_store_id=TEST, fiber-id=10000026, flow-id=02219a88-233c-4408-8fb0-e37b50b53e04, invocation_id=814ec657-afd9-4711-ba0b-0009fd895e7f, invocation_timestamp=2023-01-31T07:40:29.715Z, origin=Only For Testing, session_id=814ec657-afd9-4711-ba0b-0009fd895e7f, session_timestamp=2023-01-31T07:40:29.715Z, thread-id=854, tx_id=5776DD8CA997A5CC61E2E97CA1BD831E77AAEE5DE7213BE5AC35DB26A3B61748}
[WARN ] 2023-01-31T07:40:30,596Z [Mock network] interceptors.DumpHistoryOnErrorInterceptor. - Flow [02219a88-233c-4408-8fb0-e37b50b53e04] error {actor_id=Only For Testing, actor_owning_identity=O=Mock Company 1, L=London, C=GB, actor_store_id=TEST, fiber-id=10000026, flow-id=02219a88-233c-4408-8fb0-e37b50b53e04, invocation_id=814ec657-afd9-4711-ba0b-0009fd895e7f, invocation_timestamp=2023-01-31T07:40:29.715Z, origin=Only For Testing, session_id=814ec657-afd9-4711-ba0b-0009fd895e7f, session_timestamp=2023-01-31T07:40:29.715Z, thread-id=854, tx_id=5776DD8CA997A5CC61E2E97CA1BD831E77AAEE5DE7213BE5AC35DB26A3B61748}
java.lang.IllegalArgumentException: Could not find Party for Anonymous(DLADeVatA6nCeWpq8u2w5yZ2rkLJawaSeD5RjCjN9WiQCD)
	at net.corda.core.identity.IdentityUtils.groupAbstractPartyByWellKnownParty(IdentityUtils.kt:47) ~[corda-core-4.9.jar:?]
	at net.corda.core.identity.IdentityUtils.groupAbstractPartyByWellKnownParty(IdentityUtils.kt:63) ~[corda-core-4.9.jar:?]
	at net.corda.core.flows.FinalityFlow.extractExternalParticipants(FinalityFlow.kt:252) ~[corda-core-4.9.jar:?]
	at net.corda.core.flows.FinalityFlow.call(FinalityFlow.kt:162) ~[corda-core-4.9.jar:?]
	at net.corda.core.flows.FinalityFlow.call(FinalityFlow.kt:43) ~[corda-core-4.9.jar:?]
	at net.corda.node.services.statemachine.FlowStateMachineImpl.subFlow(FlowStateMachineImpl.kt:420) ~[corda-node-4.9.jar:?]
	at net.corda.core.flows.FlowLogic.subFlow(FlowLogic.kt:409) ~[corda-core-4.9.jar:?]
	at net.corda.samples.obligation.flows.IOUSettleFlow.call(IOUSettleFlow.kt:116) ~[main/:?]
	at net.corda.samples.obligation.flows.IOUSettleFlow.call(IOUSettleFlow.kt:30) ~[main/:?]
	at net.corda.node.services.statemachine.FlowStateMachineImpl.run(FlowStateMachineImpl.kt:349) ~[corda-node-4.9.jar:?]
	at net.corda.node.services.statemachine.FlowStateMachineImpl.run(FlowStateMachineImpl.kt:71) ~[corda-node-4.9.jar:?]
	at co.paralleluniverse.fibers.Fiber.run1(Fiber.java:1092) ~[quasar-core-0.7.10.jar:0.7.10]
	at co.paralleluniverse.fibers.Fiber.exec(Fiber.java:788) ~[quasar-core-0.7.10.jar:0.7.10]
	at co.paralleluniverse.fibers.RunnableFiberTask.doExec(RunnableFiberTask.java:100) ~[quasar-core-0.7.10.jar:0.7.10]
	at co.paralleluniverse.fibers.RunnableFiberTask.run(RunnableFiberTask.java:91) ~[quasar-core-0.7.10.jar:0.7.10]
	at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511) ~[?:1.8.0_202]
	at java.util.concurrent.FutureTask.run(FutureTask.java:266) ~[?:1.8.0_202]
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.access$201(ScheduledThreadPoolExecutor.java:180) ~[?:1.8.0_202]
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.run(ScheduledThreadPoolExecutor.java:293) ~[?:1.8.0_202]
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149) ~[?:1.8.0_202]
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624) ~[?:1.8.0_202]
	at net.corda.node.utilities.AffinityExecutor$ServiceAffinityExecutor$1$thread$1.run(AffinityExecutor.kt:63) ~[corda-node-4.9.jar:?]
[INFO ] 2023-01-31T07:40:30,600Z [Mock network] corda.flow. - Flow raised an error: Counter-flow errored. Sending it to flow hospital to be triaged. {fiber-id=10000028, flow-id=1e1a8f4c-486e-4901-ba69-3c906954bdac, invocation_id=e9eb1dcd-004a-4c84-aa69-318e9319d299, invocation_timestamp=2023-01-31T07:40:29.984Z, origin=O=Mock Company 1, L=London, C=GB, session_id=e9eb1dcd-004a-4c84-aa69-318e9319d299, session_timestamp=2023-01-31T07:40:29.984Z, thread-id=854, tx_id=5776DD8CA997A5CC61E2E97CA1BD831E77AAEE5DE7213BE5AC35DB26A3B61748}
[INFO ] 2023-01-31T07:40:30,601Z [Mock network] statemachine.StaffedFlowHospital. - Flow [1e1a8f4c-486e-4901-ba69-3c906954bdac] admitted to hospital in state StateMachineState(checkpoint=Checkpoint(checkpointState=CheckpointState(invocationContext=InvocationContext(origin=Peer(party=O=Mock Company 1, L=London, C=GB), trace=Trace(invocationId=e9eb1dcd-004a-4c84-aa69-318e9319d299, timestamp: 2023-01-31T07:40:29.984Z, entityType: Invocation, sessionId=e9eb1dcd-004a-4c84-aa69-318e9319d299, timestamp: 2023-01-31T07:40:29.984Z, entityType: Session), actor=null, externalTrace=null, impersonatedActor=null, arguments=[], clientId=null), ourIdentity=O=Mock Company 3, L=London, C=GB, sessions={SessionId(toLong=2957585445716046757)=Initiated(peerParty=O=Mock Company 1, L=London, C=GB, peerFlowInfo=FlowInfo(flowVersion=1, appName=<unknown>), receivedMessages=[], otherSideErrored=true, peerSinkSessionId=SessionId(toLong=-3358756275887911989), deduplicationSeed=D--3358756275887911989-5594156702427061583)}, sessionsToBeClosed=[], subFlowStack=[Inlined(flowClass=class net.corda.samples.obligation.flows.IOUSettleFlowResponder, subFlowVersion=CorDappFlow(platformVersion=11, corDappName=workflows-1.0, corDappHash=F8E3613207E5ABAEC38930FAA426F7BA91464AA72DAF3EFB74917A0BA71A146E), isEnabledTimedFlow=false)], numberOfSuspends=7, numberOfCommits=8), flowState=Started(flowIORequest=Receive(sessions=[FlowSessionImpl(destination=O=Mock Company 1, L=London, C=GB, sourceSessionId=SessionId(toLong=2957585445716046757))]), frozenFiber=711131C8D592A3F58A37876F243F6D3583E8B99746D7CB0B495F709E00D68FBB), errorState=Clean, result=null, status=RUNNABLE, progressStep=Starting, flowIoRequest=Receive, compatible=true), flowLogic=net.corda.samples.obligation.flows.IOUSettleFlowResponder@2f5cc37c, pendingDeduplicationHandlers=[net.corda.testing.node.internal.MockNodeMessagingService$InMemoryDeduplicationHandler@e7831f6], isFlowResumed=true, isWaitingForFuture=false, future=null, isAnyCheckpointPersisted=true, isStartIdempotent=false, isRemoved=false, isKilled=false, isDead=false, senderUUID=3ecbc590-084c-4279-8d61-b997a352b464, reloadCheckpointAfterSuspendCount=null, numberOfCommits=8, lock=java.util.concurrent.Semaphore@7b5b718f[Permits = 0]) {fiber-id=10000028, flow-id=1e1a8f4c-486e-4901-ba69-3c906954bdac, invocation_id=e9eb1dcd-004a-4c84-aa69-318e9319d299, invocation_timestamp=2023-01-31T07:40:29.984Z, origin=O=Mock Company 1, L=London, C=GB, session_id=e9eb1dcd-004a-4c84-aa69-318e9319d299, session_timestamp=2023-01-31T07:40:29.984Z, thread-id=854, tx_id=5776DD8CA997A5CC61E2E97CA1BD831E77AAEE5DE7213BE5AC35DB26A3B61748}
[INFO ] 2023-01-31T07:40:30,601Z [Mock network] statemachine.StaffedFlowHospital. - Error 1 of 1: {fiber-id=10000028, flow-id=1e1a8f4c-486e-4901-ba69-3c906954bdac, invocation_id=e9eb1dcd-004a-4c84-aa69-318e9319d299, invocation_timestamp=2023-01-31T07:40:29.984Z, origin=O=Mock Company 1, L=London, C=GB, session_id=e9eb1dcd-004a-4c84-aa69-318e9319d299, session_timestamp=2023-01-31T07:40:29.984Z, thread-id=854, tx_id=5776DD8CA997A5CC61E2E97CA1BD831E77AAEE5DE7213BE5AC35DB26A3B61748}
net.corda.core.flows.UnexpectedFlowEndException: Counter-flow errored
	at Received unexpected counter-flow exception from peer O=Mock Company 1, L=London, C=GB.() ~[?:?]
	at net.corda.node.services.statemachine.FlowStateMachineImpl.fillInLocalStackTrace(FlowStateMachineImpl.kt:244) ~[corda-node-4.9.jar:?]
	at net.corda.node.services.statemachine.FlowStateMachineImpl.processEventsUntilFlowIsResumed(FlowStateMachineImpl.kt:225) ~[corda-node-4.9.jar:?]
	at net.corda.node.services.statemachine.FlowStateMachineImpl.suspend(FlowStateMachineImpl.kt:577) ~[corda-node-4.9.jar:?]
	at net.corda.node.services.statemachine.FlowSessionImpl.receive(FlowSessionImpl.kt:67) ~[corda-node-4.9.jar:?]
	at net.corda.node.services.statemachine.FlowSessionImpl.receive(FlowSessionImpl.kt:71) ~[corda-node-4.9.jar:?]
	at net.corda.core.flows.ReceiveTransactionFlow.call(ReceiveTransactionFlow.kt:103) ~[corda-core-4.9.jar:?]
	at net.corda.core.flows.ReceiveTransactionFlow.call(ReceiveTransactionFlow.kt:31) ~[corda-core-4.9.jar:?]
	at net.corda.node.services.statemachine.FlowStateMachineImpl.subFlow(FlowStateMachineImpl.kt:420) ~[corda-node-4.9.jar:?]
	at net.corda.core.flows.FlowLogic.subFlow(FlowLogic.kt:409) ~[corda-core-4.9.jar:?]
	at net.corda.core.flows.ReceiveFinalityFlow.call(FinalityFlow.kt:285) ~[corda-core-4.9.jar:?]
	at net.corda.core.flows.ReceiveFinalityFlow.call(FinalityFlow.kt:280) ~[corda-core-4.9.jar:?]
	at net.corda.node.services.statemachine.FlowStateMachineImpl.subFlow(FlowStateMachineImpl.kt:420) ~[corda-node-4.9.jar:?]
	at net.corda.core.flows.FlowLogic.subFlow(FlowLogic.kt:409) ~[corda-core-4.9.jar:?]
	at net.corda.samples.obligation.flows.IOUSettleFlowResponder.call(IOUSettleFlow.kt:139) ~[main/:?]
	at net.corda.samples.obligation.flows.IOUSettleFlowResponder.call(IOUSettleFlow.kt:126) ~[main/:?]
	at net.corda.node.services.statemachine.FlowStateMachineImpl.run(FlowStateMachineImpl.kt:349) ~[corda-node-4.9.jar:?]
	at net.corda.node.services.statemachine.FlowStateMachineImpl.run(FlowStateMachineImpl.kt:71) ~[corda-node-4.9.jar:?]
	at co.paralleluniverse.fibers.Fiber.run1(Fiber.java:1092) ~[quasar-core-0.7.10.jar:0.7.10]
	at co.paralleluniverse.fibers.Fiber.exec(Fiber.java:788) ~[quasar-core-0.7.10.jar:0.7.10]
	at co.paralleluniverse.fibers.RunnableFiberTask.doExec(RunnableFiberTask.java:100) ~[quasar-core-0.7.10.jar:0.7.10]
	at co.paralleluniverse.fibers.RunnableFiberTask.run(RunnableFiberTask.java:91) ~[quasar-core-0.7.10.jar:0.7.10]
	at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511) ~[?:1.8.0_202]
	at java.util.concurrent.FutureTask.run(FutureTask.java:266) ~[?:1.8.0_202]
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.access$201(ScheduledThreadPoolExecutor.java:180) ~[?:1.8.0_202]
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.run(ScheduledThreadPoolExecutor.java:293) ~[?:1.8.0_202]
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149) ~[?:1.8.0_202]
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624) ~[?:1.8.0_202]
	at net.corda.node.utilities.AffinityExecutor$ServiceAffinityExecutor$1$thread$1.run(AffinityExecutor.kt:63) ~[corda-node-4.9.jar:?]
[INFO ] 2023-01-31T07:40:30,601Z [Mock network] statemachine.StaffedFlowHospital. - Flow error allowed to propagate {fiber-id=10000028, flow-id=1e1a8f4c-486e-4901-ba69-3c906954bdac, invocation_id=e9eb1dcd-004a-4c84-aa69-318e9319d299, invocation_timestamp=2023-01-31T07:40:29.984Z, origin=O=Mock Company 1, L=London, C=GB, session_id=e9eb1dcd-004a-4c84-aa69-318e9319d299, session_timestamp=2023-01-31T07:40:29.984Z, thread-id=854, tx_id=5776DD8CA997A5CC61E2E97CA1BD831E77AAEE5DE7213BE5AC35DB26A3B61748}
net.corda.core.flows.UnexpectedFlowEndException: Counter-flow errored
	at Received unexpected counter-flow exception from peer O=Mock Company 1, L=London, C=GB.() ~[?:?]
	at net.corda.node.services.statemachine.FlowStateMachineImpl.fillInLocalStackTrace(FlowStateMachineImpl.kt:244) ~[corda-node-4.9.jar:?]
	at net.corda.node.services.statemachine.FlowStateMachineImpl.processEventsUntilFlowIsResumed(FlowStateMachineImpl.kt:225) ~[corda-node-4.9.jar:?]
	at net.corda.node.services.statemachine.FlowStateMachineImpl.suspend(FlowStateMachineImpl.kt:577) ~[corda-node-4.9.jar:?]
	at net.corda.node.services.statemachine.FlowSessionImpl.receive(FlowSessionImpl.kt:67) ~[corda-node-4.9.jar:?]
	at net.corda.node.services.statemachine.FlowSessionImpl.receive(FlowSessionImpl.kt:71) ~[corda-node-4.9.jar:?]
	at net.corda.core.flows.ReceiveTransactionFlow.call(ReceiveTransactionFlow.kt:103) ~[corda-core-4.9.jar:?]
	at net.corda.core.flows.ReceiveTransactionFlow.call(ReceiveTransactionFlow.kt:31) ~[corda-core-4.9.jar:?]
	at net.corda.node.services.statemachine.FlowStateMachineImpl.subFlow(FlowStateMachineImpl.kt:420) ~[corda-node-4.9.jar:?]
	at net.corda.core.flows.FlowLogic.subFlow(FlowLogic.kt:409) ~[corda-core-4.9.jar:?]
	at net.corda.core.flows.ReceiveFinalityFlow.call(FinalityFlow.kt:285) ~[corda-core-4.9.jar:?]
	at net.corda.core.flows.ReceiveFinalityFlow.call(FinalityFlow.kt:280) ~[corda-core-4.9.jar:?]
	at net.corda.node.services.statemachine.FlowStateMachineImpl.subFlow(FlowStateMachineImpl.kt:420) ~[corda-node-4.9.jar:?]
	at net.corda.core.flows.FlowLogic.subFlow(FlowLogic.kt:409) ~[corda-core-4.9.jar:?]
	at net.corda.samples.obligation.flows.IOUSettleFlowResponder.call(IOUSettleFlow.kt:139) ~[main/:?]
	at net.corda.samples.obligation.flows.IOUSettleFlowResponder.call(IOUSettleFlow.kt:126) ~[main/:?]
	at net.corda.node.services.statemachine.FlowStateMachineImpl.run(FlowStateMachineImpl.kt:349) ~[corda-node-4.9.jar:?]
	at net.corda.node.services.statemachine.FlowStateMachineImpl.run(FlowStateMachineImpl.kt:71) ~[corda-node-4.9.jar:?]
	at co.paralleluniverse.fibers.Fiber.run1(Fiber.java:1092) ~[quasar-core-0.7.10.jar:0.7.10]
	at co.paralleluniverse.fibers.Fiber.exec(Fiber.java:788) ~[quasar-core-0.7.10.jar:0.7.10]
	at co.paralleluniverse.fibers.RunnableFiberTask.doExec(RunnableFiberTask.java:100) ~[quasar-core-0.7.10.jar:0.7.10]
	at co.paralleluniverse.fibers.RunnableFiberTask.run(RunnableFiberTask.java:91) ~[quasar-core-0.7.10.jar:0.7.10]
	at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511) ~[?:1.8.0_202]
	at java.util.concurrent.FutureTask.run(FutureTask.java:266) ~[?:1.8.0_202]
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.access$201(ScheduledThreadPoolExecutor.java:180) ~[?:1.8.0_202]
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.run(ScheduledThreadPoolExecutor.java:293) ~[?:1.8.0_202]
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149) ~[?:1.8.0_202]
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624) ~[?:1.8.0_202]
	at net.corda.node.utilities.AffinityExecutor$ServiceAffinityExecutor$1$thread$1.run(AffinityExecutor.kt:63) ~[corda-node-4.9.jar:?]
[WARN ] 2023-01-31T07:40:30,615Z [Mock network] interceptors.DumpHistoryOnErrorInterceptor. - Flow [1e1a8f4c-486e-4901-ba69-3c906954bdac] errored, dumping all transitions:

 --- Transition of flow [1e1a8f4c-486e-4901-ba69-3c906954bdac] ---
  Timestamp: 2023-01-31T07:40:29.989Z
  Event: DoRemainingWork
  Actions: 
    CreateTransaction
    PersistCheckpoint(id=[1e1a8f4c-486e-4901-ba69-3c906954bdac], checkpoint=Checkpoint(checkpointState=CheckpointState(invocationContext=InvocationContext(origin=Peer(party=O=Mock Company 1, L=London, C=GB), trace=Trace(invocationId=e9eb1dcd-004a-4c84-aa69-318e9319d299, timestamp: 2023-01-31T07:40:29.984Z, entityType: Invocation, sessionId=e9eb1dcd-004a-4c84-aa69-318e9319d299, timestamp: 2023-01-31T07:40:29.984Z, entityType: Session), actor=null, externalTrace=null, impersonatedActor=null, arguments=[], clientId=null), ourIdentity=O=Mock Company 3, L=London, C=GB, sessions={}, sessionsToBeClosed=[], subFlowStack=[Inlined(flowClass=class net.corda.samples.obligation.flows.IOUSettleFlowResponder, subFlowVersion=CorDappFlow(platformVersion=11, corDappName=workflows-1.0, corDappHash=F8E3613207E5ABAEC38930FAA426F7BA91464AA72DAF3EFB74917A0BA71A146E), isEnabledTimedFlow=false)], numberOfSuspends=0, numberOfCommits=1), flowState=Unstarted(flowStart=Initiated, frozenFlowLogic=A4E6248385F0F62083698EF5222FDD569BF49109E58F398337A183BC293D979A), errorState=Clean, result=null, status=RUNNABLE, progressStep=null, flowIoRequest=null, compatible=true), isCheckpointUpdate=false)
    PersistDeduplicationFacts(deduplicationHandlers=[net.corda.testing.node.internal.MockNodeMessagingService$InMemoryDeduplicationHandler@166ccecb])
    CommitTransaction
    AcknowledgeMessages(deduplicationHandlers=[net.corda.testing.node.internal.MockNodeMessagingService$InMemoryDeduplicationHandler@166ccecb])
    SignalFlowHasStarted(flowId=[1e1a8f4c-486e-4901-ba69-3c906954bdac])
    SendExisting(peerParty=O=Mock Company 1, L=London, C=GB, message=ExistingSessionMessage(recipientSessionId=SessionId(toLong=-3358756275887911989), payload=ConfirmSessionMessage(initiatedSessionId=SessionId(toLong=2957585445716046757), initiatedFlowInfo=FlowInfo(flowVersion=1, appName=<unknown>))), deduplicationId=SenderDeduplicationId(deduplicationId=DeduplicationId(toString=N-D--3358756275887911989-5594156702427061583-0-0), senderUUID=3ecbc590-084c-4279-8d61-b997a352b464))
    CreateTransaction
  Continuation: Resume(result=null)
  Diff between previous and next state:
pendingDeduplicationHandlers: 
    [net.corda.testing.node.internal.MockNodeMessagingService$InMemoryDeduplicationHandler@166ccecb]
    []
isAnyCheckpointPersisted: 
    false
    true
checkpoint.checkpointState.sessions.SessionId(toLong=2957585445716046757): 
    null
    Initiated(peerParty=O=Mock Company 1, L=London, C=GB, peerFlowInfo=FlowInfo(flowVersion=1, appName=<unknown>), receivedMessages=[DataSessionMessage(payload=class net.corda.core.serialization.SerializedBytes)], otherSideErrored=false, peerSinkSessionId=SessionId(toLong=-3358756275887911989), deduplicationSeed=D--3358756275887911989-5594156702427061583)
isFlowResumed: 
    false
    true


 --- Transition of flow [1e1a8f4c-486e-4901-ba69-3c906954bdac] ---
  Timestamp: 2023-01-31T07:40:29.994Z
  Event: EnterSubFlow(subFlowClass=class net.corda.samples.obligation.flows.IOUSettleFlowResponder$call$signedTransactionFlow$1, subFlowVersion=CoreFlow(platformVersion=11), isEnabledTimedFlow=false)
  Actions: 
    
  Continuation: ProcessEvents
  Diff between previous and next state:
checkpoint.checkpointState.subFlowStack: 
    [Inlined(flowClass=class net.corda.samples.obligation.flows.IOUSettleFlowResponder, subFlowVersion=CorDappFlow(platformVersion=11, corDappName=workflows-1.0, corDappHash=F8E3613207E5ABAEC38930FAA426F7BA91464AA72DAF3EFB74917A0BA71A146E), isEnabledTimedFlow=false)]
    [Inlined(flowClass=class net.corda.samples.obligation.flows.IOUSettleFlowResponder, subFlowVersion=CorDappFlow(platformVersion=11, corDappName=workflows-1.0, corDappHash=F8E3613207E5ABAEC38930FAA426F7BA91464AA72DAF3EFB74917A0BA71A146E), isEnabledTimedFlow=false), Inlined(flowClass=class net.corda.samples.obligation.flows.IOUSettleFlowResponder$call$signedTransactionFlow$1, subFlowVersion=CoreFlow(platformVersion=11), isEnabledTimedFlow=false)]
checkpoint.timestamp: 
    2023-01-31T07:40:29.985Z
    2023-01-31T07:40:29.994Z


 --- Transition of flow [1e1a8f4c-486e-4901-ba69-3c906954bdac] ---
  Timestamp: 2023-01-31T07:40:29.994Z
  Event: EnterSubFlow(subFlowClass=class net.corda.core.flows.ReceiveTransactionFlow, subFlowVersion=CoreFlow(platformVersion=11), isEnabledTimedFlow=false)
  Actions: 
    
  Continuation: ProcessEvents
  Diff between previous and next state:
checkpoint.checkpointState.subFlowStack: 
    [Inlined(flowClass=class net.corda.samples.obligation.flows.IOUSettleFlowResponder, subFlowVersion=CorDappFlow(platformVersion=11, corDappName=workflows-1.0, corDappHash=F8E3613207E5ABAEC38930FAA426F7BA91464AA72DAF3EFB74917A0BA71A146E), isEnabledTimedFlow=false), Inlined(flowClass=class net.corda.samples.obligation.flows.IOUSettleFlowResponder$call$signedTransactionFlow$1, subFlowVersion=CoreFlow(platformVersion=11), isEnabledTimedFlow=false)]
    [Inlined(flowClass=class net.corda.samples.obligation.flows.IOUSettleFlowResponder, subFlowVersion=CorDappFlow(platformVersion=11, corDappName=workflows-1.0, corDappHash=F8E3613207E5ABAEC38930FAA426F7BA91464AA72DAF3EFB74917A0BA71A146E), isEnabledTimedFlow=false), Inlined(flowClass=class net.corda.samples.obligation.flows.IOUSettleFlowResponder$call$signedTransactionFlow$1, subFlowVersion=CoreFlow(platformVersion=11), isEnabledTimedFlow=false), Inlined(flowClass=class net.corda.core.flows.ReceiveTransactionFlow, subFlowVersion=CoreFlow(platformVersion=11), isEnabledTimedFlow=false)]


 --- Transition of flow [1e1a8f4c-486e-4901-ba69-3c906954bdac] ---
  Timestamp: 2023-01-31T07:40:29.999Z
  Event: Suspend(ioRequest=Receive(sessions=[FlowSessionImpl(destination=O=Mock Company 1, L=London, C=GB, sourceSessionId=SessionId(toLong=2957585445716046757))]), maySkipCheckpoint=false, fiber=F4AC4002C0D49F43A6BD7BB645AD1D2DFB5F4D2AA7CE7A55B70E626C015A75A8, currentStep=Starting)
  Actions: 
    PersistCheckpoint(id=[1e1a8f4c-486e-4901-ba69-3c906954bdac], checkpoint=Checkpoint(checkpointState=CheckpointState(invocationContext=InvocationContext(origin=Peer(party=O=Mock Company 1, L=London, C=GB), trace=Trace(invocationId=e9eb1dcd-004a-4c84-aa69-318e9319d299, timestamp: 2023-01-31T07:40:29.984Z, entityType: Invocation, sessionId=e9eb1dcd-004a-4c84-aa69-318e9319d299, timestamp: 2023-01-31T07:40:29.984Z, entityType: Session), actor=null, externalTrace=null, impersonatedActor=null, arguments=[], clientId=null), ourIdentity=O=Mock Company 3, L=London, C=GB, sessions={SessionId(toLong=2957585445716046757)=Initiated(peerParty=O=Mock Company 1, L=London, C=GB, peerFlowInfo=FlowInfo(flowVersion=1, appName=<unknown>), receivedMessages=[DataSessionMessage(payload=class net.corda.core.serialization.SerializedBytes)], otherSideErrored=false, peerSinkSessionId=SessionId(toLong=-3358756275887911989), deduplicationSeed=D--3358756275887911989-5594156702427061583)}, sessionsToBeClosed=[], subFlowStack=[Inlined(flowClass=class net.corda.samples.obligation.flows.IOUSettleFlowResponder, subFlowVersion=CorDappFlow(platformVersion=11, corDappName=workflows-1.0, corDappHash=F8E3613207E5ABAEC38930FAA426F7BA91464AA72DAF3EFB74917A0BA71A146E), isEnabledTimedFlow=false), Inlined(flowClass=class net.corda.samples.obligation.flows.IOUSettleFlowResponder$call$signedTransactionFlow$1, subFlowVersion=CoreFlow(platformVersion=11), isEnabledTimedFlow=false), Inlined(flowClass=class net.corda.core.flows.ReceiveTransactionFlow, subFlowVersion=CoreFlow(platformVersion=11), isEnabledTimedFlow=false)], numberOfSuspends=1, numberOfCommits=2), flowState=Started(flowIORequest=Receive(sessions=[FlowSessionImpl(destination=O=Mock Company 1, L=London, C=GB, sourceSessionId=SessionId(toLong=2957585445716046757))]), frozenFiber=F4AC4002C0D49F43A6BD7BB645AD1D2DFB5F4D2AA7CE7A55B70E626C015A75A8), errorState=Clean, result=null, status=RUNNABLE, progressStep=Starting, flowIoRequest=Receive, compatible=true), isCheckpointUpdate=true)
    PersistDeduplicationFacts(deduplicationHandlers=[])
    CommitTransaction
    AcknowledgeMessages(deduplicationHandlers=[])
    ScheduleEvent(event=DoRemainingWork)
  Continuation: ProcessEvents
  Diff between previous and next state:
numberOfCommits: 
    0
    2
checkpoint.flowIoRequest: 
    null
    Receive
checkpoint.checkpointState.numberOfCommits: 
    1
    2
checkpoint.checkpointState.numberOfSuspends: 
    0
    1
checkpoint.flowState: 
    Unstarted(flowStart=Initiated, frozenFlowLogic=A4E6248385F0F62083698EF5222FDD569BF49109E58F398337A183BC293D979A)
    Started(flowIORequest=Receive(sessions=[FlowSessionImpl(destination=O=Mock Company 1, L=London, C=GB, sourceSessionId=SessionId(toLong=2957585445716046757))]), frozenFiber=F4AC4002C0D49F43A6BD7BB645AD1D2DFB5F4D2AA7CE7A55B70E626C015A75A8)
checkpoint.progressStep: 
    null
    Starting
checkpoint.timestamp: 
    2023-01-31T07:40:29.994Z
    2023-01-31T07:40:29.996Z
isFlowResumed: 
    true
    false


 --- Transition of flow [1e1a8f4c-486e-4901-ba69-3c906954bdac] ---
  Timestamp: 2023-01-31T07:40:29.999Z
  Event: DoRemainingWork
  Actions: 
    CreateTransaction
  Continuation: Resume(result=class java.util.LinkedHashMap)
  Diff between previous and next state:
checkpoint.checkpointState.sessions.SessionId(toLong=2957585445716046757).receivedMessages.isEmpty: 
    false
    true
checkpoint.timestamp: 
    2023-01-31T07:40:29.996Z
    2023-01-31T07:40:29.999Z
isFlowResumed: 
    false
    true


 --- Transition of flow [1e1a8f4c-486e-4901-ba69-3c906954bdac] ---
  Timestamp: 2023-01-31T07:40:30.001Z
  Event: EnterSubFlow(subFlowClass=class net.corda.core.internal.ResolveTransactionsFlow, subFlowVersion=CoreFlow(platformVersion=11), isEnabledTimedFlow=false)
  Actions: 
    
  Continuation: ProcessEvents
  Diff between previous and next state:
checkpoint.checkpointState.subFlowStack: 
    [Inlined(flowClass=class net.corda.samples.obligation.flows.IOUSettleFlowResponder, subFlowVersion=CorDappFlow(platformVersion=11, corDappName=workflows-1.0, corDappHash=F8E3613207E5ABAEC38930FAA426F7BA91464AA72DAF3EFB74917A0BA71A146E), isEnabledTimedFlow=false), Inlined(flowClass=class net.corda.samples.obligation.flows.IOUSettleFlowResponder$call$signedTransactionFlow$1, subFlowVersion=CoreFlow(platformVersion=11), isEnabledTimedFlow=false), Inlined(flowClass=class net.corda.core.flows.ReceiveTransactionFlow, subFlowVersion=CoreFlow(platformVersion=11), isEnabledTimedFlow=false)]
    [Inlined(flowClass=class net.corda.samples.obligation.flows.IOUSettleFlowResponder, subFlowVersion=CorDappFlow(platformVersion=11, corDappName=workflows-1.0, corDappHash=F8E3613207E5ABAEC38930FAA426F7BA91464AA72DAF3EFB74917A0BA71A146E), isEnabledTimedFlow=false), Inlined(flowClass=class net.corda.samples.obligation.flows.IOUSettleFlowResponder$call$signedTransactionFlow$1, subFlowVersion=CoreFlow(platformVersion=11), isEnabledTimedFlow=false), Inlined(flowClass=class net.corda.core.flows.ReceiveTransactionFlow, subFlowVersion=CoreFlow(platformVersion=11), isEnabledTimedFlow=false), Inlined(flowClass=class net.corda.core.internal.ResolveTransactionsFlow, subFlowVersion=CoreFlow(platformVersion=11), isEnabledTimedFlow=false)]
checkpoint.timestamp: 
    2023-01-31T07:40:29.999Z
    2023-01-31T07:40:30.001Z


 --- Transition of flow [1e1a8f4c-486e-4901-ba69-3c906954bdac] ---
  Timestamp: 2023-01-31T07:40:30.001Z
  Event: EnterSubFlow(subFlowClass=class net.corda.core.internal.FetchAttachmentsFlow, subFlowVersion=CoreFlow(platformVersion=11), isEnabledTimedFlow=false)
  Actions: 
    
  Continuation: ProcessEvents
  Diff between previous and next state:
checkpoint.checkpointState.subFlowStack: 
    [Inlined(flowClass=class net.corda.samples.obligation.flows.IOUSettleFlowResponder, subFlowVersion=CorDappFlow(platformVersion=11, corDappName=workflows-1.0, corDappHash=F8E3613207E5ABAEC38930FAA426F7BA91464AA72DAF3EFB74917A0BA71A146E), isEnabledTimedFlow=false), Inlined(flowClass=class net.corda.samples.obligation.flows.IOUSettleFlowResponder$call$signedTransactionFlow$1, subFlowVersion=CoreFlow(platformVersion=11), isEnabledTimedFlow=false), Inlined(flowClass=class net.corda.core.flows.ReceiveTransactionFlow, subFlowVersion=CoreFlow(platformVersion=11), isEnabledTimedFlow=false), Inlined(flowClass=class net.corda.core.internal.ResolveTransactionsFlow, subFlowVersion=CoreFlow(platformVersion=11), isEnabledTimedFlow=false)]
    [Inlined(flowClass=class net.corda.samples.obligation.flows.IOUSettleFlowResponder, subFlowVersion=CorDappFlow(platformVersion=11, corDappName=workflows-1.0, corDappHash=F8E3613207E5ABAEC38930FAA426F7BA91464AA72DAF3EFB74917A0BA71A146E), isEnabledTimedFlow=false), Inlined(flowClass=class net.corda.samples.obligation.flows.IOUSettleFlowResponder$call$signedTransactionFlow$1, subFlowVersion=CoreFlow(platformVersion=11), isEnabledTimedFlow=false), Inlined(flowClass=class net.corda.core.flows.ReceiveTransactionFlow, subFlowVersion=CoreFlow(platformVersion=11), isEnabledTimedFlow=false), Inlined(flowClass=class net.corda.core.internal.ResolveTransactionsFlow, subFlowVersion=CoreFlow(platformVersion=11), isEnabledTimedFlow=false), Inlined(flowClass=class net.corda.core.internal.FetchAttachmentsFlow, subFlowVersion=CoreFlow(platformVersion=11), isEnabledTimedFlow=false)]


 --- Transition of flow [1e1a8f4c-486e-4901-ba69-3c906954bdac] ---
  Timestamp: 2023-01-31T07:40:30.004Z
  Event: LeaveSubFlow
  Actions: 
    
  Continuation: ProcessEvents
  Diff between previous and next state:
checkpoint.checkpointState.subFlowStack: 
    [Inlined(flowClass=class net.corda.samples.obligation.flows.IOUSettleFlowResponder, subFlowVersion=CorDappFlow(platformVersion=11, corDappName=workflows-1.0, corDappHash=F8E3613207E5ABAEC38930FAA426F7BA91464AA72DAF3EFB74917A0BA71A146E), isEnabledTimedFlow=false), Inlined(flowClass=class net.corda.samples.obligation.flows.IOUSettleFlowResponder$call$signedTransactionFlow$1, subFlowVersion=CoreFlow(platformVersion=11), isEnabledTimedFlow=false), Inlined(flowClass=class net.corda.core.flows.ReceiveTransactionFlow, subFlowVersion=CoreFlow(platformVersion=11), isEnabledTimedFlow=false), Inlined(flowClass=class net.corda.core.internal.ResolveTransactionsFlow, subFlowVersion=CoreFlow(platformVersion=11), isEnabledTimedFlow=false), Inlined(flowClass=class net.corda.core.internal.FetchAttachmentsFlow, subFlowVersion=CoreFlow(platformVersion=11), isEnabledTimedFlow=false)]
    [Inlined(flowClass=class net.corda.samples.obligation.flows.IOUSettleFlowResponder, subFlowVersion=CorDappFlow(platformVersion=11, corDappName=workflows-1.0, corDappHash=F8E3613207E5ABAEC38930FAA426F7BA91464AA72DAF3EFB74917A0BA71A146E), isEnabledTimedFlow=false), Inlined(flowClass=class net.corda.samples.obligation.flows.IOUSettleFlowResponder$call$signedTransactionFlow$1, subFlowVersion=CoreFlow(platformVersion=11), isEnabledTimedFlow=false), Inlined(flowClass=class net.corda.core.flows.ReceiveTransactionFlow, subFlowVersion=CoreFlow(platformVersion=11), isEnabledTimedFlow=false), Inlined(flowClass=class net.corda.core.internal.ResolveTransactionsFlow, subFlowVersion=CoreFlow(platformVersion=11), isEnabledTimedFlow=false)]
checkpoint.timestamp: 
    2023-01-31T07:40:30.001Z
    2023-01-31T07:40:30.004Z


 --- Transition of flow [1e1a8f4c-486e-4901-ba69-3c906954bdac] ---
  Timestamp: 2023-01-31T07:40:30.004Z
  Event: EnterSubFlow(subFlowClass=class net.corda.core.internal.FetchNetworkParametersFlow, subFlowVersion=CoreFlow(platformVersion=11), isEnabledTimedFlow=false)
  Actions: 
    
  Continuation: ProcessEvents
  Diff between previous and next state:
checkpoint.checkpointState.subFlowStack: 
    [Inlined(flowClass=class net.corda.samples.obligation.flows.IOUSettleFlowResponder, subFlowVersion=CorDappFlow(platformVersion=11, corDappName=workflows-1.0, corDappHash=F8E3613207E5ABAEC38930FAA426F7BA91464AA72DAF3EFB74917A0BA71A146E), isEnabledTimedFlow=false), Inlined(flowClass=class net.corda.samples.obligation.flows.IOUSettleFlowResponder$call$signedTransactionFlow$1, subFlowVersion=CoreFlow(platformVersion=11), isEnabledTimedFlow=false), Inlined(flowClass=class net.corda.core.flows.ReceiveTransactionFlow, subFlowVersion=CoreFlow(platformVersion=11), isEnabledTimedFlow=false), Inlined(flowClass=class net.corda.core.internal.ResolveTransactionsFlow, subFlowVersion=CoreFlow(platformVersion=11), isEnabledTimedFlow=false)]
    [Inlined(flowClass=class net.corda.samples.obligation.flows.IOUSettleFlowResponder, subFlowVersion=CorDappFlow(platformVersion=11, corDappName=workflows-1.0, corDappHash=F8E3613207E5ABAEC38930FAA426F7BA91464AA72DAF3EFB74917A0BA71A146E), isEnabledTimedFlow=false), Inlined(flowClass=class net.corda.samples.obligation.flows.IOUSettleFlowResponder$call$signedTransactionFlow$1, subFlowVersion=CoreFlow(platformVersion=11), isEnabledTimedFlow=false), Inlined(flowClass=class net.corda.core.flows.ReceiveTransactionFlow, subFlowVersion=CoreFlow(platformVersion=11), isEnabledTimedFlow=false), Inlined(flowClass=class net.corda.core.internal.ResolveTransactionsFlow, subFlowVersion=CoreFlow(platformVersion=11), isEnabledTimedFlow=false), Inlined(flowClass=class net.corda.core.internal.FetchNetworkParametersFlow, subFlowVersion=CoreFlow(platformVersion=11), isEnabledTimedFlow=false)]


 --- Transition of flow [1e1a8f4c-486e-4901-ba69-3c906954bdac] ---
  Timestamp: 2023-01-31T07:40:30.004Z
  Event: LeaveSubFlow
  Actions: 
    
  Continuation: ProcessEvents
  Diff between previous and next state:
checkpoint.checkpointState.subFlowStack: 
    [Inlined(flowClass=class net.corda.samples.obligation.flows.IOUSettleFlowResponder, subFlowVersion=CorDappFlow(platformVersion=11, corDappName=workflows-1.0, corDappHash=F8E3613207E5ABAEC38930FAA426F7BA91464AA72DAF3EFB74917A0BA71A146E), isEnabledTimedFlow=false), Inlined(flowClass=class net.corda.samples.obligation.flows.IOUSettleFlowResponder$call$signedTransactionFlow$1, subFlowVersion=CoreFlow(platformVersion=11), isEnabledTimedFlow=false), Inlined(flowClass=class net.corda.core.flows.ReceiveTransactionFlow, subFlowVersion=CoreFlow(platformVersion=11), isEnabledTimedFlow=false), Inlined(flowClass=class net.corda.core.internal.ResolveTransactionsFlow, subFlowVersion=CoreFlow(platformVersion=11), isEnabledTimedFlow=false), Inlined(flowClass=class net.corda.core.internal.FetchNetworkParametersFlow, subFlowVersion=CoreFlow(platformVersion=11), isEnabledTimedFlow=false)]
    [Inlined(flowClass=class net.corda.samples.obligation.flows.IOUSettleFlowResponder, subFlowVersion=CorDappFlow(platformVersion=11, corDappName=workflows-1.0, corDappHash=F8E3613207E5ABAEC38930FAA426F7BA91464AA72DAF3EFB74917A0BA71A146E), isEnabledTimedFlow=false), Inlined(flowClass=class net.corda.samples.obligation.flows.IOUSettleFlowResponder$call$signedTransactionFlow$1, subFlowVersion=CoreFlow(platformVersion=11), isEnabledTimedFlow=false), Inlined(flowClass=class net.corda.core.flows.ReceiveTransactionFlow, subFlowVersion=CoreFlow(platformVersion=11), isEnabledTimedFlow=false), Inlined(flowClass=class net.corda.core.internal.ResolveTransactionsFlow, subFlowVersion=CoreFlow(platformVersion=11), isEnabledTimedFlow=false)]


 --- Transition of flow [1e1a8f4c-486e-4901-ba69-3c906954bdac] ---
  Timestamp: 2023-01-31T07:40:30.004Z
  Event: EnterSubFlow(subFlowClass=class net.corda.core.internal.FetchTransactionsFlow, subFlowVersion=CoreFlow(platformVersion=11), isEnabledTimedFlow=false)
  Actions: 
    
  Continuation: ProcessEvents
  Diff between previous and next state:
checkpoint.checkpointState.subFlowStack: 
    [Inlined(flowClass=class net.corda.samples.obligation.flows.IOUSettleFlowResponder, subFlowVersion=CorDappFlow(platformVersion=11, corDappName=workflows-1.0, corDappHash=F8E3613207E5ABAEC38930FAA426F7BA91464AA72DAF3EFB74917A0BA71A146E), isEnabledTimedFlow=false), Inlined(flowClass=class net.corda.samples.obligation.flows.IOUSettleFlowResponder$call$signedTransactionFlow$1, subFlowVersion=CoreFlow(platformVersion=11), isEnabledTimedFlow=false), Inlined(flowClass=class net.corda.core.flows.ReceiveTransactionFlow, subFlowVersion=CoreFlow(platformVersion=11), isEnabledTimedFlow=false), Inlined(flowClass=class net.corda.core.internal.ResolveTransactionsFlow, subFlowVersion=CoreFlow(platformVersion=11), isEnabledTimedFlow=false)]
    [Inlined(flowClass=class net.corda.samples.obligation.flows.IOUSettleFlowResponder, subFlowVersion=CorDappFlow(platformVersion=11, corDappName=workflows-1.0, corDappHash=F8E3613207E5ABAEC38930FAA426F7BA91464AA72DAF3EFB74917A0BA71A146E), isEnabledTimedFlow=false), Inlined(flowClass=class net.corda.samples.obligation.flows.IOUSettleFlowResponder$call$signedTransactionFlow$1, subFlowVersion=CoreFlow(platformVersion=11), isEnabledTimedFlow=false), Inlined(flowClass=class net.corda.core.flows.ReceiveTransactionFlow, subFlowVersion=CoreFlow(platformVersion=11), isEnabledTimedFlow=false), Inlined(flowClass=class net.corda.core.internal.ResolveTransactionsFlow, subFlowVersion=CoreFlow(platformVersion=11), isEnabledTimedFlow=false), Inlined(flowClass=class net.corda.core.internal.FetchTransactionsFlow, subFlowVersion=CoreFlow(platformVersion=11), isEnabledTimedFlow=false)]


 --- Transition of flow [1e1a8f4c-486e-4901-ba69-3c906954bdac] ---
  Timestamp: 2023-01-31T07:40:30.009Z
  Event: Suspend(ioRequest=SendAndReceive({FlowSessionImpl(destination=O=Mock Company 1, L=London, C=GB, sourceSessionId=SessionId(toLong=2957585445716046757))=FlowSessionImpl(destination=O=Mock Company 1, L=London, C=GB, sourceSessionId=SessionId(toLong=2957585445716046757))=A9AE62F7C704F6D4E1019C2A2CA8CBA7AA25C3D5ABF92EE67729DBC72645CF8E}, shouldRetrySend=false), maySkipCheckpoint=false, fiber=771CD4E58AE7B416C3A15FE0ADFD9A9B9D807FCDE24541142039C2BA630E34FD, currentStep=Starting)
  Actions: 
    PersistCheckpoint(id=[1e1a8f4c-486e-4901-ba69-3c906954bdac], checkpoint=Checkpoint(checkpointState=CheckpointState(invocationContext=InvocationContext(origin=Peer(party=O=Mock Company 1, L=London, C=GB), trace=Trace(invocationId=e9eb1dcd-004a-4c84-aa69-318e9319d299, timestamp: 2023-01-31T07:40:29.984Z, entityType: Invocation, sessionId=e9eb1dcd-004a-4c84-aa69-318e9319d299, timestamp: 2023-01-31T07:40:29.984Z, entityType: Session), actor=null, externalTrace=null, impersonatedActor=null, arguments=[], clientId=null), ourIdentity=O=Mock Company 3, L=London, C=GB, sessions={SessionId(toLong=2957585445716046757)=Initiated(peerParty=O=Mock Company 1, L=London, C=GB, peerFlowInfo=FlowInfo(flowVersion=1, appName=<unknown>), receivedMessages=[], otherSideErrored=false, peerSinkSessionId=SessionId(toLong=-3358756275887911989), deduplicationSeed=D--3358756275887911989-5594156702427061583)}, sessionsToBeClosed=[], subFlowStack=[Inlined(flowClass=class net.corda.samples.obligation.flows.IOUSettleFlowResponder, subFlowVersion=CorDappFlow(platformVersion=11, corDappName=workflows-1.0, corDappHash=F8E3613207E5ABAEC38930FAA426F7BA91464AA72DAF3EFB74917A0BA71A146E), isEnabledTimedFlow=false), Inlined(flowClass=class net.corda.samples.obligation.flows.IOUSettleFlowResponder$call$signedTransactionFlow$1, subFlowVersion=CoreFlow(platformVersion=11), isEnabledTimedFlow=false), Inlined(flowClass=class net.corda.core.flows.ReceiveTransactionFlow, subFlowVersion=CoreFlow(platformVersion=11), isEnabledTimedFlow=false), Inlined(flowClass=class net.corda.core.internal.ResolveTransactionsFlow, subFlowVersion=CoreFlow(platformVersion=11), isEnabledTimedFlow=false), Inlined(flowClass=class net.corda.core.internal.FetchTransactionsFlow, subFlowVersion=CoreFlow(platformVersion=11), isEnabledTimedFlow=false)], numberOfSuspends=2, numberOfCommits=3), flowState=Started(flowIORequest=SendAndReceive({FlowSessionImpl(destination=O=Mock Company 1, L=London, C=GB, sourceSessionId=SessionId(toLong=2957585445716046757))=FlowSessionImpl(destination=O=Mock Company 1, L=London, C=GB, sourceSessionId=SessionId(toLong=2957585445716046757))=A9AE62F7C704F6D4E1019C2A2CA8CBA7AA25C3D5ABF92EE67729DBC72645CF8E}, shouldRetrySend=false), frozenFiber=771CD4E58AE7B416C3A15FE0ADFD9A9B9D807FCDE24541142039C2BA630E34FD), errorState=Clean, result=null, status=RUNNABLE, progressStep=Starting, flowIoRequest=SendAndReceive, compatible=true), isCheckpointUpdate=true)
    PersistDeduplicationFacts(deduplicationHandlers=[])
    CommitTransaction
    AcknowledgeMessages(deduplicationHandlers=[])
    ScheduleEvent(event=DoRemainingWork)
  Continuation: ProcessEvents
  Diff between previous and next state:
numberOfCommits: 
    2
    3
checkpoint.flowIoRequest: 
    Receive
    SendAndReceive
checkpoint.checkpointState.numberOfCommits: 
    2
    3
checkpoint.checkpointState.numberOfSuspends: 
    1
    2
checkpoint.flowState.frozenFiber.hash: 
    F4AC4002C0D49F43A6BD7BB645AD1D2DFB5F4D2AA7CE7A55B70E626C015A75A8
    771CD4E58AE7B416C3A15FE0ADFD9A9B9D807FCDE24541142039C2BA630E34FD
checkpoint.flowState.flowIORequest: 
    Receive(sessions=[FlowSessionImpl(destination=O=Mock Company 1, L=London, C=GB, sourceSessionId=SessionId(toLong=2957585445716046757))])
    SendAndReceive({FlowSessionImpl(destination=O=Mock Company 1, L=London, C=GB, sourceSessionId=SessionId(toLong=2957585445716046757))=FlowSessionImpl(destination=O=Mock Company 1, L=London, C=GB, sourceSessionId=SessionId(toLong=2957585445716046757))=A9AE62F7C704F6D4E1019C2A2CA8CBA7AA25C3D5ABF92EE67729DBC72645CF8E}, shouldRetrySend=false)
checkpoint.timestamp: 
    2023-01-31T07:40:30.004Z
    2023-01-31T07:40:30.008Z
isFlowResumed: 
    true
    false


 --- Transition of flow [1e1a8f4c-486e-4901-ba69-3c906954bdac] ---
  Timestamp: 2023-01-31T07:40:30.010Z
  Event: DoRemainingWork
  Actions: 
    SendMultiple(sendInitial=[], sendExisting=[SendExisting(peerParty=O=Mock Company 1, L=London, C=GB, message=ExistingSessionMessage(recipientSessionId=SessionId(toLong=-3358756275887911989), payload=DataSessionMessage(payload=class net.corda.core.serialization.SerializedBytes)), deduplicationId=SenderDeduplicationId(deduplicationId=DeduplicationId(toString=N-D--3358756275887911989-5594156702427061583-2-0), senderUUID=3ecbc590-084c-4279-8d61-b997a352b464))])
  Continuation: ProcessEvents
  Diff between previous and next state:
checkpoint.flowState.flowIORequest: 
    SendAndReceive({FlowSessionImpl(destination=O=Mock Company 1, L=London, C=GB, sourceSessionId=SessionId(toLong=2957585445716046757))=FlowSessionImpl(destination=O=Mock Company 1, L=London, C=GB, sourceSessionId=SessionId(toLong=2957585445716046757))=A9AE62F7C704F6D4E1019C2A2CA8CBA7AA25C3D5ABF92EE67729DBC72645CF8E}, shouldRetrySend=false)
    Receive(sessions=[FlowSessionImpl(destination=O=Mock Company 1, L=London, C=GB, sourceSessionId=SessionId(toLong=2957585445716046757))])
checkpoint.timestamp: 
    2023-01-31T07:40:30.008Z
    2023-01-31T07:40:30.010Z


 --- Transition of flow [1e1a8f4c-486e-4901-ba69-3c906954bdac] ---
  Timestamp: 2023-01-31T07:40:30.030Z
  Event: DeliverSessionMessage(sessionMessage=ExistingSessionMessage(recipientSessionId=SessionId(toLong=2957585445716046757), payload=DataSessionMessage(payload=class net.corda.core.serialization.SerializedBytes)), deduplicationHandler=net.corda.testing.node.internal.MockNodeMessagingService$InMemoryDeduplicationHandler@5954aa71, sender=O=Mock Company 1, L=London, C=GB)
  Actions: 
    ScheduleEvent(event=DoRemainingWork)
  Continuation: ProcessEvents
  Diff between previous and next state:
pendingDeduplicationHandlers: 
    []
    [net.corda.testing.node.internal.MockNodeMessagingService$InMemoryDeduplicationHandler@5954aa71]
checkpoint.checkpointState.sessions.SessionId(toLong=2957585445716046757).receivedMessages.isEmpty: 
    true
    false
checkpoint.timestamp: 
    2023-01-31T07:40:30.010Z
    2023-01-31T07:40:30.030Z


 --- Transition of flow [1e1a8f4c-486e-4901-ba69-3c906954bdac] ---
  Timestamp: 2023-01-31T07:40:30.030Z
  Event: DoRemainingWork
  Actions: 
    CreateTransaction
  Continuation: Resume(result=class java.util.LinkedHashMap)
  Diff between previous and next state:
checkpoint.checkpointState.sessions.SessionId(toLong=2957585445716046757).receivedMessages.isEmpty: 
    false
    true
isFlowResumed: 
    false
    true


 --- Transition of flow [1e1a8f4c-486e-4901-ba69-3c906954bdac] ---
  Timestamp: 2023-01-31T07:40:30.031Z
  Event: LeaveSubFlow
  Actions: 
    
  Continuation: ProcessEvents
  Diff between previous and next state:
checkpoint.checkpointState.subFlowStack: 
    [Inlined(flowClass=class net.corda.samples.obligation.flows.IOUSettleFlowResponder, subFlowVersion=CorDappFlow(platformVersion=11, corDappName=workflows-1.0, corDappHash=F8E3613207E5ABAEC38930FAA426F7BA91464AA72DAF3EFB74917A0BA71A146E), isEnabledTimedFlow=false), Inlined(flowClass=class net.corda.samples.obligation.flows.IOUSettleFlowResponder$call$signedTransactionFlow$1, subFlowVersion=CoreFlow(platformVersion=11), isEnabledTimedFlow=false), Inlined(flowClass=class net.corda.core.flows.ReceiveTransactionFlow, subFlowVersion=CoreFlow(platformVersion=11), isEnabledTimedFlow=false), Inlined(flowClass=class net.corda.core.internal.ResolveTransactionsFlow, subFlowVersion=CoreFlow(platformVersion=11), isEnabledTimedFlow=false), Inlined(flowClass=class net.corda.core.internal.FetchTransactionsFlow, subFlowVersion=CoreFlow(platformVersion=11), isEnabledTimedFlow=false)]
    [Inlined(flowClass=class net.corda.samples.obligation.flows.IOUSettleFlowResponder, subFlowVersion=CorDappFlow(platformVersion=11, corDappName=workflows-1.0, corDappHash=F8E3613207E5ABAEC38930FAA426F7BA91464AA72DAF3EFB74917A0BA71A146E), isEnabledTimedFlow=false), Inlined(flowClass=class net.corda.samples.obligation.flows.IOUSettleFlowResponder$call$signedTransactionFlow$1, subFlowVersion=CoreFlow(platformVersion=11), isEnabledTimedFlow=false), Inlined(flowClass=class net.corda.core.flows.ReceiveTransactionFlow, subFlowVersion=CoreFlow(platformVersion=11), isEnabledTimedFlow=false), Inlined(flowClass=class net.corda.core.internal.ResolveTransactionsFlow, subFlowVersion=CoreFlow(platformVersion=11), isEnabledTimedFlow=false)]
checkpoint.timestamp: 
    2023-01-31T07:40:30.030Z
    2023-01-31T07:40:30.031Z


 --- Transition of flow [1e1a8f4c-486e-4901-ba69-3c906954bdac] ---
  Timestamp: 2023-01-31T07:40:30.033Z
  Event: EnterSubFlow(subFlowClass=class net.corda.core.internal.FetchAttachmentsFlow, subFlowVersion=CoreFlow(platformVersion=11), isEnabledTimedFlow=false)
  Actions: 
    
  Continuation: ProcessEvents
  Diff between previous and next state:
checkpoint.checkpointState.subFlowStack: 
    [Inlined(flowClass=class net.corda.samples.obligation.flows.IOUSettleFlowResponder, subFlowVersion=CorDappFlow(platformVersion=11, corDappName=workflows-1.0, corDappHash=F8E3613207E5ABAEC38930FAA426F7BA91464AA72DAF3EFB74917A0BA71A146E), isEnabledTimedFlow=false), Inlined(flowClass=class net.corda.samples.obligation.flows.IOUSettleFlowResponder$call$signedTransactionFlow$1, subFlowVersion=CoreFlow(platformVersion=11), isEnabledTimedFlow=false), Inlined(flowClass=class net.corda.core.flows.ReceiveTransactionFlow, subFlowVersion=CoreFlow(platformVersion=11), isEnabledTimedFlow=false), Inlined(flowClass=class net.corda.core.internal.ResolveTransactionsFlow, subFlowVersion=CoreFlow(platformVersion=11), isEnabledTimedFlow=false)]
    [Inlined(flowClass=class net.corda.samples.obligation.flows.IOUSettleFlowResponder, subFlowVersion=CorDappFlow(platformVersion=11, corDappName=workflows-1.0, corDappHash=F8E3613207E5ABAEC38930FAA426F7BA91464AA72DAF3EFB74917A0BA71A146E), isEnabledTimedFlow=false), Inlined(flowClass=class net.corda.samples.obligation.flows.IOUSettleFlowResponder$call$signedTransactionFlow$1, subFlowVersion=CoreFlow(platformVersion=11), isEnabledTimedFlow=false), Inlined(flowClass=class net.corda.core.flows.ReceiveTransactionFlow, subFlowVersion=CoreFlow(platformVersion=11), isEnabledTimedFlow=false), Inlined(flowClass=class net.corda.core.internal.ResolveTransactionsFlow, subFlowVersion=CoreFlow(platformVersion=11), isEnabledTimedFlow=false), Inlined(flowClass=class net.corda.core.internal.FetchAttachmentsFlow, subFlowVersion=CoreFlow(platformVersion=11), isEnabledTimedFlow=false)]
checkpoint.timestamp: 
    2023-01-31T07:40:30.031Z
    2023-01-31T07:40:30.033Z


 --- Transition of flow [1e1a8f4c-486e-4901-ba69-3c906954bdac] ---
  Timestamp: 2023-01-31T07:40:30.033Z
  Event: LeaveSubFlow
  Actions: 
    
  Continuation: ProcessEvents
  Diff between previous and next state:
checkpoint.checkpointState.subFlowStack: 
    [Inlined(flowClass=class net.corda.samples.obligation.flows.IOUSettleFlowResponder, subFlowVersion=CorDappFlow(platformVersion=11, corDappName=workflows-1.0, corDappHash=F8E3613207E5ABAEC38930FAA426F7BA91464AA72DAF3EFB74917A0BA71A146E), isEnabledTimedFlow=false), Inlined(flowClass=class net.corda.samples.obligation.flows.IOUSettleFlowResponder$call$signedTransactionFlow$1, subFlowVersion=CoreFlow(platformVersion=11), isEnabledTimedFlow=false), Inlined(flowClass=class net.corda.core.flows.ReceiveTransactionFlow, subFlowVersion=CoreFlow(platformVersion=11), isEnabledTimedFlow=false), Inlined(flowClass=class net.corda.core.internal.ResolveTransactionsFlow, subFlowVersion=CoreFlow(platformVersion=11), isEnabledTimedFlow=false), Inlined(flowClass=class net.corda.core.internal.FetchAttachmentsFlow, subFlowVersion=CoreFlow(platformVersion=11), isEnabledTimedFlow=false)]
    [Inlined(flowClass=class net.corda.samples.obligation.flows.IOUSettleFlowResponder, subFlowVersion=CorDappFlow(platformVersion=11, corDappName=workflows-1.0, corDappHash=F8E3613207E5ABAEC38930FAA426F7BA91464AA72DAF3EFB74917A0BA71A146E), isEnabledTimedFlow=false), Inlined(flowClass=class net.corda.samples.obligation.flows.IOUSettleFlowResponder$call$signedTransactionFlow$1, subFlowVersion=CoreFlow(platformVersion=11), isEnabledTimedFlow=false), Inlined(flowClass=class net.corda.core.flows.ReceiveTransactionFlow, subFlowVersion=CoreFlow(platformVersion=11), isEnabledTimedFlow=false), Inlined(flowClass=class net.corda.core.internal.ResolveTransactionsFlow, subFlowVersion=CoreFlow(platformVersion=11), isEnabledTimedFlow=false)]


 --- Transition of flow [1e1a8f4c-486e-4901-ba69-3c906954bdac] ---
  Timestamp: 2023-01-31T07:40:30.033Z
  Event: EnterSubFlow(subFlowClass=class net.corda.core.internal.FetchNetworkParametersFlow, subFlowVersion=CoreFlow(platformVersion=11), isEnabledTimedFlow=false)
  Actions: 
    
  Continuation: ProcessEvents
  Diff between previous and next state:
checkpoint.checkpointState.subFlowStack: 
    [Inlined(flowClass=class net.corda.samples.obligation.flows.IOUSettleFlowResponder, subFlowVersion=CorDappFlow(platformVersion=11, corDappName=workflows-1.0, corDappHash=F8E3613207E5ABAEC38930FAA426F7BA91464AA72DAF3EFB74917A0BA71A146E), isEnabledTimedFlow=false), Inlined(flowClass=class net.corda.samples.obligation.flows.IOUSettleFlowResponder$call$signedTransactionFlow$1, subFlowVersion=CoreFlow(platformVersion=11), isEnabledTimedFlow=false), Inlined(flowClass=class net.corda.core.flows.ReceiveTransactionFlow, subFlowVersion=CoreFlow(platformVersion=11), isEnabledTimedFlow=false), Inlined(flowClass=class net.corda.core.internal.ResolveTransactionsFlow, subFlowVersion=CoreFlow(platformVersion=11), isEnabledTimedFlow=false)]
    [Inlined(flowClass=class net.corda.samples.obligation.flows.IOUSettleFlowResponder, subFlowVersion=CorDappFlow(platformVersion=11, corDappName=workflows-1.0, corDappHash=F8E3613207E5ABAEC38930FAA426F7BA91464AA72DAF3EFB74917A0BA71A146E), isEnabledTimedFlow=false), Inlined(flowClass=class net.corda.samples.obligation.flows.IOUSettleFlowResponder$call$signedTransactionFlow$1, subFlowVersion=CoreFlow(platformVersion=11), isEnabledTimedFlow=false), Inlined(flowClass=class net.corda.core.flows.ReceiveTransactionFlow, subFlowVersion=CoreFlow(platformVersion=11), isEnabledTimedFlow=false), Inlined(flowClass=class net.corda.core.internal.ResolveTransactionsFlow, subFlowVersion=CoreFlow(platformVersion=11), isEnabledTimedFlow=false), Inlined(flowClass=class net.corda.core.internal.FetchNetworkParametersFlow, subFlowVersion=CoreFlow(platformVersion=11), isEnabledTimedFlow=false)]


 --- Transition of flow [1e1a8f4c-486e-4901-ba69-3c906954bdac] ---
  Timestamp: 2023-01-31T07:40:30.034Z
  Event: LeaveSubFlow
  Actions: 
    
  Continuation: ProcessEvents
  Diff between previous and next state:
checkpoint.checkpointState.subFlowStack: 
    [Inlined(flowClass=class net.corda.samples.obligation.flows.IOUSettleFlowResponder, subFlowVersion=CorDappFlow(platformVersion=11, corDappName=workflows-1.0, corDappHash=F8E3613207E5ABAEC38930FAA426F7BA91464AA72DAF3EFB74917A0BA71A146E), isEnabledTimedFlow=false), Inlined(flowClass=class net.corda.samples.obligation.flows.IOUSettleFlowResponder$call$signedTransactionFlow$1, subFlowVersion=CoreFlow(platformVersion=11), isEnabledTimedFlow=false), Inlined(flowClass=class net.corda.core.flows.ReceiveTransactionFlow, subFlowVersion=CoreFlow(platformVersion=11), isEnabledTimedFlow=false), Inlined(flowClass=class net.corda.core.internal.ResolveTransactionsFlow, subFlowVersion=CoreFlow(platformVersion=11), isEnabledTimedFlow=false), Inlined(flowClass=class net.corda.core.internal.FetchNetworkParametersFlow, subFlowVersion=CoreFlow(platformVersion=11), isEnabledTimedFlow=false)]
    [Inlined(flowClass=class net.corda.samples.obligation.flows.IOUSettleFlowResponder, subFlowVersion=CorDappFlow(platformVersion=11, corDappName=workflows-1.0, corDappHash=F8E3613207E5ABAEC38930FAA426F7BA91464AA72DAF3EFB74917A0BA71A146E), isEnabledTimedFlow=false), Inlined(flowClass=class net.corda.samples.obligation.flows.IOUSettleFlowResponder$call$signedTransactionFlow$1, subFlowVersion=CoreFlow(platformVersion=11), isEnabledTimedFlow=false), Inlined(flowClass=class net.corda.core.flows.ReceiveTransactionFlow, subFlowVersion=CoreFlow(platformVersion=11), isEnabledTimedFlow=false), Inlined(flowClass=class net.corda.core.internal.ResolveTransactionsFlow, subFlowVersion=CoreFlow(platformVersion=11), isEnabledTimedFlow=false)]
checkpoint.timestamp: 
    2023-01-31T07:40:30.033Z
    2023-01-31T07:40:30.034Z


 --- Transition of flow [1e1a8f4c-486e-4901-ba69-3c906954bdac] ---
  Timestamp: 2023-01-31T07:40:30.038Z
  Event: Suspend(ioRequest=Sleep(wakeUpAfter=2023-01-31T07:40:30.034Z), maySkipCheckpoint=false, fiber=2962FA682BA4277A946CF1567897273DCE17559C89F97A3BAF4B357323C8DE8B, currentStep=Starting)
  Actions: 
    PersistCheckpoint(id=[1e1a8f4c-486e-4901-ba69-3c906954bdac], checkpoint=Checkpoint(checkpointState=CheckpointState(invocationContext=InvocationContext(origin=Peer(party=O=Mock Company 1, L=London, C=GB), trace=Trace(invocationId=e9eb1dcd-004a-4c84-aa69-318e9319d299, timestamp: 2023-01-31T07:40:29.984Z, entityType: Invocation, sessionId=e9eb1dcd-004a-4c84-aa69-318e9319d299, timestamp: 2023-01-31T07:40:29.984Z, entityType: Session), actor=null, externalTrace=null, impersonatedActor=null, arguments=[], clientId=null), ourIdentity=O=Mock Company 3, L=London, C=GB, sessions={SessionId(toLong=2957585445716046757)=Initiated(peerParty=O=Mock Company 1, L=London, C=GB, peerFlowInfo=FlowInfo(flowVersion=1, appName=<unknown>), receivedMessages=[], otherSideErrored=false, peerSinkSessionId=SessionId(toLong=-3358756275887911989), deduplicationSeed=D--3358756275887911989-5594156702427061583)}, sessionsToBeClosed=[], subFlowStack=[Inlined(flowClass=class net.corda.samples.obligation.flows.IOUSettleFlowResponder, subFlowVersion=CorDappFlow(platformVersion=11, corDappName=workflows-1.0, corDappHash=F8E3613207E5ABAEC38930FAA426F7BA91464AA72DAF3EFB74917A0BA71A146E), isEnabledTimedFlow=false), Inlined(flowClass=class net.corda.samples.obligation.flows.IOUSettleFlowResponder$call$signedTransactionFlow$1, subFlowVersion=CoreFlow(platformVersion=11), isEnabledTimedFlow=false), Inlined(flowClass=class net.corda.core.flows.ReceiveTransactionFlow, subFlowVersion=CoreFlow(platformVersion=11), isEnabledTimedFlow=false), Inlined(flowClass=class net.corda.core.internal.ResolveTransactionsFlow, subFlowVersion=CoreFlow(platformVersion=11), isEnabledTimedFlow=false)], numberOfSuspends=3, numberOfCommits=4), flowState=Started(flowIORequest=Sleep(wakeUpAfter=2023-01-31T07:40:30.034Z), frozenFiber=2962FA682BA4277A946CF1567897273DCE17559C89F97A3BAF4B357323C8DE8B), errorState=Clean, result=null, status=RUNNABLE, progressStep=Starting, flowIoRequest=Sleep, compatible=true), isCheckpointUpdate=true)
    PersistDeduplicationFacts(deduplicationHandlers=[net.corda.testing.node.internal.MockNodeMessagingService$InMemoryDeduplicationHandler@5954aa71])
    CommitTransaction
    AcknowledgeMessages(deduplicationHandlers=[net.corda.testing.node.internal.MockNodeMessagingService$InMemoryDeduplicationHandler@5954aa71])
    ScheduleEvent(event=DoRemainingWork)
  Continuation: ProcessEvents
  Diff between previous and next state:
pendingDeduplicationHandlers: 
    [net.corda.testing.node.internal.MockNodeMessagingService$InMemoryDeduplicationHandler@5954aa71]
    []
numberOfCommits: 
    3
    4
checkpoint.flowIoRequest: 
    SendAndReceive
    Sleep
checkpoint.checkpointState.numberOfCommits: 
    3
    4
checkpoint.checkpointState.numberOfSuspends: 
    2
    3
checkpoint.flowState.frozenFiber.hash: 
    771CD4E58AE7B416C3A15FE0ADFD9A9B9D807FCDE24541142039C2BA630E34FD
    2962FA682BA4277A946CF1567897273DCE17559C89F97A3BAF4B357323C8DE8B
checkpoint.flowState.flowIORequest: 
    Receive(sessions=[FlowSessionImpl(destination=O=Mock Company 1, L=London, C=GB, sourceSessionId=SessionId(toLong=2957585445716046757))])
    Sleep(wakeUpAfter=2023-01-31T07:40:30.034Z)
checkpoint.timestamp: 
    2023-01-31T07:40:30.034Z
    2023-01-31T07:40:30.036Z
isFlowResumed: 
    true
    false


 --- Transition of flow [1e1a8f4c-486e-4901-ba69-3c906954bdac] ---
  Timestamp: 2023-01-31T07:40:30.038Z
  Event: DoRemainingWork
  Actions: 
    SleepUntil(currentState=StateMachineState(checkpoint=Checkpoint(checkpointState=CheckpointState(invocationContext=InvocationContext(origin=Peer(party=O=Mock Company 1, L=London, C=GB), trace=Trace(invocationId=e9eb1dcd-004a-4c84-aa69-318e9319d299, timestamp: 2023-01-31T07:40:29.984Z, entityType: Invocation, sessionId=e9eb1dcd-004a-4c84-aa69-318e9319d299, timestamp: 2023-01-31T07:40:29.984Z, entityType: Session), actor=null, externalTrace=null, impersonatedActor=null, arguments=[], clientId=null), ourIdentity=O=Mock Company 3, L=London, C=GB, sessions={SessionId(toLong=2957585445716046757)=Initiated(peerParty=O=Mock Company 1, L=London, C=GB, peerFlowInfo=FlowInfo(flowVersion=1, appName=<unknown>), receivedMessages=[], otherSideErrored=false, peerSinkSessionId=SessionId(toLong=-3358756275887911989), deduplicationSeed=D--3358756275887911989-5594156702427061583)}, sessionsToBeClosed=[], subFlowStack=[Inlined(flowClass=class net.corda.samples.obligation.flows.IOUSettleFlowResponder, subFlowVersion=CorDappFlow(platformVersion=11, corDappName=workflows-1.0, corDappHash=F8E3613207E5ABAEC38930FAA426F7BA91464AA72DAF3EFB74917A0BA71A146E), isEnabledTimedFlow=false), Inlined(flowClass=class net.corda.samples.obligation.flows.IOUSettleFlowResponder$call$signedTransactionFlow$1, subFlowVersion=CoreFlow(platformVersion=11), isEnabledTimedFlow=false), Inlined(flowClass=class net.corda.core.flows.ReceiveTransactionFlow, subFlowVersion=CoreFlow(platformVersion=11), isEnabledTimedFlow=false), Inlined(flowClass=class net.corda.core.internal.ResolveTransactionsFlow, subFlowVersion=CoreFlow(platformVersion=11), isEnabledTimedFlow=false)], numberOfSuspends=3, numberOfCommits=4), flowState=Started(flowIORequest=Sleep(wakeUpAfter=2023-01-31T07:40:30.034Z), frozenFiber=2962FA682BA4277A946CF1567897273DCE17559C89F97A3BAF4B357323C8DE8B), errorState=Clean, result=null, status=RUNNABLE, progressStep=Starting, flowIoRequest=Sleep, compatible=true), flowLogic=net.corda.samples.obligation.flows.IOUSettleFlowResponder@2f5cc37c, pendingDeduplicationHandlers=[], isFlowResumed=false, isWaitingForFuture=true, future=java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask@79a37fdd, isAnyCheckpointPersisted=true, isStartIdempotent=false, isRemoved=false, isKilled=false, isDead=false, senderUUID=3ecbc590-084c-4279-8d61-b997a352b464, reloadCheckpointAfterSuspendCount=null, numberOfCommits=4, lock=java.util.concurrent.Semaphore@7b5b718f[Permits = 0]), time=2023-01-31T07:40:30.034Z)
  Continuation: ProcessEvents
  Diff between previous and next state:
future: 
    null
    java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask@79a37fdd
isWaitingForFuture: 
    false
    true


 --- Transition of flow [1e1a8f4c-486e-4901-ba69-3c906954bdac] ---
  Timestamp: 2023-01-31T07:40:30.039Z
  Event: WakeUpSleepyFlow
  Actions: 
    CreateTransaction
  Continuation: Resume(result=class kotlin.Unit)
  Diff between previous and next state:
future: 
    java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask@79a37fdd
    null
isWaitingForFuture: 
    true
    false
isFlowResumed: 
    false
    true


 --- Transition of flow [1e1a8f4c-486e-4901-ba69-3c906954bdac] ---
  Timestamp: 2023-01-31T07:40:30.039Z
  Event: EnterSubFlow(subFlowClass=class net.corda.core.internal.FetchTransactionsFlow, subFlowVersion=CoreFlow(platformVersion=11), isEnabledTimedFlow=false)
  Actions: 
    
  Continuation: ProcessEvents
  Diff between previous and next state:
checkpoint.checkpointState.subFlowStack: 
    [Inlined(flowClass=class net.corda.samples.obligation.flows.IOUSettleFlowResponder, subFlowVersion=CorDappFlow(platformVersion=11, corDappName=workflows-1.0, corDappHash=F8E3613207E5ABAEC38930FAA426F7BA91464AA72DAF3EFB74917A0BA71A146E), isEnabledTimedFlow=false), Inlined(flowClass=class net.corda.samples.obligation.flows.IOUSettleFlowResponder$call$signedTransactionFlow$1, subFlowVersion=CoreFlow(platformVersion=11), isEnabledTimedFlow=false), Inlined(flowClass=class net.corda.core.flows.ReceiveTransactionFlow, subFlowVersion=CoreFlow(platformVersion=11), isEnabledTimedFlow=false), Inlined(flowClass=class net.corda.core.internal.ResolveTransactionsFlow, subFlowVersion=CoreFlow(platformVersion=11), isEnabledTimedFlow=false)]
    [Inlined(flowClass=class net.corda.samples.obligation.flows.IOUSettleFlowResponder, subFlowVersion=CorDappFlow(platformVersion=11, corDappName=workflows-1.0, corDappHash=F8E3613207E5ABAEC38930FAA426F7BA91464AA72DAF3EFB74917A0BA71A146E), isEnabledTimedFlow=false), Inlined(flowClass=class net.corda.samples.obligation.flows.IOUSettleFlowResponder$call$signedTransactionFlow$1, subFlowVersion=CoreFlow(platformVersion=11), isEnabledTimedFlow=false), Inlined(flowClass=class net.corda.core.flows.ReceiveTransactionFlow, subFlowVersion=CoreFlow(platformVersion=11), isEnabledTimedFlow=false), Inlined(flowClass=class net.corda.core.internal.ResolveTransactionsFlow, subFlowVersion=CoreFlow(platformVersion=11), isEnabledTimedFlow=false), Inlined(flowClass=class net.corda.core.internal.FetchTransactionsFlow, subFlowVersion=CoreFlow(platformVersion=11), isEnabledTimedFlow=false)]
checkpoint.timestamp: 
    2023-01-31T07:40:30.036Z
    2023-01-31T07:40:30.039Z


 --- Transition of flow [1e1a8f4c-486e-4901-ba69-3c906954bdac] ---
  Timestamp: 2023-01-31T07:40:30.039Z
  Event: LeaveSubFlow
  Actions: 
    
  Continuation: ProcessEvents
  Diff between previous and next state:
checkpoint.checkpointState.subFlowStack: 
    [Inlined(flowClass=class net.corda.samples.obligation.flows.IOUSettleFlowResponder, subFlowVersion=CorDappFlow(platformVersion=11, corDappName=workflows-1.0, corDappHash=F8E3613207E5ABAEC38930FAA426F7BA91464AA72DAF3EFB74917A0BA71A146E), isEnabledTimedFlow=false), Inlined(flowClass=class net.corda.samples.obligation.flows.IOUSettleFlowResponder$call$signedTransactionFlow$1, subFlowVersion=CoreFlow(platformVersion=11), isEnabledTimedFlow=false), Inlined(flowClass=class net.corda.core.flows.ReceiveTransactionFlow, subFlowVersion=CoreFlow(platformVersion=11), isEnabledTimedFlow=false), Inlined(flowClass=class net.corda.core.internal.ResolveTransactionsFlow, subFlowVersion=CoreFlow(platformVersion=11), isEnabledTimedFlow=false), Inlined(flowClass=class net.corda.core.internal.FetchTransactionsFlow, subFlowVersion=CoreFlow(platformVersion=11), isEnabledTimedFlow=false)]
    [Inlined(flowClass=class net.corda.samples.obligation.flows.IOUSettleFlowResponder, subFlowVersion=CorDappFlow(platformVersion=11, corDappName=workflows-1.0, corDappHash=F8E3613207E5ABAEC38930FAA426F7BA91464AA72DAF3EFB74917A0BA71A146E), isEnabledTimedFlow=false), Inlined(flowClass=class net.corda.samples.obligation.flows.IOUSettleFlowResponder$call$signedTransactionFlow$1, subFlowVersion=CoreFlow(platformVersion=11), isEnabledTimedFlow=false), Inlined(flowClass=class net.corda.core.flows.ReceiveTransactionFlow, subFlowVersion=CoreFlow(platformVersion=11), isEnabledTimedFlow=false), Inlined(flowClass=class net.corda.core.internal.ResolveTransactionsFlow, subFlowVersion=CoreFlow(platformVersion=11), isEnabledTimedFlow=false)]


 --- Transition of flow [1e1a8f4c-486e-4901-ba69-3c906954bdac] ---
  Timestamp: 2023-01-31T07:40:30.043Z
  Event: Suspend(ioRequest=Send(sessionToMessage={FlowSessionImpl(destination=O=Mock Company 1, L=London, C=GB, sourceSessionId=SessionId(toLong=2957585445716046757))=768AED61FD2A58D74D7316731407E0600065080E1F3E6397EE4FA5AEFEE79295}), maySkipCheckpoint=false, fiber=B26567D2B83E7FBD8B00E9E3AC6D41CB2CA731B4AACF6555E3E9BCBAD4F439E2, currentStep=Starting)
  Actions: 
    PersistCheckpoint(id=[1e1a8f4c-486e-4901-ba69-3c906954bdac], checkpoint=Checkpoint(checkpointState=CheckpointState(invocationContext=InvocationContext(origin=Peer(party=O=Mock Company 1, L=London, C=GB), trace=Trace(invocationId=e9eb1dcd-004a-4c84-aa69-318e9319d299, timestamp: 2023-01-31T07:40:29.984Z, entityType: Invocation, sessionId=e9eb1dcd-004a-4c84-aa69-318e9319d299, timestamp: 2023-01-31T07:40:29.984Z, entityType: Session), actor=null, externalTrace=null, impersonatedActor=null, arguments=[], clientId=null), ourIdentity=O=Mock Company 3, L=London, C=GB, sessions={SessionId(toLong=2957585445716046757)=Initiated(peerParty=O=Mock Company 1, L=London, C=GB, peerFlowInfo=FlowInfo(flowVersion=1, appName=<unknown>), receivedMessages=[], otherSideErrored=false, peerSinkSessionId=SessionId(toLong=-3358756275887911989), deduplicationSeed=D--3358756275887911989-5594156702427061583)}, sessionsToBeClosed=[], subFlowStack=[Inlined(flowClass=class net.corda.samples.obligation.flows.IOUSettleFlowResponder, subFlowVersion=CorDappFlow(platformVersion=11, corDappName=workflows-1.0, corDappHash=F8E3613207E5ABAEC38930FAA426F7BA91464AA72DAF3EFB74917A0BA71A146E), isEnabledTimedFlow=false), Inlined(flowClass=class net.corda.samples.obligation.flows.IOUSettleFlowResponder$call$signedTransactionFlow$1, subFlowVersion=CoreFlow(platformVersion=11), isEnabledTimedFlow=false), Inlined(flowClass=class net.corda.core.flows.ReceiveTransactionFlow, subFlowVersion=CoreFlow(platformVersion=11), isEnabledTimedFlow=false), Inlined(flowClass=class net.corda.core.internal.ResolveTransactionsFlow, subFlowVersion=CoreFlow(platformVersion=11), isEnabledTimedFlow=false)], numberOfSuspends=4, numberOfCommits=5), flowState=Started(flowIORequest=Send(sessionToMessage={FlowSessionImpl(destination=O=Mock Company 1, L=London, C=GB, sourceSessionId=SessionId(toLong=2957585445716046757))=768AED61FD2A58D74D7316731407E0600065080E1F3E6397EE4FA5AEFEE79295}), frozenFiber=B26567D2B83E7FBD8B00E9E3AC6D41CB2CA731B4AACF6555E3E9BCBAD4F439E2), errorState=Clean, result=null, status=RUNNABLE, progressStep=Starting, flowIoRequest=Send, compatible=true), isCheckpointUpdate=true)
    PersistDeduplicationFacts(deduplicationHandlers=[])
    CommitTransaction
    AcknowledgeMessages(deduplicationHandlers=[])
    ScheduleEvent(event=DoRemainingWork)
  Continuation: ProcessEvents
  Diff between previous and next state:
numberOfCommits: 
    4
    5
checkpoint.flowIoRequest: 
    Sleep
    Send
checkpoint.checkpointState.numberOfCommits: 
    4
    5
checkpoint.checkpointState.numberOfSuspends: 
    3
    4
checkpoint.flowState.frozenFiber.hash: 
    2962FA682BA4277A946CF1567897273DCE17559C89F97A3BAF4B357323C8DE8B
    B26567D2B83E7FBD8B00E9E3AC6D41CB2CA731B4AACF6555E3E9BCBAD4F439E2
checkpoint.flowState.flowIORequest: 
    Sleep(wakeUpAfter=2023-01-31T07:40:30.034Z)
    Send(sessionToMessage={FlowSessionImpl(destination=O=Mock Company 1, L=London, C=GB, sourceSessionId=SessionId(toLong=2957585445716046757))=768AED61FD2A58D74D7316731407E0600065080E1F3E6397EE4FA5AEFEE79295})
checkpoint.timestamp: 
    2023-01-31T07:40:30.039Z
    2023-01-31T07:40:30.042Z
isFlowResumed: 
    true
    false


 --- Transition of flow [1e1a8f4c-486e-4901-ba69-3c906954bdac] ---
  Timestamp: 2023-01-31T07:40:30.044Z
  Event: DoRemainingWork
  Actions: 
    SendMultiple(sendInitial=[], sendExisting=[SendExisting(peerParty=O=Mock Company 1, L=London, C=GB, message=ExistingSessionMessage(recipientSessionId=SessionId(toLong=-3358756275887911989), payload=DataSessionMessage(payload=class net.corda.core.serialization.SerializedBytes)), deduplicationId=SenderDeduplicationId(deduplicationId=DeduplicationId(toString=N-D--3358756275887911989-5594156702427061583-4-0), senderUUID=3ecbc590-084c-4279-8d61-b997a352b464))])
    CreateTransaction
  Continuation: Resume(result=class kotlin.Unit)
  Diff between previous and next state:
isFlowResumed: 
    false
    true


 --- Transition of flow [1e1a8f4c-486e-4901-ba69-3c906954bdac] ---
  Timestamp: 2023-01-31T07:40:30.311Z
  Event: LeaveSubFlow
  Actions: 
    
  Continuation: ProcessEvents
  Diff between previous and next state:
checkpoint.checkpointState.subFlowStack: 
    [Inlined(flowClass=class net.corda.samples.obligation.flows.IOUSettleFlowResponder, subFlowVersion=CorDappFlow(platformVersion=11, corDappName=workflows-1.0, corDappHash=F8E3613207E5ABAEC38930FAA426F7BA91464AA72DAF3EFB74917A0BA71A146E), isEnabledTimedFlow=false), Inlined(flowClass=class net.corda.samples.obligation.flows.IOUSettleFlowResponder$call$signedTransactionFlow$1, subFlowVersion=CoreFlow(platformVersion=11), isEnabledTimedFlow=false), Inlined(flowClass=class net.corda.core.flows.ReceiveTransactionFlow, subFlowVersion=CoreFlow(platformVersion=11), isEnabledTimedFlow=false), Inlined(flowClass=class net.corda.core.internal.ResolveTransactionsFlow, subFlowVersion=CoreFlow(platformVersion=11), isEnabledTimedFlow=false)]
    [Inlined(flowClass=class net.corda.samples.obligation.flows.IOUSettleFlowResponder, subFlowVersion=CorDappFlow(platformVersion=11, corDappName=workflows-1.0, corDappHash=F8E3613207E5ABAEC38930FAA426F7BA91464AA72DAF3EFB74917A0BA71A146E), isEnabledTimedFlow=false), Inlined(flowClass=class net.corda.samples.obligation.flows.IOUSettleFlowResponder$call$signedTransactionFlow$1, subFlowVersion=CoreFlow(platformVersion=11), isEnabledTimedFlow=false), Inlined(flowClass=class net.corda.core.flows.ReceiveTransactionFlow, subFlowVersion=CoreFlow(platformVersion=11), isEnabledTimedFlow=false)]
checkpoint.timestamp: 
    2023-01-31T07:40:30.043Z
    2023-01-31T07:40:30.311Z


 --- Transition of flow [1e1a8f4c-486e-4901-ba69-3c906954bdac] ---
  Timestamp: 2023-01-31T07:40:30.380Z
  Event: LeaveSubFlow
  Actions: 
    
  Continuation: ProcessEvents
  Diff between previous and next state:
checkpoint.checkpointState.subFlowStack: 
    [Inlined(flowClass=class net.corda.samples.obligation.flows.IOUSettleFlowResponder, subFlowVersion=CorDappFlow(platformVersion=11, corDappName=workflows-1.0, corDappHash=F8E3613207E5ABAEC38930FAA426F7BA91464AA72DAF3EFB74917A0BA71A146E), isEnabledTimedFlow=false), Inlined(flowClass=class net.corda.samples.obligation.flows.IOUSettleFlowResponder$call$signedTransactionFlow$1, subFlowVersion=CoreFlow(platformVersion=11), isEnabledTimedFlow=false), Inlined(flowClass=class net.corda.core.flows.ReceiveTransactionFlow, subFlowVersion=CoreFlow(platformVersion=11), isEnabledTimedFlow=false)]
    [Inlined(flowClass=class net.corda.samples.obligation.flows.IOUSettleFlowResponder, subFlowVersion=CorDappFlow(platformVersion=11, corDappName=workflows-1.0, corDappHash=F8E3613207E5ABAEC38930FAA426F7BA91464AA72DAF3EFB74917A0BA71A146E), isEnabledTimedFlow=false), Inlined(flowClass=class net.corda.samples.obligation.flows.IOUSettleFlowResponder$call$signedTransactionFlow$1, subFlowVersion=CoreFlow(platformVersion=11), isEnabledTimedFlow=false)]
checkpoint.timestamp: 
    2023-01-31T07:40:30.311Z
    2023-01-31T07:40:30.380Z


 --- Transition of flow [1e1a8f4c-486e-4901-ba69-3c906954bdac] ---
  Timestamp: 2023-01-31T07:40:30.384Z
  Event: Suspend(ioRequest=Receive(sessions=[FlowSessionImpl(destination=O=Mock Company 1, L=London, C=GB, sourceSessionId=SessionId(toLong=2957585445716046757))]), maySkipCheckpoint=false, fiber=C64670B7B2159663E44B67BFCE4C8E9E0E0846C5C86D05673206CB96894FEEC8, currentStep=Starting)
  Actions: 
    PersistCheckpoint(id=[1e1a8f4c-486e-4901-ba69-3c906954bdac], checkpoint=Checkpoint(checkpointState=CheckpointState(invocationContext=InvocationContext(origin=Peer(party=O=Mock Company 1, L=London, C=GB), trace=Trace(invocationId=e9eb1dcd-004a-4c84-aa69-318e9319d299, timestamp: 2023-01-31T07:40:29.984Z, entityType: Invocation, sessionId=e9eb1dcd-004a-4c84-aa69-318e9319d299, timestamp: 2023-01-31T07:40:29.984Z, entityType: Session), actor=null, externalTrace=null, impersonatedActor=null, arguments=[], clientId=null), ourIdentity=O=Mock Company 3, L=London, C=GB, sessions={SessionId(toLong=2957585445716046757)=Initiated(peerParty=O=Mock Company 1, L=London, C=GB, peerFlowInfo=FlowInfo(flowVersion=1, appName=<unknown>), receivedMessages=[], otherSideErrored=false, peerSinkSessionId=SessionId(toLong=-3358756275887911989), deduplicationSeed=D--3358756275887911989-5594156702427061583)}, sessionsToBeClosed=[], subFlowStack=[Inlined(flowClass=class net.corda.samples.obligation.flows.IOUSettleFlowResponder, subFlowVersion=CorDappFlow(platformVersion=11, corDappName=workflows-1.0, corDappHash=F8E3613207E5ABAEC38930FAA426F7BA91464AA72DAF3EFB74917A0BA71A146E), isEnabledTimedFlow=false), Inlined(flowClass=class net.corda.samples.obligation.flows.IOUSettleFlowResponder$call$signedTransactionFlow$1, subFlowVersion=CoreFlow(platformVersion=11), isEnabledTimedFlow=false)], numberOfSuspends=5, numberOfCommits=6), flowState=Started(flowIORequest=Receive(sessions=[FlowSessionImpl(destination=O=Mock Company 1, L=London, C=GB, sourceSessionId=SessionId(toLong=2957585445716046757))]), frozenFiber=C64670B7B2159663E44B67BFCE4C8E9E0E0846C5C86D05673206CB96894FEEC8), errorState=Clean, result=null, status=RUNNABLE, progressStep=Starting, flowIoRequest=Receive, compatible=true), isCheckpointUpdate=true)
    PersistDeduplicationFacts(deduplicationHandlers=[])
    CommitTransaction
    AcknowledgeMessages(deduplicationHandlers=[])
    ScheduleEvent(event=DoRemainingWork)
  Continuation: ProcessEvents
  Diff between previous and next state:
numberOfCommits: 
    5
    6
checkpoint.flowIoRequest: 
    Send
    Receive
checkpoint.checkpointState.numberOfCommits: 
    5
    6
checkpoint.checkpointState.numberOfSuspends: 
    4
    5
checkpoint.flowState.frozenFiber.hash: 
    B26567D2B83E7FBD8B00E9E3AC6D41CB2CA731B4AACF6555E3E9BCBAD4F439E2
    C64670B7B2159663E44B67BFCE4C8E9E0E0846C5C86D05673206CB96894FEEC8
checkpoint.flowState.flowIORequest: 
    Send(sessionToMessage={FlowSessionImpl(destination=O=Mock Company 1, L=London, C=GB, sourceSessionId=SessionId(toLong=2957585445716046757))=768AED61FD2A58D74D7316731407E0600065080E1F3E6397EE4FA5AEFEE79295})
    Receive(sessions=[FlowSessionImpl(destination=O=Mock Company 1, L=London, C=GB, sourceSessionId=SessionId(toLong=2957585445716046757))])
checkpoint.timestamp: 
    2023-01-31T07:40:30.380Z
    2023-01-31T07:40:30.382Z
isFlowResumed: 
    true
    false


 --- Transition of flow [1e1a8f4c-486e-4901-ba69-3c906954bdac] ---
  Timestamp: 2023-01-31T07:40:30.384Z
  Event: DoRemainingWork
  Actions: 
    
  Continuation: ProcessEvents
  Diff between previous and next state:
null

 --- Transition of flow [1e1a8f4c-486e-4901-ba69-3c906954bdac] ---
  Timestamp: 2023-01-31T07:40:30.395Z
  Event: DeliverSessionMessage(sessionMessage=ExistingSessionMessage(recipientSessionId=SessionId(toLong=2957585445716046757), payload=DataSessionMessage(payload=class net.corda.core.serialization.SerializedBytes)), deduplicationHandler=net.corda.testing.node.internal.MockNodeMessagingService$InMemoryDeduplicationHandler@3e0c9b0d, sender=O=Mock Company 1, L=London, C=GB)
  Actions: 
    ScheduleEvent(event=DoRemainingWork)
  Continuation: ProcessEvents
  Diff between previous and next state:
pendingDeduplicationHandlers: 
    []
    [net.corda.testing.node.internal.MockNodeMessagingService$InMemoryDeduplicationHandler@3e0c9b0d]
checkpoint.checkpointState.sessions.SessionId(toLong=2957585445716046757).receivedMessages.isEmpty: 
    true
    false
checkpoint.timestamp: 
    2023-01-31T07:40:30.384Z
    2023-01-31T07:40:30.394Z


 --- Transition of flow [1e1a8f4c-486e-4901-ba69-3c906954bdac] ---
  Timestamp: 2023-01-31T07:40:30.395Z
  Event: DoRemainingWork
  Actions: 
    CreateTransaction
  Continuation: Resume(result=class java.util.LinkedHashMap)
  Diff between previous and next state:
checkpoint.checkpointState.sessions.SessionId(toLong=2957585445716046757).receivedMessages.isEmpty: 
    false
    true
checkpoint.timestamp: 
    2023-01-31T07:40:30.394Z
    2023-01-31T07:40:30.395Z
isFlowResumed: 
    false
    true


 --- Transition of flow [1e1a8f4c-486e-4901-ba69-3c906954bdac] ---
  Timestamp: 2023-01-31T07:40:30.404Z
  Event: Suspend(ioRequest=Send(sessionToMessage={FlowSessionImpl(destination=O=Mock Company 1, L=London, C=GB, sourceSessionId=SessionId(toLong=2957585445716046757))=8E1C1E99010E72DB35C29D8833E0A2706E7A506FFDD68044BB744F6F61FED290}), maySkipCheckpoint=false, fiber=22034643D3722F7F60915FC28D67D520490A2E8AC9D9B5377321E7165F065089, currentStep=Starting)
  Actions: 
    PersistCheckpoint(id=[1e1a8f4c-486e-4901-ba69-3c906954bdac], checkpoint=Checkpoint(checkpointState=CheckpointState(invocationContext=InvocationContext(origin=Peer(party=O=Mock Company 1, L=London, C=GB), trace=Trace(invocationId=e9eb1dcd-004a-4c84-aa69-318e9319d299, timestamp: 2023-01-31T07:40:29.984Z, entityType: Invocation, sessionId=e9eb1dcd-004a-4c84-aa69-318e9319d299, timestamp: 2023-01-31T07:40:29.984Z, entityType: Session), actor=null, externalTrace=null, impersonatedActor=null, arguments=[], clientId=null), ourIdentity=O=Mock Company 3, L=London, C=GB, sessions={SessionId(toLong=2957585445716046757)=Initiated(peerParty=O=Mock Company 1, L=London, C=GB, peerFlowInfo=FlowInfo(flowVersion=1, appName=<unknown>), receivedMessages=[], otherSideErrored=false, peerSinkSessionId=SessionId(toLong=-3358756275887911989), deduplicationSeed=D--3358756275887911989-5594156702427061583)}, sessionsToBeClosed=[], subFlowStack=[Inlined(flowClass=class net.corda.samples.obligation.flows.IOUSettleFlowResponder, subFlowVersion=CorDappFlow(platformVersion=11, corDappName=workflows-1.0, corDappHash=F8E3613207E5ABAEC38930FAA426F7BA91464AA72DAF3EFB74917A0BA71A146E), isEnabledTimedFlow=false), Inlined(flowClass=class net.corda.samples.obligation.flows.IOUSettleFlowResponder$call$signedTransactionFlow$1, subFlowVersion=CoreFlow(platformVersion=11), isEnabledTimedFlow=false)], numberOfSuspends=6, numberOfCommits=7), flowState=Started(flowIORequest=Send(sessionToMessage={FlowSessionImpl(destination=O=Mock Company 1, L=London, C=GB, sourceSessionId=SessionId(toLong=2957585445716046757))=8E1C1E99010E72DB35C29D8833E0A2706E7A506FFDD68044BB744F6F61FED290}), frozenFiber=22034643D3722F7F60915FC28D67D520490A2E8AC9D9B5377321E7165F065089), errorState=Clean, result=null, status=RUNNABLE, progressStep=Starting, flowIoRequest=Send, compatible=true), isCheckpointUpdate=true)
    PersistDeduplicationFacts(deduplicationHandlers=[net.corda.testing.node.internal.MockNodeMessagingService$InMemoryDeduplicationHandler@3e0c9b0d])
    CommitTransaction
    AcknowledgeMessages(deduplicationHandlers=[net.corda.testing.node.internal.MockNodeMessagingService$InMemoryDeduplicationHandler@3e0c9b0d])
    ScheduleEvent(event=DoRemainingWork)
  Continuation: ProcessEvents
  Diff between previous and next state:
pendingDeduplicationHandlers: 
    [net.corda.testing.node.internal.MockNodeMessagingService$InMemoryDeduplicationHandler@3e0c9b0d]
    []
numberOfCommits: 
    6
    7
checkpoint.flowIoRequest: 
    Receive
    Send
checkpoint.checkpointState.numberOfCommits: 
    6
    7
checkpoint.checkpointState.numberOfSuspends: 
    5
    6
checkpoint.flowState.frozenFiber.hash: 
    C64670B7B2159663E44B67BFCE4C8E9E0E0846C5C86D05673206CB96894FEEC8
    22034643D3722F7F60915FC28D67D520490A2E8AC9D9B5377321E7165F065089
checkpoint.flowState.flowIORequest: 
    Receive(sessions=[FlowSessionImpl(destination=O=Mock Company 1, L=London, C=GB, sourceSessionId=SessionId(toLong=2957585445716046757))])
    Send(sessionToMessage={FlowSessionImpl(destination=O=Mock Company 1, L=London, C=GB, sourceSessionId=SessionId(toLong=2957585445716046757))=8E1C1E99010E72DB35C29D8833E0A2706E7A506FFDD68044BB744F6F61FED290})
checkpoint.timestamp: 
    2023-01-31T07:40:30.395Z
    2023-01-31T07:40:30.402Z
isFlowResumed: 
    true
    false


 --- Transition of flow [1e1a8f4c-486e-4901-ba69-3c906954bdac] ---
  Timestamp: 2023-01-31T07:40:30.405Z
  Event: DoRemainingWork
  Actions: 
    SendMultiple(sendInitial=[], sendExisting=[SendExisting(peerParty=O=Mock Company 1, L=London, C=GB, message=ExistingSessionMessage(recipientSessionId=SessionId(toLong=-3358756275887911989), payload=DataSessionMessage(payload=class net.corda.core.serialization.SerializedBytes)), deduplicationId=SenderDeduplicationId(deduplicationId=DeduplicationId(toString=N-D--3358756275887911989-5594156702427061583-6-0), senderUUID=3ecbc590-084c-4279-8d61-b997a352b464))])
    CreateTransaction
  Continuation: Resume(result=class kotlin.Unit)
  Diff between previous and next state:
isFlowResumed: 
    false
    true


 --- Transition of flow [1e1a8f4c-486e-4901-ba69-3c906954bdac] ---
  Timestamp: 2023-01-31T07:40:30.405Z
  Event: LeaveSubFlow
  Actions: 
    
  Continuation: ProcessEvents
  Diff between previous and next state:
checkpoint.checkpointState.subFlowStack: 
    [Inlined(flowClass=class net.corda.samples.obligation.flows.IOUSettleFlowResponder, subFlowVersion=CorDappFlow(platformVersion=11, corDappName=workflows-1.0, corDappHash=F8E3613207E5ABAEC38930FAA426F7BA91464AA72DAF3EFB74917A0BA71A146E), isEnabledTimedFlow=false), Inlined(flowClass=class net.corda.samples.obligation.flows.IOUSettleFlowResponder$call$signedTransactionFlow$1, subFlowVersion=CoreFlow(platformVersion=11), isEnabledTimedFlow=false)]
    [Inlined(flowClass=class net.corda.samples.obligation.flows.IOUSettleFlowResponder, subFlowVersion=CorDappFlow(platformVersion=11, corDappName=workflows-1.0, corDappHash=F8E3613207E5ABAEC38930FAA426F7BA91464AA72DAF3EFB74917A0BA71A146E), isEnabledTimedFlow=false)]
checkpoint.timestamp: 
    2023-01-31T07:40:30.404Z
    2023-01-31T07:40:30.405Z


 --- Transition of flow [1e1a8f4c-486e-4901-ba69-3c906954bdac] ---
  Timestamp: 2023-01-31T07:40:30.405Z
  Event: EnterSubFlow(subFlowClass=class net.corda.core.flows.ReceiveFinalityFlow, subFlowVersion=CoreFlow(platformVersion=11), isEnabledTimedFlow=false)
  Actions: 
    
  Continuation: ProcessEvents
  Diff between previous and next state:
checkpoint.checkpointState.subFlowStack: 
    [Inlined(flowClass=class net.corda.samples.obligation.flows.IOUSettleFlowResponder, subFlowVersion=CorDappFlow(platformVersion=11, corDappName=workflows-1.0, corDappHash=F8E3613207E5ABAEC38930FAA426F7BA91464AA72DAF3EFB74917A0BA71A146E), isEnabledTimedFlow=false)]
    [Inlined(flowClass=class net.corda.samples.obligation.flows.IOUSettleFlowResponder, subFlowVersion=CorDappFlow(platformVersion=11, corDappName=workflows-1.0, corDappHash=F8E3613207E5ABAEC38930FAA426F7BA91464AA72DAF3EFB74917A0BA71A146E), isEnabledTimedFlow=false), Inlined(flowClass=class net.corda.core.flows.ReceiveFinalityFlow, subFlowVersion=CoreFlow(platformVersion=11), isEnabledTimedFlow=false)]


 --- Transition of flow [1e1a8f4c-486e-4901-ba69-3c906954bdac] ---
  Timestamp: 2023-01-31T07:40:30.405Z
  Event: EnterSubFlow(subFlowClass=class net.corda.core.flows.ReceiveFinalityFlow$call$1, subFlowVersion=CoreFlow(platformVersion=11), isEnabledTimedFlow=false)
  Actions: 
    
  Continuation: ProcessEvents
  Diff between previous and next state:
checkpoint.checkpointState.subFlowStack: 
    [Inlined(flowClass=class net.corda.samples.obligation.flows.IOUSettleFlowResponder, subFlowVersion=CorDappFlow(platformVersion=11, corDappName=workflows-1.0, corDappHash=F8E3613207E5ABAEC38930FAA426F7BA91464AA72DAF3EFB74917A0BA71A146E), isEnabledTimedFlow=false), Inlined(flowClass=class net.corda.core.flows.ReceiveFinalityFlow, subFlowVersion=CoreFlow(platformVersion=11), isEnabledTimedFlow=false)]
    [Inlined(flowClass=class net.corda.samples.obligation.flows.IOUSettleFlowResponder, subFlowVersion=CorDappFlow(platformVersion=11, corDappName=workflows-1.0, corDappHash=F8E3613207E5ABAEC38930FAA426F7BA91464AA72DAF3EFB74917A0BA71A146E), isEnabledTimedFlow=false), Inlined(flowClass=class net.corda.core.flows.ReceiveFinalityFlow, subFlowVersion=CoreFlow(platformVersion=11), isEnabledTimedFlow=false), Inlined(flowClass=class net.corda.core.flows.ReceiveFinalityFlow$call$1, subFlowVersion=CoreFlow(platformVersion=11), isEnabledTimedFlow=false)]


 --- Transition of flow [1e1a8f4c-486e-4901-ba69-3c906954bdac] ---
  Timestamp: 2023-01-31T07:40:30.408Z
  Event: Suspend(ioRequest=Receive(sessions=[FlowSessionImpl(destination=O=Mock Company 1, L=London, C=GB, sourceSessionId=SessionId(toLong=2957585445716046757))]), maySkipCheckpoint=false, fiber=711131C8D592A3F58A37876F243F6D3583E8B99746D7CB0B495F709E00D68FBB, currentStep=Starting)
  Actions: 
    PersistCheckpoint(id=[1e1a8f4c-486e-4901-ba69-3c906954bdac], checkpoint=Checkpoint(checkpointState=CheckpointState(invocationContext=InvocationContext(origin=Peer(party=O=Mock Company 1, L=London, C=GB), trace=Trace(invocationId=e9eb1dcd-004a-4c84-aa69-318e9319d299, timestamp: 2023-01-31T07:40:29.984Z, entityType: Invocation, sessionId=e9eb1dcd-004a-4c84-aa69-318e9319d299, timestamp: 2023-01-31T07:40:29.984Z, entityType: Session), actor=null, externalTrace=null, impersonatedActor=null, arguments=[], clientId=null), ourIdentity=O=Mock Company 3, L=London, C=GB, sessions={SessionId(toLong=2957585445716046757)=Initiated(peerParty=O=Mock Company 1, L=London, C=GB, peerFlowInfo=FlowInfo(flowVersion=1, appName=<unknown>), receivedMessages=[], otherSideErrored=false, peerSinkSessionId=SessionId(toLong=-3358756275887911989), deduplicationSeed=D--3358756275887911989-5594156702427061583)}, sessionsToBeClosed=[], subFlowStack=[Inlined(flowClass=class net.corda.samples.obligation.flows.IOUSettleFlowResponder, subFlowVersion=CorDappFlow(platformVersion=11, corDappName=workflows-1.0, corDappHash=F8E3613207E5ABAEC38930FAA426F7BA91464AA72DAF3EFB74917A0BA71A146E), isEnabledTimedFlow=false), Inlined(flowClass=class net.corda.core.flows.ReceiveFinalityFlow, subFlowVersion=CoreFlow(platformVersion=11), isEnabledTimedFlow=false), Inlined(flowClass=class net.corda.core.flows.ReceiveFinalityFlow$call$1, subFlowVersion=CoreFlow(platformVersion=11), isEnabledTimedFlow=false)], numberOfSuspends=7, numberOfCommits=8), flowState=Started(flowIORequest=Receive(sessions=[FlowSessionImpl(destination=O=Mock Company 1, L=London, C=GB, sourceSessionId=SessionId(toLong=2957585445716046757))]), frozenFiber=711131C8D592A3F58A37876F243F6D3583E8B99746D7CB0B495F709E00D68FBB), errorState=Clean, result=null, status=RUNNABLE, progressStep=Starting, flowIoRequest=Receive, compatible=true), isCheckpointUpdate=true)
    PersistDeduplicationFacts(deduplicationHandlers=[])
    CommitTransaction
    AcknowledgeMessages(deduplicationHandlers=[])
    ScheduleEvent(event=DoRemainingWork)
  Continuation: ProcessEvents
  Diff between previous and next state:
numberOfCommits: 
    7
    8
checkpoint.flowIoRequest: 
    Send
    Receive
checkpoint.checkpointState.numberOfCommits: 
    7
    8
checkpoint.checkpointState.numberOfSuspends: 
    6
    7
checkpoint.flowState.frozenFiber.hash: 
    22034643D3722F7F60915FC28D67D520490A2E8AC9D9B5377321E7165F065089
    711131C8D592A3F58A37876F243F6D3583E8B99746D7CB0B495F709E00D68FBB
checkpoint.flowState.flowIORequest: 
    Send(sessionToMessage={FlowSessionImpl(destination=O=Mock Company 1, L=London, C=GB, sourceSessionId=SessionId(toLong=2957585445716046757))=8E1C1E99010E72DB35C29D8833E0A2706E7A506FFDD68044BB744F6F61FED290})
    Receive(sessions=[FlowSessionImpl(destination=O=Mock Company 1, L=London, C=GB, sourceSessionId=SessionId(toLong=2957585445716046757))])
checkpoint.timestamp: 
    2023-01-31T07:40:30.405Z
    2023-01-31T07:40:30.407Z
isFlowResumed: 
    true
    false


 --- Transition of flow [1e1a8f4c-486e-4901-ba69-3c906954bdac] ---
  Timestamp: 2023-01-31T07:40:30.408Z
  Event: DoRemainingWork
  Actions: 
    
  Continuation: ProcessEvents
  Diff between previous and next state:
null

 --- Transition of flow [1e1a8f4c-486e-4901-ba69-3c906954bdac] ---
  Timestamp: 2023-01-31T07:40:30.598Z
  Event: DeliverSessionMessage(sessionMessage=ExistingSessionMessage(recipientSessionId=SessionId(toLong=2957585445716046757), payload=ErrorSessionMessage(flowException=null, errorId=-4448502163904690932)), deduplicationHandler=net.corda.testing.node.internal.MockNodeMessagingService$InMemoryDeduplicationHandler@e7831f6, sender=O=Mock Company 1, L=London, C=GB)
  Actions: 
    ScheduleEvent(event=DoRemainingWork)
  Continuation: ProcessEvents
  Diff between previous and next state:
pendingDeduplicationHandlers: 
    []
    [net.corda.testing.node.internal.MockNodeMessagingService$InMemoryDeduplicationHandler@e7831f6]
checkpoint.checkpointState.sessions.SessionId(toLong=2957585445716046757).receivedMessages.isEmpty: 
    true
    false
checkpoint.timestamp: 
    2023-01-31T07:40:30.408Z
    2023-01-31T07:40:30.598Z


 --- Transition of flow [1e1a8f4c-486e-4901-ba69-3c906954bdac] ---
  Timestamp: 2023-01-31T07:40:30.599Z
  Event: DoRemainingWork
  Actions: 
    CreateTransaction
  Continuation: Throw(throwable=net.corda.core.flows.UnexpectedFlowEndException: Counter-flow errored)
  Diff between previous and next state:
checkpoint.checkpointState.sessions.SessionId(toLong=2957585445716046757).receivedMessages.isEmpty: 
    false
    true
checkpoint.checkpointState.sessions.SessionId(toLong=2957585445716046757).otherSideErrored: 
    false
    true
checkpoint.timestamp: 
    2023-01-31T07:40:30.598Z
    2023-01-31T07:40:30.599Z
isFlowResumed: 
    false
    true


 --- Transition of flow [1e1a8f4c-486e-4901-ba69-3c906954bdac] ---
  Timestamp: 2023-01-31T07:40:30.600Z
  Event: LeaveSubFlow
  Actions: 
    
  Continuation: ProcessEvents
  Diff between previous and next state:
checkpoint.checkpointState.subFlowStack: 
    [Inlined(flowClass=class net.corda.samples.obligation.flows.IOUSettleFlowResponder, subFlowVersion=CorDappFlow(platformVersion=11, corDappName=workflows-1.0, corDappHash=F8E3613207E5ABAEC38930FAA426F7BA91464AA72DAF3EFB74917A0BA71A146E), isEnabledTimedFlow=false), Inlined(flowClass=class net.corda.core.flows.ReceiveFinalityFlow, subFlowVersion=CoreFlow(platformVersion=11), isEnabledTimedFlow=false), Inlined(flowClass=class net.corda.core.flows.ReceiveFinalityFlow$call$1, subFlowVersion=CoreFlow(platformVersion=11), isEnabledTimedFlow=false)]
    [Inlined(flowClass=class net.corda.samples.obligation.flows.IOUSettleFlowResponder, subFlowVersion=CorDappFlow(platformVersion=11, corDappName=workflows-1.0, corDappHash=F8E3613207E5ABAEC38930FAA426F7BA91464AA72DAF3EFB74917A0BA71A146E), isEnabledTimedFlow=false), Inlined(flowClass=class net.corda.core.flows.ReceiveFinalityFlow, subFlowVersion=CoreFlow(platformVersion=11), isEnabledTimedFlow=false)]
checkpoint.timestamp: 
    2023-01-31T07:40:30.599Z
    2023-01-31T07:40:30.600Z


 --- Transition of flow [1e1a8f4c-486e-4901-ba69-3c906954bdac] ---
  Timestamp: 2023-01-31T07:40:30.600Z
  Event: LeaveSubFlow
  Actions: 
    
  Continuation: ProcessEvents
  Diff between previous and next state:
checkpoint.checkpointState.subFlowStack: 
    [Inlined(flowClass=class net.corda.samples.obligation.flows.IOUSettleFlowResponder, subFlowVersion=CorDappFlow(platformVersion=11, corDappName=workflows-1.0, corDappHash=F8E3613207E5ABAEC38930FAA426F7BA91464AA72DAF3EFB74917A0BA71A146E), isEnabledTimedFlow=false), Inlined(flowClass=class net.corda.core.flows.ReceiveFinalityFlow, subFlowVersion=CoreFlow(platformVersion=11), isEnabledTimedFlow=false)]
    [Inlined(flowClass=class net.corda.samples.obligation.flows.IOUSettleFlowResponder, subFlowVersion=CorDappFlow(platformVersion=11, corDappName=workflows-1.0, corDappHash=F8E3613207E5ABAEC38930FAA426F7BA91464AA72DAF3EFB74917A0BA71A146E), isEnabledTimedFlow=false)]


 --- Transition of flow [1e1a8f4c-486e-4901-ba69-3c906954bdac] ---
  Timestamp: 2023-01-31T07:40:30.601Z
  Event: Error(exception=net.corda.core.flows.UnexpectedFlowEndException: Counter-flow errored, rollback=true)
  Actions: 
    RollbackTransaction
    ScheduleEvent(event=DoRemainingWork)
  Continuation: ProcessEvents
  Diff between previous and next state:
checkpoint.errorState: 
    Clean
    Errored(errors=[FlowError(errorId=-4448502163904690932, exception=net.corda.core.flows.UnexpectedFlowEndException: Counter-flow errored)], propagatedIndex=0, propagating=false)
isFlowResumed: 
    true
    false


 --- Transition of flow [1e1a8f4c-486e-4901-ba69-3c906954bdac] ---
  Timestamp: 2023-01-31T07:40:30.602Z
  Event: DoRemainingWork
  Actions: 
    
  Continuation: ProcessEvents
  Diff between previous and next state:
null

 --- Transition of flow [1e1a8f4c-486e-4901-ba69-3c906954bdac] ---
  Timestamp: 2023-01-31T07:40:30.602Z
  Event: StartErrorPropagation
  Actions: 
    ScheduleEvent(event=DoRemainingWork)
  Continuation: ProcessEvents
  Diff between previous and next state:
checkpoint.errorState.propagating: 
    false
    true
checkpoint.timestamp: 
    2023-01-31T07:40:30.600Z
    2023-01-31T07:40:30.602Z
 {fiber-id=10000028, flow-id=1e1a8f4c-486e-4901-ba69-3c906954bdac, invocation_id=e9eb1dcd-004a-4c84-aa69-318e9319d299, invocation_timestamp=2023-01-31T07:40:29.984Z, origin=O=Mock Company 1, L=London, C=GB, session_id=e9eb1dcd-004a-4c84-aa69-318e9319d299, session_timestamp=2023-01-31T07:40:29.984Z, thread-id=854, tx_id=5776DD8CA997A5CC61E2E97CA1BD831E77AAEE5DE7213BE5AC35DB26A3B61748}
[WARN ] 2023-01-31T07:40:30,615Z [Mock network] interceptors.DumpHistoryOnErrorInterceptor. - Flow [1e1a8f4c-486e-4901-ba69-3c906954bdac] error {fiber-id=10000028, flow-id=1e1a8f4c-486e-4901-ba69-3c906954bdac, invocation_id=e9eb1dcd-004a-4c84-aa69-318e9319d299, invocation_timestamp=2023-01-31T07:40:29.984Z, origin=O=Mock Company 1, L=London, C=GB, session_id=e9eb1dcd-004a-4c84-aa69-318e9319d299, session_timestamp=2023-01-31T07:40:29.984Z, thread-id=854, tx_id=5776DD8CA997A5CC61E2E97CA1BD831E77AAEE5DE7213BE5AC35DB26A3B61748}
net.corda.core.flows.UnexpectedFlowEndException: Counter-flow errored
	at Received unexpected counter-flow exception from peer O=Mock Company 1, L=London, C=GB.() ~[?:?]
	at net.corda.node.services.statemachine.FlowStateMachineImpl.fillInLocalStackTrace(FlowStateMachineImpl.kt:244) ~[corda-node-4.9.jar:?]
	at net.corda.node.services.statemachine.FlowStateMachineImpl.processEventsUntilFlowIsResumed(FlowStateMachineImpl.kt:225) ~[corda-node-4.9.jar:?]
	at net.corda.node.services.statemachine.FlowStateMachineImpl.suspend(FlowStateMachineImpl.kt:577) ~[corda-node-4.9.jar:?]
	at net.corda.node.services.statemachine.FlowSessionImpl.receive(FlowSessionImpl.kt:67) ~[corda-node-4.9.jar:?]
	at net.corda.node.services.statemachine.FlowSessionImpl.receive(FlowSessionImpl.kt:71) ~[corda-node-4.9.jar:?]
	at net.corda.core.flows.ReceiveTransactionFlow.call(ReceiveTransactionFlow.kt:103) ~[corda-core-4.9.jar:?]
	at net.corda.core.flows.ReceiveTransactionFlow.call(ReceiveTransactionFlow.kt:31) ~[corda-core-4.9.jar:?]
	at net.corda.node.services.statemachine.FlowStateMachineImpl.subFlow(FlowStateMachineImpl.kt:420) ~[corda-node-4.9.jar:?]
	at net.corda.core.flows.FlowLogic.subFlow(FlowLogic.kt:409) ~[corda-core-4.9.jar:?]
	at net.corda.core.flows.ReceiveFinalityFlow.call(FinalityFlow.kt:285) ~[corda-core-4.9.jar:?]
	at net.corda.core.flows.ReceiveFinalityFlow.call(FinalityFlow.kt:280) ~[corda-core-4.9.jar:?]
	at net.corda.node.services.statemachine.FlowStateMachineImpl.subFlow(FlowStateMachineImpl.kt:420) ~[corda-node-4.9.jar:?]
	at net.corda.core.flows.FlowLogic.subFlow(FlowLogic.kt:409) ~[corda-core-4.9.jar:?]
	at net.corda.samples.obligation.flows.IOUSettleFlowResponder.call(IOUSettleFlow.kt:139) ~[main/:?]
	at net.corda.samples.obligation.flows.IOUSettleFlowResponder.call(IOUSettleFlow.kt:126) ~[main/:?]
	at net.corda.node.services.statemachine.FlowStateMachineImpl.run(FlowStateMachineImpl.kt:349) ~[corda-node-4.9.jar:?]
	at net.corda.node.services.statemachine.FlowStateMachineImpl.run(FlowStateMachineImpl.kt:71) ~[corda-node-4.9.jar:?]
	at co.paralleluniverse.fibers.Fiber.run1(Fiber.java:1092) ~[quasar-core-0.7.10.jar:0.7.10]
	at co.paralleluniverse.fibers.Fiber.exec(Fiber.java:788) ~[quasar-core-0.7.10.jar:0.7.10]
	at co.paralleluniverse.fibers.RunnableFiberTask.doExec(RunnableFiberTask.java:100) ~[quasar-core-0.7.10.jar:0.7.10]
	at co.paralleluniverse.fibers.RunnableFiberTask.run(RunnableFiberTask.java:91) ~[quasar-core-0.7.10.jar:0.7.10]
	at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511) ~[?:1.8.0_202]
	at java.util.concurrent.FutureTask.run(FutureTask.java:266) ~[?:1.8.0_202]
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.access$201(ScheduledThreadPoolExecutor.java:180) ~[?:1.8.0_202]
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.run(ScheduledThreadPoolExecutor.java:293) ~[?:1.8.0_202]
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149) ~[?:1.8.0_202]
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624) ~[?:1.8.0_202]
	at net.corda.node.utilities.AffinityExecutor$ServiceAffinityExecutor$1$thread$1.run(AffinityExecutor.kt:63) ~[corda-node-4.9.jar:?]
[WARN ] 2023-01-31T07:40:30,616Z [Mock network] statemachine.ActionExecutorImpl. - Propagating error {fiber-id=10000028, flow-id=1e1a8f4c-486e-4901-ba69-3c906954bdac, invocation_id=e9eb1dcd-004a-4c84-aa69-318e9319d299, invocation_timestamp=2023-01-31T07:40:29.984Z, origin=O=Mock Company 1, L=London, C=GB, session_id=e9eb1dcd-004a-4c84-aa69-318e9319d299, session_timestamp=2023-01-31T07:40:29.984Z, thread-id=854, tx_id=5776DD8CA997A5CC61E2E97CA1BD831E77AAEE5DE7213BE5AC35DB26A3B61748}
[WARN ] 2023-01-31T07:40:30,645Z [Mock network] interceptors.DumpHistoryOnErrorInterceptor. - Flow [1e1a8f4c-486e-4901-ba69-3c906954bdac] errored, dumping all transitions:

 --- Transition of flow [1e1a8f4c-486e-4901-ba69-3c906954bdac] ---
  Timestamp: 2023-01-31T07:40:29.989Z
  Event: DoRemainingWork
  Actions: 
    CreateTransaction
    PersistCheckpoint(id=[1e1a8f4c-486e-4901-ba69-3c906954bdac], checkpoint=Checkpoint(checkpointState=CheckpointState(invocationContext=InvocationContext(origin=Peer(party=O=Mock Company 1, L=London, C=GB), trace=Trace(invocationId=e9eb1dcd-004a-4c84-aa69-318e9319d299, timestamp: 2023-01-31T07:40:29.984Z, entityType: Invocation, sessionId=e9eb1dcd-004a-4c84-aa69-318e9319d299, timestamp: 2023-01-31T07:40:29.984Z, entityType: Session), actor=null, externalTrace=null, impersonatedActor=null, arguments=[], clientId=null), ourIdentity=O=Mock Company 3, L=London, C=GB, sessions={}, sessionsToBeClosed=[], subFlowStack=[Inlined(flowClass=class net.corda.samples.obligation.flows.IOUSettleFlowResponder, subFlowVersion=CorDappFlow(platformVersion=11, corDappName=workflows-1.0, corDappHash=F8E3613207E5ABAEC38930FAA426F7BA91464AA72DAF3EFB74917A0BA71A146E), isEnabledTimedFlow=false)], numberOfSuspends=0, numberOfCommits=1), flowState=Unstarted(flowStart=Initiated, frozenFlowLogic=A4E6248385F0F62083698EF5222FDD569BF49109E58F398337A183BC293D979A), errorState=Clean, result=null, status=RUNNABLE, progressStep=null, flowIoRequest=null, compatible=true), isCheckpointUpdate=false)
    PersistDeduplicationFacts(deduplicationHandlers=[net.corda.testing.node.internal.MockNodeMessagingService$InMemoryDeduplicationHandler@166ccecb])
    CommitTransaction
    AcknowledgeMessages(deduplicationHandlers=[net.corda.testing.node.internal.MockNodeMessagingService$InMemoryDeduplicationHandler@166ccecb])
    SignalFlowHasStarted(flowId=[1e1a8f4c-486e-4901-ba69-3c906954bdac])
    SendExisting(peerParty=O=Mock Company 1, L=London, C=GB, message=ExistingSessionMessage(recipientSessionId=SessionId(toLong=-3358756275887911989), payload=ConfirmSessionMessage(initiatedSessionId=SessionId(toLong=2957585445716046757), initiatedFlowInfo=FlowInfo(flowVersion=1, appName=<unknown>))), deduplicationId=SenderDeduplicationId(deduplicationId=DeduplicationId(toString=N-D--3358756275887911989-5594156702427061583-0-0), senderUUID=3ecbc590-084c-4279-8d61-b997a352b464))
    CreateTransaction
  Continuation: Resume(result=null)
  Diff between previous and next state:
pendingDeduplicationHandlers: 
    [net.corda.testing.node.internal.MockNodeMessagingService$InMemoryDeduplicationHandler@166ccecb]
    []
isAnyCheckpointPersisted: 
    false
    true
checkpoint.checkpointState.sessions.SessionId(toLong=2957585445716046757): 
    null
    Initiated(peerParty=O=Mock Company 1, L=London, C=GB, peerFlowInfo=FlowInfo(flowVersion=1, appName=<unknown>), receivedMessages=[DataSessionMessage(payload=class net.corda.core.serialization.SerializedBytes)], otherSideErrored=false, peerSinkSessionId=SessionId(toLong=-3358756275887911989), deduplicationSeed=D--3358756275887911989-5594156702427061583)
isFlowResumed: 
    false
    true


 --- Transition of flow [1e1a8f4c-486e-4901-ba69-3c906954bdac] ---
  Timestamp: 2023-01-31T07:40:29.994Z
  Event: EnterSubFlow(subFlowClass=class net.corda.samples.obligation.flows.IOUSettleFlowResponder$call$signedTransactionFlow$1, subFlowVersion=CoreFlow(platformVersion=11), isEnabledTimedFlow=false)
  Actions: 
    
  Continuation: ProcessEvents
  Diff between previous and next state:
checkpoint.checkpointState.subFlowStack: 
    [Inlined(flowClass=class net.corda.samples.obligation.flows.IOUSettleFlowResponder, subFlowVersion=CorDappFlow(platformVersion=11, corDappName=workflows-1.0, corDappHash=F8E3613207E5ABAEC38930FAA426F7BA91464AA72DAF3EFB74917A0BA71A146E), isEnabledTimedFlow=false)]
    [Inlined(flowClass=class net.corda.samples.obligation.flows.IOUSettleFlowResponder, subFlowVersion=CorDappFlow(platformVersion=11, corDappName=workflows-1.0, corDappHash=F8E3613207E5ABAEC38930FAA426F7BA91464AA72DAF3EFB74917A0BA71A146E), isEnabledTimedFlow=false), Inlined(flowClass=class net.corda.samples.obligation.flows.IOUSettleFlowResponder$call$signedTransactionFlow$1, subFlowVersion=CoreFlow(platformVersion=11), isEnabledTimedFlow=false)]
checkpoint.timestamp: 
    2023-01-31T07:40:29.985Z
    2023-01-31T07:40:29.994Z


 --- Transition of flow [1e1a8f4c-486e-4901-ba69-3c906954bdac] ---
  Timestamp: 2023-01-31T07:40:29.994Z
  Event: EnterSubFlow(subFlowClass=class net.corda.core.flows.ReceiveTransactionFlow, subFlowVersion=CoreFlow(platformVersion=11), isEnabledTimedFlow=false)
  Actions: 
    
  Continuation: ProcessEvents
  Diff between previous and next state:
checkpoint.checkpointState.subFlowStack: 
    [Inlined(flowClass=class net.corda.samples.obligation.flows.IOUSettleFlowResponder, subFlowVersion=CorDappFlow(platformVersion=11, corDappName=workflows-1.0, corDappHash=F8E3613207E5ABAEC38930FAA426F7BA91464AA72DAF3EFB74917A0BA71A146E), isEnabledTimedFlow=false), Inlined(flowClass=class net.corda.samples.obligation.flows.IOUSettleFlowResponder$call$signedTransactionFlow$1, subFlowVersion=CoreFlow(platformVersion=11), isEnabledTimedFlow=false)]
    [Inlined(flowClass=class net.corda.samples.obligation.flows.IOUSettleFlowResponder, subFlowVersion=CorDappFlow(platformVersion=11, corDappName=workflows-1.0, corDappHash=F8E3613207E5ABAEC38930FAA426F7BA91464AA72DAF3EFB74917A0BA71A146E), isEnabledTimedFlow=false), Inlined(flowClass=class net.corda.samples.obligation.flows.IOUSettleFlowResponder$call$signedTransactionFlow$1, subFlowVersion=CoreFlow(platformVersion=11), isEnabledTimedFlow=false), Inlined(flowClass=class net.corda.core.flows.ReceiveTransactionFlow, subFlowVersion=CoreFlow(platformVersion=11), isEnabledTimedFlow=false)]


 --- Transition of flow [1e1a8f4c-486e-4901-ba69-3c906954bdac] ---
  Timestamp: 2023-01-31T07:40:29.999Z
  Event: Suspend(ioRequest=Receive(sessions=[FlowSessionImpl(destination=O=Mock Company 1, L=London, C=GB, sourceSessionId=SessionId(toLong=2957585445716046757))]), maySkipCheckpoint=false, fiber=F4AC4002C0D49F43A6BD7BB645AD1D2DFB5F4D2AA7CE7A55B70E626C015A75A8, currentStep=Starting)
  Actions: 
    PersistCheckpoint(id=[1e1a8f4c-486e-4901-ba69-3c906954bdac], checkpoint=Checkpoint(checkpointState=CheckpointState(invocationContext=InvocationContext(origin=Peer(party=O=Mock Company 1, L=London, C=GB), trace=Trace(invocationId=e9eb1dcd-004a-4c84-aa69-318e9319d299, timestamp: 2023-01-31T07:40:29.984Z, entityType: Invocation, sessionId=e9eb1dcd-004a-4c84-aa69-318e9319d299, timestamp: 2023-01-31T07:40:29.984Z, entityType: Session), actor=null, externalTrace=null, impersonatedActor=null, arguments=[], clientId=null), ourIdentity=O=Mock Company 3, L=London, C=GB, sessions={SessionId(toLong=2957585445716046757)=Initiated(peerParty=O=Mock Company 1, L=London, C=GB, peerFlowInfo=FlowInfo(flowVersion=1, appName=<unknown>), receivedMessages=[DataSessionMessage(payload=class net.corda.core.serialization.SerializedBytes)], otherSideErrored=false, peerSinkSessionId=SessionId(toLong=-3358756275887911989), deduplicationSeed=D--3358756275887911989-5594156702427061583)}, sessionsToBeClosed=[], subFlowStack=[Inlined(flowClass=class net.corda.samples.obligation.flows.IOUSettleFlowResponder, subFlowVersion=CorDappFlow(platformVersion=11, corDappName=workflows-1.0, corDappHash=F8E3613207E5ABAEC38930FAA426F7BA91464AA72DAF3EFB74917A0BA71A146E), isEnabledTimedFlow=false), Inlined(flowClass=class net.corda.samples.obligation.flows.IOUSettleFlowResponder$call$signedTransactionFlow$1, subFlowVersion=CoreFlow(platformVersion=11), isEnabledTimedFlow=false), Inlined(flowClass=class net.corda.core.flows.ReceiveTransactionFlow, subFlowVersion=CoreFlow(platformVersion=11), isEnabledTimedFlow=false)], numberOfSuspends=1, numberOfCommits=2), flowState=Started(flowIORequest=Receive(sessions=[FlowSessionImpl(destination=O=Mock Company 1, L=London, C=GB, sourceSessionId=SessionId(toLong=2957585445716046757))]), frozenFiber=F4AC4002C0D49F43A6BD7BB645AD1D2DFB5F4D2AA7CE7A55B70E626C015A75A8), errorState=Clean, result=null, status=RUNNABLE, progressStep=Starting, flowIoRequest=Receive, compatible=true), isCheckpointUpdate=true)
    PersistDeduplicationFacts(deduplicationHandlers=[])
    CommitTransaction
    AcknowledgeMessages(deduplicationHandlers=[])
    ScheduleEvent(event=DoRemainingWork)
  Continuation: ProcessEvents
  Diff between previous and next state:
numberOfCommits: 
    0
    2
checkpoint.flowIoRequest: 
    null
    Receive
checkpoint.checkpointState.numberOfCommits: 
    1
    2
checkpoint.checkpointState.numberOfSuspends: 
    0
    1
checkpoint.flowState: 
    Unstarted(flowStart=Initiated, frozenFlowLogic=A4E6248385F0F62083698EF5222FDD569BF49109E58F398337A183BC293D979A)
    Started(flowIORequest=Receive(sessions=[FlowSessionImpl(destination=O=Mock Company 1, L=London, C=GB, sourceSessionId=SessionId(toLong=2957585445716046757))]), frozenFiber=F4AC4002C0D49F43A6BD7BB645AD1D2DFB5F4D2AA7CE7A55B70E626C015A75A8)
checkpoint.progressStep: 
    null
    Starting
checkpoint.timestamp: 
    2023-01-31T07:40:29.994Z
    2023-01-31T07:40:29.996Z
isFlowResumed: 
    true
    false


 --- Transition of flow [1e1a8f4c-486e-4901-ba69-3c906954bdac] ---
  Timestamp: 2023-01-31T07:40:29.999Z
  Event: DoRemainingWork
  Actions: 
    CreateTransaction
  Continuation: Resume(result=class java.util.LinkedHashMap)
  Diff between previous and next state:
checkpoint.checkpointState.sessions.SessionId(toLong=2957585445716046757).receivedMessages.isEmpty: 
    false
    true
checkpoint.timestamp: 
    2023-01-31T07:40:29.996Z
    2023-01-31T07:40:29.999Z
isFlowResumed: 
    false
    true


 --- Transition of flow [1e1a8f4c-486e-4901-ba69-3c906954bdac] ---
  Timestamp: 2023-01-31T07:40:30.001Z
  Event: EnterSubFlow(subFlowClass=class net.corda.core.internal.ResolveTransactionsFlow, subFlowVersion=CoreFlow(platformVersion=11), isEnabledTimedFlow=false)
  Actions: 
    
  Continuation: ProcessEvents
  Diff between previous and next state:
checkpoint.checkpointState.subFlowStack: 
    [Inlined(flowClass=class net.corda.samples.obligation.flows.IOUSettleFlowResponder, subFlowVersion=CorDappFlow(platformVersion=11, corDappName=workflows-1.0, corDappHash=F8E3613207E5ABAEC38930FAA426F7BA91464AA72DAF3EFB74917A0BA71A146E), isEnabledTimedFlow=false), Inlined(flowClass=class net.corda.samples.obligation.flows.IOUSettleFlowResponder$call$signedTransactionFlow$1, subFlowVersion=CoreFlow(platformVersion=11), isEnabledTimedFlow=false), Inlined(flowClass=class net.corda.core.flows.ReceiveTransactionFlow, subFlowVersion=CoreFlow(platformVersion=11), isEnabledTimedFlow=false)]
    [Inlined(flowClass=class net.corda.samples.obligation.flows.IOUSettleFlowResponder, subFlowVersion=CorDappFlow(platformVersion=11, corDappName=workflows-1.0, corDappHash=F8E3613207E5ABAEC38930FAA426F7BA91464AA72DAF3EFB74917A0BA71A146E), isEnabledTimedFlow=false), Inlined(flowClass=class net.corda.samples.obligation.flows.IOUSettleFlowResponder$call$signedTransactionFlow$1, subFlowVersion=CoreFlow(platformVersion=11), isEnabledTimedFlow=false), Inlined(flowClass=class net.corda.core.flows.ReceiveTransactionFlow, subFlowVersion=CoreFlow(platformVersion=11), isEnabledTimedFlow=false), Inlined(flowClass=class net.corda.core.internal.ResolveTransactionsFlow, subFlowVersion=CoreFlow(platformVersion=11), isEnabledTimedFlow=false)]
checkpoint.timestamp: 
    2023-01-31T07:40:29.999Z
    2023-01-31T07:40:30.001Z


 --- Transition of flow [1e1a8f4c-486e-4901-ba69-3c906954bdac] ---
  Timestamp: 2023-01-31T07:40:30.001Z
  Event: EnterSubFlow(subFlowClass=class net.corda.core.internal.FetchAttachmentsFlow, subFlowVersion=CoreFlow(platformVersion=11), isEnabledTimedFlow=false)
  Actions: 
    
  Continuation: ProcessEvents
  Diff between previous and next state:
checkpoint.checkpointState.subFlowStack: 
    [Inlined(flowClass=class net.corda.samples.obligation.flows.IOUSettleFlowResponder, subFlowVersion=CorDappFlow(platformVersion=11, corDappName=workflows-1.0, corDappHash=F8E3613207E5ABAEC38930FAA426F7BA91464AA72DAF3EFB74917A0BA71A146E), isEnabledTimedFlow=false), Inlined(flowClass=class net.corda.samples.obligation.flows.IOUSettleFlowResponder$call$signedTransactionFlow$1, subFlowVersion=CoreFlow(platformVersion=11), isEnabledTimedFlow=false), Inlined(flowClass=class net.corda.core.flows.ReceiveTransactionFlow, subFlowVersion=CoreFlow(platformVersion=11), isEnabledTimedFlow=false), Inlined(flowClass=class net.corda.core.internal.ResolveTransactionsFlow, subFlowVersion=CoreFlow(platformVersion=11), isEnabledTimedFlow=false)]
    [Inlined(flowClass=class net.corda.samples.obligation.flows.IOUSettleFlowResponder, subFlowVersion=CorDappFlow(platformVersion=11, corDappName=workflows-1.0, corDappHash=F8E3613207E5ABAEC38930FAA426F7BA91464AA72DAF3EFB74917A0BA71A146E), isEnabledTimedFlow=false), Inlined(flowClass=class net.corda.samples.obligation.flows.IOUSettleFlowResponder$call$signedTransactionFlow$1, subFlowVersion=CoreFlow(platformVersion=11), isEnabledTimedFlow=false), Inlined(flowClass=class net.corda.core.flows.ReceiveTransactionFlow, subFlowVersion=CoreFlow(platformVersion=11), isEnabledTimedFlow=false), Inlined(flowClass=class net.corda.core.internal.ResolveTransactionsFlow, subFlowVersion=CoreFlow(platformVersion=11), isEnabledTimedFlow=false), Inlined(flowClass=class net.corda.core.internal.FetchAttachmentsFlow, subFlowVersion=CoreFlow(platformVersion=11), isEnabledTimedFlow=false)]


 --- Transition of flow [1e1a8f4c-486e-4901-ba69-3c906954bdac] ---
  Timestamp: 2023-01-31T07:40:30.004Z
  Event: LeaveSubFlow
  Actions: 
    
  Continuation: ProcessEvents
  Diff between previous and next state:
checkpoint.checkpointState.subFlowStack: 
    [Inlined(flowClass=class net.corda.samples.obligation.flows.IOUSettleFlowResponder, subFlowVersion=CorDappFlow(platformVersion=11, corDappName=workflows-1.0, corDappHash=F8E3613207E5ABAEC38930FAA426F7BA91464AA72DAF3EFB74917A0BA71A146E), isEnabledTimedFlow=false), Inlined(flowClass=class net.corda.samples.obligation.flows.IOUSettleFlowResponder$call$signedTransactionFlow$1, subFlowVersion=CoreFlow(platformVersion=11), isEnabledTimedFlow=false), Inlined(flowClass=class net.corda.core.flows.ReceiveTransactionFlow, subFlowVersion=CoreFlow(platformVersion=11), isEnabledTimedFlow=false), Inlined(flowClass=class net.corda.core.internal.ResolveTransactionsFlow, subFlowVersion=CoreFlow(platformVersion=11), isEnabledTimedFlow=false), Inlined(flowClass=class net.corda.core.internal.FetchAttachmentsFlow, subFlowVersion=CoreFlow(platformVersion=11), isEnabledTimedFlow=false)]
    [Inlined(flowClass=class net.corda.samples.obligation.flows.IOUSettleFlowResponder, subFlowVersion=CorDappFlow(platformVersion=11, corDappName=workflows-1.0, corDappHash=F8E3613207E5ABAEC38930FAA426F7BA91464AA72DAF3EFB74917A0BA71A146E), isEnabledTimedFlow=false), Inlined(flowClass=class net.corda.samples.obligation.flows.IOUSettleFlowResponder$call$signedTransactionFlow$1, subFlowVersion=CoreFlow(platformVersion=11), isEnabledTimedFlow=false), Inlined(flowClass=class net.corda.core.flows.ReceiveTransactionFlow, subFlowVersion=CoreFlow(platformVersion=11), isEnabledTimedFlow=false), Inlined(flowClass=class net.corda.core.internal.ResolveTransactionsFlow, subFlowVersion=CoreFlow(platformVersion=11), isEnabledTimedFlow=false)]
checkpoint.timestamp: 
    2023-01-31T07:40:30.001Z
    2023-01-31T07:40:30.004Z


 --- Transition of flow [1e1a8f4c-486e-4901-ba69-3c906954bdac] ---
  Timestamp: 2023-01-31T07:40:30.004Z
  Event: EnterSubFlow(subFlowClass=class net.corda.core.internal.FetchNetworkParametersFlow, subFlowVersion=CoreFlow(platformVersion=11), isEnabledTimedFlow=false)
  Actions: 
    
  Continuation: ProcessEvents
  Diff between previous and next state:
checkpoint.checkpointState.subFlowStack: 
    [Inlined(flowClass=class net.corda.samples.obligation.flows.IOUSettleFlowResponder, subFlowVersion=CorDappFlow(platformVersion=11, corDappName=workflows-1.0, corDappHash=F8E3613207E5ABAEC38930FAA426F7BA91464AA72DAF3EFB74917A0BA71A146E), isEnabledTimedFlow=false), Inlined(flowClass=class net.corda.samples.obligation.flows.IOUSettleFlowResponder$call$signedTransactionFlow$1, subFlowVersion=CoreFlow(platformVersion=11), isEnabledTimedFlow=false), Inlined(flowClass=class net.corda.core.flows.ReceiveTransactionFlow, subFlowVersion=CoreFlow(platformVersion=11), isEnabledTimedFlow=false), Inlined(flowClass=class net.corda.core.internal.ResolveTransactionsFlow, subFlowVersion=CoreFlow(platformVersion=11), isEnabledTimedFlow=false)]
    [Inlined(flowClass=class net.corda.samples.obligation.flows.IOUSettleFlowResponder, subFlowVersion=CorDappFlow(platformVersion=11, corDappName=workflows-1.0, corDappHash=F8E3613207E5ABAEC38930FAA426F7BA91464AA72DAF3EFB74917A0BA71A146E), isEnabledTimedFlow=false), Inlined(flowClass=class net.corda.samples.obligation.flows.IOUSettleFlowResponder$call$signedTransactionFlow$1, subFlowVersion=CoreFlow(platformVersion=11), isEnabledTimedFlow=false), Inlined(flowClass=class net.corda.core.flows.ReceiveTransactionFlow, subFlowVersion=CoreFlow(platformVersion=11), isEnabledTimedFlow=false), Inlined(flowClass=class net.corda.core.internal.ResolveTransactionsFlow, subFlowVersion=CoreFlow(platformVersion=11), isEnabledTimedFlow=false), Inlined(flowClass=class net.corda.core.internal.FetchNetworkParametersFlow, subFlowVersion=CoreFlow(platformVersion=11), isEnabledTimedFlow=false)]


 --- Transition of flow [1e1a8f4c-486e-4901-ba69-3c906954bdac] ---
  Timestamp: 2023-01-31T07:40:30.004Z
  Event: LeaveSubFlow
  Actions: 
    
  Continuation: ProcessEvents
  Diff between previous and next state:
checkpoint.checkpointState.subFlowStack: 
    [Inlined(flowClass=class net.corda.samples.obligation.flows.IOUSettleFlowResponder, subFlowVersion=CorDappFlow(platformVersion=11, corDappName=workflows-1.0, corDappHash=F8E3613207E5ABAEC38930FAA426F7BA91464AA72DAF3EFB74917A0BA71A146E), isEnabledTimedFlow=false), Inlined(flowClass=class net.corda.samples.obligation.flows.IOUSettleFlowResponder$call$signedTransactionFlow$1, subFlowVersion=CoreFlow(platformVersion=11), isEnabledTimedFlow=false), Inlined(flowClass=class net.corda.core.flows.ReceiveTransactionFlow, subFlowVersion=CoreFlow(platformVersion=11), isEnabledTimedFlow=false), Inlined(flowClass=class net.corda.core.internal.ResolveTransactionsFlow, subFlowVersion=CoreFlow(platformVersion=11), isEnabledTimedFlow=false), Inlined(flowClass=class net.corda.core.internal.FetchNetworkParametersFlow, subFlowVersion=CoreFlow(platformVersion=11), isEnabledTimedFlow=false)]
    [Inlined(flowClass=class net.corda.samples.obligation.flows.IOUSettleFlowResponder, subFlowVersion=CorDappFlow(platformVersion=11, corDappName=workflows-1.0, corDappHash=F8E3613207E5ABAEC38930FAA426F7BA91464AA72DAF3EFB74917A0BA71A146E), isEnabledTimedFlow=false), Inlined(flowClass=class net.corda.samples.obligation.flows.IOUSettleFlowResponder$call$signedTransactionFlow$1, subFlowVersion=CoreFlow(platformVersion=11), isEnabledTimedFlow=false), Inlined(flowClass=class net.corda.core.flows.ReceiveTransactionFlow, subFlowVersion=CoreFlow(platformVersion=11), isEnabledTimedFlow=false), Inlined(flowClass=class net.corda.core.internal.ResolveTransactionsFlow, subFlowVersion=CoreFlow(platformVersion=11), isEnabledTimedFlow=false)]


 --- Transition of flow [1e1a8f4c-486e-4901-ba69-3c906954bdac] ---
  Timestamp: 2023-01-31T07:40:30.004Z
  Event: EnterSubFlow(subFlowClass=class net.corda.core.internal.FetchTransactionsFlow, subFlowVersion=CoreFlow(platformVersion=11), isEnabledTimedFlow=false)
  Actions: 
    
  Continuation: ProcessEvents
  Diff between previous and next state:
checkpoint.checkpointState.subFlowStack: 
    [Inlined(flowClass=class net.corda.samples.obligation.flows.IOUSettleFlowResponder, subFlowVersion=CorDappFlow(platformVersion=11, corDappName=workflows-1.0, corDappHash=F8E3613207E5ABAEC38930FAA426F7BA91464AA72DAF3EFB74917A0BA71A146E), isEnabledTimedFlow=false), Inlined(flowClass=class net.corda.samples.obligation.flows.IOUSettleFlowResponder$call$signedTransactionFlow$1, subFlowVersion=CoreFlow(platformVersion=11), isEnabledTimedFlow=false), Inlined(flowClass=class net.corda.core.flows.ReceiveTransactionFlow, subFlowVersion=CoreFlow(platformVersion=11), isEnabledTimedFlow=false), Inlined(flowClass=class net.corda.core.internal.ResolveTransactionsFlow, subFlowVersion=CoreFlow(platformVersion=11), isEnabledTimedFlow=false)]
    [Inlined(flowClass=class net.corda.samples.obligation.flows.IOUSettleFlowResponder, subFlowVersion=CorDappFlow(platformVersion=11, corDappName=workflows-1.0, corDappHash=F8E3613207E5ABAEC38930FAA426F7BA91464AA72DAF3EFB74917A0BA71A146E), isEnabledTimedFlow=false), Inlined(flowClass=class net.corda.samples.obligation.flows.IOUSettleFlowResponder$call$signedTransactionFlow$1, subFlowVersion=CoreFlow(platformVersion=11), isEnabledTimedFlow=false), Inlined(flowClass=class net.corda.core.flows.ReceiveTransactionFlow, subFlowVersion=CoreFlow(platformVersion=11), isEnabledTimedFlow=false), Inlined(flowClass=class net.corda.core.internal.ResolveTransactionsFlow, subFlowVersion=CoreFlow(platformVersion=11), isEnabledTimedFlow=false), Inlined(flowClass=class net.corda.core.internal.FetchTransactionsFlow, subFlowVersion=CoreFlow(platformVersion=11), isEnabledTimedFlow=false)]


 --- Transition of flow [1e1a8f4c-486e-4901-ba69-3c906954bdac] ---
  Timestamp: 2023-01-31T07:40:30.009Z
  Event: Suspend(ioRequest=SendAndReceive({FlowSessionImpl(destination=O=Mock Company 1, L=London, C=GB, sourceSessionId=SessionId(toLong=2957585445716046757))=FlowSessionImpl(destination=O=Mock Company 1, L=London, C=GB, sourceSessionId=SessionId(toLong=2957585445716046757))=A9AE62F7C704F6D4E1019C2A2CA8CBA7AA25C3D5ABF92EE67729DBC72645CF8E}, shouldRetrySend=false), maySkipCheckpoint=false, fiber=771CD4E58AE7B416C3A15FE0ADFD9A9B9D807FCDE24541142039C2BA630E34FD, currentStep=Starting)
  Actions: 
    PersistCheckpoint(id=[1e1a8f4c-486e-4901-ba69-3c906954bdac], checkpoint=Checkpoint(checkpointState=CheckpointState(invocationContext=InvocationContext(origin=Peer(party=O=Mock Company 1, L=London, C=GB), trace=Trace(invocationId=e9eb1dcd-004a-4c84-aa69-318e9319d299, timestamp: 2023-01-31T07:40:29.984Z, entityType: Invocation, sessionId=e9eb1dcd-004a-4c84-aa69-318e9319d299, timestamp: 2023-01-31T07:40:29.984Z, entityType: Session), actor=null, externalTrace=null, impersonatedActor=null, arguments=[], clientId=null), ourIdentity=O=Mock Company 3, L=London, C=GB, sessions={SessionId(toLong=2957585445716046757)=Initiated(peerParty=O=Mock Company 1, L=London, C=GB, peerFlowInfo=FlowInfo(flowVersion=1, appName=<unknown>), receivedMessages=[], otherSideErrored=false, peerSinkSessionId=SessionId(toLong=-3358756275887911989), deduplicationSeed=D--3358756275887911989-5594156702427061583)}, sessionsToBeClosed=[], subFlowStack=[Inlined(flowClass=class net.corda.samples.obligation.flows.IOUSettleFlowResponder, subFlowVersion=CorDappFlow(platformVersion=11, corDappName=workflows-1.0, corDappHash=F8E3613207E5ABAEC38930FAA426F7BA91464AA72DAF3EFB74917A0BA71A146E), isEnabledTimedFlow=false), Inlined(flowClass=class net.corda.samples.obligation.flows.IOUSettleFlowResponder$call$signedTransactionFlow$1, subFlowVersion=CoreFlow(platformVersion=11), isEnabledTimedFlow=false), Inlined(flowClass=class net.corda.core.flows.ReceiveTransactionFlow, subFlowVersion=CoreFlow(platformVersion=11), isEnabledTimedFlow=false), Inlined(flowClass=class net.corda.core.internal.ResolveTransactionsFlow, subFlowVersion=CoreFlow(platformVersion=11), isEnabledTimedFlow=false), Inlined(flowClass=class net.corda.core.internal.FetchTransactionsFlow, subFlowVersion=CoreFlow(platformVersion=11), isEnabledTimedFlow=false)], numberOfSuspends=2, numberOfCommits=3), flowState=Started(flowIORequest=SendAndReceive({FlowSessionImpl(destination=O=Mock Company 1, L=London, C=GB, sourceSessionId=SessionId(toLong=2957585445716046757))=FlowSessionImpl(destination=O=Mock Company 1, L=London, C=GB, sourceSessionId=SessionId(toLong=2957585445716046757))=A9AE62F7C704F6D4E1019C2A2CA8CBA7AA25C3D5ABF92EE67729DBC72645CF8E}, shouldRetrySend=false), frozenFiber=771CD4E58AE7B416C3A15FE0ADFD9A9B9D807FCDE24541142039C2BA630E34FD), errorState=Clean, result=null, status=RUNNABLE, progressStep=Starting, flowIoRequest=SendAndReceive, compatible=true), isCheckpointUpdate=true)
    PersistDeduplicationFacts(deduplicationHandlers=[])
    CommitTransaction
    AcknowledgeMessages(deduplicationHandlers=[])
    ScheduleEvent(event=DoRemainingWork)
  Continuation: ProcessEvents
  Diff between previous and next state:
numberOfCommits: 
    2
    3
checkpoint.flowIoRequest: 
    Receive
    SendAndReceive
checkpoint.checkpointState.numberOfCommits: 
    2
    3
checkpoint.checkpointState.numberOfSuspends: 
    1
    2
checkpoint.flowState.frozenFiber.hash: 
    F4AC4002C0D49F43A6BD7BB645AD1D2DFB5F4D2AA7CE7A55B70E626C015A75A8
    771CD4E58AE7B416C3A15FE0ADFD9A9B9D807FCDE24541142039C2BA630E34FD
checkpoint.flowState.flowIORequest: 
    Receive(sessions=[FlowSessionImpl(destination=O=Mock Company 1, L=London, C=GB, sourceSessionId=SessionId(toLong=2957585445716046757))])
    SendAndReceive({FlowSessionImpl(destination=O=Mock Company 1, L=London, C=GB, sourceSessionId=SessionId(toLong=2957585445716046757))=FlowSessionImpl(destination=O=Mock Company 1, L=London, C=GB, sourceSessionId=SessionId(toLong=2957585445716046757))=A9AE62F7C704F6D4E1019C2A2CA8CBA7AA25C3D5ABF92EE67729DBC72645CF8E}, shouldRetrySend=false)
checkpoint.timestamp: 
    2023-01-31T07:40:30.004Z
    2023-01-31T07:40:30.008Z
isFlowResumed: 
    true
    false


 --- Transition of flow [1e1a8f4c-486e-4901-ba69-3c906954bdac] ---
  Timestamp: 2023-01-31T07:40:30.010Z
  Event: DoRemainingWork
  Actions: 
    SendMultiple(sendInitial=[], sendExisting=[SendExisting(peerParty=O=Mock Company 1, L=London, C=GB, message=ExistingSessionMessage(recipientSessionId=SessionId(toLong=-3358756275887911989), payload=DataSessionMessage(payload=class net.corda.core.serialization.SerializedBytes)), deduplicationId=SenderDeduplicationId(deduplicationId=DeduplicationId(toString=N-D--3358756275887911989-5594156702427061583-2-0), senderUUID=3ecbc590-084c-4279-8d61-b997a352b464))])
  Continuation: ProcessEvents
  Diff between previous and next state:
checkpoint.flowState.flowIORequest: 
    SendAndReceive({FlowSessionImpl(destination=O=Mock Company 1, L=London, C=GB, sourceSessionId=SessionId(toLong=2957585445716046757))=FlowSessionImpl(destination=O=Mock Company 1, L=London, C=GB, sourceSessionId=SessionId(toLong=2957585445716046757))=A9AE62F7C704F6D4E1019C2A2CA8CBA7AA25C3D5ABF92EE67729DBC72645CF8E}, shouldRetrySend=false)
    Receive(sessions=[FlowSessionImpl(destination=O=Mock Company 1, L=London, C=GB, sourceSessionId=SessionId(toLong=2957585445716046757))])
checkpoint.timestamp: 
    2023-01-31T07:40:30.008Z
    2023-01-31T07:40:30.010Z


 --- Transition of flow [1e1a8f4c-486e-4901-ba69-3c906954bdac] ---
  Timestamp: 2023-01-31T07:40:30.030Z
  Event: DeliverSessionMessage(sessionMessage=ExistingSessionMessage(recipientSessionId=SessionId(toLong=2957585445716046757), payload=DataSessionMessage(payload=class net.corda.core.serialization.SerializedBytes)), deduplicationHandler=net.corda.testing.node.internal.MockNodeMessagingService$InMemoryDeduplicationHandler@5954aa71, sender=O=Mock Company 1, L=London, C=GB)
  Actions: 
    ScheduleEvent(event=DoRemainingWork)
  Continuation: ProcessEvents
  Diff between previous and next state:
pendingDeduplicationHandlers: 
    []
    [net.corda.testing.node.internal.MockNodeMessagingService$InMemoryDeduplicationHandler@5954aa71]
checkpoint.checkpointState.sessions.SessionId(toLong=2957585445716046757).receivedMessages.isEmpty: 
    true
    false
checkpoint.timestamp: 
    2023-01-31T07:40:30.010Z
    2023-01-31T07:40:30.030Z


 --- Transition of flow [1e1a8f4c-486e-4901-ba69-3c906954bdac] ---
  Timestamp: 2023-01-31T07:40:30.030Z
  Event: DoRemainingWork
  Actions: 
    CreateTransaction
  Continuation: Resume(result=class java.util.LinkedHashMap)
  Diff between previous and next state:
checkpoint.checkpointState.sessions.SessionId(toLong=2957585445716046757).receivedMessages.isEmpty: 
    false
    true
isFlowResumed: 
    false
    true


 --- Transition of flow [1e1a8f4c-486e-4901-ba69-3c906954bdac] ---
  Timestamp: 2023-01-31T07:40:30.031Z
  Event: LeaveSubFlow
  Actions: 
    
  Continuation: ProcessEvents
  Diff between previous and next state:
checkpoint.checkpointState.subFlowStack: 
    [Inlined(flowClass=class net.corda.samples.obligation.flows.IOUSettleFlowResponder, subFlowVersion=CorDappFlow(platformVersion=11, corDappName=workflows-1.0, corDappHash=F8E3613207E5ABAEC38930FAA426F7BA91464AA72DAF3EFB74917A0BA71A146E), isEnabledTimedFlow=false), Inlined(flowClass=class net.corda.samples.obligation.flows.IOUSettleFlowResponder$call$signedTransactionFlow$1, subFlowVersion=CoreFlow(platformVersion=11), isEnabledTimedFlow=false), Inlined(flowClass=class net.corda.core.flows.ReceiveTransactionFlow, subFlowVersion=CoreFlow(platformVersion=11), isEnabledTimedFlow=false), Inlined(flowClass=class net.corda.core.internal.ResolveTransactionsFlow, subFlowVersion=CoreFlow(platformVersion=11), isEnabledTimedFlow=false), Inlined(flowClass=class net.corda.core.internal.FetchTransactionsFlow, subFlowVersion=CoreFlow(platformVersion=11), isEnabledTimedFlow=false)]
    [Inlined(flowClass=class net.corda.samples.obligation.flows.IOUSettleFlowResponder, subFlowVersion=CorDappFlow(platformVersion=11, corDappName=workflows-1.0, corDappHash=F8E3613207E5ABAEC38930FAA426F7BA91464AA72DAF3EFB74917A0BA71A146E), isEnabledTimedFlow=false), Inlined(flowClass=class net.corda.samples.obligation.flows.IOUSettleFlowResponder$call$signedTransactionFlow$1, subFlowVersion=CoreFlow(platformVersion=11), isEnabledTimedFlow=false), Inlined(flowClass=class net.corda.core.flows.ReceiveTransactionFlow, subFlowVersion=CoreFlow(platformVersion=11), isEnabledTimedFlow=false), Inlined(flowClass=class net.corda.core.internal.ResolveTransactionsFlow, subFlowVersion=CoreFlow(platformVersion=11), isEnabledTimedFlow=false)]
checkpoint.timestamp: 
    2023-01-31T07:40:30.030Z
    2023-01-31T07:40:30.031Z


 --- Transition of flow [1e1a8f4c-486e-4901-ba69-3c906954bdac] ---
  Timestamp: 2023-01-31T07:40:30.033Z
  Event: EnterSubFlow(subFlowClass=class net.corda.core.internal.FetchAttachmentsFlow, subFlowVersion=CoreFlow(platformVersion=11), isEnabledTimedFlow=false)
  Actions: 
    
  Continuation: ProcessEvents
  Diff between previous and next state:
checkpoint.checkpointState.subFlowStack: 
    [Inlined(flowClass=class net.corda.samples.obligation.flows.IOUSettleFlowResponder, subFlowVersion=CorDappFlow(platformVersion=11, corDappName=workflows-1.0, corDappHash=F8E3613207E5ABAEC38930FAA426F7BA91464AA72DAF3EFB74917A0BA71A146E), isEnabledTimedFlow=false), Inlined(flowClass=class net.corda.samples.obligation.flows.IOUSettleFlowResponder$call$signedTransactionFlow$1, subFlowVersion=CoreFlow(platformVersion=11), isEnabledTimedFlow=false), Inlined(flowClass=class net.corda.core.flows.ReceiveTransactionFlow, subFlowVersion=CoreFlow(platformVersion=11), isEnabledTimedFlow=false), Inlined(flowClass=class net.corda.core.internal.ResolveTransactionsFlow, subFlowVersion=CoreFlow(platformVersion=11), isEnabledTimedFlow=false)]
    [Inlined(flowClass=class net.corda.samples.obligation.flows.IOUSettleFlowResponder, subFlowVersion=CorDappFlow(platformVersion=11, corDappName=workflows-1.0, corDappHash=F8E3613207E5ABAEC38930FAA426F7BA91464AA72DAF3EFB74917A0BA71A146E), isEnabledTimedFlow=false), Inlined(flowClass=class net.corda.samples.obligation.flows.IOUSettleFlowResponder$call$signedTransactionFlow$1, subFlowVersion=CoreFlow(platformVersion=11), isEnabledTimedFlow=false), Inlined(flowClass=class net.corda.core.flows.ReceiveTransactionFlow, subFlowVersion=CoreFlow(platformVersion=11), isEnabledTimedFlow=false), Inlined(flowClass=class net.corda.core.internal.ResolveTransactionsFlow, subFlowVersion=CoreFlow(platformVersion=11), isEnabledTimedFlow=false), Inlined(flowClass=class net.corda.core.internal.FetchAttachmentsFlow, subFlowVersion=CoreFlow(platformVersion=11), isEnabledTimedFlow=false)]
checkpoint.timestamp: 
    2023-01-31T07:40:30.031Z
    2023-01-31T07:40:30.033Z


 --- Transition of flow [1e1a8f4c-486e-4901-ba69-3c906954bdac] ---
  Timestamp: 2023-01-31T07:40:30.033Z
  Event: LeaveSubFlow
  Actions: 
    
  Continuation: ProcessEvents
  Diff between previous and next state:
checkpoint.checkpointState.subFlowStack: 
    [Inlined(flowClass=class net.corda.samples.obligation.flows.IOUSettleFlowResponder, subFlowVersion=CorDappFlow(platformVersion=11, corDappName=workflows-1.0, corDappHash=F8E3613207E5ABAEC38930FAA426F7BA91464AA72DAF3EFB74917A0BA71A146E), isEnabledTimedFlow=false), Inlined(flowClass=class net.corda.samples.obligation.flows.IOUSettleFlowResponder$call$signedTransactionFlow$1, subFlowVersion=CoreFlow(platformVersion=11), isEnabledTimedFlow=false), Inlined(flowClass=class net.corda.core.flows.ReceiveTransactionFlow, subFlowVersion=CoreFlow(platformVersion=11), isEnabledTimedFlow=false), Inlined(flowClass=class net.corda.core.internal.ResolveTransactionsFlow, subFlowVersion=CoreFlow(platformVersion=11), isEnabledTimedFlow=false), Inlined(flowClass=class net.corda.core.internal.FetchAttachmentsFlow, subFlowVersion=CoreFlow(platformVersion=11), isEnabledTimedFlow=false)]
    [Inlined(flowClass=class net.corda.samples.obligation.flows.IOUSettleFlowResponder, subFlowVersion=CorDappFlow(platformVersion=11, corDappName=workflows-1.0, corDappHash=F8E3613207E5ABAEC38930FAA426F7BA91464AA72DAF3EFB74917A0BA71A146E), isEnabledTimedFlow=false), Inlined(flowClass=class net.corda.samples.obligation.flows.IOUSettleFlowResponder$call$signedTransactionFlow$1, subFlowVersion=CoreFlow(platformVersion=11), isEnabledTimedFlow=false), Inlined(flowClass=class net.corda.core.flows.ReceiveTransactionFlow, subFlowVersion=CoreFlow(platformVersion=11), isEnabledTimedFlow=false), Inlined(flowClass=class net.corda.core.internal.ResolveTransactionsFlow, subFlowVersion=CoreFlow(platformVersion=11), isEnabledTimedFlow=false)]


 --- Transition of flow [1e1a8f4c-486e-4901-ba69-3c906954bdac] ---
  Timestamp: 2023-01-31T07:40:30.033Z
  Event: EnterSubFlow(subFlowClass=class net.corda.core.internal.FetchNetworkParametersFlow, subFlowVersion=CoreFlow(platformVersion=11), isEnabledTimedFlow=false)
  Actions: 
    
  Continuation: ProcessEvents
  Diff between previous and next state:
checkpoint.checkpointState.subFlowStack: 
    [Inlined(flowClass=class net.corda.samples.obligation.flows.IOUSettleFlowResponder, subFlowVersion=CorDappFlow(platformVersion=11, corDappName=workflows-1.0, corDappHash=F8E3613207E5ABAEC38930FAA426F7BA91464AA72DAF3EFB74917A0BA71A146E), isEnabledTimedFlow=false), Inlined(flowClass=class net.corda.samples.obligation.flows.IOUSettleFlowResponder$call$signedTransactionFlow$1, subFlowVersion=CoreFlow(platformVersion=11), isEnabledTimedFlow=false), Inlined(flowClass=class net.corda.core.flows.ReceiveTransactionFlow, subFlowVersion=CoreFlow(platformVersion=11), isEnabledTimedFlow=false), Inlined(flowClass=class net.corda.core.internal.ResolveTransactionsFlow, subFlowVersion=CoreFlow(platformVersion=11), isEnabledTimedFlow=false)]
    [Inlined(flowClass=class net.corda.samples.obligation.flows.IOUSettleFlowResponder, subFlowVersion=CorDappFlow(platformVersion=11, corDappName=workflows-1.0, corDappHash=F8E3613207E5ABAEC38930FAA426F7BA91464AA72DAF3EFB74917A0BA71A146E), isEnabledTimedFlow=false), Inlined(flowClass=class net.corda.samples.obligation.flows.IOUSettleFlowResponder$call$signedTransactionFlow$1, subFlowVersion=CoreFlow(platformVersion=11), isEnabledTimedFlow=false), Inlined(flowClass=class net.corda.core.flows.ReceiveTransactionFlow, subFlowVersion=CoreFlow(platformVersion=11), isEnabledTimedFlow=false), Inlined(flowClass=class net.corda.core.internal.ResolveTransactionsFlow, subFlowVersion=CoreFlow(platformVersion=11), isEnabledTimedFlow=false), Inlined(flowClass=class net.corda.core.internal.FetchNetworkParametersFlow, subFlowVersion=CoreFlow(platformVersion=11), isEnabledTimedFlow=false)]


 --- Transition of flow [1e1a8f4c-486e-4901-ba69-3c906954bdac] ---
  Timestamp: 2023-01-31T07:40:30.034Z
  Event: LeaveSubFlow
  Actions: 
    
  Continuation: ProcessEvents
  Diff between previous and next state:
checkpoint.checkpointState.subFlowStack: 
    [Inlined(flowClass=class net.corda.samples.obligation.flows.IOUSettleFlowResponder, subFlowVersion=CorDappFlow(platformVersion=11, corDappName=workflows-1.0, corDappHash=F8E3613207E5ABAEC38930FAA426F7BA91464AA72DAF3EFB74917A0BA71A146E), isEnabledTimedFlow=false), Inlined(flowClass=class net.corda.samples.obligation.flows.IOUSettleFlowResponder$call$signedTransactionFlow$1, subFlowVersion=CoreFlow(platformVersion=11), isEnabledTimedFlow=false), Inlined(flowClass=class net.corda.core.flows.ReceiveTransactionFlow, subFlowVersion=CoreFlow(platformVersion=11), isEnabledTimedFlow=false), Inlined(flowClass=class net.corda.core.internal.ResolveTransactionsFlow, subFlowVersion=CoreFlow(platformVersion=11), isEnabledTimedFlow=false), Inlined(flowClass=class net.corda.core.internal.FetchNetworkParametersFlow, subFlowVersion=CoreFlow(platformVersion=11), isEnabledTimedFlow=false)]
    [Inlined(flowClass=class net.corda.samples.obligation.flows.IOUSettleFlowResponder, subFlowVersion=CorDappFlow(platformVersion=11, corDappName=workflows-1.0, corDappHash=F8E3613207E5ABAEC38930FAA426F7BA91464AA72DAF3EFB74917A0BA71A146E), isEnabledTimedFlow=false), Inlined(flowClass=class net.corda.samples.obligation.flows.IOUSettleFlowResponder$call$signedTransactionFlow$1, subFlowVersion=CoreFlow(platformVersion=11), isEnabledTimedFlow=false), Inlined(flowClass=class net.corda.core.flows.ReceiveTransactionFlow, subFlowVersion=CoreFlow(platformVersion=11), isEnabledTimedFlow=false), Inlined(flowClass=class net.corda.core.internal.ResolveTransactionsFlow, subFlowVersion=CoreFlow(platformVersion=11), isEnabledTimedFlow=false)]
checkpoint.timestamp: 
    2023-01-31T07:40:30.033Z
    2023-01-31T07:40:30.034Z


 --- Transition of flow [1e1a8f4c-486e-4901-ba69-3c906954bdac] ---
  Timestamp: 2023-01-31T07:40:30.038Z
  Event: Suspend(ioRequest=Sleep(wakeUpAfter=2023-01-31T07:40:30.034Z), maySkipCheckpoint=false, fiber=2962FA682BA4277A946CF1567897273DCE17559C89F97A3BAF4B357323C8DE8B, currentStep=Starting)
  Actions: 
    PersistCheckpoint(id=[1e1a8f4c-486e-4901-ba69-3c906954bdac], checkpoint=Checkpoint(checkpointState=CheckpointState(invocationContext=InvocationContext(origin=Peer(party=O=Mock Company 1, L=London, C=GB), trace=Trace(invocationId=e9eb1dcd-004a-4c84-aa69-318e9319d299, timestamp: 2023-01-31T07:40:29.984Z, entityType: Invocation, sessionId=e9eb1dcd-004a-4c84-aa69-318e9319d299, timestamp: 2023-01-31T07:40:29.984Z, entityType: Session), actor=null, externalTrace=null, impersonatedActor=null, arguments=[], clientId=null), ourIdentity=O=Mock Company 3, L=London, C=GB, sessions={SessionId(toLong=2957585445716046757)=Initiated(peerParty=O=Mock Company 1, L=London, C=GB, peerFlowInfo=FlowInfo(flowVersion=1, appName=<unknown>), receivedMessages=[], otherSideErrored=false, peerSinkSessionId=SessionId(toLong=-3358756275887911989), deduplicationSeed=D--3358756275887911989-5594156702427061583)}, sessionsToBeClosed=[], subFlowStack=[Inlined(flowClass=class net.corda.samples.obligation.flows.IOUSettleFlowResponder, subFlowVersion=CorDappFlow(platformVersion=11, corDappName=workflows-1.0, corDappHash=F8E3613207E5ABAEC38930FAA426F7BA91464AA72DAF3EFB74917A0BA71A146E), isEnabledTimedFlow=false), Inlined(flowClass=class net.corda.samples.obligation.flows.IOUSettleFlowResponder$call$signedTransactionFlow$1, subFlowVersion=CoreFlow(platformVersion=11), isEnabledTimedFlow=false), Inlined(flowClass=class net.corda.core.flows.ReceiveTransactionFlow, subFlowVersion=CoreFlow(platformVersion=11), isEnabledTimedFlow=false), Inlined(flowClass=class net.corda.core.internal.ResolveTransactionsFlow, subFlowVersion=CoreFlow(platformVersion=11), isEnabledTimedFlow=false)], numberOfSuspends=3, numberOfCommits=4), flowState=Started(flowIORequest=Sleep(wakeUpAfter=2023-01-31T07:40:30.034Z), frozenFiber=2962FA682BA4277A946CF1567897273DCE17559C89F97A3BAF4B357323C8DE8B), errorState=Clean, result=null, status=RUNNABLE, progressStep=Starting, flowIoRequest=Sleep, compatible=true), isCheckpointUpdate=true)
    PersistDeduplicationFacts(deduplicationHandlers=[net.corda.testing.node.internal.MockNodeMessagingService$InMemoryDeduplicationHandler@5954aa71])
    CommitTransaction
    AcknowledgeMessages(deduplicationHandlers=[net.corda.testing.node.internal.MockNodeMessagingService$InMemoryDeduplicationHandler@5954aa71])
    ScheduleEvent(event=DoRemainingWork)
  Continuation: ProcessEvents
  Diff between previous and next state:
pendingDeduplicationHandlers: 
    [net.corda.testing.node.internal.MockNodeMessagingService$InMemoryDeduplicationHandler@5954aa71]
    []
numberOfCommits: 
    3
    4
checkpoint.flowIoRequest: 
    SendAndReceive
    Sleep
checkpoint.checkpointState.numberOfCommits: 
    3
    4
checkpoint.checkpointState.numberOfSuspends: 
    2
    3
checkpoint.flowState.frozenFiber.hash: 
    771CD4E58AE7B416C3A15FE0ADFD9A9B9D807FCDE24541142039C2BA630E34FD
    2962FA682BA4277A946CF1567897273DCE17559C89F97A3BAF4B357323C8DE8B
checkpoint.flowState.flowIORequest: 
    Receive(sessions=[FlowSessionImpl(destination=O=Mock Company 1, L=London, C=GB, sourceSessionId=SessionId(toLong=2957585445716046757))])
    Sleep(wakeUpAfter=2023-01-31T07:40:30.034Z)
checkpoint.timestamp: 
    2023-01-31T07:40:30.034Z
    2023-01-31T07:40:30.036Z
isFlowResumed: 
    true
    false


 --- Transition of flow [1e1a8f4c-486e-4901-ba69-3c906954bdac] ---
  Timestamp: 2023-01-31T07:40:30.038Z
  Event: DoRemainingWork
  Actions: 
    SleepUntil(currentState=StateMachineState(checkpoint=Checkpoint(checkpointState=CheckpointState(invocationContext=InvocationContext(origin=Peer(party=O=Mock Company 1, L=London, C=GB), trace=Trace(invocationId=e9eb1dcd-004a-4c84-aa69-318e9319d299, timestamp: 2023-01-31T07:40:29.984Z, entityType: Invocation, sessionId=e9eb1dcd-004a-4c84-aa69-318e9319d299, timestamp: 2023-01-31T07:40:29.984Z, entityType: Session), actor=null, externalTrace=null, impersonatedActor=null, arguments=[], clientId=null), ourIdentity=O=Mock Company 3, L=London, C=GB, sessions={SessionId(toLong=2957585445716046757)=Initiated(peerParty=O=Mock Company 1, L=London, C=GB, peerFlowInfo=FlowInfo(flowVersion=1, appName=<unknown>), receivedMessages=[], otherSideErrored=false, peerSinkSessionId=SessionId(toLong=-3358756275887911989), deduplicationSeed=D--3358756275887911989-5594156702427061583)}, sessionsToBeClosed=[], subFlowStack=[Inlined(flowClass=class net.corda.samples.obligation.flows.IOUSettleFlowResponder, subFlowVersion=CorDappFlow(platformVersion=11, corDappName=workflows-1.0, corDappHash=F8E3613207E5ABAEC38930FAA426F7BA91464AA72DAF3EFB74917A0BA71A146E), isEnabledTimedFlow=false), Inlined(flowClass=class net.corda.samples.obligation.flows.IOUSettleFlowResponder$call$signedTransactionFlow$1, subFlowVersion=CoreFlow(platformVersion=11), isEnabledTimedFlow=false), Inlined(flowClass=class net.corda.core.flows.ReceiveTransactionFlow, subFlowVersion=CoreFlow(platformVersion=11), isEnabledTimedFlow=false), Inlined(flowClass=class net.corda.core.internal.ResolveTransactionsFlow, subFlowVersion=CoreFlow(platformVersion=11), isEnabledTimedFlow=false)], numberOfSuspends=3, numberOfCommits=4), flowState=Started(flowIORequest=Sleep(wakeUpAfter=2023-01-31T07:40:30.034Z), frozenFiber=2962FA682BA4277A946CF1567897273DCE17559C89F97A3BAF4B357323C8DE8B), errorState=Clean, result=null, status=RUNNABLE, progressStep=Starting, flowIoRequest=Sleep, compatible=true), flowLogic=net.corda.samples.obligation.flows.IOUSettleFlowResponder@2f5cc37c, pendingDeduplicationHandlers=[], isFlowResumed=false, isWaitingForFuture=true, future=java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask@79a37fdd, isAnyCheckpointPersisted=true, isStartIdempotent=false, isRemoved=false, isKilled=false, isDead=false, senderUUID=3ecbc590-084c-4279-8d61-b997a352b464, reloadCheckpointAfterSuspendCount=null, numberOfCommits=4, lock=java.util.concurrent.Semaphore@7b5b718f[Permits = 0]), time=2023-01-31T07:40:30.034Z)
  Continuation: ProcessEvents
  Diff between previous and next state:
future: 
    null
    java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask@79a37fdd
isWaitingForFuture: 
    false
    true


 --- Transition of flow [1e1a8f4c-486e-4901-ba69-3c906954bdac] ---
  Timestamp: 2023-01-31T07:40:30.039Z
  Event: WakeUpSleepyFlow
  Actions: 
    CreateTransaction
  Continuation: Resume(result=class kotlin.Unit)
  Diff between previous and next state:
future: 
    java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask@79a37fdd
    null
isWaitingForFuture: 
    true
    false
isFlowResumed: 
    false
    true


 --- Transition of flow [1e1a8f4c-486e-4901-ba69-3c906954bdac] ---
  Timestamp: 2023-01-31T07:40:30.039Z
  Event: EnterSubFlow(subFlowClass=class net.corda.core.internal.FetchTransactionsFlow, subFlowVersion=CoreFlow(platformVersion=11), isEnabledTimedFlow=false)
  Actions: 
    
  Continuation: ProcessEvents
  Diff between previous and next state:
checkpoint.checkpointState.subFlowStack: 
    [Inlined(flowClass=class net.corda.samples.obligation.flows.IOUSettleFlowResponder, subFlowVersion=CorDappFlow(platformVersion=11, corDappName=workflows-1.0, corDappHash=F8E3613207E5ABAEC38930FAA426F7BA91464AA72DAF3EFB74917A0BA71A146E), isEnabledTimedFlow=false), Inlined(flowClass=class net.corda.samples.obligation.flows.IOUSettleFlowResponder$call$signedTransactionFlow$1, subFlowVersion=CoreFlow(platformVersion=11), isEnabledTimedFlow=false), Inlined(flowClass=class net.corda.core.flows.ReceiveTransactionFlow, subFlowVersion=CoreFlow(platformVersion=11), isEnabledTimedFlow=false), Inlined(flowClass=class net.corda.core.internal.ResolveTransactionsFlow, subFlowVersion=CoreFlow(platformVersion=11), isEnabledTimedFlow=false)]
    [Inlined(flowClass=class net.corda.samples.obligation.flows.IOUSettleFlowResponder, subFlowVersion=CorDappFlow(platformVersion=11, corDappName=workflows-1.0, corDappHash=F8E3613207E5ABAEC38930FAA426F7BA91464AA72DAF3EFB74917A0BA71A146E), isEnabledTimedFlow=false), Inlined(flowClass=class net.corda.samples.obligation.flows.IOUSettleFlowResponder$call$signedTransactionFlow$1, subFlowVersion=CoreFlow(platformVersion=11), isEnabledTimedFlow=false), Inlined(flowClass=class net.corda.core.flows.ReceiveTransactionFlow, subFlowVersion=CoreFlow(platformVersion=11), isEnabledTimedFlow=false), Inlined(flowClass=class net.corda.core.internal.ResolveTransactionsFlow, subFlowVersion=CoreFlow(platformVersion=11), isEnabledTimedFlow=false), Inlined(flowClass=class net.corda.core.internal.FetchTransactionsFlow, subFlowVersion=CoreFlow(platformVersion=11), isEnabledTimedFlow=false)]
checkpoint.timestamp: 
    2023-01-31T07:40:30.036Z
    2023-01-31T07:40:30.039Z


 --- Transition of flow [1e1a8f4c-486e-4901-ba69-3c906954bdac] ---
  Timestamp: 2023-01-31T07:40:30.039Z
  Event: LeaveSubFlow
  Actions: 
    
  Continuation: ProcessEvents
  Diff between previous and next state:
checkpoint.checkpointState.subFlowStack: 
    [Inlined(flowClass=class net.corda.samples.obligation.flows.IOUSettleFlowResponder, subFlowVersion=CorDappFlow(platformVersion=11, corDappName=workflows-1.0, corDappHash=F8E3613207E5ABAEC38930FAA426F7BA91464AA72DAF3EFB74917A0BA71A146E), isEnabledTimedFlow=false), Inlined(flowClass=class net.corda.samples.obligation.flows.IOUSettleFlowResponder$call$signedTransactionFlow$1, subFlowVersion=CoreFlow(platformVersion=11), isEnabledTimedFlow=false), Inlined(flowClass=class net.corda.core.flows.ReceiveTransactionFlow, subFlowVersion=CoreFlow(platformVersion=11), isEnabledTimedFlow=false), Inlined(flowClass=class net.corda.core.internal.ResolveTransactionsFlow, subFlowVersion=CoreFlow(platformVersion=11), isEnabledTimedFlow=false), Inlined(flowClass=class net.corda.core.internal.FetchTransactionsFlow, subFlowVersion=CoreFlow(platformVersion=11), isEnabledTimedFlow=false)]
    [Inlined(flowClass=class net.corda.samples.obligation.flows.IOUSettleFlowResponder, subFlowVersion=CorDappFlow(platformVersion=11, corDappName=workflows-1.0, corDappHash=F8E3613207E5ABAEC38930FAA426F7BA91464AA72DAF3EFB74917A0BA71A146E), isEnabledTimedFlow=false), Inlined(flowClass=class net.corda.samples.obligation.flows.IOUSettleFlowResponder$call$signedTransactionFlow$1, subFlowVersion=CoreFlow(platformVersion=11), isEnabledTimedFlow=false), Inlined(flowClass=class net.corda.core.flows.ReceiveTransactionFlow, subFlowVersion=CoreFlow(platformVersion=11), isEnabledTimedFlow=false), Inlined(flowClass=class net.corda.core.internal.ResolveTransactionsFlow, subFlowVersion=CoreFlow(platformVersion=11), isEnabledTimedFlow=false)]


 --- Transition of flow [1e1a8f4c-486e-4901-ba69-3c906954bdac] ---
  Timestamp: 2023-01-31T07:40:30.043Z
  Event: Suspend(ioRequest=Send(sessionToMessage={FlowSessionImpl(destination=O=Mock Company 1, L=London, C=GB, sourceSessionId=SessionId(toLong=2957585445716046757))=768AED61FD2A58D74D7316731407E0600065080E1F3E6397EE4FA5AEFEE79295}), maySkipCheckpoint=false, fiber=B26567D2B83E7FBD8B00E9E3AC6D41CB2CA731B4AACF6555E3E9BCBAD4F439E2, currentStep=Starting)
  Actions: 
    PersistCheckpoint(id=[1e1a8f4c-486e-4901-ba69-3c906954bdac], checkpoint=Checkpoint(checkpointState=CheckpointState(invocationContext=InvocationContext(origin=Peer(party=O=Mock Company 1, L=London, C=GB), trace=Trace(invocationId=e9eb1dcd-004a-4c84-aa69-318e9319d299, timestamp: 2023-01-31T07:40:29.984Z, entityType: Invocation, sessionId=e9eb1dcd-004a-4c84-aa69-318e9319d299, timestamp: 2023-01-31T07:40:29.984Z, entityType: Session), actor=null, externalTrace=null, impersonatedActor=null, arguments=[], clientId=null), ourIdentity=O=Mock Company 3, L=London, C=GB, sessions={SessionId(toLong=2957585445716046757)=Initiated(peerParty=O=Mock Company 1, L=London, C=GB, peerFlowInfo=FlowInfo(flowVersion=1, appName=<unknown>), receivedMessages=[], otherSideErrored=false, peerSinkSessionId=SessionId(toLong=-3358756275887911989), deduplicationSeed=D--3358756275887911989-5594156702427061583)}, sessionsToBeClosed=[], subFlowStack=[Inlined(flowClass=class net.corda.samples.obligation.flows.IOUSettleFlowResponder, subFlowVersion=CorDappFlow(platformVersion=11, corDappName=workflows-1.0, corDappHash=F8E3613207E5ABAEC38930FAA426F7BA91464AA72DAF3EFB74917A0BA71A146E), isEnabledTimedFlow=false), Inlined(flowClass=class net.corda.samples.obligation.flows.IOUSettleFlowResponder$call$signedTransactionFlow$1, subFlowVersion=CoreFlow(platformVersion=11), isEnabledTimedFlow=false), Inlined(flowClass=class net.corda.core.flows.ReceiveTransactionFlow, subFlowVersion=CoreFlow(platformVersion=11), isEnabledTimedFlow=false), Inlined(flowClass=class net.corda.core.internal.ResolveTransactionsFlow, subFlowVersion=CoreFlow(platformVersion=11), isEnabledTimedFlow=false)], numberOfSuspends=4, numberOfCommits=5), flowState=Started(flowIORequest=Send(sessionToMessage={FlowSessionImpl(destination=O=Mock Company 1, L=London, C=GB, sourceSessionId=SessionId(toLong=2957585445716046757))=768AED61FD2A58D74D7316731407E0600065080E1F3E6397EE4FA5AEFEE79295}), frozenFiber=B26567D2B83E7FBD8B00E9E3AC6D41CB2CA731B4AACF6555E3E9BCBAD4F439E2), errorState=Clean, result=null, status=RUNNABLE, progressStep=Starting, flowIoRequest=Send, compatible=true), isCheckpointUpdate=true)
    PersistDeduplicationFacts(deduplicationHandlers=[])
    CommitTransaction
    AcknowledgeMessages(deduplicationHandlers=[])
    ScheduleEvent(event=DoRemainingWork)
  Continuation: ProcessEvents
  Diff between previous and next state:
numberOfCommits: 
    4
    5
checkpoint.flowIoRequest: 
    Sleep
    Send
checkpoint.checkpointState.numberOfCommits: 
    4
    5
checkpoint.checkpointState.numberOfSuspends: 
    3
    4
checkpoint.flowState.frozenFiber.hash: 
    2962FA682BA4277A946CF1567897273DCE17559C89F97A3BAF4B357323C8DE8B
    B26567D2B83E7FBD8B00E9E3AC6D41CB2CA731B4AACF6555E3E9BCBAD4F439E2
checkpoint.flowState.flowIORequest: 
    Sleep(wakeUpAfter=2023-01-31T07:40:30.034Z)
    Send(sessionToMessage={FlowSessionImpl(destination=O=Mock Company 1, L=London, C=GB, sourceSessionId=SessionId(toLong=2957585445716046757))=768AED61FD2A58D74D7316731407E0600065080E1F3E6397EE4FA5AEFEE79295})
checkpoint.timestamp: 
    2023-01-31T07:40:30.039Z
    2023-01-31T07:40:30.042Z
isFlowResumed: 
    true
    false


 --- Transition of flow [1e1a8f4c-486e-4901-ba69-3c906954bdac] ---
  Timestamp: 2023-01-31T07:40:30.044Z
  Event: DoRemainingWork
  Actions: 
    SendMultiple(sendInitial=[], sendExisting=[SendExisting(peerParty=O=Mock Company 1, L=London, C=GB, message=ExistingSessionMessage(recipientSessionId=SessionId(toLong=-3358756275887911989), payload=DataSessionMessage(payload=class net.corda.core.serialization.SerializedBytes)), deduplicationId=SenderDeduplicationId(deduplicationId=DeduplicationId(toString=N-D--3358756275887911989-5594156702427061583-4-0), senderUUID=3ecbc590-084c-4279-8d61-b997a352b464))])
    CreateTransaction
  Continuation: Resume(result=class kotlin.Unit)
  Diff between previous and next state:
isFlowResumed: 
    false
    true


 --- Transition of flow [1e1a8f4c-486e-4901-ba69-3c906954bdac] ---
  Timestamp: 2023-01-31T07:40:30.311Z
  Event: LeaveSubFlow
  Actions: 
    
  Continuation: ProcessEvents
  Diff between previous and next state:
checkpoint.checkpointState.subFlowStack: 
    [Inlined(flowClass=class net.corda.samples.obligation.flows.IOUSettleFlowResponder, subFlowVersion=CorDappFlow(platformVersion=11, corDappName=workflows-1.0, corDappHash=F8E3613207E5ABAEC38930FAA426F7BA91464AA72DAF3EFB74917A0BA71A146E), isEnabledTimedFlow=false), Inlined(flowClass=class net.corda.samples.obligation.flows.IOUSettleFlowResponder$call$signedTransactionFlow$1, subFlowVersion=CoreFlow(platformVersion=11), isEnabledTimedFlow=false), Inlined(flowClass=class net.corda.core.flows.ReceiveTransactionFlow, subFlowVersion=CoreFlow(platformVersion=11), isEnabledTimedFlow=false), Inlined(flowClass=class net.corda.core.internal.ResolveTransactionsFlow, subFlowVersion=CoreFlow(platformVersion=11), isEnabledTimedFlow=false)]
    [Inlined(flowClass=class net.corda.samples.obligation.flows.IOUSettleFlowResponder, subFlowVersion=CorDappFlow(platformVersion=11, corDappName=workflows-1.0, corDappHash=F8E3613207E5ABAEC38930FAA426F7BA91464AA72DAF3EFB74917A0BA71A146E), isEnabledTimedFlow=false), Inlined(flowClass=class net.corda.samples.obligation.flows.IOUSettleFlowResponder$call$signedTransactionFlow$1, subFlowVersion=CoreFlow(platformVersion=11), isEnabledTimedFlow=false), Inlined(flowClass=class net.corda.core.flows.ReceiveTransactionFlow, subFlowVersion=CoreFlow(platformVersion=11), isEnabledTimedFlow=false)]
checkpoint.timestamp: 
    2023-01-31T07:40:30.043Z
    2023-01-31T07:40:30.311Z


 --- Transition of flow [1e1a8f4c-486e-4901-ba69-3c906954bdac] ---
  Timestamp: 2023-01-31T07:40:30.380Z
  Event: LeaveSubFlow
  Actions: 
    
  Continuation: ProcessEvents
  Diff between previous and next state:
checkpoint.checkpointState.subFlowStack: 
    [Inlined(flowClass=class net.corda.samples.obligation.flows.IOUSettleFlowResponder, subFlowVersion=CorDappFlow(platformVersion=11, corDappName=workflows-1.0, corDappHash=F8E3613207E5ABAEC38930FAA426F7BA91464AA72DAF3EFB74917A0BA71A146E), isEnabledTimedFlow=false), Inlined(flowClass=class net.corda.samples.obligation.flows.IOUSettleFlowResponder$call$signedTransactionFlow$1, subFlowVersion=CoreFlow(platformVersion=11), isEnabledTimedFlow=false), Inlined(flowClass=class net.corda.core.flows.ReceiveTransactionFlow, subFlowVersion=CoreFlow(platformVersion=11), isEnabledTimedFlow=false)]
    [Inlined(flowClass=class net.corda.samples.obligation.flows.IOUSettleFlowResponder, subFlowVersion=CorDappFlow(platformVersion=11, corDappName=workflows-1.0, corDappHash=F8E3613207E5ABAEC38930FAA426F7BA91464AA72DAF3EFB74917A0BA71A146E), isEnabledTimedFlow=false), Inlined(flowClass=class net.corda.samples.obligation.flows.IOUSettleFlowResponder$call$signedTransactionFlow$1, subFlowVersion=CoreFlow(platformVersion=11), isEnabledTimedFlow=false)]
checkpoint.timestamp: 
    2023-01-31T07:40:30.311Z
    2023-01-31T07:40:30.380Z


 --- Transition of flow [1e1a8f4c-486e-4901-ba69-3c906954bdac] ---
  Timestamp: 2023-01-31T07:40:30.384Z
  Event: Suspend(ioRequest=Receive(sessions=[FlowSessionImpl(destination=O=Mock Company 1, L=London, C=GB, sourceSessionId=SessionId(toLong=2957585445716046757))]), maySkipCheckpoint=false, fiber=C64670B7B2159663E44B67BFCE4C8E9E0E0846C5C86D05673206CB96894FEEC8, currentStep=Starting)
  Actions: 
    PersistCheckpoint(id=[1e1a8f4c-486e-4901-ba69-3c906954bdac], checkpoint=Checkpoint(checkpointState=CheckpointState(invocationContext=InvocationContext(origin=Peer(party=O=Mock Company 1, L=London, C=GB), trace=Trace(invocationId=e9eb1dcd-004a-4c84-aa69-318e9319d299, timestamp: 2023-01-31T07:40:29.984Z, entityType: Invocation, sessionId=e9eb1dcd-004a-4c84-aa69-318e9319d299, timestamp: 2023-01-31T07:40:29.984Z, entityType: Session), actor=null, externalTrace=null, impersonatedActor=null, arguments=[], clientId=null), ourIdentity=O=Mock Company 3, L=London, C=GB, sessions={SessionId(toLong=2957585445716046757)=Initiated(peerParty=O=Mock Company 1, L=London, C=GB, peerFlowInfo=FlowInfo(flowVersion=1, appName=<unknown>), receivedMessages=[], otherSideErrored=false, peerSinkSessionId=SessionId(toLong=-3358756275887911989), deduplicationSeed=D--3358756275887911989-5594156702427061583)}, sessionsToBeClosed=[], subFlowStack=[Inlined(flowClass=class net.corda.samples.obligation.flows.IOUSettleFlowResponder, subFlowVersion=CorDappFlow(platformVersion=11, corDappName=workflows-1.0, corDappHash=F8E3613207E5ABAEC38930FAA426F7BA91464AA72DAF3EFB74917A0BA71A146E), isEnabledTimedFlow=false), Inlined(flowClass=class net.corda.samples.obligation.flows.IOUSettleFlowResponder$call$signedTransactionFlow$1, subFlowVersion=CoreFlow(platformVersion=11), isEnabledTimedFlow=false)], numberOfSuspends=5, numberOfCommits=6), flowState=Started(flowIORequest=Receive(sessions=[FlowSessionImpl(destination=O=Mock Company 1, L=London, C=GB, sourceSessionId=SessionId(toLong=2957585445716046757))]), frozenFiber=C64670B7B2159663E44B67BFCE4C8E9E0E0846C5C86D05673206CB96894FEEC8), errorState=Clean, result=null, status=RUNNABLE, progressStep=Starting, flowIoRequest=Receive, compatible=true), isCheckpointUpdate=true)
    PersistDeduplicationFacts(deduplicationHandlers=[])
    CommitTransaction
    AcknowledgeMessages(deduplicationHandlers=[])
    ScheduleEvent(event=DoRemainingWork)
  Continuation: ProcessEvents
  Diff between previous and next state:
numberOfCommits: 
    5
    6
checkpoint.flowIoRequest: 
    Send
    Receive
checkpoint.checkpointState.numberOfCommits: 
    5
    6
checkpoint.checkpointState.numberOfSuspends: 
    4
    5
checkpoint.flowState.frozenFiber.hash: 
    B26567D2B83E7FBD8B00E9E3AC6D41CB2CA731B4AACF6555E3E9BCBAD4F439E2
    C64670B7B2159663E44B67BFCE4C8E9E0E0846C5C86D05673206CB96894FEEC8
checkpoint.flowState.flowIORequest: 
    Send(sessionToMessage={FlowSessionImpl(destination=O=Mock Company 1, L=London, C=GB, sourceSessionId=SessionId(toLong=2957585445716046757))=768AED61FD2A58D74D7316731407E0600065080E1F3E6397EE4FA5AEFEE79295})
    Receive(sessions=[FlowSessionImpl(destination=O=Mock Company 1, L=London, C=GB, sourceSessionId=SessionId(toLong=2957585445716046757))])
checkpoint.timestamp: 
    2023-01-31T07:40:30.380Z
    2023-01-31T07:40:30.382Z
isFlowResumed: 
    true
    false


 --- Transition of flow [1e1a8f4c-486e-4901-ba69-3c906954bdac] ---
  Timestamp: 2023-01-31T07:40:30.384Z
  Event: DoRemainingWork
  Actions: 
    
  Continuation: ProcessEvents
  Diff between previous and next state:
null

 --- Transition of flow [1e1a8f4c-486e-4901-ba69-3c906954bdac] ---
  Timestamp: 2023-01-31T07:40:30.395Z
  Event: DeliverSessionMessage(sessionMessage=ExistingSessionMessage(recipientSessionId=SessionId(toLong=2957585445716046757), payload=DataSessionMessage(payload=class net.corda.core.serialization.SerializedBytes)), deduplicationHandler=net.corda.testing.node.internal.MockNodeMessagingService$InMemoryDeduplicationHandler@3e0c9b0d, sender=O=Mock Company 1, L=London, C=GB)
  Actions: 
    ScheduleEvent(event=DoRemainingWork)
  Continuation: ProcessEvents
  Diff between previous and next state:
pendingDeduplicationHandlers: 
    []
    [net.corda.testing.node.internal.MockNodeMessagingService$InMemoryDeduplicationHandler@3e0c9b0d]
checkpoint.checkpointState.sessions.SessionId(toLong=2957585445716046757).receivedMessages.isEmpty: 
    true
    false
checkpoint.timestamp: 
    2023-01-31T07:40:30.384Z
    2023-01-31T07:40:30.394Z


 --- Transition of flow [1e1a8f4c-486e-4901-ba69-3c906954bdac] ---
  Timestamp: 2023-01-31T07:40:30.395Z
  Event: DoRemainingWork
  Actions: 
    CreateTransaction
  Continuation: Resume(result=class java.util.LinkedHashMap)
  Diff between previous and next state:
checkpoint.checkpointState.sessions.SessionId(toLong=2957585445716046757).receivedMessages.isEmpty: 
    false
    true
checkpoint.timestamp: 
    2023-01-31T07:40:30.394Z
    2023-01-31T07:40:30.395Z
isFlowResumed: 
    false
    true


 --- Transition of flow [1e1a8f4c-486e-4901-ba69-3c906954bdac] ---
  Timestamp: 2023-01-31T07:40:30.404Z
  Event: Suspend(ioRequest=Send(sessionToMessage={FlowSessionImpl(destination=O=Mock Company 1, L=London, C=GB, sourceSessionId=SessionId(toLong=2957585445716046757))=8E1C1E99010E72DB35C29D8833E0A2706E7A506FFDD68044BB744F6F61FED290}), maySkipCheckpoint=false, fiber=22034643D3722F7F60915FC28D67D520490A2E8AC9D9B5377321E7165F065089, currentStep=Starting)
  Actions: 
    PersistCheckpoint(id=[1e1a8f4c-486e-4901-ba69-3c906954bdac], checkpoint=Checkpoint(checkpointState=CheckpointState(invocationContext=InvocationContext(origin=Peer(party=O=Mock Company 1, L=London, C=GB), trace=Trace(invocationId=e9eb1dcd-004a-4c84-aa69-318e9319d299, timestamp: 2023-01-31T07:40:29.984Z, entityType: Invocation, sessionId=e9eb1dcd-004a-4c84-aa69-318e9319d299, timestamp: 2023-01-31T07:40:29.984Z, entityType: Session), actor=null, externalTrace=null, impersonatedActor=null, arguments=[], clientId=null), ourIdentity=O=Mock Company 3, L=London, C=GB, sessions={SessionId(toLong=2957585445716046757)=Initiated(peerParty=O=Mock Company 1, L=London, C=GB, peerFlowInfo=FlowInfo(flowVersion=1, appName=<unknown>), receivedMessages=[], otherSideErrored=false, peerSinkSessionId=SessionId(toLong=-3358756275887911989), deduplicationSeed=D--3358756275887911989-5594156702427061583)}, sessionsToBeClosed=[], subFlowStack=[Inlined(flowClass=class net.corda.samples.obligation.flows.IOUSettleFlowResponder, subFlowVersion=CorDappFlow(platformVersion=11, corDappName=workflows-1.0, corDappHash=F8E3613207E5ABAEC38930FAA426F7BA91464AA72DAF3EFB74917A0BA71A146E), isEnabledTimedFlow=false), Inlined(flowClass=class net.corda.samples.obligation.flows.IOUSettleFlowResponder$call$signedTransactionFlow$1, subFlowVersion=CoreFlow(platformVersion=11), isEnabledTimedFlow=false)], numberOfSuspends=6, numberOfCommits=7), flowState=Started(flowIORequest=Send(sessionToMessage={FlowSessionImpl(destination=O=Mock Company 1, L=London, C=GB, sourceSessionId=SessionId(toLong=2957585445716046757))=8E1C1E99010E72DB35C29D8833E0A2706E7A506FFDD68044BB744F6F61FED290}), frozenFiber=22034643D3722F7F60915FC28D67D520490A2E8AC9D9B5377321E7165F065089), errorState=Clean, result=null, status=RUNNABLE, progressStep=Starting, flowIoRequest=Send, compatible=true), isCheckpointUpdate=true)
    PersistDeduplicationFacts(deduplicationHandlers=[net.corda.testing.node.internal.MockNodeMessagingService$InMemoryDeduplicationHandler@3e0c9b0d])
    CommitTransaction
    AcknowledgeMessages(deduplicationHandlers=[net.corda.testing.node.internal.MockNodeMessagingService$InMemoryDeduplicationHandler@3e0c9b0d])
    ScheduleEvent(event=DoRemainingWork)
  Continuation: ProcessEvents
  Diff between previous and next state:
pendingDeduplicationHandlers: 
    [net.corda.testing.node.internal.MockNodeMessagingService$InMemoryDeduplicationHandler@3e0c9b0d]
    []
numberOfCommits: 
    6
    7
checkpoint.flowIoRequest: 
    Receive
    Send
checkpoint.checkpointState.numberOfCommits: 
    6
    7
checkpoint.checkpointState.numberOfSuspends: 
    5
    6
checkpoint.flowState.frozenFiber.hash: 
    C64670B7B2159663E44B67BFCE4C8E9E0E0846C5C86D05673206CB96894FEEC8
    22034643D3722F7F60915FC28D67D520490A2E8AC9D9B5377321E7165F065089
checkpoint.flowState.flowIORequest: 
    Receive(sessions=[FlowSessionImpl(destination=O=Mock Company 1, L=London, C=GB, sourceSessionId=SessionId(toLong=2957585445716046757))])
    Send(sessionToMessage={FlowSessionImpl(destination=O=Mock Company 1, L=London, C=GB, sourceSessionId=SessionId(toLong=2957585445716046757))=8E1C1E99010E72DB35C29D8833E0A2706E7A506FFDD68044BB744F6F61FED290})
checkpoint.timestamp: 
    2023-01-31T07:40:30.395Z
    2023-01-31T07:40:30.402Z
isFlowResumed: 
    true
    false


 --- Transition of flow [1e1a8f4c-486e-4901-ba69-3c906954bdac] ---
  Timestamp: 2023-01-31T07:40:30.405Z
  Event: DoRemainingWork
  Actions: 
    SendMultiple(sendInitial=[], sendExisting=[SendExisting(peerParty=O=Mock Company 1, L=London, C=GB, message=ExistingSessionMessage(recipientSessionId=SessionId(toLong=-3358756275887911989), payload=DataSessionMessage(payload=class net.corda.core.serialization.SerializedBytes)), deduplicationId=SenderDeduplicationId(deduplicationId=DeduplicationId(toString=N-D--3358756275887911989-5594156702427061583-6-0), senderUUID=3ecbc590-084c-4279-8d61-b997a352b464))])
    CreateTransaction
  Continuation: Resume(result=class kotlin.Unit)
  Diff between previous and next state:
isFlowResumed: 
    false
    true


 --- Transition of flow [1e1a8f4c-486e-4901-ba69-3c906954bdac] ---
  Timestamp: 2023-01-31T07:40:30.405Z
  Event: LeaveSubFlow
  Actions: 
    
  Continuation: ProcessEvents
  Diff between previous and next state:
checkpoint.checkpointState.subFlowStack: 
    [Inlined(flowClass=class net.corda.samples.obligation.flows.IOUSettleFlowResponder, subFlowVersion=CorDappFlow(platformVersion=11, corDappName=workflows-1.0, corDappHash=F8E3613207E5ABAEC38930FAA426F7BA91464AA72DAF3EFB74917A0BA71A146E), isEnabledTimedFlow=false), Inlined(flowClass=class net.corda.samples.obligation.flows.IOUSettleFlowResponder$call$signedTransactionFlow$1, subFlowVersion=CoreFlow(platformVersion=11), isEnabledTimedFlow=false)]
    [Inlined(flowClass=class net.corda.samples.obligation.flows.IOUSettleFlowResponder, subFlowVersion=CorDappFlow(platformVersion=11, corDappName=workflows-1.0, corDappHash=F8E3613207E5ABAEC38930FAA426F7BA91464AA72DAF3EFB74917A0BA71A146E), isEnabledTimedFlow=false)]
checkpoint.timestamp: 
    2023-01-31T07:40:30.404Z
    2023-01-31T07:40:30.405Z


 --- Transition of flow [1e1a8f4c-486e-4901-ba69-3c906954bdac] ---
  Timestamp: 2023-01-31T07:40:30.405Z
  Event: EnterSubFlow(subFlowClass=class net.corda.core.flows.ReceiveFinalityFlow, subFlowVersion=CoreFlow(platformVersion=11), isEnabledTimedFlow=false)
  Actions: 
    
  Continuation: ProcessEvents
  Diff between previous and next state:
checkpoint.checkpointState.subFlowStack: 
    [Inlined(flowClass=class net.corda.samples.obligation.flows.IOUSettleFlowResponder, subFlowVersion=CorDappFlow(platformVersion=11, corDappName=workflows-1.0, corDappHash=F8E3613207E5ABAEC38930FAA426F7BA91464AA72DAF3EFB74917A0BA71A146E), isEnabledTimedFlow=false)]
    [Inlined(flowClass=class net.corda.samples.obligation.flows.IOUSettleFlowResponder, subFlowVersion=CorDappFlow(platformVersion=11, corDappName=workflows-1.0, corDappHash=F8E3613207E5ABAEC38930FAA426F7BA91464AA72DAF3EFB74917A0BA71A146E), isEnabledTimedFlow=false), Inlined(flowClass=class net.corda.core.flows.ReceiveFinalityFlow, subFlowVersion=CoreFlow(platformVersion=11), isEnabledTimedFlow=false)]


 --- Transition of flow [1e1a8f4c-486e-4901-ba69-3c906954bdac] ---
  Timestamp: 2023-01-31T07:40:30.405Z
  Event: EnterSubFlow(subFlowClass=class net.corda.core.flows.ReceiveFinalityFlow$call$1, subFlowVersion=CoreFlow(platformVersion=11), isEnabledTimedFlow=false)
  Actions: 
    
  Continuation: ProcessEvents
  Diff between previous and next state:
checkpoint.checkpointState.subFlowStack: 
    [Inlined(flowClass=class net.corda.samples.obligation.flows.IOUSettleFlowResponder, subFlowVersion=CorDappFlow(platformVersion=11, corDappName=workflows-1.0, corDappHash=F8E3613207E5ABAEC38930FAA426F7BA91464AA72DAF3EFB74917A0BA71A146E), isEnabledTimedFlow=false), Inlined(flowClass=class net.corda.core.flows.ReceiveFinalityFlow, subFlowVersion=CoreFlow(platformVersion=11), isEnabledTimedFlow=false)]
    [Inlined(flowClass=class net.corda.samples.obligation.flows.IOUSettleFlowResponder, subFlowVersion=CorDappFlow(platformVersion=11, corDappName=workflows-1.0, corDappHash=F8E3613207E5ABAEC38930FAA426F7BA91464AA72DAF3EFB74917A0BA71A146E), isEnabledTimedFlow=false), Inlined(flowClass=class net.corda.core.flows.ReceiveFinalityFlow, subFlowVersion=CoreFlow(platformVersion=11), isEnabledTimedFlow=false), Inlined(flowClass=class net.corda.core.flows.ReceiveFinalityFlow$call$1, subFlowVersion=CoreFlow(platformVersion=11), isEnabledTimedFlow=false)]


 --- Transition of flow [1e1a8f4c-486e-4901-ba69-3c906954bdac] ---
  Timestamp: 2023-01-31T07:40:30.408Z
  Event: Suspend(ioRequest=Receive(sessions=[FlowSessionImpl(destination=O=Mock Company 1, L=London, C=GB, sourceSessionId=SessionId(toLong=2957585445716046757))]), maySkipCheckpoint=false, fiber=711131C8D592A3F58A37876F243F6D3583E8B99746D7CB0B495F709E00D68FBB, currentStep=Starting)
  Actions: 
    PersistCheckpoint(id=[1e1a8f4c-486e-4901-ba69-3c906954bdac], checkpoint=Checkpoint(checkpointState=CheckpointState(invocationContext=InvocationContext(origin=Peer(party=O=Mock Company 1, L=London, C=GB), trace=Trace(invocationId=e9eb1dcd-004a-4c84-aa69-318e9319d299, timestamp: 2023-01-31T07:40:29.984Z, entityType: Invocation, sessionId=e9eb1dcd-004a-4c84-aa69-318e9319d299, timestamp: 2023-01-31T07:40:29.984Z, entityType: Session), actor=null, externalTrace=null, impersonatedActor=null, arguments=[], clientId=null), ourIdentity=O=Mock Company 3, L=London, C=GB, sessions={SessionId(toLong=2957585445716046757)=Initiated(peerParty=O=Mock Company 1, L=London, C=GB, peerFlowInfo=FlowInfo(flowVersion=1, appName=<unknown>), receivedMessages=[], otherSideErrored=false, peerSinkSessionId=SessionId(toLong=-3358756275887911989), deduplicationSeed=D--3358756275887911989-5594156702427061583)}, sessionsToBeClosed=[], subFlowStack=[Inlined(flowClass=class net.corda.samples.obligation.flows.IOUSettleFlowResponder, subFlowVersion=CorDappFlow(platformVersion=11, corDappName=workflows-1.0, corDappHash=F8E3613207E5ABAEC38930FAA426F7BA91464AA72DAF3EFB74917A0BA71A146E), isEnabledTimedFlow=false), Inlined(flowClass=class net.corda.core.flows.ReceiveFinalityFlow, subFlowVersion=CoreFlow(platformVersion=11), isEnabledTimedFlow=false), Inlined(flowClass=class net.corda.core.flows.ReceiveFinalityFlow$call$1, subFlowVersion=CoreFlow(platformVersion=11), isEnabledTimedFlow=false)], numberOfSuspends=7, numberOfCommits=8), flowState=Started(flowIORequest=Receive(sessions=[FlowSessionImpl(destination=O=Mock Company 1, L=London, C=GB, sourceSessionId=SessionId(toLong=2957585445716046757))]), frozenFiber=711131C8D592A3F58A37876F243F6D3583E8B99746D7CB0B495F709E00D68FBB), errorState=Clean, result=null, status=RUNNABLE, progressStep=Starting, flowIoRequest=Receive, compatible=true), isCheckpointUpdate=true)
    PersistDeduplicationFacts(deduplicationHandlers=[])
    CommitTransaction
    AcknowledgeMessages(deduplicationHandlers=[])
    ScheduleEvent(event=DoRemainingWork)
  Continuation: ProcessEvents
  Diff between previous and next state:
numberOfCommits: 
    7
    8
checkpoint.flowIoRequest: 
    Send
    Receive
checkpoint.checkpointState.numberOfCommits: 
    7
    8
checkpoint.checkpointState.numberOfSuspends: 
    6
    7
checkpoint.flowState.frozenFiber.hash: 
    22034643D3722F7F60915FC28D67D520490A2E8AC9D9B5377321E7165F065089
    711131C8D592A3F58A37876F243F6D3583E8B99746D7CB0B495F709E00D68FBB
checkpoint.flowState.flowIORequest: 
    Send(sessionToMessage={FlowSessionImpl(destination=O=Mock Company 1, L=London, C=GB, sourceSessionId=SessionId(toLong=2957585445716046757))=8E1C1E99010E72DB35C29D8833E0A2706E7A506FFDD68044BB744F6F61FED290})
    Receive(sessions=[FlowSessionImpl(destination=O=Mock Company 1, L=London, C=GB, sourceSessionId=SessionId(toLong=2957585445716046757))])
checkpoint.timestamp: 
    2023-01-31T07:40:30.405Z
    2023-01-31T07:40:30.407Z
isFlowResumed: 
    true
    false


 --- Transition of flow [1e1a8f4c-486e-4901-ba69-3c906954bdac] ---
  Timestamp: 2023-01-31T07:40:30.408Z
  Event: DoRemainingWork
  Actions: 
    
  Continuation: ProcessEvents
  Diff between previous and next state:
null

 --- Transition of flow [1e1a8f4c-486e-4901-ba69-3c906954bdac] ---
  Timestamp: 2023-01-31T07:40:30.598Z
  Event: DeliverSessionMessage(sessionMessage=ExistingSessionMessage(recipientSessionId=SessionId(toLong=2957585445716046757), payload=ErrorSessionMessage(flowException=null, errorId=-4448502163904690932)), deduplicationHandler=net.corda.testing.node.internal.MockNodeMessagingService$InMemoryDeduplicationHandler@e7831f6, sender=O=Mock Company 1, L=London, C=GB)
  Actions: 
    ScheduleEvent(event=DoRemainingWork)
  Continuation: ProcessEvents
  Diff between previous and next state:
pendingDeduplicationHandlers: 
    []
    [net.corda.testing.node.internal.MockNodeMessagingService$InMemoryDeduplicationHandler@e7831f6]
checkpoint.checkpointState.sessions.SessionId(toLong=2957585445716046757).receivedMessages.isEmpty: 
    true
    false
checkpoint.timestamp: 
    2023-01-31T07:40:30.408Z
    2023-01-31T07:40:30.598Z


 --- Transition of flow [1e1a8f4c-486e-4901-ba69-3c906954bdac] ---
  Timestamp: 2023-01-31T07:40:30.599Z
  Event: DoRemainingWork
  Actions: 
    CreateTransaction
  Continuation: Throw(throwable=net.corda.core.flows.UnexpectedFlowEndException: Counter-flow errored)
  Diff between previous and next state:
checkpoint.checkpointState.sessions.SessionId(toLong=2957585445716046757).receivedMessages.isEmpty: 
    false
    true
checkpoint.checkpointState.sessions.SessionId(toLong=2957585445716046757).otherSideErrored: 
    false
    true
checkpoint.timestamp: 
    2023-01-31T07:40:30.598Z
    2023-01-31T07:40:30.599Z
isFlowResumed: 
    false
    true


 --- Transition of flow [1e1a8f4c-486e-4901-ba69-3c906954bdac] ---
  Timestamp: 2023-01-31T07:40:30.600Z
  Event: LeaveSubFlow
  Actions: 
    
  Continuation: ProcessEvents
  Diff between previous and next state:
checkpoint.checkpointState.subFlowStack: 
    [Inlined(flowClass=class net.corda.samples.obligation.flows.IOUSettleFlowResponder, subFlowVersion=CorDappFlow(platformVersion=11, corDappName=workflows-1.0, corDappHash=F8E3613207E5ABAEC38930FAA426F7BA91464AA72DAF3EFB74917A0BA71A146E), isEnabledTimedFlow=false), Inlined(flowClass=class net.corda.core.flows.ReceiveFinalityFlow, subFlowVersion=CoreFlow(platformVersion=11), isEnabledTimedFlow=false), Inlined(flowClass=class net.corda.core.flows.ReceiveFinalityFlow$call$1, subFlowVersion=CoreFlow(platformVersion=11), isEnabledTimedFlow=false)]
    [Inlined(flowClass=class net.corda.samples.obligation.flows.IOUSettleFlowResponder, subFlowVersion=CorDappFlow(platformVersion=11, corDappName=workflows-1.0, corDappHash=F8E3613207E5ABAEC38930FAA426F7BA91464AA72DAF3EFB74917A0BA71A146E), isEnabledTimedFlow=false), Inlined(flowClass=class net.corda.core.flows.ReceiveFinalityFlow, subFlowVersion=CoreFlow(platformVersion=11), isEnabledTimedFlow=false)]
checkpoint.timestamp: 
    2023-01-31T07:40:30.599Z
    2023-01-31T07:40:30.600Z


 --- Transition of flow [1e1a8f4c-486e-4901-ba69-3c906954bdac] ---
  Timestamp: 2023-01-31T07:40:30.600Z
  Event: LeaveSubFlow
  Actions: 
    
  Continuation: ProcessEvents
  Diff between previous and next state:
checkpoint.checkpointState.subFlowStack: 
    [Inlined(flowClass=class net.corda.samples.obligation.flows.IOUSettleFlowResponder, subFlowVersion=CorDappFlow(platformVersion=11, corDappName=workflows-1.0, corDappHash=F8E3613207E5ABAEC38930FAA426F7BA91464AA72DAF3EFB74917A0BA71A146E), isEnabledTimedFlow=false), Inlined(flowClass=class net.corda.core.flows.ReceiveFinalityFlow, subFlowVersion=CoreFlow(platformVersion=11), isEnabledTimedFlow=false)]
    [Inlined(flowClass=class net.corda.samples.obligation.flows.IOUSettleFlowResponder, subFlowVersion=CorDappFlow(platformVersion=11, corDappName=workflows-1.0, corDappHash=F8E3613207E5ABAEC38930FAA426F7BA91464AA72DAF3EFB74917A0BA71A146E), isEnabledTimedFlow=false)]


 --- Transition of flow [1e1a8f4c-486e-4901-ba69-3c906954bdac] ---
  Timestamp: 2023-01-31T07:40:30.601Z
  Event: Error(exception=net.corda.core.flows.UnexpectedFlowEndException: Counter-flow errored, rollback=true)
  Actions: 
    RollbackTransaction
    ScheduleEvent(event=DoRemainingWork)
  Continuation: ProcessEvents
  Diff between previous and next state:
checkpoint.errorState: 
    Clean
    Errored(errors=[FlowError(errorId=-4448502163904690932, exception=net.corda.core.flows.UnexpectedFlowEndException: Counter-flow errored)], propagatedIndex=0, propagating=false)
isFlowResumed: 
    true
    false


 --- Transition of flow [1e1a8f4c-486e-4901-ba69-3c906954bdac] ---
  Timestamp: 2023-01-31T07:40:30.602Z
  Event: DoRemainingWork
  Actions: 
    
  Continuation: ProcessEvents
  Diff between previous and next state:
null

 --- Transition of flow [1e1a8f4c-486e-4901-ba69-3c906954bdac] ---
  Timestamp: 2023-01-31T07:40:30.602Z
  Event: StartErrorPropagation
  Actions: 
    ScheduleEvent(event=DoRemainingWork)
  Continuation: ProcessEvents
  Diff between previous and next state:
checkpoint.errorState.propagating: 
    false
    true
checkpoint.timestamp: 
    2023-01-31T07:40:30.600Z
    2023-01-31T07:40:30.602Z


 --- Transition of flow [1e1a8f4c-486e-4901-ba69-3c906954bdac] ---
  Timestamp: 2023-01-31T07:40:30.631Z
  Event: DoRemainingWork
  Actions: 
    PropagateErrors(errorMessages=[ErrorSessionMessage(flowException=null, errorId=-4448502163904690932)], sessions=[], senderUUID=3ecbc590-084c-4279-8d61-b997a352b464)
    CreateTransaction
    RemoveCheckpoint(id=[1e1a8f4c-486e-4901-ba69-3c906954bdac], mayHavePersistentResults=false)
    PersistDeduplicationFacts(deduplicationHandlers=[net.corda.testing.node.internal.MockNodeMessagingService$InMemoryDeduplicationHandler@e7831f6])
    ReleaseSoftLocks(uuid=1e1a8f4c-486e-4901-ba69-3c906954bdac)
    CommitTransaction
    AcknowledgeMessages(deduplicationHandlers=[net.corda.testing.node.internal.MockNodeMessagingService$InMemoryDeduplicationHandler@e7831f6])
    RemoveSessionBindings(sessionIds=[SessionId(toLong=2957585445716046757)])
    RemoveFlow(flowId=[1e1a8f4c-486e-4901-ba69-3c906954bdac], removalReason=ErrorFinish(flowErrors=[FlowError(errorId=-4448502163904690932, exception=net.corda.core.flows.UnexpectedFlowEndException: Counter-flow errored)]), lastState=StateMachineState(checkpoint=Checkpoint(checkpointState=CheckpointState(invocationContext=InvocationContext(origin=Peer(party=O=Mock Company 1, L=London, C=GB), trace=Trace(invocationId=e9eb1dcd-004a-4c84-aa69-318e9319d299, timestamp: 2023-01-31T07:40:29.984Z, entityType: Invocation, sessionId=e9eb1dcd-004a-4c84-aa69-318e9319d299, timestamp: 2023-01-31T07:40:29.984Z, entityType: Session), actor=null, externalTrace=null, impersonatedActor=null, arguments=[], clientId=null), ourIdentity=O=Mock Company 3, L=London, C=GB, sessions={SessionId(toLong=2957585445716046757)=Initiated(peerParty=O=Mock Company 1, L=London, C=GB, peerFlowInfo=FlowInfo(flowVersion=1, appName=<unknown>), receivedMessages=[], otherSideErrored=true, peerSinkSessionId=SessionId(toLong=-3358756275887911989), deduplicationSeed=D--3358756275887911989-5594156702427061583)}, sessionsToBeClosed=[], subFlowStack=[Inlined(flowClass=class net.corda.samples.obligation.flows.IOUSettleFlowResponder, subFlowVersion=CorDappFlow(platformVersion=11, corDappName=workflows-1.0, corDappHash=F8E3613207E5ABAEC38930FAA426F7BA91464AA72DAF3EFB74917A0BA71A146E), isEnabledTimedFlow=false)], numberOfSuspends=7, numberOfCommits=9), flowState=net.corda.node.services.statemachine.FlowState$Finished@2ff2612f, errorState=Errored(errors=[FlowError(errorId=-4448502163904690932, exception=net.corda.core.flows.UnexpectedFlowEndException: Counter-flow errored)], propagatedIndex=0, propagating=true), result=null, status=FAILED, progressStep=Starting, flowIoRequest=Receive, compatible=true), flowLogic=net.corda.samples.obligation.flows.IOUSettleFlowResponder@2f5cc37c, pendingDeduplicationHandlers=[], isFlowResumed=false, isWaitingForFuture=false, future=null, isAnyCheckpointPersisted=true, isStartIdempotent=false, isRemoved=true, isKilled=false, isDead=false, senderUUID=3ecbc590-084c-4279-8d61-b997a352b464, reloadCheckpointAfterSuspendCount=null, numberOfCommits=9, lock=java.util.concurrent.Semaphore@7b5b718f[Permits = 0]))
  Continuation: Abort
  Diff between previous and next state:
pendingDeduplicationHandlers: 
    [net.corda.testing.node.internal.MockNodeMessagingService$InMemoryDeduplicationHandler@e7831f6]
    []
isRemoved: 
    false
    true
numberOfCommits: 
    8
    9
checkpoint.status: 
    RUNNABLE
    FAILED
checkpoint.checkpointState.numberOfCommits: 
    8
    9
checkpoint.flowState: 
    Started(flowIORequest=Receive(sessions=[FlowSessionImpl(destination=O=Mock Company 1, L=London, C=GB, sourceSessionId=SessionId(toLong=2957585445716046757))]), frozenFiber=711131C8D592A3F58A37876F243F6D3583E8B99746D7CB0B495F709E00D68FBB)
    net.corda.node.services.statemachine.FlowState$Finished@2ff2612f
checkpoint.timestamp: 
    2023-01-31T07:40:30.602Z
    2023-01-31T07:40:30.616Z
 {fiber-id=10000028, flow-id=1e1a8f4c-486e-4901-ba69-3c906954bdac, invocation_id=e9eb1dcd-004a-4c84-aa69-318e9319d299, invocation_timestamp=2023-01-31T07:40:29.984Z, origin=O=Mock Company 1, L=London, C=GB, session_id=e9eb1dcd-004a-4c84-aa69-318e9319d299, session_timestamp=2023-01-31T07:40:29.984Z, thread-id=854, tx_id=5776DD8CA997A5CC61E2E97CA1BD831E77AAEE5DE7213BE5AC35DB26A3B61748}
[WARN ] 2023-01-31T07:40:30,645Z [Mock network] interceptors.DumpHistoryOnErrorInterceptor. - Flow [1e1a8f4c-486e-4901-ba69-3c906954bdac] error {fiber-id=10000028, flow-id=1e1a8f4c-486e-4901-ba69-3c906954bdac, invocation_id=e9eb1dcd-004a-4c84-aa69-318e9319d299, invocation_timestamp=2023-01-31T07:40:29.984Z, origin=O=Mock Company 1, L=London, C=GB, session_id=e9eb1dcd-004a-4c84-aa69-318e9319d299, session_timestamp=2023-01-31T07:40:29.984Z, thread-id=854, tx_id=5776DD8CA997A5CC61E2E97CA1BD831E77AAEE5DE7213BE5AC35DB26A3B61748}
net.corda.core.flows.UnexpectedFlowEndException: Counter-flow errored
	at Received unexpected counter-flow exception from peer O=Mock Company 1, L=London, C=GB.() ~[?:?]
	at net.corda.node.services.statemachine.FlowStateMachineImpl.fillInLocalStackTrace(FlowStateMachineImpl.kt:244) ~[corda-node-4.9.jar:?]
	at net.corda.node.services.statemachine.FlowStateMachineImpl.processEventsUntilFlowIsResumed(FlowStateMachineImpl.kt:225) ~[corda-node-4.9.jar:?]
	at net.corda.node.services.statemachine.FlowStateMachineImpl.suspend(FlowStateMachineImpl.kt:577) ~[corda-node-4.9.jar:?]
	at net.corda.node.services.statemachine.FlowSessionImpl.receive(FlowSessionImpl.kt:67) ~[corda-node-4.9.jar:?]
	at net.corda.node.services.statemachine.FlowSessionImpl.receive(FlowSessionImpl.kt:71) ~[corda-node-4.9.jar:?]
	at net.corda.core.flows.ReceiveTransactionFlow.call(ReceiveTransactionFlow.kt:103) ~[corda-core-4.9.jar:?]
	at net.corda.core.flows.ReceiveTransactionFlow.call(ReceiveTransactionFlow.kt:31) ~[corda-core-4.9.jar:?]
	at net.corda.node.services.statemachine.FlowStateMachineImpl.subFlow(FlowStateMachineImpl.kt:420) ~[corda-node-4.9.jar:?]
	at net.corda.core.flows.FlowLogic.subFlow(FlowLogic.kt:409) ~[corda-core-4.9.jar:?]
	at net.corda.core.flows.ReceiveFinalityFlow.call(FinalityFlow.kt:285) ~[corda-core-4.9.jar:?]
	at net.corda.core.flows.ReceiveFinalityFlow.call(FinalityFlow.kt:280) ~[corda-core-4.9.jar:?]
	at net.corda.node.services.statemachine.FlowStateMachineImpl.subFlow(FlowStateMachineImpl.kt:420) ~[corda-node-4.9.jar:?]
	at net.corda.core.flows.FlowLogic.subFlow(FlowLogic.kt:409) ~[corda-core-4.9.jar:?]
	at net.corda.samples.obligation.flows.IOUSettleFlowResponder.call(IOUSettleFlow.kt:139) ~[main/:?]
	at net.corda.samples.obligation.flows.IOUSettleFlowResponder.call(IOUSettleFlow.kt:126) ~[main/:?]
	at net.corda.node.services.statemachine.FlowStateMachineImpl.run(FlowStateMachineImpl.kt:349) ~[corda-node-4.9.jar:?]
	at net.corda.node.services.statemachine.FlowStateMachineImpl.run(FlowStateMachineImpl.kt:71) ~[corda-node-4.9.jar:?]
	at co.paralleluniverse.fibers.Fiber.run1(Fiber.java:1092) ~[quasar-core-0.7.10.jar:0.7.10]
	at co.paralleluniverse.fibers.Fiber.exec(Fiber.java:788) ~[quasar-core-0.7.10.jar:0.7.10]
	at co.paralleluniverse.fibers.RunnableFiberTask.doExec(RunnableFiberTask.java:100) ~[quasar-core-0.7.10.jar:0.7.10]
	at co.paralleluniverse.fibers.RunnableFiberTask.run(RunnableFiberTask.java:91) ~[quasar-core-0.7.10.jar:0.7.10]
	at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511) ~[?:1.8.0_202]
	at java.util.concurrent.FutureTask.run(FutureTask.java:266) ~[?:1.8.0_202]
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.access$201(ScheduledThreadPoolExecutor.java:180) ~[?:1.8.0_202]
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.run(ScheduledThreadPoolExecutor.java:293) ~[?:1.8.0_202]
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149) ~[?:1.8.0_202]
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624) ~[?:1.8.0_202]
	at net.corda.node.utilities.AffinityExecutor$ServiceAffinityExecutor$1$thread$1.run(AffinityExecutor.kt:63) ~[corda-node-4.9.jar:?]
[INFO ] 2023-01-31T07:40:30,673Z [Test worker] persistence.CordaPersistence. - Closing HikariDataSource (HikariPool-1) {}
[INFO ] 2023-01-31T07:40:30,811Z [Test worker] internal.MockNodeMessagingService. - Status change to false {}
[INFO ] 2023-01-31T07:40:30,811Z [Test worker] internal.InternalMockNetwork$MockNode. - MessagingService active change to: false {}
[INFO ] 2023-01-31T07:40:30,816Z [Test worker] persistence.CordaPersistence. - Closing HikariDataSource (HikariPool-2) {}
[INFO ] 2023-01-31T07:40:30,840Z [Test worker] internal.MockNodeMessagingService. - Status change to false {}
[INFO ] 2023-01-31T07:40:30,840Z [Test worker] internal.InternalMockNetwork$MockNode. - MessagingService active change to: false {}
[INFO ] 2023-01-31T07:40:30,842Z [Test worker] persistence.CordaPersistence. - Closing HikariDataSource (HikariPool-3) {}
[INFO ] 2023-01-31T07:40:30,858Z [Test worker] internal.MockNodeMessagingService. - Status change to false {}
[INFO ] 2023-01-31T07:40:30,858Z [Test worker] internal.InternalMockNetwork$MockNode. - MessagingService active change to: false {}
[INFO ] 2023-01-31T07:40:30,860Z [Test worker] persistence.CordaPersistence. - Closing HikariDataSource (HikariPool-4) {}
[INFO ] 2023-01-31T07:40:30,874Z [Test worker] internal.MockNodeMessagingService. - Status change to false {}
[INFO ] 2023-01-31T07:40:30,874Z [Test worker] internal.InternalMockNetwork$MockNode. - MessagingService active change to: false {}
[INFO ] 2023-01-31T07:41:31,669Z [Test worker] internal.TestCordappImpl. - Generating CorDapp jar from local project in /Users/peter.li/Desktop/obligation-cordapp/workflows ... {}
[INFO ] 2023-01-31T07:41:31,831Z [Connection worker] internal.TestCordappImpl. - Build {}
[INFO ] 2023-01-31T07:41:32,910Z [Connection worker] internal.TestCordappImpl. - Starting Gradle Daemon {}
[INFO ] 2023-01-31T07:41:33,704Z [Connection worker] internal.TestCordappImpl. - Connecting to Gradle Daemon {}
[INFO ] 2023-01-31T07:41:33,716Z [Connection worker] internal.TestCordappImpl. - Starting Gradle Daemon {}
[INFO ] 2023-01-31T07:41:33,716Z [Connection worker] internal.TestCordappImpl. - Build {}
[INFO ] 2023-01-31T07:41:34,193Z [Connection worker] internal.TestCordappImpl. - Run build {}
[INFO ] 2023-01-31T07:41:34,214Z [Connection worker] internal.TestCordappImpl. - Evaluate settings {}
[INFO ] 2023-01-31T07:41:34,619Z [Connection worker] internal.TestCordappImpl. - Run build {}
[INFO ] 2023-01-31T07:41:34,619Z [Connection worker] internal.TestCordappImpl. - Configure build {}
[INFO ] 2023-01-31T07:41:34,619Z [Connection worker] internal.TestCordappImpl. - Load projects {}
[INFO ] 2023-01-31T07:41:34,775Z [Connection worker] internal.TestCordappImpl. - Configure build {}
[INFO ] 2023-01-31T07:41:34,785Z [Connection worker] internal.TestCordappImpl. - Configure project : {}
[INFO ] 2023-01-31T07:41:35,246Z [Connection worker] internal.TestCordappImpl. - Resolve dependencies of :classpath {}
[INFO ] 2023-01-31T07:41:35,617Z [Connection worker] internal.TestCordappImpl. - Configure project : {}
[INFO ] 2023-01-31T07:41:35,629Z [Connection worker] internal.TestCordappImpl. - Resolve files of :classpath {}
[INFO ] 2023-01-31T07:41:35,652Z [Connection worker] internal.TestCordappImpl. - Configure project : {}
[INFO ] 2023-01-31T07:41:35,652Z [Connection worker] internal.TestCordappImpl. - Resolve files of :classpath {}
[INFO ] 2023-01-31T07:41:35,653Z [Connection worker] internal.TestCordappImpl. - Configure project : {}
[INFO ] 2023-01-31T07:41:36,612Z [Connection worker] internal.TestCordappImpl. - Configure build {}
[INFO ] 2023-01-31T07:41:36,612Z [Connection worker] internal.TestCordappImpl. - Configure project :clients {}
[INFO ] 2023-01-31T07:41:36,722Z [Connection worker] internal.TestCordappImpl. - Configure build {}
[INFO ] 2023-01-31T07:41:36,722Z [Connection worker] internal.TestCordappImpl. - Configure project :contracts {}
[INFO ] 2023-01-31T07:41:36,757Z [Connection worker] internal.TestCordappImpl. - Configure build {}
[INFO ] 2023-01-31T07:41:36,757Z [Connection worker] internal.TestCordappImpl. - Configure project :workflows {}
[INFO ] 2023-01-31T07:41:36,856Z [Connection worker] internal.TestCordappImpl. - Configure build {}
[INFO ] 2023-01-31T07:41:36,856Z [Connection worker] internal.TestCordappImpl. - Run build {}
[INFO ] 2023-01-31T07:41:36,957Z [Connection worker] internal.TestCordappImpl. - Resolve dependencies of :workflows:kotlinCompilerClasspath {}
[INFO ] 2023-01-31T07:41:36,968Z [Connection worker] internal.TestCordappImpl. - Run build {}
[INFO ] 2023-01-31T07:41:36,968Z [Connection worker] internal.TestCordappImpl. - Resolve files of :workflows:kotlinCompilerClasspath {}
[INFO ] 2023-01-31T07:41:36,968Z [Connection worker] internal.TestCordappImpl. - Run build {}
[INFO ] 2023-01-31T07:41:36,968Z [Connection worker] internal.TestCordappImpl. - Resolve dependencies of :contracts:kotlinCompilerClasspath {}
[INFO ] 2023-01-31T07:41:36,979Z [Connection worker] internal.TestCordappImpl. - Run build {}
[INFO ] 2023-01-31T07:41:36,979Z [Connection worker] internal.TestCordappImpl. - Resolve files of :contracts:kotlinCompilerClasspath {}
[INFO ] 2023-01-31T07:41:36,979Z [Connection worker] internal.TestCordappImpl. - Run build {}
[INFO ] 2023-01-31T07:41:36,989Z [Connection worker] internal.TestCordappImpl. - Run tasks {}
[INFO ] 2023-01-31T07:41:37,012Z [Connection worker] internal.TestCordappImpl. - Task :contracts:compileKotlin {}
[INFO ] 2023-01-31T07:41:37,024Z [Connection worker] internal.TestCordappImpl. - Resolve files of :contracts:kotlinCompilerClasspath {}
[INFO ] 2023-01-31T07:41:37,024Z [Connection worker] internal.TestCordappImpl. - Task :contracts:compileKotlin {}
[INFO ] 2023-01-31T07:41:37,090Z [Connection worker] internal.TestCordappImpl. - Resolve dependencies of :contracts:kotlinCompilerPluginClasspath {}
[INFO ] 2023-01-31T07:41:37,090Z [Connection worker] internal.TestCordappImpl. - Task :contracts:compileKotlin {}
[INFO ] 2023-01-31T07:41:37,090Z [Connection worker] internal.TestCordappImpl. - Resolve files of :contracts:kotlinCompilerPluginClasspath {}
[INFO ] 2023-01-31T07:41:37,090Z [Connection worker] internal.TestCordappImpl. - Task :contracts:compileKotlin {}
[INFO ] 2023-01-31T07:41:37,090Z [Connection worker] internal.TestCordappImpl. - Resolve dependencies of :contracts:compileClasspath {}
[INFO ] 2023-01-31T07:41:37,176Z [Connection worker] internal.TestCordappImpl. - Task :contracts:compileKotlin {}
[INFO ] 2023-01-31T07:41:37,177Z [Connection worker] internal.TestCordappImpl. - Resolve files of :contracts:compileClasspath {}
[INFO ] 2023-01-31T07:41:37,177Z [Connection worker] internal.TestCordappImpl. - Task :contracts:compileKotlin {}
[INFO ] 2023-01-31T07:41:37,589Z [Connection worker] internal.TestCordappImpl. - Resolve files of :contracts:compileClasspath {}
[INFO ] 2023-01-31T07:41:37,589Z [Connection worker] internal.TestCordappImpl. - Task :contracts:compileKotlin {}
[INFO ] 2023-01-31T07:41:37,600Z [Connection worker] internal.TestCordappImpl. - Resolve files of :contracts:kotlinCompilerPluginClasspath {}
[INFO ] 2023-01-31T07:41:37,600Z [Connection worker] internal.TestCordappImpl. - Task :contracts:compileKotlin {}
[INFO ] 2023-01-31T07:41:37,641Z [Connection worker] internal.TestCordappImpl. - Run tasks {}
[INFO ] 2023-01-31T07:41:37,641Z [Connection worker] internal.TestCordappImpl. - Task :contracts:compileJava {}
[INFO ] 2023-01-31T07:41:37,651Z [Connection worker] internal.TestCordappImpl. - Run tasks {}
[INFO ] 2023-01-31T07:41:37,651Z [Connection worker] internal.TestCordappImpl. - Task :contracts:processResources {}
[INFO ] 2023-01-31T07:41:37,651Z [Connection worker] internal.TestCordappImpl. - Run tasks {}
[INFO ] 2023-01-31T07:41:37,652Z [Connection worker] internal.TestCordappImpl. - Task :contracts:classes {}
[INFO ] 2023-01-31T07:41:37,652Z [Connection worker] internal.TestCordappImpl. - Run tasks {}
[INFO ] 2023-01-31T07:41:37,652Z [Connection worker] internal.TestCordappImpl. - Task :contracts:configureCordappFatJar {}
[INFO ] 2023-01-31T07:41:37,662Z [Connection worker] internal.TestCordappImpl. - Resolve dependencies of :contracts:runtime {}
[INFO ] 2023-01-31T07:41:37,685Z [Connection worker] internal.TestCordappImpl. - Task :contracts:configureCordappFatJar {}
[INFO ] 2023-01-31T07:41:37,685Z [Connection worker] internal.TestCordappImpl. - Resolve files of :contracts:runtime {}
[INFO ] 2023-01-31T07:41:37,698Z [Connection worker] internal.TestCordappImpl. - Task :contracts:configureCordappFatJar {}
[INFO ] 2023-01-31T07:41:37,698Z [Connection worker] internal.TestCordappImpl. - Resolve files of :contracts:runtime {}
[INFO ] 2023-01-31T07:41:37,698Z [Connection worker] internal.TestCordappImpl. - Task :contracts:configureCordappFatJar {}
[INFO ] 2023-01-31T07:41:37,698Z [Connection worker] internal.TestCordappImpl. - Resolve files of :contracts:runtime {}
[INFO ] 2023-01-31T07:41:37,698Z [Connection worker] internal.TestCordappImpl. - Task :contracts:configureCordappFatJar {}
[INFO ] 2023-01-31T07:41:37,698Z [Connection worker] internal.TestCordappImpl. - Resolve files of :contracts:runtime {}
[INFO ] 2023-01-31T07:41:37,698Z [Connection worker] internal.TestCordappImpl. - Task :contracts:configureCordappFatJar {}
[INFO ] 2023-01-31T07:41:37,698Z [Connection worker] internal.TestCordappImpl. - Resolve files of :contracts:runtime {}
[INFO ] 2023-01-31T07:41:37,698Z [Connection worker] internal.TestCordappImpl. - Task :contracts:configureCordappFatJar {}
[INFO ] 2023-01-31T07:41:37,709Z [Connection worker] internal.TestCordappImpl. - Run tasks {}
[INFO ] 2023-01-31T07:41:37,709Z [Connection worker] internal.TestCordappImpl. - Task :contracts:inspectClassesForKotlinIC {}
[INFO ] 2023-01-31T07:41:37,720Z [Connection worker] internal.TestCordappImpl. - Run tasks {}
[INFO ] 2023-01-31T07:41:37,720Z [Connection worker] internal.TestCordappImpl. - Task :contracts:jar {}
[INFO ] 2023-01-31T07:41:37,730Z [Connection worker] internal.TestCordappImpl. - Run tasks {}
[INFO ] 2023-01-31T07:41:37,730Z [Connection worker] internal.TestCordappImpl. - Task :workflows:compileKotlin {}
[INFO ] 2023-01-31T07:41:37,730Z [Connection worker] internal.TestCordappImpl. - Resolve files of :workflows:kotlinCompilerClasspath {}
[INFO ] 2023-01-31T07:41:37,730Z [Connection worker] internal.TestCordappImpl. - Task :workflows:compileKotlin {}
[INFO ] 2023-01-31T07:41:37,752Z [Connection worker] internal.TestCordappImpl. - Resolve dependencies of :workflows:kotlinCompilerPluginClasspath {}
[INFO ] 2023-01-31T07:41:37,752Z [Connection worker] internal.TestCordappImpl. - Task :workflows:compileKotlin {}
[INFO ] 2023-01-31T07:41:37,752Z [Connection worker] internal.TestCordappImpl. - Resolve files of :workflows:kotlinCompilerPluginClasspath {}
[INFO ] 2023-01-31T07:41:37,752Z [Connection worker] internal.TestCordappImpl. - Task :workflows:compileKotlin {}
[INFO ] 2023-01-31T07:41:37,752Z [Connection worker] internal.TestCordappImpl. - Resolve dependencies of :workflows:compileClasspath {}
[INFO ] 2023-01-31T07:41:37,774Z [Connection worker] internal.TestCordappImpl. - Task :workflows:compileKotlin {}
[INFO ] 2023-01-31T07:41:37,774Z [Connection worker] internal.TestCordappImpl. - Resolve files of :workflows:compileClasspath {}
[INFO ] 2023-01-31T07:41:37,774Z [Connection worker] internal.TestCordappImpl. - Task :workflows:compileKotlin {}
[INFO ] 2023-01-31T07:41:37,787Z [Connection worker] internal.TestCordappImpl. - Resolve files of :workflows:compileClasspath {}
[INFO ] 2023-01-31T07:41:37,787Z [Connection worker] internal.TestCordappImpl. - Task :workflows:compileKotlin {}
[INFO ] 2023-01-31T07:41:37,787Z [Connection worker] internal.TestCordappImpl. - Resolve files of :workflows:kotlinCompilerPluginClasspath {}
[INFO ] 2023-01-31T07:41:37,787Z [Connection worker] internal.TestCordappImpl. - Task :workflows:compileKotlin {}
[INFO ] 2023-01-31T07:41:37,787Z [Connection worker] internal.TestCordappImpl. - Run tasks {}
[INFO ] 2023-01-31T07:41:37,787Z [Connection worker] internal.TestCordappImpl. - Task :workflows:compileJava {}
[INFO ] 2023-01-31T07:41:37,787Z [Connection worker] internal.TestCordappImpl. - Run tasks {}
[INFO ] 2023-01-31T07:41:37,787Z [Connection worker] internal.TestCordappImpl. - Task :workflows:processResources {}
[INFO ] 2023-01-31T07:41:37,798Z [Connection worker] internal.TestCordappImpl. - Run tasks {}
[INFO ] 2023-01-31T07:41:37,798Z [Connection worker] internal.TestCordappImpl. - Task :workflows:classes {}
[INFO ] 2023-01-31T07:41:37,798Z [Connection worker] internal.TestCordappImpl. - Run tasks {}
[INFO ] 2023-01-31T07:41:37,798Z [Connection worker] internal.TestCordappImpl. - Task :workflows:configureCordappFatJar {}
[INFO ] 2023-01-31T07:41:37,798Z [Connection worker] internal.TestCordappImpl. - Resolve dependencies of :workflows:runtime {}
[INFO ] 2023-01-31T07:41:37,820Z [Connection worker] internal.TestCordappImpl. - Task :workflows:configureCordappFatJar {}
[INFO ] 2023-01-31T07:41:37,820Z [Connection worker] internal.TestCordappImpl. - Resolve files of :workflows:runtime {}
[INFO ] 2023-01-31T07:41:37,820Z [Connection worker] internal.TestCordappImpl. - Task :workflows:configureCordappFatJar {}
[INFO ] 2023-01-31T07:41:37,820Z [Connection worker] internal.TestCordappImpl. - Resolve files of :workflows:runtime {}
[INFO ] 2023-01-31T07:41:37,820Z [Connection worker] internal.TestCordappImpl. - Task :workflows:configureCordappFatJar {}
[INFO ] 2023-01-31T07:41:37,830Z [Connection worker] internal.TestCordappImpl. - Resolve files of :workflows:runtime {}
[INFO ] 2023-01-31T07:41:37,830Z [Connection worker] internal.TestCordappImpl. - Task :workflows:configureCordappFatJar {}
[INFO ] 2023-01-31T07:41:37,831Z [Connection worker] internal.TestCordappImpl. - Resolve files of :workflows:runtime {}
[INFO ] 2023-01-31T07:41:37,831Z [Connection worker] internal.TestCordappImpl. - Task :workflows:configureCordappFatJar {}
[INFO ] 2023-01-31T07:41:37,831Z [Connection worker] internal.TestCordappImpl. - Resolve files of :workflows:runtime {}
[INFO ] 2023-01-31T07:41:37,831Z [Connection worker] internal.TestCordappImpl. - Task :workflows:configureCordappFatJar {}
[INFO ] 2023-01-31T07:41:37,831Z [Connection worker] internal.TestCordappImpl. - Resolve files of :workflows:runtime {}
[INFO ] 2023-01-31T07:41:37,831Z [Connection worker] internal.TestCordappImpl. - Task :workflows:configureCordappFatJar {}
[INFO ] 2023-01-31T07:41:37,831Z [Connection worker] internal.TestCordappImpl. - Resolve files of :workflows:runtime {}
[INFO ] 2023-01-31T07:41:37,831Z [Connection worker] internal.TestCordappImpl. - Task :workflows:configureCordappFatJar {}
[INFO ] 2023-01-31T07:41:37,831Z [Connection worker] internal.TestCordappImpl. - Resolve files of :workflows:runtime {}
[INFO ] 2023-01-31T07:41:37,831Z [Connection worker] internal.TestCordappImpl. - Task :workflows:configureCordappFatJar {}
[INFO ] 2023-01-31T07:41:37,831Z [Connection worker] internal.TestCordappImpl. - Run tasks {}
[INFO ] 2023-01-31T07:41:37,831Z [Connection worker] internal.TestCordappImpl. - Task :workflows:inspectClassesForKotlinIC {}
[INFO ] 2023-01-31T07:41:37,863Z [Connection worker] internal.TestCordappImpl. - Run tasks {}
[INFO ] 2023-01-31T07:41:37,863Z [Connection worker] internal.TestCordappImpl. - Task :workflows:jar {}
[INFO ] 2023-01-31T07:41:39,481Z [Connection worker] internal.TestCordappImpl. - Run tasks {}
[INFO ] 2023-01-31T07:41:39,481Z [Connection worker] internal.TestCordappImpl. - Run build {}
[INFO ] 2023-01-31T07:41:39,481Z [Connection worker] internal.TestCordappImpl. - Build model 'java.lang.Void' for project ':workflows' {}
[INFO ] 2023-01-31T07:41:39,481Z [Connection worker] internal.TestCordappImpl. - Run build {}
[INFO ] 2023-01-31T07:41:39,497Z [Connection worker] internal.TestCordappImpl. - Build {}
[INFO ] 2023-01-31T07:41:39,517Z [Connection worker] internal.TestCordappImpl. - Deleting unused version-specific caches in /Users/peter.li/Desktop/obligation-cordapp/.gradle {}
[INFO ] 2023-01-31T07:41:39,517Z [Connection worker] internal.TestCordappImpl. - Build {}
[INFO ] 2023-01-31T07:41:39,543Z [Connection worker] internal.TestCordappImpl. -  {}
[INFO ] 2023-01-31T07:41:44,109Z [Test worker] cordapp.JarScanningCordappLoader. - Looking for CorDapps in [build/mock-network/20230131-074130.937-F1EE0DF4CF8EBF7A/nodes/0/cordapps] {}
[INFO ] 2023-01-31T07:41:44,116Z [Test worker] cordapp.JarScanningCordappLoader. - Loading CorDapps from RestrictedURL(url=file:/Users/peter.li/Desktop/obligation-cordapp/workflows/build/mock-network/20230131-074130.937-F1EE0DF4CF8EBF7A/nodes/0/cordapps/accounts-contracts-1.0.jar, rootPackageName=null), RestrictedURL(url=file:/Users/peter.li/Desktop/obligation-cordapp/workflows/build/mock-network/20230131-074130.937-F1EE0DF4CF8EBF7A/nodes/0/cordapps/accounts-workflows-1.0.jar, rootPackageName=null), RestrictedURL(url=file:/Users/peter.li/Desktop/obligation-cordapp/workflows/build/mock-network/20230131-074130.937-F1EE0DF4CF8EBF7A/nodes/0/cordapps/corda-finance-contracts-4.9.jar, rootPackageName=null), RestrictedURL(url=file:/Users/peter.li/Desktop/obligation-cordapp/workflows/build/mock-network/20230131-074130.937-F1EE0DF4CF8EBF7A/nodes/0/cordapps/contracts-1.0.jar, rootPackageName=null), RestrictedURL(url=file:/Users/peter.li/Desktop/obligation-cordapp/workflows/build/mock-network/20230131-074130.937-F1EE0DF4CF8EBF7A/nodes/0/cordapps/workflows-1.0.jar, rootPackageName=null) {}
[INFO ] 2023-01-31T07:41:44,126Z [Test worker] cordapp.JarScanningCordappLoader. - Scanning CorDapp in file:/Users/peter.li/Desktop/obligation-cordapp/workflows/build/mock-network/20230131-074130.937-F1EE0DF4CF8EBF7A/nodes/0/cordapps/accounts-contracts-1.0.jar {}
[INFO ] 2023-01-31T07:41:44,242Z [Test worker] cordapp.JarScanningCordappLoader. - Scanning CorDapp in file:/Users/peter.li/Desktop/obligation-cordapp/workflows/build/mock-network/20230131-074130.937-F1EE0DF4CF8EBF7A/nodes/0/cordapps/accounts-workflows-1.0.jar {}
[INFO ] 2023-01-31T07:41:44,433Z [Test worker] cordapp.JarScanningCordappLoader. - Scanning CorDapp in file:/Users/peter.li/Desktop/obligation-cordapp/workflows/build/mock-network/20230131-074130.937-F1EE0DF4CF8EBF7A/nodes/0/cordapps/corda-finance-contracts-4.9.jar {}
[INFO ] 2023-01-31T07:41:44,561Z [Test worker] cordapp.JarScanningCordappLoader. - Scanning CorDapp in file:/Users/peter.li/Desktop/obligation-cordapp/workflows/build/mock-network/20230131-074130.937-F1EE0DF4CF8EBF7A/nodes/0/cordapps/contracts-1.0.jar {}
[INFO ] 2023-01-31T07:41:44,573Z [Test worker] cordapp.JarScanningCordappLoader. - Scanning CorDapp in file:/Users/peter.li/Desktop/obligation-cordapp/workflows/build/mock-network/20230131-074130.937-F1EE0DF4CF8EBF7A/nodes/0/cordapps/workflows-1.0.jar {}
[INFO ] 2023-01-31T07:41:45,834Z [Test worker] internal.InternalMockNetwork$MockNode. - MessagingService active change to: false {}
[INFO ] 2023-01-31T07:41:46,089Z [Test worker] internal.InternalMockNetwork$MockNode. - Flow external operation executor has a max of 2 threads {}
[INFO ] 2023-01-31T07:41:46,151Z [Test worker] internal.InternalMockNetwork$MockNode. - Node starting up ... {}
[INFO ] 2023-01-31T07:41:46,171Z [Test worker] internal.KeyStoreHandler. - Loaded trusted root certificate: DL7fwxLm5xbiMD8adUuYTsPZHAict46Ng4w6RNcySt5vAw, alias: cordarootca {}
[INFO ] 2023-01-31T07:41:46,175Z [Test worker] internal.KeyStoreHandler. - Loaded node identity key: DL7s1Xp9Arivww12FVNJjYSk2iMXmX63ropXbRLqScDkwP, alias: identity-private-key {}
[INFO ] 2023-01-31T07:41:46,301Z [Test worker] internal.NodeFlowManager. - Registered com.r3.corda.lib.accounts.workflows.flows.ShareStateAndSyncAccounts to initiate com.r3.corda.lib.accounts.workflows.flows.ReceiveStateAndSyncAccounts (version 1) {}
[INFO ] 2023-01-31T07:41:46,302Z [Test worker] internal.NodeFlowManager. - Registered com.r3.corda.lib.accounts.workflows.flows.ShareStateWithAccount to initiate com.r3.corda.lib.accounts.workflows.flows.ReceiveStateForAccount (version 1) {}
[INFO ] 2023-01-31T07:41:46,302Z [Test worker] internal.NodeFlowManager. - Registered com.r3.corda.lib.accounts.workflows.flows.RequestAccountInfo to initiate com.r3.corda.lib.accounts.workflows.flows.RequestAccountInfoHandler (version 1) {}
[INFO ] 2023-01-31T07:41:46,304Z [Test worker] internal.NodeFlowManager. - Registered com.r3.corda.lib.accounts.workflows.flows.RequestKeyForAccount to initiate com.r3.corda.lib.accounts.workflows.flows.SendKeyForAccount (version 1) {}
[INFO ] 2023-01-31T07:41:46,304Z [Test worker] internal.NodeFlowManager. - Registered com.r3.corda.lib.accounts.workflows.flows.ShareAccountInfo to initiate com.r3.corda.lib.accounts.workflows.flows.ShareAccountInfoHandler (version 1) {}
[INFO ] 2023-01-31T07:41:46,305Z [Test worker] internal.NodeFlowManager. - Registered net.corda.samples.obligation.flows.IOUIssueFlow to initiate net.corda.samples.obligation.flows.IOUIssueFlowResponder (version 1) {}
[INFO ] 2023-01-31T07:41:46,305Z [Test worker] internal.NodeFlowManager. - Registered net.corda.samples.obligation.flows.IOUSettleFlow to initiate net.corda.samples.obligation.flows.IOUSettleFlowResponder (version 1) {}
[INFO ] 2023-01-31T07:41:46,306Z [Test worker] internal.NodeFlowManager. - Registered net.corda.samples.obligation.flows.IOUTransferFlow to initiate net.corda.samples.obligation.flows.IOUTransferFlowResponder (version 1) {}
[INFO ] 2023-01-31T07:41:46,306Z [Test worker] internal.NodeFlowManager. - Registered net.corda.samples.obligation.flows.SyncKey to initiate net.corda.samples.obligation.flows.SyncKeyResponder (version 1) {}
[INFO ] 2023-01-31T07:41:46,398Z [Test worker] internal.InternalMockNetwork$MockNode. - Loaded network parameters: NetworkParameters {
      minimumPlatformVersion=4
      notaries=[NotaryInfo(identity=O=Notary, L=London, C=GB, validating=true)]
      maxMessageSize=10485760
      maxTransactionSize=524288000
      whitelistedContractImplementations {
        
      }
      eventHorizon=PT720H
      packageOwnership {
        
      }
      modifiedTime=2023-01-31T07:41:30.622Z
      epoch=1
  } {}
[INFO ] 2023-01-31T07:41:52,177Z [Test worker] internal.InternalMockNetwork$MockNode. - Connected to H2 database. {}
[INFO ] 2023-01-31T07:41:52,244Z [Test worker] persistence.HibernateConfiguration. - Init HibernateConfiguration for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1), AccountsContractsSchemaV1(name=com.r3.corda.lib.accounts.contracts.internal.schemas.AccountsContractsSchema, version=1), AccountsWorkflowsSchemaV1(name=com.r3.corda.lib.accounts.workflows.internal.schemas.AccountsWorkflowsSchema, version=1), CashSchemaV1(name=net.corda.finance.schemas.CashSchema, version=1), CommercialPaperSchemaV1(name=net.corda.finance.schemas.CommercialPaperSchema, version=1), JPANotarySchemaV1(name=net.corda.notary.jpa.JPANotarySchema, version=1)] {}
[INFO ] 2023-01-31T07:41:52,248Z [Test worker] factory.BaseSessionFactoryFactory. - Creating session factory for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1), AccountsContractsSchemaV1(name=com.r3.corda.lib.accounts.contracts.internal.schemas.AccountsContractsSchema, version=1), AccountsWorkflowsSchemaV1(name=com.r3.corda.lib.accounts.workflows.internal.schemas.AccountsWorkflowsSchema, version=1), CashSchemaV1(name=net.corda.finance.schemas.CashSchema, version=1), CommercialPaperSchemaV1(name=net.corda.finance.schemas.CommercialPaperSchema, version=1), JPANotarySchemaV1(name=net.corda.notary.jpa.JPANotarySchema, version=1)] {}
[INFO ] 2023-01-31T07:41:54,615Z [Test worker] factory.BaseSessionFactoryFactory. - Created session factory for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1), AccountsContractsSchemaV1(name=com.r3.corda.lib.accounts.contracts.internal.schemas.AccountsContractsSchema, version=1), AccountsWorkflowsSchemaV1(name=com.r3.corda.lib.accounts.workflows.internal.schemas.AccountsWorkflowsSchema, version=1), CashSchemaV1(name=net.corda.finance.schemas.CashSchema, version=1), CommercialPaperSchemaV1(name=net.corda.finance.schemas.CommercialPaperSchema, version=1), JPANotarySchemaV1(name=net.corda.notary.jpa.JPANotarySchema, version=1)] {}
[INFO ] 2023-01-31T07:41:54,892Z [Test worker] internal.InternalMockNetwork$MockNode. - Node-info has changed so submitting update. Old node-info was null {}
[INFO ] 2023-01-31T07:41:54,899Z [Test worker] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Notary, L=London, C=GB], platformVersion=11, serial=1675150914892), owningKey=DL7s1Xp9Arivww12FVNJjYSk2iMXmX63ropXbRLqScDkwP {}
[INFO ] 2023-01-31T07:41:54,899Z [Test worker] network.PersistentNetworkMapCache. - No previous node found for O=Notary, L=London, C=GB {}
[INFO ] 2023-01-31T07:41:55,038Z [Test worker] internal.InternalMockNetwork$MockNode. - New node-info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Notary, L=London, C=GB], platformVersion=11, serial=1675150914892) {}
[INFO ] 2023-01-31T07:41:55,093Z [Test worker] network.NetworkMapUpdater. - Auto-accept enabled for network parameter changes which modify only: [epoch, modifiedTime, packageOwnership, whitelistedContractImplementations] {}
[INFO ] 2023-01-31T07:41:55,118Z [Test worker] internal.MockNodeMessagingService. - Status change to true {}
[INFO ] 2023-01-31T07:41:55,119Z [Test worker] internal.InternalMockNetwork$MockNode. - MessagingService active change to: true {}
[INFO ] 2023-01-31T07:41:55,151Z [MockNode-1-2] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Notary, L=London, C=GB], platformVersion=11, serial=1675150914892), owningKey=DL7s1Xp9Arivww12FVNJjYSk2iMXmX63ropXbRLqScDkwP {}
[INFO ] 2023-01-31T07:41:55,151Z [MockNode-1-2] network.PersistentNetworkMapCache. - Previous node was identical to incoming one - doing nothing {}
[INFO ] 2023-01-31T07:41:55,255Z [Test worker] persistence.NodeAttachmentService. - Stored new attachment: id=D370FD972C7E07CE73F4F9B7886D226807F6B16C4EE287398B9C69384109DC14 uploader=app filename=Accounts SDK - States and Contracts {}
[INFO ] 2023-01-31T07:41:55,300Z [Test worker] persistence.NodeAttachmentService. - Stored new attachment: id=BD0C932EAF8B1FE96DCBBF275B914BCD776D14EDC8F97DCEBF7E15DA09C606AE uploader=app filename=Corda Finance Demo {}
[INFO ] 2023-01-31T07:41:55,316Z [Test worker] persistence.NodeAttachmentService. - Stored new attachment: id=8D797B45F40704FA4FD70921F5BC6E2D7B34450D345CE6788D2A87859EF63BD8 uploader=app filename=Obligation Contracts {}
[INFO ] 2023-01-31T07:41:55,330Z [Test worker] internal.InternalMockNetwork$MockNode. - Installed com.r3.corda.lib.accounts.workflows.services.KeyManagementBackedAccountService Corda service {}
[INFO ] 2023-01-31T07:41:55,330Z [Test worker] utilities.NotaryLoader. - Starting notary service: class net.corda.notary.jpa.JPANotaryService {}
[INFO ] 2023-01-31T07:41:56,079Z [Test worker] statemachine.SingleThreadedStateMachineManager. - Node ready, info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Notary, L=London, C=GB], platformVersion=11, serial=1675150914892) {}
[INFO ] 2023-01-31T07:41:56,085Z [Test worker] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Notary, L=London, C=GB], platformVersion=11, serial=1675150914892), owningKey=DL7s1Xp9Arivww12FVNJjYSk2iMXmX63ropXbRLqScDkwP {}
[INFO ] 2023-01-31T07:41:56,085Z [Test worker] network.PersistentNetworkMapCache. - Previous node was identical to incoming one - doing nothing {}
[INFO ] 2023-01-31T07:41:56,085Z [Test worker] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Notary, L=London, C=GB], platformVersion=11, serial=1675150914892), owningKey=DL7s1Xp9Arivww12FVNJjYSk2iMXmX63ropXbRLqScDkwP {}
[INFO ] 2023-01-31T07:41:56,085Z [Test worker] network.PersistentNetworkMapCache. - Previous node was identical to incoming one - doing nothing {}
[INFO ] 2023-01-31T07:41:56,103Z [Test worker] cordapp.JarScanningCordappLoader. - Looking for CorDapps in [build/mock-network/20230131-074130.937-F1EE0DF4CF8EBF7A/nodes/1/cordapps] {}
[INFO ] 2023-01-31T07:41:56,104Z [Test worker] cordapp.JarScanningCordappLoader. - Loading CorDapps from RestrictedURL(url=file:/Users/peter.li/Desktop/obligation-cordapp/workflows/build/mock-network/20230131-074130.937-F1EE0DF4CF8EBF7A/nodes/1/cordapps/accounts-contracts-1.0.jar, rootPackageName=null), RestrictedURL(url=file:/Users/peter.li/Desktop/obligation-cordapp/workflows/build/mock-network/20230131-074130.937-F1EE0DF4CF8EBF7A/nodes/1/cordapps/accounts-workflows-1.0.jar, rootPackageName=null), RestrictedURL(url=file:/Users/peter.li/Desktop/obligation-cordapp/workflows/build/mock-network/20230131-074130.937-F1EE0DF4CF8EBF7A/nodes/1/cordapps/corda-finance-contracts-4.9.jar, rootPackageName=null), RestrictedURL(url=file:/Users/peter.li/Desktop/obligation-cordapp/workflows/build/mock-network/20230131-074130.937-F1EE0DF4CF8EBF7A/nodes/1/cordapps/contracts-1.0.jar, rootPackageName=null), RestrictedURL(url=file:/Users/peter.li/Desktop/obligation-cordapp/workflows/build/mock-network/20230131-074130.937-F1EE0DF4CF8EBF7A/nodes/1/cordapps/workflows-1.0.jar, rootPackageName=null) {}
[INFO ] 2023-01-31T07:41:56,104Z [Test worker] cordapp.JarScanningCordappLoader. - Scanning CorDapp in file:/Users/peter.li/Desktop/obligation-cordapp/workflows/build/mock-network/20230131-074130.937-F1EE0DF4CF8EBF7A/nodes/1/cordapps/accounts-contracts-1.0.jar {}
[INFO ] 2023-01-31T07:41:56,136Z [Test worker] cordapp.JarScanningCordappLoader. - Scanning CorDapp in file:/Users/peter.li/Desktop/obligation-cordapp/workflows/build/mock-network/20230131-074130.937-F1EE0DF4CF8EBF7A/nodes/1/cordapps/accounts-workflows-1.0.jar {}
[INFO ] 2023-01-31T07:41:56,147Z [Test worker] cordapp.JarScanningCordappLoader. - Scanning CorDapp in file:/Users/peter.li/Desktop/obligation-cordapp/workflows/build/mock-network/20230131-074130.937-F1EE0DF4CF8EBF7A/nodes/1/cordapps/corda-finance-contracts-4.9.jar {}
[INFO ] 2023-01-31T07:41:56,162Z [Test worker] cordapp.JarScanningCordappLoader. - Scanning CorDapp in file:/Users/peter.li/Desktop/obligation-cordapp/workflows/build/mock-network/20230131-074130.937-F1EE0DF4CF8EBF7A/nodes/1/cordapps/contracts-1.0.jar {}
[INFO ] 2023-01-31T07:41:56,169Z [Test worker] cordapp.JarScanningCordappLoader. - Scanning CorDapp in file:/Users/peter.li/Desktop/obligation-cordapp/workflows/build/mock-network/20230131-074130.937-F1EE0DF4CF8EBF7A/nodes/1/cordapps/workflows-1.0.jar {}
[INFO ] 2023-01-31T07:41:56,198Z [Test worker] internal.InternalMockNetwork$MockNode. - MessagingService active change to: false {}
[INFO ] 2023-01-31T07:41:56,203Z [Test worker] internal.InternalMockNetwork$MockNode. - Flow external operation executor has a max of 2 threads {}
[INFO ] 2023-01-31T07:41:56,205Z [Test worker] internal.InternalMockNetwork$MockNode. - Node starting up ... {}
[INFO ] 2023-01-31T07:41:56,250Z [Test worker] internal.KeyStoreHandler. - Loaded trusted root certificate: DL7fwxLm5xbiMD8adUuYTsPZHAict46Ng4w6RNcySt5vAw, alias: cordarootca {}
[INFO ] 2023-01-31T07:41:56,251Z [Test worker] internal.KeyStoreHandler. - Loaded node identity key: DL8pvTPuu8mkTPCk6iBxAzhpzBgXExtjYciWkZ5wec4GQU, alias: identity-private-key {}
[INFO ] 2023-01-31T07:41:56,257Z [Test worker] internal.NodeFlowManager. - Registered com.r3.corda.lib.accounts.workflows.flows.ShareStateAndSyncAccounts to initiate com.r3.corda.lib.accounts.workflows.flows.ReceiveStateAndSyncAccounts (version 1) {}
[INFO ] 2023-01-31T07:41:56,257Z [Test worker] internal.NodeFlowManager. - Registered com.r3.corda.lib.accounts.workflows.flows.ShareStateWithAccount to initiate com.r3.corda.lib.accounts.workflows.flows.ReceiveStateForAccount (version 1) {}
[INFO ] 2023-01-31T07:41:56,258Z [Test worker] internal.NodeFlowManager. - Registered com.r3.corda.lib.accounts.workflows.flows.RequestAccountInfo to initiate com.r3.corda.lib.accounts.workflows.flows.RequestAccountInfoHandler (version 1) {}
[INFO ] 2023-01-31T07:41:56,258Z [Test worker] internal.NodeFlowManager. - Registered com.r3.corda.lib.accounts.workflows.flows.RequestKeyForAccount to initiate com.r3.corda.lib.accounts.workflows.flows.SendKeyForAccount (version 1) {}
[INFO ] 2023-01-31T07:41:56,258Z [Test worker] internal.NodeFlowManager. - Registered com.r3.corda.lib.accounts.workflows.flows.ShareAccountInfo to initiate com.r3.corda.lib.accounts.workflows.flows.ShareAccountInfoHandler (version 1) {}
[INFO ] 2023-01-31T07:41:56,258Z [Test worker] internal.NodeFlowManager. - Registered net.corda.samples.obligation.flows.IOUIssueFlow to initiate net.corda.samples.obligation.flows.IOUIssueFlowResponder (version 1) {}
[INFO ] 2023-01-31T07:41:56,258Z [Test worker] internal.NodeFlowManager. - Registered net.corda.samples.obligation.flows.IOUSettleFlow to initiate net.corda.samples.obligation.flows.IOUSettleFlowResponder (version 1) {}
[INFO ] 2023-01-31T07:41:56,258Z [Test worker] internal.NodeFlowManager. - Registered net.corda.samples.obligation.flows.IOUTransferFlow to initiate net.corda.samples.obligation.flows.IOUTransferFlowResponder (version 1) {}
[INFO ] 2023-01-31T07:41:56,258Z [Test worker] internal.NodeFlowManager. - Registered net.corda.samples.obligation.flows.SyncKey to initiate net.corda.samples.obligation.flows.SyncKeyResponder (version 1) {}
[INFO ] 2023-01-31T07:41:56,263Z [Test worker] internal.InternalMockNetwork$MockNode. - Loaded network parameters: NetworkParameters {
      minimumPlatformVersion=4
      notaries=[NotaryInfo(identity=O=Notary, L=London, C=GB, validating=true)]
      maxMessageSize=10485760
      maxTransactionSize=524288000
      whitelistedContractImplementations {
        
      }
      eventHorizon=PT720H
      packageOwnership {
        
      }
      modifiedTime=2023-01-31T07:41:30.622Z
      epoch=1
  } {}
[INFO ] 2023-01-31T07:41:56,969Z [Test worker] internal.InternalMockNetwork$MockNode. - Connected to H2 database. {}
[INFO ] 2023-01-31T07:41:56,970Z [Test worker] persistence.HibernateConfiguration. - Init HibernateConfiguration for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1), AccountsContractsSchemaV1(name=com.r3.corda.lib.accounts.contracts.internal.schemas.AccountsContractsSchema, version=1), AccountsWorkflowsSchemaV1(name=com.r3.corda.lib.accounts.workflows.internal.schemas.AccountsWorkflowsSchema, version=1), CashSchemaV1(name=net.corda.finance.schemas.CashSchema, version=1), CommercialPaperSchemaV1(name=net.corda.finance.schemas.CommercialPaperSchema, version=1)] {}
[INFO ] 2023-01-31T07:41:56,970Z [Test worker] factory.BaseSessionFactoryFactory. - Creating session factory for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1), AccountsContractsSchemaV1(name=com.r3.corda.lib.accounts.contracts.internal.schemas.AccountsContractsSchema, version=1), AccountsWorkflowsSchemaV1(name=com.r3.corda.lib.accounts.workflows.internal.schemas.AccountsWorkflowsSchema, version=1), CashSchemaV1(name=net.corda.finance.schemas.CashSchema, version=1), CommercialPaperSchemaV1(name=net.corda.finance.schemas.CommercialPaperSchema, version=1)] {}
[INFO ] 2023-01-31T07:41:57,155Z [Test worker] factory.BaseSessionFactoryFactory. - Created session factory for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1), AccountsContractsSchemaV1(name=com.r3.corda.lib.accounts.contracts.internal.schemas.AccountsContractsSchema, version=1), AccountsWorkflowsSchemaV1(name=com.r3.corda.lib.accounts.workflows.internal.schemas.AccountsWorkflowsSchema, version=1), CashSchemaV1(name=net.corda.finance.schemas.CashSchema, version=1), CommercialPaperSchemaV1(name=net.corda.finance.schemas.CommercialPaperSchema, version=1)] {}
[INFO ] 2023-01-31T07:41:57,161Z [Test worker] internal.InternalMockNetwork$MockNode. - Node-info has changed so submitting update. Old node-info was null {}
[INFO ] 2023-01-31T07:41:57,166Z [Test worker] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 1, L=London, C=GB], platformVersion=11, serial=1675150917161), owningKey=DL8pvTPuu8mkTPCk6iBxAzhpzBgXExtjYciWkZ5wec4GQU {}
[INFO ] 2023-01-31T07:41:57,166Z [Test worker] network.PersistentNetworkMapCache. - No previous node found for O=Mock Company 1, L=London, C=GB {}
[INFO ] 2023-01-31T07:41:57,180Z [Test worker] internal.InternalMockNetwork$MockNode. - New node-info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 1, L=London, C=GB], platformVersion=11, serial=1675150917161) {}
[INFO ] 2023-01-31T07:41:57,188Z [Test worker] network.NetworkMapUpdater. - Auto-accept enabled for network parameter changes which modify only: [epoch, modifiedTime, packageOwnership, whitelistedContractImplementations] {}
[INFO ] 2023-01-31T07:41:57,189Z [Test worker] internal.MockNodeMessagingService. - Status change to true {}
[INFO ] 2023-01-31T07:41:57,189Z [Test worker] internal.InternalMockNetwork$MockNode. - MessagingService active change to: true {}
[INFO ] 2023-01-31T07:41:57,205Z [MockNode-2-2] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 1, L=London, C=GB], platformVersion=11, serial=1675150917161), owningKey=DL8pvTPuu8mkTPCk6iBxAzhpzBgXExtjYciWkZ5wec4GQU {}
[INFO ] 2023-01-31T07:41:57,205Z [MockNode-2-2] network.PersistentNetworkMapCache. - Previous node was identical to incoming one - doing nothing {}
[INFO ] 2023-01-31T07:41:57,235Z [Test worker] persistence.NodeAttachmentService. - Stored new attachment: id=D370FD972C7E07CE73F4F9B7886D226807F6B16C4EE287398B9C69384109DC14 uploader=app filename=Accounts SDK - States and Contracts {}
[INFO ] 2023-01-31T07:41:57,285Z [Test worker] persistence.NodeAttachmentService. - Stored new attachment: id=BD0C932EAF8B1FE96DCBBF275B914BCD776D14EDC8F97DCEBF7E15DA09C606AE uploader=app filename=Corda Finance Demo {}
[INFO ] 2023-01-31T07:41:57,303Z [Test worker] persistence.NodeAttachmentService. - Stored new attachment: id=8D797B45F40704FA4FD70921F5BC6E2D7B34450D345CE6788D2A87859EF63BD8 uploader=app filename=Obligation Contracts {}
[INFO ] 2023-01-31T07:41:57,306Z [Test worker] internal.InternalMockNetwork$MockNode. - Installed com.r3.corda.lib.accounts.workflows.services.KeyManagementBackedAccountService Corda service {}
[INFO ] 2023-01-31T07:41:57,332Z [Test worker] statemachine.SingleThreadedStateMachineManager. - Node ready, info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 1, L=London, C=GB], platformVersion=11, serial=1675150917161) {}
[INFO ] 2023-01-31T07:41:57,334Z [Test worker] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Notary, L=London, C=GB], platformVersion=11, serial=1675150914892), owningKey=DL7s1Xp9Arivww12FVNJjYSk2iMXmX63ropXbRLqScDkwP {}
[INFO ] 2023-01-31T07:41:57,334Z [Test worker] network.PersistentNetworkMapCache. - No previous node found for O=Notary, L=London, C=GB {}
[INFO ] 2023-01-31T07:41:57,347Z [Test worker] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 1, L=London, C=GB], platformVersion=11, serial=1675150917161), owningKey=DL8pvTPuu8mkTPCk6iBxAzhpzBgXExtjYciWkZ5wec4GQU {}
[INFO ] 2023-01-31T07:41:57,347Z [Test worker] network.PersistentNetworkMapCache. - No previous node found for O=Mock Company 1, L=London, C=GB {}
[INFO ] 2023-01-31T07:41:57,358Z [Test worker] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 1, L=London, C=GB], platformVersion=11, serial=1675150917161), owningKey=DL8pvTPuu8mkTPCk6iBxAzhpzBgXExtjYciWkZ5wec4GQU {}
[INFO ] 2023-01-31T07:41:57,358Z [Test worker] network.PersistentNetworkMapCache. - Previous node was identical to incoming one - doing nothing {}
[INFO ] 2023-01-31T07:41:57,359Z [Test worker] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 1, L=London, C=GB], platformVersion=11, serial=1675150917161), owningKey=DL8pvTPuu8mkTPCk6iBxAzhpzBgXExtjYciWkZ5wec4GQU {}
[INFO ] 2023-01-31T07:41:57,359Z [Test worker] network.PersistentNetworkMapCache. - Previous node was identical to incoming one - doing nothing {}
[INFO ] 2023-01-31T07:41:57,371Z [Test worker] cordapp.JarScanningCordappLoader. - Looking for CorDapps in [build/mock-network/20230131-074130.937-F1EE0DF4CF8EBF7A/nodes/2/cordapps] {}
[INFO ] 2023-01-31T07:41:57,371Z [Test worker] cordapp.JarScanningCordappLoader. - Loading CorDapps from RestrictedURL(url=file:/Users/peter.li/Desktop/obligation-cordapp/workflows/build/mock-network/20230131-074130.937-F1EE0DF4CF8EBF7A/nodes/2/cordapps/accounts-contracts-1.0.jar, rootPackageName=null), RestrictedURL(url=file:/Users/peter.li/Desktop/obligation-cordapp/workflows/build/mock-network/20230131-074130.937-F1EE0DF4CF8EBF7A/nodes/2/cordapps/accounts-workflows-1.0.jar, rootPackageName=null), RestrictedURL(url=file:/Users/peter.li/Desktop/obligation-cordapp/workflows/build/mock-network/20230131-074130.937-F1EE0DF4CF8EBF7A/nodes/2/cordapps/corda-finance-contracts-4.9.jar, rootPackageName=null), RestrictedURL(url=file:/Users/peter.li/Desktop/obligation-cordapp/workflows/build/mock-network/20230131-074130.937-F1EE0DF4CF8EBF7A/nodes/2/cordapps/contracts-1.0.jar, rootPackageName=null), RestrictedURL(url=file:/Users/peter.li/Desktop/obligation-cordapp/workflows/build/mock-network/20230131-074130.937-F1EE0DF4CF8EBF7A/nodes/2/cordapps/workflows-1.0.jar, rootPackageName=null) {}
[INFO ] 2023-01-31T07:41:57,371Z [Test worker] cordapp.JarScanningCordappLoader. - Scanning CorDapp in file:/Users/peter.li/Desktop/obligation-cordapp/workflows/build/mock-network/20230131-074130.937-F1EE0DF4CF8EBF7A/nodes/2/cordapps/accounts-contracts-1.0.jar {}
[INFO ] 2023-01-31T07:41:57,392Z [Test worker] cordapp.JarScanningCordappLoader. - Scanning CorDapp in file:/Users/peter.li/Desktop/obligation-cordapp/workflows/build/mock-network/20230131-074130.937-F1EE0DF4CF8EBF7A/nodes/2/cordapps/accounts-workflows-1.0.jar {}
[INFO ] 2023-01-31T07:41:57,400Z [Test worker] cordapp.JarScanningCordappLoader. - Scanning CorDapp in file:/Users/peter.li/Desktop/obligation-cordapp/workflows/build/mock-network/20230131-074130.937-F1EE0DF4CF8EBF7A/nodes/2/cordapps/corda-finance-contracts-4.9.jar {}
[INFO ] 2023-01-31T07:41:57,410Z [Test worker] cordapp.JarScanningCordappLoader. - Scanning CorDapp in file:/Users/peter.li/Desktop/obligation-cordapp/workflows/build/mock-network/20230131-074130.937-F1EE0DF4CF8EBF7A/nodes/2/cordapps/contracts-1.0.jar {}
[INFO ] 2023-01-31T07:41:57,420Z [Test worker] cordapp.JarScanningCordappLoader. - Scanning CorDapp in file:/Users/peter.li/Desktop/obligation-cordapp/workflows/build/mock-network/20230131-074130.937-F1EE0DF4CF8EBF7A/nodes/2/cordapps/workflows-1.0.jar {}
[INFO ] 2023-01-31T07:41:57,446Z [Test worker] internal.InternalMockNetwork$MockNode. - MessagingService active change to: false {}
[INFO ] 2023-01-31T07:41:57,447Z [Test worker] internal.InternalMockNetwork$MockNode. - Flow external operation executor has a max of 2 threads {}
[INFO ] 2023-01-31T07:41:57,449Z [Test worker] internal.InternalMockNetwork$MockNode. - Node starting up ... {}
[INFO ] 2023-01-31T07:41:57,485Z [Test worker] internal.KeyStoreHandler. - Loaded trusted root certificate: DL7fwxLm5xbiMD8adUuYTsPZHAict46Ng4w6RNcySt5vAw, alias: cordarootca {}
[INFO ] 2023-01-31T07:41:57,485Z [Test worker] internal.KeyStoreHandler. - Loaded node identity key: DL8N4Af87CB7YkoXipyYeTMNpZxWgJ9zobXe1f2wRi1WZC, alias: identity-private-key {}
[INFO ] 2023-01-31T07:41:57,493Z [Test worker] internal.NodeFlowManager. - Registered com.r3.corda.lib.accounts.workflows.flows.ShareStateAndSyncAccounts to initiate com.r3.corda.lib.accounts.workflows.flows.ReceiveStateAndSyncAccounts (version 1) {}
[INFO ] 2023-01-31T07:41:57,493Z [Test worker] internal.NodeFlowManager. - Registered com.r3.corda.lib.accounts.workflows.flows.ShareStateWithAccount to initiate com.r3.corda.lib.accounts.workflows.flows.ReceiveStateForAccount (version 1) {}
[INFO ] 2023-01-31T07:41:57,493Z [Test worker] internal.NodeFlowManager. - Registered com.r3.corda.lib.accounts.workflows.flows.RequestAccountInfo to initiate com.r3.corda.lib.accounts.workflows.flows.RequestAccountInfoHandler (version 1) {}
[INFO ] 2023-01-31T07:41:57,493Z [Test worker] internal.NodeFlowManager. - Registered com.r3.corda.lib.accounts.workflows.flows.RequestKeyForAccount to initiate com.r3.corda.lib.accounts.workflows.flows.SendKeyForAccount (version 1) {}
[INFO ] 2023-01-31T07:41:57,494Z [Test worker] internal.NodeFlowManager. - Registered com.r3.corda.lib.accounts.workflows.flows.ShareAccountInfo to initiate com.r3.corda.lib.accounts.workflows.flows.ShareAccountInfoHandler (version 1) {}
[INFO ] 2023-01-31T07:41:57,494Z [Test worker] internal.NodeFlowManager. - Registered net.corda.samples.obligation.flows.IOUIssueFlow to initiate net.corda.samples.obligation.flows.IOUIssueFlowResponder (version 1) {}
[INFO ] 2023-01-31T07:41:57,494Z [Test worker] internal.NodeFlowManager. - Registered net.corda.samples.obligation.flows.IOUSettleFlow to initiate net.corda.samples.obligation.flows.IOUSettleFlowResponder (version 1) {}
[INFO ] 2023-01-31T07:41:57,494Z [Test worker] internal.NodeFlowManager. - Registered net.corda.samples.obligation.flows.IOUTransferFlow to initiate net.corda.samples.obligation.flows.IOUTransferFlowResponder (version 1) {}
[INFO ] 2023-01-31T07:41:57,494Z [Test worker] internal.NodeFlowManager. - Registered net.corda.samples.obligation.flows.SyncKey to initiate net.corda.samples.obligation.flows.SyncKeyResponder (version 1) {}
[INFO ] 2023-01-31T07:41:57,500Z [Test worker] internal.InternalMockNetwork$MockNode. - Loaded network parameters: NetworkParameters {
      minimumPlatformVersion=4
      notaries=[NotaryInfo(identity=O=Notary, L=London, C=GB, validating=true)]
      maxMessageSize=10485760
      maxTransactionSize=524288000
      whitelistedContractImplementations {
        
      }
      eventHorizon=PT720H
      packageOwnership {
        
      }
      modifiedTime=2023-01-31T07:41:30.622Z
      epoch=1
  } {}
[INFO ] 2023-01-31T07:41:58,135Z [Test worker] internal.InternalMockNetwork$MockNode. - Connected to H2 database. {}
[INFO ] 2023-01-31T07:41:58,136Z [Test worker] persistence.HibernateConfiguration. - Init HibernateConfiguration for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1), AccountsContractsSchemaV1(name=com.r3.corda.lib.accounts.contracts.internal.schemas.AccountsContractsSchema, version=1), AccountsWorkflowsSchemaV1(name=com.r3.corda.lib.accounts.workflows.internal.schemas.AccountsWorkflowsSchema, version=1), CashSchemaV1(name=net.corda.finance.schemas.CashSchema, version=1), CommercialPaperSchemaV1(name=net.corda.finance.schemas.CommercialPaperSchema, version=1)] {}
[INFO ] 2023-01-31T07:41:58,136Z [Test worker] factory.BaseSessionFactoryFactory. - Creating session factory for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1), AccountsContractsSchemaV1(name=com.r3.corda.lib.accounts.contracts.internal.schemas.AccountsContractsSchema, version=1), AccountsWorkflowsSchemaV1(name=com.r3.corda.lib.accounts.workflows.internal.schemas.AccountsWorkflowsSchema, version=1), CashSchemaV1(name=net.corda.finance.schemas.CashSchema, version=1), CommercialPaperSchemaV1(name=net.corda.finance.schemas.CommercialPaperSchema, version=1)] {}
[INFO ] 2023-01-31T07:41:58,313Z [Test worker] factory.BaseSessionFactoryFactory. - Created session factory for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1), AccountsContractsSchemaV1(name=com.r3.corda.lib.accounts.contracts.internal.schemas.AccountsContractsSchema, version=1), AccountsWorkflowsSchemaV1(name=com.r3.corda.lib.accounts.workflows.internal.schemas.AccountsWorkflowsSchema, version=1), CashSchemaV1(name=net.corda.finance.schemas.CashSchema, version=1), CommercialPaperSchemaV1(name=net.corda.finance.schemas.CommercialPaperSchema, version=1)] {}
[INFO ] 2023-01-31T07:41:58,317Z [Test worker] internal.InternalMockNetwork$MockNode. - Node-info has changed so submitting update. Old node-info was null {}
[INFO ] 2023-01-31T07:41:58,320Z [Test worker] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 2, L=London, C=GB], platformVersion=11, serial=1675150918317), owningKey=DL8N4Af87CB7YkoXipyYeTMNpZxWgJ9zobXe1f2wRi1WZC {}
[INFO ] 2023-01-31T07:41:58,321Z [Test worker] network.PersistentNetworkMapCache. - No previous node found for O=Mock Company 2, L=London, C=GB {}
[INFO ] 2023-01-31T07:41:58,328Z [Test worker] internal.InternalMockNetwork$MockNode. - New node-info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 2, L=London, C=GB], platformVersion=11, serial=1675150918317) {}
[INFO ] 2023-01-31T07:41:58,335Z [Test worker] network.NetworkMapUpdater. - Auto-accept enabled for network parameter changes which modify only: [epoch, modifiedTime, packageOwnership, whitelistedContractImplementations] {}
[INFO ] 2023-01-31T07:41:58,335Z [Test worker] internal.MockNodeMessagingService. - Status change to true {}
[INFO ] 2023-01-31T07:41:58,335Z [Test worker] internal.InternalMockNetwork$MockNode. - MessagingService active change to: true {}
[INFO ] 2023-01-31T07:41:58,349Z [MockNode-3-2] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 2, L=London, C=GB], platformVersion=11, serial=1675150918317), owningKey=DL8N4Af87CB7YkoXipyYeTMNpZxWgJ9zobXe1f2wRi1WZC {}
[INFO ] 2023-01-31T07:41:58,349Z [MockNode-3-2] network.PersistentNetworkMapCache. - Previous node was identical to incoming one - doing nothing {}
[INFO ] 2023-01-31T07:41:58,372Z [Test worker] persistence.NodeAttachmentService. - Stored new attachment: id=D370FD972C7E07CE73F4F9B7886D226807F6B16C4EE287398B9C69384109DC14 uploader=app filename=Accounts SDK - States and Contracts {}
[INFO ] 2023-01-31T07:41:58,411Z [Test worker] persistence.NodeAttachmentService. - Stored new attachment: id=BD0C932EAF8B1FE96DCBBF275B914BCD776D14EDC8F97DCEBF7E15DA09C606AE uploader=app filename=Corda Finance Demo {}
[INFO ] 2023-01-31T07:41:58,427Z [Test worker] persistence.NodeAttachmentService. - Stored new attachment: id=8D797B45F40704FA4FD70921F5BC6E2D7B34450D345CE6788D2A87859EF63BD8 uploader=app filename=Obligation Contracts {}
[INFO ] 2023-01-31T07:41:58,430Z [Test worker] internal.InternalMockNetwork$MockNode. - Installed com.r3.corda.lib.accounts.workflows.services.KeyManagementBackedAccountService Corda service {}
[INFO ] 2023-01-31T07:41:58,455Z [Test worker] statemachine.SingleThreadedStateMachineManager. - Node ready, info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 2, L=London, C=GB], platformVersion=11, serial=1675150918317) {}
[INFO ] 2023-01-31T07:41:58,458Z [Test worker] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Notary, L=London, C=GB], platformVersion=11, serial=1675150914892), owningKey=DL7s1Xp9Arivww12FVNJjYSk2iMXmX63ropXbRLqScDkwP {}
[INFO ] 2023-01-31T07:41:58,458Z [Test worker] network.PersistentNetworkMapCache. - No previous node found for O=Notary, L=London, C=GB {}
[INFO ] 2023-01-31T07:41:58,472Z [Test worker] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 2, L=London, C=GB], platformVersion=11, serial=1675150918317), owningKey=DL8N4Af87CB7YkoXipyYeTMNpZxWgJ9zobXe1f2wRi1WZC {}
[INFO ] 2023-01-31T07:41:58,472Z [Test worker] network.PersistentNetworkMapCache. - No previous node found for O=Mock Company 2, L=London, C=GB {}
[INFO ] 2023-01-31T07:41:58,486Z [Test worker] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 1, L=London, C=GB], platformVersion=11, serial=1675150917161), owningKey=DL8pvTPuu8mkTPCk6iBxAzhpzBgXExtjYciWkZ5wec4GQU {}
[INFO ] 2023-01-31T07:41:58,486Z [Test worker] network.PersistentNetworkMapCache. - No previous node found for O=Mock Company 1, L=London, C=GB {}
[INFO ] 2023-01-31T07:41:58,498Z [Test worker] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 2, L=London, C=GB], platformVersion=11, serial=1675150918317), owningKey=DL8N4Af87CB7YkoXipyYeTMNpZxWgJ9zobXe1f2wRi1WZC {}
[INFO ] 2023-01-31T07:41:58,498Z [Test worker] network.PersistentNetworkMapCache. - No previous node found for O=Mock Company 2, L=London, C=GB {}
[INFO ] 2023-01-31T07:41:58,506Z [Test worker] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 2, L=London, C=GB], platformVersion=11, serial=1675150918317), owningKey=DL8N4Af87CB7YkoXipyYeTMNpZxWgJ9zobXe1f2wRi1WZC {}
[INFO ] 2023-01-31T07:41:58,506Z [Test worker] network.PersistentNetworkMapCache. - Previous node was identical to incoming one - doing nothing {}
[INFO ] 2023-01-31T07:41:58,506Z [Test worker] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 2, L=London, C=GB], platformVersion=11, serial=1675150918317), owningKey=DL8N4Af87CB7YkoXipyYeTMNpZxWgJ9zobXe1f2wRi1WZC {}
[INFO ] 2023-01-31T07:41:58,506Z [Test worker] network.PersistentNetworkMapCache. - Previous node was identical to incoming one - doing nothing {}
[INFO ] 2023-01-31T07:41:58,519Z [Test worker] cordapp.JarScanningCordappLoader. - Looking for CorDapps in [build/mock-network/20230131-074130.937-F1EE0DF4CF8EBF7A/nodes/3/cordapps] {}
[INFO ] 2023-01-31T07:41:58,520Z [Test worker] cordapp.JarScanningCordappLoader. - Loading CorDapps from RestrictedURL(url=file:/Users/peter.li/Desktop/obligation-cordapp/workflows/build/mock-network/20230131-074130.937-F1EE0DF4CF8EBF7A/nodes/3/cordapps/accounts-contracts-1.0.jar, rootPackageName=null), RestrictedURL(url=file:/Users/peter.li/Desktop/obligation-cordapp/workflows/build/mock-network/20230131-074130.937-F1EE0DF4CF8EBF7A/nodes/3/cordapps/accounts-workflows-1.0.jar, rootPackageName=null), RestrictedURL(url=file:/Users/peter.li/Desktop/obligation-cordapp/workflows/build/mock-network/20230131-074130.937-F1EE0DF4CF8EBF7A/nodes/3/cordapps/corda-finance-contracts-4.9.jar, rootPackageName=null), RestrictedURL(url=file:/Users/peter.li/Desktop/obligation-cordapp/workflows/build/mock-network/20230131-074130.937-F1EE0DF4CF8EBF7A/nodes/3/cordapps/contracts-1.0.jar, rootPackageName=null), RestrictedURL(url=file:/Users/peter.li/Desktop/obligation-cordapp/workflows/build/mock-network/20230131-074130.937-F1EE0DF4CF8EBF7A/nodes/3/cordapps/workflows-1.0.jar, rootPackageName=null) {}
[INFO ] 2023-01-31T07:41:58,520Z [Test worker] cordapp.JarScanningCordappLoader. - Scanning CorDapp in file:/Users/peter.li/Desktop/obligation-cordapp/workflows/build/mock-network/20230131-074130.937-F1EE0DF4CF8EBF7A/nodes/3/cordapps/accounts-contracts-1.0.jar {}
[INFO ] 2023-01-31T07:41:58,544Z [Test worker] cordapp.JarScanningCordappLoader. - Scanning CorDapp in file:/Users/peter.li/Desktop/obligation-cordapp/workflows/build/mock-network/20230131-074130.937-F1EE0DF4CF8EBF7A/nodes/3/cordapps/accounts-workflows-1.0.jar {}
[INFO ] 2023-01-31T07:41:58,553Z [Test worker] cordapp.JarScanningCordappLoader. - Scanning CorDapp in file:/Users/peter.li/Desktop/obligation-cordapp/workflows/build/mock-network/20230131-074130.937-F1EE0DF4CF8EBF7A/nodes/3/cordapps/corda-finance-contracts-4.9.jar {}
[INFO ] 2023-01-31T07:41:58,563Z [Test worker] cordapp.JarScanningCordappLoader. - Scanning CorDapp in file:/Users/peter.li/Desktop/obligation-cordapp/workflows/build/mock-network/20230131-074130.937-F1EE0DF4CF8EBF7A/nodes/3/cordapps/contracts-1.0.jar {}
[INFO ] 2023-01-31T07:41:58,568Z [Test worker] cordapp.JarScanningCordappLoader. - Scanning CorDapp in file:/Users/peter.li/Desktop/obligation-cordapp/workflows/build/mock-network/20230131-074130.937-F1EE0DF4CF8EBF7A/nodes/3/cordapps/workflows-1.0.jar {}
[INFO ] 2023-01-31T07:41:58,600Z [Test worker] internal.InternalMockNetwork$MockNode. - MessagingService active change to: false {}
[INFO ] 2023-01-31T07:41:58,601Z [Test worker] internal.InternalMockNetwork$MockNode. - Flow external operation executor has a max of 2 threads {}
[INFO ] 2023-01-31T07:41:58,603Z [Test worker] internal.InternalMockNetwork$MockNode. - Node starting up ... {}
[INFO ] 2023-01-31T07:41:58,638Z [Test worker] internal.KeyStoreHandler. - Loaded trusted root certificate: DL7fwxLm5xbiMD8adUuYTsPZHAict46Ng4w6RNcySt5vAw, alias: cordarootca {}
[INFO ] 2023-01-31T07:41:58,638Z [Test worker] internal.KeyStoreHandler. - Loaded node identity key: DL89hA5JaUtaJjkGnH7HXbqUMabnEEXwqU4dkiAJW6AKok, alias: identity-private-key {}
[INFO ] 2023-01-31T07:41:58,643Z [Test worker] internal.NodeFlowManager. - Registered com.r3.corda.lib.accounts.workflows.flows.ShareStateAndSyncAccounts to initiate com.r3.corda.lib.accounts.workflows.flows.ReceiveStateAndSyncAccounts (version 1) {}
[INFO ] 2023-01-31T07:41:58,643Z [Test worker] internal.NodeFlowManager. - Registered com.r3.corda.lib.accounts.workflows.flows.ShareStateWithAccount to initiate com.r3.corda.lib.accounts.workflows.flows.ReceiveStateForAccount (version 1) {}
[INFO ] 2023-01-31T07:41:58,643Z [Test worker] internal.NodeFlowManager. - Registered com.r3.corda.lib.accounts.workflows.flows.RequestAccountInfo to initiate com.r3.corda.lib.accounts.workflows.flows.RequestAccountInfoHandler (version 1) {}
[INFO ] 2023-01-31T07:41:58,643Z [Test worker] internal.NodeFlowManager. - Registered com.r3.corda.lib.accounts.workflows.flows.RequestKeyForAccount to initiate com.r3.corda.lib.accounts.workflows.flows.SendKeyForAccount (version 1) {}
[INFO ] 2023-01-31T07:41:58,643Z [Test worker] internal.NodeFlowManager. - Registered com.r3.corda.lib.accounts.workflows.flows.ShareAccountInfo to initiate com.r3.corda.lib.accounts.workflows.flows.ShareAccountInfoHandler (version 1) {}
[INFO ] 2023-01-31T07:41:58,643Z [Test worker] internal.NodeFlowManager. - Registered net.corda.samples.obligation.flows.IOUIssueFlow to initiate net.corda.samples.obligation.flows.IOUIssueFlowResponder (version 1) {}
[INFO ] 2023-01-31T07:41:58,643Z [Test worker] internal.NodeFlowManager. - Registered net.corda.samples.obligation.flows.IOUSettleFlow to initiate net.corda.samples.obligation.flows.IOUSettleFlowResponder (version 1) {}
[INFO ] 2023-01-31T07:41:58,643Z [Test worker] internal.NodeFlowManager. - Registered net.corda.samples.obligation.flows.IOUTransferFlow to initiate net.corda.samples.obligation.flows.IOUTransferFlowResponder (version 1) {}
[INFO ] 2023-01-31T07:41:58,643Z [Test worker] internal.NodeFlowManager. - Registered net.corda.samples.obligation.flows.SyncKey to initiate net.corda.samples.obligation.flows.SyncKeyResponder (version 1) {}
[INFO ] 2023-01-31T07:41:58,649Z [Test worker] internal.InternalMockNetwork$MockNode. - Loaded network parameters: NetworkParameters {
      minimumPlatformVersion=4
      notaries=[NotaryInfo(identity=O=Notary, L=London, C=GB, validating=true)]
      maxMessageSize=10485760
      maxTransactionSize=524288000
      whitelistedContractImplementations {
        
      }
      eventHorizon=PT720H
      packageOwnership {
        
      }
      modifiedTime=2023-01-31T07:41:30.622Z
      epoch=1
  } {}
[INFO ] 2023-01-31T07:41:59,224Z [Test worker] internal.InternalMockNetwork$MockNode. - Connected to H2 database. {}
[INFO ] 2023-01-31T07:41:59,225Z [Test worker] persistence.HibernateConfiguration. - Init HibernateConfiguration for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1), AccountsContractsSchemaV1(name=com.r3.corda.lib.accounts.contracts.internal.schemas.AccountsContractsSchema, version=1), AccountsWorkflowsSchemaV1(name=com.r3.corda.lib.accounts.workflows.internal.schemas.AccountsWorkflowsSchema, version=1), CashSchemaV1(name=net.corda.finance.schemas.CashSchema, version=1), CommercialPaperSchemaV1(name=net.corda.finance.schemas.CommercialPaperSchema, version=1)] {}
[INFO ] 2023-01-31T07:41:59,226Z [Test worker] factory.BaseSessionFactoryFactory. - Creating session factory for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1), AccountsContractsSchemaV1(name=com.r3.corda.lib.accounts.contracts.internal.schemas.AccountsContractsSchema, version=1), AccountsWorkflowsSchemaV1(name=com.r3.corda.lib.accounts.workflows.internal.schemas.AccountsWorkflowsSchema, version=1), CashSchemaV1(name=net.corda.finance.schemas.CashSchema, version=1), CommercialPaperSchemaV1(name=net.corda.finance.schemas.CommercialPaperSchema, version=1)] {}
[INFO ] 2023-01-31T07:41:59,358Z [Test worker] factory.BaseSessionFactoryFactory. - Created session factory for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1), AccountsContractsSchemaV1(name=com.r3.corda.lib.accounts.contracts.internal.schemas.AccountsContractsSchema, version=1), AccountsWorkflowsSchemaV1(name=com.r3.corda.lib.accounts.workflows.internal.schemas.AccountsWorkflowsSchema, version=1), CashSchemaV1(name=net.corda.finance.schemas.CashSchema, version=1), CommercialPaperSchemaV1(name=net.corda.finance.schemas.CommercialPaperSchema, version=1)] {}
[INFO ] 2023-01-31T07:41:59,363Z [Test worker] internal.InternalMockNetwork$MockNode. - Node-info has changed so submitting update. Old node-info was null {}
[INFO ] 2023-01-31T07:41:59,367Z [Test worker] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 3, L=London, C=GB], platformVersion=11, serial=1675150919363), owningKey=DL89hA5JaUtaJjkGnH7HXbqUMabnEEXwqU4dkiAJW6AKok {}
[INFO ] 2023-01-31T07:41:59,367Z [Test worker] network.PersistentNetworkMapCache. - No previous node found for O=Mock Company 3, L=London, C=GB {}
[INFO ] 2023-01-31T07:41:59,373Z [Test worker] internal.InternalMockNetwork$MockNode. - New node-info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 3, L=London, C=GB], platformVersion=11, serial=1675150919363) {}
[INFO ] 2023-01-31T07:41:59,379Z [Test worker] network.NetworkMapUpdater. - Auto-accept enabled for network parameter changes which modify only: [epoch, modifiedTime, packageOwnership, whitelistedContractImplementations] {}
[INFO ] 2023-01-31T07:41:59,380Z [Test worker] internal.MockNodeMessagingService. - Status change to true {}
[INFO ] 2023-01-31T07:41:59,380Z [Test worker] internal.InternalMockNetwork$MockNode. - MessagingService active change to: true {}
[INFO ] 2023-01-31T07:41:59,391Z [MockNode-4-2] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 3, L=London, C=GB], platformVersion=11, serial=1675150919363), owningKey=DL89hA5JaUtaJjkGnH7HXbqUMabnEEXwqU4dkiAJW6AKok {}
[INFO ] 2023-01-31T07:41:59,391Z [MockNode-4-2] network.PersistentNetworkMapCache. - Previous node was identical to incoming one - doing nothing {}
[INFO ] 2023-01-31T07:41:59,418Z [Test worker] persistence.NodeAttachmentService. - Stored new attachment: id=D370FD972C7E07CE73F4F9B7886D226807F6B16C4EE287398B9C69384109DC14 uploader=app filename=Accounts SDK - States and Contracts {}
[INFO ] 2023-01-31T07:41:59,459Z [Test worker] persistence.NodeAttachmentService. - Stored new attachment: id=BD0C932EAF8B1FE96DCBBF275B914BCD776D14EDC8F97DCEBF7E15DA09C606AE uploader=app filename=Corda Finance Demo {}
[INFO ] 2023-01-31T07:41:59,474Z [Test worker] persistence.NodeAttachmentService. - Stored new attachment: id=8D797B45F40704FA4FD70921F5BC6E2D7B34450D345CE6788D2A87859EF63BD8 uploader=app filename=Obligation Contracts {}
[INFO ] 2023-01-31T07:41:59,477Z [Test worker] internal.InternalMockNetwork$MockNode. - Installed com.r3.corda.lib.accounts.workflows.services.KeyManagementBackedAccountService Corda service {}
[INFO ] 2023-01-31T07:41:59,498Z [Test worker] statemachine.SingleThreadedStateMachineManager. - Node ready, info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 3, L=London, C=GB], platformVersion=11, serial=1675150919363) {}
[INFO ] 2023-01-31T07:41:59,500Z [Test worker] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Notary, L=London, C=GB], platformVersion=11, serial=1675150914892), owningKey=DL7s1Xp9Arivww12FVNJjYSk2iMXmX63ropXbRLqScDkwP {}
[INFO ] 2023-01-31T07:41:59,500Z [Test worker] network.PersistentNetworkMapCache. - No previous node found for O=Notary, L=London, C=GB {}
[INFO ] 2023-01-31T07:41:59,509Z [Test worker] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 3, L=London, C=GB], platformVersion=11, serial=1675150919363), owningKey=DL89hA5JaUtaJjkGnH7HXbqUMabnEEXwqU4dkiAJW6AKok {}
[INFO ] 2023-01-31T07:41:59,509Z [Test worker] network.PersistentNetworkMapCache. - No previous node found for O=Mock Company 3, L=London, C=GB {}
[INFO ] 2023-01-31T07:41:59,520Z [Test worker] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 1, L=London, C=GB], platformVersion=11, serial=1675150917161), owningKey=DL8pvTPuu8mkTPCk6iBxAzhpzBgXExtjYciWkZ5wec4GQU {}
[INFO ] 2023-01-31T07:41:59,520Z [Test worker] network.PersistentNetworkMapCache. - No previous node found for O=Mock Company 1, L=London, C=GB {}
[INFO ] 2023-01-31T07:41:59,530Z [Test worker] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 3, L=London, C=GB], platformVersion=11, serial=1675150919363), owningKey=DL89hA5JaUtaJjkGnH7HXbqUMabnEEXwqU4dkiAJW6AKok {}
[INFO ] 2023-01-31T07:41:59,530Z [Test worker] network.PersistentNetworkMapCache. - No previous node found for O=Mock Company 3, L=London, C=GB {}
[INFO ] 2023-01-31T07:41:59,539Z [Test worker] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 2, L=London, C=GB], platformVersion=11, serial=1675150918317), owningKey=DL8N4Af87CB7YkoXipyYeTMNpZxWgJ9zobXe1f2wRi1WZC {}
[INFO ] 2023-01-31T07:41:59,539Z [Test worker] network.PersistentNetworkMapCache. - No previous node found for O=Mock Company 2, L=London, C=GB {}
[INFO ] 2023-01-31T07:41:59,549Z [Test worker] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 3, L=London, C=GB], platformVersion=11, serial=1675150919363), owningKey=DL89hA5JaUtaJjkGnH7HXbqUMabnEEXwqU4dkiAJW6AKok {}
[INFO ] 2023-01-31T07:41:59,549Z [Test worker] network.PersistentNetworkMapCache. - No previous node found for O=Mock Company 3, L=London, C=GB {}
[INFO ] 2023-01-31T07:41:59,556Z [Test worker] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 3, L=London, C=GB], platformVersion=11, serial=1675150919363), owningKey=DL89hA5JaUtaJjkGnH7HXbqUMabnEEXwqU4dkiAJW6AKok {}
[INFO ] 2023-01-31T07:41:59,556Z [Test worker] network.PersistentNetworkMapCache. - Previous node was identical to incoming one - doing nothing {}
[INFO ] 2023-01-31T07:41:59,557Z [Test worker] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 3, L=London, C=GB], platformVersion=11, serial=1675150919363), owningKey=DL89hA5JaUtaJjkGnH7HXbqUMabnEEXwqU4dkiAJW6AKok {}
[INFO ] 2023-01-31T07:41:59,557Z [Test worker] network.PersistentNetworkMapCache. - Previous node was identical to incoming one - doing nothing {}
[WARN ] 2023-01-31T07:41:59,558Z [Test worker] internal.NodeFlowManager. - Multiple flows are registered for InitiatingFlow: class net.corda.samples.obligation.flows.IOUIssueFlow, currently using: class net.corda.samples.obligation.flows.IOUIssueFlowResponder {}
[INFO ] 2023-01-31T07:41:59,558Z [Test worker] internal.NodeFlowManager. - Registered net.corda.samples.obligation.flows.IOUIssueFlow to initiate net.corda.samples.obligation.flows.IOUIssueFlowResponder (version 1) {}
[WARN ] 2023-01-31T07:41:59,563Z [Test worker] internal.NodeFlowManager. - Multiple flows are registered for InitiatingFlow: class net.corda.samples.obligation.flows.IOUIssueFlow, currently using: class net.corda.samples.obligation.flows.IOUIssueFlowResponder {}
[INFO ] 2023-01-31T07:41:59,563Z [Test worker] internal.NodeFlowManager. - Registered net.corda.samples.obligation.flows.IOUIssueFlow to initiate net.corda.samples.obligation.flows.IOUIssueFlowResponder (version 1) {}
[WARN ] 2023-01-31T07:41:59,563Z [Test worker] internal.NodeFlowManager. - Multiple flows are registered for InitiatingFlow: class net.corda.samples.obligation.flows.IOUIssueFlow, currently using: class net.corda.samples.obligation.flows.IOUIssueFlowResponder {}
[INFO ] 2023-01-31T07:41:59,563Z [Test worker] internal.NodeFlowManager. - Registered net.corda.samples.obligation.flows.IOUIssueFlow to initiate net.corda.samples.obligation.flows.IOUIssueFlowResponder (version 1) {}
[WARN ] 2023-01-31T07:41:59,563Z [Test worker] internal.NodeFlowManager. - Multiple flows are registered for InitiatingFlow: class net.corda.samples.obligation.flows.IOUSettleFlow, currently using: class net.corda.samples.obligation.flows.IOUSettleFlowResponder {}
[INFO ] 2023-01-31T07:41:59,563Z [Test worker] internal.NodeFlowManager. - Registered net.corda.samples.obligation.flows.IOUSettleFlow to initiate net.corda.samples.obligation.flows.IOUSettleFlowResponder (version 1) {}
[WARN ] 2023-01-31T07:41:59,563Z [Test worker] internal.NodeFlowManager. - Multiple flows are registered for InitiatingFlow: class net.corda.samples.obligation.flows.IOUSettleFlow, currently using: class net.corda.samples.obligation.flows.IOUSettleFlowResponder {}
[INFO ] 2023-01-31T07:41:59,563Z [Test worker] internal.NodeFlowManager. - Registered net.corda.samples.obligation.flows.IOUSettleFlow to initiate net.corda.samples.obligation.flows.IOUSettleFlowResponder (version 1) {}
[WARN ] 2023-01-31T07:41:59,563Z [Test worker] internal.NodeFlowManager. - Multiple flows are registered for InitiatingFlow: class net.corda.samples.obligation.flows.IOUSettleFlow, currently using: class net.corda.samples.obligation.flows.IOUSettleFlowResponder {}
[INFO ] 2023-01-31T07:41:59,563Z [Test worker] internal.NodeFlowManager. - Registered net.corda.samples.obligation.flows.IOUSettleFlow to initiate net.corda.samples.obligation.flows.IOUSettleFlowResponder (version 1) {}
[INFO ] 2023-01-31T07:42:00,461Z [Mock network] corda.flow. - No need to notarise this transaction. {actor_id=Only For Testing, actor_owning_identity=O=Mock Company 1, L=London, C=GB, actor_store_id=TEST, fiber-id=10000001, flow-id=c0220b8b-7cd1-4688-9de5-808d64b8916e, invocation_id=c1ad4ff5-efd4-449b-b186-c01a80e719a7, invocation_timestamp=2023-01-31T07:41:59.591Z, origin=Only For Testing, session_id=c1ad4ff5-efd4-449b-b186-c01a80e719a7, session_timestamp=2023-01-31T07:41:59.591Z, thread-id=858, tx_id=53B460F19764F7194885E70574595D3BB549CB81F29E60FF52CE80041FCF9CA2}
[INFO ] 2023-01-31T07:42:00,461Z [Mock network] corda.flow. - Recording transaction locally. {actor_id=Only For Testing, actor_owning_identity=O=Mock Company 1, L=London, C=GB, actor_store_id=TEST, fiber-id=10000001, flow-id=c0220b8b-7cd1-4688-9de5-808d64b8916e, invocation_id=c1ad4ff5-efd4-449b-b186-c01a80e719a7, invocation_timestamp=2023-01-31T07:41:59.591Z, origin=Only For Testing, session_id=c1ad4ff5-efd4-449b-b186-c01a80e719a7, session_timestamp=2023-01-31T07:41:59.591Z, thread-id=858, tx_id=53B460F19764F7194885E70574595D3BB549CB81F29E60FF52CE80041FCF9CA2}
[INFO ] 2023-01-31T07:42:00,562Z [Mock network] corda.flow. - Recorded transaction locally successfully. {actor_id=Only For Testing, actor_owning_identity=O=Mock Company 1, L=London, C=GB, actor_store_id=TEST, fiber-id=10000001, flow-id=c0220b8b-7cd1-4688-9de5-808d64b8916e, invocation_id=c1ad4ff5-efd4-449b-b186-c01a80e719a7, invocation_timestamp=2023-01-31T07:41:59.591Z, origin=Only For Testing, session_id=c1ad4ff5-efd4-449b-b186-c01a80e719a7, session_timestamp=2023-01-31T07:41:59.591Z, thread-id=858, tx_id=53B460F19764F7194885E70574595D3BB549CB81F29E60FF52CE80041FCF9CA2}
[INFO ] 2023-01-31T07:42:00,562Z [Mock network] corda.flow. - All parties received the transaction successfully. {actor_id=Only For Testing, actor_owning_identity=O=Mock Company 1, L=London, C=GB, actor_store_id=TEST, fiber-id=10000001, flow-id=c0220b8b-7cd1-4688-9de5-808d64b8916e, invocation_id=c1ad4ff5-efd4-449b-b186-c01a80e719a7, invocation_timestamp=2023-01-31T07:41:59.591Z, origin=Only For Testing, session_id=c1ad4ff5-efd4-449b-b186-c01a80e719a7, session_timestamp=2023-01-31T07:41:59.591Z, thread-id=858, tx_id=53B460F19764F7194885E70574595D3BB549CB81F29E60FF52CE80041FCF9CA2}
[INFO ] 2023-01-31T07:42:00,751Z [Mock network] corda.flow. - Received transaction acknowledgement request from party O=Mock Company 1, L=London, C=GB. {fiber-id=10000002, flow-id=9ae6707d-15c7-47c4-8d7b-e011f3c5192c, invocation_id=2d460f6b-c1d1-40ce-8a36-e88d1e3f0e50, invocation_timestamp=2023-01-31T07:42:00.696Z, origin=O=Mock Company 1, L=London, C=GB, session_id=2d460f6b-c1d1-40ce-8a36-e88d1e3f0e50, session_timestamp=2023-01-31T07:42:00.696Z, thread-id=858, tx_id=53B460F19764F7194885E70574595D3BB549CB81F29E60FF52CE80041FCF9CA2}
[INFO ] 2023-01-31T07:42:00,803Z [Mock network] corda.flow. - Transaction dependencies resolution completed. {fiber-id=10000002, flow-id=9ae6707d-15c7-47c4-8d7b-e011f3c5192c, invocation_id=2d460f6b-c1d1-40ce-8a36-e88d1e3f0e50, invocation_timestamp=2023-01-31T07:42:00.696Z, origin=O=Mock Company 1, L=London, C=GB, session_id=2d460f6b-c1d1-40ce-8a36-e88d1e3f0e50, session_timestamp=2023-01-31T07:42:00.696Z, thread-id=858, tx_id=53B460F19764F7194885E70574595D3BB549CB81F29E60FF52CE80041FCF9CA2}
[INFO ] 2023-01-31T07:42:00,894Z [Mock network] corda.flow. - Successfully received fully signed tx. Sending it to the vault for processing. {fiber-id=10000002, flow-id=9ae6707d-15c7-47c4-8d7b-e011f3c5192c, invocation_id=2d460f6b-c1d1-40ce-8a36-e88d1e3f0e50, invocation_timestamp=2023-01-31T07:42:00.696Z, origin=O=Mock Company 1, L=London, C=GB, session_id=2d460f6b-c1d1-40ce-8a36-e88d1e3f0e50, session_timestamp=2023-01-31T07:42:00.696Z, thread-id=858, tx_id=53B460F19764F7194885E70574595D3BB549CB81F29E60FF52CE80041FCF9CA2}
[INFO ] 2023-01-31T07:42:00,918Z [Mock network] corda.flow. - Successfully recorded received transaction locally. {fiber-id=10000002, flow-id=9ae6707d-15c7-47c4-8d7b-e011f3c5192c, invocation_id=2d460f6b-c1d1-40ce-8a36-e88d1e3f0e50, invocation_timestamp=2023-01-31T07:42:00.696Z, origin=O=Mock Company 1, L=London, C=GB, session_id=2d460f6b-c1d1-40ce-8a36-e88d1e3f0e50, session_timestamp=2023-01-31T07:42:00.696Z, thread-id=858, tx_id=53B460F19764F7194885E70574595D3BB549CB81F29E60FF52CE80041FCF9CA2}
[INFO ] 2023-01-31T07:42:00,997Z [Mock network] corda.flow. - Received transaction acknowledgement request from party O=Mock Company 1, L=London, C=GB. {fiber-id=10000003, flow-id=ca3d538b-cd50-4068-b3f2-3a3f2aca23b2, invocation_id=9e4b3a5e-70ea-4d3c-b242-61d8d2055154, invocation_timestamp=2023-01-31T07:42:00.979Z, origin=O=Mock Company 1, L=London, C=GB, session_id=9e4b3a5e-70ea-4d3c-b242-61d8d2055154, session_timestamp=2023-01-31T07:42:00.979Z, thread-id=858, tx_id=53B460F19764F7194885E70574595D3BB549CB81F29E60FF52CE80041FCF9CA2}
[INFO ] 2023-01-31T07:42:01,009Z [Mock network] corda.flow. - Transaction dependencies resolution completed. {fiber-id=10000003, flow-id=ca3d538b-cd50-4068-b3f2-3a3f2aca23b2, invocation_id=9e4b3a5e-70ea-4d3c-b242-61d8d2055154, invocation_timestamp=2023-01-31T07:42:00.979Z, origin=O=Mock Company 1, L=London, C=GB, session_id=9e4b3a5e-70ea-4d3c-b242-61d8d2055154, session_timestamp=2023-01-31T07:42:00.979Z, thread-id=858, tx_id=53B460F19764F7194885E70574595D3BB549CB81F29E60FF52CE80041FCF9CA2}
[INFO ] 2023-01-31T07:42:01,040Z [Mock network] corda.flow. - Successfully received fully signed tx. Sending it to the vault for processing. {fiber-id=10000003, flow-id=ca3d538b-cd50-4068-b3f2-3a3f2aca23b2, invocation_id=9e4b3a5e-70ea-4d3c-b242-61d8d2055154, invocation_timestamp=2023-01-31T07:42:00.979Z, origin=O=Mock Company 1, L=London, C=GB, session_id=9e4b3a5e-70ea-4d3c-b242-61d8d2055154, session_timestamp=2023-01-31T07:42:00.979Z, thread-id=858, tx_id=53B460F19764F7194885E70574595D3BB549CB81F29E60FF52CE80041FCF9CA2}
[INFO ] 2023-01-31T07:42:01,048Z [Mock network] corda.flow. - Successfully recorded received transaction locally. {fiber-id=10000003, flow-id=ca3d538b-cd50-4068-b3f2-3a3f2aca23b2, invocation_id=9e4b3a5e-70ea-4d3c-b242-61d8d2055154, invocation_timestamp=2023-01-31T07:42:00.979Z, origin=O=Mock Company 1, L=London, C=GB, session_id=9e4b3a5e-70ea-4d3c-b242-61d8d2055154, session_timestamp=2023-01-31T07:42:00.979Z, thread-id=858, tx_id=53B460F19764F7194885E70574595D3BB549CB81F29E60FF52CE80041FCF9CA2}
[INFO ] 2023-01-31T07:42:01,102Z [Mock network] corda.flow. - No need to notarise this transaction. {actor_id=Only For Testing, actor_owning_identity=O=Mock Company 2, L=London, C=GB, actor_store_id=TEST, fiber-id=10000004, flow-id=7f5f22d4-7ce0-4f6a-927d-bb857c8b0576, invocation_id=e5090541-c5e0-41ab-922d-306d05d41bfb, invocation_timestamp=2023-01-31T07:42:01.073Z, origin=Only For Testing, session_id=e5090541-c5e0-41ab-922d-306d05d41bfb, session_timestamp=2023-01-31T07:42:01.073Z, thread-id=858, tx_id=7E9E49C0500CEAAB30C40F4E1DE54A3E34806FF9C9D67568AF959E828C90AF71}
[INFO ] 2023-01-31T07:42:01,102Z [Mock network] corda.flow. - Recording transaction locally. {actor_id=Only For Testing, actor_owning_identity=O=Mock Company 2, L=London, C=GB, actor_store_id=TEST, fiber-id=10000004, flow-id=7f5f22d4-7ce0-4f6a-927d-bb857c8b0576, invocation_id=e5090541-c5e0-41ab-922d-306d05d41bfb, invocation_timestamp=2023-01-31T07:42:01.073Z, origin=Only For Testing, session_id=e5090541-c5e0-41ab-922d-306d05d41bfb, session_timestamp=2023-01-31T07:42:01.073Z, thread-id=858, tx_id=7E9E49C0500CEAAB30C40F4E1DE54A3E34806FF9C9D67568AF959E828C90AF71}
[INFO ] 2023-01-31T07:42:01,105Z [Mock network] corda.flow. - Recorded transaction locally successfully. {actor_id=Only For Testing, actor_owning_identity=O=Mock Company 2, L=London, C=GB, actor_store_id=TEST, fiber-id=10000004, flow-id=7f5f22d4-7ce0-4f6a-927d-bb857c8b0576, invocation_id=e5090541-c5e0-41ab-922d-306d05d41bfb, invocation_timestamp=2023-01-31T07:42:01.073Z, origin=Only For Testing, session_id=e5090541-c5e0-41ab-922d-306d05d41bfb, session_timestamp=2023-01-31T07:42:01.073Z, thread-id=858, tx_id=7E9E49C0500CEAAB30C40F4E1DE54A3E34806FF9C9D67568AF959E828C90AF71}
[INFO ] 2023-01-31T07:42:01,105Z [Mock network] corda.flow. - All parties received the transaction successfully. {actor_id=Only For Testing, actor_owning_identity=O=Mock Company 2, L=London, C=GB, actor_store_id=TEST, fiber-id=10000004, flow-id=7f5f22d4-7ce0-4f6a-927d-bb857c8b0576, invocation_id=e5090541-c5e0-41ab-922d-306d05d41bfb, invocation_timestamp=2023-01-31T07:42:01.073Z, origin=Only For Testing, session_id=e5090541-c5e0-41ab-922d-306d05d41bfb, session_timestamp=2023-01-31T07:42:01.073Z, thread-id=858, tx_id=7E9E49C0500CEAAB30C40F4E1DE54A3E34806FF9C9D67568AF959E828C90AF71}
[INFO ] 2023-01-31T07:42:01,133Z [Mock network] corda.flow. - Received transaction acknowledgement request from party O=Mock Company 2, L=London, C=GB. {fiber-id=10000005, flow-id=426bb298-b8fc-4e70-bee6-bb696a977943, invocation_id=99ca55af-6333-4c0a-898d-86fd38ee88a5, invocation_timestamp=2023-01-31T07:42:01.122Z, origin=O=Mock Company 2, L=London, C=GB, session_id=99ca55af-6333-4c0a-898d-86fd38ee88a5, session_timestamp=2023-01-31T07:42:01.122Z, thread-id=858, tx_id=7E9E49C0500CEAAB30C40F4E1DE54A3E34806FF9C9D67568AF959E828C90AF71}
[INFO ] 2023-01-31T07:42:01,141Z [Mock network] corda.flow. - Transaction dependencies resolution completed. {fiber-id=10000005, flow-id=426bb298-b8fc-4e70-bee6-bb696a977943, invocation_id=99ca55af-6333-4c0a-898d-86fd38ee88a5, invocation_timestamp=2023-01-31T07:42:01.122Z, origin=O=Mock Company 2, L=London, C=GB, session_id=99ca55af-6333-4c0a-898d-86fd38ee88a5, session_timestamp=2023-01-31T07:42:01.122Z, thread-id=858, tx_id=7E9E49C0500CEAAB30C40F4E1DE54A3E34806FF9C9D67568AF959E828C90AF71}
[INFO ] 2023-01-31T07:42:01,145Z [Mock network] corda.flow. - Successfully received fully signed tx. Sending it to the vault for processing. {fiber-id=10000005, flow-id=426bb298-b8fc-4e70-bee6-bb696a977943, invocation_id=99ca55af-6333-4c0a-898d-86fd38ee88a5, invocation_timestamp=2023-01-31T07:42:01.122Z, origin=O=Mock Company 2, L=London, C=GB, session_id=99ca55af-6333-4c0a-898d-86fd38ee88a5, session_timestamp=2023-01-31T07:42:01.122Z, thread-id=858, tx_id=7E9E49C0500CEAAB30C40F4E1DE54A3E34806FF9C9D67568AF959E828C90AF71}
[INFO ] 2023-01-31T07:42:01,150Z [Mock network] corda.flow. - Successfully recorded received transaction locally. {fiber-id=10000005, flow-id=426bb298-b8fc-4e70-bee6-bb696a977943, invocation_id=99ca55af-6333-4c0a-898d-86fd38ee88a5, invocation_timestamp=2023-01-31T07:42:01.122Z, origin=O=Mock Company 2, L=London, C=GB, session_id=99ca55af-6333-4c0a-898d-86fd38ee88a5, session_timestamp=2023-01-31T07:42:01.122Z, thread-id=858, tx_id=7E9E49C0500CEAAB30C40F4E1DE54A3E34806FF9C9D67568AF959E828C90AF71}
[INFO ] 2023-01-31T07:42:01,203Z [Mock network] corda.flow. - Received transaction acknowledgement request from party O=Mock Company 2, L=London, C=GB. {fiber-id=10000006, flow-id=923ba3a6-5e12-485d-924c-6715e140ac3c, invocation_id=e25d4067-2e04-4b76-991a-3f10c9007941, invocation_timestamp=2023-01-31T07:42:01.184Z, origin=O=Mock Company 2, L=London, C=GB, session_id=e25d4067-2e04-4b76-991a-3f10c9007941, session_timestamp=2023-01-31T07:42:01.184Z, thread-id=858, tx_id=7E9E49C0500CEAAB30C40F4E1DE54A3E34806FF9C9D67568AF959E828C90AF71}
[INFO ] 2023-01-31T07:42:01,211Z [Mock network] corda.flow. - Transaction dependencies resolution completed. {fiber-id=10000006, flow-id=923ba3a6-5e12-485d-924c-6715e140ac3c, invocation_id=e25d4067-2e04-4b76-991a-3f10c9007941, invocation_timestamp=2023-01-31T07:42:01.184Z, origin=O=Mock Company 2, L=London, C=GB, session_id=e25d4067-2e04-4b76-991a-3f10c9007941, session_timestamp=2023-01-31T07:42:01.184Z, thread-id=858, tx_id=7E9E49C0500CEAAB30C40F4E1DE54A3E34806FF9C9D67568AF959E828C90AF71}
[INFO ] 2023-01-31T07:42:01,216Z [Mock network] corda.flow. - Successfully received fully signed tx. Sending it to the vault for processing. {fiber-id=10000006, flow-id=923ba3a6-5e12-485d-924c-6715e140ac3c, invocation_id=e25d4067-2e04-4b76-991a-3f10c9007941, invocation_timestamp=2023-01-31T07:42:01.184Z, origin=O=Mock Company 2, L=London, C=GB, session_id=e25d4067-2e04-4b76-991a-3f10c9007941, session_timestamp=2023-01-31T07:42:01.184Z, thread-id=858, tx_id=7E9E49C0500CEAAB30C40F4E1DE54A3E34806FF9C9D67568AF959E828C90AF71}
[INFO ] 2023-01-31T07:42:01,222Z [Mock network] corda.flow. - Successfully recorded received transaction locally. {fiber-id=10000006, flow-id=923ba3a6-5e12-485d-924c-6715e140ac3c, invocation_id=e25d4067-2e04-4b76-991a-3f10c9007941, invocation_timestamp=2023-01-31T07:42:01.184Z, origin=O=Mock Company 2, L=London, C=GB, session_id=e25d4067-2e04-4b76-991a-3f10c9007941, session_timestamp=2023-01-31T07:42:01.184Z, thread-id=858, tx_id=7E9E49C0500CEAAB30C40F4E1DE54A3E34806FF9C9D67568AF959E828C90AF71}
[INFO ] 2023-01-31T07:42:01,260Z [Mock network] corda.flow. - No need to notarise this transaction. {actor_id=Only For Testing, actor_owning_identity=O=Mock Company 3, L=London, C=GB, actor_store_id=TEST, fiber-id=10000007, flow-id=0dd28c02-11a5-47eb-a2ae-d6fcb2e201d6, invocation_id=e41c47c3-7c61-4e0d-81ff-faa63557af89, invocation_timestamp=2023-01-31T07:42:01.243Z, origin=Only For Testing, session_id=e41c47c3-7c61-4e0d-81ff-faa63557af89, session_timestamp=2023-01-31T07:42:01.243Z, thread-id=858, tx_id=05F53904B95FD46926599F5600C367C941BBC01A8D0CFA2E19655320620E9FB5}
[INFO ] 2023-01-31T07:42:01,260Z [Mock network] corda.flow. - Recording transaction locally. {actor_id=Only For Testing, actor_owning_identity=O=Mock Company 3, L=London, C=GB, actor_store_id=TEST, fiber-id=10000007, flow-id=0dd28c02-11a5-47eb-a2ae-d6fcb2e201d6, invocation_id=e41c47c3-7c61-4e0d-81ff-faa63557af89, invocation_timestamp=2023-01-31T07:42:01.243Z, origin=Only For Testing, session_id=e41c47c3-7c61-4e0d-81ff-faa63557af89, session_timestamp=2023-01-31T07:42:01.243Z, thread-id=858, tx_id=05F53904B95FD46926599F5600C367C941BBC01A8D0CFA2E19655320620E9FB5}
[INFO ] 2023-01-31T07:42:01,262Z [Mock network] corda.flow. - Recorded transaction locally successfully. {actor_id=Only For Testing, actor_owning_identity=O=Mock Company 3, L=London, C=GB, actor_store_id=TEST, fiber-id=10000007, flow-id=0dd28c02-11a5-47eb-a2ae-d6fcb2e201d6, invocation_id=e41c47c3-7c61-4e0d-81ff-faa63557af89, invocation_timestamp=2023-01-31T07:42:01.243Z, origin=Only For Testing, session_id=e41c47c3-7c61-4e0d-81ff-faa63557af89, session_timestamp=2023-01-31T07:42:01.243Z, thread-id=858, tx_id=05F53904B95FD46926599F5600C367C941BBC01A8D0CFA2E19655320620E9FB5}
[INFO ] 2023-01-31T07:42:01,262Z [Mock network] corda.flow. - All parties received the transaction successfully. {actor_id=Only For Testing, actor_owning_identity=O=Mock Company 3, L=London, C=GB, actor_store_id=TEST, fiber-id=10000007, flow-id=0dd28c02-11a5-47eb-a2ae-d6fcb2e201d6, invocation_id=e41c47c3-7c61-4e0d-81ff-faa63557af89, invocation_timestamp=2023-01-31T07:42:01.243Z, origin=Only For Testing, session_id=e41c47c3-7c61-4e0d-81ff-faa63557af89, session_timestamp=2023-01-31T07:42:01.243Z, thread-id=858, tx_id=05F53904B95FD46926599F5600C367C941BBC01A8D0CFA2E19655320620E9FB5}
[INFO ] 2023-01-31T07:42:01,286Z [Mock network] corda.flow. - Received transaction acknowledgement request from party O=Mock Company 3, L=London, C=GB. {fiber-id=10000008, flow-id=cc7d5dbc-13dd-4644-80be-f0232a61187e, invocation_id=1ddd6c0c-c5f0-4fa4-a987-2867cd31b501, invocation_timestamp=2023-01-31T07:42:01.275Z, origin=O=Mock Company 3, L=London, C=GB, session_id=1ddd6c0c-c5f0-4fa4-a987-2867cd31b501, session_timestamp=2023-01-31T07:42:01.275Z, thread-id=858, tx_id=05F53904B95FD46926599F5600C367C941BBC01A8D0CFA2E19655320620E9FB5}
[INFO ] 2023-01-31T07:42:01,293Z [Mock network] corda.flow. - Transaction dependencies resolution completed. {fiber-id=10000008, flow-id=cc7d5dbc-13dd-4644-80be-f0232a61187e, invocation_id=1ddd6c0c-c5f0-4fa4-a987-2867cd31b501, invocation_timestamp=2023-01-31T07:42:01.275Z, origin=O=Mock Company 3, L=London, C=GB, session_id=1ddd6c0c-c5f0-4fa4-a987-2867cd31b501, session_timestamp=2023-01-31T07:42:01.275Z, thread-id=858, tx_id=05F53904B95FD46926599F5600C367C941BBC01A8D0CFA2E19655320620E9FB5}
[INFO ] 2023-01-31T07:42:01,297Z [Mock network] corda.flow. - Successfully received fully signed tx. Sending it to the vault for processing. {fiber-id=10000008, flow-id=cc7d5dbc-13dd-4644-80be-f0232a61187e, invocation_id=1ddd6c0c-c5f0-4fa4-a987-2867cd31b501, invocation_timestamp=2023-01-31T07:42:01.275Z, origin=O=Mock Company 3, L=London, C=GB, session_id=1ddd6c0c-c5f0-4fa4-a987-2867cd31b501, session_timestamp=2023-01-31T07:42:01.275Z, thread-id=858, tx_id=05F53904B95FD46926599F5600C367C941BBC01A8D0CFA2E19655320620E9FB5}
[INFO ] 2023-01-31T07:42:01,301Z [Mock network] corda.flow. - Successfully recorded received transaction locally. {fiber-id=10000008, flow-id=cc7d5dbc-13dd-4644-80be-f0232a61187e, invocation_id=1ddd6c0c-c5f0-4fa4-a987-2867cd31b501, invocation_timestamp=2023-01-31T07:42:01.275Z, origin=O=Mock Company 3, L=London, C=GB, session_id=1ddd6c0c-c5f0-4fa4-a987-2867cd31b501, session_timestamp=2023-01-31T07:42:01.275Z, thread-id=858, tx_id=05F53904B95FD46926599F5600C367C941BBC01A8D0CFA2E19655320620E9FB5}
[INFO ] 2023-01-31T07:42:01,332Z [Mock network] corda.flow. - Received transaction acknowledgement request from party O=Mock Company 3, L=London, C=GB. {fiber-id=10000009, flow-id=727bcddf-072b-4e61-a12c-61c40844612c, invocation_id=0cd82f49-79a0-4d2b-8aeb-28f45d8e4b09, invocation_timestamp=2023-01-31T07:42:01.323Z, origin=O=Mock Company 3, L=London, C=GB, session_id=0cd82f49-79a0-4d2b-8aeb-28f45d8e4b09, session_timestamp=2023-01-31T07:42:01.323Z, thread-id=858, tx_id=05F53904B95FD46926599F5600C367C941BBC01A8D0CFA2E19655320620E9FB5}
[INFO ] 2023-01-31T07:42:01,337Z [Mock network] corda.flow. - Transaction dependencies resolution completed. {fiber-id=10000009, flow-id=727bcddf-072b-4e61-a12c-61c40844612c, invocation_id=0cd82f49-79a0-4d2b-8aeb-28f45d8e4b09, invocation_timestamp=2023-01-31T07:42:01.323Z, origin=O=Mock Company 3, L=London, C=GB, session_id=0cd82f49-79a0-4d2b-8aeb-28f45d8e4b09, session_timestamp=2023-01-31T07:42:01.323Z, thread-id=858, tx_id=05F53904B95FD46926599F5600C367C941BBC01A8D0CFA2E19655320620E9FB5}
[INFO ] 2023-01-31T07:42:01,340Z [Mock network] corda.flow. - Successfully received fully signed tx. Sending it to the vault for processing. {fiber-id=10000009, flow-id=727bcddf-072b-4e61-a12c-61c40844612c, invocation_id=0cd82f49-79a0-4d2b-8aeb-28f45d8e4b09, invocation_timestamp=2023-01-31T07:42:01.323Z, origin=O=Mock Company 3, L=London, C=GB, session_id=0cd82f49-79a0-4d2b-8aeb-28f45d8e4b09, session_timestamp=2023-01-31T07:42:01.323Z, thread-id=858, tx_id=05F53904B95FD46926599F5600C367C941BBC01A8D0CFA2E19655320620E9FB5}
[INFO ] 2023-01-31T07:42:01,344Z [Mock network] corda.flow. - Successfully recorded received transaction locally. {fiber-id=10000009, flow-id=727bcddf-072b-4e61-a12c-61c40844612c, invocation_id=0cd82f49-79a0-4d2b-8aeb-28f45d8e4b09, invocation_timestamp=2023-01-31T07:42:01.323Z, origin=O=Mock Company 3, L=London, C=GB, session_id=0cd82f49-79a0-4d2b-8aeb-28f45d8e4b09, session_timestamp=2023-01-31T07:42:01.323Z, thread-id=858, tx_id=05F53904B95FD46926599F5600C367C941BBC01A8D0CFA2E19655320620E9FB5}
[INFO ] 2023-01-31T07:42:01,387Z [Mock network] identity.PersistentIdentityService. - Linking: 37EC509F8C6B4FBECF8A05AC76992D2AD3AB5D818A6F1F422C72DB8DDD90A8E9 to O=Mock Company 1, L=London, C=GB {actor_id=Only For Testing, actor_owning_identity=O=Mock Company 1, L=London, C=GB, actor_store_id=TEST, fiber-id=10000011, flow-id=042cfa50-1a08-4320-92db-1ab20b08c6a5, invocation_id=6a5b38ff-f4b4-4926-ae05-724243545adb, invocation_timestamp=2023-01-31T07:42:01.375Z, origin=Only For Testing, session_id=6a5b38ff-f4b4-4926-ae05-724243545adb, session_timestamp=2023-01-31T07:42:01.375Z, thread-id=858}
[INFO ] 2023-01-31T07:42:01,494Z [Mock network] identity.PersistentIdentityService. - Linking: DB1D03905FB017CE3D9F6CC39EED6AB74D5CB2EEA05D505F0FC3F5CC0A126AFE to O=Mock Company 2, L=London, C=GB {fiber-id=10000012, flow-id=43ccd4c8-8c78-4e8e-a258-b84ab15c860f, invocation_id=7f787e63-f26f-49fe-ad83-6f8cb3861cd6, invocation_timestamp=2023-01-31T07:42:01.402Z, origin=O=Mock Company 1, L=London, C=GB, session_id=7f787e63-f26f-49fe-ad83-6f8cb3861cd6, session_timestamp=2023-01-31T07:42:01.402Z, thread-id=858}
[INFO ] 2023-01-31T07:42:01,518Z [Mock network] identity.PersistentIdentityService. - Linking: DB1D03905FB017CE3D9F6CC39EED6AB74D5CB2EEA05D505F0FC3F5CC0A126AFE to O=Mock Company 2, L=London, C=GB {actor_id=Only For Testing, actor_owning_identity=O=Mock Company 1, L=London, C=GB, actor_store_id=TEST, fiber-id=10000011, flow-id=042cfa50-1a08-4320-92db-1ab20b08c6a5, invocation_id=6a5b38ff-f4b4-4926-ae05-724243545adb, invocation_timestamp=2023-01-31T07:42:01.375Z, origin=Only For Testing, session_id=6a5b38ff-f4b4-4926-ae05-724243545adb, session_timestamp=2023-01-31T07:42:01.375Z, thread-id=858}
[INFO ] 2023-01-31T07:42:01,625Z [Mock network] corda.flow. - Received transaction acknowledgement request from party O=Mock Company 1, L=London, C=GB. {fiber-id=10000013, flow-id=a2af6609-c0fa-47ea-be3c-bdbefab4d1d6, invocation_id=abba75da-9204-4fd6-866c-4825bd856899, invocation_timestamp=2023-01-31T07:42:01.607Z, origin=O=Mock Company 1, L=London, C=GB, session_id=abba75da-9204-4fd6-866c-4825bd856899, session_timestamp=2023-01-31T07:42:01.607Z, thread-id=858, tx_id=8021863975E679D5692DC3821DECF5D2B17E2D49C065BCB6112D2A8B3D47062E}
[INFO ] 2023-01-31T07:42:01,632Z [Mock network] corda.flow. - Transaction dependencies resolution completed. {fiber-id=10000013, flow-id=a2af6609-c0fa-47ea-be3c-bdbefab4d1d6, invocation_id=abba75da-9204-4fd6-866c-4825bd856899, invocation_timestamp=2023-01-31T07:42:01.607Z, origin=O=Mock Company 1, L=London, C=GB, session_id=abba75da-9204-4fd6-866c-4825bd856899, session_timestamp=2023-01-31T07:42:01.607Z, thread-id=858, tx_id=8021863975E679D5692DC3821DECF5D2B17E2D49C065BCB6112D2A8B3D47062E}
[INFO ] 2023-01-31T07:42:01,788Z [Mock network] corda.flow. - No need to notarise this transaction. {actor_id=Only For Testing, actor_owning_identity=O=Mock Company 1, L=London, C=GB, actor_store_id=TEST, fiber-id=10000011, flow-id=042cfa50-1a08-4320-92db-1ab20b08c6a5, invocation_id=6a5b38ff-f4b4-4926-ae05-724243545adb, invocation_timestamp=2023-01-31T07:42:01.375Z, origin=Only For Testing, session_id=6a5b38ff-f4b4-4926-ae05-724243545adb, session_timestamp=2023-01-31T07:42:01.375Z, thread-id=858, tx_id=8021863975E679D5692DC3821DECF5D2B17E2D49C065BCB6112D2A8B3D47062E}
[INFO ] 2023-01-31T07:42:01,788Z [Mock network] corda.flow. - Recording transaction locally. {actor_id=Only For Testing, actor_owning_identity=O=Mock Company 1, L=London, C=GB, actor_store_id=TEST, fiber-id=10000011, flow-id=042cfa50-1a08-4320-92db-1ab20b08c6a5, invocation_id=6a5b38ff-f4b4-4926-ae05-724243545adb, invocation_timestamp=2023-01-31T07:42:01.375Z, origin=Only For Testing, session_id=6a5b38ff-f4b4-4926-ae05-724243545adb, session_timestamp=2023-01-31T07:42:01.375Z, thread-id=858, tx_id=8021863975E679D5692DC3821DECF5D2B17E2D49C065BCB6112D2A8B3D47062E}
[INFO ] 2023-01-31T07:42:01,792Z [Mock network] corda.flow. - Recorded transaction locally successfully. {actor_id=Only For Testing, actor_owning_identity=O=Mock Company 1, L=London, C=GB, actor_store_id=TEST, fiber-id=10000011, flow-id=042cfa50-1a08-4320-92db-1ab20b08c6a5, invocation_id=6a5b38ff-f4b4-4926-ae05-724243545adb, invocation_timestamp=2023-01-31T07:42:01.375Z, origin=Only For Testing, session_id=6a5b38ff-f4b4-4926-ae05-724243545adb, session_timestamp=2023-01-31T07:42:01.375Z, thread-id=858, tx_id=8021863975E679D5692DC3821DECF5D2B17E2D49C065BCB6112D2A8B3D47062E}
[INFO ] 2023-01-31T07:42:01,811Z [Mock network] corda.flow. - Received transaction acknowledgement request from party O=Mock Company 1, L=London, C=GB. {fiber-id=10000013, flow-id=a2af6609-c0fa-47ea-be3c-bdbefab4d1d6, invocation_id=abba75da-9204-4fd6-866c-4825bd856899, invocation_timestamp=2023-01-31T07:42:01.607Z, origin=O=Mock Company 1, L=London, C=GB, session_id=abba75da-9204-4fd6-866c-4825bd856899, session_timestamp=2023-01-31T07:42:01.607Z, thread-id=858, tx_id=8021863975E679D5692DC3821DECF5D2B17E2D49C065BCB6112D2A8B3D47062E}
[INFO ] 2023-01-31T07:42:01,817Z [Mock network] corda.flow. - Transaction dependencies resolution completed. {fiber-id=10000013, flow-id=a2af6609-c0fa-47ea-be3c-bdbefab4d1d6, invocation_id=abba75da-9204-4fd6-866c-4825bd856899, invocation_timestamp=2023-01-31T07:42:01.607Z, origin=O=Mock Company 1, L=London, C=GB, session_id=abba75da-9204-4fd6-866c-4825bd856899, session_timestamp=2023-01-31T07:42:01.607Z, thread-id=858, tx_id=8021863975E679D5692DC3821DECF5D2B17E2D49C065BCB6112D2A8B3D47062E}
[INFO ] 2023-01-31T07:42:01,820Z [Mock network] corda.flow. - Successfully received fully signed tx. Sending it to the vault for processing. {fiber-id=10000013, flow-id=a2af6609-c0fa-47ea-be3c-bdbefab4d1d6, invocation_id=abba75da-9204-4fd6-866c-4825bd856899, invocation_timestamp=2023-01-31T07:42:01.607Z, origin=O=Mock Company 1, L=London, C=GB, session_id=abba75da-9204-4fd6-866c-4825bd856899, session_timestamp=2023-01-31T07:42:01.607Z, thread-id=858, tx_id=8021863975E679D5692DC3821DECF5D2B17E2D49C065BCB6112D2A8B3D47062E}
[INFO ] 2023-01-31T07:42:01,825Z [Mock network] corda.flow. - Successfully recorded received transaction locally. {fiber-id=10000013, flow-id=a2af6609-c0fa-47ea-be3c-bdbefab4d1d6, invocation_id=abba75da-9204-4fd6-866c-4825bd856899, invocation_timestamp=2023-01-31T07:42:01.607Z, origin=O=Mock Company 1, L=London, C=GB, session_id=abba75da-9204-4fd6-866c-4825bd856899, session_timestamp=2023-01-31T07:42:01.607Z, thread-id=858, tx_id=8021863975E679D5692DC3821DECF5D2B17E2D49C065BCB6112D2A8B3D47062E}
[WARN ] 2023-01-31T07:42:01,827Z [Mock network] persistence.AbstractPartyToX500NameAsStringConverter. - Identity service unable to resolve AbstractParty: Anonymous(DL4mJRSwHB3e98iAnrAZaZm8sF3unvgqZYTLZkE9NER4wJ) {actor_id=Only For Testing, actor_owning_identity=O=Mock Company 1, L=London, C=GB, actor_store_id=TEST, fiber-id=10000013, flow-id=a2af6609-c0fa-47ea-be3c-bdbefab4d1d6, invocation_id=abba75da-9204-4fd6-866c-4825bd856899, invocation_timestamp=2023-01-31T07:42:01.607Z, origin=O=Mock Company 1, L=London, C=GB, session_id=abba75da-9204-4fd6-866c-4825bd856899, session_timestamp=2023-01-31T07:42:01.607Z, thread-id=858}
[INFO ] 2023-01-31T07:42:01,831Z [Mock network] corda.flow. - Party O=Mock Company 2, L=London, C=GB received the transaction. {actor_id=Only For Testing, actor_owning_identity=O=Mock Company 1, L=London, C=GB, actor_store_id=TEST, fiber-id=10000011, flow-id=042cfa50-1a08-4320-92db-1ab20b08c6a5, invocation_id=6a5b38ff-f4b4-4926-ae05-724243545adb, invocation_timestamp=2023-01-31T07:42:01.375Z, origin=Only For Testing, session_id=6a5b38ff-f4b4-4926-ae05-724243545adb, session_timestamp=2023-01-31T07:42:01.375Z, thread-id=858, tx_id=8021863975E679D5692DC3821DECF5D2B17E2D49C065BCB6112D2A8B3D47062E}
[INFO ] 2023-01-31T07:42:01,831Z [Mock network] corda.flow. - All parties received the transaction successfully. {actor_id=Only For Testing, actor_owning_identity=O=Mock Company 1, L=London, C=GB, actor_store_id=TEST, fiber-id=10000011, flow-id=042cfa50-1a08-4320-92db-1ab20b08c6a5, invocation_id=6a5b38ff-f4b4-4926-ae05-724243545adb, invocation_timestamp=2023-01-31T07:42:01.375Z, origin=Only For Testing, session_id=6a5b38ff-f4b4-4926-ae05-724243545adb, session_timestamp=2023-01-31T07:42:01.375Z, thread-id=858, tx_id=8021863975E679D5692DC3821DECF5D2B17E2D49C065BCB6112D2A8B3D47062E}
[INFO ] 2023-01-31T07:42:01,876Z [Mock network] corda.flow. - Received transaction acknowledgement request from party O=Mock Company 1, L=London, C=GB. {fiber-id=10000014, flow-id=b0e960a9-ab37-4da0-b419-10e5c708d25b, invocation_id=ca21acb2-a68a-4db7-9320-cc23ac46a015, invocation_timestamp=2023-01-31T07:42:01.859Z, origin=O=Mock Company 1, L=London, C=GB, session_id=ca21acb2-a68a-4db7-9320-cc23ac46a015, session_timestamp=2023-01-31T07:42:01.859Z, thread-id=858, tx_id=7E9E49C0500CEAAB30C40F4E1DE54A3E34806FF9C9D67568AF959E828C90AF71}
[INFO ] 2023-01-31T07:42:01,882Z [Mock network] corda.flow. - Transaction dependencies resolution completed. {fiber-id=10000014, flow-id=b0e960a9-ab37-4da0-b419-10e5c708d25b, invocation_id=ca21acb2-a68a-4db7-9320-cc23ac46a015, invocation_timestamp=2023-01-31T07:42:01.859Z, origin=O=Mock Company 1, L=London, C=GB, session_id=ca21acb2-a68a-4db7-9320-cc23ac46a015, session_timestamp=2023-01-31T07:42:01.859Z, thread-id=858, tx_id=7E9E49C0500CEAAB30C40F4E1DE54A3E34806FF9C9D67568AF959E828C90AF71}
[INFO ] 2023-01-31T07:42:01,884Z [Mock network] corda.flow. - Successfully received fully signed tx. Sending it to the vault for processing. {fiber-id=10000014, flow-id=b0e960a9-ab37-4da0-b419-10e5c708d25b, invocation_id=ca21acb2-a68a-4db7-9320-cc23ac46a015, invocation_timestamp=2023-01-31T07:42:01.859Z, origin=O=Mock Company 1, L=London, C=GB, session_id=ca21acb2-a68a-4db7-9320-cc23ac46a015, session_timestamp=2023-01-31T07:42:01.859Z, thread-id=858, tx_id=7E9E49C0500CEAAB30C40F4E1DE54A3E34806FF9C9D67568AF959E828C90AF71}
[INFO ] 2023-01-31T07:42:01,888Z [Mock network] corda.flow. - Successfully recorded received transaction locally. {fiber-id=10000014, flow-id=b0e960a9-ab37-4da0-b419-10e5c708d25b, invocation_id=ca21acb2-a68a-4db7-9320-cc23ac46a015, invocation_timestamp=2023-01-31T07:42:01.859Z, origin=O=Mock Company 1, L=London, C=GB, session_id=ca21acb2-a68a-4db7-9320-cc23ac46a015, session_timestamp=2023-01-31T07:42:01.859Z, thread-id=858, tx_id=7E9E49C0500CEAAB30C40F4E1DE54A3E34806FF9C9D67568AF959E828C90AF71}
[INFO ] 2023-01-31T07:42:01,908Z [Mock network] identity.PersistentIdentityService. - An existing entry for DLFkKwruRcdSRMULMBYTQ7J3yjdd6ED15duESoXf9jzzNq already exists. {fiber-id=10000014, flow-id=b0e960a9-ab37-4da0-b419-10e5c708d25b, invocation_id=ca21acb2-a68a-4db7-9320-cc23ac46a015, invocation_timestamp=2023-01-31T07:42:01.859Z, origin=O=Mock Company 1, L=London, C=GB, session_id=ca21acb2-a68a-4db7-9320-cc23ac46a015, session_timestamp=2023-01-31T07:42:01.859Z, thread-id=858, tx_id=7E9E49C0500CEAAB30C40F4E1DE54A3E34806FF9C9D67568AF959E828C90AF71}
[INFO ] 2023-01-31T07:42:01,916Z [Mock network] corda.flow. - Received transaction acknowledgement request from party O=Mock Company 1, L=London, C=GB. {fiber-id=10000014, flow-id=b0e960a9-ab37-4da0-b419-10e5c708d25b, invocation_id=ca21acb2-a68a-4db7-9320-cc23ac46a015, invocation_timestamp=2023-01-31T07:42:01.859Z, origin=O=Mock Company 1, L=London, C=GB, session_id=ca21acb2-a68a-4db7-9320-cc23ac46a015, session_timestamp=2023-01-31T07:42:01.859Z, thread-id=858, tx_id=53B460F19764F7194885E70574595D3BB549CB81F29E60FF52CE80041FCF9CA2}
[INFO ] 2023-01-31T07:42:01,921Z [Mock network] corda.flow. - Transaction dependencies resolution completed. {fiber-id=10000014, flow-id=b0e960a9-ab37-4da0-b419-10e5c708d25b, invocation_id=ca21acb2-a68a-4db7-9320-cc23ac46a015, invocation_timestamp=2023-01-31T07:42:01.859Z, origin=O=Mock Company 1, L=London, C=GB, session_id=ca21acb2-a68a-4db7-9320-cc23ac46a015, session_timestamp=2023-01-31T07:42:01.859Z, thread-id=858, tx_id=53B460F19764F7194885E70574595D3BB549CB81F29E60FF52CE80041FCF9CA2}
[INFO ] 2023-01-31T07:42:01,924Z [Mock network] corda.flow. - Successfully received fully signed tx. Sending it to the vault for processing. {fiber-id=10000014, flow-id=b0e960a9-ab37-4da0-b419-10e5c708d25b, invocation_id=ca21acb2-a68a-4db7-9320-cc23ac46a015, invocation_timestamp=2023-01-31T07:42:01.859Z, origin=O=Mock Company 1, L=London, C=GB, session_id=ca21acb2-a68a-4db7-9320-cc23ac46a015, session_timestamp=2023-01-31T07:42:01.859Z, thread-id=858, tx_id=53B460F19764F7194885E70574595D3BB549CB81F29E60FF52CE80041FCF9CA2}
[INFO ] 2023-01-31T07:42:01,931Z [Mock network] corda.flow. - Successfully recorded received transaction locally. {fiber-id=10000014, flow-id=b0e960a9-ab37-4da0-b419-10e5c708d25b, invocation_id=ca21acb2-a68a-4db7-9320-cc23ac46a015, invocation_timestamp=2023-01-31T07:42:01.859Z, origin=O=Mock Company 1, L=London, C=GB, session_id=ca21acb2-a68a-4db7-9320-cc23ac46a015, session_timestamp=2023-01-31T07:42:01.859Z, thread-id=858, tx_id=53B460F19764F7194885E70574595D3BB549CB81F29E60FF52CE80041FCF9CA2}
[INFO ] 2023-01-31T07:42:01,955Z [Mock network] identity.PersistentIdentityService. - Linking: 37EC509F8C6B4FBECF8A05AC76992D2AD3AB5D818A6F1F422C72DB8DDD90A8E9 to O=Mock Company 1, L=London, C=GB {fiber-id=10000014, flow-id=b0e960a9-ab37-4da0-b419-10e5c708d25b, invocation_id=ca21acb2-a68a-4db7-9320-cc23ac46a015, invocation_timestamp=2023-01-31T07:42:01.859Z, origin=O=Mock Company 1, L=London, C=GB, session_id=ca21acb2-a68a-4db7-9320-cc23ac46a015, session_timestamp=2023-01-31T07:42:01.859Z, thread-id=858, tx_id=53B460F19764F7194885E70574595D3BB549CB81F29E60FF52CE80041FCF9CA2}
[INFO ] 2023-01-31T07:42:01,964Z [Mock network] corda.flow. - Received transaction acknowledgement request from party O=Mock Company 1, L=London, C=GB. {fiber-id=10000014, flow-id=b0e960a9-ab37-4da0-b419-10e5c708d25b, invocation_id=ca21acb2-a68a-4db7-9320-cc23ac46a015, invocation_timestamp=2023-01-31T07:42:01.859Z, origin=O=Mock Company 1, L=London, C=GB, session_id=ca21acb2-a68a-4db7-9320-cc23ac46a015, session_timestamp=2023-01-31T07:42:01.859Z, thread-id=858, tx_id=8021863975E679D5692DC3821DECF5D2B17E2D49C065BCB6112D2A8B3D47062E}
[INFO ] 2023-01-31T07:42:01,969Z [Mock network] corda.flow. - Transaction dependencies resolution completed. {fiber-id=10000014, flow-id=b0e960a9-ab37-4da0-b419-10e5c708d25b, invocation_id=ca21acb2-a68a-4db7-9320-cc23ac46a015, invocation_timestamp=2023-01-31T07:42:01.859Z, origin=O=Mock Company 1, L=London, C=GB, session_id=ca21acb2-a68a-4db7-9320-cc23ac46a015, session_timestamp=2023-01-31T07:42:01.859Z, thread-id=858, tx_id=8021863975E679D5692DC3821DECF5D2B17E2D49C065BCB6112D2A8B3D47062E}
[INFO ] 2023-01-31T07:42:01,973Z [Mock network] corda.flow. - Successfully received fully signed tx. Sending it to the vault for processing. {fiber-id=10000014, flow-id=b0e960a9-ab37-4da0-b419-10e5c708d25b, invocation_id=ca21acb2-a68a-4db7-9320-cc23ac46a015, invocation_timestamp=2023-01-31T07:42:01.859Z, origin=O=Mock Company 1, L=London, C=GB, session_id=ca21acb2-a68a-4db7-9320-cc23ac46a015, session_timestamp=2023-01-31T07:42:01.859Z, thread-id=858, tx_id=8021863975E679D5692DC3821DECF5D2B17E2D49C065BCB6112D2A8B3D47062E}
[INFO ] 2023-01-31T07:42:01,977Z [Mock network] corda.flow. - Successfully recorded received transaction locally. {fiber-id=10000014, flow-id=b0e960a9-ab37-4da0-b419-10e5c708d25b, invocation_id=ca21acb2-a68a-4db7-9320-cc23ac46a015, invocation_timestamp=2023-01-31T07:42:01.859Z, origin=O=Mock Company 1, L=London, C=GB, session_id=ca21acb2-a68a-4db7-9320-cc23ac46a015, session_timestamp=2023-01-31T07:42:01.859Z, thread-id=858, tx_id=8021863975E679D5692DC3821DECF5D2B17E2D49C065BCB6112D2A8B3D47062E}
[INFO ] 2023-01-31T07:42:02,066Z [Mock network] identity.PersistentIdentityService. - Linking: 4EFA57D520C2B8FE479B9944513EF2AC23AA37F83C14562D4D81E2B8C5A32CCC to O=Mock Company 1, L=London, C=GB {fiber-id=10000017, flow-id=53e7efb8-3630-4dbf-95cf-16bf6579d276, invocation_id=f880990d-449b-48d7-9e8b-69c61cb5919b, invocation_timestamp=2023-01-31T07:42:02.039Z, origin=O=Mock Company 2, L=London, C=GB, session_id=f880990d-449b-48d7-9e8b-69c61cb5919b, session_timestamp=2023-01-31T07:42:02.039Z, thread-id=858}
[INFO ] 2023-01-31T07:42:02,077Z [Mock network] identity.PersistentIdentityService. - Linking: 4EFA57D520C2B8FE479B9944513EF2AC23AA37F83C14562D4D81E2B8C5A32CCC to O=Mock Company 1, L=London, C=GB {actor_id=Only For Testing, actor_owning_identity=O=Mock Company 2, L=London, C=GB, actor_store_id=TEST, fiber-id=10000016, flow-id=8532ded8-ef91-423f-9918-1f967478c006, invocation_id=579fb489-b9a8-4839-9f92-a87903bc5569, invocation_timestamp=2023-01-31T07:42:02.016Z, origin=Only For Testing, session_id=579fb489-b9a8-4839-9f92-a87903bc5569, session_timestamp=2023-01-31T07:42:02.016Z, thread-id=858}
[INFO ] 2023-01-31T07:42:02,083Z [Mock network] identity.PersistentIdentityService. - Linking: 4D6830F45968E167E134F0AB483001B7BA195B031962B8B0C10BFC0EAA08CA04 to O=Mock Company 2, L=London, C=GB {actor_id=Only For Testing, actor_owning_identity=O=Mock Company 2, L=London, C=GB, actor_store_id=TEST, fiber-id=10000016, flow-id=8532ded8-ef91-423f-9918-1f967478c006, invocation_id=579fb489-b9a8-4839-9f92-a87903bc5569, invocation_timestamp=2023-01-31T07:42:02.016Z, origin=Only For Testing, session_id=579fb489-b9a8-4839-9f92-a87903bc5569, session_timestamp=2023-01-31T07:42:02.016Z, thread-id=858}
[INFO ] 2023-01-31T07:42:02,147Z [Mock network] identity.PersistentIdentityService. - Linking: 7E1592D48CB4095FCB5A65CE03A4469216AAEC724E4FFA5E1460C28B4B3ACFC4 to O=Mock Company 3, L=London, C=GB {fiber-id=10000018, flow-id=35b0f5b1-0d49-4891-8af9-3d80bc8095ef, invocation_id=307e2a4f-d097-4187-90cf-a0fe4c5a070a, invocation_timestamp=2023-01-31T07:42:02.097Z, origin=O=Mock Company 2, L=London, C=GB, session_id=307e2a4f-d097-4187-90cf-a0fe4c5a070a, session_timestamp=2023-01-31T07:42:02.097Z, thread-id=858}
[INFO ] 2023-01-31T07:42:02,160Z [Mock network] identity.PersistentIdentityService. - Linking: 7E1592D48CB4095FCB5A65CE03A4469216AAEC724E4FFA5E1460C28B4B3ACFC4 to O=Mock Company 3, L=London, C=GB {actor_id=Only For Testing, actor_owning_identity=O=Mock Company 2, L=London, C=GB, actor_store_id=TEST, fiber-id=10000016, flow-id=8532ded8-ef91-423f-9918-1f967478c006, invocation_id=579fb489-b9a8-4839-9f92-a87903bc5569, invocation_timestamp=2023-01-31T07:42:02.016Z, origin=Only For Testing, session_id=579fb489-b9a8-4839-9f92-a87903bc5569, session_timestamp=2023-01-31T07:42:02.016Z, thread-id=858}
[INFO ] 2023-01-31T07:42:02,190Z [Mock network] corda.flow. - Received transaction acknowledgement request from party O=Mock Company 2, L=London, C=GB. {fiber-id=10000019, flow-id=3eeadfa8-1c38-42bb-b4b8-b8ed51367117, invocation_id=27120b1b-18c0-4a03-bb1a-2a89f1a6f7a8, invocation_timestamp=2023-01-31T07:42:02.174Z, origin=O=Mock Company 2, L=London, C=GB, session_id=27120b1b-18c0-4a03-bb1a-2a89f1a6f7a8, session_timestamp=2023-01-31T07:42:02.174Z, thread-id=858, tx_id=05F53904B95FD46926599F5600C367C941BBC01A8D0CFA2E19655320620E9FB5}
[INFO ] 2023-01-31T07:42:02,196Z [Mock network] corda.flow. - Transaction dependencies resolution completed. {fiber-id=10000019, flow-id=3eeadfa8-1c38-42bb-b4b8-b8ed51367117, invocation_id=27120b1b-18c0-4a03-bb1a-2a89f1a6f7a8, invocation_timestamp=2023-01-31T07:42:02.174Z, origin=O=Mock Company 2, L=London, C=GB, session_id=27120b1b-18c0-4a03-bb1a-2a89f1a6f7a8, session_timestamp=2023-01-31T07:42:02.174Z, thread-id=858, tx_id=05F53904B95FD46926599F5600C367C941BBC01A8D0CFA2E19655320620E9FB5}
[INFO ] 2023-01-31T07:42:02,260Z [Mock network] corda.flow. - Received transaction acknowledgement request from party O=Mock Company 2, L=London, C=GB. {fiber-id=10000020, flow-id=f76857df-f0d8-4d7c-911e-1f6fcc19dfd0, invocation_id=486fa403-bdf9-433a-b558-242306928689, invocation_timestamp=2023-01-31T07:42:02.251Z, origin=O=Mock Company 2, L=London, C=GB, session_id=486fa403-bdf9-433a-b558-242306928689, session_timestamp=2023-01-31T07:42:02.251Z, thread-id=858, tx_id=51A8DA64E0D376B35A2342EBC025747EA348D79B7C17B8FC55506AE67483EB34}
[INFO ] 2023-01-31T07:42:02,404Z [Mock network] corda.flow. - Transaction dependencies resolution completed. {fiber-id=10000020, flow-id=f76857df-f0d8-4d7c-911e-1f6fcc19dfd0, invocation_id=486fa403-bdf9-433a-b558-242306928689, invocation_timestamp=2023-01-31T07:42:02.251Z, origin=O=Mock Company 2, L=London, C=GB, session_id=486fa403-bdf9-433a-b558-242306928689, session_timestamp=2023-01-31T07:42:02.251Z, thread-id=858, tx_id=51A8DA64E0D376B35A2342EBC025747EA348D79B7C17B8FC55506AE67483EB34}
[INFO ] 2023-01-31T07:42:02,457Z [Mock network] corda.flow. - Received transaction acknowledgement request from party O=Mock Company 2, L=London, C=GB. {fiber-id=10000021, flow-id=a57ab844-7b75-40be-8a91-cb6430d5af18, invocation_id=8942fb5e-e037-4430-87ab-9997c864a01e, invocation_timestamp=2023-01-31T07:42:02.450Z, origin=O=Mock Company 2, L=London, C=GB, session_id=8942fb5e-e037-4430-87ab-9997c864a01e, session_timestamp=2023-01-31T07:42:02.450Z, thread-id=858, tx_id=51A8DA64E0D376B35A2342EBC025747EA348D79B7C17B8FC55506AE67483EB34}
[INFO ] 2023-01-31T07:42:02,464Z [Mock network] corda.flow. - Transaction dependencies resolution completed. {fiber-id=10000021, flow-id=a57ab844-7b75-40be-8a91-cb6430d5af18, invocation_id=8942fb5e-e037-4430-87ab-9997c864a01e, invocation_timestamp=2023-01-31T07:42:02.450Z, origin=O=Mock Company 2, L=London, C=GB, session_id=8942fb5e-e037-4430-87ab-9997c864a01e, session_timestamp=2023-01-31T07:42:02.450Z, thread-id=858, tx_id=51A8DA64E0D376B35A2342EBC025747EA348D79B7C17B8FC55506AE67483EB34}
[INFO ] 2023-01-31T07:42:02,740Z [Mock network] corda.flow. - Sending transaction to notary: O=Notary, L=London, C=GB. {actor_id=Only For Testing, actor_owning_identity=O=Mock Company 2, L=London, C=GB, actor_store_id=TEST, fiber-id=10000016, flow-id=8532ded8-ef91-423f-9918-1f967478c006, invocation_id=579fb489-b9a8-4839-9f92-a87903bc5569, invocation_timestamp=2023-01-31T07:42:02.016Z, origin=Only For Testing, session_id=579fb489-b9a8-4839-9f92-a87903bc5569, session_timestamp=2023-01-31T07:42:02.016Z, thread-id=858, tx_id=51A8DA64E0D376B35A2342EBC025747EA348D79B7C17B8FC55506AE67483EB34}
[INFO ] 2023-01-31T07:42:02,780Z [Mock network] corda.flow. - Received a notarisation request for Tx [51A8DA64E0D376B35A2342EBC025747EA348D79B7C17B8FC55506AE67483EB34] from [O=Mock Company 2, L=London, C=GB] {fiber-id=10000022, flow-id=4b5d754d-9514-44ba-afe1-cf8fd82fc4e9, invocation_id=378fe493-97e1-4fe2-a5fa-8cd4e0be4d70, invocation_timestamp=2023-01-31T07:42:02.764Z, origin=O=Mock Company 2, L=London, C=GB, session_id=378fe493-97e1-4fe2-a5fa-8cd4e0be4d70, session_timestamp=2023-01-31T07:42:02.764Z, thread-id=858}
[INFO ] 2023-01-31T07:42:02,889Z [Notary request queue processor] jpa.JPAUniquenessProvider. - Processing notarization requests with 1 input states and 0 references {}
[INFO ] 2023-01-31T07:42:02,921Z [Mock network] corda.flow. - Transaction [51A8DA64E0D376B35A2342EBC025747EA348D79B7C17B8FC55506AE67483EB34] successfully notarised, sending signature back to [O=Mock Company 2, L=London, C=GB] {fiber-id=10000022, flow-id=4b5d754d-9514-44ba-afe1-cf8fd82fc4e9, invocation_id=378fe493-97e1-4fe2-a5fa-8cd4e0be4d70, invocation_timestamp=2023-01-31T07:42:02.764Z, origin=O=Mock Company 2, L=London, C=GB, session_id=378fe493-97e1-4fe2-a5fa-8cd4e0be4d70, session_timestamp=2023-01-31T07:42:02.764Z, thread-id=858}
[INFO ] 2023-01-31T07:42:02,943Z [Mock network] corda.flow. - Notary responded (O=Notary, L=London, C=GB). {actor_id=Only For Testing, actor_owning_identity=O=Mock Company 2, L=London, C=GB, actor_store_id=TEST, fiber-id=10000016, flow-id=8532ded8-ef91-423f-9918-1f967478c006, invocation_id=579fb489-b9a8-4839-9f92-a87903bc5569, invocation_timestamp=2023-01-31T07:42:02.016Z, origin=Only For Testing, session_id=579fb489-b9a8-4839-9f92-a87903bc5569, session_timestamp=2023-01-31T07:42:02.016Z, thread-id=858, tx_id=51A8DA64E0D376B35A2342EBC025747EA348D79B7C17B8FC55506AE67483EB34}
[INFO ] 2023-01-31T07:42:02,945Z [Mock network] corda.flow. - Recording transaction locally. {actor_id=Only For Testing, actor_owning_identity=O=Mock Company 2, L=London, C=GB, actor_store_id=TEST, fiber-id=10000016, flow-id=8532ded8-ef91-423f-9918-1f967478c006, invocation_id=579fb489-b9a8-4839-9f92-a87903bc5569, invocation_timestamp=2023-01-31T07:42:02.016Z, origin=Only For Testing, session_id=579fb489-b9a8-4839-9f92-a87903bc5569, session_timestamp=2023-01-31T07:42:02.016Z, thread-id=858, tx_id=51A8DA64E0D376B35A2342EBC025747EA348D79B7C17B8FC55506AE67483EB34}
[INFO ] 2023-01-31T07:42:02,954Z [Mock network] corda.flow. - Recorded transaction locally successfully. {actor_id=Only For Testing, actor_owning_identity=O=Mock Company 2, L=London, C=GB, actor_store_id=TEST, fiber-id=10000016, flow-id=8532ded8-ef91-423f-9918-1f967478c006, invocation_id=579fb489-b9a8-4839-9f92-a87903bc5569, invocation_timestamp=2023-01-31T07:42:02.016Z, origin=Only For Testing, session_id=579fb489-b9a8-4839-9f92-a87903bc5569, session_timestamp=2023-01-31T07:42:02.016Z, thread-id=858, tx_id=51A8DA64E0D376B35A2342EBC025747EA348D79B7C17B8FC55506AE67483EB34}
[INFO ] 2023-01-31T07:42:02,964Z [Mock network] corda.flow. - Received transaction acknowledgement request from party O=Mock Company 2, L=London, C=GB. {fiber-id=10000020, flow-id=f76857df-f0d8-4d7c-911e-1f6fcc19dfd0, invocation_id=486fa403-bdf9-433a-b558-242306928689, invocation_timestamp=2023-01-31T07:42:02.251Z, origin=O=Mock Company 2, L=London, C=GB, session_id=486fa403-bdf9-433a-b558-242306928689, session_timestamp=2023-01-31T07:42:02.251Z, thread-id=858, tx_id=51A8DA64E0D376B35A2342EBC025747EA348D79B7C17B8FC55506AE67483EB34}
[INFO ] 2023-01-31T07:42:02,970Z [Mock network] corda.flow. - Transaction dependencies resolution completed. {fiber-id=10000020, flow-id=f76857df-f0d8-4d7c-911e-1f6fcc19dfd0, invocation_id=486fa403-bdf9-433a-b558-242306928689, invocation_timestamp=2023-01-31T07:42:02.251Z, origin=O=Mock Company 2, L=London, C=GB, session_id=486fa403-bdf9-433a-b558-242306928689, session_timestamp=2023-01-31T07:42:02.251Z, thread-id=858, tx_id=51A8DA64E0D376B35A2342EBC025747EA348D79B7C17B8FC55506AE67483EB34}
[INFO ] 2023-01-31T07:42:02,977Z [Mock network] corda.flow. - Successfully received fully signed tx. Sending it to the vault for processing. {fiber-id=10000020, flow-id=f76857df-f0d8-4d7c-911e-1f6fcc19dfd0, invocation_id=486fa403-bdf9-433a-b558-242306928689, invocation_timestamp=2023-01-31T07:42:02.251Z, origin=O=Mock Company 2, L=London, C=GB, session_id=486fa403-bdf9-433a-b558-242306928689, session_timestamp=2023-01-31T07:42:02.251Z, thread-id=858, tx_id=51A8DA64E0D376B35A2342EBC025747EA348D79B7C17B8FC55506AE67483EB34}
[INFO ] 2023-01-31T07:42:02,982Z [Mock network] corda.flow. - Successfully recorded received transaction locally. {fiber-id=10000020, flow-id=f76857df-f0d8-4d7c-911e-1f6fcc19dfd0, invocation_id=486fa403-bdf9-433a-b558-242306928689, invocation_timestamp=2023-01-31T07:42:02.251Z, origin=O=Mock Company 2, L=London, C=GB, session_id=486fa403-bdf9-433a-b558-242306928689, session_timestamp=2023-01-31T07:42:02.251Z, thread-id=858, tx_id=51A8DA64E0D376B35A2342EBC025747EA348D79B7C17B8FC55506AE67483EB34}
[WARN ] 2023-01-31T07:42:02,984Z [Mock network] persistence.AbstractPartyToX500NameAsStringConverter. - Identity service unable to resolve AbstractParty: Anonymous(DL4mJRSwHB3e98iAnrAZaZm8sF3unvgqZYTLZkE9NER4wJ) {actor_id=Only For Testing, actor_owning_identity=O=Mock Company 2, L=London, C=GB, actor_store_id=TEST, fiber-id=10000020, flow-id=f76857df-f0d8-4d7c-911e-1f6fcc19dfd0, invocation_id=486fa403-bdf9-433a-b558-242306928689, invocation_timestamp=2023-01-31T07:42:02.251Z, origin=O=Mock Company 2, L=London, C=GB, session_id=486fa403-bdf9-433a-b558-242306928689, session_timestamp=2023-01-31T07:42:02.251Z, thread-id=858}
[INFO ] 2023-01-31T07:42:02,992Z [Mock network] corda.flow. - Party O=Mock Company 3, L=London, C=GB received the transaction. {actor_id=Only For Testing, actor_owning_identity=O=Mock Company 2, L=London, C=GB, actor_store_id=TEST, fiber-id=10000016, flow-id=8532ded8-ef91-423f-9918-1f967478c006, invocation_id=579fb489-b9a8-4839-9f92-a87903bc5569, invocation_timestamp=2023-01-31T07:42:02.016Z, origin=Only For Testing, session_id=579fb489-b9a8-4839-9f92-a87903bc5569, session_timestamp=2023-01-31T07:42:02.016Z, thread-id=858, tx_id=51A8DA64E0D376B35A2342EBC025747EA348D79B7C17B8FC55506AE67483EB34}
[INFO ] 2023-01-31T07:42:03,003Z [Mock network] corda.flow. - Received transaction acknowledgement request from party O=Mock Company 2, L=London, C=GB. {fiber-id=10000021, flow-id=a57ab844-7b75-40be-8a91-cb6430d5af18, invocation_id=8942fb5e-e037-4430-87ab-9997c864a01e, invocation_timestamp=2023-01-31T07:42:02.450Z, origin=O=Mock Company 2, L=London, C=GB, session_id=8942fb5e-e037-4430-87ab-9997c864a01e, session_timestamp=2023-01-31T07:42:02.450Z, thread-id=858, tx_id=51A8DA64E0D376B35A2342EBC025747EA348D79B7C17B8FC55506AE67483EB34}
[INFO ] 2023-01-31T07:42:03,009Z [Mock network] corda.flow. - Transaction dependencies resolution completed. {fiber-id=10000021, flow-id=a57ab844-7b75-40be-8a91-cb6430d5af18, invocation_id=8942fb5e-e037-4430-87ab-9997c864a01e, invocation_timestamp=2023-01-31T07:42:02.450Z, origin=O=Mock Company 2, L=London, C=GB, session_id=8942fb5e-e037-4430-87ab-9997c864a01e, session_timestamp=2023-01-31T07:42:02.450Z, thread-id=858, tx_id=51A8DA64E0D376B35A2342EBC025747EA348D79B7C17B8FC55506AE67483EB34}
[INFO ] 2023-01-31T07:42:03,016Z [Mock network] corda.flow. - Successfully received fully signed tx. Sending it to the vault for processing. {fiber-id=10000021, flow-id=a57ab844-7b75-40be-8a91-cb6430d5af18, invocation_id=8942fb5e-e037-4430-87ab-9997c864a01e, invocation_timestamp=2023-01-31T07:42:02.450Z, origin=O=Mock Company 2, L=London, C=GB, session_id=8942fb5e-e037-4430-87ab-9997c864a01e, session_timestamp=2023-01-31T07:42:02.450Z, thread-id=858, tx_id=51A8DA64E0D376B35A2342EBC025747EA348D79B7C17B8FC55506AE67483EB34}
[INFO ] 2023-01-31T07:42:03,023Z [Mock network] corda.flow. - Successfully recorded received transaction locally. {fiber-id=10000021, flow-id=a57ab844-7b75-40be-8a91-cb6430d5af18, invocation_id=8942fb5e-e037-4430-87ab-9997c864a01e, invocation_timestamp=2023-01-31T07:42:02.450Z, origin=O=Mock Company 2, L=London, C=GB, session_id=8942fb5e-e037-4430-87ab-9997c864a01e, session_timestamp=2023-01-31T07:42:02.450Z, thread-id=858, tx_id=51A8DA64E0D376B35A2342EBC025747EA348D79B7C17B8FC55506AE67483EB34}
[WARN ] 2023-01-31T07:42:03,024Z [Mock network] persistence.AbstractPartyToX500NameAsStringConverter. - Identity service unable to resolve AbstractParty: Anonymous(DL9VBT5ixmu4CHfFkkErsEfSdCpHidSDC1HXAQTV69jKqm) {actor_id=Only For Testing, actor_owning_identity=O=Mock Company 2, L=London, C=GB, actor_store_id=TEST, fiber-id=10000021, flow-id=a57ab844-7b75-40be-8a91-cb6430d5af18, invocation_id=8942fb5e-e037-4430-87ab-9997c864a01e, invocation_timestamp=2023-01-31T07:42:02.450Z, origin=O=Mock Company 2, L=London, C=GB, session_id=8942fb5e-e037-4430-87ab-9997c864a01e, session_timestamp=2023-01-31T07:42:02.450Z, thread-id=858}
[INFO ] 2023-01-31T07:42:03,035Z [Mock network] corda.flow. - Party O=Mock Company 1, L=London, C=GB received the transaction. {actor_id=Only For Testing, actor_owning_identity=O=Mock Company 2, L=London, C=GB, actor_store_id=TEST, fiber-id=10000016, flow-id=8532ded8-ef91-423f-9918-1f967478c006, invocation_id=579fb489-b9a8-4839-9f92-a87903bc5569, invocation_timestamp=2023-01-31T07:42:02.016Z, origin=Only For Testing, session_id=579fb489-b9a8-4839-9f92-a87903bc5569, session_timestamp=2023-01-31T07:42:02.016Z, thread-id=858, tx_id=51A8DA64E0D376B35A2342EBC025747EA348D79B7C17B8FC55506AE67483EB34}
[INFO ] 2023-01-31T07:42:03,035Z [Mock network] corda.flow. - All parties received the transaction successfully. {actor_id=Only For Testing, actor_owning_identity=O=Mock Company 2, L=London, C=GB, actor_store_id=TEST, fiber-id=10000016, flow-id=8532ded8-ef91-423f-9918-1f967478c006, invocation_id=579fb489-b9a8-4839-9f92-a87903bc5569, invocation_timestamp=2023-01-31T07:42:02.016Z, origin=Only For Testing, session_id=579fb489-b9a8-4839-9f92-a87903bc5569, session_timestamp=2023-01-31T07:42:02.016Z, thread-id=858, tx_id=51A8DA64E0D376B35A2342EBC025747EA348D79B7C17B8FC55506AE67483EB34}
[INFO ] 2023-01-31T07:42:03,039Z [Mock network] corda.flow. - Flow raised an error: Received session end message instead of a data session message. Mismatched send and receive?. Sending it to flow hospital to be triaged. {fiber-id=10000019, flow-id=3eeadfa8-1c38-42bb-b4b8-b8ed51367117, invocation_id=27120b1b-18c0-4a03-bb1a-2a89f1a6f7a8, invocation_timestamp=2023-01-31T07:42:02.174Z, origin=O=Mock Company 2, L=London, C=GB, session_id=27120b1b-18c0-4a03-bb1a-2a89f1a6f7a8, session_timestamp=2023-01-31T07:42:02.174Z, thread-id=858, tx_id=05F53904B95FD46926599F5600C367C941BBC01A8D0CFA2E19655320620E9FB5}
[INFO ] 2023-01-31T07:42:03,042Z [Mock network] statemachine.StaffedFlowHospital. - Flow [3eeadfa8-1c38-42bb-b4b8-b8ed51367117] admitted to hospital in state StateMachineState(checkpoint=Checkpoint(checkpointState=CheckpointState(invocationContext=InvocationContext(origin=Peer(party=O=Mock Company 2, L=London, C=GB), trace=Trace(invocationId=27120b1b-18c0-4a03-bb1a-2a89f1a6f7a8, timestamp: 2023-01-31T07:42:02.174Z, entityType: Invocation, sessionId=27120b1b-18c0-4a03-bb1a-2a89f1a6f7a8, timestamp: 2023-01-31T07:42:02.174Z, entityType: Session), actor=null, externalTrace=null, impersonatedActor=null, arguments=[], clientId=null), ourIdentity=O=Mock Company 1, L=London, C=GB, sessions={}, sessionsToBeClosed=[], subFlowStack=[Inlined(flowClass=class net.corda.samples.obligation.flows.IOUTransferFlowResponder, subFlowVersion=CorDappFlow(platformVersion=11, corDappName=workflows-1.0, corDappHash=8C2322F3ACFF6CA8FE3E7F554352489D40710486D8ED144430A5784441E56717), isEnabledTimedFlow=false)], numberOfSuspends=3, numberOfCommits=4), flowState=Started(flowIORequest=Receive(sessions=[FlowSessionImpl(destination=O=Mock Company 2, L=London, C=GB, sourceSessionId=SessionId(toLong=-6575113948765145039))]), frozenFiber=8656BB889C0E7985D74A85587FB39DD23B273ED240E99DB3C1695195C63B1F13), errorState=Clean, result=null, status=RUNNABLE, progressStep=Starting, flowIoRequest=Receive, compatible=true), flowLogic=net.corda.samples.obligation.flows.IOUTransferFlowResponder@635c1856, pendingDeduplicationHandlers=[net.corda.testing.node.internal.MockNodeMessagingService$InMemoryDeduplicationHandler@483f48f7], isFlowResumed=true, isWaitingForFuture=false, future=null, isAnyCheckpointPersisted=true, isStartIdempotent=false, isRemoved=false, isKilled=false, isDead=false, senderUUID=7da18ab5-41ea-4720-99fc-208eae0a7847, reloadCheckpointAfterSuspendCount=null, numberOfCommits=4, lock=java.util.concurrent.Semaphore@cd4bc5c[Permits = 0]) {fiber-id=10000019, flow-id=3eeadfa8-1c38-42bb-b4b8-b8ed51367117, invocation_id=27120b1b-18c0-4a03-bb1a-2a89f1a6f7a8, invocation_timestamp=2023-01-31T07:42:02.174Z, origin=O=Mock Company 2, L=London, C=GB, session_id=27120b1b-18c0-4a03-bb1a-2a89f1a6f7a8, session_timestamp=2023-01-31T07:42:02.174Z, thread-id=858, tx_id=05F53904B95FD46926599F5600C367C941BBC01A8D0CFA2E19655320620E9FB5}
[INFO ] 2023-01-31T07:42:03,045Z [Mock network] statemachine.StaffedFlowHospital. - Error 1 of 1: {fiber-id=10000019, flow-id=3eeadfa8-1c38-42bb-b4b8-b8ed51367117, invocation_id=27120b1b-18c0-4a03-bb1a-2a89f1a6f7a8, invocation_timestamp=2023-01-31T07:42:02.174Z, origin=O=Mock Company 2, L=London, C=GB, session_id=27120b1b-18c0-4a03-bb1a-2a89f1a6f7a8, session_timestamp=2023-01-31T07:42:02.174Z, thread-id=858, tx_id=05F53904B95FD46926599F5600C367C941BBC01A8D0CFA2E19655320620E9FB5}
net.corda.core.flows.UnexpectedFlowEndException: Received session end message instead of a data session message. Mismatched send and receive?
	at net.corda.node.services.statemachine.transitions.StartedFlowTransition.pollSessionMessages(StartedFlowTransition.kt:257) ~[corda-node-4.9.jar:?]
	at net.corda.node.services.statemachine.transitions.StartedFlowTransition.receiveFromSessionsTransition(StartedFlowTransition.kt:224) ~[corda-node-4.9.jar:?]
	at net.corda.node.services.statemachine.transitions.StartedFlowTransition.access$receiveFromSessionsTransition(StartedFlowTransition.kt:23) ~[corda-node-4.9.jar:?]
	at net.corda.node.services.statemachine.transitions.StartedFlowTransition$receiveTransition$1.invoke(StartedFlowTransition.kt:207) ~[corda-node-4.9.jar:?]
	at net.corda.node.services.statemachine.transitions.StartedFlowTransition$receiveTransition$1.invoke(StartedFlowTransition.kt:23) ~[corda-node-4.9.jar:?]
	at net.corda.node.services.statemachine.transitions.Transition$DefaultImpls.builder(Transition.kt:24) ~[corda-node-4.9.jar:?]
	at net.corda.node.services.statemachine.transitions.StartedFlowTransition.builder(StartedFlowTransition.kt:23) ~[corda-node-4.9.jar:?]
	at net.corda.node.services.statemachine.transitions.StartedFlowTransition.receiveTransition(StartedFlowTransition.kt:199) ~[corda-node-4.9.jar:?]
	at net.corda.node.services.statemachine.transitions.StartedFlowTransition.transition(StartedFlowTransition.kt:47) ~[corda-node-4.9.jar:?]
	at net.corda.node.services.statemachine.transitions.DoRemainingWorkTransition.cleanTransition(DoRemainingWorkTransition.kt:33) ~[corda-node-4.9.jar:?]
	at net.corda.node.services.statemachine.transitions.DoRemainingWorkTransition.transition(DoRemainingWorkTransition.kt:22) ~[corda-node-4.9.jar:?]
	at net.corda.node.services.statemachine.transitions.TopLevelTransition.transition(TopLevelTransition.kt:53) ~[corda-node-4.9.jar:?]
	at net.corda.node.services.statemachine.transitions.StateMachine.transition(StateMachine.kt:13) ~[corda-node-4.9.jar:?]
	at net.corda.node.services.statemachine.FlowStateMachineImpl.processEvent(FlowStateMachineImpl.kt:182) ~[corda-node-4.9.jar:?]
	at net.corda.node.services.statemachine.FlowStateMachineImpl.processEventsUntilFlowIsResumed(FlowStateMachineImpl.kt:220) ~[corda-node-4.9.jar:?]
	at net.corda.node.services.statemachine.FlowStateMachineImpl.suspend(FlowStateMachineImpl.kt:577) ~[corda-node-4.9.jar:?]
	at net.corda.node.services.statemachine.FlowSessionImpl.receive(FlowSessionImpl.kt:67) ~[corda-node-4.9.jar:?]
	at net.corda.node.services.statemachine.FlowSessionImpl.receive(FlowSessionImpl.kt:71) ~[corda-node-4.9.jar:?]
	at net.corda.core.flows.SignTransactionFlow.call(CollectSignaturesFlow.kt:351) ~[corda-core-4.9.jar:?]
	at net.corda.core.flows.SignTransactionFlow.call(CollectSignaturesFlow.kt:261) ~[corda-core-4.9.jar:?]
	at net.corda.node.services.statemachine.FlowStateMachineImpl.subFlow(FlowStateMachineImpl.kt:420) ~[corda-node-4.9.jar:?]
	at net.corda.core.flows.FlowLogic.subFlow(FlowLogic.kt:409) ~[corda-core-4.9.jar:?]
	at net.corda.samples.obligation.flows.IOUTransferFlowResponder.call(IOUTransferFlow.kt:123) ~[main/:?]
	at net.corda.samples.obligation.flows.IOUTransferFlowResponder.call(IOUTransferFlow.kt:114) ~[main/:?]
	at net.corda.node.services.statemachine.FlowStateMachineImpl.run(FlowStateMachineImpl.kt:349) ~[corda-node-4.9.jar:?]
	at net.corda.node.services.statemachine.FlowStateMachineImpl.run(FlowStateMachineImpl.kt:71) ~[corda-node-4.9.jar:?]
	at co.paralleluniverse.fibers.Fiber.run1(Fiber.java:1092) ~[quasar-core-0.7.10.jar:0.7.10]
	at co.paralleluniverse.fibers.Fiber.exec(Fiber.java:788) ~[quasar-core-0.7.10.jar:0.7.10]
	at co.paralleluniverse.fibers.RunnableFiberTask.doExec(RunnableFiberTask.java:100) ~[quasar-core-0.7.10.jar:0.7.10]
	at co.paralleluniverse.fibers.RunnableFiberTask.run(RunnableFiberTask.java:91) ~[quasar-core-0.7.10.jar:0.7.10]
	at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511) ~[?:1.8.0_202]
	at java.util.concurrent.FutureTask.run(FutureTask.java:266) ~[?:1.8.0_202]
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.access$201(ScheduledThreadPoolExecutor.java:180) ~[?:1.8.0_202]
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.run(ScheduledThreadPoolExecutor.java:293) ~[?:1.8.0_202]
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149) ~[?:1.8.0_202]
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624) ~[?:1.8.0_202]
	at net.corda.node.utilities.AffinityExecutor$ServiceAffinityExecutor$1$thread$1.run(AffinityExecutor.kt:63) ~[corda-node-4.9.jar:?]
[INFO ] 2023-01-31T07:42:03,048Z [Mock network] statemachine.StaffedFlowHospital. - Flow error allowed to propagate {fiber-id=10000019, flow-id=3eeadfa8-1c38-42bb-b4b8-b8ed51367117, invocation_id=27120b1b-18c0-4a03-bb1a-2a89f1a6f7a8, invocation_timestamp=2023-01-31T07:42:02.174Z, origin=O=Mock Company 2, L=London, C=GB, session_id=27120b1b-18c0-4a03-bb1a-2a89f1a6f7a8, session_timestamp=2023-01-31T07:42:02.174Z, thread-id=858, tx_id=05F53904B95FD46926599F5600C367C941BBC01A8D0CFA2E19655320620E9FB5}
net.corda.core.flows.UnexpectedFlowEndException: Received session end message instead of a data session message. Mismatched send and receive?
	at net.corda.node.services.statemachine.transitions.StartedFlowTransition.pollSessionMessages(StartedFlowTransition.kt:257) ~[corda-node-4.9.jar:?]
	at net.corda.node.services.statemachine.transitions.StartedFlowTransition.receiveFromSessionsTransition(StartedFlowTransition.kt:224) ~[corda-node-4.9.jar:?]
	at net.corda.node.services.statemachine.transitions.StartedFlowTransition.access$receiveFromSessionsTransition(StartedFlowTransition.kt:23) ~[corda-node-4.9.jar:?]
	at net.corda.node.services.statemachine.transitions.StartedFlowTransition$receiveTransition$1.invoke(StartedFlowTransition.kt:207) ~[corda-node-4.9.jar:?]
	at net.corda.node.services.statemachine.transitions.StartedFlowTransition$receiveTransition$1.invoke(StartedFlowTransition.kt:23) ~[corda-node-4.9.jar:?]
	at net.corda.node.services.statemachine.transitions.Transition$DefaultImpls.builder(Transition.kt:24) ~[corda-node-4.9.jar:?]
	at net.corda.node.services.statemachine.transitions.StartedFlowTransition.builder(StartedFlowTransition.kt:23) ~[corda-node-4.9.jar:?]
	at net.corda.node.services.statemachine.transitions.StartedFlowTransition.receiveTransition(StartedFlowTransition.kt:199) ~[corda-node-4.9.jar:?]
	at net.corda.node.services.statemachine.transitions.StartedFlowTransition.transition(StartedFlowTransition.kt:47) ~[corda-node-4.9.jar:?]
	at net.corda.node.services.statemachine.transitions.DoRemainingWorkTransition.cleanTransition(DoRemainingWorkTransition.kt:33) ~[corda-node-4.9.jar:?]
	at net.corda.node.services.statemachine.transitions.DoRemainingWorkTransition.transition(DoRemainingWorkTransition.kt:22) ~[corda-node-4.9.jar:?]
	at net.corda.node.services.statemachine.transitions.TopLevelTransition.transition(TopLevelTransition.kt:53) ~[corda-node-4.9.jar:?]
	at net.corda.node.services.statemachine.transitions.StateMachine.transition(StateMachine.kt:13) ~[corda-node-4.9.jar:?]
	at net.corda.node.services.statemachine.FlowStateMachineImpl.processEvent(FlowStateMachineImpl.kt:182) ~[corda-node-4.9.jar:?]
	at net.corda.node.services.statemachine.FlowStateMachineImpl.processEventsUntilFlowIsResumed(FlowStateMachineImpl.kt:220) ~[corda-node-4.9.jar:?]
	at net.corda.node.services.statemachine.FlowStateMachineImpl.suspend(FlowStateMachineImpl.kt:577) ~[corda-node-4.9.jar:?]
	at net.corda.node.services.statemachine.FlowSessionImpl.receive(FlowSessionImpl.kt:67) ~[corda-node-4.9.jar:?]
	at net.corda.node.services.statemachine.FlowSessionImpl.receive(FlowSessionImpl.kt:71) ~[corda-node-4.9.jar:?]
	at net.corda.core.flows.SignTransactionFlow.call(CollectSignaturesFlow.kt:351) ~[corda-core-4.9.jar:?]
	at net.corda.core.flows.SignTransactionFlow.call(CollectSignaturesFlow.kt:261) ~[corda-core-4.9.jar:?]
	at net.corda.node.services.statemachine.FlowStateMachineImpl.subFlow(FlowStateMachineImpl.kt:420) ~[corda-node-4.9.jar:?]
	at net.corda.core.flows.FlowLogic.subFlow(FlowLogic.kt:409) ~[corda-core-4.9.jar:?]
	at net.corda.samples.obligation.flows.IOUTransferFlowResponder.call(IOUTransferFlow.kt:123) ~[main/:?]
	at net.corda.samples.obligation.flows.IOUTransferFlowResponder.call(IOUTransferFlow.kt:114) ~[main/:?]
	at net.corda.node.services.statemachine.FlowStateMachineImpl.run(FlowStateMachineImpl.kt:349) ~[corda-node-4.9.jar:?]
	at net.corda.node.services.statemachine.FlowStateMachineImpl.run(FlowStateMachineImpl.kt:71) ~[corda-node-4.9.jar:?]
	at co.paralleluniverse.fibers.Fiber.run1(Fiber.java:1092) ~[quasar-core-0.7.10.jar:0.7.10]
	at co.paralleluniverse.fibers.Fiber.exec(Fiber.java:788) ~[quasar-core-0.7.10.jar:0.7.10]
	at co.paralleluniverse.fibers.RunnableFiberTask.doExec(RunnableFiberTask.java:100) ~[quasar-core-0.7.10.jar:0.7.10]
	at co.paralleluniverse.fibers.RunnableFiberTask.run(RunnableFiberTask.java:91) ~[quasar-core-0.7.10.jar:0.7.10]
	at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511) ~[?:1.8.0_202]
	at java.util.concurrent.FutureTask.run(FutureTask.java:266) ~[?:1.8.0_202]
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.access$201(ScheduledThreadPoolExecutor.java:180) ~[?:1.8.0_202]
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.run(ScheduledThreadPoolExecutor.java:293) ~[?:1.8.0_202]
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149) ~[?:1.8.0_202]
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624) ~[?:1.8.0_202]
	at net.corda.node.utilities.AffinityExecutor$ServiceAffinityExecutor$1$thread$1.run(AffinityExecutor.kt:63) ~[corda-node-4.9.jar:?]
[WARN ] 2023-01-31T07:42:03,074Z [Mock network] interceptors.DumpHistoryOnErrorInterceptor. - Flow [3eeadfa8-1c38-42bb-b4b8-b8ed51367117] errored, dumping all transitions:

 --- Transition of flow [3eeadfa8-1c38-42bb-b4b8-b8ed51367117] ---
  Timestamp: 2023-01-31T07:42:02.179Z
  Event: DoRemainingWork
  Actions: 
    CreateTransaction
    PersistCheckpoint(id=[3eeadfa8-1c38-42bb-b4b8-b8ed51367117], checkpoint=Checkpoint(checkpointState=CheckpointState(invocationContext=InvocationContext(origin=Peer(party=O=Mock Company 2, L=London, C=GB), trace=Trace(invocationId=27120b1b-18c0-4a03-bb1a-2a89f1a6f7a8, timestamp: 2023-01-31T07:42:02.174Z, entityType: Invocation, sessionId=27120b1b-18c0-4a03-bb1a-2a89f1a6f7a8, timestamp: 2023-01-31T07:42:02.174Z, entityType: Session), actor=null, externalTrace=null, impersonatedActor=null, arguments=[], clientId=null), ourIdentity=O=Mock Company 1, L=London, C=GB, sessions={}, sessionsToBeClosed=[], subFlowStack=[Inlined(flowClass=class net.corda.samples.obligation.flows.IOUTransferFlowResponder, subFlowVersion=CorDappFlow(platformVersion=11, corDappName=workflows-1.0, corDappHash=8C2322F3ACFF6CA8FE3E7F554352489D40710486D8ED144430A5784441E56717), isEnabledTimedFlow=false)], numberOfSuspends=0, numberOfCommits=1), flowState=Unstarted(flowStart=Initiated, frozenFlowLogic=F012A5D08C0D1B01D36A29718DFC89FBE0E724D4FFD498EADE967818D75D0F65), errorState=Clean, result=null, status=RUNNABLE, progressStep=null, flowIoRequest=null, compatible=true), isCheckpointUpdate=false)
    PersistDeduplicationFacts(deduplicationHandlers=[net.corda.testing.node.internal.MockNodeMessagingService$InMemoryDeduplicationHandler@573d4659])
    CommitTransaction
    AcknowledgeMessages(deduplicationHandlers=[net.corda.testing.node.internal.MockNodeMessagingService$InMemoryDeduplicationHandler@573d4659])
    SignalFlowHasStarted(flowId=[3eeadfa8-1c38-42bb-b4b8-b8ed51367117])
    SendExisting(peerParty=O=Mock Company 2, L=London, C=GB, message=ExistingSessionMessage(recipientSessionId=SessionId(toLong=6423518782607066838), payload=ConfirmSessionMessage(initiatedSessionId=SessionId(toLong=-6575113948765145039), initiatedFlowInfo=FlowInfo(flowVersion=1, appName=<unknown>))), deduplicationId=SenderDeduplicationId(deduplicationId=DeduplicationId(toString=N-D-6423518782607066838-7743118876219221019-0-0), senderUUID=7da18ab5-41ea-4720-99fc-208eae0a7847))
    CreateTransaction
  Continuation: Resume(result=null)
  Diff between previous and next state:
pendingDeduplicationHandlers: 
    [net.corda.testing.node.internal.MockNodeMessagingService$InMemoryDeduplicationHandler@573d4659]
    []
isFlowResumed: 
    false
    true
isAnyCheckpointPersisted: 
    false
    true
checkpoint.checkpointState.sessions.SessionId(toLong=-6575113948765145039): 
    null
    Initiated(peerParty=O=Mock Company 2, L=London, C=GB, peerFlowInfo=FlowInfo(flowVersion=1, appName=<unknown>), receivedMessages=[DataSessionMessage(payload=class net.corda.core.serialization.SerializedBytes)], otherSideErrored=false, peerSinkSessionId=SessionId(toLong=6423518782607066838), deduplicationSeed=D-6423518782607066838-7743118876219221019)
checkpoint.timestamp: 
    2023-01-31T07:42:02.175Z
    2023-01-31T07:42:02.176Z


 --- Transition of flow [3eeadfa8-1c38-42bb-b4b8-b8ed51367117] ---
  Timestamp: 2023-01-31T07:42:02.184Z
  Event: EnterSubFlow(subFlowClass=class net.corda.samples.obligation.flows.IOUTransferFlowResponder$call$signedTransactionFlow$1, subFlowVersion=CoreFlow(platformVersion=11), isEnabledTimedFlow=false)
  Actions: 
    
  Continuation: ProcessEvents
  Diff between previous and next state:
checkpoint.checkpointState.subFlowStack: 
    [Inlined(flowClass=class net.corda.samples.obligation.flows.IOUTransferFlowResponder, subFlowVersion=CorDappFlow(platformVersion=11, corDappName=workflows-1.0, corDappHash=8C2322F3ACFF6CA8FE3E7F554352489D40710486D8ED144430A5784441E56717), isEnabledTimedFlow=false)]
    [Inlined(flowClass=class net.corda.samples.obligation.flows.IOUTransferFlowResponder, subFlowVersion=CorDappFlow(platformVersion=11, corDappName=workflows-1.0, corDappHash=8C2322F3ACFF6CA8FE3E7F554352489D40710486D8ED144430A5784441E56717), isEnabledTimedFlow=false), Inlined(flowClass=class net.corda.samples.obligation.flows.IOUTransferFlowResponder$call$signedTransactionFlow$1, subFlowVersion=CoreFlow(platformVersion=11), isEnabledTimedFlow=false)]
checkpoint.timestamp: 
    2023-01-31T07:42:02.176Z
    2023-01-31T07:42:02.184Z


 --- Transition of flow [3eeadfa8-1c38-42bb-b4b8-b8ed51367117] ---
  Timestamp: 2023-01-31T07:42:02.184Z
  Event: EnterSubFlow(subFlowClass=class net.corda.core.flows.ReceiveTransactionFlow, subFlowVersion=CoreFlow(platformVersion=11), isEnabledTimedFlow=false)
  Actions: 
    
  Continuation: ProcessEvents
  Diff between previous and next state:
checkpoint.checkpointState.subFlowStack: 
    [Inlined(flowClass=class net.corda.samples.obligation.flows.IOUTransferFlowResponder, subFlowVersion=CorDappFlow(platformVersion=11, corDappName=workflows-1.0, corDappHash=8C2322F3ACFF6CA8FE3E7F554352489D40710486D8ED144430A5784441E56717), isEnabledTimedFlow=false), Inlined(flowClass=class net.corda.samples.obligation.flows.IOUTransferFlowResponder$call$signedTransactionFlow$1, subFlowVersion=CoreFlow(platformVersion=11), isEnabledTimedFlow=false)]
    [Inlined(flowClass=class net.corda.samples.obligation.flows.IOUTransferFlowResponder, subFlowVersion=CorDappFlow(platformVersion=11, corDappName=workflows-1.0, corDappHash=8C2322F3ACFF6CA8FE3E7F554352489D40710486D8ED144430A5784441E56717), isEnabledTimedFlow=false), Inlined(flowClass=class net.corda.samples.obligation.flows.IOUTransferFlowResponder$call$signedTransactionFlow$1, subFlowVersion=CoreFlow(platformVersion=11), isEnabledTimedFlow=false), Inlined(flowClass=class net.corda.core.flows.ReceiveTransactionFlow, subFlowVersion=CoreFlow(platformVersion=11), isEnabledTimedFlow=false)]


 --- Transition of flow [3eeadfa8-1c38-42bb-b4b8-b8ed51367117] ---
  Timestamp: 2023-01-31T07:42:02.189Z
  Event: Suspend(ioRequest=Receive(sessions=[FlowSessionImpl(destination=O=Mock Company 2, L=London, C=GB, sourceSessionId=SessionId(toLong=-6575113948765145039))]), maySkipCheckpoint=false, fiber=B41AF4DFCF795CEC0E90DDAC35FD0D8BF3C56965BCAD333AC0FFA34B485EAA28, currentStep=Starting)
  Actions: 
    PersistCheckpoint(id=[3eeadfa8-1c38-42bb-b4b8-b8ed51367117], checkpoint=Checkpoint(checkpointState=CheckpointState(invocationContext=InvocationContext(origin=Peer(party=O=Mock Company 2, L=London, C=GB), trace=Trace(invocationId=27120b1b-18c0-4a03-bb1a-2a89f1a6f7a8, timestamp: 2023-01-31T07:42:02.174Z, entityType: Invocation, sessionId=27120b1b-18c0-4a03-bb1a-2a89f1a6f7a8, timestamp: 2023-01-31T07:42:02.174Z, entityType: Session), actor=null, externalTrace=null, impersonatedActor=null, arguments=[], clientId=null), ourIdentity=O=Mock Company 1, L=London, C=GB, sessions={SessionId(toLong=-6575113948765145039)=Initiated(peerParty=O=Mock Company 2, L=London, C=GB, peerFlowInfo=FlowInfo(flowVersion=1, appName=<unknown>), receivedMessages=[DataSessionMessage(payload=class net.corda.core.serialization.SerializedBytes)], otherSideErrored=false, peerSinkSessionId=SessionId(toLong=6423518782607066838), deduplicationSeed=D-6423518782607066838-7743118876219221019)}, sessionsToBeClosed=[], subFlowStack=[Inlined(flowClass=class net.corda.samples.obligation.flows.IOUTransferFlowResponder, subFlowVersion=CorDappFlow(platformVersion=11, corDappName=workflows-1.0, corDappHash=8C2322F3ACFF6CA8FE3E7F554352489D40710486D8ED144430A5784441E56717), isEnabledTimedFlow=false), Inlined(flowClass=class net.corda.samples.obligation.flows.IOUTransferFlowResponder$call$signedTransactionFlow$1, subFlowVersion=CoreFlow(platformVersion=11), isEnabledTimedFlow=false), Inlined(flowClass=class net.corda.core.flows.ReceiveTransactionFlow, subFlowVersion=CoreFlow(platformVersion=11), isEnabledTimedFlow=false)], numberOfSuspends=1, numberOfCommits=2), flowState=Started(flowIORequest=Receive(sessions=[FlowSessionImpl(destination=O=Mock Company 2, L=London, C=GB, sourceSessionId=SessionId(toLong=-6575113948765145039))]), frozenFiber=B41AF4DFCF795CEC0E90DDAC35FD0D8BF3C56965BCAD333AC0FFA34B485EAA28), errorState=Clean, result=null, status=RUNNABLE, progressStep=Starting, flowIoRequest=Receive, compatible=true), isCheckpointUpdate=true)
    PersistDeduplicationFacts(deduplicationHandlers=[])
    CommitTransaction
    AcknowledgeMessages(deduplicationHandlers=[])
    ScheduleEvent(event=DoRemainingWork)
  Continuation: ProcessEvents
  Diff between previous and next state:
isFlowResumed: 
    true
    false
numberOfCommits: 
    0
    2
checkpoint.progressStep: 
    null
    Starting
checkpoint.flowIoRequest: 
    null
    Receive
checkpoint.checkpointState.numberOfCommits: 
    1
    2
checkpoint.checkpointState.numberOfSuspends: 
    0
    1
checkpoint.flowState: 
    Unstarted(flowStart=Initiated, frozenFlowLogic=F012A5D08C0D1B01D36A29718DFC89FBE0E724D4FFD498EADE967818D75D0F65)
    Started(flowIORequest=Receive(sessions=[FlowSessionImpl(destination=O=Mock Company 2, L=London, C=GB, sourceSessionId=SessionId(toLong=-6575113948765145039))]), frozenFiber=B41AF4DFCF795CEC0E90DDAC35FD0D8BF3C56965BCAD333AC0FFA34B485EAA28)
checkpoint.timestamp: 
    2023-01-31T07:42:02.184Z
    2023-01-31T07:42:02.187Z


 --- Transition of flow [3eeadfa8-1c38-42bb-b4b8-b8ed51367117] ---
  Timestamp: 2023-01-31T07:42:02.189Z
  Event: DoRemainingWork
  Actions: 
    CreateTransaction
  Continuation: Resume(result=class java.util.LinkedHashMap)
  Diff between previous and next state:
isFlowResumed: 
    false
    true
checkpoint.checkpointState.sessions.SessionId(toLong=-6575113948765145039).receivedMessages.isEmpty: 
    false
    true
checkpoint.timestamp: 
    2023-01-31T07:42:02.187Z
    2023-01-31T07:42:02.189Z


 --- Transition of flow [3eeadfa8-1c38-42bb-b4b8-b8ed51367117] ---
  Timestamp: 2023-01-31T07:42:02.190Z
  Event: EnterSubFlow(subFlowClass=class net.corda.core.internal.ResolveTransactionsFlow, subFlowVersion=CoreFlow(platformVersion=11), isEnabledTimedFlow=false)
  Actions: 
    
  Continuation: ProcessEvents
  Diff between previous and next state:
checkpoint.checkpointState.subFlowStack: 
    [Inlined(flowClass=class net.corda.samples.obligation.flows.IOUTransferFlowResponder, subFlowVersion=CorDappFlow(platformVersion=11, corDappName=workflows-1.0, corDappHash=8C2322F3ACFF6CA8FE3E7F554352489D40710486D8ED144430A5784441E56717), isEnabledTimedFlow=false), Inlined(flowClass=class net.corda.samples.obligation.flows.IOUTransferFlowResponder$call$signedTransactionFlow$1, subFlowVersion=CoreFlow(platformVersion=11), isEnabledTimedFlow=false), Inlined(flowClass=class net.corda.core.flows.ReceiveTransactionFlow, subFlowVersion=CoreFlow(platformVersion=11), isEnabledTimedFlow=false)]
    [Inlined(flowClass=class net.corda.samples.obligation.flows.IOUTransferFlowResponder, subFlowVersion=CorDappFlow(platformVersion=11, corDappName=workflows-1.0, corDappHash=8C2322F3ACFF6CA8FE3E7F554352489D40710486D8ED144430A5784441E56717), isEnabledTimedFlow=false), Inlined(flowClass=class net.corda.samples.obligation.flows.IOUTransferFlowResponder$call$signedTransactionFlow$1, subFlowVersion=CoreFlow(platformVersion=11), isEnabledTimedFlow=false), Inlined(flowClass=class net.corda.core.flows.ReceiveTransactionFlow, subFlowVersion=CoreFlow(platformVersion=11), isEnabledTimedFlow=false), Inlined(flowClass=class net.corda.core.internal.ResolveTransactionsFlow, subFlowVersion=CoreFlow(platformVersion=11), isEnabledTimedFlow=false)]
checkpoint.timestamp: 
    2023-01-31T07:42:02.189Z
    2023-01-31T07:42:02.190Z


 --- Transition of flow [3eeadfa8-1c38-42bb-b4b8-b8ed51367117] ---
  Timestamp: 2023-01-31T07:42:02.190Z
  Event: EnterSubFlow(subFlowClass=class net.corda.core.internal.FetchAttachmentsFlow, subFlowVersion=CoreFlow(platformVersion=11), isEnabledTimedFlow=false)
  Actions: 
    
  Continuation: ProcessEvents
  Diff between previous and next state:
checkpoint.checkpointState.subFlowStack: 
    [Inlined(flowClass=class net.corda.samples.obligation.flows.IOUTransferFlowResponder, subFlowVersion=CorDappFlow(platformVersion=11, corDappName=workflows-1.0, corDappHash=8C2322F3ACFF6CA8FE3E7F554352489D40710486D8ED144430A5784441E56717), isEnabledTimedFlow=false), Inlined(flowClass=class net.corda.samples.obligation.flows.IOUTransferFlowResponder$call$signedTransactionFlow$1, subFlowVersion=CoreFlow(platformVersion=11), isEnabledTimedFlow=false), Inlined(flowClass=class net.corda.core.flows.ReceiveTransactionFlow, subFlowVersion=CoreFlow(platformVersion=11), isEnabledTimedFlow=false), Inlined(flowClass=class net.corda.core.internal.ResolveTransactionsFlow, subFlowVersion=CoreFlow(platformVersion=11), isEnabledTimedFlow=false)]
    [Inlined(flowClass=class net.corda.samples.obligation.flows.IOUTransferFlowResponder, subFlowVersion=CorDappFlow(platformVersion=11, corDappName=workflows-1.0, corDappHash=8C2322F3ACFF6CA8FE3E7F554352489D40710486D8ED144430A5784441E56717), isEnabledTimedFlow=false), Inlined(flowClass=class net.corda.samples.obligation.flows.IOUTransferFlowResponder$call$signedTransactionFlow$1, subFlowVersion=CoreFlow(platformVersion=11), isEnabledTimedFlow=false), Inlined(flowClass=class net.corda.core.flows.ReceiveTransactionFlow, subFlowVersion=CoreFlow(platformVersion=11), isEnabledTimedFlow=false), Inlined(flowClass=class net.corda.core.internal.ResolveTransactionsFlow, subFlowVersion=CoreFlow(platformVersion=11), isEnabledTimedFlow=false), Inlined(flowClass=class net.corda.core.internal.FetchAttachmentsFlow, subFlowVersion=CoreFlow(platformVersion=11), isEnabledTimedFlow=false)]


 --- Transition of flow [3eeadfa8-1c38-42bb-b4b8-b8ed51367117] ---
  Timestamp: 2023-01-31T07:42:02.190Z
  Event: LeaveSubFlow
  Actions: 
    
  Continuation: ProcessEvents
  Diff between previous and next state:
checkpoint.checkpointState.subFlowStack: 
    [Inlined(flowClass=class net.corda.samples.obligation.flows.IOUTransferFlowResponder, subFlowVersion=CorDappFlow(platformVersion=11, corDappName=workflows-1.0, corDappHash=8C2322F3ACFF6CA8FE3E7F554352489D40710486D8ED144430A5784441E56717), isEnabledTimedFlow=false), Inlined(flowClass=class net.corda.samples.obligation.flows.IOUTransferFlowResponder$call$signedTransactionFlow$1, subFlowVersion=CoreFlow(platformVersion=11), isEnabledTimedFlow=false), Inlined(flowClass=class net.corda.core.flows.ReceiveTransactionFlow, subFlowVersion=CoreFlow(platformVersion=11), isEnabledTimedFlow=false), Inlined(flowClass=class net.corda.core.internal.ResolveTransactionsFlow, subFlowVersion=CoreFlow(platformVersion=11), isEnabledTimedFlow=false), Inlined(flowClass=class net.corda.core.internal.FetchAttachmentsFlow, subFlowVersion=CoreFlow(platformVersion=11), isEnabledTimedFlow=false)]
    [Inlined(flowClass=class net.corda.samples.obligation.flows.IOUTransferFlowResponder, subFlowVersion=CorDappFlow(platformVersion=11, corDappName=workflows-1.0, corDappHash=8C2322F3ACFF6CA8FE3E7F554352489D40710486D8ED144430A5784441E56717), isEnabledTimedFlow=false), Inlined(flowClass=class net.corda.samples.obligation.flows.IOUTransferFlowResponder$call$signedTransactionFlow$1, subFlowVersion=CoreFlow(platformVersion=11), isEnabledTimedFlow=false), Inlined(flowClass=class net.corda.core.flows.ReceiveTransactionFlow, subFlowVersion=CoreFlow(platformVersion=11), isEnabledTimedFlow=false), Inlined(flowClass=class net.corda.core.internal.ResolveTransactionsFlow, subFlowVersion=CoreFlow(platformVersion=11), isEnabledTimedFlow=false)]


 --- Transition of flow [3eeadfa8-1c38-42bb-b4b8-b8ed51367117] ---
  Timestamp: 2023-01-31T07:42:02.190Z
  Event: EnterSubFlow(subFlowClass=class net.corda.core.internal.FetchNetworkParametersFlow, subFlowVersion=CoreFlow(platformVersion=11), isEnabledTimedFlow=false)
  Actions: 
    
  Continuation: ProcessEvents
  Diff between previous and next state:
checkpoint.checkpointState.subFlowStack: 
    [Inlined(flowClass=class net.corda.samples.obligation.flows.IOUTransferFlowResponder, subFlowVersion=CorDappFlow(platformVersion=11, corDappName=workflows-1.0, corDappHash=8C2322F3ACFF6CA8FE3E7F554352489D40710486D8ED144430A5784441E56717), isEnabledTimedFlow=false), Inlined(flowClass=class net.corda.samples.obligation.flows.IOUTransferFlowResponder$call$signedTransactionFlow$1, subFlowVersion=CoreFlow(platformVersion=11), isEnabledTimedFlow=false), Inlined(flowClass=class net.corda.core.flows.ReceiveTransactionFlow, subFlowVersion=CoreFlow(platformVersion=11), isEnabledTimedFlow=false), Inlined(flowClass=class net.corda.core.internal.ResolveTransactionsFlow, subFlowVersion=CoreFlow(platformVersion=11), isEnabledTimedFlow=false)]
    [Inlined(flowClass=class net.corda.samples.obligation.flows.IOUTransferFlowResponder, subFlowVersion=CorDappFlow(platformVersion=11, corDappName=workflows-1.0, corDappHash=8C2322F3ACFF6CA8FE3E7F554352489D40710486D8ED144430A5784441E56717), isEnabledTimedFlow=false), Inlined(flowClass=class net.corda.samples.obligation.flows.IOUTransferFlowResponder$call$signedTransactionFlow$1, subFlowVersion=CoreFlow(platformVersion=11), isEnabledTimedFlow=false), Inlined(flowClass=class net.corda.core.flows.ReceiveTransactionFlow, subFlowVersion=CoreFlow(platformVersion=11), isEnabledTimedFlow=false), Inlined(flowClass=class net.corda.core.internal.ResolveTransactionsFlow, subFlowVersion=CoreFlow(platformVersion=11), isEnabledTimedFlow=false), Inlined(flowClass=class net.corda.core.internal.FetchNetworkParametersFlow, subFlowVersion=CoreFlow(platformVersion=11), isEnabledTimedFlow=false)]


 --- Transition of flow [3eeadfa8-1c38-42bb-b4b8-b8ed51367117] ---
  Timestamp: 2023-01-31T07:42:02.190Z
  Event: LeaveSubFlow
  Actions: 
    
  Continuation: ProcessEvents
  Diff between previous and next state:
checkpoint.checkpointState.subFlowStack: 
    [Inlined(flowClass=class net.corda.samples.obligation.flows.IOUTransferFlowResponder, subFlowVersion=CorDappFlow(platformVersion=11, corDappName=workflows-1.0, corDappHash=8C2322F3ACFF6CA8FE3E7F554352489D40710486D8ED144430A5784441E56717), isEnabledTimedFlow=false), Inlined(flowClass=class net.corda.samples.obligation.flows.IOUTransferFlowResponder$call$signedTransactionFlow$1, subFlowVersion=CoreFlow(platformVersion=11), isEnabledTimedFlow=false), Inlined(flowClass=class net.corda.core.flows.ReceiveTransactionFlow, subFlowVersion=CoreFlow(platformVersion=11), isEnabledTimedFlow=false), Inlined(flowClass=class net.corda.core.internal.ResolveTransactionsFlow, subFlowVersion=CoreFlow(platformVersion=11), isEnabledTimedFlow=false), Inlined(flowClass=class net.corda.core.internal.FetchNetworkParametersFlow, subFlowVersion=CoreFlow(platformVersion=11), isEnabledTimedFlow=false)]
    [Inlined(flowClass=class net.corda.samples.obligation.flows.IOUTransferFlowResponder, subFlowVersion=CorDappFlow(platformVersion=11, corDappName=workflows-1.0, corDappHash=8C2322F3ACFF6CA8FE3E7F554352489D40710486D8ED144430A5784441E56717), isEnabledTimedFlow=false), Inlined(flowClass=class net.corda.samples.obligation.flows.IOUTransferFlowResponder$call$signedTransactionFlow$1, subFlowVersion=CoreFlow(platformVersion=11), isEnabledTimedFlow=false), Inlined(flowClass=class net.corda.core.flows.ReceiveTransactionFlow, subFlowVersion=CoreFlow(platformVersion=11), isEnabledTimedFlow=false), Inlined(flowClass=class net.corda.core.internal.ResolveTransactionsFlow, subFlowVersion=CoreFlow(platformVersion=11), isEnabledTimedFlow=false)]


 --- Transition of flow [3eeadfa8-1c38-42bb-b4b8-b8ed51367117] ---
  Timestamp: 2023-01-31T07:42:02.195Z
  Event: Suspend(ioRequest=Send(sessionToMessage={FlowSessionImpl(destination=O=Mock Company 2, L=London, C=GB, sourceSessionId=SessionId(toLong=-6575113948765145039))=768AED61FD2A58D74D7316731407E0600065080E1F3E6397EE4FA5AEFEE79295}), maySkipCheckpoint=false, fiber=BC5933FBB3E8EB10FCA687D3EA8870DE13F8558DA950738D281A0151AFAC1C3A, currentStep=Starting)
  Actions: 
    PersistCheckpoint(id=[3eeadfa8-1c38-42bb-b4b8-b8ed51367117], checkpoint=Checkpoint(checkpointState=CheckpointState(invocationContext=InvocationContext(origin=Peer(party=O=Mock Company 2, L=London, C=GB), trace=Trace(invocationId=27120b1b-18c0-4a03-bb1a-2a89f1a6f7a8, timestamp: 2023-01-31T07:42:02.174Z, entityType: Invocation, sessionId=27120b1b-18c0-4a03-bb1a-2a89f1a6f7a8, timestamp: 2023-01-31T07:42:02.174Z, entityType: Session), actor=null, externalTrace=null, impersonatedActor=null, arguments=[], clientId=null), ourIdentity=O=Mock Company 1, L=London, C=GB, sessions={SessionId(toLong=-6575113948765145039)=Initiated(peerParty=O=Mock Company 2, L=London, C=GB, peerFlowInfo=FlowInfo(flowVersion=1, appName=<unknown>), receivedMessages=[], otherSideErrored=false, peerSinkSessionId=SessionId(toLong=6423518782607066838), deduplicationSeed=D-6423518782607066838-7743118876219221019)}, sessionsToBeClosed=[], subFlowStack=[Inlined(flowClass=class net.corda.samples.obligation.flows.IOUTransferFlowResponder, subFlowVersion=CorDappFlow(platformVersion=11, corDappName=workflows-1.0, corDappHash=8C2322F3ACFF6CA8FE3E7F554352489D40710486D8ED144430A5784441E56717), isEnabledTimedFlow=false), Inlined(flowClass=class net.corda.samples.obligation.flows.IOUTransferFlowResponder$call$signedTransactionFlow$1, subFlowVersion=CoreFlow(platformVersion=11), isEnabledTimedFlow=false), Inlined(flowClass=class net.corda.core.flows.ReceiveTransactionFlow, subFlowVersion=CoreFlow(platformVersion=11), isEnabledTimedFlow=false), Inlined(flowClass=class net.corda.core.internal.ResolveTransactionsFlow, subFlowVersion=CoreFlow(platformVersion=11), isEnabledTimedFlow=false)], numberOfSuspends=2, numberOfCommits=3), flowState=Started(flowIORequest=Send(sessionToMessage={FlowSessionImpl(destination=O=Mock Company 2, L=London, C=GB, sourceSessionId=SessionId(toLong=-6575113948765145039))=768AED61FD2A58D74D7316731407E0600065080E1F3E6397EE4FA5AEFEE79295}), frozenFiber=BC5933FBB3E8EB10FCA687D3EA8870DE13F8558DA950738D281A0151AFAC1C3A), errorState=Clean, result=null, status=RUNNABLE, progressStep=Starting, flowIoRequest=Send, compatible=true), isCheckpointUpdate=true)
    PersistDeduplicationFacts(deduplicationHandlers=[])
    CommitTransaction
    AcknowledgeMessages(deduplicationHandlers=[])
    ScheduleEvent(event=DoRemainingWork)
  Continuation: ProcessEvents
  Diff between previous and next state:
isFlowResumed: 
    true
    false
numberOfCommits: 
    2
    3
checkpoint.flowIoRequest: 
    Receive
    Send
checkpoint.checkpointState.numberOfCommits: 
    2
    3
checkpoint.checkpointState.numberOfSuspends: 
    1
    2
checkpoint.flowState.flowIORequest: 
    Receive(sessions=[FlowSessionImpl(destination=O=Mock Company 2, L=London, C=GB, sourceSessionId=SessionId(toLong=-6575113948765145039))])
    Send(sessionToMessage={FlowSessionImpl(destination=O=Mock Company 2, L=London, C=GB, sourceSessionId=SessionId(toLong=-6575113948765145039))=768AED61FD2A58D74D7316731407E0600065080E1F3E6397EE4FA5AEFEE79295})
checkpoint.flowState.frozenFiber.hash: 
    B41AF4DFCF795CEC0E90DDAC35FD0D8BF3C56965BCAD333AC0FFA34B485EAA28
    BC5933FBB3E8EB10FCA687D3EA8870DE13F8558DA950738D281A0151AFAC1C3A
checkpoint.timestamp: 
    2023-01-31T07:42:02.190Z
    2023-01-31T07:42:02.193Z


 --- Transition of flow [3eeadfa8-1c38-42bb-b4b8-b8ed51367117] ---
  Timestamp: 2023-01-31T07:42:02.196Z
  Event: DoRemainingWork
  Actions: 
    SendMultiple(sendInitial=[], sendExisting=[SendExisting(peerParty=O=Mock Company 2, L=London, C=GB, message=ExistingSessionMessage(recipientSessionId=SessionId(toLong=6423518782607066838), payload=DataSessionMessage(payload=class net.corda.core.serialization.SerializedBytes)), deduplicationId=SenderDeduplicationId(deduplicationId=DeduplicationId(toString=N-D-6423518782607066838-7743118876219221019-2-0), senderUUID=7da18ab5-41ea-4720-99fc-208eae0a7847))])
    CreateTransaction
  Continuation: Resume(result=class kotlin.Unit)
  Diff between previous and next state:
isFlowResumed: 
    false
    true


 --- Transition of flow [3eeadfa8-1c38-42bb-b4b8-b8ed51367117] ---
  Timestamp: 2023-01-31T07:42:02.196Z
  Event: LeaveSubFlow
  Actions: 
    
  Continuation: ProcessEvents
  Diff between previous and next state:
checkpoint.checkpointState.subFlowStack: 
    [Inlined(flowClass=class net.corda.samples.obligation.flows.IOUTransferFlowResponder, subFlowVersion=CorDappFlow(platformVersion=11, corDappName=workflows-1.0, corDappHash=8C2322F3ACFF6CA8FE3E7F554352489D40710486D8ED144430A5784441E56717), isEnabledTimedFlow=false), Inlined(flowClass=class net.corda.samples.obligation.flows.IOUTransferFlowResponder$call$signedTransactionFlow$1, subFlowVersion=CoreFlow(platformVersion=11), isEnabledTimedFlow=false), Inlined(flowClass=class net.corda.core.flows.ReceiveTransactionFlow, subFlowVersion=CoreFlow(platformVersion=11), isEnabledTimedFlow=false), Inlined(flowClass=class net.corda.core.internal.ResolveTransactionsFlow, subFlowVersion=CoreFlow(platformVersion=11), isEnabledTimedFlow=false)]
    [Inlined(flowClass=class net.corda.samples.obligation.flows.IOUTransferFlowResponder, subFlowVersion=CorDappFlow(platformVersion=11, corDappName=workflows-1.0, corDappHash=8C2322F3ACFF6CA8FE3E7F554352489D40710486D8ED144430A5784441E56717), isEnabledTimedFlow=false), Inlined(flowClass=class net.corda.samples.obligation.flows.IOUTransferFlowResponder$call$signedTransactionFlow$1, subFlowVersion=CoreFlow(platformVersion=11), isEnabledTimedFlow=false), Inlined(flowClass=class net.corda.core.flows.ReceiveTransactionFlow, subFlowVersion=CoreFlow(platformVersion=11), isEnabledTimedFlow=false)]
checkpoint.timestamp: 
    2023-01-31T07:42:02.195Z
    2023-01-31T07:42:02.196Z


 --- Transition of flow [3eeadfa8-1c38-42bb-b4b8-b8ed51367117] ---
  Timestamp: 2023-01-31T07:42:02.198Z
  Event: LeaveSubFlow
  Actions: 
    
  Continuation: ProcessEvents
  Diff between previous and next state:
checkpoint.checkpointState.subFlowStack: 
    [Inlined(flowClass=class net.corda.samples.obligation.flows.IOUTransferFlowResponder, subFlowVersion=CorDappFlow(platformVersion=11, corDappName=workflows-1.0, corDappHash=8C2322F3ACFF6CA8FE3E7F554352489D40710486D8ED144430A5784441E56717), isEnabledTimedFlow=false), Inlined(flowClass=class net.corda.samples.obligation.flows.IOUTransferFlowResponder$call$signedTransactionFlow$1, subFlowVersion=CoreFlow(platformVersion=11), isEnabledTimedFlow=false), Inlined(flowClass=class net.corda.core.flows.ReceiveTransactionFlow, subFlowVersion=CoreFlow(platformVersion=11), isEnabledTimedFlow=false)]
    [Inlined(flowClass=class net.corda.samples.obligation.flows.IOUTransferFlowResponder, subFlowVersion=CorDappFlow(platformVersion=11, corDappName=workflows-1.0, corDappHash=8C2322F3ACFF6CA8FE3E7F554352489D40710486D8ED144430A5784441E56717), isEnabledTimedFlow=false), Inlined(flowClass=class net.corda.samples.obligation.flows.IOUTransferFlowResponder$call$signedTransactionFlow$1, subFlowVersion=CoreFlow(platformVersion=11), isEnabledTimedFlow=false)]
checkpoint.timestamp: 
    2023-01-31T07:42:02.196Z
    2023-01-31T07:42:02.198Z


 --- Transition of flow [3eeadfa8-1c38-42bb-b4b8-b8ed51367117] ---
  Timestamp: 2023-01-31T07:42:02.201Z
  Event: Suspend(ioRequest=Receive(sessions=[FlowSessionImpl(destination=O=Mock Company 2, L=London, C=GB, sourceSessionId=SessionId(toLong=-6575113948765145039))]), maySkipCheckpoint=false, fiber=8656BB889C0E7985D74A85587FB39DD23B273ED240E99DB3C1695195C63B1F13, currentStep=Starting)
  Actions: 
    PersistCheckpoint(id=[3eeadfa8-1c38-42bb-b4b8-b8ed51367117], checkpoint=Checkpoint(checkpointState=CheckpointState(invocationContext=InvocationContext(origin=Peer(party=O=Mock Company 2, L=London, C=GB), trace=Trace(invocationId=27120b1b-18c0-4a03-bb1a-2a89f1a6f7a8, timestamp: 2023-01-31T07:42:02.174Z, entityType: Invocation, sessionId=27120b1b-18c0-4a03-bb1a-2a89f1a6f7a8, timestamp: 2023-01-31T07:42:02.174Z, entityType: Session), actor=null, externalTrace=null, impersonatedActor=null, arguments=[], clientId=null), ourIdentity=O=Mock Company 1, L=London, C=GB, sessions={SessionId(toLong=-6575113948765145039)=Initiated(peerParty=O=Mock Company 2, L=London, C=GB, peerFlowInfo=FlowInfo(flowVersion=1, appName=<unknown>), receivedMessages=[], otherSideErrored=false, peerSinkSessionId=SessionId(toLong=6423518782607066838), deduplicationSeed=D-6423518782607066838-7743118876219221019)}, sessionsToBeClosed=[], subFlowStack=[Inlined(flowClass=class net.corda.samples.obligation.flows.IOUTransferFlowResponder, subFlowVersion=CorDappFlow(platformVersion=11, corDappName=workflows-1.0, corDappHash=8C2322F3ACFF6CA8FE3E7F554352489D40710486D8ED144430A5784441E56717), isEnabledTimedFlow=false), Inlined(flowClass=class net.corda.samples.obligation.flows.IOUTransferFlowResponder$call$signedTransactionFlow$1, subFlowVersion=CoreFlow(platformVersion=11), isEnabledTimedFlow=false)], numberOfSuspends=3, numberOfCommits=4), flowState=Started(flowIORequest=Receive(sessions=[FlowSessionImpl(destination=O=Mock Company 2, L=London, C=GB, sourceSessionId=SessionId(toLong=-6575113948765145039))]), frozenFiber=8656BB889C0E7985D74A85587FB39DD23B273ED240E99DB3C1695195C63B1F13), errorState=Clean, result=null, status=RUNNABLE, progressStep=Starting, flowIoRequest=Receive, compatible=true), isCheckpointUpdate=true)
    PersistDeduplicationFacts(deduplicationHandlers=[])
    CommitTransaction
    AcknowledgeMessages(deduplicationHandlers=[])
    ScheduleEvent(event=DoRemainingWork)
  Continuation: ProcessEvents
  Diff between previous and next state:
isFlowResumed: 
    true
    false
numberOfCommits: 
    3
    4
checkpoint.flowIoRequest: 
    Send
    Receive
checkpoint.checkpointState.numberOfCommits: 
    3
    4
checkpoint.checkpointState.numberOfSuspends: 
    2
    3
checkpoint.flowState.flowIORequest: 
    Send(sessionToMessage={FlowSessionImpl(destination=O=Mock Company 2, L=London, C=GB, sourceSessionId=SessionId(toLong=-6575113948765145039))=768AED61FD2A58D74D7316731407E0600065080E1F3E6397EE4FA5AEFEE79295})
    Receive(sessions=[FlowSessionImpl(destination=O=Mock Company 2, L=London, C=GB, sourceSessionId=SessionId(toLong=-6575113948765145039))])
checkpoint.flowState.frozenFiber.hash: 
    BC5933FBB3E8EB10FCA687D3EA8870DE13F8558DA950738D281A0151AFAC1C3A
    8656BB889C0E7985D74A85587FB39DD23B273ED240E99DB3C1695195C63B1F13
checkpoint.timestamp: 
    2023-01-31T07:42:02.198Z
    2023-01-31T07:42:02.200Z


 --- Transition of flow [3eeadfa8-1c38-42bb-b4b8-b8ed51367117] ---
  Timestamp: 2023-01-31T07:42:02.202Z
  Event: DoRemainingWork
  Actions: 
    
  Continuation: ProcessEvents
  Diff between previous and next state:
null

 --- Transition of flow [3eeadfa8-1c38-42bb-b4b8-b8ed51367117] ---
  Timestamp: 2023-01-31T07:42:03.039Z
  Event: DeliverSessionMessage(sessionMessage=ExistingSessionMessage(recipientSessionId=SessionId(toLong=-6575113948765145039), payload=net.corda.node.services.statemachine.EndSessionMessage@7d8b3e86), deduplicationHandler=net.corda.testing.node.internal.MockNodeMessagingService$InMemoryDeduplicationHandler@483f48f7, sender=O=Mock Company 2, L=London, C=GB)
  Actions: 
    ScheduleEvent(event=DoRemainingWork)
  Continuation: ProcessEvents
  Diff between previous and next state:
pendingDeduplicationHandlers: 
    []
    [net.corda.testing.node.internal.MockNodeMessagingService$InMemoryDeduplicationHandler@483f48f7]
checkpoint.checkpointState.sessions.SessionId(toLong=-6575113948765145039).receivedMessages.isEmpty: 
    true
    false
checkpoint.checkpointState.sessionsToBeClosed: 
    []
    [SessionId(toLong=-6575113948765145039)]
checkpoint.timestamp: 
    2023-01-31T07:42:02.202Z
    2023-01-31T07:42:03.038Z


 --- Transition of flow [3eeadfa8-1c38-42bb-b4b8-b8ed51367117] ---
  Timestamp: 2023-01-31T07:42:03.039Z
  Event: DoRemainingWork
  Actions: 
    CreateTransaction
    RemoveSessionBindings(sessionIds=[SessionId(toLong=-6575113948765145039)])
  Continuation: Throw(throwable=net.corda.core.flows.UnexpectedFlowEndException: Received session end message instead of a data session message. Mismatched send and receive?)
  Diff between previous and next state:
isFlowResumed: 
    false
    true
checkpoint.checkpointState.sessions.SessionId(toLong=-6575113948765145039): 
    Initiated(peerParty=O=Mock Company 2, L=London, C=GB, peerFlowInfo=FlowInfo(flowVersion=1, appName=<unknown>), receivedMessages=[net.corda.node.services.statemachine.EndSessionMessage@7d8b3e86], otherSideErrored=false, peerSinkSessionId=SessionId(toLong=6423518782607066838), deduplicationSeed=D-6423518782607066838-7743118876219221019)
    null
checkpoint.checkpointState.sessionsToBeClosed: 
    [SessionId(toLong=-6575113948765145039)]
    []
checkpoint.timestamp: 
    2023-01-31T07:42:03.038Z
    2023-01-31T07:42:03.039Z


 --- Transition of flow [3eeadfa8-1c38-42bb-b4b8-b8ed51367117] ---
  Timestamp: 2023-01-31T07:42:03.039Z
  Event: LeaveSubFlow
  Actions: 
    
  Continuation: ProcessEvents
  Diff between previous and next state:
checkpoint.checkpointState.subFlowStack: 
    [Inlined(flowClass=class net.corda.samples.obligation.flows.IOUTransferFlowResponder, subFlowVersion=CorDappFlow(platformVersion=11, corDappName=workflows-1.0, corDappHash=8C2322F3ACFF6CA8FE3E7F554352489D40710486D8ED144430A5784441E56717), isEnabledTimedFlow=false), Inlined(flowClass=class net.corda.samples.obligation.flows.IOUTransferFlowResponder$call$signedTransactionFlow$1, subFlowVersion=CoreFlow(platformVersion=11), isEnabledTimedFlow=false)]
    [Inlined(flowClass=class net.corda.samples.obligation.flows.IOUTransferFlowResponder, subFlowVersion=CorDappFlow(platformVersion=11, corDappName=workflows-1.0, corDappHash=8C2322F3ACFF6CA8FE3E7F554352489D40710486D8ED144430A5784441E56717), isEnabledTimedFlow=false)]


 --- Transition of flow [3eeadfa8-1c38-42bb-b4b8-b8ed51367117] ---
  Timestamp: 2023-01-31T07:42:03.050Z
  Event: Error(exception=net.corda.core.flows.UnexpectedFlowEndException: Received session end message instead of a data session message. Mismatched send and receive?, rollback=true)
  Actions: 
    RollbackTransaction
    ScheduleEvent(event=DoRemainingWork)
  Continuation: ProcessEvents
  Diff between previous and next state:
isFlowResumed: 
    true
    false
checkpoint.errorState: 
    Clean
    Errored(errors=[FlowError(errorId=-7034384230515119992, exception=net.corda.core.flows.UnexpectedFlowEndException: Received session end message instead of a data session message. Mismatched send and receive?)], propagatedIndex=0, propagating=false)
checkpoint.timestamp: 
    2023-01-31T07:42:03.039Z
    2023-01-31T07:42:03.041Z


 --- Transition of flow [3eeadfa8-1c38-42bb-b4b8-b8ed51367117] ---
  Timestamp: 2023-01-31T07:42:03.053Z
  Event: DoRemainingWork
  Actions: 
    
  Continuation: ProcessEvents
  Diff between previous and next state:
null

 --- Transition of flow [3eeadfa8-1c38-42bb-b4b8-b8ed51367117] ---
  Timestamp: 2023-01-31T07:42:03.054Z
  Event: StartErrorPropagation
  Actions: 
    ScheduleEvent(event=DoRemainingWork)
  Continuation: ProcessEvents
  Diff between previous and next state:
checkpoint.errorState.propagating: 
    false
    true
checkpoint.timestamp: 
    2023-01-31T07:42:03.041Z
    2023-01-31T07:42:03.053Z
 {fiber-id=10000019, flow-id=3eeadfa8-1c38-42bb-b4b8-b8ed51367117, invocation_id=27120b1b-18c0-4a03-bb1a-2a89f1a6f7a8, invocation_timestamp=2023-01-31T07:42:02.174Z, origin=O=Mock Company 2, L=London, C=GB, session_id=27120b1b-18c0-4a03-bb1a-2a89f1a6f7a8, session_timestamp=2023-01-31T07:42:02.174Z, thread-id=858, tx_id=05F53904B95FD46926599F5600C367C941BBC01A8D0CFA2E19655320620E9FB5}
[WARN ] 2023-01-31T07:42:03,074Z [Mock network] interceptors.DumpHistoryOnErrorInterceptor. - Flow [3eeadfa8-1c38-42bb-b4b8-b8ed51367117] error {fiber-id=10000019, flow-id=3eeadfa8-1c38-42bb-b4b8-b8ed51367117, invocation_id=27120b1b-18c0-4a03-bb1a-2a89f1a6f7a8, invocation_timestamp=2023-01-31T07:42:02.174Z, origin=O=Mock Company 2, L=London, C=GB, session_id=27120b1b-18c0-4a03-bb1a-2a89f1a6f7a8, session_timestamp=2023-01-31T07:42:02.174Z, thread-id=858, tx_id=05F53904B95FD46926599F5600C367C941BBC01A8D0CFA2E19655320620E9FB5}
net.corda.core.flows.UnexpectedFlowEndException: Received session end message instead of a data session message. Mismatched send and receive?
	at net.corda.node.services.statemachine.transitions.StartedFlowTransition.pollSessionMessages(StartedFlowTransition.kt:257) ~[corda-node-4.9.jar:?]
	at net.corda.node.services.statemachine.transitions.StartedFlowTransition.receiveFromSessionsTransition(StartedFlowTransition.kt:224) ~[corda-node-4.9.jar:?]
	at net.corda.node.services.statemachine.transitions.StartedFlowTransition.access$receiveFromSessionsTransition(StartedFlowTransition.kt:23) ~[corda-node-4.9.jar:?]
	at net.corda.node.services.statemachine.transitions.StartedFlowTransition$receiveTransition$1.invoke(StartedFlowTransition.kt:207) ~[corda-node-4.9.jar:?]
	at net.corda.node.services.statemachine.transitions.StartedFlowTransition$receiveTransition$1.invoke(StartedFlowTransition.kt:23) ~[corda-node-4.9.jar:?]
	at net.corda.node.services.statemachine.transitions.Transition$DefaultImpls.builder(Transition.kt:24) ~[corda-node-4.9.jar:?]
	at net.corda.node.services.statemachine.transitions.StartedFlowTransition.builder(StartedFlowTransition.kt:23) ~[corda-node-4.9.jar:?]
	at net.corda.node.services.statemachine.transitions.StartedFlowTransition.receiveTransition(StartedFlowTransition.kt:199) ~[corda-node-4.9.jar:?]
	at net.corda.node.services.statemachine.transitions.StartedFlowTransition.transition(StartedFlowTransition.kt:47) ~[corda-node-4.9.jar:?]
	at net.corda.node.services.statemachine.transitions.DoRemainingWorkTransition.cleanTransition(DoRemainingWorkTransition.kt:33) ~[corda-node-4.9.jar:?]
	at net.corda.node.services.statemachine.transitions.DoRemainingWorkTransition.transition(DoRemainingWorkTransition.kt:22) ~[corda-node-4.9.jar:?]
	at net.corda.node.services.statemachine.transitions.TopLevelTransition.transition(TopLevelTransition.kt:53) ~[corda-node-4.9.jar:?]
	at net.corda.node.services.statemachine.transitions.StateMachine.transition(StateMachine.kt:13) ~[corda-node-4.9.jar:?]
	at net.corda.node.services.statemachine.FlowStateMachineImpl.processEvent(FlowStateMachineImpl.kt:182) ~[corda-node-4.9.jar:?]
	at net.corda.node.services.statemachine.FlowStateMachineImpl.processEventsUntilFlowIsResumed(FlowStateMachineImpl.kt:220) ~[corda-node-4.9.jar:?]
	at net.corda.node.services.statemachine.FlowStateMachineImpl.suspend(FlowStateMachineImpl.kt:577) ~[corda-node-4.9.jar:?]
	at net.corda.node.services.statemachine.FlowSessionImpl.receive(FlowSessionImpl.kt:67) ~[corda-node-4.9.jar:?]
	at net.corda.node.services.statemachine.FlowSessionImpl.receive(FlowSessionImpl.kt:71) ~[corda-node-4.9.jar:?]
	at net.corda.core.flows.SignTransactionFlow.call(CollectSignaturesFlow.kt:351) ~[corda-core-4.9.jar:?]
	at net.corda.core.flows.SignTransactionFlow.call(CollectSignaturesFlow.kt:261) ~[corda-core-4.9.jar:?]
	at net.corda.node.services.statemachine.FlowStateMachineImpl.subFlow(FlowStateMachineImpl.kt:420) ~[corda-node-4.9.jar:?]
	at net.corda.core.flows.FlowLogic.subFlow(FlowLogic.kt:409) ~[corda-core-4.9.jar:?]
	at net.corda.samples.obligation.flows.IOUTransferFlowResponder.call(IOUTransferFlow.kt:123) ~[main/:?]
	at net.corda.samples.obligation.flows.IOUTransferFlowResponder.call(IOUTransferFlow.kt:114) ~[main/:?]
	at net.corda.node.services.statemachine.FlowStateMachineImpl.run(FlowStateMachineImpl.kt:349) ~[corda-node-4.9.jar:?]
	at net.corda.node.services.statemachine.FlowStateMachineImpl.run(FlowStateMachineImpl.kt:71) ~[corda-node-4.9.jar:?]
	at co.paralleluniverse.fibers.Fiber.run1(Fiber.java:1092) ~[quasar-core-0.7.10.jar:0.7.10]
	at co.paralleluniverse.fibers.Fiber.exec(Fiber.java:788) ~[quasar-core-0.7.10.jar:0.7.10]
	at co.paralleluniverse.fibers.RunnableFiberTask.doExec(RunnableFiberTask.java:100) ~[quasar-core-0.7.10.jar:0.7.10]
	at co.paralleluniverse.fibers.RunnableFiberTask.run(RunnableFiberTask.java:91) ~[quasar-core-0.7.10.jar:0.7.10]
	at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511) ~[?:1.8.0_202]
	at java.util.concurrent.FutureTask.run(FutureTask.java:266) ~[?:1.8.0_202]
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.access$201(ScheduledThreadPoolExecutor.java:180) ~[?:1.8.0_202]
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.run(ScheduledThreadPoolExecutor.java:293) ~[?:1.8.0_202]
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149) ~[?:1.8.0_202]
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624) ~[?:1.8.0_202]
	at net.corda.node.utilities.AffinityExecutor$ServiceAffinityExecutor$1$thread$1.run(AffinityExecutor.kt:63) ~[corda-node-4.9.jar:?]
[WARN ] 2023-01-31T07:42:03,075Z [Mock network] statemachine.ActionExecutorImpl. - Propagating error {fiber-id=10000019, flow-id=3eeadfa8-1c38-42bb-b4b8-b8ed51367117, invocation_id=27120b1b-18c0-4a03-bb1a-2a89f1a6f7a8, invocation_timestamp=2023-01-31T07:42:02.174Z, origin=O=Mock Company 2, L=London, C=GB, session_id=27120b1b-18c0-4a03-bb1a-2a89f1a6f7a8, session_timestamp=2023-01-31T07:42:02.174Z, thread-id=858, tx_id=05F53904B95FD46926599F5600C367C941BBC01A8D0CFA2E19655320620E9FB5}
[WARN ] 2023-01-31T07:42:03,098Z [Mock network] interceptors.DumpHistoryOnErrorInterceptor. - Flow [3eeadfa8-1c38-42bb-b4b8-b8ed51367117] errored, dumping all transitions:

 --- Transition of flow [3eeadfa8-1c38-42bb-b4b8-b8ed51367117] ---
  Timestamp: 2023-01-31T07:42:02.179Z
  Event: DoRemainingWork
  Actions: 
    CreateTransaction
    PersistCheckpoint(id=[3eeadfa8-1c38-42bb-b4b8-b8ed51367117], checkpoint=Checkpoint(checkpointState=CheckpointState(invocationContext=InvocationContext(origin=Peer(party=O=Mock Company 2, L=London, C=GB), trace=Trace(invocationId=27120b1b-18c0-4a03-bb1a-2a89f1a6f7a8, timestamp: 2023-01-31T07:42:02.174Z, entityType: Invocation, sessionId=27120b1b-18c0-4a03-bb1a-2a89f1a6f7a8, timestamp: 2023-01-31T07:42:02.174Z, entityType: Session), actor=null, externalTrace=null, impersonatedActor=null, arguments=[], clientId=null), ourIdentity=O=Mock Company 1, L=London, C=GB, sessions={}, sessionsToBeClosed=[], subFlowStack=[Inlined(flowClass=class net.corda.samples.obligation.flows.IOUTransferFlowResponder, subFlowVersion=CorDappFlow(platformVersion=11, corDappName=workflows-1.0, corDappHash=8C2322F3ACFF6CA8FE3E7F554352489D40710486D8ED144430A5784441E56717), isEnabledTimedFlow=false)], numberOfSuspends=0, numberOfCommits=1), flowState=Unstarted(flowStart=Initiated, frozenFlowLogic=F012A5D08C0D1B01D36A29718DFC89FBE0E724D4FFD498EADE967818D75D0F65), errorState=Clean, result=null, status=RUNNABLE, progressStep=null, flowIoRequest=null, compatible=true), isCheckpointUpdate=false)
    PersistDeduplicationFacts(deduplicationHandlers=[net.corda.testing.node.internal.MockNodeMessagingService$InMemoryDeduplicationHandler@573d4659])
    CommitTransaction
    AcknowledgeMessages(deduplicationHandlers=[net.corda.testing.node.internal.MockNodeMessagingService$InMemoryDeduplicationHandler@573d4659])
    SignalFlowHasStarted(flowId=[3eeadfa8-1c38-42bb-b4b8-b8ed51367117])
    SendExisting(peerParty=O=Mock Company 2, L=London, C=GB, message=ExistingSessionMessage(recipientSessionId=SessionId(toLong=6423518782607066838), payload=ConfirmSessionMessage(initiatedSessionId=SessionId(toLong=-6575113948765145039), initiatedFlowInfo=FlowInfo(flowVersion=1, appName=<unknown>))), deduplicationId=SenderDeduplicationId(deduplicationId=DeduplicationId(toString=N-D-6423518782607066838-7743118876219221019-0-0), senderUUID=7da18ab5-41ea-4720-99fc-208eae0a7847))
    CreateTransaction
  Continuation: Resume(result=null)
  Diff between previous and next state:
pendingDeduplicationHandlers: 
    [net.corda.testing.node.internal.MockNodeMessagingService$InMemoryDeduplicationHandler@573d4659]
    []
isFlowResumed: 
    false
    true
isAnyCheckpointPersisted: 
    false
    true
checkpoint.checkpointState.sessions.SessionId(toLong=-6575113948765145039): 
    null
    Initiated(peerParty=O=Mock Company 2, L=London, C=GB, peerFlowInfo=FlowInfo(flowVersion=1, appName=<unknown>), receivedMessages=[DataSessionMessage(payload=class net.corda.core.serialization.SerializedBytes)], otherSideErrored=false, peerSinkSessionId=SessionId(toLong=6423518782607066838), deduplicationSeed=D-6423518782607066838-7743118876219221019)
checkpoint.timestamp: 
    2023-01-31T07:42:02.175Z
    2023-01-31T07:42:02.176Z


 --- Transition of flow [3eeadfa8-1c38-42bb-b4b8-b8ed51367117] ---
  Timestamp: 2023-01-31T07:42:02.184Z
  Event: EnterSubFlow(subFlowClass=class net.corda.samples.obligation.flows.IOUTransferFlowResponder$call$signedTransactionFlow$1, subFlowVersion=CoreFlow(platformVersion=11), isEnabledTimedFlow=false)
  Actions: 
    
  Continuation: ProcessEvents
  Diff between previous and next state:
checkpoint.checkpointState.subFlowStack: 
    [Inlined(flowClass=class net.corda.samples.obligation.flows.IOUTransferFlowResponder, subFlowVersion=CorDappFlow(platformVersion=11, corDappName=workflows-1.0, corDappHash=8C2322F3ACFF6CA8FE3E7F554352489D40710486D8ED144430A5784441E56717), isEnabledTimedFlow=false)]
    [Inlined(flowClass=class net.corda.samples.obligation.flows.IOUTransferFlowResponder, subFlowVersion=CorDappFlow(platformVersion=11, corDappName=workflows-1.0, corDappHash=8C2322F3ACFF6CA8FE3E7F554352489D40710486D8ED144430A5784441E56717), isEnabledTimedFlow=false), Inlined(flowClass=class net.corda.samples.obligation.flows.IOUTransferFlowResponder$call$signedTransactionFlow$1, subFlowVersion=CoreFlow(platformVersion=11), isEnabledTimedFlow=false)]
checkpoint.timestamp: 
    2023-01-31T07:42:02.176Z
    2023-01-31T07:42:02.184Z


 --- Transition of flow [3eeadfa8-1c38-42bb-b4b8-b8ed51367117] ---
  Timestamp: 2023-01-31T07:42:02.184Z
  Event: EnterSubFlow(subFlowClass=class net.corda.core.flows.ReceiveTransactionFlow, subFlowVersion=CoreFlow(platformVersion=11), isEnabledTimedFlow=false)
  Actions: 
    
  Continuation: ProcessEvents
  Diff between previous and next state:
checkpoint.checkpointState.subFlowStack: 
    [Inlined(flowClass=class net.corda.samples.obligation.flows.IOUTransferFlowResponder, subFlowVersion=CorDappFlow(platformVersion=11, corDappName=workflows-1.0, corDappHash=8C2322F3ACFF6CA8FE3E7F554352489D40710486D8ED144430A5784441E56717), isEnabledTimedFlow=false), Inlined(flowClass=class net.corda.samples.obligation.flows.IOUTransferFlowResponder$call$signedTransactionFlow$1, subFlowVersion=CoreFlow(platformVersion=11), isEnabledTimedFlow=false)]
    [Inlined(flowClass=class net.corda.samples.obligation.flows.IOUTransferFlowResponder, subFlowVersion=CorDappFlow(platformVersion=11, corDappName=workflows-1.0, corDappHash=8C2322F3ACFF6CA8FE3E7F554352489D40710486D8ED144430A5784441E56717), isEnabledTimedFlow=false), Inlined(flowClass=class net.corda.samples.obligation.flows.IOUTransferFlowResponder$call$signedTransactionFlow$1, subFlowVersion=CoreFlow(platformVersion=11), isEnabledTimedFlow=false), Inlined(flowClass=class net.corda.core.flows.ReceiveTransactionFlow, subFlowVersion=CoreFlow(platformVersion=11), isEnabledTimedFlow=false)]


 --- Transition of flow [3eeadfa8-1c38-42bb-b4b8-b8ed51367117] ---
  Timestamp: 2023-01-31T07:42:02.189Z
  Event: Suspend(ioRequest=Receive(sessions=[FlowSessionImpl(destination=O=Mock Company 2, L=London, C=GB, sourceSessionId=SessionId(toLong=-6575113948765145039))]), maySkipCheckpoint=false, fiber=B41AF4DFCF795CEC0E90DDAC35FD0D8BF3C56965BCAD333AC0FFA34B485EAA28, currentStep=Starting)
  Actions: 
    PersistCheckpoint(id=[3eeadfa8-1c38-42bb-b4b8-b8ed51367117], checkpoint=Checkpoint(checkpointState=CheckpointState(invocationContext=InvocationContext(origin=Peer(party=O=Mock Company 2, L=London, C=GB), trace=Trace(invocationId=27120b1b-18c0-4a03-bb1a-2a89f1a6f7a8, timestamp: 2023-01-31T07:42:02.174Z, entityType: Invocation, sessionId=27120b1b-18c0-4a03-bb1a-2a89f1a6f7a8, timestamp: 2023-01-31T07:42:02.174Z, entityType: Session), actor=null, externalTrace=null, impersonatedActor=null, arguments=[], clientId=null), ourIdentity=O=Mock Company 1, L=London, C=GB, sessions={SessionId(toLong=-6575113948765145039)=Initiated(peerParty=O=Mock Company 2, L=London, C=GB, peerFlowInfo=FlowInfo(flowVersion=1, appName=<unknown>), receivedMessages=[DataSessionMessage(payload=class net.corda.core.serialization.SerializedBytes)], otherSideErrored=false, peerSinkSessionId=SessionId(toLong=6423518782607066838), deduplicationSeed=D-6423518782607066838-7743118876219221019)}, sessionsToBeClosed=[], subFlowStack=[Inlined(flowClass=class net.corda.samples.obligation.flows.IOUTransferFlowResponder, subFlowVersion=CorDappFlow(platformVersion=11, corDappName=workflows-1.0, corDappHash=8C2322F3ACFF6CA8FE3E7F554352489D40710486D8ED144430A5784441E56717), isEnabledTimedFlow=false), Inlined(flowClass=class net.corda.samples.obligation.flows.IOUTransferFlowResponder$call$signedTransactionFlow$1, subFlowVersion=CoreFlow(platformVersion=11), isEnabledTimedFlow=false), Inlined(flowClass=class net.corda.core.flows.ReceiveTransactionFlow, subFlowVersion=CoreFlow(platformVersion=11), isEnabledTimedFlow=false)], numberOfSuspends=1, numberOfCommits=2), flowState=Started(flowIORequest=Receive(sessions=[FlowSessionImpl(destination=O=Mock Company 2, L=London, C=GB, sourceSessionId=SessionId(toLong=-6575113948765145039))]), frozenFiber=B41AF4DFCF795CEC0E90DDAC35FD0D8BF3C56965BCAD333AC0FFA34B485EAA28), errorState=Clean, result=null, status=RUNNABLE, progressStep=Starting, flowIoRequest=Receive, compatible=true), isCheckpointUpdate=true)
    PersistDeduplicationFacts(deduplicationHandlers=[])
    CommitTransaction
    AcknowledgeMessages(deduplicationHandlers=[])
    ScheduleEvent(event=DoRemainingWork)
  Continuation: ProcessEvents
  Diff between previous and next state:
isFlowResumed: 
    true
    false
numberOfCommits: 
    0
    2
checkpoint.progressStep: 
    null
    Starting
checkpoint.flowIoRequest: 
    null
    Receive
checkpoint.checkpointState.numberOfCommits: 
    1
    2
checkpoint.checkpointState.numberOfSuspends: 
    0
    1
checkpoint.flowState: 
    Unstarted(flowStart=Initiated, frozenFlowLogic=F012A5D08C0D1B01D36A29718DFC89FBE0E724D4FFD498EADE967818D75D0F65)
    Started(flowIORequest=Receive(sessions=[FlowSessionImpl(destination=O=Mock Company 2, L=London, C=GB, sourceSessionId=SessionId(toLong=-6575113948765145039))]), frozenFiber=B41AF4DFCF795CEC0E90DDAC35FD0D8BF3C56965BCAD333AC0FFA34B485EAA28)
checkpoint.timestamp: 
    2023-01-31T07:42:02.184Z
    2023-01-31T07:42:02.187Z


 --- Transition of flow [3eeadfa8-1c38-42bb-b4b8-b8ed51367117] ---
  Timestamp: 2023-01-31T07:42:02.189Z
  Event: DoRemainingWork
  Actions: 
    CreateTransaction
  Continuation: Resume(result=class java.util.LinkedHashMap)
  Diff between previous and next state:
isFlowResumed: 
    false
    true
checkpoint.checkpointState.sessions.SessionId(toLong=-6575113948765145039).receivedMessages.isEmpty: 
    false
    true
checkpoint.timestamp: 
    2023-01-31T07:42:02.187Z
    2023-01-31T07:42:02.189Z


 --- Transition of flow [3eeadfa8-1c38-42bb-b4b8-b8ed51367117] ---
  Timestamp: 2023-01-31T07:42:02.190Z
  Event: EnterSubFlow(subFlowClass=class net.corda.core.internal.ResolveTransactionsFlow, subFlowVersion=CoreFlow(platformVersion=11), isEnabledTimedFlow=false)
  Actions: 
    
  Continuation: ProcessEvents
  Diff between previous and next state:
checkpoint.checkpointState.subFlowStack: 
    [Inlined(flowClass=class net.corda.samples.obligation.flows.IOUTransferFlowResponder, subFlowVersion=CorDappFlow(platformVersion=11, corDappName=workflows-1.0, corDappHash=8C2322F3ACFF6CA8FE3E7F554352489D40710486D8ED144430A5784441E56717), isEnabledTimedFlow=false), Inlined(flowClass=class net.corda.samples.obligation.flows.IOUTransferFlowResponder$call$signedTransactionFlow$1, subFlowVersion=CoreFlow(platformVersion=11), isEnabledTimedFlow=false), Inlined(flowClass=class net.corda.core.flows.ReceiveTransactionFlow, subFlowVersion=CoreFlow(platformVersion=11), isEnabledTimedFlow=false)]
    [Inlined(flowClass=class net.corda.samples.obligation.flows.IOUTransferFlowResponder, subFlowVersion=CorDappFlow(platformVersion=11, corDappName=workflows-1.0, corDappHash=8C2322F3ACFF6CA8FE3E7F554352489D40710486D8ED144430A5784441E56717), isEnabledTimedFlow=false), Inlined(flowClass=class net.corda.samples.obligation.flows.IOUTransferFlowResponder$call$signedTransactionFlow$1, subFlowVersion=CoreFlow(platformVersion=11), isEnabledTimedFlow=false), Inlined(flowClass=class net.corda.core.flows.ReceiveTransactionFlow, subFlowVersion=CoreFlow(platformVersion=11), isEnabledTimedFlow=false), Inlined(flowClass=class net.corda.core.internal.ResolveTransactionsFlow, subFlowVersion=CoreFlow(platformVersion=11), isEnabledTimedFlow=false)]
checkpoint.timestamp: 
    2023-01-31T07:42:02.189Z
    2023-01-31T07:42:02.190Z


 --- Transition of flow [3eeadfa8-1c38-42bb-b4b8-b8ed51367117] ---
  Timestamp: 2023-01-31T07:42:02.190Z
  Event: EnterSubFlow(subFlowClass=class net.corda.core.internal.FetchAttachmentsFlow, subFlowVersion=CoreFlow(platformVersion=11), isEnabledTimedFlow=false)
  Actions: 
    
  Continuation: ProcessEvents
  Diff between previous and next state:
checkpoint.checkpointState.subFlowStack: 
    [Inlined(flowClass=class net.corda.samples.obligation.flows.IOUTransferFlowResponder, subFlowVersion=CorDappFlow(platformVersion=11, corDappName=workflows-1.0, corDappHash=8C2322F3ACFF6CA8FE3E7F554352489D40710486D8ED144430A5784441E56717), isEnabledTimedFlow=false), Inlined(flowClass=class net.corda.samples.obligation.flows.IOUTransferFlowResponder$call$signedTransactionFlow$1, subFlowVersion=CoreFlow(platformVersion=11), isEnabledTimedFlow=false), Inlined(flowClass=class net.corda.core.flows.ReceiveTransactionFlow, subFlowVersion=CoreFlow(platformVersion=11), isEnabledTimedFlow=false), Inlined(flowClass=class net.corda.core.internal.ResolveTransactionsFlow, subFlowVersion=CoreFlow(platformVersion=11), isEnabledTimedFlow=false)]
    [Inlined(flowClass=class net.corda.samples.obligation.flows.IOUTransferFlowResponder, subFlowVersion=CorDappFlow(platformVersion=11, corDappName=workflows-1.0, corDappHash=8C2322F3ACFF6CA8FE3E7F554352489D40710486D8ED144430A5784441E56717), isEnabledTimedFlow=false), Inlined(flowClass=class net.corda.samples.obligation.flows.IOUTransferFlowResponder$call$signedTransactionFlow$1, subFlowVersion=CoreFlow(platformVersion=11), isEnabledTimedFlow=false), Inlined(flowClass=class net.corda.core.flows.ReceiveTransactionFlow, subFlowVersion=CoreFlow(platformVersion=11), isEnabledTimedFlow=false), Inlined(flowClass=class net.corda.core.internal.ResolveTransactionsFlow, subFlowVersion=CoreFlow(platformVersion=11), isEnabledTimedFlow=false), Inlined(flowClass=class net.corda.core.internal.FetchAttachmentsFlow, subFlowVersion=CoreFlow(platformVersion=11), isEnabledTimedFlow=false)]


 --- Transition of flow [3eeadfa8-1c38-42bb-b4b8-b8ed51367117] ---
  Timestamp: 2023-01-31T07:42:02.190Z
  Event: LeaveSubFlow
  Actions: 
    
  Continuation: ProcessEvents
  Diff between previous and next state:
checkpoint.checkpointState.subFlowStack: 
    [Inlined(flowClass=class net.corda.samples.obligation.flows.IOUTransferFlowResponder, subFlowVersion=CorDappFlow(platformVersion=11, corDappName=workflows-1.0, corDappHash=8C2322F3ACFF6CA8FE3E7F554352489D40710486D8ED144430A5784441E56717), isEnabledTimedFlow=false), Inlined(flowClass=class net.corda.samples.obligation.flows.IOUTransferFlowResponder$call$signedTransactionFlow$1, subFlowVersion=CoreFlow(platformVersion=11), isEnabledTimedFlow=false), Inlined(flowClass=class net.corda.core.flows.ReceiveTransactionFlow, subFlowVersion=CoreFlow(platformVersion=11), isEnabledTimedFlow=false), Inlined(flowClass=class net.corda.core.internal.ResolveTransactionsFlow, subFlowVersion=CoreFlow(platformVersion=11), isEnabledTimedFlow=false), Inlined(flowClass=class net.corda.core.internal.FetchAttachmentsFlow, subFlowVersion=CoreFlow(platformVersion=11), isEnabledTimedFlow=false)]
    [Inlined(flowClass=class net.corda.samples.obligation.flows.IOUTransferFlowResponder, subFlowVersion=CorDappFlow(platformVersion=11, corDappName=workflows-1.0, corDappHash=8C2322F3ACFF6CA8FE3E7F554352489D40710486D8ED144430A5784441E56717), isEnabledTimedFlow=false), Inlined(flowClass=class net.corda.samples.obligation.flows.IOUTransferFlowResponder$call$signedTransactionFlow$1, subFlowVersion=CoreFlow(platformVersion=11), isEnabledTimedFlow=false), Inlined(flowClass=class net.corda.core.flows.ReceiveTransactionFlow, subFlowVersion=CoreFlow(platformVersion=11), isEnabledTimedFlow=false), Inlined(flowClass=class net.corda.core.internal.ResolveTransactionsFlow, subFlowVersion=CoreFlow(platformVersion=11), isEnabledTimedFlow=false)]


 --- Transition of flow [3eeadfa8-1c38-42bb-b4b8-b8ed51367117] ---
  Timestamp: 2023-01-31T07:42:02.190Z
  Event: EnterSubFlow(subFlowClass=class net.corda.core.internal.FetchNetworkParametersFlow, subFlowVersion=CoreFlow(platformVersion=11), isEnabledTimedFlow=false)
  Actions: 
    
  Continuation: ProcessEvents
  Diff between previous and next state:
checkpoint.checkpointState.subFlowStack: 
    [Inlined(flowClass=class net.corda.samples.obligation.flows.IOUTransferFlowResponder, subFlowVersion=CorDappFlow(platformVersion=11, corDappName=workflows-1.0, corDappHash=8C2322F3ACFF6CA8FE3E7F554352489D40710486D8ED144430A5784441E56717), isEnabledTimedFlow=false), Inlined(flowClass=class net.corda.samples.obligation.flows.IOUTransferFlowResponder$call$signedTransactionFlow$1, subFlowVersion=CoreFlow(platformVersion=11), isEnabledTimedFlow=false), Inlined(flowClass=class net.corda.core.flows.ReceiveTransactionFlow, subFlowVersion=CoreFlow(platformVersion=11), isEnabledTimedFlow=false), Inlined(flowClass=class net.corda.core.internal.ResolveTransactionsFlow, subFlowVersion=CoreFlow(platformVersion=11), isEnabledTimedFlow=false)]
    [Inlined(flowClass=class net.corda.samples.obligation.flows.IOUTransferFlowResponder, subFlowVersion=CorDappFlow(platformVersion=11, corDappName=workflows-1.0, corDappHash=8C2322F3ACFF6CA8FE3E7F554352489D40710486D8ED144430A5784441E56717), isEnabledTimedFlow=false), Inlined(flowClass=class net.corda.samples.obligation.flows.IOUTransferFlowResponder$call$signedTransactionFlow$1, subFlowVersion=CoreFlow(platformVersion=11), isEnabledTimedFlow=false), Inlined(flowClass=class net.corda.core.flows.ReceiveTransactionFlow, subFlowVersion=CoreFlow(platformVersion=11), isEnabledTimedFlow=false), Inlined(flowClass=class net.corda.core.internal.ResolveTransactionsFlow, subFlowVersion=CoreFlow(platformVersion=11), isEnabledTimedFlow=false), Inlined(flowClass=class net.corda.core.internal.FetchNetworkParametersFlow, subFlowVersion=CoreFlow(platformVersion=11), isEnabledTimedFlow=false)]


 --- Transition of flow [3eeadfa8-1c38-42bb-b4b8-b8ed51367117] ---
  Timestamp: 2023-01-31T07:42:02.190Z
  Event: LeaveSubFlow
  Actions: 
    
  Continuation: ProcessEvents
  Diff between previous and next state:
checkpoint.checkpointState.subFlowStack: 
    [Inlined(flowClass=class net.corda.samples.obligation.flows.IOUTransferFlowResponder, subFlowVersion=CorDappFlow(platformVersion=11, corDappName=workflows-1.0, corDappHash=8C2322F3ACFF6CA8FE3E7F554352489D40710486D8ED144430A5784441E56717), isEnabledTimedFlow=false), Inlined(flowClass=class net.corda.samples.obligation.flows.IOUTransferFlowResponder$call$signedTransactionFlow$1, subFlowVersion=CoreFlow(platformVersion=11), isEnabledTimedFlow=false), Inlined(flowClass=class net.corda.core.flows.ReceiveTransactionFlow, subFlowVersion=CoreFlow(platformVersion=11), isEnabledTimedFlow=false), Inlined(flowClass=class net.corda.core.internal.ResolveTransactionsFlow, subFlowVersion=CoreFlow(platformVersion=11), isEnabledTimedFlow=false), Inlined(flowClass=class net.corda.core.internal.FetchNetworkParametersFlow, subFlowVersion=CoreFlow(platformVersion=11), isEnabledTimedFlow=false)]
    [Inlined(flowClass=class net.corda.samples.obligation.flows.IOUTransferFlowResponder, subFlowVersion=CorDappFlow(platformVersion=11, corDappName=workflows-1.0, corDappHash=8C2322F3ACFF6CA8FE3E7F554352489D40710486D8ED144430A5784441E56717), isEnabledTimedFlow=false), Inlined(flowClass=class net.corda.samples.obligation.flows.IOUTransferFlowResponder$call$signedTransactionFlow$1, subFlowVersion=CoreFlow(platformVersion=11), isEnabledTimedFlow=false), Inlined(flowClass=class net.corda.core.flows.ReceiveTransactionFlow, subFlowVersion=CoreFlow(platformVersion=11), isEnabledTimedFlow=false), Inlined(flowClass=class net.corda.core.internal.ResolveTransactionsFlow, subFlowVersion=CoreFlow(platformVersion=11), isEnabledTimedFlow=false)]


 --- Transition of flow [3eeadfa8-1c38-42bb-b4b8-b8ed51367117] ---
  Timestamp: 2023-01-31T07:42:02.195Z
  Event: Suspend(ioRequest=Send(sessionToMessage={FlowSessionImpl(destination=O=Mock Company 2, L=London, C=GB, sourceSessionId=SessionId(toLong=-6575113948765145039))=768AED61FD2A58D74D7316731407E0600065080E1F3E6397EE4FA5AEFEE79295}), maySkipCheckpoint=false, fiber=BC5933FBB3E8EB10FCA687D3EA8870DE13F8558DA950738D281A0151AFAC1C3A, currentStep=Starting)
  Actions: 
    PersistCheckpoint(id=[3eeadfa8-1c38-42bb-b4b8-b8ed51367117], checkpoint=Checkpoint(checkpointState=CheckpointState(invocationContext=InvocationContext(origin=Peer(party=O=Mock Company 2, L=London, C=GB), trace=Trace(invocationId=27120b1b-18c0-4a03-bb1a-2a89f1a6f7a8, timestamp: 2023-01-31T07:42:02.174Z, entityType: Invocation, sessionId=27120b1b-18c0-4a03-bb1a-2a89f1a6f7a8, timestamp: 2023-01-31T07:42:02.174Z, entityType: Session), actor=null, externalTrace=null, impersonatedActor=null, arguments=[], clientId=null), ourIdentity=O=Mock Company 1, L=London, C=GB, sessions={SessionId(toLong=-6575113948765145039)=Initiated(peerParty=O=Mock Company 2, L=London, C=GB, peerFlowInfo=FlowInfo(flowVersion=1, appName=<unknown>), receivedMessages=[], otherSideErrored=false, peerSinkSessionId=SessionId(toLong=6423518782607066838), deduplicationSeed=D-6423518782607066838-7743118876219221019)}, sessionsToBeClosed=[], subFlowStack=[Inlined(flowClass=class net.corda.samples.obligation.flows.IOUTransferFlowResponder, subFlowVersion=CorDappFlow(platformVersion=11, corDappName=workflows-1.0, corDappHash=8C2322F3ACFF6CA8FE3E7F554352489D40710486D8ED144430A5784441E56717), isEnabledTimedFlow=false), Inlined(flowClass=class net.corda.samples.obligation.flows.IOUTransferFlowResponder$call$signedTransactionFlow$1, subFlowVersion=CoreFlow(platformVersion=11), isEnabledTimedFlow=false), Inlined(flowClass=class net.corda.core.flows.ReceiveTransactionFlow, subFlowVersion=CoreFlow(platformVersion=11), isEnabledTimedFlow=false), Inlined(flowClass=class net.corda.core.internal.ResolveTransactionsFlow, subFlowVersion=CoreFlow(platformVersion=11), isEnabledTimedFlow=false)], numberOfSuspends=2, numberOfCommits=3), flowState=Started(flowIORequest=Send(sessionToMessage={FlowSessionImpl(destination=O=Mock Company 2, L=London, C=GB, sourceSessionId=SessionId(toLong=-6575113948765145039))=768AED61FD2A58D74D7316731407E0600065080E1F3E6397EE4FA5AEFEE79295}), frozenFiber=BC5933FBB3E8EB10FCA687D3EA8870DE13F8558DA950738D281A0151AFAC1C3A), errorState=Clean, result=null, status=RUNNABLE, progressStep=Starting, flowIoRequest=Send, compatible=true), isCheckpointUpdate=true)
    PersistDeduplicationFacts(deduplicationHandlers=[])
    CommitTransaction
    AcknowledgeMessages(deduplicationHandlers=[])
    ScheduleEvent(event=DoRemainingWork)
  Continuation: ProcessEvents
  Diff between previous and next state:
isFlowResumed: 
    true
    false
numberOfCommits: 
    2
    3
checkpoint.flowIoRequest: 
    Receive
    Send
checkpoint.checkpointState.numberOfCommits: 
    2
    3
checkpoint.checkpointState.numberOfSuspends: 
    1
    2
checkpoint.flowState.flowIORequest: 
    Receive(sessions=[FlowSessionImpl(destination=O=Mock Company 2, L=London, C=GB, sourceSessionId=SessionId(toLong=-6575113948765145039))])
    Send(sessionToMessage={FlowSessionImpl(destination=O=Mock Company 2, L=London, C=GB, sourceSessionId=SessionId(toLong=-6575113948765145039))=768AED61FD2A58D74D7316731407E0600065080E1F3E6397EE4FA5AEFEE79295})
checkpoint.flowState.frozenFiber.hash: 
    B41AF4DFCF795CEC0E90DDAC35FD0D8BF3C56965BCAD333AC0FFA34B485EAA28
    BC5933FBB3E8EB10FCA687D3EA8870DE13F8558DA950738D281A0151AFAC1C3A
checkpoint.timestamp: 
    2023-01-31T07:42:02.190Z
    2023-01-31T07:42:02.193Z


 --- Transition of flow [3eeadfa8-1c38-42bb-b4b8-b8ed51367117] ---
  Timestamp: 2023-01-31T07:42:02.196Z
  Event: DoRemainingWork
  Actions: 
    SendMultiple(sendInitial=[], sendExisting=[SendExisting(peerParty=O=Mock Company 2, L=London, C=GB, message=ExistingSessionMessage(recipientSessionId=SessionId(toLong=6423518782607066838), payload=DataSessionMessage(payload=class net.corda.core.serialization.SerializedBytes)), deduplicationId=SenderDeduplicationId(deduplicationId=DeduplicationId(toString=N-D-6423518782607066838-7743118876219221019-2-0), senderUUID=7da18ab5-41ea-4720-99fc-208eae0a7847))])
    CreateTransaction
  Continuation: Resume(result=class kotlin.Unit)
  Diff between previous and next state:
isFlowResumed: 
    false
    true


 --- Transition of flow [3eeadfa8-1c38-42bb-b4b8-b8ed51367117] ---
  Timestamp: 2023-01-31T07:42:02.196Z
  Event: LeaveSubFlow
  Actions: 
    
  Continuation: ProcessEvents
  Diff between previous and next state:
checkpoint.checkpointState.subFlowStack: 
    [Inlined(flowClass=class net.corda.samples.obligation.flows.IOUTransferFlowResponder, subFlowVersion=CorDappFlow(platformVersion=11, corDappName=workflows-1.0, corDappHash=8C2322F3ACFF6CA8FE3E7F554352489D40710486D8ED144430A5784441E56717), isEnabledTimedFlow=false), Inlined(flowClass=class net.corda.samples.obligation.flows.IOUTransferFlowResponder$call$signedTransactionFlow$1, subFlowVersion=CoreFlow(platformVersion=11), isEnabledTimedFlow=false), Inlined(flowClass=class net.corda.core.flows.ReceiveTransactionFlow, subFlowVersion=CoreFlow(platformVersion=11), isEnabledTimedFlow=false), Inlined(flowClass=class net.corda.core.internal.ResolveTransactionsFlow, subFlowVersion=CoreFlow(platformVersion=11), isEnabledTimedFlow=false)]
    [Inlined(flowClass=class net.corda.samples.obligation.flows.IOUTransferFlowResponder, subFlowVersion=CorDappFlow(platformVersion=11, corDappName=workflows-1.0, corDappHash=8C2322F3ACFF6CA8FE3E7F554352489D40710486D8ED144430A5784441E56717), isEnabledTimedFlow=false), Inlined(flowClass=class net.corda.samples.obligation.flows.IOUTransferFlowResponder$call$signedTransactionFlow$1, subFlowVersion=CoreFlow(platformVersion=11), isEnabledTimedFlow=false), Inlined(flowClass=class net.corda.core.flows.ReceiveTransactionFlow, subFlowVersion=CoreFlow(platformVersion=11), isEnabledTimedFlow=false)]
checkpoint.timestamp: 
    2023-01-31T07:42:02.195Z
    2023-01-31T07:42:02.196Z


 --- Transition of flow [3eeadfa8-1c38-42bb-b4b8-b8ed51367117] ---
  Timestamp: 2023-01-31T07:42:02.198Z
  Event: LeaveSubFlow
  Actions: 
    
  Continuation: ProcessEvents
  Diff between previous and next state:
checkpoint.checkpointState.subFlowStack: 
    [Inlined(flowClass=class net.corda.samples.obligation.flows.IOUTransferFlowResponder, subFlowVersion=CorDappFlow(platformVersion=11, corDappName=workflows-1.0, corDappHash=8C2322F3ACFF6CA8FE3E7F554352489D40710486D8ED144430A5784441E56717), isEnabledTimedFlow=false), Inlined(flowClass=class net.corda.samples.obligation.flows.IOUTransferFlowResponder$call$signedTransactionFlow$1, subFlowVersion=CoreFlow(platformVersion=11), isEnabledTimedFlow=false), Inlined(flowClass=class net.corda.core.flows.ReceiveTransactionFlow, subFlowVersion=CoreFlow(platformVersion=11), isEnabledTimedFlow=false)]
    [Inlined(flowClass=class net.corda.samples.obligation.flows.IOUTransferFlowResponder, subFlowVersion=CorDappFlow(platformVersion=11, corDappName=workflows-1.0, corDappHash=8C2322F3ACFF6CA8FE3E7F554352489D40710486D8ED144430A5784441E56717), isEnabledTimedFlow=false), Inlined(flowClass=class net.corda.samples.obligation.flows.IOUTransferFlowResponder$call$signedTransactionFlow$1, subFlowVersion=CoreFlow(platformVersion=11), isEnabledTimedFlow=false)]
checkpoint.timestamp: 
    2023-01-31T07:42:02.196Z
    2023-01-31T07:42:02.198Z


 --- Transition of flow [3eeadfa8-1c38-42bb-b4b8-b8ed51367117] ---
  Timestamp: 2023-01-31T07:42:02.201Z
  Event: Suspend(ioRequest=Receive(sessions=[FlowSessionImpl(destination=O=Mock Company 2, L=London, C=GB, sourceSessionId=SessionId(toLong=-6575113948765145039))]), maySkipCheckpoint=false, fiber=8656BB889C0E7985D74A85587FB39DD23B273ED240E99DB3C1695195C63B1F13, currentStep=Starting)
  Actions: 
    PersistCheckpoint(id=[3eeadfa8-1c38-42bb-b4b8-b8ed51367117], checkpoint=Checkpoint(checkpointState=CheckpointState(invocationContext=InvocationContext(origin=Peer(party=O=Mock Company 2, L=London, C=GB), trace=Trace(invocationId=27120b1b-18c0-4a03-bb1a-2a89f1a6f7a8, timestamp: 2023-01-31T07:42:02.174Z, entityType: Invocation, sessionId=27120b1b-18c0-4a03-bb1a-2a89f1a6f7a8, timestamp: 2023-01-31T07:42:02.174Z, entityType: Session), actor=null, externalTrace=null, impersonatedActor=null, arguments=[], clientId=null), ourIdentity=O=Mock Company 1, L=London, C=GB, sessions={SessionId(toLong=-6575113948765145039)=Initiated(peerParty=O=Mock Company 2, L=London, C=GB, peerFlowInfo=FlowInfo(flowVersion=1, appName=<unknown>), receivedMessages=[], otherSideErrored=false, peerSinkSessionId=SessionId(toLong=6423518782607066838), deduplicationSeed=D-6423518782607066838-7743118876219221019)}, sessionsToBeClosed=[], subFlowStack=[Inlined(flowClass=class net.corda.samples.obligation.flows.IOUTransferFlowResponder, subFlowVersion=CorDappFlow(platformVersion=11, corDappName=workflows-1.0, corDappHash=8C2322F3ACFF6CA8FE3E7F554352489D40710486D8ED144430A5784441E56717), isEnabledTimedFlow=false), Inlined(flowClass=class net.corda.samples.obligation.flows.IOUTransferFlowResponder$call$signedTransactionFlow$1, subFlowVersion=CoreFlow(platformVersion=11), isEnabledTimedFlow=false)], numberOfSuspends=3, numberOfCommits=4), flowState=Started(flowIORequest=Receive(sessions=[FlowSessionImpl(destination=O=Mock Company 2, L=London, C=GB, sourceSessionId=SessionId(toLong=-6575113948765145039))]), frozenFiber=8656BB889C0E7985D74A85587FB39DD23B273ED240E99DB3C1695195C63B1F13), errorState=Clean, result=null, status=RUNNABLE, progressStep=Starting, flowIoRequest=Receive, compatible=true), isCheckpointUpdate=true)
    PersistDeduplicationFacts(deduplicationHandlers=[])
    CommitTransaction
    AcknowledgeMessages(deduplicationHandlers=[])
    ScheduleEvent(event=DoRemainingWork)
  Continuation: ProcessEvents
  Diff between previous and next state:
isFlowResumed: 
    true
    false
numberOfCommits: 
    3
    4
checkpoint.flowIoRequest: 
    Send
    Receive
checkpoint.checkpointState.numberOfCommits: 
    3
    4
checkpoint.checkpointState.numberOfSuspends: 
    2
    3
checkpoint.flowState.flowIORequest: 
    Send(sessionToMessage={FlowSessionImpl(destination=O=Mock Company 2, L=London, C=GB, sourceSessionId=SessionId(toLong=-6575113948765145039))=768AED61FD2A58D74D7316731407E0600065080E1F3E6397EE4FA5AEFEE79295})
    Receive(sessions=[FlowSessionImpl(destination=O=Mock Company 2, L=London, C=GB, sourceSessionId=SessionId(toLong=-6575113948765145039))])
checkpoint.flowState.frozenFiber.hash: 
    BC5933FBB3E8EB10FCA687D3EA8870DE13F8558DA950738D281A0151AFAC1C3A
    8656BB889C0E7985D74A85587FB39DD23B273ED240E99DB3C1695195C63B1F13
checkpoint.timestamp: 
    2023-01-31T07:42:02.198Z
    2023-01-31T07:42:02.200Z


 --- Transition of flow [3eeadfa8-1c38-42bb-b4b8-b8ed51367117] ---
  Timestamp: 2023-01-31T07:42:02.202Z
  Event: DoRemainingWork
  Actions: 
    
  Continuation: ProcessEvents
  Diff between previous and next state:
null

 --- Transition of flow [3eeadfa8-1c38-42bb-b4b8-b8ed51367117] ---
  Timestamp: 2023-01-31T07:42:03.039Z
  Event: DeliverSessionMessage(sessionMessage=ExistingSessionMessage(recipientSessionId=SessionId(toLong=-6575113948765145039), payload=net.corda.node.services.statemachine.EndSessionMessage@7d8b3e86), deduplicationHandler=net.corda.testing.node.internal.MockNodeMessagingService$InMemoryDeduplicationHandler@483f48f7, sender=O=Mock Company 2, L=London, C=GB)
  Actions: 
    ScheduleEvent(event=DoRemainingWork)
  Continuation: ProcessEvents
  Diff between previous and next state:
pendingDeduplicationHandlers: 
    []
    [net.corda.testing.node.internal.MockNodeMessagingService$InMemoryDeduplicationHandler@483f48f7]
checkpoint.checkpointState.sessions.SessionId(toLong=-6575113948765145039).receivedMessages.isEmpty: 
    true
    false
checkpoint.checkpointState.sessionsToBeClosed: 
    []
    [SessionId(toLong=-6575113948765145039)]
checkpoint.timestamp: 
    2023-01-31T07:42:02.202Z
    2023-01-31T07:42:03.038Z


 --- Transition of flow [3eeadfa8-1c38-42bb-b4b8-b8ed51367117] ---
  Timestamp: 2023-01-31T07:42:03.039Z
  Event: DoRemainingWork
  Actions: 
    CreateTransaction
    RemoveSessionBindings(sessionIds=[SessionId(toLong=-6575113948765145039)])
  Continuation: Throw(throwable=net.corda.core.flows.UnexpectedFlowEndException: Received session end message instead of a data session message. Mismatched send and receive?)
  Diff between previous and next state:
isFlowResumed: 
    false
    true
checkpoint.checkpointState.sessions.SessionId(toLong=-6575113948765145039): 
    Initiated(peerParty=O=Mock Company 2, L=London, C=GB, peerFlowInfo=FlowInfo(flowVersion=1, appName=<unknown>), receivedMessages=[net.corda.node.services.statemachine.EndSessionMessage@7d8b3e86], otherSideErrored=false, peerSinkSessionId=SessionId(toLong=6423518782607066838), deduplicationSeed=D-6423518782607066838-7743118876219221019)
    null
checkpoint.checkpointState.sessionsToBeClosed: 
    [SessionId(toLong=-6575113948765145039)]
    []
checkpoint.timestamp: 
    2023-01-31T07:42:03.038Z
    2023-01-31T07:42:03.039Z


 --- Transition of flow [3eeadfa8-1c38-42bb-b4b8-b8ed51367117] ---
  Timestamp: 2023-01-31T07:42:03.039Z
  Event: LeaveSubFlow
  Actions: 
    
  Continuation: ProcessEvents
  Diff between previous and next state:
checkpoint.checkpointState.subFlowStack: 
    [Inlined(flowClass=class net.corda.samples.obligation.flows.IOUTransferFlowResponder, subFlowVersion=CorDappFlow(platformVersion=11, corDappName=workflows-1.0, corDappHash=8C2322F3ACFF6CA8FE3E7F554352489D40710486D8ED144430A5784441E56717), isEnabledTimedFlow=false), Inlined(flowClass=class net.corda.samples.obligation.flows.IOUTransferFlowResponder$call$signedTransactionFlow$1, subFlowVersion=CoreFlow(platformVersion=11), isEnabledTimedFlow=false)]
    [Inlined(flowClass=class net.corda.samples.obligation.flows.IOUTransferFlowResponder, subFlowVersion=CorDappFlow(platformVersion=11, corDappName=workflows-1.0, corDappHash=8C2322F3ACFF6CA8FE3E7F554352489D40710486D8ED144430A5784441E56717), isEnabledTimedFlow=false)]


 --- Transition of flow [3eeadfa8-1c38-42bb-b4b8-b8ed51367117] ---
  Timestamp: 2023-01-31T07:42:03.050Z
  Event: Error(exception=net.corda.core.flows.UnexpectedFlowEndException: Received session end message instead of a data session message. Mismatched send and receive?, rollback=true)
  Actions: 
    RollbackTransaction
    ScheduleEvent(event=DoRemainingWork)
  Continuation: ProcessEvents
  Diff between previous and next state:
isFlowResumed: 
    true
    false
checkpoint.errorState: 
    Clean
    Errored(errors=[FlowError(errorId=-7034384230515119992, exception=net.corda.core.flows.UnexpectedFlowEndException: Received session end message instead of a data session message. Mismatched send and receive?)], propagatedIndex=0, propagating=false)
checkpoint.timestamp: 
    2023-01-31T07:42:03.039Z
    2023-01-31T07:42:03.041Z


 --- Transition of flow [3eeadfa8-1c38-42bb-b4b8-b8ed51367117] ---
  Timestamp: 2023-01-31T07:42:03.053Z
  Event: DoRemainingWork
  Actions: 
    
  Continuation: ProcessEvents
  Diff between previous and next state:
null

 --- Transition of flow [3eeadfa8-1c38-42bb-b4b8-b8ed51367117] ---
  Timestamp: 2023-01-31T07:42:03.054Z
  Event: StartErrorPropagation
  Actions: 
    ScheduleEvent(event=DoRemainingWork)
  Continuation: ProcessEvents
  Diff between previous and next state:
checkpoint.errorState.propagating: 
    false
    true
checkpoint.timestamp: 
    2023-01-31T07:42:03.041Z
    2023-01-31T07:42:03.053Z


 --- Transition of flow [3eeadfa8-1c38-42bb-b4b8-b8ed51367117] ---
  Timestamp: 2023-01-31T07:42:03.087Z
  Event: DoRemainingWork
  Actions: 
    PropagateErrors(errorMessages=[ErrorSessionMessage(flowException=null, errorId=-7034384230515119992)], sessions=[], senderUUID=7da18ab5-41ea-4720-99fc-208eae0a7847)
    CreateTransaction
    RemoveCheckpoint(id=[3eeadfa8-1c38-42bb-b4b8-b8ed51367117], mayHavePersistentResults=false)
    PersistDeduplicationFacts(deduplicationHandlers=[net.corda.testing.node.internal.MockNodeMessagingService$InMemoryDeduplicationHandler@483f48f7])
    ReleaseSoftLocks(uuid=3eeadfa8-1c38-42bb-b4b8-b8ed51367117)
    CommitTransaction
    AcknowledgeMessages(deduplicationHandlers=[net.corda.testing.node.internal.MockNodeMessagingService$InMemoryDeduplicationHandler@483f48f7])
    RemoveSessionBindings(sessionIds=[])
    RemoveFlow(flowId=[3eeadfa8-1c38-42bb-b4b8-b8ed51367117], removalReason=ErrorFinish(flowErrors=[FlowError(errorId=-7034384230515119992, exception=net.corda.core.flows.UnexpectedFlowEndException: Received session end message instead of a data session message. Mismatched send and receive?)]), lastState=StateMachineState(checkpoint=Checkpoint(checkpointState=CheckpointState(invocationContext=InvocationContext(origin=Peer(party=O=Mock Company 2, L=London, C=GB), trace=Trace(invocationId=27120b1b-18c0-4a03-bb1a-2a89f1a6f7a8, timestamp: 2023-01-31T07:42:02.174Z, entityType: Invocation, sessionId=27120b1b-18c0-4a03-bb1a-2a89f1a6f7a8, timestamp: 2023-01-31T07:42:02.174Z, entityType: Session), actor=null, externalTrace=null, impersonatedActor=null, arguments=[], clientId=null), ourIdentity=O=Mock Company 1, L=London, C=GB, sessions={}, sessionsToBeClosed=[], subFlowStack=[Inlined(flowClass=class net.corda.samples.obligation.flows.IOUTransferFlowResponder, subFlowVersion=CorDappFlow(platformVersion=11, corDappName=workflows-1.0, corDappHash=8C2322F3ACFF6CA8FE3E7F554352489D40710486D8ED144430A5784441E56717), isEnabledTimedFlow=false)], numberOfSuspends=3, numberOfCommits=5), flowState=net.corda.node.services.statemachine.FlowState$Finished@5c0781ef, errorState=Errored(errors=[FlowError(errorId=-7034384230515119992, exception=net.corda.core.flows.UnexpectedFlowEndException: Received session end message instead of a data session message. Mismatched send and receive?)], propagatedIndex=0, propagating=true), result=null, status=FAILED, progressStep=Starting, flowIoRequest=Receive, compatible=true), flowLogic=net.corda.samples.obligation.flows.IOUTransferFlowResponder@635c1856, pendingDeduplicationHandlers=[], isFlowResumed=false, isWaitingForFuture=false, future=null, isAnyCheckpointPersisted=true, isStartIdempotent=false, isRemoved=true, isKilled=false, isDead=false, senderUUID=7da18ab5-41ea-4720-99fc-208eae0a7847, reloadCheckpointAfterSuspendCount=null, numberOfCommits=5, lock=java.util.concurrent.Semaphore@cd4bc5c[Permits = 0]))
  Continuation: Abort
  Diff between previous and next state:
pendingDeduplicationHandlers: 
    [net.corda.testing.node.internal.MockNodeMessagingService$InMemoryDeduplicationHandler@483f48f7]
    []
numberOfCommits: 
    4
    5
isRemoved: 
    false
    true
checkpoint.status: 
    RUNNABLE
    FAILED
checkpoint.checkpointState.numberOfCommits: 
    4
    5
checkpoint.flowState: 
    Started(flowIORequest=Receive(sessions=[FlowSessionImpl(destination=O=Mock Company 2, L=London, C=GB, sourceSessionId=SessionId(toLong=-6575113948765145039))]), frozenFiber=8656BB889C0E7985D74A85587FB39DD23B273ED240E99DB3C1695195C63B1F13)
    net.corda.node.services.statemachine.FlowState$Finished@5c0781ef
checkpoint.timestamp: 
    2023-01-31T07:42:03.053Z
    2023-01-31T07:42:03.074Z
 {fiber-id=10000019, flow-id=3eeadfa8-1c38-42bb-b4b8-b8ed51367117, invocation_id=27120b1b-18c0-4a03-bb1a-2a89f1a6f7a8, invocation_timestamp=2023-01-31T07:42:02.174Z, origin=O=Mock Company 2, L=London, C=GB, session_id=27120b1b-18c0-4a03-bb1a-2a89f1a6f7a8, session_timestamp=2023-01-31T07:42:02.174Z, thread-id=858, tx_id=05F53904B95FD46926599F5600C367C941BBC01A8D0CFA2E19655320620E9FB5}
[WARN ] 2023-01-31T07:42:03,098Z [Mock network] interceptors.DumpHistoryOnErrorInterceptor. - Flow [3eeadfa8-1c38-42bb-b4b8-b8ed51367117] error {fiber-id=10000019, flow-id=3eeadfa8-1c38-42bb-b4b8-b8ed51367117, invocation_id=27120b1b-18c0-4a03-bb1a-2a89f1a6f7a8, invocation_timestamp=2023-01-31T07:42:02.174Z, origin=O=Mock Company 2, L=London, C=GB, session_id=27120b1b-18c0-4a03-bb1a-2a89f1a6f7a8, session_timestamp=2023-01-31T07:42:02.174Z, thread-id=858, tx_id=05F53904B95FD46926599F5600C367C941BBC01A8D0CFA2E19655320620E9FB5}
net.corda.core.flows.UnexpectedFlowEndException: Received session end message instead of a data session message. Mismatched send and receive?
	at net.corda.node.services.statemachine.transitions.StartedFlowTransition.pollSessionMessages(StartedFlowTransition.kt:257) ~[corda-node-4.9.jar:?]
	at net.corda.node.services.statemachine.transitions.StartedFlowTransition.receiveFromSessionsTransition(StartedFlowTransition.kt:224) ~[corda-node-4.9.jar:?]
	at net.corda.node.services.statemachine.transitions.StartedFlowTransition.access$receiveFromSessionsTransition(StartedFlowTransition.kt:23) ~[corda-node-4.9.jar:?]
	at net.corda.node.services.statemachine.transitions.StartedFlowTransition$receiveTransition$1.invoke(StartedFlowTransition.kt:207) ~[corda-node-4.9.jar:?]
	at net.corda.node.services.statemachine.transitions.StartedFlowTransition$receiveTransition$1.invoke(StartedFlowTransition.kt:23) ~[corda-node-4.9.jar:?]
	at net.corda.node.services.statemachine.transitions.Transition$DefaultImpls.builder(Transition.kt:24) ~[corda-node-4.9.jar:?]
	at net.corda.node.services.statemachine.transitions.StartedFlowTransition.builder(StartedFlowTransition.kt:23) ~[corda-node-4.9.jar:?]
	at net.corda.node.services.statemachine.transitions.StartedFlowTransition.receiveTransition(StartedFlowTransition.kt:199) ~[corda-node-4.9.jar:?]
	at net.corda.node.services.statemachine.transitions.StartedFlowTransition.transition(StartedFlowTransition.kt:47) ~[corda-node-4.9.jar:?]
	at net.corda.node.services.statemachine.transitions.DoRemainingWorkTransition.cleanTransition(DoRemainingWorkTransition.kt:33) ~[corda-node-4.9.jar:?]
	at net.corda.node.services.statemachine.transitions.DoRemainingWorkTransition.transition(DoRemainingWorkTransition.kt:22) ~[corda-node-4.9.jar:?]
	at net.corda.node.services.statemachine.transitions.TopLevelTransition.transition(TopLevelTransition.kt:53) ~[corda-node-4.9.jar:?]
	at net.corda.node.services.statemachine.transitions.StateMachine.transition(StateMachine.kt:13) ~[corda-node-4.9.jar:?]
	at net.corda.node.services.statemachine.FlowStateMachineImpl.processEvent(FlowStateMachineImpl.kt:182) ~[corda-node-4.9.jar:?]
	at net.corda.node.services.statemachine.FlowStateMachineImpl.processEventsUntilFlowIsResumed(FlowStateMachineImpl.kt:220) ~[corda-node-4.9.jar:?]
	at net.corda.node.services.statemachine.FlowStateMachineImpl.suspend(FlowStateMachineImpl.kt:577) ~[corda-node-4.9.jar:?]
	at net.corda.node.services.statemachine.FlowSessionImpl.receive(FlowSessionImpl.kt:67) ~[corda-node-4.9.jar:?]
	at net.corda.node.services.statemachine.FlowSessionImpl.receive(FlowSessionImpl.kt:71) ~[corda-node-4.9.jar:?]
	at net.corda.core.flows.SignTransactionFlow.call(CollectSignaturesFlow.kt:351) ~[corda-core-4.9.jar:?]
	at net.corda.core.flows.SignTransactionFlow.call(CollectSignaturesFlow.kt:261) ~[corda-core-4.9.jar:?]
	at net.corda.node.services.statemachine.FlowStateMachineImpl.subFlow(FlowStateMachineImpl.kt:420) ~[corda-node-4.9.jar:?]
	at net.corda.core.flows.FlowLogic.subFlow(FlowLogic.kt:409) ~[corda-core-4.9.jar:?]
	at net.corda.samples.obligation.flows.IOUTransferFlowResponder.call(IOUTransferFlow.kt:123) ~[main/:?]
	at net.corda.samples.obligation.flows.IOUTransferFlowResponder.call(IOUTransferFlow.kt:114) ~[main/:?]
	at net.corda.node.services.statemachine.FlowStateMachineImpl.run(FlowStateMachineImpl.kt:349) ~[corda-node-4.9.jar:?]
	at net.corda.node.services.statemachine.FlowStateMachineImpl.run(FlowStateMachineImpl.kt:71) ~[corda-node-4.9.jar:?]
	at co.paralleluniverse.fibers.Fiber.run1(Fiber.java:1092) ~[quasar-core-0.7.10.jar:0.7.10]
	at co.paralleluniverse.fibers.Fiber.exec(Fiber.java:788) ~[quasar-core-0.7.10.jar:0.7.10]
	at co.paralleluniverse.fibers.RunnableFiberTask.doExec(RunnableFiberTask.java:100) ~[quasar-core-0.7.10.jar:0.7.10]
	at co.paralleluniverse.fibers.RunnableFiberTask.run(RunnableFiberTask.java:91) ~[quasar-core-0.7.10.jar:0.7.10]
	at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511) ~[?:1.8.0_202]
	at java.util.concurrent.FutureTask.run(FutureTask.java:266) ~[?:1.8.0_202]
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.access$201(ScheduledThreadPoolExecutor.java:180) ~[?:1.8.0_202]
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.run(ScheduledThreadPoolExecutor.java:293) ~[?:1.8.0_202]
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149) ~[?:1.8.0_202]
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624) ~[?:1.8.0_202]
	at net.corda.node.utilities.AffinityExecutor$ServiceAffinityExecutor$1$thread$1.run(AffinityExecutor.kt:63) ~[corda-node-4.9.jar:?]
[INFO ] 2023-01-31T07:42:03,123Z [Mock network] identity.PersistentIdentityService. - Linking: 3C0DA3B81E496072EF20D90A33CEB44CB03C962F8E4F6331BBC764EF9E089F73 to O=Mock Company 1, L=London, C=GB {actor_id=Only For Testing, actor_owning_identity=O=Mock Company 1, L=London, C=GB, actor_store_id=TEST, fiber-id=10000024, flow-id=4a68bed5-2139-4bf7-85a8-45094d4083f1, invocation_id=68a49219-1589-4044-97bd-2eed0d8a6881, invocation_timestamp=2023-01-31T07:42:03.117Z, origin=Only For Testing, session_id=68a49219-1589-4044-97bd-2eed0d8a6881, session_timestamp=2023-01-31T07:42:03.117Z, thread-id=858}
[INFO ] 2023-01-31T07:42:03,301Z [Mock network] corda.flow. - No need to notarise this transaction. {actor_id=Only For Testing, actor_owning_identity=O=Mock Company 1, L=London, C=GB, actor_store_id=TEST, fiber-id=10000024, flow-id=4a68bed5-2139-4bf7-85a8-45094d4083f1, invocation_id=68a49219-1589-4044-97bd-2eed0d8a6881, invocation_timestamp=2023-01-31T07:42:03.117Z, origin=Only For Testing, session_id=68a49219-1589-4044-97bd-2eed0d8a6881, session_timestamp=2023-01-31T07:42:03.117Z, thread-id=858, tx_id=22EDE810B006B0FDE1467D35B9AFD1D12B649996257A634539F9653E3900C35B}
[INFO ] 2023-01-31T07:42:03,301Z [Mock network] corda.flow. - Recording transaction locally. {actor_id=Only For Testing, actor_owning_identity=O=Mock Company 1, L=London, C=GB, actor_store_id=TEST, fiber-id=10000024, flow-id=4a68bed5-2139-4bf7-85a8-45094d4083f1, invocation_id=68a49219-1589-4044-97bd-2eed0d8a6881, invocation_timestamp=2023-01-31T07:42:03.117Z, origin=Only For Testing, session_id=68a49219-1589-4044-97bd-2eed0d8a6881, session_timestamp=2023-01-31T07:42:03.117Z, thread-id=858, tx_id=22EDE810B006B0FDE1467D35B9AFD1D12B649996257A634539F9653E3900C35B}
[INFO ] 2023-01-31T07:42:03,318Z [Mock network] corda.flow. - Recorded transaction locally successfully. {actor_id=Only For Testing, actor_owning_identity=O=Mock Company 1, L=London, C=GB, actor_store_id=TEST, fiber-id=10000024, flow-id=4a68bed5-2139-4bf7-85a8-45094d4083f1, invocation_id=68a49219-1589-4044-97bd-2eed0d8a6881, invocation_timestamp=2023-01-31T07:42:03.117Z, origin=Only For Testing, session_id=68a49219-1589-4044-97bd-2eed0d8a6881, session_timestamp=2023-01-31T07:42:03.117Z, thread-id=858, tx_id=22EDE810B006B0FDE1467D35B9AFD1D12B649996257A634539F9653E3900C35B}
[INFO ] 2023-01-31T07:42:03,318Z [Mock network] corda.flow. - All parties received the transaction successfully. {actor_id=Only For Testing, actor_owning_identity=O=Mock Company 1, L=London, C=GB, actor_store_id=TEST, fiber-id=10000024, flow-id=4a68bed5-2139-4bf7-85a8-45094d4083f1, invocation_id=68a49219-1589-4044-97bd-2eed0d8a6881, invocation_timestamp=2023-01-31T07:42:03.117Z, origin=Only For Testing, session_id=68a49219-1589-4044-97bd-2eed0d8a6881, session_timestamp=2023-01-31T07:42:03.117Z, thread-id=858, tx_id=22EDE810B006B0FDE1467D35B9AFD1D12B649996257A634539F9653E3900C35B}
[INFO ] 2023-01-31T07:42:03,333Z [Mock network] identity.PersistentIdentityService. - Linking: 1A41922CE14C53634EE5EE124F2A39E1C66EF98D64C11EA8E4B1B1CA2D4040F1 to O=Mock Company 1, L=London, C=GB {actor_id=Only For Testing, actor_owning_identity=O=Mock Company 1, L=London, C=GB, actor_store_id=TEST, fiber-id=10000025, flow-id=982715e9-d735-4a7b-86c6-491821fcdb33, invocation_id=152dd809-e98e-4fc5-8e00-5adf2d961624, invocation_timestamp=2023-01-31T07:42:03.329Z, origin=Only For Testing, session_id=152dd809-e98e-4fc5-8e00-5adf2d961624, session_timestamp=2023-01-31T07:42:03.329Z, thread-id=858}
[INFO ] 2023-01-31T07:42:03,345Z [Mock network] corda.flow. - No need to notarise this transaction. {actor_id=Only For Testing, actor_owning_identity=O=Mock Company 1, L=London, C=GB, actor_store_id=TEST, fiber-id=10000025, flow-id=982715e9-d735-4a7b-86c6-491821fcdb33, invocation_id=152dd809-e98e-4fc5-8e00-5adf2d961624, invocation_timestamp=2023-01-31T07:42:03.329Z, origin=Only For Testing, session_id=152dd809-e98e-4fc5-8e00-5adf2d961624, session_timestamp=2023-01-31T07:42:03.329Z, thread-id=858, tx_id=C15342156C2E4D8F4A47D2258D497F30FE80E39BCE0894A1CC58CA3CCCF45016}
[INFO ] 2023-01-31T07:42:03,345Z [Mock network] corda.flow. - Recording transaction locally. {actor_id=Only For Testing, actor_owning_identity=O=Mock Company 1, L=London, C=GB, actor_store_id=TEST, fiber-id=10000025, flow-id=982715e9-d735-4a7b-86c6-491821fcdb33, invocation_id=152dd809-e98e-4fc5-8e00-5adf2d961624, invocation_timestamp=2023-01-31T07:42:03.329Z, origin=Only For Testing, session_id=152dd809-e98e-4fc5-8e00-5adf2d961624, session_timestamp=2023-01-31T07:42:03.329Z, thread-id=858, tx_id=C15342156C2E4D8F4A47D2258D497F30FE80E39BCE0894A1CC58CA3CCCF45016}
[INFO ] 2023-01-31T07:42:03,350Z [Mock network] corda.flow. - Recorded transaction locally successfully. {actor_id=Only For Testing, actor_owning_identity=O=Mock Company 1, L=London, C=GB, actor_store_id=TEST, fiber-id=10000025, flow-id=982715e9-d735-4a7b-86c6-491821fcdb33, invocation_id=152dd809-e98e-4fc5-8e00-5adf2d961624, invocation_timestamp=2023-01-31T07:42:03.329Z, origin=Only For Testing, session_id=152dd809-e98e-4fc5-8e00-5adf2d961624, session_timestamp=2023-01-31T07:42:03.329Z, thread-id=858, tx_id=C15342156C2E4D8F4A47D2258D497F30FE80E39BCE0894A1CC58CA3CCCF45016}
[INFO ] 2023-01-31T07:42:03,350Z [Mock network] corda.flow. - All parties received the transaction successfully. {actor_id=Only For Testing, actor_owning_identity=O=Mock Company 1, L=London, C=GB, actor_store_id=TEST, fiber-id=10000025, flow-id=982715e9-d735-4a7b-86c6-491821fcdb33, invocation_id=152dd809-e98e-4fc5-8e00-5adf2d961624, invocation_timestamp=2023-01-31T07:42:03.329Z, origin=Only For Testing, session_id=152dd809-e98e-4fc5-8e00-5adf2d961624, session_timestamp=2023-01-31T07:42:03.329Z, thread-id=858, tx_id=C15342156C2E4D8F4A47D2258D497F30FE80E39BCE0894A1CC58CA3CCCF45016}
[INFO ] 2023-01-31T07:42:03,384Z [Mock network] identity.PersistentIdentityService. - Linking: 62CCF701FDB44DA5BECE4EE62F097970BD2A04EF195CE7355E971C0E42A89E2F to O=Mock Company 1, L=London, C=GB {actor_id=Only For Testing, actor_owning_identity=O=Mock Company 1, L=London, C=GB, actor_store_id=TEST, fiber-id=10000027, flow-id=2289ea18-bf18-4241-8950-cace09523d20, invocation_id=94f92ebc-0933-4966-95a0-f3e9022a2977, invocation_timestamp=2023-01-31T07:42:03.376Z, origin=Only For Testing, session_id=94f92ebc-0933-4966-95a0-f3e9022a2977, session_timestamp=2023-01-31T07:42:03.376Z, thread-id=858}
[INFO ] 2023-01-31T07:42:03,448Z [Mock network] identity.PersistentIdentityService. - Linking: 72F999972B25ABE623F256A785893021933841B10ED7ADA4583F49AA63E85EB2 to O=Mock Company 3, L=London, C=GB {fiber-id=10000028, flow-id=b4addb92-dbec-456f-ae91-4fa7e9104a08, invocation_id=77f43012-fa75-46d7-aa92-10ef6bd52099, invocation_timestamp=2023-01-31T07:42:03.410Z, origin=O=Mock Company 1, L=London, C=GB, session_id=77f43012-fa75-46d7-aa92-10ef6bd52099, session_timestamp=2023-01-31T07:42:03.410Z, thread-id=858}
[INFO ] 2023-01-31T07:42:03,461Z [Mock network] identity.PersistentIdentityService. - Linking: 72F999972B25ABE623F256A785893021933841B10ED7ADA4583F49AA63E85EB2 to O=Mock Company 3, L=London, C=GB {actor_id=Only For Testing, actor_owning_identity=O=Mock Company 1, L=London, C=GB, actor_store_id=TEST, fiber-id=10000027, flow-id=2289ea18-bf18-4241-8950-cace09523d20, invocation_id=94f92ebc-0933-4966-95a0-f3e9022a2977, invocation_timestamp=2023-01-31T07:42:03.376Z, origin=Only For Testing, session_id=94f92ebc-0933-4966-95a0-f3e9022a2977, session_timestamp=2023-01-31T07:42:03.376Z, thread-id=858}
[INFO ] 2023-01-31T07:42:03,754Z [Mock network] corda.flow. - Received transaction acknowledgement request from party O=Mock Company 1, L=London, C=GB. {fiber-id=10000029, flow-id=b9075f13-4075-455a-9bc0-26f25862e50d, invocation_id=f89c66b6-c73c-4e25-b500-447e056ac308, invocation_timestamp=2023-01-31T07:42:03.731Z, origin=O=Mock Company 1, L=London, C=GB, session_id=f89c66b6-c73c-4e25-b500-447e056ac308, session_timestamp=2023-01-31T07:42:03.731Z, thread-id=858, tx_id=55A76480A2D34BE067B32C0D7A6E787BEB22BC8E172C25AD05FE08B4B68BDB46}
[INFO ] 2023-01-31T07:42:03,866Z [Mock network] corda.flow. - Transaction dependencies resolution completed. {fiber-id=10000029, flow-id=b9075f13-4075-455a-9bc0-26f25862e50d, invocation_id=f89c66b6-c73c-4e25-b500-447e056ac308, invocation_timestamp=2023-01-31T07:42:03.731Z, origin=O=Mock Company 1, L=London, C=GB, session_id=f89c66b6-c73c-4e25-b500-447e056ac308, session_timestamp=2023-01-31T07:42:03.731Z, thread-id=858, tx_id=55A76480A2D34BE067B32C0D7A6E787BEB22BC8E172C25AD05FE08B4B68BDB46}
[INFO ] 2023-01-31T07:42:04,176Z [Mock network] corda.flow. - Flow raised an error: Could not find Party for Anonymous(DL9VBT5ixmu4CHfFkkErsEfSdCpHidSDC1HXAQTV69jKqm). Sending it to flow hospital to be triaged. {actor_id=Only For Testing, actor_owning_identity=O=Mock Company 1, L=London, C=GB, actor_store_id=TEST, fiber-id=10000027, flow-id=2289ea18-bf18-4241-8950-cace09523d20, invocation_id=94f92ebc-0933-4966-95a0-f3e9022a2977, invocation_timestamp=2023-01-31T07:42:03.376Z, origin=Only For Testing, session_id=94f92ebc-0933-4966-95a0-f3e9022a2977, session_timestamp=2023-01-31T07:42:03.376Z, thread-id=858, tx_id=55A76480A2D34BE067B32C0D7A6E787BEB22BC8E172C25AD05FE08B4B68BDB46}
[INFO ] 2023-01-31T07:42:04,178Z [Mock network] statemachine.StaffedFlowHospital. - Flow [2289ea18-bf18-4241-8950-cace09523d20] admitted to hospital in state StateMachineState(checkpoint=Checkpoint(checkpointState=CheckpointState(invocationContext=InvocationContext(origin=RPC(actor=Actor(id=Id(value=Only For Testing), serviceId=AuthServiceId(value=TEST), owningLegalIdentity=O=Mock Company 1, L=London, C=GB)), trace=Trace(invocationId=94f92ebc-0933-4966-95a0-f3e9022a2977, timestamp: 2023-01-31T07:42:03.376Z, entityType: Invocation, sessionId=94f92ebc-0933-4966-95a0-f3e9022a2977, timestamp: 2023-01-31T07:42:03.376Z, entityType: Session), actor=Actor(id=Id(value=Only For Testing), serviceId=AuthServiceId(value=TEST), owningLegalIdentity=O=Mock Company 1, L=London, C=GB), externalTrace=null, impersonatedActor=null, arguments=[], clientId=null), ourIdentity=O=Mock Company 1, L=London, C=GB, sessions={SessionId(toLong=-7855006138722062871)=Initiated(peerParty=O=Mock Company 3, L=London, C=GB, peerFlowInfo=FlowInfo(flowVersion=1, appName=<unknown>), receivedMessages=[], otherSideErrored=false, peerSinkSessionId=SessionId(toLong=8383758276858904125), deduplicationSeed=R--7855006138722062871--5407470294366436114)}, sessionsToBeClosed=[], subFlowStack=[Initiating(flowClass=class net.corda.samples.obligation.flows.IOUSettleFlow, classToInitiateWith=class net.corda.samples.obligation.flows.IOUSettleFlow, flowInfo=FlowInfo(flowVersion=1, appName=<unknown>), subFlowVersion=CorDappFlow(platformVersion=11, corDappName=workflows-1.0, corDappHash=8C2322F3ACFF6CA8FE3E7F554352489D40710486D8ED144430A5784441E56717), isEnabledTimedFlow=false)], numberOfSuspends=6, numberOfCommits=7), flowState=Started(flowIORequest=Receive(sessions=[FlowSessionImpl(destination=O=Mock Company 3, L=London, C=GB, sourceSessionId=SessionId(toLong=-7855006138722062871))]), frozenFiber=1455D9260B11AAE0FC564CFA3D0BFFD05D2615546EF597FE255C3EF518BE93A0), errorState=Clean, result=null, status=RUNNABLE, progressStep=Starting, flowIoRequest=Receive, compatible=true), flowLogic=net.corda.samples.obligation.flows.IOUSettleFlow@3d0abed1, pendingDeduplicationHandlers=[net.corda.testing.node.internal.MockNodeMessagingService$InMemoryDeduplicationHandler@729d2512], isFlowResumed=true, isWaitingForFuture=false, future=null, isAnyCheckpointPersisted=true, isStartIdempotent=false, isRemoved=false, isKilled=false, isDead=false, senderUUID=7da18ab5-41ea-4720-99fc-208eae0a7847, reloadCheckpointAfterSuspendCount=null, numberOfCommits=7, lock=java.util.concurrent.Semaphore@5cb52ef7[Permits = 0]) {actor_id=Only For Testing, actor_owning_identity=O=Mock Company 1, L=London, C=GB, actor_store_id=TEST, fiber-id=10000027, flow-id=2289ea18-bf18-4241-8950-cace09523d20, invocation_id=94f92ebc-0933-4966-95a0-f3e9022a2977, invocation_timestamp=2023-01-31T07:42:03.376Z, origin=Only For Testing, session_id=94f92ebc-0933-4966-95a0-f3e9022a2977, session_timestamp=2023-01-31T07:42:03.376Z, thread-id=858, tx_id=55A76480A2D34BE067B32C0D7A6E787BEB22BC8E172C25AD05FE08B4B68BDB46}
[INFO ] 2023-01-31T07:42:04,178Z [Mock network] statemachine.StaffedFlowHospital. - Error 1 of 1: {actor_id=Only For Testing, actor_owning_identity=O=Mock Company 1, L=London, C=GB, actor_store_id=TEST, fiber-id=10000027, flow-id=2289ea18-bf18-4241-8950-cace09523d20, invocation_id=94f92ebc-0933-4966-95a0-f3e9022a2977, invocation_timestamp=2023-01-31T07:42:03.376Z, origin=Only For Testing, session_id=94f92ebc-0933-4966-95a0-f3e9022a2977, session_timestamp=2023-01-31T07:42:03.376Z, thread-id=858, tx_id=55A76480A2D34BE067B32C0D7A6E787BEB22BC8E172C25AD05FE08B4B68BDB46}
java.lang.IllegalArgumentException: Could not find Party for Anonymous(DL9VBT5ixmu4CHfFkkErsEfSdCpHidSDC1HXAQTV69jKqm)
	at net.corda.core.identity.IdentityUtils.groupAbstractPartyByWellKnownParty(IdentityUtils.kt:47) ~[corda-core-4.9.jar:?]
	at net.corda.core.identity.IdentityUtils.groupAbstractPartyByWellKnownParty(IdentityUtils.kt:63) ~[corda-core-4.9.jar:?]
	at net.corda.core.flows.FinalityFlow.extractExternalParticipants(FinalityFlow.kt:252) ~[corda-core-4.9.jar:?]
	at net.corda.core.flows.FinalityFlow.call(FinalityFlow.kt:162) ~[corda-core-4.9.jar:?]
	at net.corda.core.flows.FinalityFlow.call(FinalityFlow.kt:43) ~[corda-core-4.9.jar:?]
	at net.corda.node.services.statemachine.FlowStateMachineImpl.subFlow(FlowStateMachineImpl.kt:420) ~[corda-node-4.9.jar:?]
	at net.corda.core.flows.FlowLogic.subFlow(FlowLogic.kt:409) ~[corda-core-4.9.jar:?]
	at net.corda.samples.obligation.flows.IOUSettleFlow.call(IOUSettleFlow.kt:116) ~[main/:?]
	at net.corda.samples.obligation.flows.IOUSettleFlow.call(IOUSettleFlow.kt:30) ~[main/:?]
	at net.corda.node.services.statemachine.FlowStateMachineImpl.run(FlowStateMachineImpl.kt:349) ~[corda-node-4.9.jar:?]
	at net.corda.node.services.statemachine.FlowStateMachineImpl.run(FlowStateMachineImpl.kt:71) ~[corda-node-4.9.jar:?]
	at co.paralleluniverse.fibers.Fiber.run1(Fiber.java:1092) ~[quasar-core-0.7.10.jar:0.7.10]
	at co.paralleluniverse.fibers.Fiber.exec(Fiber.java:788) ~[quasar-core-0.7.10.jar:0.7.10]
	at co.paralleluniverse.fibers.RunnableFiberTask.doExec(RunnableFiberTask.java:100) ~[quasar-core-0.7.10.jar:0.7.10]
	at co.paralleluniverse.fibers.RunnableFiberTask.run(RunnableFiberTask.java:91) ~[quasar-core-0.7.10.jar:0.7.10]
	at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511) ~[?:1.8.0_202]
	at java.util.concurrent.FutureTask.run(FutureTask.java:266) ~[?:1.8.0_202]
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.access$201(ScheduledThreadPoolExecutor.java:180) ~[?:1.8.0_202]
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.run(ScheduledThreadPoolExecutor.java:293) ~[?:1.8.0_202]
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149) ~[?:1.8.0_202]
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624) ~[?:1.8.0_202]
	at net.corda.node.utilities.AffinityExecutor$ServiceAffinityExecutor$1$thread$1.run(AffinityExecutor.kt:63) ~[corda-node-4.9.jar:?]
[INFO ] 2023-01-31T07:42:04,178Z [Mock network] statemachine.StaffedFlowHospital. - Flow error allowed to propagate {actor_id=Only For Testing, actor_owning_identity=O=Mock Company 1, L=London, C=GB, actor_store_id=TEST, fiber-id=10000027, flow-id=2289ea18-bf18-4241-8950-cace09523d20, invocation_id=94f92ebc-0933-4966-95a0-f3e9022a2977, invocation_timestamp=2023-01-31T07:42:03.376Z, origin=Only For Testing, session_id=94f92ebc-0933-4966-95a0-f3e9022a2977, session_timestamp=2023-01-31T07:42:03.376Z, thread-id=858, tx_id=55A76480A2D34BE067B32C0D7A6E787BEB22BC8E172C25AD05FE08B4B68BDB46}
java.lang.IllegalArgumentException: Could not find Party for Anonymous(DL9VBT5ixmu4CHfFkkErsEfSdCpHidSDC1HXAQTV69jKqm)
	at net.corda.core.identity.IdentityUtils.groupAbstractPartyByWellKnownParty(IdentityUtils.kt:47) ~[corda-core-4.9.jar:?]
	at net.corda.core.identity.IdentityUtils.groupAbstractPartyByWellKnownParty(IdentityUtils.kt:63) ~[corda-core-4.9.jar:?]
	at net.corda.core.flows.FinalityFlow.extractExternalParticipants(FinalityFlow.kt:252) ~[corda-core-4.9.jar:?]
	at net.corda.core.flows.FinalityFlow.call(FinalityFlow.kt:162) ~[corda-core-4.9.jar:?]
	at net.corda.core.flows.FinalityFlow.call(FinalityFlow.kt:43) ~[corda-core-4.9.jar:?]
	at net.corda.node.services.statemachine.FlowStateMachineImpl.subFlow(FlowStateMachineImpl.kt:420) ~[corda-node-4.9.jar:?]
	at net.corda.core.flows.FlowLogic.subFlow(FlowLogic.kt:409) ~[corda-core-4.9.jar:?]
	at net.corda.samples.obligation.flows.IOUSettleFlow.call(IOUSettleFlow.kt:116) ~[main/:?]
	at net.corda.samples.obligation.flows.IOUSettleFlow.call(IOUSettleFlow.kt:30) ~[main/:?]
	at net.corda.node.services.statemachine.FlowStateMachineImpl.run(FlowStateMachineImpl.kt:349) ~[corda-node-4.9.jar:?]
	at net.corda.node.services.statemachine.FlowStateMachineImpl.run(FlowStateMachineImpl.kt:71) ~[corda-node-4.9.jar:?]
	at co.paralleluniverse.fibers.Fiber.run1(Fiber.java:1092) ~[quasar-core-0.7.10.jar:0.7.10]
	at co.paralleluniverse.fibers.Fiber.exec(Fiber.java:788) ~[quasar-core-0.7.10.jar:0.7.10]
	at co.paralleluniverse.fibers.RunnableFiberTask.doExec(RunnableFiberTask.java:100) ~[quasar-core-0.7.10.jar:0.7.10]
	at co.paralleluniverse.fibers.RunnableFiberTask.run(RunnableFiberTask.java:91) ~[quasar-core-0.7.10.jar:0.7.10]
	at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511) ~[?:1.8.0_202]
	at java.util.concurrent.FutureTask.run(FutureTask.java:266) ~[?:1.8.0_202]
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.access$201(ScheduledThreadPoolExecutor.java:180) ~[?:1.8.0_202]
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.run(ScheduledThreadPoolExecutor.java:293) ~[?:1.8.0_202]
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149) ~[?:1.8.0_202]
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624) ~[?:1.8.0_202]
	at net.corda.node.utilities.AffinityExecutor$ServiceAffinityExecutor$1$thread$1.run(AffinityExecutor.kt:63) ~[corda-node-4.9.jar:?]
[WARN ] 2023-01-31T07:42:04,196Z [Mock network] interceptors.DumpHistoryOnErrorInterceptor. - Flow [2289ea18-bf18-4241-8950-cace09523d20] errored, dumping all transitions:

 --- Transition of flow [2289ea18-bf18-4241-8950-cace09523d20] ---
  Timestamp: 2023-01-31T07:42:03.381Z
  Event: DoRemainingWork
  Actions: 
    CreateTransaction
    PersistCheckpoint(id=[2289ea18-bf18-4241-8950-cace09523d20], checkpoint=Checkpoint(checkpointState=CheckpointState(invocationContext=InvocationContext(origin=RPC(actor=Actor(id=Id(value=Only For Testing), serviceId=AuthServiceId(value=TEST), owningLegalIdentity=O=Mock Company 1, L=London, C=GB)), trace=Trace(invocationId=94f92ebc-0933-4966-95a0-f3e9022a2977, timestamp: 2023-01-31T07:42:03.376Z, entityType: Invocation, sessionId=94f92ebc-0933-4966-95a0-f3e9022a2977, timestamp: 2023-01-31T07:42:03.376Z, entityType: Session), actor=Actor(id=Id(value=Only For Testing), serviceId=AuthServiceId(value=TEST), owningLegalIdentity=O=Mock Company 1, L=London, C=GB), externalTrace=null, impersonatedActor=null, arguments=[], clientId=null), ourIdentity=O=Mock Company 1, L=London, C=GB, sessions={}, sessionsToBeClosed=[], subFlowStack=[Initiating(flowClass=class net.corda.samples.obligation.flows.IOUSettleFlow, classToInitiateWith=class net.corda.samples.obligation.flows.IOUSettleFlow, flowInfo=FlowInfo(flowVersion=1, appName=<unknown>), subFlowVersion=CorDappFlow(platformVersion=11, corDappName=workflows-1.0, corDappHash=8C2322F3ACFF6CA8FE3E7F554352489D40710486D8ED144430A5784441E56717), isEnabledTimedFlow=false)], numberOfSuspends=0, numberOfCommits=1), flowState=Unstarted(flowStart=Explicit, frozenFlowLogic=D7C53C42743B3301462089C462C658768FB287E7C44827CC0F6318A04786484F), errorState=Clean, result=null, status=RUNNABLE, progressStep=null, flowIoRequest=null, compatible=true), isCheckpointUpdate=false)
    PersistDeduplicationFacts(deduplicationHandlers=[net.corda.node.internal.FlowStarterImpl$startFlow$startFlowEvent$1@60b6037e])
    CommitTransaction
    AcknowledgeMessages(deduplicationHandlers=[net.corda.node.internal.FlowStarterImpl$startFlow$startFlowEvent$1@60b6037e])
    SignalFlowHasStarted(flowId=[2289ea18-bf18-4241-8950-cace09523d20])
    CreateTransaction
  Continuation: Resume(result=null)
  Diff between previous and next state:
pendingDeduplicationHandlers: 
    [net.corda.node.internal.FlowStarterImpl$startFlow$startFlowEvent$1@60b6037e]
    []
isFlowResumed: 
    false
    true
isAnyCheckpointPersisted: 
    false
    true


 --- Transition of flow [2289ea18-bf18-4241-8950-cace09523d20] ---
  Timestamp: 2023-01-31T07:42:03.384Z
  Event: EnterSubFlow(subFlowClass=class net.corda.samples.obligation.accountUtil.NewKeyForAccount, subFlowVersion=CorDappFlow(platformVersion=11, corDappName=workflows-1.0, corDappHash=8C2322F3ACFF6CA8FE3E7F554352489D40710486D8ED144430A5784441E56717), isEnabledTimedFlow=false)
  Actions: 
    
  Continuation: ProcessEvents
  Diff between previous and next state:
checkpoint.checkpointState.subFlowStack: 
    [Initiating(flowClass=class net.corda.samples.obligation.flows.IOUSettleFlow, classToInitiateWith=class net.corda.samples.obligation.flows.IOUSettleFlow, flowInfo=FlowInfo(flowVersion=1, appName=<unknown>), subFlowVersion=CorDappFlow(platformVersion=11, corDappName=workflows-1.0, corDappHash=8C2322F3ACFF6CA8FE3E7F554352489D40710486D8ED144430A5784441E56717), isEnabledTimedFlow=false)]
    [Initiating(flowClass=class net.corda.samples.obligation.flows.IOUSettleFlow, classToInitiateWith=class net.corda.samples.obligation.flows.IOUSettleFlow, flowInfo=FlowInfo(flowVersion=1, appName=<unknown>), subFlowVersion=CorDappFlow(platformVersion=11, corDappName=workflows-1.0, corDappHash=8C2322F3ACFF6CA8FE3E7F554352489D40710486D8ED144430A5784441E56717), isEnabledTimedFlow=false), Inlined(flowClass=class net.corda.samples.obligation.accountUtil.NewKeyForAccount, subFlowVersion=CorDappFlow(platformVersion=11, corDappName=workflows-1.0, corDappHash=8C2322F3ACFF6CA8FE3E7F554352489D40710486D8ED144430A5784441E56717), isEnabledTimedFlow=false)]
checkpoint.timestamp: 
    2023-01-31T07:42:03.378Z
    2023-01-31T07:42:03.384Z


 --- Transition of flow [2289ea18-bf18-4241-8950-cace09523d20] ---
  Timestamp: 2023-01-31T07:42:03.388Z
  Event: LeaveSubFlow
  Actions: 
    
  Continuation: ProcessEvents
  Diff between previous and next state:
checkpoint.checkpointState.subFlowStack: 
    [Initiating(flowClass=class net.corda.samples.obligation.flows.IOUSettleFlow, classToInitiateWith=class net.corda.samples.obligation.flows.IOUSettleFlow, flowInfo=FlowInfo(flowVersion=1, appName=<unknown>), subFlowVersion=CorDappFlow(platformVersion=11, corDappName=workflows-1.0, corDappHash=8C2322F3ACFF6CA8FE3E7F554352489D40710486D8ED144430A5784441E56717), isEnabledTimedFlow=false), Inlined(flowClass=class net.corda.samples.obligation.accountUtil.NewKeyForAccount, subFlowVersion=CorDappFlow(platformVersion=11, corDappName=workflows-1.0, corDappHash=8C2322F3ACFF6CA8FE3E7F554352489D40710486D8ED144430A5784441E56717), isEnabledTimedFlow=false)]
    [Initiating(flowClass=class net.corda.samples.obligation.flows.IOUSettleFlow, classToInitiateWith=class net.corda.samples.obligation.flows.IOUSettleFlow, flowInfo=FlowInfo(flowVersion=1, appName=<unknown>), subFlowVersion=CorDappFlow(platformVersion=11, corDappName=workflows-1.0, corDappHash=8C2322F3ACFF6CA8FE3E7F554352489D40710486D8ED144430A5784441E56717), isEnabledTimedFlow=false)]
checkpoint.timestamp: 
    2023-01-31T07:42:03.384Z
    2023-01-31T07:42:03.388Z


 --- Transition of flow [2289ea18-bf18-4241-8950-cace09523d20] ---
  Timestamp: 2023-01-31T07:42:03.394Z
  Event: EnterSubFlow(subFlowClass=class com.r3.corda.lib.accounts.workflows.flows.RequestKeyForAccount, subFlowVersion=CorDappFlow(platformVersion=11, corDappName=accounts-workflows-1.0, corDappHash=80555705CE83A631D1BDD61E9C14A7C2215BB67FAB1411547C4D4B3D66F8402E), isEnabledTimedFlow=false)
  Actions: 
    
  Continuation: ProcessEvents
  Diff between previous and next state:
checkpoint.checkpointState.subFlowStack: 
    [Initiating(flowClass=class net.corda.samples.obligation.flows.IOUSettleFlow, classToInitiateWith=class net.corda.samples.obligation.flows.IOUSettleFlow, flowInfo=FlowInfo(flowVersion=1, appName=<unknown>), subFlowVersion=CorDappFlow(platformVersion=11, corDappName=workflows-1.0, corDappHash=8C2322F3ACFF6CA8FE3E7F554352489D40710486D8ED144430A5784441E56717), isEnabledTimedFlow=false)]
    [Initiating(flowClass=class net.corda.samples.obligation.flows.IOUSettleFlow, classToInitiateWith=class net.corda.samples.obligation.flows.IOUSettleFlow, flowInfo=FlowInfo(flowVersion=1, appName=<unknown>), subFlowVersion=CorDappFlow(platformVersion=11, corDappName=workflows-1.0, corDappHash=8C2322F3ACFF6CA8FE3E7F554352489D40710486D8ED144430A5784441E56717), isEnabledTimedFlow=false), Initiating(flowClass=class com.r3.corda.lib.accounts.workflows.flows.RequestKeyForAccount, classToInitiateWith=class com.r3.corda.lib.accounts.workflows.flows.RequestKeyForAccount, flowInfo=FlowInfo(flowVersion=1, appName=accounts-workflows-1.0), subFlowVersion=CorDappFlow(platformVersion=11, corDappName=accounts-workflows-1.0, corDappHash=80555705CE83A631D1BDD61E9C14A7C2215BB67FAB1411547C4D4B3D66F8402E), isEnabledTimedFlow=false)]
checkpoint.timestamp: 
    2023-01-31T07:42:03.388Z
    2023-01-31T07:42:03.394Z


 --- Transition of flow [2289ea18-bf18-4241-8950-cace09523d20] ---
  Timestamp: 2023-01-31T07:42:03.394Z
  Event: InitiateFlow(destination=O=Mock Company 3, L=London, C=GB, wellKnownParty=O=Mock Company 3, L=London, C=GB)
  Actions: 
    AddSessionBinding(flowId=[2289ea18-bf18-4241-8950-cace09523d20], sessionId=SessionId(toLong=5897559181151605428))
  Continuation: Resume(result=class net.corda.node.services.statemachine.FlowSessionImpl)
  Diff between previous and next state:
checkpoint.checkpointState.sessions.SessionId(toLong=5897559181151605428): 
    null
    Uninitiated(destination=O=Mock Company 3, L=London, C=GB, initiatingSubFlow=Initiating(flowClass=class com.r3.corda.lib.accounts.workflows.flows.RequestKeyForAccount, classToInitiateWith=class com.r3.corda.lib.accounts.workflows.flows.RequestKeyForAccount, flowInfo=FlowInfo(flowVersion=1, appName=accounts-workflows-1.0), subFlowVersion=CorDappFlow(platformVersion=11, corDappName=accounts-workflows-1.0, corDappHash=80555705CE83A631D1BDD61E9C14A7C2215BB67FAB1411547C4D4B3D66F8402E), isEnabledTimedFlow=false), sourceSessionId=SessionId(toLong=5897559181151605428), additionalEntropy=-6209985564318473542)


 --- Transition of flow [2289ea18-bf18-4241-8950-cace09523d20] ---
  Timestamp: 2023-01-31T07:42:03.394Z
  Event: EnterSubFlow(subFlowClass=class com.r3.corda.lib.accounts.workflows.flows.RequestKeyForAccountFlow, subFlowVersion=CorDappFlow(platformVersion=11, corDappName=accounts-workflows-1.0, corDappHash=80555705CE83A631D1BDD61E9C14A7C2215BB67FAB1411547C4D4B3D66F8402E), isEnabledTimedFlow=false)
  Actions: 
    
  Continuation: ProcessEvents
  Diff between previous and next state:
checkpoint.checkpointState.subFlowStack: 
    [Initiating(flowClass=class net.corda.samples.obligation.flows.IOUSettleFlow, classToInitiateWith=class net.corda.samples.obligation.flows.IOUSettleFlow, flowInfo=FlowInfo(flowVersion=1, appName=<unknown>), subFlowVersion=CorDappFlow(platformVersion=11, corDappName=workflows-1.0, corDappHash=8C2322F3ACFF6CA8FE3E7F554352489D40710486D8ED144430A5784441E56717), isEnabledTimedFlow=false), Initiating(flowClass=class com.r3.corda.lib.accounts.workflows.flows.RequestKeyForAccount, classToInitiateWith=class com.r3.corda.lib.accounts.workflows.flows.RequestKeyForAccount, flowInfo=FlowInfo(flowVersion=1, appName=accounts-workflows-1.0), subFlowVersion=CorDappFlow(platformVersion=11, corDappName=accounts-workflows-1.0, corDappHash=80555705CE83A631D1BDD61E9C14A7C2215BB67FAB1411547C4D4B3D66F8402E), isEnabledTimedFlow=false)]
    [Initiating(flowClass=class net.corda.samples.obligation.flows.IOUSettleFlow, classToInitiateWith=class net.corda.samples.obligation.flows.IOUSettleFlow, flowInfo=FlowInfo(flowVersion=1, appName=<unknown>), subFlowVersion=CorDappFlow(platformVersion=11, corDappName=workflows-1.0, corDappHash=8C2322F3ACFF6CA8FE3E7F554352489D40710486D8ED144430A5784441E56717), isEnabledTimedFlow=false), Initiating(flowClass=class com.r3.corda.lib.accounts.workflows.flows.RequestKeyForAccount, classToInitiateWith=class com.r3.corda.lib.accounts.workflows.flows.RequestKeyForAccount, flowInfo=FlowInfo(flowVersion=1, appName=accounts-workflows-1.0), subFlowVersion=CorDappFlow(platformVersion=11, corDappName=accounts-workflows-1.0, corDappHash=80555705CE83A631D1BDD61E9C14A7C2215BB67FAB1411547C4D4B3D66F8402E), isEnabledTimedFlow=false), Inlined(flowClass=class com.r3.corda.lib.accounts.workflows.flows.RequestKeyForAccountFlow, subFlowVersion=CorDappFlow(platformVersion=11, corDappName=accounts-workflows-1.0, corDappHash=80555705CE83A631D1BDD61E9C14A7C2215BB67FAB1411547C4D4B3D66F8402E), isEnabledTimedFlow=false)]


 --- Transition of flow [2289ea18-bf18-4241-8950-cace09523d20] ---
  Timestamp: 2023-01-31T07:42:03.404Z
  Event: Suspend(ioRequest=SendAndReceive({FlowSessionImpl(destination=O=Mock Company 3, L=London, C=GB, sourceSessionId=SessionId(toLong=5897559181151605428))=FlowSessionImpl(destination=O=Mock Company 3, L=London, C=GB, sourceSessionId=SessionId(toLong=5897559181151605428))=4E0603750176CD399C8CB1651F85182D29CBE2582FC133BF48790E24AF3C79E1}, shouldRetrySend=false), maySkipCheckpoint=false, fiber=B240C10EA0A1AC386E871988FB55B35723BAD99239AA23FDF05F063F865C8540, currentStep=Starting)
  Actions: 
    PersistCheckpoint(id=[2289ea18-bf18-4241-8950-cace09523d20], checkpoint=Checkpoint(checkpointState=CheckpointState(invocationContext=InvocationContext(origin=RPC(actor=Actor(id=Id(value=Only For Testing), serviceId=AuthServiceId(value=TEST), owningLegalIdentity=O=Mock Company 1, L=London, C=GB)), trace=Trace(invocationId=94f92ebc-0933-4966-95a0-f3e9022a2977, timestamp: 2023-01-31T07:42:03.376Z, entityType: Invocation, sessionId=94f92ebc-0933-4966-95a0-f3e9022a2977, timestamp: 2023-01-31T07:42:03.376Z, entityType: Session), actor=Actor(id=Id(value=Only For Testing), serviceId=AuthServiceId(value=TEST), owningLegalIdentity=O=Mock Company 1, L=London, C=GB), externalTrace=null, impersonatedActor=null, arguments=[], clientId=null), ourIdentity=O=Mock Company 1, L=London, C=GB, sessions={SessionId(toLong=5897559181151605428)=Uninitiated(destination=O=Mock Company 3, L=London, C=GB, initiatingSubFlow=Initiating(flowClass=class com.r3.corda.lib.accounts.workflows.flows.RequestKeyForAccount, classToInitiateWith=class com.r3.corda.lib.accounts.workflows.flows.RequestKeyForAccount, flowInfo=FlowInfo(flowVersion=1, appName=accounts-workflows-1.0), subFlowVersion=CorDappFlow(platformVersion=11, corDappName=accounts-workflows-1.0, corDappHash=80555705CE83A631D1BDD61E9C14A7C2215BB67FAB1411547C4D4B3D66F8402E), isEnabledTimedFlow=false), sourceSessionId=SessionId(toLong=5897559181151605428), additionalEntropy=-6209985564318473542)}, sessionsToBeClosed=[], subFlowStack=[Initiating(flowClass=class net.corda.samples.obligation.flows.IOUSettleFlow, classToInitiateWith=class net.corda.samples.obligation.flows.IOUSettleFlow, flowInfo=FlowInfo(flowVersion=1, appName=<unknown>), subFlowVersion=CorDappFlow(platformVersion=11, corDappName=workflows-1.0, corDappHash=8C2322F3ACFF6CA8FE3E7F554352489D40710486D8ED144430A5784441E56717), isEnabledTimedFlow=false), Initiating(flowClass=class com.r3.corda.lib.accounts.workflows.flows.RequestKeyForAccount, classToInitiateWith=class com.r3.corda.lib.accounts.workflows.flows.RequestKeyForAccount, flowInfo=FlowInfo(flowVersion=1, appName=accounts-workflows-1.0), subFlowVersion=CorDappFlow(platformVersion=11, corDappName=accounts-workflows-1.0, corDappHash=80555705CE83A631D1BDD61E9C14A7C2215BB67FAB1411547C4D4B3D66F8402E), isEnabledTimedFlow=false), Inlined(flowClass=class com.r3.corda.lib.accounts.workflows.flows.RequestKeyForAccountFlow, subFlowVersion=CorDappFlow(platformVersion=11, corDappName=accounts-workflows-1.0, corDappHash=80555705CE83A631D1BDD61E9C14A7C2215BB67FAB1411547C4D4B3D66F8402E), isEnabledTimedFlow=false)], numberOfSuspends=1, numberOfCommits=2), flowState=Started(flowIORequest=SendAndReceive({FlowSessionImpl(destination=O=Mock Company 3, L=London, C=GB, sourceSessionId=SessionId(toLong=5897559181151605428))=FlowSessionImpl(destination=O=Mock Company 3, L=London, C=GB, sourceSessionId=SessionId(toLong=5897559181151605428))=4E0603750176CD399C8CB1651F85182D29CBE2582FC133BF48790E24AF3C79E1}, shouldRetrySend=false), frozenFiber=B240C10EA0A1AC386E871988FB55B35723BAD99239AA23FDF05F063F865C8540), errorState=Clean, result=null, status=RUNNABLE, progressStep=Starting, flowIoRequest=SendAndReceive, compatible=true), isCheckpointUpdate=true)
    PersistDeduplicationFacts(deduplicationHandlers=[])
    CommitTransaction
    AcknowledgeMessages(deduplicationHandlers=[])
    ScheduleEvent(event=DoRemainingWork)
  Continuation: ProcessEvents
  Diff between previous and next state:
isFlowResumed: 
    true
    false
numberOfCommits: 
    0
    2
checkpoint.progressStep: 
    null
    Starting
checkpoint.flowIoRequest: 
    null
    SendAndReceive
checkpoint.checkpointState.numberOfCommits: 
    1
    2
checkpoint.checkpointState.numberOfSuspends: 
    0
    1
checkpoint.flowState: 
    Unstarted(flowStart=Explicit, frozenFlowLogic=D7C53C42743B3301462089C462C658768FB287E7C44827CC0F6318A04786484F)
    Started(flowIORequest=SendAndReceive({FlowSessionImpl(destination=O=Mock Company 3, L=London, C=GB, sourceSessionId=SessionId(toLong=5897559181151605428))=FlowSessionImpl(destination=O=Mock Company 3, L=London, C=GB, sourceSessionId=SessionId(toLong=5897559181151605428))=4E0603750176CD399C8CB1651F85182D29CBE2582FC133BF48790E24AF3C79E1}, shouldRetrySend=false), frozenFiber=B240C10EA0A1AC386E871988FB55B35723BAD99239AA23FDF05F063F865C8540)
checkpoint.timestamp: 
    2023-01-31T07:42:03.394Z
    2023-01-31T07:42:03.401Z


 --- Transition of flow [2289ea18-bf18-4241-8950-cace09523d20] ---
  Timestamp: 2023-01-31T07:42:03.407Z
  Event: DoRemainingWork
  Actions: 
    SendMultiple(sendInitial=[SendInitial(destination=O=Mock Company 3, L=London, C=GB, initialise=InitialSessionMessage(initiatorSessionId=SessionId(toLong=5897559181151605428), initiationEntropy=-6209985564318473542, initiatorFlowClassName=com.r3.corda.lib.accounts.workflows.flows.RequestKeyForAccount, appName=accounts-workflows-1.0, firstPayload=class net.corda.core.serialization.SerializedBytes), deduplicationId=SenderDeduplicationId(deduplicationId=DeduplicationId(toString=N-R-5897559181151605428--6209985564318473542-1-0), senderUUID=7da18ab5-41ea-4720-99fc-208eae0a7847))], sendExisting=[])
  Continuation: ProcessEvents
  Diff between previous and next state:
checkpoint.checkpointState.sessions.SessionId(toLong=5897559181151605428): 
    Uninitiated(destination=O=Mock Company 3, L=London, C=GB, initiatingSubFlow=Initiating(flowClass=class com.r3.corda.lib.accounts.workflows.flows.RequestKeyForAccount, classToInitiateWith=class com.r3.corda.lib.accounts.workflows.flows.RequestKeyForAccount, flowInfo=FlowInfo(flowVersion=1, appName=accounts-workflows-1.0), subFlowVersion=CorDappFlow(platformVersion=11, corDappName=accounts-workflows-1.0, corDappHash=80555705CE83A631D1BDD61E9C14A7C2215BB67FAB1411547C4D4B3D66F8402E), isEnabledTimedFlow=false), sourceSessionId=SessionId(toLong=5897559181151605428), additionalEntropy=-6209985564318473542)
    Initiating(bufferedMessages=[], rejectionError=null, deduplicationSeed=R-5897559181151605428--6209985564318473542)
checkpoint.flowState.flowIORequest: 
    SendAndReceive({FlowSessionImpl(destination=O=Mock Company 3, L=London, C=GB, sourceSessionId=SessionId(toLong=5897559181151605428))=FlowSessionImpl(destination=O=Mock Company 3, L=London, C=GB, sourceSessionId=SessionId(toLong=5897559181151605428))=4E0603750176CD399C8CB1651F85182D29CBE2582FC133BF48790E24AF3C79E1}, shouldRetrySend=false)
    Receive(sessions=[FlowSessionImpl(destination=O=Mock Company 3, L=London, C=GB, sourceSessionId=SessionId(toLong=5897559181151605428))])
checkpoint.timestamp: 
    2023-01-31T07:42:03.401Z
    2023-01-31T07:42:03.404Z


 --- Transition of flow [2289ea18-bf18-4241-8950-cace09523d20] ---
  Timestamp: 2023-01-31T07:42:03.435Z
  Event: DeliverSessionMessage(sessionMessage=ExistingSessionMessage(recipientSessionId=SessionId(toLong=5897559181151605428), payload=ConfirmSessionMessage(initiatedSessionId=SessionId(toLong=-6898937881699103482), initiatedFlowInfo=FlowInfo(flowVersion=1, appName=accounts-workflows-1.0))), deduplicationHandler=net.corda.testing.node.internal.MockNodeMessagingService$InMemoryDeduplicationHandler@7737d71, sender=O=Mock Company 3, L=London, C=GB)
  Actions: 
    ScheduleEvent(event=DoRemainingWork)
  Continuation: ProcessEvents
  Diff between previous and next state:
pendingDeduplicationHandlers: 
    []
    [net.corda.testing.node.internal.MockNodeMessagingService$InMemoryDeduplicationHandler@7737d71]
checkpoint.checkpointState.sessions.SessionId(toLong=5897559181151605428): 
    Initiating(bufferedMessages=[], rejectionError=null, deduplicationSeed=R-5897559181151605428--6209985564318473542)
    Initiated(peerParty=O=Mock Company 3, L=London, C=GB, peerFlowInfo=FlowInfo(flowVersion=1, appName=accounts-workflows-1.0), receivedMessages=[], otherSideErrored=false, peerSinkSessionId=SessionId(toLong=-6898937881699103482), deduplicationSeed=R-5897559181151605428--6209985564318473542)
checkpoint.timestamp: 
    2023-01-31T07:42:03.404Z
    2023-01-31T07:42:03.435Z


 --- Transition of flow [2289ea18-bf18-4241-8950-cace09523d20] ---
  Timestamp: 2023-01-31T07:42:03.435Z
  Event: DoRemainingWork
  Actions: 
    
  Continuation: ProcessEvents
  Diff between previous and next state:
null

 --- Transition of flow [2289ea18-bf18-4241-8950-cace09523d20] ---
  Timestamp: 2023-01-31T07:42:03.437Z
  Event: DeliverSessionMessage(sessionMessage=ExistingSessionMessage(recipientSessionId=SessionId(toLong=5897559181151605428), payload=DataSessionMessage(payload=class net.corda.core.serialization.SerializedBytes)), deduplicationHandler=net.corda.testing.node.internal.MockNodeMessagingService$InMemoryDeduplicationHandler@1c5d7d38, sender=O=Mock Company 3, L=London, C=GB)
  Actions: 
    ScheduleEvent(event=DoRemainingWork)
  Continuation: ProcessEvents
  Diff between previous and next state:
pendingDeduplicationHandlers: 
    [net.corda.testing.node.internal.MockNodeMessagingService$InMemoryDeduplicationHandler@7737d71]
    [net.corda.testing.node.internal.MockNodeMessagingService$InMemoryDeduplicationHandler@7737d71, net.corda.testing.node.internal.MockNodeMessagingService$InMemoryDeduplicationHandler@1c5d7d38]
checkpoint.checkpointState.sessions.SessionId(toLong=5897559181151605428).receivedMessages.isEmpty: 
    true
    false
checkpoint.timestamp: 
    2023-01-31T07:42:03.435Z
    2023-01-31T07:42:03.437Z


 --- Transition of flow [2289ea18-bf18-4241-8950-cace09523d20] ---
  Timestamp: 2023-01-31T07:42:03.437Z
  Event: DoRemainingWork
  Actions: 
    CreateTransaction
  Continuation: Resume(result=class java.util.LinkedHashMap)
  Diff between previous and next state:
isFlowResumed: 
    false
    true
checkpoint.checkpointState.sessions.SessionId(toLong=5897559181151605428).receivedMessages.isEmpty: 
    false
    true


 --- Transition of flow [2289ea18-bf18-4241-8950-cace09523d20] ---
  Timestamp: 2023-01-31T07:42:03.438Z
  Event: EnterSubFlow(subFlowClass=class com.r3.corda.lib.ci.workflows.RequestKeyFlow, subFlowVersion=CoreFlow(platformVersion=11), isEnabledTimedFlow=false)
  Actions: 
    
  Continuation: ProcessEvents
  Diff between previous and next state:
checkpoint.checkpointState.subFlowStack: 
    [Initiating(flowClass=class net.corda.samples.obligation.flows.IOUSettleFlow, classToInitiateWith=class net.corda.samples.obligation.flows.IOUSettleFlow, flowInfo=FlowInfo(flowVersion=1, appName=<unknown>), subFlowVersion=CorDappFlow(platformVersion=11, corDappName=workflows-1.0, corDappHash=8C2322F3ACFF6CA8FE3E7F554352489D40710486D8ED144430A5784441E56717), isEnabledTimedFlow=false), Initiating(flowClass=class com.r3.corda.lib.accounts.workflows.flows.RequestKeyForAccount, classToInitiateWith=class com.r3.corda.lib.accounts.workflows.flows.RequestKeyForAccount, flowInfo=FlowInfo(flowVersion=1, appName=accounts-workflows-1.0), subFlowVersion=CorDappFlow(platformVersion=11, corDappName=accounts-workflows-1.0, corDappHash=80555705CE83A631D1BDD61E9C14A7C2215BB67FAB1411547C4D4B3D66F8402E), isEnabledTimedFlow=false), Inlined(flowClass=class com.r3.corda.lib.accounts.workflows.flows.RequestKeyForAccountFlow, subFlowVersion=CorDappFlow(platformVersion=11, corDappName=accounts-workflows-1.0, corDappHash=80555705CE83A631D1BDD61E9C14A7C2215BB67FAB1411547C4D4B3D66F8402E), isEnabledTimedFlow=false)]
    [Initiating(flowClass=class net.corda.samples.obligation.flows.IOUSettleFlow, classToInitiateWith=class net.corda.samples.obligation.flows.IOUSettleFlow, flowInfo=FlowInfo(flowVersion=1, appName=<unknown>), subFlowVersion=CorDappFlow(platformVersion=11, corDappName=workflows-1.0, corDappHash=8C2322F3ACFF6CA8FE3E7F554352489D40710486D8ED144430A5784441E56717), isEnabledTimedFlow=false), Initiating(flowClass=class com.r3.corda.lib.accounts.workflows.flows.RequestKeyForAccount, classToInitiateWith=class com.r3.corda.lib.accounts.workflows.flows.RequestKeyForAccount, flowInfo=FlowInfo(flowVersion=1, appName=accounts-workflows-1.0), subFlowVersion=CorDappFlow(platformVersion=11, corDappName=accounts-workflows-1.0, corDappHash=80555705CE83A631D1BDD61E9C14A7C2215BB67FAB1411547C4D4B3D66F8402E), isEnabledTimedFlow=false), Inlined(flowClass=class com.r3.corda.lib.accounts.workflows.flows.RequestKeyForAccountFlow, subFlowVersion=CorDappFlow(platformVersion=11, corDappName=accounts-workflows-1.0, corDappHash=80555705CE83A631D1BDD61E9C14A7C2215BB67FAB1411547C4D4B3D66F8402E), isEnabledTimedFlow=false), Inlined(flowClass=class com.r3.corda.lib.ci.workflows.RequestKeyFlow, subFlowVersion=CoreFlow(platformVersion=11), isEnabledTimedFlow=false)]
checkpoint.timestamp: 
    2023-01-31T07:42:03.437Z
    2023-01-31T07:42:03.438Z


 --- Transition of flow [2289ea18-bf18-4241-8950-cace09523d20] ---
  Timestamp: 2023-01-31T07:42:03.443Z
  Event: Suspend(ioRequest=SendAndReceive({FlowSessionImpl(destination=O=Mock Company 3, L=London, C=GB, sourceSessionId=SessionId(toLong=5897559181151605428))=FlowSessionImpl(destination=O=Mock Company 3, L=London, C=GB, sourceSessionId=SessionId(toLong=5897559181151605428))=20159965AB20C558525B25D92E0DD3B4575A745D27F8889DA8F44C28E19E516D}, shouldRetrySend=false), maySkipCheckpoint=false, fiber=BC08B227FE60A6B2A3A70C2BE5E308F80A825AD220086EDFDA077F8C11962FF0, currentStep=Starting)
  Actions: 
    PersistCheckpoint(id=[2289ea18-bf18-4241-8950-cace09523d20], checkpoint=Checkpoint(checkpointState=CheckpointState(invocationContext=InvocationContext(origin=RPC(actor=Actor(id=Id(value=Only For Testing), serviceId=AuthServiceId(value=TEST), owningLegalIdentity=O=Mock Company 1, L=London, C=GB)), trace=Trace(invocationId=94f92ebc-0933-4966-95a0-f3e9022a2977, timestamp: 2023-01-31T07:42:03.376Z, entityType: Invocation, sessionId=94f92ebc-0933-4966-95a0-f3e9022a2977, timestamp: 2023-01-31T07:42:03.376Z, entityType: Session), actor=Actor(id=Id(value=Only For Testing), serviceId=AuthServiceId(value=TEST), owningLegalIdentity=O=Mock Company 1, L=London, C=GB), externalTrace=null, impersonatedActor=null, arguments=[], clientId=null), ourIdentity=O=Mock Company 1, L=London, C=GB, sessions={SessionId(toLong=5897559181151605428)=Initiated(peerParty=O=Mock Company 3, L=London, C=GB, peerFlowInfo=FlowInfo(flowVersion=1, appName=accounts-workflows-1.0), receivedMessages=[], otherSideErrored=false, peerSinkSessionId=SessionId(toLong=-6898937881699103482), deduplicationSeed=R-5897559181151605428--6209985564318473542)}, sessionsToBeClosed=[], subFlowStack=[Initiating(flowClass=class net.corda.samples.obligation.flows.IOUSettleFlow, classToInitiateWith=class net.corda.samples.obligation.flows.IOUSettleFlow, flowInfo=FlowInfo(flowVersion=1, appName=<unknown>), subFlowVersion=CorDappFlow(platformVersion=11, corDappName=workflows-1.0, corDappHash=8C2322F3ACFF6CA8FE3E7F554352489D40710486D8ED144430A5784441E56717), isEnabledTimedFlow=false), Initiating(flowClass=class com.r3.corda.lib.accounts.workflows.flows.RequestKeyForAccount, classToInitiateWith=class com.r3.corda.lib.accounts.workflows.flows.RequestKeyForAccount, flowInfo=FlowInfo(flowVersion=1, appName=accounts-workflows-1.0), subFlowVersion=CorDappFlow(platformVersion=11, corDappName=accounts-workflows-1.0, corDappHash=80555705CE83A631D1BDD61E9C14A7C2215BB67FAB1411547C4D4B3D66F8402E), isEnabledTimedFlow=false), Inlined(flowClass=class com.r3.corda.lib.accounts.workflows.flows.RequestKeyForAccountFlow, subFlowVersion=CorDappFlow(platformVersion=11, corDappName=accounts-workflows-1.0, corDappHash=80555705CE83A631D1BDD61E9C14A7C2215BB67FAB1411547C4D4B3D66F8402E), isEnabledTimedFlow=false), Inlined(flowClass=class com.r3.corda.lib.ci.workflows.RequestKeyFlow, subFlowVersion=CoreFlow(platformVersion=11), isEnabledTimedFlow=false)], numberOfSuspends=2, numberOfCommits=3), flowState=Started(flowIORequest=SendAndReceive({FlowSessionImpl(destination=O=Mock Company 3, L=London, C=GB, sourceSessionId=SessionId(toLong=5897559181151605428))=FlowSessionImpl(destination=O=Mock Company 3, L=London, C=GB, sourceSessionId=SessionId(toLong=5897559181151605428))=20159965AB20C558525B25D92E0DD3B4575A745D27F8889DA8F44C28E19E516D}, shouldRetrySend=false), frozenFiber=BC08B227FE60A6B2A3A70C2BE5E308F80A825AD220086EDFDA077F8C11962FF0), errorState=Clean, result=null, status=RUNNABLE, progressStep=Starting, flowIoRequest=SendAndReceive, compatible=true), isCheckpointUpdate=true)
    PersistDeduplicationFacts(deduplicationHandlers=[net.corda.testing.node.internal.MockNodeMessagingService$InMemoryDeduplicationHandler@7737d71, net.corda.testing.node.internal.MockNodeMessagingService$InMemoryDeduplicationHandler@1c5d7d38])
    CommitTransaction
    AcknowledgeMessages(deduplicationHandlers=[net.corda.testing.node.internal.MockNodeMessagingService$InMemoryDeduplicationHandler@7737d71, net.corda.testing.node.internal.MockNodeMessagingService$InMemoryDeduplicationHandler@1c5d7d38])
    ScheduleEvent(event=DoRemainingWork)
  Continuation: ProcessEvents
  Diff between previous and next state:
pendingDeduplicationHandlers: 
    [net.corda.testing.node.internal.MockNodeMessagingService$InMemoryDeduplicationHandler@7737d71, net.corda.testing.node.internal.MockNodeMessagingService$InMemoryDeduplicationHandler@1c5d7d38]
    []
isFlowResumed: 
    true
    false
numberOfCommits: 
    2
    3
checkpoint.checkpointState.numberOfCommits: 
    2
    3
checkpoint.checkpointState.numberOfSuspends: 
    1
    2
checkpoint.flowState.flowIORequest: 
    Receive(sessions=[FlowSessionImpl(destination=O=Mock Company 3, L=London, C=GB, sourceSessionId=SessionId(toLong=5897559181151605428))])
    SendAndReceive({FlowSessionImpl(destination=O=Mock Company 3, L=London, C=GB, sourceSessionId=SessionId(toLong=5897559181151605428))=FlowSessionImpl(destination=O=Mock Company 3, L=London, C=GB, sourceSessionId=SessionId(toLong=5897559181151605428))=20159965AB20C558525B25D92E0DD3B4575A745D27F8889DA8F44C28E19E516D}, shouldRetrySend=false)
checkpoint.flowState.frozenFiber.hash: 
    B240C10EA0A1AC386E871988FB55B35723BAD99239AA23FDF05F063F865C8540
    BC08B227FE60A6B2A3A70C2BE5E308F80A825AD220086EDFDA077F8C11962FF0
checkpoint.timestamp: 
    2023-01-31T07:42:03.438Z
    2023-01-31T07:42:03.441Z


 --- Transition of flow [2289ea18-bf18-4241-8950-cace09523d20] ---
  Timestamp: 2023-01-31T07:42:03.444Z
  Event: DoRemainingWork
  Actions: 
    SendMultiple(sendInitial=[], sendExisting=[SendExisting(peerParty=O=Mock Company 3, L=London, C=GB, message=ExistingSessionMessage(recipientSessionId=SessionId(toLong=-6898937881699103482), payload=DataSessionMessage(payload=class net.corda.core.serialization.SerializedBytes)), deduplicationId=SenderDeduplicationId(deduplicationId=DeduplicationId(toString=N-R-5897559181151605428--6209985564318473542-2-0), senderUUID=7da18ab5-41ea-4720-99fc-208eae0a7847))])
  Continuation: ProcessEvents
  Diff between previous and next state:
checkpoint.flowState.flowIORequest: 
    SendAndReceive({FlowSessionImpl(destination=O=Mock Company 3, L=London, C=GB, sourceSessionId=SessionId(toLong=5897559181151605428))=FlowSessionImpl(destination=O=Mock Company 3, L=London, C=GB, sourceSessionId=SessionId(toLong=5897559181151605428))=20159965AB20C558525B25D92E0DD3B4575A745D27F8889DA8F44C28E19E516D}, shouldRetrySend=false)
    Receive(sessions=[FlowSessionImpl(destination=O=Mock Company 3, L=London, C=GB, sourceSessionId=SessionId(toLong=5897559181151605428))])
checkpoint.timestamp: 
    2023-01-31T07:42:03.441Z
    2023-01-31T07:42:03.444Z


 --- Transition of flow [2289ea18-bf18-4241-8950-cace09523d20] ---
  Timestamp: 2023-01-31T07:42:03.459Z
  Event: DeliverSessionMessage(sessionMessage=ExistingSessionMessage(recipientSessionId=SessionId(toLong=5897559181151605428), payload=DataSessionMessage(payload=class net.corda.core.serialization.SerializedBytes)), deduplicationHandler=net.corda.testing.node.internal.MockNodeMessagingService$InMemoryDeduplicationHandler@69ea3ad2, sender=O=Mock Company 3, L=London, C=GB)
  Actions: 
    ScheduleEvent(event=DoRemainingWork)
  Continuation: ProcessEvents
  Diff between previous and next state:
pendingDeduplicationHandlers: 
    []
    [net.corda.testing.node.internal.MockNodeMessagingService$InMemoryDeduplicationHandler@69ea3ad2]
checkpoint.checkpointState.sessions.SessionId(toLong=5897559181151605428).receivedMessages.isEmpty: 
    true
    false
checkpoint.timestamp: 
    2023-01-31T07:42:03.444Z
    2023-01-31T07:42:03.459Z


 --- Transition of flow [2289ea18-bf18-4241-8950-cace09523d20] ---
  Timestamp: 2023-01-31T07:42:03.459Z
  Event: DoRemainingWork
  Actions: 
    CreateTransaction
  Continuation: Resume(result=class java.util.LinkedHashMap)
  Diff between previous and next state:
isFlowResumed: 
    false
    true
checkpoint.checkpointState.sessions.SessionId(toLong=5897559181151605428).receivedMessages.isEmpty: 
    false
    true


 --- Transition of flow [2289ea18-bf18-4241-8950-cace09523d20] ---
  Timestamp: 2023-01-31T07:42:03.462Z
  Event: LeaveSubFlow
  Actions: 
    
  Continuation: ProcessEvents
  Diff between previous and next state:
checkpoint.checkpointState.subFlowStack: 
    [Initiating(flowClass=class net.corda.samples.obligation.flows.IOUSettleFlow, classToInitiateWith=class net.corda.samples.obligation.flows.IOUSettleFlow, flowInfo=FlowInfo(flowVersion=1, appName=<unknown>), subFlowVersion=CorDappFlow(platformVersion=11, corDappName=workflows-1.0, corDappHash=8C2322F3ACFF6CA8FE3E7F554352489D40710486D8ED144430A5784441E56717), isEnabledTimedFlow=false), Initiating(flowClass=class com.r3.corda.lib.accounts.workflows.flows.RequestKeyForAccount, classToInitiateWith=class com.r3.corda.lib.accounts.workflows.flows.RequestKeyForAccount, flowInfo=FlowInfo(flowVersion=1, appName=accounts-workflows-1.0), subFlowVersion=CorDappFlow(platformVersion=11, corDappName=accounts-workflows-1.0, corDappHash=80555705CE83A631D1BDD61E9C14A7C2215BB67FAB1411547C4D4B3D66F8402E), isEnabledTimedFlow=false), Inlined(flowClass=class com.r3.corda.lib.accounts.workflows.flows.RequestKeyForAccountFlow, subFlowVersion=CorDappFlow(platformVersion=11, corDappName=accounts-workflows-1.0, corDappHash=80555705CE83A631D1BDD61E9C14A7C2215BB67FAB1411547C4D4B3D66F8402E), isEnabledTimedFlow=false), Inlined(flowClass=class com.r3.corda.lib.ci.workflows.RequestKeyFlow, subFlowVersion=CoreFlow(platformVersion=11), isEnabledTimedFlow=false)]
    [Initiating(flowClass=class net.corda.samples.obligation.flows.IOUSettleFlow, classToInitiateWith=class net.corda.samples.obligation.flows.IOUSettleFlow, flowInfo=FlowInfo(flowVersion=1, appName=<unknown>), subFlowVersion=CorDappFlow(platformVersion=11, corDappName=workflows-1.0, corDappHash=8C2322F3ACFF6CA8FE3E7F554352489D40710486D8ED144430A5784441E56717), isEnabledTimedFlow=false), Initiating(flowClass=class com.r3.corda.lib.accounts.workflows.flows.RequestKeyForAccount, classToInitiateWith=class com.r3.corda.lib.accounts.workflows.flows.RequestKeyForAccount, flowInfo=FlowInfo(flowVersion=1, appName=accounts-workflows-1.0), subFlowVersion=CorDappFlow(platformVersion=11, corDappName=accounts-workflows-1.0, corDappHash=80555705CE83A631D1BDD61E9C14A7C2215BB67FAB1411547C4D4B3D66F8402E), isEnabledTimedFlow=false), Inlined(flowClass=class com.r3.corda.lib.accounts.workflows.flows.RequestKeyForAccountFlow, subFlowVersion=CorDappFlow(platformVersion=11, corDappName=accounts-workflows-1.0, corDappHash=80555705CE83A631D1BDD61E9C14A7C2215BB67FAB1411547C4D4B3D66F8402E), isEnabledTimedFlow=false)]
checkpoint.timestamp: 
    2023-01-31T07:42:03.459Z
    2023-01-31T07:42:03.462Z


 --- Transition of flow [2289ea18-bf18-4241-8950-cace09523d20] ---
  Timestamp: 2023-01-31T07:42:03.462Z
  Event: LeaveSubFlow
  Actions: 
    
  Continuation: ProcessEvents
  Diff between previous and next state:
checkpoint.checkpointState.subFlowStack: 
    [Initiating(flowClass=class net.corda.samples.obligation.flows.IOUSettleFlow, classToInitiateWith=class net.corda.samples.obligation.flows.IOUSettleFlow, flowInfo=FlowInfo(flowVersion=1, appName=<unknown>), subFlowVersion=CorDappFlow(platformVersion=11, corDappName=workflows-1.0, corDappHash=8C2322F3ACFF6CA8FE3E7F554352489D40710486D8ED144430A5784441E56717), isEnabledTimedFlow=false), Initiating(flowClass=class com.r3.corda.lib.accounts.workflows.flows.RequestKeyForAccount, classToInitiateWith=class com.r3.corda.lib.accounts.workflows.flows.RequestKeyForAccount, flowInfo=FlowInfo(flowVersion=1, appName=accounts-workflows-1.0), subFlowVersion=CorDappFlow(platformVersion=11, corDappName=accounts-workflows-1.0, corDappHash=80555705CE83A631D1BDD61E9C14A7C2215BB67FAB1411547C4D4B3D66F8402E), isEnabledTimedFlow=false), Inlined(flowClass=class com.r3.corda.lib.accounts.workflows.flows.RequestKeyForAccountFlow, subFlowVersion=CorDappFlow(platformVersion=11, corDappName=accounts-workflows-1.0, corDappHash=80555705CE83A631D1BDD61E9C14A7C2215BB67FAB1411547C4D4B3D66F8402E), isEnabledTimedFlow=false)]
    [Initiating(flowClass=class net.corda.samples.obligation.flows.IOUSettleFlow, classToInitiateWith=class net.corda.samples.obligation.flows.IOUSettleFlow, flowInfo=FlowInfo(flowVersion=1, appName=<unknown>), subFlowVersion=CorDappFlow(platformVersion=11, corDappName=workflows-1.0, corDappHash=8C2322F3ACFF6CA8FE3E7F554352489D40710486D8ED144430A5784441E56717), isEnabledTimedFlow=false), Initiating(flowClass=class com.r3.corda.lib.accounts.workflows.flows.RequestKeyForAccount, classToInitiateWith=class com.r3.corda.lib.accounts.workflows.flows.RequestKeyForAccount, flowInfo=FlowInfo(flowVersion=1, appName=accounts-workflows-1.0), subFlowVersion=CorDappFlow(platformVersion=11, corDappName=accounts-workflows-1.0, corDappHash=80555705CE83A631D1BDD61E9C14A7C2215BB67FAB1411547C4D4B3D66F8402E), isEnabledTimedFlow=false)]


 --- Transition of flow [2289ea18-bf18-4241-8950-cace09523d20] ---
  Timestamp: 2023-01-31T07:42:03.462Z
  Event: LeaveSubFlow
  Actions: 
    
  Continuation: ProcessEvents
  Diff between previous and next state:
checkpoint.checkpointState.subFlowStack: 
    [Initiating(flowClass=class net.corda.samples.obligation.flows.IOUSettleFlow, classToInitiateWith=class net.corda.samples.obligation.flows.IOUSettleFlow, flowInfo=FlowInfo(flowVersion=1, appName=<unknown>), subFlowVersion=CorDappFlow(platformVersion=11, corDappName=workflows-1.0, corDappHash=8C2322F3ACFF6CA8FE3E7F554352489D40710486D8ED144430A5784441E56717), isEnabledTimedFlow=false), Initiating(flowClass=class com.r3.corda.lib.accounts.workflows.flows.RequestKeyForAccount, classToInitiateWith=class com.r3.corda.lib.accounts.workflows.flows.RequestKeyForAccount, flowInfo=FlowInfo(flowVersion=1, appName=accounts-workflows-1.0), subFlowVersion=CorDappFlow(platformVersion=11, corDappName=accounts-workflows-1.0, corDappHash=80555705CE83A631D1BDD61E9C14A7C2215BB67FAB1411547C4D4B3D66F8402E), isEnabledTimedFlow=false)]
    [Initiating(flowClass=class net.corda.samples.obligation.flows.IOUSettleFlow, classToInitiateWith=class net.corda.samples.obligation.flows.IOUSettleFlow, flowInfo=FlowInfo(flowVersion=1, appName=<unknown>), subFlowVersion=CorDappFlow(platformVersion=11, corDappName=workflows-1.0, corDappHash=8C2322F3ACFF6CA8FE3E7F554352489D40710486D8ED144430A5784441E56717), isEnabledTimedFlow=false)]


 --- Transition of flow [2289ea18-bf18-4241-8950-cace09523d20] ---
  Timestamp: 2023-01-31T07:42:03.714Z
  Event: InitiateFlow(destination=O=Mock Company 3, L=London, C=GB, wellKnownParty=O=Mock Company 3, L=London, C=GB)
  Actions: 
    AddSessionBinding(flowId=[2289ea18-bf18-4241-8950-cace09523d20], sessionId=SessionId(toLong=-7855006138722062871))
  Continuation: Resume(result=class net.corda.node.services.statemachine.FlowSessionImpl)
  Diff between previous and next state:
checkpoint.checkpointState.sessions.SessionId(toLong=-7855006138722062871): 
    null
    Uninitiated(destination=O=Mock Company 3, L=London, C=GB, initiatingSubFlow=Initiating(flowClass=class net.corda.samples.obligation.flows.IOUSettleFlow, classToInitiateWith=class net.corda.samples.obligation.flows.IOUSettleFlow, flowInfo=FlowInfo(flowVersion=1, appName=<unknown>), subFlowVersion=CorDappFlow(platformVersion=11, corDappName=workflows-1.0, corDappHash=8C2322F3ACFF6CA8FE3E7F554352489D40710486D8ED144430A5784441E56717), isEnabledTimedFlow=false), sourceSessionId=SessionId(toLong=-7855006138722062871), additionalEntropy=-5407470294366436114)
checkpoint.timestamp: 
    2023-01-31T07:42:03.462Z
    2023-01-31T07:42:03.714Z


 --- Transition of flow [2289ea18-bf18-4241-8950-cace09523d20] ---
  Timestamp: 2023-01-31T07:42:03.714Z
  Event: EnterSubFlow(subFlowClass=class net.corda.core.flows.CollectSignatureFlow, subFlowVersion=CoreFlow(platformVersion=11), isEnabledTimedFlow=false)
  Actions: 
    
  Continuation: ProcessEvents
  Diff between previous and next state:
checkpoint.checkpointState.subFlowStack: 
    [Initiating(flowClass=class net.corda.samples.obligation.flows.IOUSettleFlow, classToInitiateWith=class net.corda.samples.obligation.flows.IOUSettleFlow, flowInfo=FlowInfo(flowVersion=1, appName=<unknown>), subFlowVersion=CorDappFlow(platformVersion=11, corDappName=workflows-1.0, corDappHash=8C2322F3ACFF6CA8FE3E7F554352489D40710486D8ED144430A5784441E56717), isEnabledTimedFlow=false)]
    [Initiating(flowClass=class net.corda.samples.obligation.flows.IOUSettleFlow, classToInitiateWith=class net.corda.samples.obligation.flows.IOUSettleFlow, flowInfo=FlowInfo(flowVersion=1, appName=<unknown>), subFlowVersion=CorDappFlow(platformVersion=11, corDappName=workflows-1.0, corDappHash=8C2322F3ACFF6CA8FE3E7F554352489D40710486D8ED144430A5784441E56717), isEnabledTimedFlow=false), Inlined(flowClass=class net.corda.core.flows.CollectSignatureFlow, subFlowVersion=CoreFlow(platformVersion=11), isEnabledTimedFlow=false)]


 --- Transition of flow [2289ea18-bf18-4241-8950-cace09523d20] ---
  Timestamp: 2023-01-31T07:42:03.715Z
  Event: EnterSubFlow(subFlowClass=class net.corda.core.flows.SendTransactionFlow, subFlowVersion=CoreFlow(platformVersion=11), isEnabledTimedFlow=false)
  Actions: 
    
  Continuation: ProcessEvents
  Diff between previous and next state:
checkpoint.checkpointState.subFlowStack: 
    [Initiating(flowClass=class net.corda.samples.obligation.flows.IOUSettleFlow, classToInitiateWith=class net.corda.samples.obligation.flows.IOUSettleFlow, flowInfo=FlowInfo(flowVersion=1, appName=<unknown>), subFlowVersion=CorDappFlow(platformVersion=11, corDappName=workflows-1.0, corDappHash=8C2322F3ACFF6CA8FE3E7F554352489D40710486D8ED144430A5784441E56717), isEnabledTimedFlow=false), Inlined(flowClass=class net.corda.core.flows.CollectSignatureFlow, subFlowVersion=CoreFlow(platformVersion=11), isEnabledTimedFlow=false)]
    [Initiating(flowClass=class net.corda.samples.obligation.flows.IOUSettleFlow, classToInitiateWith=class net.corda.samples.obligation.flows.IOUSettleFlow, flowInfo=FlowInfo(flowVersion=1, appName=<unknown>), subFlowVersion=CorDappFlow(platformVersion=11, corDappName=workflows-1.0, corDappHash=8C2322F3ACFF6CA8FE3E7F554352489D40710486D8ED144430A5784441E56717), isEnabledTimedFlow=false), Inlined(flowClass=class net.corda.core.flows.CollectSignatureFlow, subFlowVersion=CoreFlow(platformVersion=11), isEnabledTimedFlow=false), Inlined(flowClass=class net.corda.core.flows.SendTransactionFlow, subFlowVersion=CoreFlow(platformVersion=11), isEnabledTimedFlow=false)]
checkpoint.timestamp: 
    2023-01-31T07:42:03.714Z
    2023-01-31T07:42:03.715Z


 --- Transition of flow [2289ea18-bf18-4241-8950-cace09523d20] ---
  Timestamp: 2023-01-31T07:42:03.723Z
  Event: Suspend(ioRequest=SendAndReceive({FlowSessionImpl(destination=O=Mock Company 3, L=London, C=GB, sourceSessionId=SessionId(toLong=-7855006138722062871))=FlowSessionImpl(destination=O=Mock Company 3, L=London, C=GB, sourceSessionId=SessionId(toLong=-7855006138722062871))=4D01D19D3FFA5FA6DFF6E3E6C70C24B677C7495B611A4DF0B2674962C6C59EA0}, shouldRetrySend=false), maySkipCheckpoint=false, fiber=963C50599AEDCDEAABA6427FCE3F694BE72AB6F0829168DE10F2F6CE96298328, currentStep=Starting)
  Actions: 
    PersistCheckpoint(id=[2289ea18-bf18-4241-8950-cace09523d20], checkpoint=Checkpoint(checkpointState=CheckpointState(invocationContext=InvocationContext(origin=RPC(actor=Actor(id=Id(value=Only For Testing), serviceId=AuthServiceId(value=TEST), owningLegalIdentity=O=Mock Company 1, L=London, C=GB)), trace=Trace(invocationId=94f92ebc-0933-4966-95a0-f3e9022a2977, timestamp: 2023-01-31T07:42:03.376Z, entityType: Invocation, sessionId=94f92ebc-0933-4966-95a0-f3e9022a2977, timestamp: 2023-01-31T07:42:03.376Z, entityType: Session), actor=Actor(id=Id(value=Only For Testing), serviceId=AuthServiceId(value=TEST), owningLegalIdentity=O=Mock Company 1, L=London, C=GB), externalTrace=null, impersonatedActor=null, arguments=[], clientId=null), ourIdentity=O=Mock Company 1, L=London, C=GB, sessions={SessionId(toLong=5897559181151605428)=Initiated(peerParty=O=Mock Company 3, L=London, C=GB, peerFlowInfo=FlowInfo(flowVersion=1, appName=accounts-workflows-1.0), receivedMessages=[], otherSideErrored=false, peerSinkSessionId=SessionId(toLong=-6898937881699103482), deduplicationSeed=R-5897559181151605428--6209985564318473542), SessionId(toLong=-7855006138722062871)=Uninitiated(destination=O=Mock Company 3, L=London, C=GB, initiatingSubFlow=Initiating(flowClass=class net.corda.samples.obligation.flows.IOUSettleFlow, classToInitiateWith=class net.corda.samples.obligation.flows.IOUSettleFlow, flowInfo=FlowInfo(flowVersion=1, appName=<unknown>), subFlowVersion=CorDappFlow(platformVersion=11, corDappName=workflows-1.0, corDappHash=8C2322F3ACFF6CA8FE3E7F554352489D40710486D8ED144430A5784441E56717), isEnabledTimedFlow=false), sourceSessionId=SessionId(toLong=-7855006138722062871), additionalEntropy=-5407470294366436114)}, sessionsToBeClosed=[], subFlowStack=[Initiating(flowClass=class net.corda.samples.obligation.flows.IOUSettleFlow, classToInitiateWith=class net.corda.samples.obligation.flows.IOUSettleFlow, flowInfo=FlowInfo(flowVersion=1, appName=<unknown>), subFlowVersion=CorDappFlow(platformVersion=11, corDappName=workflows-1.0, corDappHash=8C2322F3ACFF6CA8FE3E7F554352489D40710486D8ED144430A5784441E56717), isEnabledTimedFlow=false), Inlined(flowClass=class net.corda.core.flows.CollectSignatureFlow, subFlowVersion=CoreFlow(platformVersion=11), isEnabledTimedFlow=false), Inlined(flowClass=class net.corda.core.flows.SendTransactionFlow, subFlowVersion=CoreFlow(platformVersion=11), isEnabledTimedFlow=false)], numberOfSuspends=3, numberOfCommits=4), flowState=Started(flowIORequest=SendAndReceive({FlowSessionImpl(destination=O=Mock Company 3, L=London, C=GB, sourceSessionId=SessionId(toLong=-7855006138722062871))=FlowSessionImpl(destination=O=Mock Company 3, L=London, C=GB, sourceSessionId=SessionId(toLong=-7855006138722062871))=4D01D19D3FFA5FA6DFF6E3E6C70C24B677C7495B611A4DF0B2674962C6C59EA0}, shouldRetrySend=false), frozenFiber=963C50599AEDCDEAABA6427FCE3F694BE72AB6F0829168DE10F2F6CE96298328), errorState=Clean, result=null, status=RUNNABLE, progressStep=Starting, flowIoRequest=SendAndReceive, compatible=true), isCheckpointUpdate=true)
    PersistDeduplicationFacts(deduplicationHandlers=[net.corda.testing.node.internal.MockNodeMessagingService$InMemoryDeduplicationHandler@69ea3ad2])
    CommitTransaction
    AcknowledgeMessages(deduplicationHandlers=[net.corda.testing.node.internal.MockNodeMessagingService$InMemoryDeduplicationHandler@69ea3ad2])
    ScheduleEvent(event=DoRemainingWork)
  Continuation: ProcessEvents
  Diff between previous and next state:
pendingDeduplicationHandlers: 
    [net.corda.testing.node.internal.MockNodeMessagingService$InMemoryDeduplicationHandler@69ea3ad2]
    []
isFlowResumed: 
    true
    false
numberOfCommits: 
    3
    4
checkpoint.checkpointState.numberOfCommits: 
    3
    4
checkpoint.checkpointState.numberOfSuspends: 
    2
    3
checkpoint.flowState.flowIORequest: 
    Receive(sessions=[FlowSessionImpl(destination=O=Mock Company 3, L=London, C=GB, sourceSessionId=SessionId(toLong=5897559181151605428))])
    SendAndReceive({FlowSessionImpl(destination=O=Mock Company 3, L=London, C=GB, sourceSessionId=SessionId(toLong=-7855006138722062871))=FlowSessionImpl(destination=O=Mock Company 3, L=London, C=GB, sourceSessionId=SessionId(toLong=-7855006138722062871))=4D01D19D3FFA5FA6DFF6E3E6C70C24B677C7495B611A4DF0B2674962C6C59EA0}, shouldRetrySend=false)
checkpoint.flowState.frozenFiber.hash: 
    BC08B227FE60A6B2A3A70C2BE5E308F80A825AD220086EDFDA077F8C11962FF0
    963C50599AEDCDEAABA6427FCE3F694BE72AB6F0829168DE10F2F6CE96298328
checkpoint.timestamp: 
    2023-01-31T07:42:03.715Z
    2023-01-31T07:42:03.720Z


 --- Transition of flow [2289ea18-bf18-4241-8950-cace09523d20] ---
  Timestamp: 2023-01-31T07:42:03.727Z
  Event: DoRemainingWork
  Actions: 
    SendMultiple(sendInitial=[SendInitial(destination=O=Mock Company 3, L=London, C=GB, initialise=InitialSessionMessage(initiatorSessionId=SessionId(toLong=-7855006138722062871), initiationEntropy=-5407470294366436114, initiatorFlowClassName=net.corda.samples.obligation.flows.IOUSettleFlow, appName=<unknown>, firstPayload=class net.corda.core.serialization.SerializedBytes), deduplicationId=SenderDeduplicationId(deduplicationId=DeduplicationId(toString=N-R--7855006138722062871--5407470294366436114-3-0), senderUUID=7da18ab5-41ea-4720-99fc-208eae0a7847))], sendExisting=[])
  Continuation: ProcessEvents
  Diff between previous and next state:
checkpoint.checkpointState.sessions.SessionId(toLong=-7855006138722062871): 
    Uninitiated(destination=O=Mock Company 3, L=London, C=GB, initiatingSubFlow=Initiating(flowClass=class net.corda.samples.obligation.flows.IOUSettleFlow, classToInitiateWith=class net.corda.samples.obligation.flows.IOUSettleFlow, flowInfo=FlowInfo(flowVersion=1, appName=<unknown>), subFlowVersion=CorDappFlow(platformVersion=11, corDappName=workflows-1.0, corDappHash=8C2322F3ACFF6CA8FE3E7F554352489D40710486D8ED144430A5784441E56717), isEnabledTimedFlow=false), sourceSessionId=SessionId(toLong=-7855006138722062871), additionalEntropy=-5407470294366436114)
    Initiating(bufferedMessages=[], rejectionError=null, deduplicationSeed=R--7855006138722062871--5407470294366436114)
checkpoint.flowState.flowIORequest: 
    SendAndReceive({FlowSessionImpl(destination=O=Mock Company 3, L=London, C=GB, sourceSessionId=SessionId(toLong=-7855006138722062871))=FlowSessionImpl(destination=O=Mock Company 3, L=London, C=GB, sourceSessionId=SessionId(toLong=-7855006138722062871))=4D01D19D3FFA5FA6DFF6E3E6C70C24B677C7495B611A4DF0B2674962C6C59EA0}, shouldRetrySend=false)
    Receive(sessions=[FlowSessionImpl(destination=O=Mock Company 3, L=London, C=GB, sourceSessionId=SessionId(toLong=-7855006138722062871))])
checkpoint.timestamp: 
    2023-01-31T07:42:03.720Z
    2023-01-31T07:42:03.724Z


 --- Transition of flow [2289ea18-bf18-4241-8950-cace09523d20] ---
  Timestamp: 2023-01-31T07:42:03.769Z
  Event: DeliverSessionMessage(sessionMessage=ExistingSessionMessage(recipientSessionId=SessionId(toLong=5897559181151605428), payload=net.corda.node.services.statemachine.EndSessionMessage@7d8b3e86), deduplicationHandler=net.corda.testing.node.internal.MockNodeMessagingService$InMemoryDeduplicationHandler@39177962, sender=O=Mock Company 3, L=London, C=GB)
  Actions: 
    ScheduleEvent(event=DoRemainingWork)
  Continuation: ProcessEvents
  Diff between previous and next state:
pendingDeduplicationHandlers: 
    []
    [net.corda.testing.node.internal.MockNodeMessagingService$InMemoryDeduplicationHandler@39177962]
checkpoint.checkpointState.sessions.SessionId(toLong=5897559181151605428).receivedMessages.isEmpty: 
    true
    false
checkpoint.checkpointState.sessionsToBeClosed: 
    []
    [SessionId(toLong=5897559181151605428)]
checkpoint.timestamp: 
    2023-01-31T07:42:03.724Z
    2023-01-31T07:42:03.769Z


 --- Transition of flow [2289ea18-bf18-4241-8950-cace09523d20] ---
  Timestamp: 2023-01-31T07:42:03.769Z
  Event: DoRemainingWork
  Actions: 
    RemoveSessionBindings(sessionIds=[SessionId(toLong=5897559181151605428)])
  Continuation: ProcessEvents
  Diff between previous and next state:
checkpoint.checkpointState.sessions.SessionId(toLong=5897559181151605428): 
    Initiated(peerParty=O=Mock Company 3, L=London, C=GB, peerFlowInfo=FlowInfo(flowVersion=1, appName=accounts-workflows-1.0), receivedMessages=[net.corda.node.services.statemachine.EndSessionMessage@7d8b3e86], otherSideErrored=false, peerSinkSessionId=SessionId(toLong=-6898937881699103482), deduplicationSeed=R-5897559181151605428--6209985564318473542)
    null
checkpoint.checkpointState.sessionsToBeClosed: 
    [SessionId(toLong=5897559181151605428)]
    []


 --- Transition of flow [2289ea18-bf18-4241-8950-cace09523d20] ---
  Timestamp: 2023-01-31T07:42:03.770Z
  Event: DeliverSessionMessage(sessionMessage=ExistingSessionMessage(recipientSessionId=SessionId(toLong=-7855006138722062871), payload=ConfirmSessionMessage(initiatedSessionId=SessionId(toLong=8383758276858904125), initiatedFlowInfo=FlowInfo(flowVersion=1, appName=<unknown>))), deduplicationHandler=net.corda.testing.node.internal.MockNodeMessagingService$InMemoryDeduplicationHandler@251303c4, sender=O=Mock Company 3, L=London, C=GB)
  Actions: 
    ScheduleEvent(event=DoRemainingWork)
  Continuation: ProcessEvents
  Diff between previous and next state:
pendingDeduplicationHandlers: 
    [net.corda.testing.node.internal.MockNodeMessagingService$InMemoryDeduplicationHandler@39177962]
    [net.corda.testing.node.internal.MockNodeMessagingService$InMemoryDeduplicationHandler@39177962, net.corda.testing.node.internal.MockNodeMessagingService$InMemoryDeduplicationHandler@251303c4]
checkpoint.checkpointState.sessions.SessionId(toLong=-7855006138722062871): 
    Initiating(bufferedMessages=[], rejectionError=null, deduplicationSeed=R--7855006138722062871--5407470294366436114)
    Initiated(peerParty=O=Mock Company 3, L=London, C=GB, peerFlowInfo=FlowInfo(flowVersion=1, appName=<unknown>), receivedMessages=[], otherSideErrored=false, peerSinkSessionId=SessionId(toLong=8383758276858904125), deduplicationSeed=R--7855006138722062871--5407470294366436114)
checkpoint.timestamp: 
    2023-01-31T07:42:03.769Z
    2023-01-31T07:42:03.770Z


 --- Transition of flow [2289ea18-bf18-4241-8950-cace09523d20] ---
  Timestamp: 2023-01-31T07:42:03.770Z
  Event: DoRemainingWork
  Actions: 
    
  Continuation: ProcessEvents
  Diff between previous and next state:
null

 --- Transition of flow [2289ea18-bf18-4241-8950-cace09523d20] ---
  Timestamp: 2023-01-31T07:42:03.772Z
  Event: DeliverSessionMessage(sessionMessage=ExistingSessionMessage(recipientSessionId=SessionId(toLong=-7855006138722062871), payload=DataSessionMessage(payload=class net.corda.core.serialization.SerializedBytes)), deduplicationHandler=net.corda.testing.node.internal.MockNodeMessagingService$InMemoryDeduplicationHandler@52d00ee3, sender=O=Mock Company 3, L=London, C=GB)
  Actions: 
    ScheduleEvent(event=DoRemainingWork)
  Continuation: ProcessEvents
  Diff between previous and next state:
pendingDeduplicationHandlers: 
    [net.corda.testing.node.internal.MockNodeMessagingService$InMemoryDeduplicationHandler@39177962, net.corda.testing.node.internal.MockNodeMessagingService$InMemoryDeduplicationHandler@251303c4]
    [net.corda.testing.node.internal.MockNodeMessagingService$InMemoryDeduplicationHandler@39177962, net.corda.testing.node.internal.MockNodeMessagingService$InMemoryDeduplicationHandler@251303c4, net.corda.testing.node.internal.MockNodeMessagingService$InMemoryDeduplicationHandler@52d00ee3]
checkpoint.checkpointState.sessions.SessionId(toLong=-7855006138722062871).receivedMessages.isEmpty: 
    true
    false
checkpoint.timestamp: 
    2023-01-31T07:42:03.770Z
    2023-01-31T07:42:03.771Z


 --- Transition of flow [2289ea18-bf18-4241-8950-cace09523d20] ---
  Timestamp: 2023-01-31T07:42:03.772Z
  Event: DoRemainingWork
  Actions: 
    CreateTransaction
  Continuation: Resume(result=class java.util.LinkedHashMap)
  Diff between previous and next state:
isFlowResumed: 
    false
    true
checkpoint.checkpointState.sessions.SessionId(toLong=-7855006138722062871).receivedMessages.isEmpty: 
    false
    true
checkpoint.timestamp: 
    2023-01-31T07:42:03.771Z
    2023-01-31T07:42:03.772Z


 --- Transition of flow [2289ea18-bf18-4241-8950-cace09523d20] ---
  Timestamp: 2023-01-31T07:42:03.778Z
  Event: Suspend(ioRequest=SendAndReceive({FlowSessionImpl(destination=O=Mock Company 3, L=London, C=GB, sourceSessionId=SessionId(toLong=-7855006138722062871))=FlowSessionImpl(destination=O=Mock Company 3, L=London, C=GB, sourceSessionId=SessionId(toLong=-7855006138722062871))=620644AA066DB6ABFB6F7B5B4EFC9370F2287E69F5F24D046ED0A1E7F2E4CA2A}, shouldRetrySend=false), maySkipCheckpoint=false, fiber=17FCDD02FDFCA3D3740AF14C7375CE5D0A9264C46C0D48841AFA50E94F4B4C93, currentStep=Starting)
  Actions: 
    PersistCheckpoint(id=[2289ea18-bf18-4241-8950-cace09523d20], checkpoint=Checkpoint(checkpointState=CheckpointState(invocationContext=InvocationContext(origin=RPC(actor=Actor(id=Id(value=Only For Testing), serviceId=AuthServiceId(value=TEST), owningLegalIdentity=O=Mock Company 1, L=London, C=GB)), trace=Trace(invocationId=94f92ebc-0933-4966-95a0-f3e9022a2977, timestamp: 2023-01-31T07:42:03.376Z, entityType: Invocation, sessionId=94f92ebc-0933-4966-95a0-f3e9022a2977, timestamp: 2023-01-31T07:42:03.376Z, entityType: Session), actor=Actor(id=Id(value=Only For Testing), serviceId=AuthServiceId(value=TEST), owningLegalIdentity=O=Mock Company 1, L=London, C=GB), externalTrace=null, impersonatedActor=null, arguments=[], clientId=null), ourIdentity=O=Mock Company 1, L=London, C=GB, sessions={SessionId(toLong=-7855006138722062871)=Initiated(peerParty=O=Mock Company 3, L=London, C=GB, peerFlowInfo=FlowInfo(flowVersion=1, appName=<unknown>), receivedMessages=[], otherSideErrored=false, peerSinkSessionId=SessionId(toLong=8383758276858904125), deduplicationSeed=R--7855006138722062871--5407470294366436114)}, sessionsToBeClosed=[], subFlowStack=[Initiating(flowClass=class net.corda.samples.obligation.flows.IOUSettleFlow, classToInitiateWith=class net.corda.samples.obligation.flows.IOUSettleFlow, flowInfo=FlowInfo(flowVersion=1, appName=<unknown>), subFlowVersion=CorDappFlow(platformVersion=11, corDappName=workflows-1.0, corDappHash=8C2322F3ACFF6CA8FE3E7F554352489D40710486D8ED144430A5784441E56717), isEnabledTimedFlow=false), Inlined(flowClass=class net.corda.core.flows.CollectSignatureFlow, subFlowVersion=CoreFlow(platformVersion=11), isEnabledTimedFlow=false), Inlined(flowClass=class net.corda.core.flows.SendTransactionFlow, subFlowVersion=CoreFlow(platformVersion=11), isEnabledTimedFlow=false)], numberOfSuspends=4, numberOfCommits=5), flowState=Started(flowIORequest=SendAndReceive({FlowSessionImpl(destination=O=Mock Company 3, L=London, C=GB, sourceSessionId=SessionId(toLong=-7855006138722062871))=FlowSessionImpl(destination=O=Mock Company 3, L=London, C=GB, sourceSessionId=SessionId(toLong=-7855006138722062871))=620644AA066DB6ABFB6F7B5B4EFC9370F2287E69F5F24D046ED0A1E7F2E4CA2A}, shouldRetrySend=false), frozenFiber=17FCDD02FDFCA3D3740AF14C7375CE5D0A9264C46C0D48841AFA50E94F4B4C93), errorState=Clean, result=null, status=RUNNABLE, progressStep=Starting, flowIoRequest=SendAndReceive, compatible=true), isCheckpointUpdate=true)
    PersistDeduplicationFacts(deduplicationHandlers=[net.corda.testing.node.internal.MockNodeMessagingService$InMemoryDeduplicationHandler@39177962, net.corda.testing.node.internal.MockNodeMessagingService$InMemoryDeduplicationHandler@251303c4, net.corda.testing.node.internal.MockNodeMessagingService$InMemoryDeduplicationHandler@52d00ee3])
    CommitTransaction
    AcknowledgeMessages(deduplicationHandlers=[net.corda.testing.node.internal.MockNodeMessagingService$InMemoryDeduplicationHandler@39177962, net.corda.testing.node.internal.MockNodeMessagingService$InMemoryDeduplicationHandler@251303c4, net.corda.testing.node.internal.MockNodeMessagingService$InMemoryDeduplicationHandler@52d00ee3])
    ScheduleEvent(event=DoRemainingWork)
  Continuation: ProcessEvents
  Diff between previous and next state:
pendingDeduplicationHandlers: 
    [net.corda.testing.node.internal.MockNodeMessagingService$InMemoryDeduplicationHandler@39177962, net.corda.testing.node.internal.MockNodeMessagingService$InMemoryDeduplicationHandler@251303c4, net.corda.testing.node.internal.MockNodeMessagingService$InMemoryDeduplicationHandler@52d00ee3]
    []
isFlowResumed: 
    true
    false
numberOfCommits: 
    4
    5
checkpoint.checkpointState.numberOfCommits: 
    4
    5
checkpoint.checkpointState.numberOfSuspends: 
    3
    4
checkpoint.flowState.flowIORequest: 
    Receive(sessions=[FlowSessionImpl(destination=O=Mock Company 3, L=London, C=GB, sourceSessionId=SessionId(toLong=-7855006138722062871))])
    SendAndReceive({FlowSessionImpl(destination=O=Mock Company 3, L=London, C=GB, sourceSessionId=SessionId(toLong=-7855006138722062871))=FlowSessionImpl(destination=O=Mock Company 3, L=London, C=GB, sourceSessionId=SessionId(toLong=-7855006138722062871))=620644AA066DB6ABFB6F7B5B4EFC9370F2287E69F5F24D046ED0A1E7F2E4CA2A}, shouldRetrySend=false)
checkpoint.flowState.frozenFiber.hash: 
    963C50599AEDCDEAABA6427FCE3F694BE72AB6F0829168DE10F2F6CE96298328
    17FCDD02FDFCA3D3740AF14C7375CE5D0A9264C46C0D48841AFA50E94F4B4C93
checkpoint.timestamp: 
    2023-01-31T07:42:03.772Z
    2023-01-31T07:42:03.775Z


 --- Transition of flow [2289ea18-bf18-4241-8950-cace09523d20] ---
  Timestamp: 2023-01-31T07:42:03.778Z
  Event: DoRemainingWork
  Actions: 
    SendMultiple(sendInitial=[], sendExisting=[SendExisting(peerParty=O=Mock Company 3, L=London, C=GB, message=ExistingSessionMessage(recipientSessionId=SessionId(toLong=8383758276858904125), payload=DataSessionMessage(payload=class net.corda.core.serialization.SerializedBytes)), deduplicationId=SenderDeduplicationId(deduplicationId=DeduplicationId(toString=N-R--7855006138722062871--5407470294366436114-4-0), senderUUID=7da18ab5-41ea-4720-99fc-208eae0a7847))])
  Continuation: ProcessEvents
  Diff between previous and next state:
checkpoint.flowState.flowIORequest: 
    SendAndReceive({FlowSessionImpl(destination=O=Mock Company 3, L=London, C=GB, sourceSessionId=SessionId(toLong=-7855006138722062871))=FlowSessionImpl(destination=O=Mock Company 3, L=London, C=GB, sourceSessionId=SessionId(toLong=-7855006138722062871))=620644AA066DB6ABFB6F7B5B4EFC9370F2287E69F5F24D046ED0A1E7F2E4CA2A}, shouldRetrySend=false)
    Receive(sessions=[FlowSessionImpl(destination=O=Mock Company 3, L=London, C=GB, sourceSessionId=SessionId(toLong=-7855006138722062871))])
checkpoint.timestamp: 
    2023-01-31T07:42:03.775Z
    2023-01-31T07:42:03.778Z


 --- Transition of flow [2289ea18-bf18-4241-8950-cace09523d20] ---
  Timestamp: 2023-01-31T07:42:04.145Z
  Event: DeliverSessionMessage(sessionMessage=ExistingSessionMessage(recipientSessionId=SessionId(toLong=-7855006138722062871), payload=DataSessionMessage(payload=class net.corda.core.serialization.SerializedBytes)), deduplicationHandler=net.corda.testing.node.internal.MockNodeMessagingService$InMemoryDeduplicationHandler@6a5492c1, sender=O=Mock Company 3, L=London, C=GB)
  Actions: 
    ScheduleEvent(event=DoRemainingWork)
  Continuation: ProcessEvents
  Diff between previous and next state:
pendingDeduplicationHandlers: 
    []
    [net.corda.testing.node.internal.MockNodeMessagingService$InMemoryDeduplicationHandler@6a5492c1]
checkpoint.checkpointState.sessions.SessionId(toLong=-7855006138722062871).receivedMessages.isEmpty: 
    true
    false
checkpoint.timestamp: 
    2023-01-31T07:42:03.778Z
    2023-01-31T07:42:04.145Z


 --- Transition of flow [2289ea18-bf18-4241-8950-cace09523d20] ---
  Timestamp: 2023-01-31T07:42:04.145Z
  Event: DoRemainingWork
  Actions: 
    CreateTransaction
  Continuation: Resume(result=class java.util.LinkedHashMap)
  Diff between previous and next state:
isFlowResumed: 
    false
    true
checkpoint.checkpointState.sessions.SessionId(toLong=-7855006138722062871).receivedMessages.isEmpty: 
    false
    true


 --- Transition of flow [2289ea18-bf18-4241-8950-cace09523d20] ---
  Timestamp: 2023-01-31T07:42:04.145Z
  Event: LeaveSubFlow
  Actions: 
    
  Continuation: ProcessEvents
  Diff between previous and next state:
checkpoint.checkpointState.subFlowStack: 
    [Initiating(flowClass=class net.corda.samples.obligation.flows.IOUSettleFlow, classToInitiateWith=class net.corda.samples.obligation.flows.IOUSettleFlow, flowInfo=FlowInfo(flowVersion=1, appName=<unknown>), subFlowVersion=CorDappFlow(platformVersion=11, corDappName=workflows-1.0, corDappHash=8C2322F3ACFF6CA8FE3E7F554352489D40710486D8ED144430A5784441E56717), isEnabledTimedFlow=false), Inlined(flowClass=class net.corda.core.flows.CollectSignatureFlow, subFlowVersion=CoreFlow(platformVersion=11), isEnabledTimedFlow=false), Inlined(flowClass=class net.corda.core.flows.SendTransactionFlow, subFlowVersion=CoreFlow(platformVersion=11), isEnabledTimedFlow=false)]
    [Initiating(flowClass=class net.corda.samples.obligation.flows.IOUSettleFlow, classToInitiateWith=class net.corda.samples.obligation.flows.IOUSettleFlow, flowInfo=FlowInfo(flowVersion=1, appName=<unknown>), subFlowVersion=CorDappFlow(platformVersion=11, corDappName=workflows-1.0, corDappHash=8C2322F3ACFF6CA8FE3E7F554352489D40710486D8ED144430A5784441E56717), isEnabledTimedFlow=false), Inlined(flowClass=class net.corda.core.flows.CollectSignatureFlow, subFlowVersion=CoreFlow(platformVersion=11), isEnabledTimedFlow=false)]


 --- Transition of flow [2289ea18-bf18-4241-8950-cace09523d20] ---
  Timestamp: 2023-01-31T07:42:04.149Z
  Event: Suspend(ioRequest=Send(sessionToMessage={FlowSessionImpl(destination=O=Mock Company 3, L=London, C=GB, sourceSessionId=SessionId(toLong=-7855006138722062871))=609CC33A06DBE983C0A936BF3EAD8D6EF442F74841049597EAA9B695EC837E3F}), maySkipCheckpoint=false, fiber=C476D85C0A97E84BFF594BB530EC5C17D424F8CC30767557178DF63964E52D50, currentStep=Starting)
  Actions: 
    PersistCheckpoint(id=[2289ea18-bf18-4241-8950-cace09523d20], checkpoint=Checkpoint(checkpointState=CheckpointState(invocationContext=InvocationContext(origin=RPC(actor=Actor(id=Id(value=Only For Testing), serviceId=AuthServiceId(value=TEST), owningLegalIdentity=O=Mock Company 1, L=London, C=GB)), trace=Trace(invocationId=94f92ebc-0933-4966-95a0-f3e9022a2977, timestamp: 2023-01-31T07:42:03.376Z, entityType: Invocation, sessionId=94f92ebc-0933-4966-95a0-f3e9022a2977, timestamp: 2023-01-31T07:42:03.376Z, entityType: Session), actor=Actor(id=Id(value=Only For Testing), serviceId=AuthServiceId(value=TEST), owningLegalIdentity=O=Mock Company 1, L=London, C=GB), externalTrace=null, impersonatedActor=null, arguments=[], clientId=null), ourIdentity=O=Mock Company 1, L=London, C=GB, sessions={SessionId(toLong=-7855006138722062871)=Initiated(peerParty=O=Mock Company 3, L=London, C=GB, peerFlowInfo=FlowInfo(flowVersion=1, appName=<unknown>), receivedMessages=[], otherSideErrored=false, peerSinkSessionId=SessionId(toLong=8383758276858904125), deduplicationSeed=R--7855006138722062871--5407470294366436114)}, sessionsToBeClosed=[], subFlowStack=[Initiating(flowClass=class net.corda.samples.obligation.flows.IOUSettleFlow, classToInitiateWith=class net.corda.samples.obligation.flows.IOUSettleFlow, flowInfo=FlowInfo(flowVersion=1, appName=<unknown>), subFlowVersion=CorDappFlow(platformVersion=11, corDappName=workflows-1.0, corDappHash=8C2322F3ACFF6CA8FE3E7F554352489D40710486D8ED144430A5784441E56717), isEnabledTimedFlow=false), Inlined(flowClass=class net.corda.core.flows.CollectSignatureFlow, subFlowVersion=CoreFlow(platformVersion=11), isEnabledTimedFlow=false)], numberOfSuspends=5, numberOfCommits=6), flowState=Started(flowIORequest=Send(sessionToMessage={FlowSessionImpl(destination=O=Mock Company 3, L=London, C=GB, sourceSessionId=SessionId(toLong=-7855006138722062871))=609CC33A06DBE983C0A936BF3EAD8D6EF442F74841049597EAA9B695EC837E3F}), frozenFiber=C476D85C0A97E84BFF594BB530EC5C17D424F8CC30767557178DF63964E52D50), errorState=Clean, result=null, status=RUNNABLE, progressStep=Starting, flowIoRequest=Send, compatible=true), isCheckpointUpdate=true)
    PersistDeduplicationFacts(deduplicationHandlers=[net.corda.testing.node.internal.MockNodeMessagingService$InMemoryDeduplicationHandler@6a5492c1])
    CommitTransaction
    AcknowledgeMessages(deduplicationHandlers=[net.corda.testing.node.internal.MockNodeMessagingService$InMemoryDeduplicationHandler@6a5492c1])
    ScheduleEvent(event=DoRemainingWork)
  Continuation: ProcessEvents
  Diff between previous and next state:
pendingDeduplicationHandlers: 
    [net.corda.testing.node.internal.MockNodeMessagingService$InMemoryDeduplicationHandler@6a5492c1]
    []
isFlowResumed: 
    true
    false
numberOfCommits: 
    5
    6
checkpoint.flowIoRequest: 
    SendAndReceive
    Send
checkpoint.checkpointState.numberOfCommits: 
    5
    6
checkpoint.checkpointState.numberOfSuspends: 
    4
    5
checkpoint.flowState.flowIORequest: 
    Receive(sessions=[FlowSessionImpl(destination=O=Mock Company 3, L=London, C=GB, sourceSessionId=SessionId(toLong=-7855006138722062871))])
    Send(sessionToMessage={FlowSessionImpl(destination=O=Mock Company 3, L=London, C=GB, sourceSessionId=SessionId(toLong=-7855006138722062871))=609CC33A06DBE983C0A936BF3EAD8D6EF442F74841049597EAA9B695EC837E3F})
checkpoint.flowState.frozenFiber.hash: 
    17FCDD02FDFCA3D3740AF14C7375CE5D0A9264C46C0D48841AFA50E94F4B4C93
    C476D85C0A97E84BFF594BB530EC5C17D424F8CC30767557178DF63964E52D50
checkpoint.timestamp: 
    2023-01-31T07:42:04.145Z
    2023-01-31T07:42:04.147Z


 --- Transition of flow [2289ea18-bf18-4241-8950-cace09523d20] ---
  Timestamp: 2023-01-31T07:42:04.150Z
  Event: DoRemainingWork
  Actions: 
    SendMultiple(sendInitial=[], sendExisting=[SendExisting(peerParty=O=Mock Company 3, L=London, C=GB, message=ExistingSessionMessage(recipientSessionId=SessionId(toLong=8383758276858904125), payload=DataSessionMessage(payload=class net.corda.core.serialization.SerializedBytes)), deduplicationId=SenderDeduplicationId(deduplicationId=DeduplicationId(toString=N-R--7855006138722062871--5407470294366436114-5-0), senderUUID=7da18ab5-41ea-4720-99fc-208eae0a7847))])
    CreateTransaction
  Continuation: Resume(result=class kotlin.Unit)
  Diff between previous and next state:
isFlowResumed: 
    false
    true


 --- Transition of flow [2289ea18-bf18-4241-8950-cace09523d20] ---
  Timestamp: 2023-01-31T07:42:04.152Z
  Event: Suspend(ioRequest=Receive(sessions=[FlowSessionImpl(destination=O=Mock Company 3, L=London, C=GB, sourceSessionId=SessionId(toLong=-7855006138722062871))]), maySkipCheckpoint=false, fiber=1455D9260B11AAE0FC564CFA3D0BFFD05D2615546EF597FE255C3EF518BE93A0, currentStep=Starting)
  Actions: 
    PersistCheckpoint(id=[2289ea18-bf18-4241-8950-cace09523d20], checkpoint=Checkpoint(checkpointState=CheckpointState(invocationContext=InvocationContext(origin=RPC(actor=Actor(id=Id(value=Only For Testing), serviceId=AuthServiceId(value=TEST), owningLegalIdentity=O=Mock Company 1, L=London, C=GB)), trace=Trace(invocationId=94f92ebc-0933-4966-95a0-f3e9022a2977, timestamp: 2023-01-31T07:42:03.376Z, entityType: Invocation, sessionId=94f92ebc-0933-4966-95a0-f3e9022a2977, timestamp: 2023-01-31T07:42:03.376Z, entityType: Session), actor=Actor(id=Id(value=Only For Testing), serviceId=AuthServiceId(value=TEST), owningLegalIdentity=O=Mock Company 1, L=London, C=GB), externalTrace=null, impersonatedActor=null, arguments=[], clientId=null), ourIdentity=O=Mock Company 1, L=London, C=GB, sessions={SessionId(toLong=-7855006138722062871)=Initiated(peerParty=O=Mock Company 3, L=London, C=GB, peerFlowInfo=FlowInfo(flowVersion=1, appName=<unknown>), receivedMessages=[], otherSideErrored=false, peerSinkSessionId=SessionId(toLong=8383758276858904125), deduplicationSeed=R--7855006138722062871--5407470294366436114)}, sessionsToBeClosed=[], subFlowStack=[Initiating(flowClass=class net.corda.samples.obligation.flows.IOUSettleFlow, classToInitiateWith=class net.corda.samples.obligation.flows.IOUSettleFlow, flowInfo=FlowInfo(flowVersion=1, appName=<unknown>), subFlowVersion=CorDappFlow(platformVersion=11, corDappName=workflows-1.0, corDappHash=8C2322F3ACFF6CA8FE3E7F554352489D40710486D8ED144430A5784441E56717), isEnabledTimedFlow=false), Inlined(flowClass=class net.corda.core.flows.CollectSignatureFlow, subFlowVersion=CoreFlow(platformVersion=11), isEnabledTimedFlow=false)], numberOfSuspends=6, numberOfCommits=7), flowState=Started(flowIORequest=Receive(sessions=[FlowSessionImpl(destination=O=Mock Company 3, L=London, C=GB, sourceSessionId=SessionId(toLong=-7855006138722062871))]), frozenFiber=1455D9260B11AAE0FC564CFA3D0BFFD05D2615546EF597FE255C3EF518BE93A0), errorState=Clean, result=null, status=RUNNABLE, progressStep=Starting, flowIoRequest=Receive, compatible=true), isCheckpointUpdate=true)
    PersistDeduplicationFacts(deduplicationHandlers=[])
    CommitTransaction
    AcknowledgeMessages(deduplicationHandlers=[])
    ScheduleEvent(event=DoRemainingWork)
  Continuation: ProcessEvents
  Diff between previous and next state:
isFlowResumed: 
    true
    false
numberOfCommits: 
    6
    7
checkpoint.flowIoRequest: 
    Send
    Receive
checkpoint.checkpointState.numberOfCommits: 
    6
    7
checkpoint.checkpointState.numberOfSuspends: 
    5
    6
checkpoint.flowState.flowIORequest: 
    Send(sessionToMessage={FlowSessionImpl(destination=O=Mock Company 3, L=London, C=GB, sourceSessionId=SessionId(toLong=-7855006138722062871))=609CC33A06DBE983C0A936BF3EAD8D6EF442F74841049597EAA9B695EC837E3F})
    Receive(sessions=[FlowSessionImpl(destination=O=Mock Company 3, L=London, C=GB, sourceSessionId=SessionId(toLong=-7855006138722062871))])
checkpoint.flowState.frozenFiber.hash: 
    C476D85C0A97E84BFF594BB530EC5C17D424F8CC30767557178DF63964E52D50
    1455D9260B11AAE0FC564CFA3D0BFFD05D2615546EF597FE255C3EF518BE93A0
checkpoint.timestamp: 
    2023-01-31T07:42:04.149Z
    2023-01-31T07:42:04.151Z


 --- Transition of flow [2289ea18-bf18-4241-8950-cace09523d20] ---
  Timestamp: 2023-01-31T07:42:04.153Z
  Event: DoRemainingWork
  Actions: 
    
  Continuation: ProcessEvents
  Diff between previous and next state:
null

 --- Transition of flow [2289ea18-bf18-4241-8950-cace09523d20] ---
  Timestamp: 2023-01-31T07:42:04.168Z
  Event: DeliverSessionMessage(sessionMessage=ExistingSessionMessage(recipientSessionId=SessionId(toLong=-7855006138722062871), payload=DataSessionMessage(payload=class net.corda.core.serialization.SerializedBytes)), deduplicationHandler=net.corda.testing.node.internal.MockNodeMessagingService$InMemoryDeduplicationHandler@729d2512, sender=O=Mock Company 3, L=London, C=GB)
  Actions: 
    ScheduleEvent(event=DoRemainingWork)
  Continuation: ProcessEvents
  Diff between previous and next state:
pendingDeduplicationHandlers: 
    []
    [net.corda.testing.node.internal.MockNodeMessagingService$InMemoryDeduplicationHandler@729d2512]
checkpoint.checkpointState.sessions.SessionId(toLong=-7855006138722062871).receivedMessages.isEmpty: 
    true
    false
checkpoint.timestamp: 
    2023-01-31T07:42:04.153Z
    2023-01-31T07:42:04.168Z


 --- Transition of flow [2289ea18-bf18-4241-8950-cace09523d20] ---
  Timestamp: 2023-01-31T07:42:04.168Z
  Event: DoRemainingWork
  Actions: 
    CreateTransaction
  Continuation: Resume(result=class java.util.LinkedHashMap)
  Diff between previous and next state:
isFlowResumed: 
    false
    true
checkpoint.checkpointState.sessions.SessionId(toLong=-7855006138722062871).receivedMessages.isEmpty: 
    false
    true


 --- Transition of flow [2289ea18-bf18-4241-8950-cace09523d20] ---
  Timestamp: 2023-01-31T07:42:04.168Z
  Event: LeaveSubFlow
  Actions: 
    
  Continuation: ProcessEvents
  Diff between previous and next state:
checkpoint.checkpointState.subFlowStack: 
    [Initiating(flowClass=class net.corda.samples.obligation.flows.IOUSettleFlow, classToInitiateWith=class net.corda.samples.obligation.flows.IOUSettleFlow, flowInfo=FlowInfo(flowVersion=1, appName=<unknown>), subFlowVersion=CorDappFlow(platformVersion=11, corDappName=workflows-1.0, corDappHash=8C2322F3ACFF6CA8FE3E7F554352489D40710486D8ED144430A5784441E56717), isEnabledTimedFlow=false), Inlined(flowClass=class net.corda.core.flows.CollectSignatureFlow, subFlowVersion=CoreFlow(platformVersion=11), isEnabledTimedFlow=false)]
    [Initiating(flowClass=class net.corda.samples.obligation.flows.IOUSettleFlow, classToInitiateWith=class net.corda.samples.obligation.flows.IOUSettleFlow, flowInfo=FlowInfo(flowVersion=1, appName=<unknown>), subFlowVersion=CorDappFlow(platformVersion=11, corDappName=workflows-1.0, corDappHash=8C2322F3ACFF6CA8FE3E7F554352489D40710486D8ED144430A5784441E56717), isEnabledTimedFlow=false)]


 --- Transition of flow [2289ea18-bf18-4241-8950-cace09523d20] ---
  Timestamp: 2023-01-31T07:42:04.168Z
  Event: EnterSubFlow(subFlowClass=class net.corda.core.flows.FinalityFlow, subFlowVersion=CoreFlow(platformVersion=11), isEnabledTimedFlow=false)
  Actions: 
    
  Continuation: ProcessEvents
  Diff between previous and next state:
checkpoint.checkpointState.subFlowStack: 
    [Initiating(flowClass=class net.corda.samples.obligation.flows.IOUSettleFlow, classToInitiateWith=class net.corda.samples.obligation.flows.IOUSettleFlow, flowInfo=FlowInfo(flowVersion=1, appName=<unknown>), subFlowVersion=CorDappFlow(platformVersion=11, corDappName=workflows-1.0, corDappHash=8C2322F3ACFF6CA8FE3E7F554352489D40710486D8ED144430A5784441E56717), isEnabledTimedFlow=false)]
    [Initiating(flowClass=class net.corda.samples.obligation.flows.IOUSettleFlow, classToInitiateWith=class net.corda.samples.obligation.flows.IOUSettleFlow, flowInfo=FlowInfo(flowVersion=1, appName=<unknown>), subFlowVersion=CorDappFlow(platformVersion=11, corDappName=workflows-1.0, corDappHash=8C2322F3ACFF6CA8FE3E7F554352489D40710486D8ED144430A5784441E56717), isEnabledTimedFlow=false), Initiating(flowClass=class net.corda.core.flows.FinalityFlow, classToInitiateWith=class net.corda.core.flows.FinalityFlow, flowInfo=FlowInfo(flowVersion=1, appName=corda-core-4.9), subFlowVersion=CoreFlow(platformVersion=11), isEnabledTimedFlow=false)]


 --- Transition of flow [2289ea18-bf18-4241-8950-cace09523d20] ---
  Timestamp: 2023-01-31T07:42:04.176Z
  Event: LeaveSubFlow
  Actions: 
    
  Continuation: ProcessEvents
  Diff between previous and next state:
checkpoint.checkpointState.subFlowStack: 
    [Initiating(flowClass=class net.corda.samples.obligation.flows.IOUSettleFlow, classToInitiateWith=class net.corda.samples.obligation.flows.IOUSettleFlow, flowInfo=FlowInfo(flowVersion=1, appName=<unknown>), subFlowVersion=CorDappFlow(platformVersion=11, corDappName=workflows-1.0, corDappHash=8C2322F3ACFF6CA8FE3E7F554352489D40710486D8ED144430A5784441E56717), isEnabledTimedFlow=false), Initiating(flowClass=class net.corda.core.flows.FinalityFlow, classToInitiateWith=class net.corda.core.flows.FinalityFlow, flowInfo=FlowInfo(flowVersion=1, appName=corda-core-4.9), subFlowVersion=CoreFlow(platformVersion=11), isEnabledTimedFlow=false)]
    [Initiating(flowClass=class net.corda.samples.obligation.flows.IOUSettleFlow, classToInitiateWith=class net.corda.samples.obligation.flows.IOUSettleFlow, flowInfo=FlowInfo(flowVersion=1, appName=<unknown>), subFlowVersion=CorDappFlow(platformVersion=11, corDappName=workflows-1.0, corDappHash=8C2322F3ACFF6CA8FE3E7F554352489D40710486D8ED144430A5784441E56717), isEnabledTimedFlow=false)]
checkpoint.timestamp: 
    2023-01-31T07:42:04.168Z
    2023-01-31T07:42:04.176Z


 --- Transition of flow [2289ea18-bf18-4241-8950-cace09523d20] ---
  Timestamp: 2023-01-31T07:42:04.178Z
  Event: Error(exception=java.lang.IllegalArgumentException: Could not find Party for Anonymous(DL9VBT5ixmu4CHfFkkErsEfSdCpHidSDC1HXAQTV69jKqm), rollback=true)
  Actions: 
    RollbackTransaction
    ScheduleEvent(event=DoRemainingWork)
  Continuation: ProcessEvents
  Diff between previous and next state:
isFlowResumed: 
    true
    false
checkpoint.errorState: 
    Clean
    Errored(errors=[FlowError(errorId=934314092166762226, exception=java.lang.IllegalArgumentException: Could not find Party for Anonymous(DL9VBT5ixmu4CHfFkkErsEfSdCpHidSDC1HXAQTV69jKqm))], propagatedIndex=0, propagating=false)


 --- Transition of flow [2289ea18-bf18-4241-8950-cace09523d20] ---
  Timestamp: 2023-01-31T07:42:04.178Z
  Event: DoRemainingWork
  Actions: 
    
  Continuation: ProcessEvents
  Diff between previous and next state:
null

 --- Transition of flow [2289ea18-bf18-4241-8950-cace09523d20] ---
  Timestamp: 2023-01-31T07:42:04.178Z
  Event: StartErrorPropagation
  Actions: 
    ScheduleEvent(event=DoRemainingWork)
  Continuation: ProcessEvents
  Diff between previous and next state:
checkpoint.errorState.propagating: 
    false
    true
checkpoint.timestamp: 
    2023-01-31T07:42:04.176Z
    2023-01-31T07:42:04.178Z
 {actor_id=Only For Testing, actor_owning_identity=O=Mock Company 1, L=London, C=GB, actor_store_id=TEST, fiber-id=10000027, flow-id=2289ea18-bf18-4241-8950-cace09523d20, invocation_id=94f92ebc-0933-4966-95a0-f3e9022a2977, invocation_timestamp=2023-01-31T07:42:03.376Z, origin=Only For Testing, session_id=94f92ebc-0933-4966-95a0-f3e9022a2977, session_timestamp=2023-01-31T07:42:03.376Z, thread-id=858, tx_id=55A76480A2D34BE067B32C0D7A6E787BEB22BC8E172C25AD05FE08B4B68BDB46}
[WARN ] 2023-01-31T07:42:04,196Z [Mock network] interceptors.DumpHistoryOnErrorInterceptor. - Flow [2289ea18-bf18-4241-8950-cace09523d20] error {actor_id=Only For Testing, actor_owning_identity=O=Mock Company 1, L=London, C=GB, actor_store_id=TEST, fiber-id=10000027, flow-id=2289ea18-bf18-4241-8950-cace09523d20, invocation_id=94f92ebc-0933-4966-95a0-f3e9022a2977, invocation_timestamp=2023-01-31T07:42:03.376Z, origin=Only For Testing, session_id=94f92ebc-0933-4966-95a0-f3e9022a2977, session_timestamp=2023-01-31T07:42:03.376Z, thread-id=858, tx_id=55A76480A2D34BE067B32C0D7A6E787BEB22BC8E172C25AD05FE08B4B68BDB46}
java.lang.IllegalArgumentException: Could not find Party for Anonymous(DL9VBT5ixmu4CHfFkkErsEfSdCpHidSDC1HXAQTV69jKqm)
	at net.corda.core.identity.IdentityUtils.groupAbstractPartyByWellKnownParty(IdentityUtils.kt:47) ~[corda-core-4.9.jar:?]
	at net.corda.core.identity.IdentityUtils.groupAbstractPartyByWellKnownParty(IdentityUtils.kt:63) ~[corda-core-4.9.jar:?]
	at net.corda.core.flows.FinalityFlow.extractExternalParticipants(FinalityFlow.kt:252) ~[corda-core-4.9.jar:?]
	at net.corda.core.flows.FinalityFlow.call(FinalityFlow.kt:162) ~[corda-core-4.9.jar:?]
	at net.corda.core.flows.FinalityFlow.call(FinalityFlow.kt:43) ~[corda-core-4.9.jar:?]
	at net.corda.node.services.statemachine.FlowStateMachineImpl.subFlow(FlowStateMachineImpl.kt:420) ~[corda-node-4.9.jar:?]
	at net.corda.core.flows.FlowLogic.subFlow(FlowLogic.kt:409) ~[corda-core-4.9.jar:?]
	at net.corda.samples.obligation.flows.IOUSettleFlow.call(IOUSettleFlow.kt:116) ~[main/:?]
	at net.corda.samples.obligation.flows.IOUSettleFlow.call(IOUSettleFlow.kt:30) ~[main/:?]
	at net.corda.node.services.statemachine.FlowStateMachineImpl.run(FlowStateMachineImpl.kt:349) ~[corda-node-4.9.jar:?]
	at net.corda.node.services.statemachine.FlowStateMachineImpl.run(FlowStateMachineImpl.kt:71) ~[corda-node-4.9.jar:?]
	at co.paralleluniverse.fibers.Fiber.run1(Fiber.java:1092) ~[quasar-core-0.7.10.jar:0.7.10]
	at co.paralleluniverse.fibers.Fiber.exec(Fiber.java:788) ~[quasar-core-0.7.10.jar:0.7.10]
	at co.paralleluniverse.fibers.RunnableFiberTask.doExec(RunnableFiberTask.java:100) ~[quasar-core-0.7.10.jar:0.7.10]
	at co.paralleluniverse.fibers.RunnableFiberTask.run(RunnableFiberTask.java:91) ~[quasar-core-0.7.10.jar:0.7.10]
	at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511) ~[?:1.8.0_202]
	at java.util.concurrent.FutureTask.run(FutureTask.java:266) ~[?:1.8.0_202]
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.access$201(ScheduledThreadPoolExecutor.java:180) ~[?:1.8.0_202]
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.run(ScheduledThreadPoolExecutor.java:293) ~[?:1.8.0_202]
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149) ~[?:1.8.0_202]
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624) ~[?:1.8.0_202]
	at net.corda.node.utilities.AffinityExecutor$ServiceAffinityExecutor$1$thread$1.run(AffinityExecutor.kt:63) ~[corda-node-4.9.jar:?]
[WARN ] 2023-01-31T07:42:04,196Z [Mock network] statemachine.ActionExecutorImpl. - Propagating error {actor_id=Only For Testing, actor_owning_identity=O=Mock Company 1, L=London, C=GB, actor_store_id=TEST, fiber-id=10000027, flow-id=2289ea18-bf18-4241-8950-cace09523d20, invocation_id=94f92ebc-0933-4966-95a0-f3e9022a2977, invocation_timestamp=2023-01-31T07:42:03.376Z, origin=Only For Testing, session_id=94f92ebc-0933-4966-95a0-f3e9022a2977, session_timestamp=2023-01-31T07:42:03.376Z, thread-id=858, tx_id=55A76480A2D34BE067B32C0D7A6E787BEB22BC8E172C25AD05FE08B4B68BDB46}
[WARN ] 2023-01-31T07:42:04,302Z [Mock network] interceptors.DumpHistoryOnErrorInterceptor. - Flow [2289ea18-bf18-4241-8950-cace09523d20] errored, dumping all transitions:

 --- Transition of flow [2289ea18-bf18-4241-8950-cace09523d20] ---
  Timestamp: 2023-01-31T07:42:03.381Z
  Event: DoRemainingWork
  Actions: 
    CreateTransaction
    PersistCheckpoint(id=[2289ea18-bf18-4241-8950-cace09523d20], checkpoint=Checkpoint(checkpointState=CheckpointState(invocationContext=InvocationContext(origin=RPC(actor=Actor(id=Id(value=Only For Testing), serviceId=AuthServiceId(value=TEST), owningLegalIdentity=O=Mock Company 1, L=London, C=GB)), trace=Trace(invocationId=94f92ebc-0933-4966-95a0-f3e9022a2977, timestamp: 2023-01-31T07:42:03.376Z, entityType: Invocation, sessionId=94f92ebc-0933-4966-95a0-f3e9022a2977, timestamp: 2023-01-31T07:42:03.376Z, entityType: Session), actor=Actor(id=Id(value=Only For Testing), serviceId=AuthServiceId(value=TEST), owningLegalIdentity=O=Mock Company 1, L=London, C=GB), externalTrace=null, impersonatedActor=null, arguments=[], clientId=null), ourIdentity=O=Mock Company 1, L=London, C=GB, sessions={}, sessionsToBeClosed=[], subFlowStack=[Initiating(flowClass=class net.corda.samples.obligation.flows.IOUSettleFlow, classToInitiateWith=class net.corda.samples.obligation.flows.IOUSettleFlow, flowInfo=FlowInfo(flowVersion=1, appName=<unknown>), subFlowVersion=CorDappFlow(platformVersion=11, corDappName=workflows-1.0, corDappHash=8C2322F3ACFF6CA8FE3E7F554352489D40710486D8ED144430A5784441E56717), isEnabledTimedFlow=false)], numberOfSuspends=0, numberOfCommits=1), flowState=Unstarted(flowStart=Explicit, frozenFlowLogic=D7C53C42743B3301462089C462C658768FB287E7C44827CC0F6318A04786484F), errorState=Clean, result=null, status=RUNNABLE, progressStep=null, flowIoRequest=null, compatible=true), isCheckpointUpdate=false)
    PersistDeduplicationFacts(deduplicationHandlers=[net.corda.node.internal.FlowStarterImpl$startFlow$startFlowEvent$1@60b6037e])
    CommitTransaction
    AcknowledgeMessages(deduplicationHandlers=[net.corda.node.internal.FlowStarterImpl$startFlow$startFlowEvent$1@60b6037e])
    SignalFlowHasStarted(flowId=[2289ea18-bf18-4241-8950-cace09523d20])
    CreateTransaction
  Continuation: Resume(result=null)
  Diff between previous and next state:
pendingDeduplicationHandlers: 
    [net.corda.node.internal.FlowStarterImpl$startFlow$startFlowEvent$1@60b6037e]
    []
isFlowResumed: 
    false
    true
isAnyCheckpointPersisted: 
    false
    true


 --- Transition of flow [2289ea18-bf18-4241-8950-cace09523d20] ---
  Timestamp: 2023-01-31T07:42:03.384Z
  Event: EnterSubFlow(subFlowClass=class net.corda.samples.obligation.accountUtil.NewKeyForAccount, subFlowVersion=CorDappFlow(platformVersion=11, corDappName=workflows-1.0, corDappHash=8C2322F3ACFF6CA8FE3E7F554352489D40710486D8ED144430A5784441E56717), isEnabledTimedFlow=false)
  Actions: 
    
  Continuation: ProcessEvents
  Diff between previous and next state:
checkpoint.checkpointState.subFlowStack: 
    [Initiating(flowClass=class net.corda.samples.obligation.flows.IOUSettleFlow, classToInitiateWith=class net.corda.samples.obligation.flows.IOUSettleFlow, flowInfo=FlowInfo(flowVersion=1, appName=<unknown>), subFlowVersion=CorDappFlow(platformVersion=11, corDappName=workflows-1.0, corDappHash=8C2322F3ACFF6CA8FE3E7F554352489D40710486D8ED144430A5784441E56717), isEnabledTimedFlow=false)]
    [Initiating(flowClass=class net.corda.samples.obligation.flows.IOUSettleFlow, classToInitiateWith=class net.corda.samples.obligation.flows.IOUSettleFlow, flowInfo=FlowInfo(flowVersion=1, appName=<unknown>), subFlowVersion=CorDappFlow(platformVersion=11, corDappName=workflows-1.0, corDappHash=8C2322F3ACFF6CA8FE3E7F554352489D40710486D8ED144430A5784441E56717), isEnabledTimedFlow=false), Inlined(flowClass=class net.corda.samples.obligation.accountUtil.NewKeyForAccount, subFlowVersion=CorDappFlow(platformVersion=11, corDappName=workflows-1.0, corDappHash=8C2322F3ACFF6CA8FE3E7F554352489D40710486D8ED144430A5784441E56717), isEnabledTimedFlow=false)]
checkpoint.timestamp: 
    2023-01-31T07:42:03.378Z
    2023-01-31T07:42:03.384Z


 --- Transition of flow [2289ea18-bf18-4241-8950-cace09523d20] ---
  Timestamp: 2023-01-31T07:42:03.388Z
  Event: LeaveSubFlow
  Actions: 
    
  Continuation: ProcessEvents
  Diff between previous and next state:
checkpoint.checkpointState.subFlowStack: 
    [Initiating(flowClass=class net.corda.samples.obligation.flows.IOUSettleFlow, classToInitiateWith=class net.corda.samples.obligation.flows.IOUSettleFlow, flowInfo=FlowInfo(flowVersion=1, appName=<unknown>), subFlowVersion=CorDappFlow(platformVersion=11, corDappName=workflows-1.0, corDappHash=8C2322F3ACFF6CA8FE3E7F554352489D40710486D8ED144430A5784441E56717), isEnabledTimedFlow=false), Inlined(flowClass=class net.corda.samples.obligation.accountUtil.NewKeyForAccount, subFlowVersion=CorDappFlow(platformVersion=11, corDappName=workflows-1.0, corDappHash=8C2322F3ACFF6CA8FE3E7F554352489D40710486D8ED144430A5784441E56717), isEnabledTimedFlow=false)]
    [Initiating(flowClass=class net.corda.samples.obligation.flows.IOUSettleFlow, classToInitiateWith=class net.corda.samples.obligation.flows.IOUSettleFlow, flowInfo=FlowInfo(flowVersion=1, appName=<unknown>), subFlowVersion=CorDappFlow(platformVersion=11, corDappName=workflows-1.0, corDappHash=8C2322F3ACFF6CA8FE3E7F554352489D40710486D8ED144430A5784441E56717), isEnabledTimedFlow=false)]
checkpoint.timestamp: 
    2023-01-31T07:42:03.384Z
    2023-01-31T07:42:03.388Z


 --- Transition of flow [2289ea18-bf18-4241-8950-cace09523d20] ---
  Timestamp: 2023-01-31T07:42:03.394Z
  Event: EnterSubFlow(subFlowClass=class com.r3.corda.lib.accounts.workflows.flows.RequestKeyForAccount, subFlowVersion=CorDappFlow(platformVersion=11, corDappName=accounts-workflows-1.0, corDappHash=80555705CE83A631D1BDD61E9C14A7C2215BB67FAB1411547C4D4B3D66F8402E), isEnabledTimedFlow=false)
  Actions: 
    
  Continuation: ProcessEvents
  Diff between previous and next state:
checkpoint.checkpointState.subFlowStack: 
    [Initiating(flowClass=class net.corda.samples.obligation.flows.IOUSettleFlow, classToInitiateWith=class net.corda.samples.obligation.flows.IOUSettleFlow, flowInfo=FlowInfo(flowVersion=1, appName=<unknown>), subFlowVersion=CorDappFlow(platformVersion=11, corDappName=workflows-1.0, corDappHash=8C2322F3ACFF6CA8FE3E7F554352489D40710486D8ED144430A5784441E56717), isEnabledTimedFlow=false)]
    [Initiating(flowClass=class net.corda.samples.obligation.flows.IOUSettleFlow, classToInitiateWith=class net.corda.samples.obligation.flows.IOUSettleFlow, flowInfo=FlowInfo(flowVersion=1, appName=<unknown>), subFlowVersion=CorDappFlow(platformVersion=11, corDappName=workflows-1.0, corDappHash=8C2322F3ACFF6CA8FE3E7F554352489D40710486D8ED144430A5784441E56717), isEnabledTimedFlow=false), Initiating(flowClass=class com.r3.corda.lib.accounts.workflows.flows.RequestKeyForAccount, classToInitiateWith=class com.r3.corda.lib.accounts.workflows.flows.RequestKeyForAccount, flowInfo=FlowInfo(flowVersion=1, appName=accounts-workflows-1.0), subFlowVersion=CorDappFlow(platformVersion=11, corDappName=accounts-workflows-1.0, corDappHash=80555705CE83A631D1BDD61E9C14A7C2215BB67FAB1411547C4D4B3D66F8402E), isEnabledTimedFlow=false)]
checkpoint.timestamp: 
    2023-01-31T07:42:03.388Z
    2023-01-31T07:42:03.394Z


 --- Transition of flow [2289ea18-bf18-4241-8950-cace09523d20] ---
  Timestamp: 2023-01-31T07:42:03.394Z
  Event: InitiateFlow(destination=O=Mock Company 3, L=London, C=GB, wellKnownParty=O=Mock Company 3, L=London, C=GB)
  Actions: 
    AddSessionBinding(flowId=[2289ea18-bf18-4241-8950-cace09523d20], sessionId=SessionId(toLong=5897559181151605428))
  Continuation: Resume(result=class net.corda.node.services.statemachine.FlowSessionImpl)
  Diff between previous and next state:
checkpoint.checkpointState.sessions.SessionId(toLong=5897559181151605428): 
    null
    Uninitiated(destination=O=Mock Company 3, L=London, C=GB, initiatingSubFlow=Initiating(flowClass=class com.r3.corda.lib.accounts.workflows.flows.RequestKeyForAccount, classToInitiateWith=class com.r3.corda.lib.accounts.workflows.flows.RequestKeyForAccount, flowInfo=FlowInfo(flowVersion=1, appName=accounts-workflows-1.0), subFlowVersion=CorDappFlow(platformVersion=11, corDappName=accounts-workflows-1.0, corDappHash=80555705CE83A631D1BDD61E9C14A7C2215BB67FAB1411547C4D4B3D66F8402E), isEnabledTimedFlow=false), sourceSessionId=SessionId(toLong=5897559181151605428), additionalEntropy=-6209985564318473542)


 --- Transition of flow [2289ea18-bf18-4241-8950-cace09523d20] ---
  Timestamp: 2023-01-31T07:42:03.394Z
  Event: EnterSubFlow(subFlowClass=class com.r3.corda.lib.accounts.workflows.flows.RequestKeyForAccountFlow, subFlowVersion=CorDappFlow(platformVersion=11, corDappName=accounts-workflows-1.0, corDappHash=80555705CE83A631D1BDD61E9C14A7C2215BB67FAB1411547C4D4B3D66F8402E), isEnabledTimedFlow=false)
  Actions: 
    
  Continuation: ProcessEvents
  Diff between previous and next state:
checkpoint.checkpointState.subFlowStack: 
    [Initiating(flowClass=class net.corda.samples.obligation.flows.IOUSettleFlow, classToInitiateWith=class net.corda.samples.obligation.flows.IOUSettleFlow, flowInfo=FlowInfo(flowVersion=1, appName=<unknown>), subFlowVersion=CorDappFlow(platformVersion=11, corDappName=workflows-1.0, corDappHash=8C2322F3ACFF6CA8FE3E7F554352489D40710486D8ED144430A5784441E56717), isEnabledTimedFlow=false), Initiating(flowClass=class com.r3.corda.lib.accounts.workflows.flows.RequestKeyForAccount, classToInitiateWith=class com.r3.corda.lib.accounts.workflows.flows.RequestKeyForAccount, flowInfo=FlowInfo(flowVersion=1, appName=accounts-workflows-1.0), subFlowVersion=CorDappFlow(platformVersion=11, corDappName=accounts-workflows-1.0, corDappHash=80555705CE83A631D1BDD61E9C14A7C2215BB67FAB1411547C4D4B3D66F8402E), isEnabledTimedFlow=false)]
    [Initiating(flowClass=class net.corda.samples.obligation.flows.IOUSettleFlow, classToInitiateWith=class net.corda.samples.obligation.flows.IOUSettleFlow, flowInfo=FlowInfo(flowVersion=1, appName=<unknown>), subFlowVersion=CorDappFlow(platformVersion=11, corDappName=workflows-1.0, corDappHash=8C2322F3ACFF6CA8FE3E7F554352489D40710486D8ED144430A5784441E56717), isEnabledTimedFlow=false), Initiating(flowClass=class com.r3.corda.lib.accounts.workflows.flows.RequestKeyForAccount, classToInitiateWith=class com.r3.corda.lib.accounts.workflows.flows.RequestKeyForAccount, flowInfo=FlowInfo(flowVersion=1, appName=accounts-workflows-1.0), subFlowVersion=CorDappFlow(platformVersion=11, corDappName=accounts-workflows-1.0, corDappHash=80555705CE83A631D1BDD61E9C14A7C2215BB67FAB1411547C4D4B3D66F8402E), isEnabledTimedFlow=false), Inlined(flowClass=class com.r3.corda.lib.accounts.workflows.flows.RequestKeyForAccountFlow, subFlowVersion=CorDappFlow(platformVersion=11, corDappName=accounts-workflows-1.0, corDappHash=80555705CE83A631D1BDD61E9C14A7C2215BB67FAB1411547C4D4B3D66F8402E), isEnabledTimedFlow=false)]


 --- Transition of flow [2289ea18-bf18-4241-8950-cace09523d20] ---
  Timestamp: 2023-01-31T07:42:03.404Z
  Event: Suspend(ioRequest=SendAndReceive({FlowSessionImpl(destination=O=Mock Company 3, L=London, C=GB, sourceSessionId=SessionId(toLong=5897559181151605428))=FlowSessionImpl(destination=O=Mock Company 3, L=London, C=GB, sourceSessionId=SessionId(toLong=5897559181151605428))=4E0603750176CD399C8CB1651F85182D29CBE2582FC133BF48790E24AF3C79E1}, shouldRetrySend=false), maySkipCheckpoint=false, fiber=B240C10EA0A1AC386E871988FB55B35723BAD99239AA23FDF05F063F865C8540, currentStep=Starting)
  Actions: 
    PersistCheckpoint(id=[2289ea18-bf18-4241-8950-cace09523d20], checkpoint=Checkpoint(checkpointState=CheckpointState(invocationContext=InvocationContext(origin=RPC(actor=Actor(id=Id(value=Only For Testing), serviceId=AuthServiceId(value=TEST), owningLegalIdentity=O=Mock Company 1, L=London, C=GB)), trace=Trace(invocationId=94f92ebc-0933-4966-95a0-f3e9022a2977, timestamp: 2023-01-31T07:42:03.376Z, entityType: Invocation, sessionId=94f92ebc-0933-4966-95a0-f3e9022a2977, timestamp: 2023-01-31T07:42:03.376Z, entityType: Session), actor=Actor(id=Id(value=Only For Testing), serviceId=AuthServiceId(value=TEST), owningLegalIdentity=O=Mock Company 1, L=London, C=GB), externalTrace=null, impersonatedActor=null, arguments=[], clientId=null), ourIdentity=O=Mock Company 1, L=London, C=GB, sessions={SessionId(toLong=5897559181151605428)=Uninitiated(destination=O=Mock Company 3, L=London, C=GB, initiatingSubFlow=Initiating(flowClass=class com.r3.corda.lib.accounts.workflows.flows.RequestKeyForAccount, classToInitiateWith=class com.r3.corda.lib.accounts.workflows.flows.RequestKeyForAccount, flowInfo=FlowInfo(flowVersion=1, appName=accounts-workflows-1.0), subFlowVersion=CorDappFlow(platformVersion=11, corDappName=accounts-workflows-1.0, corDappHash=80555705CE83A631D1BDD61E9C14A7C2215BB67FAB1411547C4D4B3D66F8402E), isEnabledTimedFlow=false), sourceSessionId=SessionId(toLong=5897559181151605428), additionalEntropy=-6209985564318473542)}, sessionsToBeClosed=[], subFlowStack=[Initiating(flowClass=class net.corda.samples.obligation.flows.IOUSettleFlow, classToInitiateWith=class net.corda.samples.obligation.flows.IOUSettleFlow, flowInfo=FlowInfo(flowVersion=1, appName=<unknown>), subFlowVersion=CorDappFlow(platformVersion=11, corDappName=workflows-1.0, corDappHash=8C2322F3ACFF6CA8FE3E7F554352489D40710486D8ED144430A5784441E56717), isEnabledTimedFlow=false), Initiating(flowClass=class com.r3.corda.lib.accounts.workflows.flows.RequestKeyForAccount, classToInitiateWith=class com.r3.corda.lib.accounts.workflows.flows.RequestKeyForAccount, flowInfo=FlowInfo(flowVersion=1, appName=accounts-workflows-1.0), subFlowVersion=CorDappFlow(platformVersion=11, corDappName=accounts-workflows-1.0, corDappHash=80555705CE83A631D1BDD61E9C14A7C2215BB67FAB1411547C4D4B3D66F8402E), isEnabledTimedFlow=false), Inlined(flowClass=class com.r3.corda.lib.accounts.workflows.flows.RequestKeyForAccountFlow, subFlowVersion=CorDappFlow(platformVersion=11, corDappName=accounts-workflows-1.0, corDappHash=80555705CE83A631D1BDD61E9C14A7C2215BB67FAB1411547C4D4B3D66F8402E), isEnabledTimedFlow=false)], numberOfSuspends=1, numberOfCommits=2), flowState=Started(flowIORequest=SendAndReceive({FlowSessionImpl(destination=O=Mock Company 3, L=London, C=GB, sourceSessionId=SessionId(toLong=5897559181151605428))=FlowSessionImpl(destination=O=Mock Company 3, L=London, C=GB, sourceSessionId=SessionId(toLong=5897559181151605428))=4E0603750176CD399C8CB1651F85182D29CBE2582FC133BF48790E24AF3C79E1}, shouldRetrySend=false), frozenFiber=B240C10EA0A1AC386E871988FB55B35723BAD99239AA23FDF05F063F865C8540), errorState=Clean, result=null, status=RUNNABLE, progressStep=Starting, flowIoRequest=SendAndReceive, compatible=true), isCheckpointUpdate=true)
    PersistDeduplicationFacts(deduplicationHandlers=[])
    CommitTransaction
    AcknowledgeMessages(deduplicationHandlers=[])
    ScheduleEvent(event=DoRemainingWork)
  Continuation: ProcessEvents
  Diff between previous and next state:
isFlowResumed: 
    true
    false
numberOfCommits: 
    0
    2
checkpoint.progressStep: 
    null
    Starting
checkpoint.flowIoRequest: 
    null
    SendAndReceive
checkpoint.checkpointState.numberOfCommits: 
    1
    2
checkpoint.checkpointState.numberOfSuspends: 
    0
    1
checkpoint.flowState: 
    Unstarted(flowStart=Explicit, frozenFlowLogic=D7C53C42743B3301462089C462C658768FB287E7C44827CC0F6318A04786484F)
    Started(flowIORequest=SendAndReceive({FlowSessionImpl(destination=O=Mock Company 3, L=London, C=GB, sourceSessionId=SessionId(toLong=5897559181151605428))=FlowSessionImpl(destination=O=Mock Company 3, L=London, C=GB, sourceSessionId=SessionId(toLong=5897559181151605428))=4E0603750176CD399C8CB1651F85182D29CBE2582FC133BF48790E24AF3C79E1}, shouldRetrySend=false), frozenFiber=B240C10EA0A1AC386E871988FB55B35723BAD99239AA23FDF05F063F865C8540)
checkpoint.timestamp: 
    2023-01-31T07:42:03.394Z
    2023-01-31T07:42:03.401Z


 --- Transition of flow [2289ea18-bf18-4241-8950-cace09523d20] ---
  Timestamp: 2023-01-31T07:42:03.407Z
  Event: DoRemainingWork
  Actions: 
    SendMultiple(sendInitial=[SendInitial(destination=O=Mock Company 3, L=London, C=GB, initialise=InitialSessionMessage(initiatorSessionId=SessionId(toLong=5897559181151605428), initiationEntropy=-6209985564318473542, initiatorFlowClassName=com.r3.corda.lib.accounts.workflows.flows.RequestKeyForAccount, appName=accounts-workflows-1.0, firstPayload=class net.corda.core.serialization.SerializedBytes), deduplicationId=SenderDeduplicationId(deduplicationId=DeduplicationId(toString=N-R-5897559181151605428--6209985564318473542-1-0), senderUUID=7da18ab5-41ea-4720-99fc-208eae0a7847))], sendExisting=[])
  Continuation: ProcessEvents
  Diff between previous and next state:
checkpoint.checkpointState.sessions.SessionId(toLong=5897559181151605428): 
    Uninitiated(destination=O=Mock Company 3, L=London, C=GB, initiatingSubFlow=Initiating(flowClass=class com.r3.corda.lib.accounts.workflows.flows.RequestKeyForAccount, classToInitiateWith=class com.r3.corda.lib.accounts.workflows.flows.RequestKeyForAccount, flowInfo=FlowInfo(flowVersion=1, appName=accounts-workflows-1.0), subFlowVersion=CorDappFlow(platformVersion=11, corDappName=accounts-workflows-1.0, corDappHash=80555705CE83A631D1BDD61E9C14A7C2215BB67FAB1411547C4D4B3D66F8402E), isEnabledTimedFlow=false), sourceSessionId=SessionId(toLong=5897559181151605428), additionalEntropy=-6209985564318473542)
    Initiating(bufferedMessages=[], rejectionError=null, deduplicationSeed=R-5897559181151605428--6209985564318473542)
checkpoint.flowState.flowIORequest: 
    SendAndReceive({FlowSessionImpl(destination=O=Mock Company 3, L=London, C=GB, sourceSessionId=SessionId(toLong=5897559181151605428))=FlowSessionImpl(destination=O=Mock Company 3, L=London, C=GB, sourceSessionId=SessionId(toLong=5897559181151605428))=4E0603750176CD399C8CB1651F85182D29CBE2582FC133BF48790E24AF3C79E1}, shouldRetrySend=false)
    Receive(sessions=[FlowSessionImpl(destination=O=Mock Company 3, L=London, C=GB, sourceSessionId=SessionId(toLong=5897559181151605428))])
checkpoint.timestamp: 
    2023-01-31T07:42:03.401Z
    2023-01-31T07:42:03.404Z


 --- Transition of flow [2289ea18-bf18-4241-8950-cace09523d20] ---
  Timestamp: 2023-01-31T07:42:03.435Z
  Event: DeliverSessionMessage(sessionMessage=ExistingSessionMessage(recipientSessionId=SessionId(toLong=5897559181151605428), payload=ConfirmSessionMessage(initiatedSessionId=SessionId(toLong=-6898937881699103482), initiatedFlowInfo=FlowInfo(flowVersion=1, appName=accounts-workflows-1.0))), deduplicationHandler=net.corda.testing.node.internal.MockNodeMessagingService$InMemoryDeduplicationHandler@7737d71, sender=O=Mock Company 3, L=London, C=GB)
  Actions: 
    ScheduleEvent(event=DoRemainingWork)
  Continuation: ProcessEvents
  Diff between previous and next state:
pendingDeduplicationHandlers: 
    []
    [net.corda.testing.node.internal.MockNodeMessagingService$InMemoryDeduplicationHandler@7737d71]
checkpoint.checkpointState.sessions.SessionId(toLong=5897559181151605428): 
    Initiating(bufferedMessages=[], rejectionError=null, deduplicationSeed=R-5897559181151605428--6209985564318473542)
    Initiated(peerParty=O=Mock Company 3, L=London, C=GB, peerFlowInfo=FlowInfo(flowVersion=1, appName=accounts-workflows-1.0), receivedMessages=[], otherSideErrored=false, peerSinkSessionId=SessionId(toLong=-6898937881699103482), deduplicationSeed=R-5897559181151605428--6209985564318473542)
checkpoint.timestamp: 
    2023-01-31T07:42:03.404Z
    2023-01-31T07:42:03.435Z


 --- Transition of flow [2289ea18-bf18-4241-8950-cace09523d20] ---
  Timestamp: 2023-01-31T07:42:03.435Z
  Event: DoRemainingWork
  Actions: 
    
  Continuation: ProcessEvents
  Diff between previous and next state:
null

 --- Transition of flow [2289ea18-bf18-4241-8950-cace09523d20] ---
  Timestamp: 2023-01-31T07:42:03.437Z
  Event: DeliverSessionMessage(sessionMessage=ExistingSessionMessage(recipientSessionId=SessionId(toLong=5897559181151605428), payload=DataSessionMessage(payload=class net.corda.core.serialization.SerializedBytes)), deduplicationHandler=net.corda.testing.node.internal.MockNodeMessagingService$InMemoryDeduplicationHandler@1c5d7d38, sender=O=Mock Company 3, L=London, C=GB)
  Actions: 
    ScheduleEvent(event=DoRemainingWork)
  Continuation: ProcessEvents
  Diff between previous and next state:
pendingDeduplicationHandlers: 
    [net.corda.testing.node.internal.MockNodeMessagingService$InMemoryDeduplicationHandler@7737d71]
    [net.corda.testing.node.internal.MockNodeMessagingService$InMemoryDeduplicationHandler@7737d71, net.corda.testing.node.internal.MockNodeMessagingService$InMemoryDeduplicationHandler@1c5d7d38]
checkpoint.checkpointState.sessions.SessionId(toLong=5897559181151605428).receivedMessages.isEmpty: 
    true
    false
checkpoint.timestamp: 
    2023-01-31T07:42:03.435Z
    2023-01-31T07:42:03.437Z


 --- Transition of flow [2289ea18-bf18-4241-8950-cace09523d20] ---
  Timestamp: 2023-01-31T07:42:03.437Z
  Event: DoRemainingWork
  Actions: 
    CreateTransaction
  Continuation: Resume(result=class java.util.LinkedHashMap)
  Diff between previous and next state:
isFlowResumed: 
    false
    true
checkpoint.checkpointState.sessions.SessionId(toLong=5897559181151605428).receivedMessages.isEmpty: 
    false
    true


 --- Transition of flow [2289ea18-bf18-4241-8950-cace09523d20] ---
  Timestamp: 2023-01-31T07:42:03.438Z
  Event: EnterSubFlow(subFlowClass=class com.r3.corda.lib.ci.workflows.RequestKeyFlow, subFlowVersion=CoreFlow(platformVersion=11), isEnabledTimedFlow=false)
  Actions: 
    
  Continuation: ProcessEvents
  Diff between previous and next state:
checkpoint.checkpointState.subFlowStack: 
    [Initiating(flowClass=class net.corda.samples.obligation.flows.IOUSettleFlow, classToInitiateWith=class net.corda.samples.obligation.flows.IOUSettleFlow, flowInfo=FlowInfo(flowVersion=1, appName=<unknown>), subFlowVersion=CorDappFlow(platformVersion=11, corDappName=workflows-1.0, corDappHash=8C2322F3ACFF6CA8FE3E7F554352489D40710486D8ED144430A5784441E56717), isEnabledTimedFlow=false), Initiating(flowClass=class com.r3.corda.lib.accounts.workflows.flows.RequestKeyForAccount, classToInitiateWith=class com.r3.corda.lib.accounts.workflows.flows.RequestKeyForAccount, flowInfo=FlowInfo(flowVersion=1, appName=accounts-workflows-1.0), subFlowVersion=CorDappFlow(platformVersion=11, corDappName=accounts-workflows-1.0, corDappHash=80555705CE83A631D1BDD61E9C14A7C2215BB67FAB1411547C4D4B3D66F8402E), isEnabledTimedFlow=false), Inlined(flowClass=class com.r3.corda.lib.accounts.workflows.flows.RequestKeyForAccountFlow, subFlowVersion=CorDappFlow(platformVersion=11, corDappName=accounts-workflows-1.0, corDappHash=80555705CE83A631D1BDD61E9C14A7C2215BB67FAB1411547C4D4B3D66F8402E), isEnabledTimedFlow=false)]
    [Initiating(flowClass=class net.corda.samples.obligation.flows.IOUSettleFlow, classToInitiateWith=class net.corda.samples.obligation.flows.IOUSettleFlow, flowInfo=FlowInfo(flowVersion=1, appName=<unknown>), subFlowVersion=CorDappFlow(platformVersion=11, corDappName=workflows-1.0, corDappHash=8C2322F3ACFF6CA8FE3E7F554352489D40710486D8ED144430A5784441E56717), isEnabledTimedFlow=false), Initiating(flowClass=class com.r3.corda.lib.accounts.workflows.flows.RequestKeyForAccount, classToInitiateWith=class com.r3.corda.lib.accounts.workflows.flows.RequestKeyForAccount, flowInfo=FlowInfo(flowVersion=1, appName=accounts-workflows-1.0), subFlowVersion=CorDappFlow(platformVersion=11, corDappName=accounts-workflows-1.0, corDappHash=80555705CE83A631D1BDD61E9C14A7C2215BB67FAB1411547C4D4B3D66F8402E), isEnabledTimedFlow=false), Inlined(flowClass=class com.r3.corda.lib.accounts.workflows.flows.RequestKeyForAccountFlow, subFlowVersion=CorDappFlow(platformVersion=11, corDappName=accounts-workflows-1.0, corDappHash=80555705CE83A631D1BDD61E9C14A7C2215BB67FAB1411547C4D4B3D66F8402E), isEnabledTimedFlow=false), Inlined(flowClass=class com.r3.corda.lib.ci.workflows.RequestKeyFlow, subFlowVersion=CoreFlow(platformVersion=11), isEnabledTimedFlow=false)]
checkpoint.timestamp: 
    2023-01-31T07:42:03.437Z
    2023-01-31T07:42:03.438Z


 --- Transition of flow [2289ea18-bf18-4241-8950-cace09523d20] ---
  Timestamp: 2023-01-31T07:42:03.443Z
  Event: Suspend(ioRequest=SendAndReceive({FlowSessionImpl(destination=O=Mock Company 3, L=London, C=GB, sourceSessionId=SessionId(toLong=5897559181151605428))=FlowSessionImpl(destination=O=Mock Company 3, L=London, C=GB, sourceSessionId=SessionId(toLong=5897559181151605428))=20159965AB20C558525B25D92E0DD3B4575A745D27F8889DA8F44C28E19E516D}, shouldRetrySend=false), maySkipCheckpoint=false, fiber=BC08B227FE60A6B2A3A70C2BE5E308F80A825AD220086EDFDA077F8C11962FF0, currentStep=Starting)
  Actions: 
    PersistCheckpoint(id=[2289ea18-bf18-4241-8950-cace09523d20], checkpoint=Checkpoint(checkpointState=CheckpointState(invocationContext=InvocationContext(origin=RPC(actor=Actor(id=Id(value=Only For Testing), serviceId=AuthServiceId(value=TEST), owningLegalIdentity=O=Mock Company 1, L=London, C=GB)), trace=Trace(invocationId=94f92ebc-0933-4966-95a0-f3e9022a2977, timestamp: 2023-01-31T07:42:03.376Z, entityType: Invocation, sessionId=94f92ebc-0933-4966-95a0-f3e9022a2977, timestamp: 2023-01-31T07:42:03.376Z, entityType: Session), actor=Actor(id=Id(value=Only For Testing), serviceId=AuthServiceId(value=TEST), owningLegalIdentity=O=Mock Company 1, L=London, C=GB), externalTrace=null, impersonatedActor=null, arguments=[], clientId=null), ourIdentity=O=Mock Company 1, L=London, C=GB, sessions={SessionId(toLong=5897559181151605428)=Initiated(peerParty=O=Mock Company 3, L=London, C=GB, peerFlowInfo=FlowInfo(flowVersion=1, appName=accounts-workflows-1.0), receivedMessages=[], otherSideErrored=false, peerSinkSessionId=SessionId(toLong=-6898937881699103482), deduplicationSeed=R-5897559181151605428--6209985564318473542)}, sessionsToBeClosed=[], subFlowStack=[Initiating(flowClass=class net.corda.samples.obligation.flows.IOUSettleFlow, classToInitiateWith=class net.corda.samples.obligation.flows.IOUSettleFlow, flowInfo=FlowInfo(flowVersion=1, appName=<unknown>), subFlowVersion=CorDappFlow(platformVersion=11, corDappName=workflows-1.0, corDappHash=8C2322F3ACFF6CA8FE3E7F554352489D40710486D8ED144430A5784441E56717), isEnabledTimedFlow=false), Initiating(flowClass=class com.r3.corda.lib.accounts.workflows.flows.RequestKeyForAccount, classToInitiateWith=class com.r3.corda.lib.accounts.workflows.flows.RequestKeyForAccount, flowInfo=FlowInfo(flowVersion=1, appName=accounts-workflows-1.0), subFlowVersion=CorDappFlow(platformVersion=11, corDappName=accounts-workflows-1.0, corDappHash=80555705CE83A631D1BDD61E9C14A7C2215BB67FAB1411547C4D4B3D66F8402E), isEnabledTimedFlow=false), Inlined(flowClass=class com.r3.corda.lib.accounts.workflows.flows.RequestKeyForAccountFlow, subFlowVersion=CorDappFlow(platformVersion=11, corDappName=accounts-workflows-1.0, corDappHash=80555705CE83A631D1BDD61E9C14A7C2215BB67FAB1411547C4D4B3D66F8402E), isEnabledTimedFlow=false), Inlined(flowClass=class com.r3.corda.lib.ci.workflows.RequestKeyFlow, subFlowVersion=CoreFlow(platformVersion=11), isEnabledTimedFlow=false)], numberOfSuspends=2, numberOfCommits=3), flowState=Started(flowIORequest=SendAndReceive({FlowSessionImpl(destination=O=Mock Company 3, L=London, C=GB, sourceSessionId=SessionId(toLong=5897559181151605428))=FlowSessionImpl(destination=O=Mock Company 3, L=London, C=GB, sourceSessionId=SessionId(toLong=5897559181151605428))=20159965AB20C558525B25D92E0DD3B4575A745D27F8889DA8F44C28E19E516D}, shouldRetrySend=false), frozenFiber=BC08B227FE60A6B2A3A70C2BE5E308F80A825AD220086EDFDA077F8C11962FF0), errorState=Clean, result=null, status=RUNNABLE, progressStep=Starting, flowIoRequest=SendAndReceive, compatible=true), isCheckpointUpdate=true)
    PersistDeduplicationFacts(deduplicationHandlers=[net.corda.testing.node.internal.MockNodeMessagingService$InMemoryDeduplicationHandler@7737d71, net.corda.testing.node.internal.MockNodeMessagingService$InMemoryDeduplicationHandler@1c5d7d38])
    CommitTransaction
    AcknowledgeMessages(deduplicationHandlers=[net.corda.testing.node.internal.MockNodeMessagingService$InMemoryDeduplicationHandler@7737d71, net.corda.testing.node.internal.MockNodeMessagingService$InMemoryDeduplicationHandler@1c5d7d38])
    ScheduleEvent(event=DoRemainingWork)
  Continuation: ProcessEvents
  Diff between previous and next state:
pendingDeduplicationHandlers: 
    [net.corda.testing.node.internal.MockNodeMessagingService$InMemoryDeduplicationHandler@7737d71, net.corda.testing.node.internal.MockNodeMessagingService$InMemoryDeduplicationHandler@1c5d7d38]
    []
isFlowResumed: 
    true
    false
numberOfCommits: 
    2
    3
checkpoint.checkpointState.numberOfCommits: 
    2
    3
checkpoint.checkpointState.numberOfSuspends: 
    1
    2
checkpoint.flowState.flowIORequest: 
    Receive(sessions=[FlowSessionImpl(destination=O=Mock Company 3, L=London, C=GB, sourceSessionId=SessionId(toLong=5897559181151605428))])
    SendAndReceive({FlowSessionImpl(destination=O=Mock Company 3, L=London, C=GB, sourceSessionId=SessionId(toLong=5897559181151605428))=FlowSessionImpl(destination=O=Mock Company 3, L=London, C=GB, sourceSessionId=SessionId(toLong=5897559181151605428))=20159965AB20C558525B25D92E0DD3B4575A745D27F8889DA8F44C28E19E516D}, shouldRetrySend=false)
checkpoint.flowState.frozenFiber.hash: 
    B240C10EA0A1AC386E871988FB55B35723BAD99239AA23FDF05F063F865C8540
    BC08B227FE60A6B2A3A70C2BE5E308F80A825AD220086EDFDA077F8C11962FF0
checkpoint.timestamp: 
    2023-01-31T07:42:03.438Z
    2023-01-31T07:42:03.441Z


 --- Transition of flow [2289ea18-bf18-4241-8950-cace09523d20] ---
  Timestamp: 2023-01-31T07:42:03.444Z
  Event: DoRemainingWork
  Actions: 
    SendMultiple(sendInitial=[], sendExisting=[SendExisting(peerParty=O=Mock Company 3, L=London, C=GB, message=ExistingSessionMessage(recipientSessionId=SessionId(toLong=-6898937881699103482), payload=DataSessionMessage(payload=class net.corda.core.serialization.SerializedBytes)), deduplicationId=SenderDeduplicationId(deduplicationId=DeduplicationId(toString=N-R-5897559181151605428--6209985564318473542-2-0), senderUUID=7da18ab5-41ea-4720-99fc-208eae0a7847))])
  Continuation: ProcessEvents
  Diff between previous and next state:
checkpoint.flowState.flowIORequest: 
    SendAndReceive({FlowSessionImpl(destination=O=Mock Company 3, L=London, C=GB, sourceSessionId=SessionId(toLong=5897559181151605428))=FlowSessionImpl(destination=O=Mock Company 3, L=London, C=GB, sourceSessionId=SessionId(toLong=5897559181151605428))=20159965AB20C558525B25D92E0DD3B4575A745D27F8889DA8F44C28E19E516D}, shouldRetrySend=false)
    Receive(sessions=[FlowSessionImpl(destination=O=Mock Company 3, L=London, C=GB, sourceSessionId=SessionId(toLong=5897559181151605428))])
checkpoint.timestamp: 
    2023-01-31T07:42:03.441Z
    2023-01-31T07:42:03.444Z


 --- Transition of flow [2289ea18-bf18-4241-8950-cace09523d20] ---
  Timestamp: 2023-01-31T07:42:03.459Z
  Event: DeliverSessionMessage(sessionMessage=ExistingSessionMessage(recipientSessionId=SessionId(toLong=5897559181151605428), payload=DataSessionMessage(payload=class net.corda.core.serialization.SerializedBytes)), deduplicationHandler=net.corda.testing.node.internal.MockNodeMessagingService$InMemoryDeduplicationHandler@69ea3ad2, sender=O=Mock Company 3, L=London, C=GB)
  Actions: 
    ScheduleEvent(event=DoRemainingWork)
  Continuation: ProcessEvents
  Diff between previous and next state:
pendingDeduplicationHandlers: 
    []
    [net.corda.testing.node.internal.MockNodeMessagingService$InMemoryDeduplicationHandler@69ea3ad2]
checkpoint.checkpointState.sessions.SessionId(toLong=5897559181151605428).receivedMessages.isEmpty: 
    true
    false
checkpoint.timestamp: 
    2023-01-31T07:42:03.444Z
    2023-01-31T07:42:03.459Z


 --- Transition of flow [2289ea18-bf18-4241-8950-cace09523d20] ---
  Timestamp: 2023-01-31T07:42:03.459Z
  Event: DoRemainingWork
  Actions: 
    CreateTransaction
  Continuation: Resume(result=class java.util.LinkedHashMap)
  Diff between previous and next state:
isFlowResumed: 
    false
    true
checkpoint.checkpointState.sessions.SessionId(toLong=5897559181151605428).receivedMessages.isEmpty: 
    false
    true


 --- Transition of flow [2289ea18-bf18-4241-8950-cace09523d20] ---
  Timestamp: 2023-01-31T07:42:03.462Z
  Event: LeaveSubFlow
  Actions: 
    
  Continuation: ProcessEvents
  Diff between previous and next state:
checkpoint.checkpointState.subFlowStack: 
    [Initiating(flowClass=class net.corda.samples.obligation.flows.IOUSettleFlow, classToInitiateWith=class net.corda.samples.obligation.flows.IOUSettleFlow, flowInfo=FlowInfo(flowVersion=1, appName=<unknown>), subFlowVersion=CorDappFlow(platformVersion=11, corDappName=workflows-1.0, corDappHash=8C2322F3ACFF6CA8FE3E7F554352489D40710486D8ED144430A5784441E56717), isEnabledTimedFlow=false), Initiating(flowClass=class com.r3.corda.lib.accounts.workflows.flows.RequestKeyForAccount, classToInitiateWith=class com.r3.corda.lib.accounts.workflows.flows.RequestKeyForAccount, flowInfo=FlowInfo(flowVersion=1, appName=accounts-workflows-1.0), subFlowVersion=CorDappFlow(platformVersion=11, corDappName=accounts-workflows-1.0, corDappHash=80555705CE83A631D1BDD61E9C14A7C2215BB67FAB1411547C4D4B3D66F8402E), isEnabledTimedFlow=false), Inlined(flowClass=class com.r3.corda.lib.accounts.workflows.flows.RequestKeyForAccountFlow, subFlowVersion=CorDappFlow(platformVersion=11, corDappName=accounts-workflows-1.0, corDappHash=80555705CE83A631D1BDD61E9C14A7C2215BB67FAB1411547C4D4B3D66F8402E), isEnabledTimedFlow=false), Inlined(flowClass=class com.r3.corda.lib.ci.workflows.RequestKeyFlow, subFlowVersion=CoreFlow(platformVersion=11), isEnabledTimedFlow=false)]
    [Initiating(flowClass=class net.corda.samples.obligation.flows.IOUSettleFlow, classToInitiateWith=class net.corda.samples.obligation.flows.IOUSettleFlow, flowInfo=FlowInfo(flowVersion=1, appName=<unknown>), subFlowVersion=CorDappFlow(platformVersion=11, corDappName=workflows-1.0, corDappHash=8C2322F3ACFF6CA8FE3E7F554352489D40710486D8ED144430A5784441E56717), isEnabledTimedFlow=false), Initiating(flowClass=class com.r3.corda.lib.accounts.workflows.flows.RequestKeyForAccount, classToInitiateWith=class com.r3.corda.lib.accounts.workflows.flows.RequestKeyForAccount, flowInfo=FlowInfo(flowVersion=1, appName=accounts-workflows-1.0), subFlowVersion=CorDappFlow(platformVersion=11, corDappName=accounts-workflows-1.0, corDappHash=80555705CE83A631D1BDD61E9C14A7C2215BB67FAB1411547C4D4B3D66F8402E), isEnabledTimedFlow=false), Inlined(flowClass=class com.r3.corda.lib.accounts.workflows.flows.RequestKeyForAccountFlow, subFlowVersion=CorDappFlow(platformVersion=11, corDappName=accounts-workflows-1.0, corDappHash=80555705CE83A631D1BDD61E9C14A7C2215BB67FAB1411547C4D4B3D66F8402E), isEnabledTimedFlow=false)]
checkpoint.timestamp: 
    2023-01-31T07:42:03.459Z
    2023-01-31T07:42:03.462Z


 --- Transition of flow [2289ea18-bf18-4241-8950-cace09523d20] ---
  Timestamp: 2023-01-31T07:42:03.462Z
  Event: LeaveSubFlow
  Actions: 
    
  Continuation: ProcessEvents
  Diff between previous and next state:
checkpoint.checkpointState.subFlowStack: 
    [Initiating(flowClass=class net.corda.samples.obligation.flows.IOUSettleFlow, classToInitiateWith=class net.corda.samples.obligation.flows.IOUSettleFlow, flowInfo=FlowInfo(flowVersion=1, appName=<unknown>), subFlowVersion=CorDappFlow(platformVersion=11, corDappName=workflows-1.0, corDappHash=8C2322F3ACFF6CA8FE3E7F554352489D40710486D8ED144430A5784441E56717), isEnabledTimedFlow=false), Initiating(flowClass=class com.r3.corda.lib.accounts.workflows.flows.RequestKeyForAccount, classToInitiateWith=class com.r3.corda.lib.accounts.workflows.flows.RequestKeyForAccount, flowInfo=FlowInfo(flowVersion=1, appName=accounts-workflows-1.0), subFlowVersion=CorDappFlow(platformVersion=11, corDappName=accounts-workflows-1.0, corDappHash=80555705CE83A631D1BDD61E9C14A7C2215BB67FAB1411547C4D4B3D66F8402E), isEnabledTimedFlow=false), Inlined(flowClass=class com.r3.corda.lib.accounts.workflows.flows.RequestKeyForAccountFlow, subFlowVersion=CorDappFlow(platformVersion=11, corDappName=accounts-workflows-1.0, corDappHash=80555705CE83A631D1BDD61E9C14A7C2215BB67FAB1411547C4D4B3D66F8402E), isEnabledTimedFlow=false)]
    [Initiating(flowClass=class net.corda.samples.obligation.flows.IOUSettleFlow, classToInitiateWith=class net.corda.samples.obligation.flows.IOUSettleFlow, flowInfo=FlowInfo(flowVersion=1, appName=<unknown>), subFlowVersion=CorDappFlow(platformVersion=11, corDappName=workflows-1.0, corDappHash=8C2322F3ACFF6CA8FE3E7F554352489D40710486D8ED144430A5784441E56717), isEnabledTimedFlow=false), Initiating(flowClass=class com.r3.corda.lib.accounts.workflows.flows.RequestKeyForAccount, classToInitiateWith=class com.r3.corda.lib.accounts.workflows.flows.RequestKeyForAccount, flowInfo=FlowInfo(flowVersion=1, appName=accounts-workflows-1.0), subFlowVersion=CorDappFlow(platformVersion=11, corDappName=accounts-workflows-1.0, corDappHash=80555705CE83A631D1BDD61E9C14A7C2215BB67FAB1411547C4D4B3D66F8402E), isEnabledTimedFlow=false)]


 --- Transition of flow [2289ea18-bf18-4241-8950-cace09523d20] ---
  Timestamp: 2023-01-31T07:42:03.462Z
  Event: LeaveSubFlow
  Actions: 
    
  Continuation: ProcessEvents
  Diff between previous and next state:
checkpoint.checkpointState.subFlowStack: 
    [Initiating(flowClass=class net.corda.samples.obligation.flows.IOUSettleFlow, classToInitiateWith=class net.corda.samples.obligation.flows.IOUSettleFlow, flowInfo=FlowInfo(flowVersion=1, appName=<unknown>), subFlowVersion=CorDappFlow(platformVersion=11, corDappName=workflows-1.0, corDappHash=8C2322F3ACFF6CA8FE3E7F554352489D40710486D8ED144430A5784441E56717), isEnabledTimedFlow=false), Initiating(flowClass=class com.r3.corda.lib.accounts.workflows.flows.RequestKeyForAccount, classToInitiateWith=class com.r3.corda.lib.accounts.workflows.flows.RequestKeyForAccount, flowInfo=FlowInfo(flowVersion=1, appName=accounts-workflows-1.0), subFlowVersion=CorDappFlow(platformVersion=11, corDappName=accounts-workflows-1.0, corDappHash=80555705CE83A631D1BDD61E9C14A7C2215BB67FAB1411547C4D4B3D66F8402E), isEnabledTimedFlow=false)]
    [Initiating(flowClass=class net.corda.samples.obligation.flows.IOUSettleFlow, classToInitiateWith=class net.corda.samples.obligation.flows.IOUSettleFlow, flowInfo=FlowInfo(flowVersion=1, appName=<unknown>), subFlowVersion=CorDappFlow(platformVersion=11, corDappName=workflows-1.0, corDappHash=8C2322F3ACFF6CA8FE3E7F554352489D40710486D8ED144430A5784441E56717), isEnabledTimedFlow=false)]


 --- Transition of flow [2289ea18-bf18-4241-8950-cace09523d20] ---
  Timestamp: 2023-01-31T07:42:03.714Z
  Event: InitiateFlow(destination=O=Mock Company 3, L=London, C=GB, wellKnownParty=O=Mock Company 3, L=London, C=GB)
  Actions: 
    AddSessionBinding(flowId=[2289ea18-bf18-4241-8950-cace09523d20], sessionId=SessionId(toLong=-7855006138722062871))
  Continuation: Resume(result=class net.corda.node.services.statemachine.FlowSessionImpl)
  Diff between previous and next state:
checkpoint.checkpointState.sessions.SessionId(toLong=-7855006138722062871): 
    null
    Uninitiated(destination=O=Mock Company 3, L=London, C=GB, initiatingSubFlow=Initiating(flowClass=class net.corda.samples.obligation.flows.IOUSettleFlow, classToInitiateWith=class net.corda.samples.obligation.flows.IOUSettleFlow, flowInfo=FlowInfo(flowVersion=1, appName=<unknown>), subFlowVersion=CorDappFlow(platformVersion=11, corDappName=workflows-1.0, corDappHash=8C2322F3ACFF6CA8FE3E7F554352489D40710486D8ED144430A5784441E56717), isEnabledTimedFlow=false), sourceSessionId=SessionId(toLong=-7855006138722062871), additionalEntropy=-5407470294366436114)
checkpoint.timestamp: 
    2023-01-31T07:42:03.462Z
    2023-01-31T07:42:03.714Z


 --- Transition of flow [2289ea18-bf18-4241-8950-cace09523d20] ---
  Timestamp: 2023-01-31T07:42:03.714Z
  Event: EnterSubFlow(subFlowClass=class net.corda.core.flows.CollectSignatureFlow, subFlowVersion=CoreFlow(platformVersion=11), isEnabledTimedFlow=false)
  Actions: 
    
  Continuation: ProcessEvents
  Diff between previous and next state:
checkpoint.checkpointState.subFlowStack: 
    [Initiating(flowClass=class net.corda.samples.obligation.flows.IOUSettleFlow, classToInitiateWith=class net.corda.samples.obligation.flows.IOUSettleFlow, flowInfo=FlowInfo(flowVersion=1, appName=<unknown>), subFlowVersion=CorDappFlow(platformVersion=11, corDappName=workflows-1.0, corDappHash=8C2322F3ACFF6CA8FE3E7F554352489D40710486D8ED144430A5784441E56717), isEnabledTimedFlow=false)]
    [Initiating(flowClass=class net.corda.samples.obligation.flows.IOUSettleFlow, classToInitiateWith=class net.corda.samples.obligation.flows.IOUSettleFlow, flowInfo=FlowInfo(flowVersion=1, appName=<unknown>), subFlowVersion=CorDappFlow(platformVersion=11, corDappName=workflows-1.0, corDappHash=8C2322F3ACFF6CA8FE3E7F554352489D40710486D8ED144430A5784441E56717), isEnabledTimedFlow=false), Inlined(flowClass=class net.corda.core.flows.CollectSignatureFlow, subFlowVersion=CoreFlow(platformVersion=11), isEnabledTimedFlow=false)]


 --- Transition of flow [2289ea18-bf18-4241-8950-cace09523d20] ---
  Timestamp: 2023-01-31T07:42:03.715Z
  Event: EnterSubFlow(subFlowClass=class net.corda.core.flows.SendTransactionFlow, subFlowVersion=CoreFlow(platformVersion=11), isEnabledTimedFlow=false)
  Actions: 
    
  Continuation: ProcessEvents
  Diff between previous and next state:
checkpoint.checkpointState.subFlowStack: 
    [Initiating(flowClass=class net.corda.samples.obligation.flows.IOUSettleFlow, classToInitiateWith=class net.corda.samples.obligation.flows.IOUSettleFlow, flowInfo=FlowInfo(flowVersion=1, appName=<unknown>), subFlowVersion=CorDappFlow(platformVersion=11, corDappName=workflows-1.0, corDappHash=8C2322F3ACFF6CA8FE3E7F554352489D40710486D8ED144430A5784441E56717), isEnabledTimedFlow=false), Inlined(flowClass=class net.corda.core.flows.CollectSignatureFlow, subFlowVersion=CoreFlow(platformVersion=11), isEnabledTimedFlow=false)]
    [Initiating(flowClass=class net.corda.samples.obligation.flows.IOUSettleFlow, classToInitiateWith=class net.corda.samples.obligation.flows.IOUSettleFlow, flowInfo=FlowInfo(flowVersion=1, appName=<unknown>), subFlowVersion=CorDappFlow(platformVersion=11, corDappName=workflows-1.0, corDappHash=8C2322F3ACFF6CA8FE3E7F554352489D40710486D8ED144430A5784441E56717), isEnabledTimedFlow=false), Inlined(flowClass=class net.corda.core.flows.CollectSignatureFlow, subFlowVersion=CoreFlow(platformVersion=11), isEnabledTimedFlow=false), Inlined(flowClass=class net.corda.core.flows.SendTransactionFlow, subFlowVersion=CoreFlow(platformVersion=11), isEnabledTimedFlow=false)]
checkpoint.timestamp: 
    2023-01-31T07:42:03.714Z
    2023-01-31T07:42:03.715Z


 --- Transition of flow [2289ea18-bf18-4241-8950-cace09523d20] ---
  Timestamp: 2023-01-31T07:42:03.723Z
  Event: Suspend(ioRequest=SendAndReceive({FlowSessionImpl(destination=O=Mock Company 3, L=London, C=GB, sourceSessionId=SessionId(toLong=-7855006138722062871))=FlowSessionImpl(destination=O=Mock Company 3, L=London, C=GB, sourceSessionId=SessionId(toLong=-7855006138722062871))=4D01D19D3FFA5FA6DFF6E3E6C70C24B677C7495B611A4DF0B2674962C6C59EA0}, shouldRetrySend=false), maySkipCheckpoint=false, fiber=963C50599AEDCDEAABA6427FCE3F694BE72AB6F0829168DE10F2F6CE96298328, currentStep=Starting)
  Actions: 
    PersistCheckpoint(id=[2289ea18-bf18-4241-8950-cace09523d20], checkpoint=Checkpoint(checkpointState=CheckpointState(invocationContext=InvocationContext(origin=RPC(actor=Actor(id=Id(value=Only For Testing), serviceId=AuthServiceId(value=TEST), owningLegalIdentity=O=Mock Company 1, L=London, C=GB)), trace=Trace(invocationId=94f92ebc-0933-4966-95a0-f3e9022a2977, timestamp: 2023-01-31T07:42:03.376Z, entityType: Invocation, sessionId=94f92ebc-0933-4966-95a0-f3e9022a2977, timestamp: 2023-01-31T07:42:03.376Z, entityType: Session), actor=Actor(id=Id(value=Only For Testing), serviceId=AuthServiceId(value=TEST), owningLegalIdentity=O=Mock Company 1, L=London, C=GB), externalTrace=null, impersonatedActor=null, arguments=[], clientId=null), ourIdentity=O=Mock Company 1, L=London, C=GB, sessions={SessionId(toLong=5897559181151605428)=Initiated(peerParty=O=Mock Company 3, L=London, C=GB, peerFlowInfo=FlowInfo(flowVersion=1, appName=accounts-workflows-1.0), receivedMessages=[], otherSideErrored=false, peerSinkSessionId=SessionId(toLong=-6898937881699103482), deduplicationSeed=R-5897559181151605428--6209985564318473542), SessionId(toLong=-7855006138722062871)=Uninitiated(destination=O=Mock Company 3, L=London, C=GB, initiatingSubFlow=Initiating(flowClass=class net.corda.samples.obligation.flows.IOUSettleFlow, classToInitiateWith=class net.corda.samples.obligation.flows.IOUSettleFlow, flowInfo=FlowInfo(flowVersion=1, appName=<unknown>), subFlowVersion=CorDappFlow(platformVersion=11, corDappName=workflows-1.0, corDappHash=8C2322F3ACFF6CA8FE3E7F554352489D40710486D8ED144430A5784441E56717), isEnabledTimedFlow=false), sourceSessionId=SessionId(toLong=-7855006138722062871), additionalEntropy=-5407470294366436114)}, sessionsToBeClosed=[], subFlowStack=[Initiating(flowClass=class net.corda.samples.obligation.flows.IOUSettleFlow, classToInitiateWith=class net.corda.samples.obligation.flows.IOUSettleFlow, flowInfo=FlowInfo(flowVersion=1, appName=<unknown>), subFlowVersion=CorDappFlow(platformVersion=11, corDappName=workflows-1.0, corDappHash=8C2322F3ACFF6CA8FE3E7F554352489D40710486D8ED144430A5784441E56717), isEnabledTimedFlow=false), Inlined(flowClass=class net.corda.core.flows.CollectSignatureFlow, subFlowVersion=CoreFlow(platformVersion=11), isEnabledTimedFlow=false), Inlined(flowClass=class net.corda.core.flows.SendTransactionFlow, subFlowVersion=CoreFlow(platformVersion=11), isEnabledTimedFlow=false)], numberOfSuspends=3, numberOfCommits=4), flowState=Started(flowIORequest=SendAndReceive({FlowSessionImpl(destination=O=Mock Company 3, L=London, C=GB, sourceSessionId=SessionId(toLong=-7855006138722062871))=FlowSessionImpl(destination=O=Mock Company 3, L=London, C=GB, sourceSessionId=SessionId(toLong=-7855006138722062871))=4D01D19D3FFA5FA6DFF6E3E6C70C24B677C7495B611A4DF0B2674962C6C59EA0}, shouldRetrySend=false), frozenFiber=963C50599AEDCDEAABA6427FCE3F694BE72AB6F0829168DE10F2F6CE96298328), errorState=Clean, result=null, status=RUNNABLE, progressStep=Starting, flowIoRequest=SendAndReceive, compatible=true), isCheckpointUpdate=true)
    PersistDeduplicationFacts(deduplicationHandlers=[net.corda.testing.node.internal.MockNodeMessagingService$InMemoryDeduplicationHandler@69ea3ad2])
    CommitTransaction
    AcknowledgeMessages(deduplicationHandlers=[net.corda.testing.node.internal.MockNodeMessagingService$InMemoryDeduplicationHandler@69ea3ad2])
    ScheduleEvent(event=DoRemainingWork)
  Continuation: ProcessEvents
  Diff between previous and next state:
pendingDeduplicationHandlers: 
    [net.corda.testing.node.internal.MockNodeMessagingService$InMemoryDeduplicationHandler@69ea3ad2]
    []
isFlowResumed: 
    true
    false
numberOfCommits: 
    3
    4
checkpoint.checkpointState.numberOfCommits: 
    3
    4
checkpoint.checkpointState.numberOfSuspends: 
    2
    3
checkpoint.flowState.flowIORequest: 
    Receive(sessions=[FlowSessionImpl(destination=O=Mock Company 3, L=London, C=GB, sourceSessionId=SessionId(toLong=5897559181151605428))])
    SendAndReceive({FlowSessionImpl(destination=O=Mock Company 3, L=London, C=GB, sourceSessionId=SessionId(toLong=-7855006138722062871))=FlowSessionImpl(destination=O=Mock Company 3, L=London, C=GB, sourceSessionId=SessionId(toLong=-7855006138722062871))=4D01D19D3FFA5FA6DFF6E3E6C70C24B677C7495B611A4DF0B2674962C6C59EA0}, shouldRetrySend=false)
checkpoint.flowState.frozenFiber.hash: 
    BC08B227FE60A6B2A3A70C2BE5E308F80A825AD220086EDFDA077F8C11962FF0
    963C50599AEDCDEAABA6427FCE3F694BE72AB6F0829168DE10F2F6CE96298328
checkpoint.timestamp: 
    2023-01-31T07:42:03.715Z
    2023-01-31T07:42:03.720Z


 --- Transition of flow [2289ea18-bf18-4241-8950-cace09523d20] ---
  Timestamp: 2023-01-31T07:42:03.727Z
  Event: DoRemainingWork
  Actions: 
    SendMultiple(sendInitial=[SendInitial(destination=O=Mock Company 3, L=London, C=GB, initialise=InitialSessionMessage(initiatorSessionId=SessionId(toLong=-7855006138722062871), initiationEntropy=-5407470294366436114, initiatorFlowClassName=net.corda.samples.obligation.flows.IOUSettleFlow, appName=<unknown>, firstPayload=class net.corda.core.serialization.SerializedBytes), deduplicationId=SenderDeduplicationId(deduplicationId=DeduplicationId(toString=N-R--7855006138722062871--5407470294366436114-3-0), senderUUID=7da18ab5-41ea-4720-99fc-208eae0a7847))], sendExisting=[])
  Continuation: ProcessEvents
  Diff between previous and next state:
checkpoint.checkpointState.sessions.SessionId(toLong=-7855006138722062871): 
    Uninitiated(destination=O=Mock Company 3, L=London, C=GB, initiatingSubFlow=Initiating(flowClass=class net.corda.samples.obligation.flows.IOUSettleFlow, classToInitiateWith=class net.corda.samples.obligation.flows.IOUSettleFlow, flowInfo=FlowInfo(flowVersion=1, appName=<unknown>), subFlowVersion=CorDappFlow(platformVersion=11, corDappName=workflows-1.0, corDappHash=8C2322F3ACFF6CA8FE3E7F554352489D40710486D8ED144430A5784441E56717), isEnabledTimedFlow=false), sourceSessionId=SessionId(toLong=-7855006138722062871), additionalEntropy=-5407470294366436114)
    Initiating(bufferedMessages=[], rejectionError=null, deduplicationSeed=R--7855006138722062871--5407470294366436114)
checkpoint.flowState.flowIORequest: 
    SendAndReceive({FlowSessionImpl(destination=O=Mock Company 3, L=London, C=GB, sourceSessionId=SessionId(toLong=-7855006138722062871))=FlowSessionImpl(destination=O=Mock Company 3, L=London, C=GB, sourceSessionId=SessionId(toLong=-7855006138722062871))=4D01D19D3FFA5FA6DFF6E3E6C70C24B677C7495B611A4DF0B2674962C6C59EA0}, shouldRetrySend=false)
    Receive(sessions=[FlowSessionImpl(destination=O=Mock Company 3, L=London, C=GB, sourceSessionId=SessionId(toLong=-7855006138722062871))])
checkpoint.timestamp: 
    2023-01-31T07:42:03.720Z
    2023-01-31T07:42:03.724Z


 --- Transition of flow [2289ea18-bf18-4241-8950-cace09523d20] ---
  Timestamp: 2023-01-31T07:42:03.769Z
  Event: DeliverSessionMessage(sessionMessage=ExistingSessionMessage(recipientSessionId=SessionId(toLong=5897559181151605428), payload=net.corda.node.services.statemachine.EndSessionMessage@7d8b3e86), deduplicationHandler=net.corda.testing.node.internal.MockNodeMessagingService$InMemoryDeduplicationHandler@39177962, sender=O=Mock Company 3, L=London, C=GB)
  Actions: 
    ScheduleEvent(event=DoRemainingWork)
  Continuation: ProcessEvents
  Diff between previous and next state:
pendingDeduplicationHandlers: 
    []
    [net.corda.testing.node.internal.MockNodeMessagingService$InMemoryDeduplicationHandler@39177962]
checkpoint.checkpointState.sessions.SessionId(toLong=5897559181151605428).receivedMessages.isEmpty: 
    true
    false
checkpoint.checkpointState.sessionsToBeClosed: 
    []
    [SessionId(toLong=5897559181151605428)]
checkpoint.timestamp: 
    2023-01-31T07:42:03.724Z
    2023-01-31T07:42:03.769Z


 --- Transition of flow [2289ea18-bf18-4241-8950-cace09523d20] ---
  Timestamp: 2023-01-31T07:42:03.769Z
  Event: DoRemainingWork
  Actions: 
    RemoveSessionBindings(sessionIds=[SessionId(toLong=5897559181151605428)])
  Continuation: ProcessEvents
  Diff between previous and next state:
checkpoint.checkpointState.sessions.SessionId(toLong=5897559181151605428): 
    Initiated(peerParty=O=Mock Company 3, L=London, C=GB, peerFlowInfo=FlowInfo(flowVersion=1, appName=accounts-workflows-1.0), receivedMessages=[net.corda.node.services.statemachine.EndSessionMessage@7d8b3e86], otherSideErrored=false, peerSinkSessionId=SessionId(toLong=-6898937881699103482), deduplicationSeed=R-5897559181151605428--6209985564318473542)
    null
checkpoint.checkpointState.sessionsToBeClosed: 
    [SessionId(toLong=5897559181151605428)]
    []


 --- Transition of flow [2289ea18-bf18-4241-8950-cace09523d20] ---
  Timestamp: 2023-01-31T07:42:03.770Z
  Event: DeliverSessionMessage(sessionMessage=ExistingSessionMessage(recipientSessionId=SessionId(toLong=-7855006138722062871), payload=ConfirmSessionMessage(initiatedSessionId=SessionId(toLong=8383758276858904125), initiatedFlowInfo=FlowInfo(flowVersion=1, appName=<unknown>))), deduplicationHandler=net.corda.testing.node.internal.MockNodeMessagingService$InMemoryDeduplicationHandler@251303c4, sender=O=Mock Company 3, L=London, C=GB)
  Actions: 
    ScheduleEvent(event=DoRemainingWork)
  Continuation: ProcessEvents
  Diff between previous and next state:
pendingDeduplicationHandlers: 
    [net.corda.testing.node.internal.MockNodeMessagingService$InMemoryDeduplicationHandler@39177962]
    [net.corda.testing.node.internal.MockNodeMessagingService$InMemoryDeduplicationHandler@39177962, net.corda.testing.node.internal.MockNodeMessagingService$InMemoryDeduplicationHandler@251303c4]
checkpoint.checkpointState.sessions.SessionId(toLong=-7855006138722062871): 
    Initiating(bufferedMessages=[], rejectionError=null, deduplicationSeed=R--7855006138722062871--5407470294366436114)
    Initiated(peerParty=O=Mock Company 3, L=London, C=GB, peerFlowInfo=FlowInfo(flowVersion=1, appName=<unknown>), receivedMessages=[], otherSideErrored=false, peerSinkSessionId=SessionId(toLong=8383758276858904125), deduplicationSeed=R--7855006138722062871--5407470294366436114)
checkpoint.timestamp: 
    2023-01-31T07:42:03.769Z
    2023-01-31T07:42:03.770Z


 --- Transition of flow [2289ea18-bf18-4241-8950-cace09523d20] ---
  Timestamp: 2023-01-31T07:42:03.770Z
  Event: DoRemainingWork
  Actions: 
    
  Continuation: ProcessEvents
  Diff between previous and next state:
null

 --- Transition of flow [2289ea18-bf18-4241-8950-cace09523d20] ---
  Timestamp: 2023-01-31T07:42:03.772Z
  Event: DeliverSessionMessage(sessionMessage=ExistingSessionMessage(recipientSessionId=SessionId(toLong=-7855006138722062871), payload=DataSessionMessage(payload=class net.corda.core.serialization.SerializedBytes)), deduplicationHandler=net.corda.testing.node.internal.MockNodeMessagingService$InMemoryDeduplicationHandler@52d00ee3, sender=O=Mock Company 3, L=London, C=GB)
  Actions: 
    ScheduleEvent(event=DoRemainingWork)
  Continuation: ProcessEvents
  Diff between previous and next state:
pendingDeduplicationHandlers: 
    [net.corda.testing.node.internal.MockNodeMessagingService$InMemoryDeduplicationHandler@39177962, net.corda.testing.node.internal.MockNodeMessagingService$InMemoryDeduplicationHandler@251303c4]
    [net.corda.testing.node.internal.MockNodeMessagingService$InMemoryDeduplicationHandler@39177962, net.corda.testing.node.internal.MockNodeMessagingService$InMemoryDeduplicationHandler@251303c4, net.corda.testing.node.internal.MockNodeMessagingService$InMemoryDeduplicationHandler@52d00ee3]
checkpoint.checkpointState.sessions.SessionId(toLong=-7855006138722062871).receivedMessages.isEmpty: 
    true
    false
checkpoint.timestamp: 
    2023-01-31T07:42:03.770Z
    2023-01-31T07:42:03.771Z


 --- Transition of flow [2289ea18-bf18-4241-8950-cace09523d20] ---
  Timestamp: 2023-01-31T07:42:03.772Z
  Event: DoRemainingWork
  Actions: 
    CreateTransaction
  Continuation: Resume(result=class java.util.LinkedHashMap)
  Diff between previous and next state:
isFlowResumed: 
    false
    true
checkpoint.checkpointState.sessions.SessionId(toLong=-7855006138722062871).receivedMessages.isEmpty: 
    false
    true
checkpoint.timestamp: 
    2023-01-31T07:42:03.771Z
    2023-01-31T07:42:03.772Z


 --- Transition of flow [2289ea18-bf18-4241-8950-cace09523d20] ---
  Timestamp: 2023-01-31T07:42:03.778Z
  Event: Suspend(ioRequest=SendAndReceive({FlowSessionImpl(destination=O=Mock Company 3, L=London, C=GB, sourceSessionId=SessionId(toLong=-7855006138722062871))=FlowSessionImpl(destination=O=Mock Company 3, L=London, C=GB, sourceSessionId=SessionId(toLong=-7855006138722062871))=620644AA066DB6ABFB6F7B5B4EFC9370F2287E69F5F24D046ED0A1E7F2E4CA2A}, shouldRetrySend=false), maySkipCheckpoint=false, fiber=17FCDD02FDFCA3D3740AF14C7375CE5D0A9264C46C0D48841AFA50E94F4B4C93, currentStep=Starting)
  Actions: 
    PersistCheckpoint(id=[2289ea18-bf18-4241-8950-cace09523d20], checkpoint=Checkpoint(checkpointState=CheckpointState(invocationContext=InvocationContext(origin=RPC(actor=Actor(id=Id(value=Only For Testing), serviceId=AuthServiceId(value=TEST), owningLegalIdentity=O=Mock Company 1, L=London, C=GB)), trace=Trace(invocationId=94f92ebc-0933-4966-95a0-f3e9022a2977, timestamp: 2023-01-31T07:42:03.376Z, entityType: Invocation, sessionId=94f92ebc-0933-4966-95a0-f3e9022a2977, timestamp: 2023-01-31T07:42:03.376Z, entityType: Session), actor=Actor(id=Id(value=Only For Testing), serviceId=AuthServiceId(value=TEST), owningLegalIdentity=O=Mock Company 1, L=London, C=GB), externalTrace=null, impersonatedActor=null, arguments=[], clientId=null), ourIdentity=O=Mock Company 1, L=London, C=GB, sessions={SessionId(toLong=-7855006138722062871)=Initiated(peerParty=O=Mock Company 3, L=London, C=GB, peerFlowInfo=FlowInfo(flowVersion=1, appName=<unknown>), receivedMessages=[], otherSideErrored=false, peerSinkSessionId=SessionId(toLong=8383758276858904125), deduplicationSeed=R--7855006138722062871--5407470294366436114)}, sessionsToBeClosed=[], subFlowStack=[Initiating(flowClass=class net.corda.samples.obligation.flows.IOUSettleFlow, classToInitiateWith=class net.corda.samples.obligation.flows.IOUSettleFlow, flowInfo=FlowInfo(flowVersion=1, appName=<unknown>), subFlowVersion=CorDappFlow(platformVersion=11, corDappName=workflows-1.0, corDappHash=8C2322F3ACFF6CA8FE3E7F554352489D40710486D8ED144430A5784441E56717), isEnabledTimedFlow=false), Inlined(flowClass=class net.corda.core.flows.CollectSignatureFlow, subFlowVersion=CoreFlow(platformVersion=11), isEnabledTimedFlow=false), Inlined(flowClass=class net.corda.core.flows.SendTransactionFlow, subFlowVersion=CoreFlow(platformVersion=11), isEnabledTimedFlow=false)], numberOfSuspends=4, numberOfCommits=5), flowState=Started(flowIORequest=SendAndReceive({FlowSessionImpl(destination=O=Mock Company 3, L=London, C=GB, sourceSessionId=SessionId(toLong=-7855006138722062871))=FlowSessionImpl(destination=O=Mock Company 3, L=London, C=GB, sourceSessionId=SessionId(toLong=-7855006138722062871))=620644AA066DB6ABFB6F7B5B4EFC9370F2287E69F5F24D046ED0A1E7F2E4CA2A}, shouldRetrySend=false), frozenFiber=17FCDD02FDFCA3D3740AF14C7375CE5D0A9264C46C0D48841AFA50E94F4B4C93), errorState=Clean, result=null, status=RUNNABLE, progressStep=Starting, flowIoRequest=SendAndReceive, compatible=true), isCheckpointUpdate=true)
    PersistDeduplicationFacts(deduplicationHandlers=[net.corda.testing.node.internal.MockNodeMessagingService$InMemoryDeduplicationHandler@39177962, net.corda.testing.node.internal.MockNodeMessagingService$InMemoryDeduplicationHandler@251303c4, net.corda.testing.node.internal.MockNodeMessagingService$InMemoryDeduplicationHandler@52d00ee3])
    CommitTransaction
    AcknowledgeMessages(deduplicationHandlers=[net.corda.testing.node.internal.MockNodeMessagingService$InMemoryDeduplicationHandler@39177962, net.corda.testing.node.internal.MockNodeMessagingService$InMemoryDeduplicationHandler@251303c4, net.corda.testing.node.internal.MockNodeMessagingService$InMemoryDeduplicationHandler@52d00ee3])
    ScheduleEvent(event=DoRemainingWork)
  Continuation: ProcessEvents
  Diff between previous and next state:
pendingDeduplicationHandlers: 
    [net.corda.testing.node.internal.MockNodeMessagingService$InMemoryDeduplicationHandler@39177962, net.corda.testing.node.internal.MockNodeMessagingService$InMemoryDeduplicationHandler@251303c4, net.corda.testing.node.internal.MockNodeMessagingService$InMemoryDeduplicationHandler@52d00ee3]
    []
isFlowResumed: 
    true
    false
numberOfCommits: 
    4
    5
checkpoint.checkpointState.numberOfCommits: 
    4
    5
checkpoint.checkpointState.numberOfSuspends: 
    3
    4
checkpoint.flowState.flowIORequest: 
    Receive(sessions=[FlowSessionImpl(destination=O=Mock Company 3, L=London, C=GB, sourceSessionId=SessionId(toLong=-7855006138722062871))])
    SendAndReceive({FlowSessionImpl(destination=O=Mock Company 3, L=London, C=GB, sourceSessionId=SessionId(toLong=-7855006138722062871))=FlowSessionImpl(destination=O=Mock Company 3, L=London, C=GB, sourceSessionId=SessionId(toLong=-7855006138722062871))=620644AA066DB6ABFB6F7B5B4EFC9370F2287E69F5F24D046ED0A1E7F2E4CA2A}, shouldRetrySend=false)
checkpoint.flowState.frozenFiber.hash: 
    963C50599AEDCDEAABA6427FCE3F694BE72AB6F0829168DE10F2F6CE96298328
    17FCDD02FDFCA3D3740AF14C7375CE5D0A9264C46C0D48841AFA50E94F4B4C93
checkpoint.timestamp: 
    2023-01-31T07:42:03.772Z
    2023-01-31T07:42:03.775Z


 --- Transition of flow [2289ea18-bf18-4241-8950-cace09523d20] ---
  Timestamp: 2023-01-31T07:42:03.778Z
  Event: DoRemainingWork
  Actions: 
    SendMultiple(sendInitial=[], sendExisting=[SendExisting(peerParty=O=Mock Company 3, L=London, C=GB, message=ExistingSessionMessage(recipientSessionId=SessionId(toLong=8383758276858904125), payload=DataSessionMessage(payload=class net.corda.core.serialization.SerializedBytes)), deduplicationId=SenderDeduplicationId(deduplicationId=DeduplicationId(toString=N-R--7855006138722062871--5407470294366436114-4-0), senderUUID=7da18ab5-41ea-4720-99fc-208eae0a7847))])
  Continuation: ProcessEvents
  Diff between previous and next state:
checkpoint.flowState.flowIORequest: 
    SendAndReceive({FlowSessionImpl(destination=O=Mock Company 3, L=London, C=GB, sourceSessionId=SessionId(toLong=-7855006138722062871))=FlowSessionImpl(destination=O=Mock Company 3, L=London, C=GB, sourceSessionId=SessionId(toLong=-7855006138722062871))=620644AA066DB6ABFB6F7B5B4EFC9370F2287E69F5F24D046ED0A1E7F2E4CA2A}, shouldRetrySend=false)
    Receive(sessions=[FlowSessionImpl(destination=O=Mock Company 3, L=London, C=GB, sourceSessionId=SessionId(toLong=-7855006138722062871))])
checkpoint.timestamp: 
    2023-01-31T07:42:03.775Z
    2023-01-31T07:42:03.778Z


 --- Transition of flow [2289ea18-bf18-4241-8950-cace09523d20] ---
  Timestamp: 2023-01-31T07:42:04.145Z
  Event: DeliverSessionMessage(sessionMessage=ExistingSessionMessage(recipientSessionId=SessionId(toLong=-7855006138722062871), payload=DataSessionMessage(payload=class net.corda.core.serialization.SerializedBytes)), deduplicationHandler=net.corda.testing.node.internal.MockNodeMessagingService$InMemoryDeduplicationHandler@6a5492c1, sender=O=Mock Company 3, L=London, C=GB)
  Actions: 
    ScheduleEvent(event=DoRemainingWork)
  Continuation: ProcessEvents
  Diff between previous and next state:
pendingDeduplicationHandlers: 
    []
    [net.corda.testing.node.internal.MockNodeMessagingService$InMemoryDeduplicationHandler@6a5492c1]
checkpoint.checkpointState.sessions.SessionId(toLong=-7855006138722062871).receivedMessages.isEmpty: 
    true
    false
checkpoint.timestamp: 
    2023-01-31T07:42:03.778Z
    2023-01-31T07:42:04.145Z


 --- Transition of flow [2289ea18-bf18-4241-8950-cace09523d20] ---
  Timestamp: 2023-01-31T07:42:04.145Z
  Event: DoRemainingWork
  Actions: 
    CreateTransaction
  Continuation: Resume(result=class java.util.LinkedHashMap)
  Diff between previous and next state:
isFlowResumed: 
    false
    true
checkpoint.checkpointState.sessions.SessionId(toLong=-7855006138722062871).receivedMessages.isEmpty: 
    false
    true


 --- Transition of flow [2289ea18-bf18-4241-8950-cace09523d20] ---
  Timestamp: 2023-01-31T07:42:04.145Z
  Event: LeaveSubFlow
  Actions: 
    
  Continuation: ProcessEvents
  Diff between previous and next state:
checkpoint.checkpointState.subFlowStack: 
    [Initiating(flowClass=class net.corda.samples.obligation.flows.IOUSettleFlow, classToInitiateWith=class net.corda.samples.obligation.flows.IOUSettleFlow, flowInfo=FlowInfo(flowVersion=1, appName=<unknown>), subFlowVersion=CorDappFlow(platformVersion=11, corDappName=workflows-1.0, corDappHash=8C2322F3ACFF6CA8FE3E7F554352489D40710486D8ED144430A5784441E56717), isEnabledTimedFlow=false), Inlined(flowClass=class net.corda.core.flows.CollectSignatureFlow, subFlowVersion=CoreFlow(platformVersion=11), isEnabledTimedFlow=false), Inlined(flowClass=class net.corda.core.flows.SendTransactionFlow, subFlowVersion=CoreFlow(platformVersion=11), isEnabledTimedFlow=false)]
    [Initiating(flowClass=class net.corda.samples.obligation.flows.IOUSettleFlow, classToInitiateWith=class net.corda.samples.obligation.flows.IOUSettleFlow, flowInfo=FlowInfo(flowVersion=1, appName=<unknown>), subFlowVersion=CorDappFlow(platformVersion=11, corDappName=workflows-1.0, corDappHash=8C2322F3ACFF6CA8FE3E7F554352489D40710486D8ED144430A5784441E56717), isEnabledTimedFlow=false), Inlined(flowClass=class net.corda.core.flows.CollectSignatureFlow, subFlowVersion=CoreFlow(platformVersion=11), isEnabledTimedFlow=false)]


 --- Transition of flow [2289ea18-bf18-4241-8950-cace09523d20] ---
  Timestamp: 2023-01-31T07:42:04.149Z
  Event: Suspend(ioRequest=Send(sessionToMessage={FlowSessionImpl(destination=O=Mock Company 3, L=London, C=GB, sourceSessionId=SessionId(toLong=-7855006138722062871))=609CC33A06DBE983C0A936BF3EAD8D6EF442F74841049597EAA9B695EC837E3F}), maySkipCheckpoint=false, fiber=C476D85C0A97E84BFF594BB530EC5C17D424F8CC30767557178DF63964E52D50, currentStep=Starting)
  Actions: 
    PersistCheckpoint(id=[2289ea18-bf18-4241-8950-cace09523d20], checkpoint=Checkpoint(checkpointState=CheckpointState(invocationContext=InvocationContext(origin=RPC(actor=Actor(id=Id(value=Only For Testing), serviceId=AuthServiceId(value=TEST), owningLegalIdentity=O=Mock Company 1, L=London, C=GB)), trace=Trace(invocationId=94f92ebc-0933-4966-95a0-f3e9022a2977, timestamp: 2023-01-31T07:42:03.376Z, entityType: Invocation, sessionId=94f92ebc-0933-4966-95a0-f3e9022a2977, timestamp: 2023-01-31T07:42:03.376Z, entityType: Session), actor=Actor(id=Id(value=Only For Testing), serviceId=AuthServiceId(value=TEST), owningLegalIdentity=O=Mock Company 1, L=London, C=GB), externalTrace=null, impersonatedActor=null, arguments=[], clientId=null), ourIdentity=O=Mock Company 1, L=London, C=GB, sessions={SessionId(toLong=-7855006138722062871)=Initiated(peerParty=O=Mock Company 3, L=London, C=GB, peerFlowInfo=FlowInfo(flowVersion=1, appName=<unknown>), receivedMessages=[], otherSideErrored=false, peerSinkSessionId=SessionId(toLong=8383758276858904125), deduplicationSeed=R--7855006138722062871--5407470294366436114)}, sessionsToBeClosed=[], subFlowStack=[Initiating(flowClass=class net.corda.samples.obligation.flows.IOUSettleFlow, classToInitiateWith=class net.corda.samples.obligation.flows.IOUSettleFlow, flowInfo=FlowInfo(flowVersion=1, appName=<unknown>), subFlowVersion=CorDappFlow(platformVersion=11, corDappName=workflows-1.0, corDappHash=8C2322F3ACFF6CA8FE3E7F554352489D40710486D8ED144430A5784441E56717), isEnabledTimedFlow=false), Inlined(flowClass=class net.corda.core.flows.CollectSignatureFlow, subFlowVersion=CoreFlow(platformVersion=11), isEnabledTimedFlow=false)], numberOfSuspends=5, numberOfCommits=6), flowState=Started(flowIORequest=Send(sessionToMessage={FlowSessionImpl(destination=O=Mock Company 3, L=London, C=GB, sourceSessionId=SessionId(toLong=-7855006138722062871))=609CC33A06DBE983C0A936BF3EAD8D6EF442F74841049597EAA9B695EC837E3F}), frozenFiber=C476D85C0A97E84BFF594BB530EC5C17D424F8CC30767557178DF63964E52D50), errorState=Clean, result=null, status=RUNNABLE, progressStep=Starting, flowIoRequest=Send, compatible=true), isCheckpointUpdate=true)
    PersistDeduplicationFacts(deduplicationHandlers=[net.corda.testing.node.internal.MockNodeMessagingService$InMemoryDeduplicationHandler@6a5492c1])
    CommitTransaction
    AcknowledgeMessages(deduplicationHandlers=[net.corda.testing.node.internal.MockNodeMessagingService$InMemoryDeduplicationHandler@6a5492c1])
    ScheduleEvent(event=DoRemainingWork)
  Continuation: ProcessEvents
  Diff between previous and next state:
pendingDeduplicationHandlers: 
    [net.corda.testing.node.internal.MockNodeMessagingService$InMemoryDeduplicationHandler@6a5492c1]
    []
isFlowResumed: 
    true
    false
numberOfCommits: 
    5
    6
checkpoint.flowIoRequest: 
    SendAndReceive
    Send
checkpoint.checkpointState.numberOfCommits: 
    5
    6
checkpoint.checkpointState.numberOfSuspends: 
    4
    5
checkpoint.flowState.flowIORequest: 
    Receive(sessions=[FlowSessionImpl(destination=O=Mock Company 3, L=London, C=GB, sourceSessionId=SessionId(toLong=-7855006138722062871))])
    Send(sessionToMessage={FlowSessionImpl(destination=O=Mock Company 3, L=London, C=GB, sourceSessionId=SessionId(toLong=-7855006138722062871))=609CC33A06DBE983C0A936BF3EAD8D6EF442F74841049597EAA9B695EC837E3F})
checkpoint.flowState.frozenFiber.hash: 
    17FCDD02FDFCA3D3740AF14C7375CE5D0A9264C46C0D48841AFA50E94F4B4C93
    C476D85C0A97E84BFF594BB530EC5C17D424F8CC30767557178DF63964E52D50
checkpoint.timestamp: 
    2023-01-31T07:42:04.145Z
    2023-01-31T07:42:04.147Z


 --- Transition of flow [2289ea18-bf18-4241-8950-cace09523d20] ---
  Timestamp: 2023-01-31T07:42:04.150Z
  Event: DoRemainingWork
  Actions: 
    SendMultiple(sendInitial=[], sendExisting=[SendExisting(peerParty=O=Mock Company 3, L=London, C=GB, message=ExistingSessionMessage(recipientSessionId=SessionId(toLong=8383758276858904125), payload=DataSessionMessage(payload=class net.corda.core.serialization.SerializedBytes)), deduplicationId=SenderDeduplicationId(deduplicationId=DeduplicationId(toString=N-R--7855006138722062871--5407470294366436114-5-0), senderUUID=7da18ab5-41ea-4720-99fc-208eae0a7847))])
    CreateTransaction
  Continuation: Resume(result=class kotlin.Unit)
  Diff between previous and next state:
isFlowResumed: 
    false
    true


 --- Transition of flow [2289ea18-bf18-4241-8950-cace09523d20] ---
  Timestamp: 2023-01-31T07:42:04.152Z
  Event: Suspend(ioRequest=Receive(sessions=[FlowSessionImpl(destination=O=Mock Company 3, L=London, C=GB, sourceSessionId=SessionId(toLong=-7855006138722062871))]), maySkipCheckpoint=false, fiber=1455D9260B11AAE0FC564CFA3D0BFFD05D2615546EF597FE255C3EF518BE93A0, currentStep=Starting)
  Actions: 
    PersistCheckpoint(id=[2289ea18-bf18-4241-8950-cace09523d20], checkpoint=Checkpoint(checkpointState=CheckpointState(invocationContext=InvocationContext(origin=RPC(actor=Actor(id=Id(value=Only For Testing), serviceId=AuthServiceId(value=TEST), owningLegalIdentity=O=Mock Company 1, L=London, C=GB)), trace=Trace(invocationId=94f92ebc-0933-4966-95a0-f3e9022a2977, timestamp: 2023-01-31T07:42:03.376Z, entityType: Invocation, sessionId=94f92ebc-0933-4966-95a0-f3e9022a2977, timestamp: 2023-01-31T07:42:03.376Z, entityType: Session), actor=Actor(id=Id(value=Only For Testing), serviceId=AuthServiceId(value=TEST), owningLegalIdentity=O=Mock Company 1, L=London, C=GB), externalTrace=null, impersonatedActor=null, arguments=[], clientId=null), ourIdentity=O=Mock Company 1, L=London, C=GB, sessions={SessionId(toLong=-7855006138722062871)=Initiated(peerParty=O=Mock Company 3, L=London, C=GB, peerFlowInfo=FlowInfo(flowVersion=1, appName=<unknown>), receivedMessages=[], otherSideErrored=false, peerSinkSessionId=SessionId(toLong=8383758276858904125), deduplicationSeed=R--7855006138722062871--5407470294366436114)}, sessionsToBeClosed=[], subFlowStack=[Initiating(flowClass=class net.corda.samples.obligation.flows.IOUSettleFlow, classToInitiateWith=class net.corda.samples.obligation.flows.IOUSettleFlow, flowInfo=FlowInfo(flowVersion=1, appName=<unknown>), subFlowVersion=CorDappFlow(platformVersion=11, corDappName=workflows-1.0, corDappHash=8C2322F3ACFF6CA8FE3E7F554352489D40710486D8ED144430A5784441E56717), isEnabledTimedFlow=false), Inlined(flowClass=class net.corda.core.flows.CollectSignatureFlow, subFlowVersion=CoreFlow(platformVersion=11), isEnabledTimedFlow=false)], numberOfSuspends=6, numberOfCommits=7), flowState=Started(flowIORequest=Receive(sessions=[FlowSessionImpl(destination=O=Mock Company 3, L=London, C=GB, sourceSessionId=SessionId(toLong=-7855006138722062871))]), frozenFiber=1455D9260B11AAE0FC564CFA3D0BFFD05D2615546EF597FE255C3EF518BE93A0), errorState=Clean, result=null, status=RUNNABLE, progressStep=Starting, flowIoRequest=Receive, compatible=true), isCheckpointUpdate=true)
    PersistDeduplicationFacts(deduplicationHandlers=[])
    CommitTransaction
    AcknowledgeMessages(deduplicationHandlers=[])
    ScheduleEvent(event=DoRemainingWork)
  Continuation: ProcessEvents
  Diff between previous and next state:
isFlowResumed: 
    true
    false
numberOfCommits: 
    6
    7
checkpoint.flowIoRequest: 
    Send
    Receive
checkpoint.checkpointState.numberOfCommits: 
    6
    7
checkpoint.checkpointState.numberOfSuspends: 
    5
    6
checkpoint.flowState.flowIORequest: 
    Send(sessionToMessage={FlowSessionImpl(destination=O=Mock Company 3, L=London, C=GB, sourceSessionId=SessionId(toLong=-7855006138722062871))=609CC33A06DBE983C0A936BF3EAD8D6EF442F74841049597EAA9B695EC837E3F})
    Receive(sessions=[FlowSessionImpl(destination=O=Mock Company 3, L=London, C=GB, sourceSessionId=SessionId(toLong=-7855006138722062871))])
checkpoint.flowState.frozenFiber.hash: 
    C476D85C0A97E84BFF594BB530EC5C17D424F8CC30767557178DF63964E52D50
    1455D9260B11AAE0FC564CFA3D0BFFD05D2615546EF597FE255C3EF518BE93A0
checkpoint.timestamp: 
    2023-01-31T07:42:04.149Z
    2023-01-31T07:42:04.151Z


 --- Transition of flow [2289ea18-bf18-4241-8950-cace09523d20] ---
  Timestamp: 2023-01-31T07:42:04.153Z
  Event: DoRemainingWork
  Actions: 
    
  Continuation: ProcessEvents
  Diff between previous and next state:
null

 --- Transition of flow [2289ea18-bf18-4241-8950-cace09523d20] ---
  Timestamp: 2023-01-31T07:42:04.168Z
  Event: DeliverSessionMessage(sessionMessage=ExistingSessionMessage(recipientSessionId=SessionId(toLong=-7855006138722062871), payload=DataSessionMessage(payload=class net.corda.core.serialization.SerializedBytes)), deduplicationHandler=net.corda.testing.node.internal.MockNodeMessagingService$InMemoryDeduplicationHandler@729d2512, sender=O=Mock Company 3, L=London, C=GB)
  Actions: 
    ScheduleEvent(event=DoRemainingWork)
  Continuation: ProcessEvents
  Diff between previous and next state:
pendingDeduplicationHandlers: 
    []
    [net.corda.testing.node.internal.MockNodeMessagingService$InMemoryDeduplicationHandler@729d2512]
checkpoint.checkpointState.sessions.SessionId(toLong=-7855006138722062871).receivedMessages.isEmpty: 
    true
    false
checkpoint.timestamp: 
    2023-01-31T07:42:04.153Z
    2023-01-31T07:42:04.168Z


 --- Transition of flow [2289ea18-bf18-4241-8950-cace09523d20] ---
  Timestamp: 2023-01-31T07:42:04.168Z
  Event: DoRemainingWork
  Actions: 
    CreateTransaction
  Continuation: Resume(result=class java.util.LinkedHashMap)
  Diff between previous and next state:
isFlowResumed: 
    false
    true
checkpoint.checkpointState.sessions.SessionId(toLong=-7855006138722062871).receivedMessages.isEmpty: 
    false
    true


 --- Transition of flow [2289ea18-bf18-4241-8950-cace09523d20] ---
  Timestamp: 2023-01-31T07:42:04.168Z
  Event: LeaveSubFlow
  Actions: 
    
  Continuation: ProcessEvents
  Diff between previous and next state:
checkpoint.checkpointState.subFlowStack: 
    [Initiating(flowClass=class net.corda.samples.obligation.flows.IOUSettleFlow, classToInitiateWith=class net.corda.samples.obligation.flows.IOUSettleFlow, flowInfo=FlowInfo(flowVersion=1, appName=<unknown>), subFlowVersion=CorDappFlow(platformVersion=11, corDappName=workflows-1.0, corDappHash=8C2322F3ACFF6CA8FE3E7F554352489D40710486D8ED144430A5784441E56717), isEnabledTimedFlow=false), Inlined(flowClass=class net.corda.core.flows.CollectSignatureFlow, subFlowVersion=CoreFlow(platformVersion=11), isEnabledTimedFlow=false)]
    [Initiating(flowClass=class net.corda.samples.obligation.flows.IOUSettleFlow, classToInitiateWith=class net.corda.samples.obligation.flows.IOUSettleFlow, flowInfo=FlowInfo(flowVersion=1, appName=<unknown>), subFlowVersion=CorDappFlow(platformVersion=11, corDappName=workflows-1.0, corDappHash=8C2322F3ACFF6CA8FE3E7F554352489D40710486D8ED144430A5784441E56717), isEnabledTimedFlow=false)]


 --- Transition of flow [2289ea18-bf18-4241-8950-cace09523d20] ---
  Timestamp: 2023-01-31T07:42:04.168Z
  Event: EnterSubFlow(subFlowClass=class net.corda.core.flows.FinalityFlow, subFlowVersion=CoreFlow(platformVersion=11), isEnabledTimedFlow=false)
  Actions: 
    
  Continuation: ProcessEvents
  Diff between previous and next state:
checkpoint.checkpointState.subFlowStack: 
    [Initiating(flowClass=class net.corda.samples.obligation.flows.IOUSettleFlow, classToInitiateWith=class net.corda.samples.obligation.flows.IOUSettleFlow, flowInfo=FlowInfo(flowVersion=1, appName=<unknown>), subFlowVersion=CorDappFlow(platformVersion=11, corDappName=workflows-1.0, corDappHash=8C2322F3ACFF6CA8FE3E7F554352489D40710486D8ED144430A5784441E56717), isEnabledTimedFlow=false)]
    [Initiating(flowClass=class net.corda.samples.obligation.flows.IOUSettleFlow, classToInitiateWith=class net.corda.samples.obligation.flows.IOUSettleFlow, flowInfo=FlowInfo(flowVersion=1, appName=<unknown>), subFlowVersion=CorDappFlow(platformVersion=11, corDappName=workflows-1.0, corDappHash=8C2322F3ACFF6CA8FE3E7F554352489D40710486D8ED144430A5784441E56717), isEnabledTimedFlow=false), Initiating(flowClass=class net.corda.core.flows.FinalityFlow, classToInitiateWith=class net.corda.core.flows.FinalityFlow, flowInfo=FlowInfo(flowVersion=1, appName=corda-core-4.9), subFlowVersion=CoreFlow(platformVersion=11), isEnabledTimedFlow=false)]


 --- Transition of flow [2289ea18-bf18-4241-8950-cace09523d20] ---
  Timestamp: 2023-01-31T07:42:04.176Z
  Event: LeaveSubFlow
  Actions: 
    
  Continuation: ProcessEvents
  Diff between previous and next state:
checkpoint.checkpointState.subFlowStack: 
    [Initiating(flowClass=class net.corda.samples.obligation.flows.IOUSettleFlow, classToInitiateWith=class net.corda.samples.obligation.flows.IOUSettleFlow, flowInfo=FlowInfo(flowVersion=1, appName=<unknown>), subFlowVersion=CorDappFlow(platformVersion=11, corDappName=workflows-1.0, corDappHash=8C2322F3ACFF6CA8FE3E7F554352489D40710486D8ED144430A5784441E56717), isEnabledTimedFlow=false), Initiating(flowClass=class net.corda.core.flows.FinalityFlow, classToInitiateWith=class net.corda.core.flows.FinalityFlow, flowInfo=FlowInfo(flowVersion=1, appName=corda-core-4.9), subFlowVersion=CoreFlow(platformVersion=11), isEnabledTimedFlow=false)]
    [Initiating(flowClass=class net.corda.samples.obligation.flows.IOUSettleFlow, classToInitiateWith=class net.corda.samples.obligation.flows.IOUSettleFlow, flowInfo=FlowInfo(flowVersion=1, appName=<unknown>), subFlowVersion=CorDappFlow(platformVersion=11, corDappName=workflows-1.0, corDappHash=8C2322F3ACFF6CA8FE3E7F554352489D40710486D8ED144430A5784441E56717), isEnabledTimedFlow=false)]
checkpoint.timestamp: 
    2023-01-31T07:42:04.168Z
    2023-01-31T07:42:04.176Z


 --- Transition of flow [2289ea18-bf18-4241-8950-cace09523d20] ---
  Timestamp: 2023-01-31T07:42:04.178Z
  Event: Error(exception=java.lang.IllegalArgumentException: Could not find Party for Anonymous(DL9VBT5ixmu4CHfFkkErsEfSdCpHidSDC1HXAQTV69jKqm), rollback=true)
  Actions: 
    RollbackTransaction
    ScheduleEvent(event=DoRemainingWork)
  Continuation: ProcessEvents
  Diff between previous and next state:
isFlowResumed: 
    true
    false
checkpoint.errorState: 
    Clean
    Errored(errors=[FlowError(errorId=934314092166762226, exception=java.lang.IllegalArgumentException: Could not find Party for Anonymous(DL9VBT5ixmu4CHfFkkErsEfSdCpHidSDC1HXAQTV69jKqm))], propagatedIndex=0, propagating=false)


 --- Transition of flow [2289ea18-bf18-4241-8950-cace09523d20] ---
  Timestamp: 2023-01-31T07:42:04.178Z
  Event: DoRemainingWork
  Actions: 
    
  Continuation: ProcessEvents
  Diff between previous and next state:
null

 --- Transition of flow [2289ea18-bf18-4241-8950-cace09523d20] ---
  Timestamp: 2023-01-31T07:42:04.178Z
  Event: StartErrorPropagation
  Actions: 
    ScheduleEvent(event=DoRemainingWork)
  Continuation: ProcessEvents
  Diff between previous and next state:
checkpoint.errorState.propagating: 
    false
    true
checkpoint.timestamp: 
    2023-01-31T07:42:04.176Z
    2023-01-31T07:42:04.178Z


 --- Transition of flow [2289ea18-bf18-4241-8950-cace09523d20] ---
  Timestamp: 2023-01-31T07:42:04.285Z
  Event: DoRemainingWork
  Actions: 
    PropagateErrors(errorMessages=[ErrorSessionMessage(flowException=null, errorId=934314092166762226)], sessions=[Initiated(peerParty=O=Mock Company 3, L=London, C=GB, peerFlowInfo=FlowInfo(flowVersion=1, appName=<unknown>), receivedMessages=[], otherSideErrored=false, peerSinkSessionId=SessionId(toLong=8383758276858904125), deduplicationSeed=R--7855006138722062871--5407470294366436114)], senderUUID=7da18ab5-41ea-4720-99fc-208eae0a7847)
    CreateTransaction
    RemoveCheckpoint(id=[2289ea18-bf18-4241-8950-cace09523d20], mayHavePersistentResults=false)
    PersistDeduplicationFacts(deduplicationHandlers=[net.corda.testing.node.internal.MockNodeMessagingService$InMemoryDeduplicationHandler@729d2512])
    ReleaseSoftLocks(uuid=2289ea18-bf18-4241-8950-cace09523d20)
    CommitTransaction
    AcknowledgeMessages(deduplicationHandlers=[net.corda.testing.node.internal.MockNodeMessagingService$InMemoryDeduplicationHandler@729d2512])
    RemoveSessionBindings(sessionIds=[SessionId(toLong=-7855006138722062871)])
    RemoveFlow(flowId=[2289ea18-bf18-4241-8950-cace09523d20], removalReason=ErrorFinish(flowErrors=[FlowError(errorId=934314092166762226, exception=java.lang.IllegalArgumentException: Could not find Party for Anonymous(DL9VBT5ixmu4CHfFkkErsEfSdCpHidSDC1HXAQTV69jKqm))]), lastState=StateMachineState(checkpoint=Checkpoint(checkpointState=CheckpointState(invocationContext=InvocationContext(origin=RPC(actor=Actor(id=Id(value=Only For Testing), serviceId=AuthServiceId(value=TEST), owningLegalIdentity=O=Mock Company 1, L=London, C=GB)), trace=Trace(invocationId=94f92ebc-0933-4966-95a0-f3e9022a2977, timestamp: 2023-01-31T07:42:03.376Z, entityType: Invocation, sessionId=94f92ebc-0933-4966-95a0-f3e9022a2977, timestamp: 2023-01-31T07:42:03.376Z, entityType: Session), actor=Actor(id=Id(value=Only For Testing), serviceId=AuthServiceId(value=TEST), owningLegalIdentity=O=Mock Company 1, L=London, C=GB), externalTrace=null, impersonatedActor=null, arguments=[], clientId=null), ourIdentity=O=Mock Company 1, L=London, C=GB, sessions={SessionId(toLong=-7855006138722062871)=Initiated(peerParty=O=Mock Company 3, L=London, C=GB, peerFlowInfo=FlowInfo(flowVersion=1, appName=<unknown>), receivedMessages=[], otherSideErrored=false, peerSinkSessionId=SessionId(toLong=8383758276858904125), deduplicationSeed=R--7855006138722062871--5407470294366436114)}, sessionsToBeClosed=[], subFlowStack=[Initiating(flowClass=class net.corda.samples.obligation.flows.IOUSettleFlow, classToInitiateWith=class net.corda.samples.obligation.flows.IOUSettleFlow, flowInfo=FlowInfo(flowVersion=1, appName=<unknown>), subFlowVersion=CorDappFlow(platformVersion=11, corDappName=workflows-1.0, corDappHash=8C2322F3ACFF6CA8FE3E7F554352489D40710486D8ED144430A5784441E56717), isEnabledTimedFlow=false)], numberOfSuspends=6, numberOfCommits=8), flowState=net.corda.node.services.statemachine.FlowState$Finished@5c0781ef, errorState=Errored(errors=[FlowError(errorId=934314092166762226, exception=java.lang.IllegalArgumentException: Could not find Party for Anonymous(DL9VBT5ixmu4CHfFkkErsEfSdCpHidSDC1HXAQTV69jKqm))], propagatedIndex=0, propagating=true), result=null, status=FAILED, progressStep=Starting, flowIoRequest=Receive, compatible=true), flowLogic=net.corda.samples.obligation.flows.IOUSettleFlow@3d0abed1, pendingDeduplicationHandlers=[], isFlowResumed=false, isWaitingForFuture=false, future=null, isAnyCheckpointPersisted=true, isStartIdempotent=false, isRemoved=true, isKilled=false, isDead=false, senderUUID=7da18ab5-41ea-4720-99fc-208eae0a7847, reloadCheckpointAfterSuspendCount=null, numberOfCommits=8, lock=java.util.concurrent.Semaphore@5cb52ef7[Permits = 0]))
  Continuation: Abort
  Diff between previous and next state:
pendingDeduplicationHandlers: 
    [net.corda.testing.node.internal.MockNodeMessagingService$InMemoryDeduplicationHandler@729d2512]
    []
numberOfCommits: 
    7
    8
isRemoved: 
    false
    true
checkpoint.status: 
    RUNNABLE
    FAILED
checkpoint.checkpointState.numberOfCommits: 
    7
    8
checkpoint.flowState: 
    Started(flowIORequest=Receive(sessions=[FlowSessionImpl(destination=O=Mock Company 3, L=London, C=GB, sourceSessionId=SessionId(toLong=-7855006138722062871))]), frozenFiber=1455D9260B11AAE0FC564CFA3D0BFFD05D2615546EF597FE255C3EF518BE93A0)
    net.corda.node.services.statemachine.FlowState$Finished@5c0781ef
checkpoint.timestamp: 
    2023-01-31T07:42:04.178Z
    2023-01-31T07:42:04.196Z
 {actor_id=Only For Testing, actor_owning_identity=O=Mock Company 1, L=London, C=GB, actor_store_id=TEST, fiber-id=10000027, flow-id=2289ea18-bf18-4241-8950-cace09523d20, invocation_id=94f92ebc-0933-4966-95a0-f3e9022a2977, invocation_timestamp=2023-01-31T07:42:03.376Z, origin=Only For Testing, session_id=94f92ebc-0933-4966-95a0-f3e9022a2977, session_timestamp=2023-01-31T07:42:03.376Z, thread-id=858, tx_id=55A76480A2D34BE067B32C0D7A6E787BEB22BC8E172C25AD05FE08B4B68BDB46}
[WARN ] 2023-01-31T07:42:04,302Z [Mock network] interceptors.DumpHistoryOnErrorInterceptor. - Flow [2289ea18-bf18-4241-8950-cace09523d20] error {actor_id=Only For Testing, actor_owning_identity=O=Mock Company 1, L=London, C=GB, actor_store_id=TEST, fiber-id=10000027, flow-id=2289ea18-bf18-4241-8950-cace09523d20, invocation_id=94f92ebc-0933-4966-95a0-f3e9022a2977, invocation_timestamp=2023-01-31T07:42:03.376Z, origin=Only For Testing, session_id=94f92ebc-0933-4966-95a0-f3e9022a2977, session_timestamp=2023-01-31T07:42:03.376Z, thread-id=858, tx_id=55A76480A2D34BE067B32C0D7A6E787BEB22BC8E172C25AD05FE08B4B68BDB46}
java.lang.IllegalArgumentException: Could not find Party for Anonymous(DL9VBT5ixmu4CHfFkkErsEfSdCpHidSDC1HXAQTV69jKqm)
	at net.corda.core.identity.IdentityUtils.groupAbstractPartyByWellKnownParty(IdentityUtils.kt:47) ~[corda-core-4.9.jar:?]
	at net.corda.core.identity.IdentityUtils.groupAbstractPartyByWellKnownParty(IdentityUtils.kt:63) ~[corda-core-4.9.jar:?]
	at net.corda.core.flows.FinalityFlow.extractExternalParticipants(FinalityFlow.kt:252) ~[corda-core-4.9.jar:?]
	at net.corda.core.flows.FinalityFlow.call(FinalityFlow.kt:162) ~[corda-core-4.9.jar:?]
	at net.corda.core.flows.FinalityFlow.call(FinalityFlow.kt:43) ~[corda-core-4.9.jar:?]
	at net.corda.node.services.statemachine.FlowStateMachineImpl.subFlow(FlowStateMachineImpl.kt:420) ~[corda-node-4.9.jar:?]
	at net.corda.core.flows.FlowLogic.subFlow(FlowLogic.kt:409) ~[corda-core-4.9.jar:?]
	at net.corda.samples.obligation.flows.IOUSettleFlow.call(IOUSettleFlow.kt:116) ~[main/:?]
	at net.corda.samples.obligation.flows.IOUSettleFlow.call(IOUSettleFlow.kt:30) ~[main/:?]
	at net.corda.node.services.statemachine.FlowStateMachineImpl.run(FlowStateMachineImpl.kt:349) ~[corda-node-4.9.jar:?]
	at net.corda.node.services.statemachine.FlowStateMachineImpl.run(FlowStateMachineImpl.kt:71) ~[corda-node-4.9.jar:?]
	at co.paralleluniverse.fibers.Fiber.run1(Fiber.java:1092) ~[quasar-core-0.7.10.jar:0.7.10]
	at co.paralleluniverse.fibers.Fiber.exec(Fiber.java:788) ~[quasar-core-0.7.10.jar:0.7.10]
	at co.paralleluniverse.fibers.RunnableFiberTask.doExec(RunnableFiberTask.java:100) ~[quasar-core-0.7.10.jar:0.7.10]
	at co.paralleluniverse.fibers.RunnableFiberTask.run(RunnableFiberTask.java:91) ~[quasar-core-0.7.10.jar:0.7.10]
	at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511) ~[?:1.8.0_202]
	at java.util.concurrent.FutureTask.run(FutureTask.java:266) ~[?:1.8.0_202]
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.access$201(ScheduledThreadPoolExecutor.java:180) ~[?:1.8.0_202]
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.run(ScheduledThreadPoolExecutor.java:293) ~[?:1.8.0_202]
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149) ~[?:1.8.0_202]
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624) ~[?:1.8.0_202]
	at net.corda.node.utilities.AffinityExecutor$ServiceAffinityExecutor$1$thread$1.run(AffinityExecutor.kt:63) ~[corda-node-4.9.jar:?]
[INFO ] 2023-01-31T07:42:04,304Z [Mock network] corda.flow. - Flow raised an error: Counter-flow errored. Sending it to flow hospital to be triaged. {fiber-id=10000029, flow-id=b9075f13-4075-455a-9bc0-26f25862e50d, invocation_id=f89c66b6-c73c-4e25-b500-447e056ac308, invocation_timestamp=2023-01-31T07:42:03.731Z, origin=O=Mock Company 1, L=London, C=GB, session_id=f89c66b6-c73c-4e25-b500-447e056ac308, session_timestamp=2023-01-31T07:42:03.731Z, thread-id=858, tx_id=55A76480A2D34BE067B32C0D7A6E787BEB22BC8E172C25AD05FE08B4B68BDB46}
[INFO ] 2023-01-31T07:42:04,305Z [Mock network] statemachine.StaffedFlowHospital. - Flow [b9075f13-4075-455a-9bc0-26f25862e50d] admitted to hospital in state StateMachineState(checkpoint=Checkpoint(checkpointState=CheckpointState(invocationContext=InvocationContext(origin=Peer(party=O=Mock Company 1, L=London, C=GB), trace=Trace(invocationId=f89c66b6-c73c-4e25-b500-447e056ac308, timestamp: 2023-01-31T07:42:03.731Z, entityType: Invocation, sessionId=f89c66b6-c73c-4e25-b500-447e056ac308, timestamp: 2023-01-31T07:42:03.731Z, entityType: Session), actor=null, externalTrace=null, impersonatedActor=null, arguments=[], clientId=null), ourIdentity=O=Mock Company 3, L=London, C=GB, sessions={SessionId(toLong=8383758276858904125)=Initiated(peerParty=O=Mock Company 1, L=London, C=GB, peerFlowInfo=FlowInfo(flowVersion=1, appName=<unknown>), receivedMessages=[], otherSideErrored=true, peerSinkSessionId=SessionId(toLong=-7855006138722062871), deduplicationSeed=D--7855006138722062871--5407470294366436114)}, sessionsToBeClosed=[], subFlowStack=[Inlined(flowClass=class net.corda.samples.obligation.flows.IOUSettleFlowResponder, subFlowVersion=CorDappFlow(platformVersion=11, corDappName=workflows-1.0, corDappHash=8C2322F3ACFF6CA8FE3E7F554352489D40710486D8ED144430A5784441E56717), isEnabledTimedFlow=false)], numberOfSuspends=7, numberOfCommits=8), flowState=Started(flowIORequest=Receive(sessions=[FlowSessionImpl(destination=O=Mock Company 1, L=London, C=GB, sourceSessionId=SessionId(toLong=8383758276858904125))]), frozenFiber=8D886AA3AE154E1BDCBCC4271AE116463F78A50DBC8A22F0B849307DBEF3260D), errorState=Clean, result=null, status=RUNNABLE, progressStep=Starting, flowIoRequest=Receive, compatible=true), flowLogic=net.corda.samples.obligation.flows.IOUSettleFlowResponder@47330b32, pendingDeduplicationHandlers=[net.corda.testing.node.internal.MockNodeMessagingService$InMemoryDeduplicationHandler@2599684a], isFlowResumed=true, isWaitingForFuture=false, future=null, isAnyCheckpointPersisted=true, isStartIdempotent=false, isRemoved=false, isKilled=false, isDead=false, senderUUID=06d1057a-f6bc-49f1-bbda-e49059d9fc5a, reloadCheckpointAfterSuspendCount=null, numberOfCommits=8, lock=java.util.concurrent.Semaphore@5a6652b8[Permits = 0]) {fiber-id=10000029, flow-id=b9075f13-4075-455a-9bc0-26f25862e50d, invocation_id=f89c66b6-c73c-4e25-b500-447e056ac308, invocation_timestamp=2023-01-31T07:42:03.731Z, origin=O=Mock Company 1, L=London, C=GB, session_id=f89c66b6-c73c-4e25-b500-447e056ac308, session_timestamp=2023-01-31T07:42:03.731Z, thread-id=858, tx_id=55A76480A2D34BE067B32C0D7A6E787BEB22BC8E172C25AD05FE08B4B68BDB46}
[INFO ] 2023-01-31T07:42:04,305Z [Mock network] statemachine.StaffedFlowHospital. - Error 1 of 1: {fiber-id=10000029, flow-id=b9075f13-4075-455a-9bc0-26f25862e50d, invocation_id=f89c66b6-c73c-4e25-b500-447e056ac308, invocation_timestamp=2023-01-31T07:42:03.731Z, origin=O=Mock Company 1, L=London, C=GB, session_id=f89c66b6-c73c-4e25-b500-447e056ac308, session_timestamp=2023-01-31T07:42:03.731Z, thread-id=858, tx_id=55A76480A2D34BE067B32C0D7A6E787BEB22BC8E172C25AD05FE08B4B68BDB46}
net.corda.core.flows.UnexpectedFlowEndException: Counter-flow errored
	at Received unexpected counter-flow exception from peer O=Mock Company 1, L=London, C=GB.() ~[?:?]
	at net.corda.node.services.statemachine.FlowStateMachineImpl.fillInLocalStackTrace(FlowStateMachineImpl.kt:244) ~[corda-node-4.9.jar:?]
	at net.corda.node.services.statemachine.FlowStateMachineImpl.processEventsUntilFlowIsResumed(FlowStateMachineImpl.kt:225) ~[corda-node-4.9.jar:?]
	at net.corda.node.services.statemachine.FlowStateMachineImpl.suspend(FlowStateMachineImpl.kt:577) ~[corda-node-4.9.jar:?]
	at net.corda.node.services.statemachine.FlowSessionImpl.receive(FlowSessionImpl.kt:67) ~[corda-node-4.9.jar:?]
	at net.corda.node.services.statemachine.FlowSessionImpl.receive(FlowSessionImpl.kt:71) ~[corda-node-4.9.jar:?]
	at net.corda.core.flows.ReceiveTransactionFlow.call(ReceiveTransactionFlow.kt:103) ~[corda-core-4.9.jar:?]
	at net.corda.core.flows.ReceiveTransactionFlow.call(ReceiveTransactionFlow.kt:31) ~[corda-core-4.9.jar:?]
	at net.corda.node.services.statemachine.FlowStateMachineImpl.subFlow(FlowStateMachineImpl.kt:420) ~[corda-node-4.9.jar:?]
	at net.corda.core.flows.FlowLogic.subFlow(FlowLogic.kt:409) ~[corda-core-4.9.jar:?]
	at net.corda.core.flows.ReceiveFinalityFlow.call(FinalityFlow.kt:285) ~[corda-core-4.9.jar:?]
	at net.corda.core.flows.ReceiveFinalityFlow.call(FinalityFlow.kt:280) ~[corda-core-4.9.jar:?]
	at net.corda.node.services.statemachine.FlowStateMachineImpl.subFlow(FlowStateMachineImpl.kt:420) ~[corda-node-4.9.jar:?]
	at net.corda.core.flows.FlowLogic.subFlow(FlowLogic.kt:409) ~[corda-core-4.9.jar:?]
	at net.corda.samples.obligation.flows.IOUSettleFlowResponder.call(IOUSettleFlow.kt:139) ~[main/:?]
	at net.corda.samples.obligation.flows.IOUSettleFlowResponder.call(IOUSettleFlow.kt:126) ~[main/:?]
	at net.corda.node.services.statemachine.FlowStateMachineImpl.run(FlowStateMachineImpl.kt:349) ~[corda-node-4.9.jar:?]
	at net.corda.node.services.statemachine.FlowStateMachineImpl.run(FlowStateMachineImpl.kt:71) ~[corda-node-4.9.jar:?]
	at co.paralleluniverse.fibers.Fiber.run1(Fiber.java:1092) ~[quasar-core-0.7.10.jar:0.7.10]
	at co.paralleluniverse.fibers.Fiber.exec(Fiber.java:788) ~[quasar-core-0.7.10.jar:0.7.10]
	at co.paralleluniverse.fibers.RunnableFiberTask.doExec(RunnableFiberTask.java:100) ~[quasar-core-0.7.10.jar:0.7.10]
	at co.paralleluniverse.fibers.RunnableFiberTask.run(RunnableFiberTask.java:91) ~[quasar-core-0.7.10.jar:0.7.10]
	at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511) ~[?:1.8.0_202]
	at java.util.concurrent.FutureTask.run(FutureTask.java:266) ~[?:1.8.0_202]
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.access$201(ScheduledThreadPoolExecutor.java:180) ~[?:1.8.0_202]
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.run(ScheduledThreadPoolExecutor.java:293) ~[?:1.8.0_202]
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149) ~[?:1.8.0_202]
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624) ~[?:1.8.0_202]
	at net.corda.node.utilities.AffinityExecutor$ServiceAffinityExecutor$1$thread$1.run(AffinityExecutor.kt:63) ~[corda-node-4.9.jar:?]
[INFO ] 2023-01-31T07:42:04,306Z [Mock network] statemachine.StaffedFlowHospital. - Flow error allowed to propagate {fiber-id=10000029, flow-id=b9075f13-4075-455a-9bc0-26f25862e50d, invocation_id=f89c66b6-c73c-4e25-b500-447e056ac308, invocation_timestamp=2023-01-31T07:42:03.731Z, origin=O=Mock Company 1, L=London, C=GB, session_id=f89c66b6-c73c-4e25-b500-447e056ac308, session_timestamp=2023-01-31T07:42:03.731Z, thread-id=858, tx_id=55A76480A2D34BE067B32C0D7A6E787BEB22BC8E172C25AD05FE08B4B68BDB46}
net.corda.core.flows.UnexpectedFlowEndException: Counter-flow errored
	at Received unexpected counter-flow exception from peer O=Mock Company 1, L=London, C=GB.() ~[?:?]
	at net.corda.node.services.statemachine.FlowStateMachineImpl.fillInLocalStackTrace(FlowStateMachineImpl.kt:244) ~[corda-node-4.9.jar:?]
	at net.corda.node.services.statemachine.FlowStateMachineImpl.processEventsUntilFlowIsResumed(FlowStateMachineImpl.kt:225) ~[corda-node-4.9.jar:?]
	at net.corda.node.services.statemachine.FlowStateMachineImpl.suspend(FlowStateMachineImpl.kt:577) ~[corda-node-4.9.jar:?]
	at net.corda.node.services.statemachine.FlowSessionImpl.receive(FlowSessionImpl.kt:67) ~[corda-node-4.9.jar:?]
	at net.corda.node.services.statemachine.FlowSessionImpl.receive(FlowSessionImpl.kt:71) ~[corda-node-4.9.jar:?]
	at net.corda.core.flows.ReceiveTransactionFlow.call(ReceiveTransactionFlow.kt:103) ~[corda-core-4.9.jar:?]
	at net.corda.core.flows.ReceiveTransactionFlow.call(ReceiveTransactionFlow.kt:31) ~[corda-core-4.9.jar:?]
	at net.corda.node.services.statemachine.FlowStateMachineImpl.subFlow(FlowStateMachineImpl.kt:420) ~[corda-node-4.9.jar:?]
	at net.corda.core.flows.FlowLogic.subFlow(FlowLogic.kt:409) ~[corda-core-4.9.jar:?]
	at net.corda.core.flows.ReceiveFinalityFlow.call(FinalityFlow.kt:285) ~[corda-core-4.9.jar:?]
	at net.corda.core.flows.ReceiveFinalityFlow.call(FinalityFlow.kt:280) ~[corda-core-4.9.jar:?]
	at net.corda.node.services.statemachine.FlowStateMachineImpl.subFlow(FlowStateMachineImpl.kt:420) ~[corda-node-4.9.jar:?]
	at net.corda.core.flows.FlowLogic.subFlow(FlowLogic.kt:409) ~[corda-core-4.9.jar:?]
	at net.corda.samples.obligation.flows.IOUSettleFlowResponder.call(IOUSettleFlow.kt:139) ~[main/:?]
	at net.corda.samples.obligation.flows.IOUSettleFlowResponder.call(IOUSettleFlow.kt:126) ~[main/:?]
	at net.corda.node.services.statemachine.FlowStateMachineImpl.run(FlowStateMachineImpl.kt:349) ~[corda-node-4.9.jar:?]
	at net.corda.node.services.statemachine.FlowStateMachineImpl.run(FlowStateMachineImpl.kt:71) ~[corda-node-4.9.jar:?]
	at co.paralleluniverse.fibers.Fiber.run1(Fiber.java:1092) ~[quasar-core-0.7.10.jar:0.7.10]
	at co.paralleluniverse.fibers.Fiber.exec(Fiber.java:788) ~[quasar-core-0.7.10.jar:0.7.10]
	at co.paralleluniverse.fibers.RunnableFiberTask.doExec(RunnableFiberTask.java:100) ~[quasar-core-0.7.10.jar:0.7.10]
	at co.paralleluniverse.fibers.RunnableFiberTask.run(RunnableFiberTask.java:91) ~[quasar-core-0.7.10.jar:0.7.10]
	at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511) ~[?:1.8.0_202]
	at java.util.concurrent.FutureTask.run(FutureTask.java:266) ~[?:1.8.0_202]
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.access$201(ScheduledThreadPoolExecutor.java:180) ~[?:1.8.0_202]
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.run(ScheduledThreadPoolExecutor.java:293) ~[?:1.8.0_202]
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149) ~[?:1.8.0_202]
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624) ~[?:1.8.0_202]
	at net.corda.node.utilities.AffinityExecutor$ServiceAffinityExecutor$1$thread$1.run(AffinityExecutor.kt:63) ~[corda-node-4.9.jar:?]
[WARN ] 2023-01-31T07:42:04,326Z [Mock network] interceptors.DumpHistoryOnErrorInterceptor. - Flow [b9075f13-4075-455a-9bc0-26f25862e50d] errored, dumping all transitions:

 --- Transition of flow [b9075f13-4075-455a-9bc0-26f25862e50d] ---
  Timestamp: 2023-01-31T07:42:03.736Z
  Event: DoRemainingWork
  Actions: 
    CreateTransaction
    PersistCheckpoint(id=[b9075f13-4075-455a-9bc0-26f25862e50d], checkpoint=Checkpoint(checkpointState=CheckpointState(invocationContext=InvocationContext(origin=Peer(party=O=Mock Company 1, L=London, C=GB), trace=Trace(invocationId=f89c66b6-c73c-4e25-b500-447e056ac308, timestamp: 2023-01-31T07:42:03.731Z, entityType: Invocation, sessionId=f89c66b6-c73c-4e25-b500-447e056ac308, timestamp: 2023-01-31T07:42:03.731Z, entityType: Session), actor=null, externalTrace=null, impersonatedActor=null, arguments=[], clientId=null), ourIdentity=O=Mock Company 3, L=London, C=GB, sessions={}, sessionsToBeClosed=[], subFlowStack=[Inlined(flowClass=class net.corda.samples.obligation.flows.IOUSettleFlowResponder, subFlowVersion=CorDappFlow(platformVersion=11, corDappName=workflows-1.0, corDappHash=8C2322F3ACFF6CA8FE3E7F554352489D40710486D8ED144430A5784441E56717), isEnabledTimedFlow=false)], numberOfSuspends=0, numberOfCommits=1), flowState=Unstarted(flowStart=Initiated, frozenFlowLogic=B628763E7961793628C6A14972EAD4A3B82660C7A9C48E002379B8E368EC896D), errorState=Clean, result=null, status=RUNNABLE, progressStep=null, flowIoRequest=null, compatible=true), isCheckpointUpdate=false)
    PersistDeduplicationFacts(deduplicationHandlers=[net.corda.testing.node.internal.MockNodeMessagingService$InMemoryDeduplicationHandler@546c17c0])
    CommitTransaction
    AcknowledgeMessages(deduplicationHandlers=[net.corda.testing.node.internal.MockNodeMessagingService$InMemoryDeduplicationHandler@546c17c0])
    SignalFlowHasStarted(flowId=[b9075f13-4075-455a-9bc0-26f25862e50d])
    SendExisting(peerParty=O=Mock Company 1, L=London, C=GB, message=ExistingSessionMessage(recipientSessionId=SessionId(toLong=-7855006138722062871), payload=ConfirmSessionMessage(initiatedSessionId=SessionId(toLong=8383758276858904125), initiatedFlowInfo=FlowInfo(flowVersion=1, appName=<unknown>))), deduplicationId=SenderDeduplicationId(deduplicationId=DeduplicationId(toString=N-D--7855006138722062871--5407470294366436114-0-0), senderUUID=06d1057a-f6bc-49f1-bbda-e49059d9fc5a))
    CreateTransaction
  Continuation: Resume(result=null)
  Diff between previous and next state:
pendingDeduplicationHandlers: 
    [net.corda.testing.node.internal.MockNodeMessagingService$InMemoryDeduplicationHandler@546c17c0]
    []
isFlowResumed: 
    false
    true
isAnyCheckpointPersisted: 
    false
    true
checkpoint.checkpointState.sessions.SessionId(toLong=8383758276858904125): 
    null
    Initiated(peerParty=O=Mock Company 1, L=London, C=GB, peerFlowInfo=FlowInfo(flowVersion=1, appName=<unknown>), receivedMessages=[DataSessionMessage(payload=class net.corda.core.serialization.SerializedBytes)], otherSideErrored=false, peerSinkSessionId=SessionId(toLong=-7855006138722062871), deduplicationSeed=D--7855006138722062871--5407470294366436114)
checkpoint.timestamp: 
    2023-01-31T07:42:03.732Z
    2023-01-31T07:42:03.733Z


 --- Transition of flow [b9075f13-4075-455a-9bc0-26f25862e50d] ---
  Timestamp: 2023-01-31T07:42:03.738Z
  Event: EnterSubFlow(subFlowClass=class net.corda.samples.obligation.flows.IOUSettleFlowResponder$call$signedTransactionFlow$1, subFlowVersion=CoreFlow(platformVersion=11), isEnabledTimedFlow=false)
  Actions: 
    
  Continuation: ProcessEvents
  Diff between previous and next state:
checkpoint.checkpointState.subFlowStack: 
    [Inlined(flowClass=class net.corda.samples.obligation.flows.IOUSettleFlowResponder, subFlowVersion=CorDappFlow(platformVersion=11, corDappName=workflows-1.0, corDappHash=8C2322F3ACFF6CA8FE3E7F554352489D40710486D8ED144430A5784441E56717), isEnabledTimedFlow=false)]
    [Inlined(flowClass=class net.corda.samples.obligation.flows.IOUSettleFlowResponder, subFlowVersion=CorDappFlow(platformVersion=11, corDappName=workflows-1.0, corDappHash=8C2322F3ACFF6CA8FE3E7F554352489D40710486D8ED144430A5784441E56717), isEnabledTimedFlow=false), Inlined(flowClass=class net.corda.samples.obligation.flows.IOUSettleFlowResponder$call$signedTransactionFlow$1, subFlowVersion=CoreFlow(platformVersion=11), isEnabledTimedFlow=false)]
checkpoint.timestamp: 
    2023-01-31T07:42:03.733Z
    2023-01-31T07:42:03.738Z


 --- Transition of flow [b9075f13-4075-455a-9bc0-26f25862e50d] ---
  Timestamp: 2023-01-31T07:42:03.738Z
  Event: EnterSubFlow(subFlowClass=class net.corda.core.flows.ReceiveTransactionFlow, subFlowVersion=CoreFlow(platformVersion=11), isEnabledTimedFlow=false)
  Actions: 
    
  Continuation: ProcessEvents
  Diff between previous and next state:
checkpoint.checkpointState.subFlowStack: 
    [Inlined(flowClass=class net.corda.samples.obligation.flows.IOUSettleFlowResponder, subFlowVersion=CorDappFlow(platformVersion=11, corDappName=workflows-1.0, corDappHash=8C2322F3ACFF6CA8FE3E7F554352489D40710486D8ED144430A5784441E56717), isEnabledTimedFlow=false), Inlined(flowClass=class net.corda.samples.obligation.flows.IOUSettleFlowResponder$call$signedTransactionFlow$1, subFlowVersion=CoreFlow(platformVersion=11), isEnabledTimedFlow=false)]
    [Inlined(flowClass=class net.corda.samples.obligation.flows.IOUSettleFlowResponder, subFlowVersion=CorDappFlow(platformVersion=11, corDappName=workflows-1.0, corDappHash=8C2322F3ACFF6CA8FE3E7F554352489D40710486D8ED144430A5784441E56717), isEnabledTimedFlow=false), Inlined(flowClass=class net.corda.samples.obligation.flows.IOUSettleFlowResponder$call$signedTransactionFlow$1, subFlowVersion=CoreFlow(platformVersion=11), isEnabledTimedFlow=false), Inlined(flowClass=class net.corda.core.flows.ReceiveTransactionFlow, subFlowVersion=CoreFlow(platformVersion=11), isEnabledTimedFlow=false)]


 --- Transition of flow [b9075f13-4075-455a-9bc0-26f25862e50d] ---
  Timestamp: 2023-01-31T07:42:03.745Z
  Event: Suspend(ioRequest=Receive(sessions=[FlowSessionImpl(destination=O=Mock Company 1, L=London, C=GB, sourceSessionId=SessionId(toLong=8383758276858904125))]), maySkipCheckpoint=false, fiber=A20503487B134ED817BCC4E359A075CBE20719737E3F6B9AD227C7E7B9BCE5E8, currentStep=Starting)
  Actions: 
    PersistCheckpoint(id=[b9075f13-4075-455a-9bc0-26f25862e50d], checkpoint=Checkpoint(checkpointState=CheckpointState(invocationContext=InvocationContext(origin=Peer(party=O=Mock Company 1, L=London, C=GB), trace=Trace(invocationId=f89c66b6-c73c-4e25-b500-447e056ac308, timestamp: 2023-01-31T07:42:03.731Z, entityType: Invocation, sessionId=f89c66b6-c73c-4e25-b500-447e056ac308, timestamp: 2023-01-31T07:42:03.731Z, entityType: Session), actor=null, externalTrace=null, impersonatedActor=null, arguments=[], clientId=null), ourIdentity=O=Mock Company 3, L=London, C=GB, sessions={SessionId(toLong=8383758276858904125)=Initiated(peerParty=O=Mock Company 1, L=London, C=GB, peerFlowInfo=FlowInfo(flowVersion=1, appName=<unknown>), receivedMessages=[DataSessionMessage(payload=class net.corda.core.serialization.SerializedBytes)], otherSideErrored=false, peerSinkSessionId=SessionId(toLong=-7855006138722062871), deduplicationSeed=D--7855006138722062871--5407470294366436114)}, sessionsToBeClosed=[], subFlowStack=[Inlined(flowClass=class net.corda.samples.obligation.flows.IOUSettleFlowResponder, subFlowVersion=CorDappFlow(platformVersion=11, corDappName=workflows-1.0, corDappHash=8C2322F3ACFF6CA8FE3E7F554352489D40710486D8ED144430A5784441E56717), isEnabledTimedFlow=false), Inlined(flowClass=class net.corda.samples.obligation.flows.IOUSettleFlowResponder$call$signedTransactionFlow$1, subFlowVersion=CoreFlow(platformVersion=11), isEnabledTimedFlow=false), Inlined(flowClass=class net.corda.core.flows.ReceiveTransactionFlow, subFlowVersion=CoreFlow(platformVersion=11), isEnabledTimedFlow=false)], numberOfSuspends=1, numberOfCommits=2), flowState=Started(flowIORequest=Receive(sessions=[FlowSessionImpl(destination=O=Mock Company 1, L=London, C=GB, sourceSessionId=SessionId(toLong=8383758276858904125))]), frozenFiber=A20503487B134ED817BCC4E359A075CBE20719737E3F6B9AD227C7E7B9BCE5E8), errorState=Clean, result=null, status=RUNNABLE, progressStep=Starting, flowIoRequest=Receive, compatible=true), isCheckpointUpdate=true)
    PersistDeduplicationFacts(deduplicationHandlers=[])
    CommitTransaction
    AcknowledgeMessages(deduplicationHandlers=[])
    ScheduleEvent(event=DoRemainingWork)
  Continuation: ProcessEvents
  Diff between previous and next state:
isFlowResumed: 
    true
    false
numberOfCommits: 
    0
    2
checkpoint.progressStep: 
    null
    Starting
checkpoint.flowIoRequest: 
    null
    Receive
checkpoint.checkpointState.numberOfCommits: 
    1
    2
checkpoint.checkpointState.numberOfSuspends: 
    0
    1
checkpoint.flowState: 
    Unstarted(flowStart=Initiated, frozenFlowLogic=B628763E7961793628C6A14972EAD4A3B82660C7A9C48E002379B8E368EC896D)
    Started(flowIORequest=Receive(sessions=[FlowSessionImpl(destination=O=Mock Company 1, L=London, C=GB, sourceSessionId=SessionId(toLong=8383758276858904125))]), frozenFiber=A20503487B134ED817BCC4E359A075CBE20719737E3F6B9AD227C7E7B9BCE5E8)
checkpoint.timestamp: 
    2023-01-31T07:42:03.738Z
    2023-01-31T07:42:03.742Z


 --- Transition of flow [b9075f13-4075-455a-9bc0-26f25862e50d] ---
  Timestamp: 2023-01-31T07:42:03.745Z
  Event: DoRemainingWork
  Actions: 
    CreateTransaction
  Continuation: Resume(result=class java.util.LinkedHashMap)
  Diff between previous and next state:
isFlowResumed: 
    false
    true
checkpoint.checkpointState.sessions.SessionId(toLong=8383758276858904125).receivedMessages.isEmpty: 
    false
    true
checkpoint.timestamp: 
    2023-01-31T07:42:03.742Z
    2023-01-31T07:42:03.745Z


 --- Transition of flow [b9075f13-4075-455a-9bc0-26f25862e50d] ---
  Timestamp: 2023-01-31T07:42:03.754Z
  Event: EnterSubFlow(subFlowClass=class net.corda.core.internal.ResolveTransactionsFlow, subFlowVersion=CoreFlow(platformVersion=11), isEnabledTimedFlow=false)
  Actions: 
    
  Continuation: ProcessEvents
  Diff between previous and next state:
checkpoint.checkpointState.subFlowStack: 
    [Inlined(flowClass=class net.corda.samples.obligation.flows.IOUSettleFlowResponder, subFlowVersion=CorDappFlow(platformVersion=11, corDappName=workflows-1.0, corDappHash=8C2322F3ACFF6CA8FE3E7F554352489D40710486D8ED144430A5784441E56717), isEnabledTimedFlow=false), Inlined(flowClass=class net.corda.samples.obligation.flows.IOUSettleFlowResponder$call$signedTransactionFlow$1, subFlowVersion=CoreFlow(platformVersion=11), isEnabledTimedFlow=false), Inlined(flowClass=class net.corda.core.flows.ReceiveTransactionFlow, subFlowVersion=CoreFlow(platformVersion=11), isEnabledTimedFlow=false)]
    [Inlined(flowClass=class net.corda.samples.obligation.flows.IOUSettleFlowResponder, subFlowVersion=CorDappFlow(platformVersion=11, corDappName=workflows-1.0, corDappHash=8C2322F3ACFF6CA8FE3E7F554352489D40710486D8ED144430A5784441E56717), isEnabledTimedFlow=false), Inlined(flowClass=class net.corda.samples.obligation.flows.IOUSettleFlowResponder$call$signedTransactionFlow$1, subFlowVersion=CoreFlow(platformVersion=11), isEnabledTimedFlow=false), Inlined(flowClass=class net.corda.core.flows.ReceiveTransactionFlow, subFlowVersion=CoreFlow(platformVersion=11), isEnabledTimedFlow=false), Inlined(flowClass=class net.corda.core.internal.ResolveTransactionsFlow, subFlowVersion=CoreFlow(platformVersion=11), isEnabledTimedFlow=false)]
checkpoint.timestamp: 
    2023-01-31T07:42:03.745Z
    2023-01-31T07:42:03.754Z


 --- Transition of flow [b9075f13-4075-455a-9bc0-26f25862e50d] ---
  Timestamp: 2023-01-31T07:42:03.755Z
  Event: EnterSubFlow(subFlowClass=class net.corda.core.internal.FetchAttachmentsFlow, subFlowVersion=CoreFlow(platformVersion=11), isEnabledTimedFlow=false)
  Actions: 
    
  Continuation: ProcessEvents
  Diff between previous and next state:
checkpoint.checkpointState.subFlowStack: 
    [Inlined(flowClass=class net.corda.samples.obligation.flows.IOUSettleFlowResponder, subFlowVersion=CorDappFlow(platformVersion=11, corDappName=workflows-1.0, corDappHash=8C2322F3ACFF6CA8FE3E7F554352489D40710486D8ED144430A5784441E56717), isEnabledTimedFlow=false), Inlined(flowClass=class net.corda.samples.obligation.flows.IOUSettleFlowResponder$call$signedTransactionFlow$1, subFlowVersion=CoreFlow(platformVersion=11), isEnabledTimedFlow=false), Inlined(flowClass=class net.corda.core.flows.ReceiveTransactionFlow, subFlowVersion=CoreFlow(platformVersion=11), isEnabledTimedFlow=false), Inlined(flowClass=class net.corda.core.internal.ResolveTransactionsFlow, subFlowVersion=CoreFlow(platformVersion=11), isEnabledTimedFlow=false)]
    [Inlined(flowClass=class net.corda.samples.obligation.flows.IOUSettleFlowResponder, subFlowVersion=CorDappFlow(platformVersion=11, corDappName=workflows-1.0, corDappHash=8C2322F3ACFF6CA8FE3E7F554352489D40710486D8ED144430A5784441E56717), isEnabledTimedFlow=false), Inlined(flowClass=class net.corda.samples.obligation.flows.IOUSettleFlowResponder$call$signedTransactionFlow$1, subFlowVersion=CoreFlow(platformVersion=11), isEnabledTimedFlow=false), Inlined(flowClass=class net.corda.core.flows.ReceiveTransactionFlow, subFlowVersion=CoreFlow(platformVersion=11), isEnabledTimedFlow=false), Inlined(flowClass=class net.corda.core.internal.ResolveTransactionsFlow, subFlowVersion=CoreFlow(platformVersion=11), isEnabledTimedFlow=false), Inlined(flowClass=class net.corda.core.internal.FetchAttachmentsFlow, subFlowVersion=CoreFlow(platformVersion=11), isEnabledTimedFlow=false)]
checkpoint.timestamp: 
    2023-01-31T07:42:03.754Z
    2023-01-31T07:42:03.755Z


 --- Transition of flow [b9075f13-4075-455a-9bc0-26f25862e50d] ---
  Timestamp: 2023-01-31T07:42:03.758Z
  Event: LeaveSubFlow
  Actions: 
    
  Continuation: ProcessEvents
  Diff between previous and next state:
checkpoint.checkpointState.subFlowStack: 
    [Inlined(flowClass=class net.corda.samples.obligation.flows.IOUSettleFlowResponder, subFlowVersion=CorDappFlow(platformVersion=11, corDappName=workflows-1.0, corDappHash=8C2322F3ACFF6CA8FE3E7F554352489D40710486D8ED144430A5784441E56717), isEnabledTimedFlow=false), Inlined(flowClass=class net.corda.samples.obligation.flows.IOUSettleFlowResponder$call$signedTransactionFlow$1, subFlowVersion=CoreFlow(platformVersion=11), isEnabledTimedFlow=false), Inlined(flowClass=class net.corda.core.flows.ReceiveTransactionFlow, subFlowVersion=CoreFlow(platformVersion=11), isEnabledTimedFlow=false), Inlined(flowClass=class net.corda.core.internal.ResolveTransactionsFlow, subFlowVersion=CoreFlow(platformVersion=11), isEnabledTimedFlow=false), Inlined(flowClass=class net.corda.core.internal.FetchAttachmentsFlow, subFlowVersion=CoreFlow(platformVersion=11), isEnabledTimedFlow=false)]
    [Inlined(flowClass=class net.corda.samples.obligation.flows.IOUSettleFlowResponder, subFlowVersion=CorDappFlow(platformVersion=11, corDappName=workflows-1.0, corDappHash=8C2322F3ACFF6CA8FE3E7F554352489D40710486D8ED144430A5784441E56717), isEnabledTimedFlow=false), Inlined(flowClass=class net.corda.samples.obligation.flows.IOUSettleFlowResponder$call$signedTransactionFlow$1, subFlowVersion=CoreFlow(platformVersion=11), isEnabledTimedFlow=false), Inlined(flowClass=class net.corda.core.flows.ReceiveTransactionFlow, subFlowVersion=CoreFlow(platformVersion=11), isEnabledTimedFlow=false), Inlined(flowClass=class net.corda.core.internal.ResolveTransactionsFlow, subFlowVersion=CoreFlow(platformVersion=11), isEnabledTimedFlow=false)]
checkpoint.timestamp: 
    2023-01-31T07:42:03.755Z
    2023-01-31T07:42:03.758Z


 --- Transition of flow [b9075f13-4075-455a-9bc0-26f25862e50d] ---
  Timestamp: 2023-01-31T07:42:03.758Z
  Event: EnterSubFlow(subFlowClass=class net.corda.core.internal.FetchNetworkParametersFlow, subFlowVersion=CoreFlow(platformVersion=11), isEnabledTimedFlow=false)
  Actions: 
    
  Continuation: ProcessEvents
  Diff between previous and next state:
checkpoint.checkpointState.subFlowStack: 
    [Inlined(flowClass=class net.corda.samples.obligation.flows.IOUSettleFlowResponder, subFlowVersion=CorDappFlow(platformVersion=11, corDappName=workflows-1.0, corDappHash=8C2322F3ACFF6CA8FE3E7F554352489D40710486D8ED144430A5784441E56717), isEnabledTimedFlow=false), Inlined(flowClass=class net.corda.samples.obligation.flows.IOUSettleFlowResponder$call$signedTransactionFlow$1, subFlowVersion=CoreFlow(platformVersion=11), isEnabledTimedFlow=false), Inlined(flowClass=class net.corda.core.flows.ReceiveTransactionFlow, subFlowVersion=CoreFlow(platformVersion=11), isEnabledTimedFlow=false), Inlined(flowClass=class net.corda.core.internal.ResolveTransactionsFlow, subFlowVersion=CoreFlow(platformVersion=11), isEnabledTimedFlow=false)]
    [Inlined(flowClass=class net.corda.samples.obligation.flows.IOUSettleFlowResponder, subFlowVersion=CorDappFlow(platformVersion=11, corDappName=workflows-1.0, corDappHash=8C2322F3ACFF6CA8FE3E7F554352489D40710486D8ED144430A5784441E56717), isEnabledTimedFlow=false), Inlined(flowClass=class net.corda.samples.obligation.flows.IOUSettleFlowResponder$call$signedTransactionFlow$1, subFlowVersion=CoreFlow(platformVersion=11), isEnabledTimedFlow=false), Inlined(flowClass=class net.corda.core.flows.ReceiveTransactionFlow, subFlowVersion=CoreFlow(platformVersion=11), isEnabledTimedFlow=false), Inlined(flowClass=class net.corda.core.internal.ResolveTransactionsFlow, subFlowVersion=CoreFlow(platformVersion=11), isEnabledTimedFlow=false), Inlined(flowClass=class net.corda.core.internal.FetchNetworkParametersFlow, subFlowVersion=CoreFlow(platformVersion=11), isEnabledTimedFlow=false)]


 --- Transition of flow [b9075f13-4075-455a-9bc0-26f25862e50d] ---
  Timestamp: 2023-01-31T07:42:03.758Z
  Event: LeaveSubFlow
  Actions: 
    
  Continuation: ProcessEvents
  Diff between previous and next state:
checkpoint.checkpointState.subFlowStack: 
    [Inlined(flowClass=class net.corda.samples.obligation.flows.IOUSettleFlowResponder, subFlowVersion=CorDappFlow(platformVersion=11, corDappName=workflows-1.0, corDappHash=8C2322F3ACFF6CA8FE3E7F554352489D40710486D8ED144430A5784441E56717), isEnabledTimedFlow=false), Inlined(flowClass=class net.corda.samples.obligation.flows.IOUSettleFlowResponder$call$signedTransactionFlow$1, subFlowVersion=CoreFlow(platformVersion=11), isEnabledTimedFlow=false), Inlined(flowClass=class net.corda.core.flows.ReceiveTransactionFlow, subFlowVersion=CoreFlow(platformVersion=11), isEnabledTimedFlow=false), Inlined(flowClass=class net.corda.core.internal.ResolveTransactionsFlow, subFlowVersion=CoreFlow(platformVersion=11), isEnabledTimedFlow=false), Inlined(flowClass=class net.corda.core.internal.FetchNetworkParametersFlow, subFlowVersion=CoreFlow(platformVersion=11), isEnabledTimedFlow=false)]
    [Inlined(flowClass=class net.corda.samples.obligation.flows.IOUSettleFlowResponder, subFlowVersion=CorDappFlow(platformVersion=11, corDappName=workflows-1.0, corDappHash=8C2322F3ACFF6CA8FE3E7F554352489D40710486D8ED144430A5784441E56717), isEnabledTimedFlow=false), Inlined(flowClass=class net.corda.samples.obligation.flows.IOUSettleFlowResponder$call$signedTransactionFlow$1, subFlowVersion=CoreFlow(platformVersion=11), isEnabledTimedFlow=false), Inlined(flowClass=class net.corda.core.flows.ReceiveTransactionFlow, subFlowVersion=CoreFlow(platformVersion=11), isEnabledTimedFlow=false), Inlined(flowClass=class net.corda.core.internal.ResolveTransactionsFlow, subFlowVersion=CoreFlow(platformVersion=11), isEnabledTimedFlow=false)]


 --- Transition of flow [b9075f13-4075-455a-9bc0-26f25862e50d] ---
  Timestamp: 2023-01-31T07:42:03.758Z
  Event: EnterSubFlow(subFlowClass=class net.corda.core.internal.FetchTransactionsFlow, subFlowVersion=CoreFlow(platformVersion=11), isEnabledTimedFlow=false)
  Actions: 
    
  Continuation: ProcessEvents
  Diff between previous and next state:
checkpoint.checkpointState.subFlowStack: 
    [Inlined(flowClass=class net.corda.samples.obligation.flows.IOUSettleFlowResponder, subFlowVersion=CorDappFlow(platformVersion=11, corDappName=workflows-1.0, corDappHash=8C2322F3ACFF6CA8FE3E7F554352489D40710486D8ED144430A5784441E56717), isEnabledTimedFlow=false), Inlined(flowClass=class net.corda.samples.obligation.flows.IOUSettleFlowResponder$call$signedTransactionFlow$1, subFlowVersion=CoreFlow(platformVersion=11), isEnabledTimedFlow=false), Inlined(flowClass=class net.corda.core.flows.ReceiveTransactionFlow, subFlowVersion=CoreFlow(platformVersion=11), isEnabledTimedFlow=false), Inlined(flowClass=class net.corda.core.internal.ResolveTransactionsFlow, subFlowVersion=CoreFlow(platformVersion=11), isEnabledTimedFlow=false)]
    [Inlined(flowClass=class net.corda.samples.obligation.flows.IOUSettleFlowResponder, subFlowVersion=CorDappFlow(platformVersion=11, corDappName=workflows-1.0, corDappHash=8C2322F3ACFF6CA8FE3E7F554352489D40710486D8ED144430A5784441E56717), isEnabledTimedFlow=false), Inlined(flowClass=class net.corda.samples.obligation.flows.IOUSettleFlowResponder$call$signedTransactionFlow$1, subFlowVersion=CoreFlow(platformVersion=11), isEnabledTimedFlow=false), Inlined(flowClass=class net.corda.core.flows.ReceiveTransactionFlow, subFlowVersion=CoreFlow(platformVersion=11), isEnabledTimedFlow=false), Inlined(flowClass=class net.corda.core.internal.ResolveTransactionsFlow, subFlowVersion=CoreFlow(platformVersion=11), isEnabledTimedFlow=false), Inlined(flowClass=class net.corda.core.internal.FetchTransactionsFlow, subFlowVersion=CoreFlow(platformVersion=11), isEnabledTimedFlow=false)]


 --- Transition of flow [b9075f13-4075-455a-9bc0-26f25862e50d] ---
  Timestamp: 2023-01-31T07:42:03.766Z
  Event: Suspend(ioRequest=SendAndReceive({FlowSessionImpl(destination=O=Mock Company 1, L=London, C=GB, sourceSessionId=SessionId(toLong=8383758276858904125))=FlowSessionImpl(destination=O=Mock Company 1, L=London, C=GB, sourceSessionId=SessionId(toLong=8383758276858904125))=7484162AA4B4675678FF879F5FC60A03F40F4F47BC6F6C769522BDC93DF08F12}, shouldRetrySend=false), maySkipCheckpoint=false, fiber=0F07145882CC9FE6EC041FA3FC409195C4E64D1D94721F1339C07A698E54C17F, currentStep=Starting)
  Actions: 
    PersistCheckpoint(id=[b9075f13-4075-455a-9bc0-26f25862e50d], checkpoint=Checkpoint(checkpointState=CheckpointState(invocationContext=InvocationContext(origin=Peer(party=O=Mock Company 1, L=London, C=GB), trace=Trace(invocationId=f89c66b6-c73c-4e25-b500-447e056ac308, timestamp: 2023-01-31T07:42:03.731Z, entityType: Invocation, sessionId=f89c66b6-c73c-4e25-b500-447e056ac308, timestamp: 2023-01-31T07:42:03.731Z, entityType: Session), actor=null, externalTrace=null, impersonatedActor=null, arguments=[], clientId=null), ourIdentity=O=Mock Company 3, L=London, C=GB, sessions={SessionId(toLong=8383758276858904125)=Initiated(peerParty=O=Mock Company 1, L=London, C=GB, peerFlowInfo=FlowInfo(flowVersion=1, appName=<unknown>), receivedMessages=[], otherSideErrored=false, peerSinkSessionId=SessionId(toLong=-7855006138722062871), deduplicationSeed=D--7855006138722062871--5407470294366436114)}, sessionsToBeClosed=[], subFlowStack=[Inlined(flowClass=class net.corda.samples.obligation.flows.IOUSettleFlowResponder, subFlowVersion=CorDappFlow(platformVersion=11, corDappName=workflows-1.0, corDappHash=8C2322F3ACFF6CA8FE3E7F554352489D40710486D8ED144430A5784441E56717), isEnabledTimedFlow=false), Inlined(flowClass=class net.corda.samples.obligation.flows.IOUSettleFlowResponder$call$signedTransactionFlow$1, subFlowVersion=CoreFlow(platformVersion=11), isEnabledTimedFlow=false), Inlined(flowClass=class net.corda.core.flows.ReceiveTransactionFlow, subFlowVersion=CoreFlow(platformVersion=11), isEnabledTimedFlow=false), Inlined(flowClass=class net.corda.core.internal.ResolveTransactionsFlow, subFlowVersion=CoreFlow(platformVersion=11), isEnabledTimedFlow=false), Inlined(flowClass=class net.corda.core.internal.FetchTransactionsFlow, subFlowVersion=CoreFlow(platformVersion=11), isEnabledTimedFlow=false)], numberOfSuspends=2, numberOfCommits=3), flowState=Started(flowIORequest=SendAndReceive({FlowSessionImpl(destination=O=Mock Company 1, L=London, C=GB, sourceSessionId=SessionId(toLong=8383758276858904125))=FlowSessionImpl(destination=O=Mock Company 1, L=London, C=GB, sourceSessionId=SessionId(toLong=8383758276858904125))=7484162AA4B4675678FF879F5FC60A03F40F4F47BC6F6C769522BDC93DF08F12}, shouldRetrySend=false), frozenFiber=0F07145882CC9FE6EC041FA3FC409195C4E64D1D94721F1339C07A698E54C17F), errorState=Clean, result=null, status=RUNNABLE, progressStep=Starting, flowIoRequest=SendAndReceive, compatible=true), isCheckpointUpdate=true)
    PersistDeduplicationFacts(deduplicationHandlers=[])
    CommitTransaction
    AcknowledgeMessages(deduplicationHandlers=[])
    ScheduleEvent(event=DoRemainingWork)
  Continuation: ProcessEvents
  Diff between previous and next state:
isFlowResumed: 
    true
    false
numberOfCommits: 
    2
    3
checkpoint.flowIoRequest: 
    Receive
    SendAndReceive
checkpoint.checkpointState.numberOfCommits: 
    2
    3
checkpoint.checkpointState.numberOfSuspends: 
    1
    2
checkpoint.flowState.flowIORequest: 
    Receive(sessions=[FlowSessionImpl(destination=O=Mock Company 1, L=London, C=GB, sourceSessionId=SessionId(toLong=8383758276858904125))])
    SendAndReceive({FlowSessionImpl(destination=O=Mock Company 1, L=London, C=GB, sourceSessionId=SessionId(toLong=8383758276858904125))=FlowSessionImpl(destination=O=Mock Company 1, L=London, C=GB, sourceSessionId=SessionId(toLong=8383758276858904125))=7484162AA4B4675678FF879F5FC60A03F40F4F47BC6F6C769522BDC93DF08F12}, shouldRetrySend=false)
checkpoint.flowState.frozenFiber.hash: 
    A20503487B134ED817BCC4E359A075CBE20719737E3F6B9AD227C7E7B9BCE5E8
    0F07145882CC9FE6EC041FA3FC409195C4E64D1D94721F1339C07A698E54C17F
checkpoint.timestamp: 
    2023-01-31T07:42:03.758Z
    2023-01-31T07:42:03.764Z


 --- Transition of flow [b9075f13-4075-455a-9bc0-26f25862e50d] ---
  Timestamp: 2023-01-31T07:42:03.767Z
  Event: DoRemainingWork
  Actions: 
    SendMultiple(sendInitial=[], sendExisting=[SendExisting(peerParty=O=Mock Company 1, L=London, C=GB, message=ExistingSessionMessage(recipientSessionId=SessionId(toLong=-7855006138722062871), payload=DataSessionMessage(payload=class net.corda.core.serialization.SerializedBytes)), deduplicationId=SenderDeduplicationId(deduplicationId=DeduplicationId(toString=N-D--7855006138722062871--5407470294366436114-2-0), senderUUID=06d1057a-f6bc-49f1-bbda-e49059d9fc5a))])
  Continuation: ProcessEvents
  Diff between previous and next state:
checkpoint.flowState.flowIORequest: 
    SendAndReceive({FlowSessionImpl(destination=O=Mock Company 1, L=London, C=GB, sourceSessionId=SessionId(toLong=8383758276858904125))=FlowSessionImpl(destination=O=Mock Company 1, L=London, C=GB, sourceSessionId=SessionId(toLong=8383758276858904125))=7484162AA4B4675678FF879F5FC60A03F40F4F47BC6F6C769522BDC93DF08F12}, shouldRetrySend=false)
    Receive(sessions=[FlowSessionImpl(destination=O=Mock Company 1, L=London, C=GB, sourceSessionId=SessionId(toLong=8383758276858904125))])
checkpoint.timestamp: 
    2023-01-31T07:42:03.764Z
    2023-01-31T07:42:03.766Z


 --- Transition of flow [b9075f13-4075-455a-9bc0-26f25862e50d] ---
  Timestamp: 2023-01-31T07:42:03.780Z
  Event: DeliverSessionMessage(sessionMessage=ExistingSessionMessage(recipientSessionId=SessionId(toLong=8383758276858904125), payload=DataSessionMessage(payload=class net.corda.core.serialization.SerializedBytes)), deduplicationHandler=net.corda.testing.node.internal.MockNodeMessagingService$InMemoryDeduplicationHandler@3a59fe3f, sender=O=Mock Company 1, L=London, C=GB)
  Actions: 
    ScheduleEvent(event=DoRemainingWork)
  Continuation: ProcessEvents
  Diff between previous and next state:
pendingDeduplicationHandlers: 
    []
    [net.corda.testing.node.internal.MockNodeMessagingService$InMemoryDeduplicationHandler@3a59fe3f]
checkpoint.checkpointState.sessions.SessionId(toLong=8383758276858904125).receivedMessages.isEmpty: 
    true
    false
checkpoint.timestamp: 
    2023-01-31T07:42:03.766Z
    2023-01-31T07:42:03.780Z


 --- Transition of flow [b9075f13-4075-455a-9bc0-26f25862e50d] ---
  Timestamp: 2023-01-31T07:42:03.780Z
  Event: DoRemainingWork
  Actions: 
    CreateTransaction
  Continuation: Resume(result=class java.util.LinkedHashMap)
  Diff between previous and next state:
isFlowResumed: 
    false
    true
checkpoint.checkpointState.sessions.SessionId(toLong=8383758276858904125).receivedMessages.isEmpty: 
    false
    true


 --- Transition of flow [b9075f13-4075-455a-9bc0-26f25862e50d] ---
  Timestamp: 2023-01-31T07:42:03.781Z
  Event: LeaveSubFlow
  Actions: 
    
  Continuation: ProcessEvents
  Diff between previous and next state:
checkpoint.checkpointState.subFlowStack: 
    [Inlined(flowClass=class net.corda.samples.obligation.flows.IOUSettleFlowResponder, subFlowVersion=CorDappFlow(platformVersion=11, corDappName=workflows-1.0, corDappHash=8C2322F3ACFF6CA8FE3E7F554352489D40710486D8ED144430A5784441E56717), isEnabledTimedFlow=false), Inlined(flowClass=class net.corda.samples.obligation.flows.IOUSettleFlowResponder$call$signedTransactionFlow$1, subFlowVersion=CoreFlow(platformVersion=11), isEnabledTimedFlow=false), Inlined(flowClass=class net.corda.core.flows.ReceiveTransactionFlow, subFlowVersion=CoreFlow(platformVersion=11), isEnabledTimedFlow=false), Inlined(flowClass=class net.corda.core.internal.ResolveTransactionsFlow, subFlowVersion=CoreFlow(platformVersion=11), isEnabledTimedFlow=false), Inlined(flowClass=class net.corda.core.internal.FetchTransactionsFlow, subFlowVersion=CoreFlow(platformVersion=11), isEnabledTimedFlow=false)]
    [Inlined(flowClass=class net.corda.samples.obligation.flows.IOUSettleFlowResponder, subFlowVersion=CorDappFlow(platformVersion=11, corDappName=workflows-1.0, corDappHash=8C2322F3ACFF6CA8FE3E7F554352489D40710486D8ED144430A5784441E56717), isEnabledTimedFlow=false), Inlined(flowClass=class net.corda.samples.obligation.flows.IOUSettleFlowResponder$call$signedTransactionFlow$1, subFlowVersion=CoreFlow(platformVersion=11), isEnabledTimedFlow=false), Inlined(flowClass=class net.corda.core.flows.ReceiveTransactionFlow, subFlowVersion=CoreFlow(platformVersion=11), isEnabledTimedFlow=false), Inlined(flowClass=class net.corda.core.internal.ResolveTransactionsFlow, subFlowVersion=CoreFlow(platformVersion=11), isEnabledTimedFlow=false)]
checkpoint.timestamp: 
    2023-01-31T07:42:03.780Z
    2023-01-31T07:42:03.781Z


 --- Transition of flow [b9075f13-4075-455a-9bc0-26f25862e50d] ---
  Timestamp: 2023-01-31T07:42:03.784Z
  Event: EnterSubFlow(subFlowClass=class net.corda.core.internal.FetchAttachmentsFlow, subFlowVersion=CoreFlow(platformVersion=11), isEnabledTimedFlow=false)
  Actions: 
    
  Continuation: ProcessEvents
  Diff between previous and next state:
checkpoint.checkpointState.subFlowStack: 
    [Inlined(flowClass=class net.corda.samples.obligation.flows.IOUSettleFlowResponder, subFlowVersion=CorDappFlow(platformVersion=11, corDappName=workflows-1.0, corDappHash=8C2322F3ACFF6CA8FE3E7F554352489D40710486D8ED144430A5784441E56717), isEnabledTimedFlow=false), Inlined(flowClass=class net.corda.samples.obligation.flows.IOUSettleFlowResponder$call$signedTransactionFlow$1, subFlowVersion=CoreFlow(platformVersion=11), isEnabledTimedFlow=false), Inlined(flowClass=class net.corda.core.flows.ReceiveTransactionFlow, subFlowVersion=CoreFlow(platformVersion=11), isEnabledTimedFlow=false), Inlined(flowClass=class net.corda.core.internal.ResolveTransactionsFlow, subFlowVersion=CoreFlow(platformVersion=11), isEnabledTimedFlow=false)]
    [Inlined(flowClass=class net.corda.samples.obligation.flows.IOUSettleFlowResponder, subFlowVersion=CorDappFlow(platformVersion=11, corDappName=workflows-1.0, corDappHash=8C2322F3ACFF6CA8FE3E7F554352489D40710486D8ED144430A5784441E56717), isEnabledTimedFlow=false), Inlined(flowClass=class net.corda.samples.obligation.flows.IOUSettleFlowResponder$call$signedTransactionFlow$1, subFlowVersion=CoreFlow(platformVersion=11), isEnabledTimedFlow=false), Inlined(flowClass=class net.corda.core.flows.ReceiveTransactionFlow, subFlowVersion=CoreFlow(platformVersion=11), isEnabledTimedFlow=false), Inlined(flowClass=class net.corda.core.internal.ResolveTransactionsFlow, subFlowVersion=CoreFlow(platformVersion=11), isEnabledTimedFlow=false), Inlined(flowClass=class net.corda.core.internal.FetchAttachmentsFlow, subFlowVersion=CoreFlow(platformVersion=11), isEnabledTimedFlow=false)]
checkpoint.timestamp: 
    2023-01-31T07:42:03.781Z
    2023-01-31T07:42:03.784Z


 --- Transition of flow [b9075f13-4075-455a-9bc0-26f25862e50d] ---
  Timestamp: 2023-01-31T07:42:03.784Z
  Event: LeaveSubFlow
  Actions: 
    
  Continuation: ProcessEvents
  Diff between previous and next state:
checkpoint.checkpointState.subFlowStack: 
    [Inlined(flowClass=class net.corda.samples.obligation.flows.IOUSettleFlowResponder, subFlowVersion=CorDappFlow(platformVersion=11, corDappName=workflows-1.0, corDappHash=8C2322F3ACFF6CA8FE3E7F554352489D40710486D8ED144430A5784441E56717), isEnabledTimedFlow=false), Inlined(flowClass=class net.corda.samples.obligation.flows.IOUSettleFlowResponder$call$signedTransactionFlow$1, subFlowVersion=CoreFlow(platformVersion=11), isEnabledTimedFlow=false), Inlined(flowClass=class net.corda.core.flows.ReceiveTransactionFlow, subFlowVersion=CoreFlow(platformVersion=11), isEnabledTimedFlow=false), Inlined(flowClass=class net.corda.core.internal.ResolveTransactionsFlow, subFlowVersion=CoreFlow(platformVersion=11), isEnabledTimedFlow=false), Inlined(flowClass=class net.corda.core.internal.FetchAttachmentsFlow, subFlowVersion=CoreFlow(platformVersion=11), isEnabledTimedFlow=false)]
    [Inlined(flowClass=class net.corda.samples.obligation.flows.IOUSettleFlowResponder, subFlowVersion=CorDappFlow(platformVersion=11, corDappName=workflows-1.0, corDappHash=8C2322F3ACFF6CA8FE3E7F554352489D40710486D8ED144430A5784441E56717), isEnabledTimedFlow=false), Inlined(flowClass=class net.corda.samples.obligation.flows.IOUSettleFlowResponder$call$signedTransactionFlow$1, subFlowVersion=CoreFlow(platformVersion=11), isEnabledTimedFlow=false), Inlined(flowClass=class net.corda.core.flows.ReceiveTransactionFlow, subFlowVersion=CoreFlow(platformVersion=11), isEnabledTimedFlow=false), Inlined(flowClass=class net.corda.core.internal.ResolveTransactionsFlow, subFlowVersion=CoreFlow(platformVersion=11), isEnabledTimedFlow=false)]


 --- Transition of flow [b9075f13-4075-455a-9bc0-26f25862e50d] ---
  Timestamp: 2023-01-31T07:42:03.784Z
  Event: EnterSubFlow(subFlowClass=class net.corda.core.internal.FetchNetworkParametersFlow, subFlowVersion=CoreFlow(platformVersion=11), isEnabledTimedFlow=false)
  Actions: 
    
  Continuation: ProcessEvents
  Diff between previous and next state:
checkpoint.checkpointState.subFlowStack: 
    [Inlined(flowClass=class net.corda.samples.obligation.flows.IOUSettleFlowResponder, subFlowVersion=CorDappFlow(platformVersion=11, corDappName=workflows-1.0, corDappHash=8C2322F3ACFF6CA8FE3E7F554352489D40710486D8ED144430A5784441E56717), isEnabledTimedFlow=false), Inlined(flowClass=class net.corda.samples.obligation.flows.IOUSettleFlowResponder$call$signedTransactionFlow$1, subFlowVersion=CoreFlow(platformVersion=11), isEnabledTimedFlow=false), Inlined(flowClass=class net.corda.core.flows.ReceiveTransactionFlow, subFlowVersion=CoreFlow(platformVersion=11), isEnabledTimedFlow=false), Inlined(flowClass=class net.corda.core.internal.ResolveTransactionsFlow, subFlowVersion=CoreFlow(platformVersion=11), isEnabledTimedFlow=false)]
    [Inlined(flowClass=class net.corda.samples.obligation.flows.IOUSettleFlowResponder, subFlowVersion=CorDappFlow(platformVersion=11, corDappName=workflows-1.0, corDappHash=8C2322F3ACFF6CA8FE3E7F554352489D40710486D8ED144430A5784441E56717), isEnabledTimedFlow=false), Inlined(flowClass=class net.corda.samples.obligation.flows.IOUSettleFlowResponder$call$signedTransactionFlow$1, subFlowVersion=CoreFlow(platformVersion=11), isEnabledTimedFlow=false), Inlined(flowClass=class net.corda.core.flows.ReceiveTransactionFlow, subFlowVersion=CoreFlow(platformVersion=11), isEnabledTimedFlow=false), Inlined(flowClass=class net.corda.core.internal.ResolveTransactionsFlow, subFlowVersion=CoreFlow(platformVersion=11), isEnabledTimedFlow=false), Inlined(flowClass=class net.corda.core.internal.FetchNetworkParametersFlow, subFlowVersion=CoreFlow(platformVersion=11), isEnabledTimedFlow=false)]


 --- Transition of flow [b9075f13-4075-455a-9bc0-26f25862e50d] ---
  Timestamp: 2023-01-31T07:42:03.784Z
  Event: LeaveSubFlow
  Actions: 
    
  Continuation: ProcessEvents
  Diff between previous and next state:
checkpoint.checkpointState.subFlowStack: 
    [Inlined(flowClass=class net.corda.samples.obligation.flows.IOUSettleFlowResponder, subFlowVersion=CorDappFlow(platformVersion=11, corDappName=workflows-1.0, corDappHash=8C2322F3ACFF6CA8FE3E7F554352489D40710486D8ED144430A5784441E56717), isEnabledTimedFlow=false), Inlined(flowClass=class net.corda.samples.obligation.flows.IOUSettleFlowResponder$call$signedTransactionFlow$1, subFlowVersion=CoreFlow(platformVersion=11), isEnabledTimedFlow=false), Inlined(flowClass=class net.corda.core.flows.ReceiveTransactionFlow, subFlowVersion=CoreFlow(platformVersion=11), isEnabledTimedFlow=false), Inlined(flowClass=class net.corda.core.internal.ResolveTransactionsFlow, subFlowVersion=CoreFlow(platformVersion=11), isEnabledTimedFlow=false), Inlined(flowClass=class net.corda.core.internal.FetchNetworkParametersFlow, subFlowVersion=CoreFlow(platformVersion=11), isEnabledTimedFlow=false)]
    [Inlined(flowClass=class net.corda.samples.obligation.flows.IOUSettleFlowResponder, subFlowVersion=CorDappFlow(platformVersion=11, corDappName=workflows-1.0, corDappHash=8C2322F3ACFF6CA8FE3E7F554352489D40710486D8ED144430A5784441E56717), isEnabledTimedFlow=false), Inlined(flowClass=class net.corda.samples.obligation.flows.IOUSettleFlowResponder$call$signedTransactionFlow$1, subFlowVersion=CoreFlow(platformVersion=11), isEnabledTimedFlow=false), Inlined(flowClass=class net.corda.core.flows.ReceiveTransactionFlow, subFlowVersion=CoreFlow(platformVersion=11), isEnabledTimedFlow=false), Inlined(flowClass=class net.corda.core.internal.ResolveTransactionsFlow, subFlowVersion=CoreFlow(platformVersion=11), isEnabledTimedFlow=false)]


 --- Transition of flow [b9075f13-4075-455a-9bc0-26f25862e50d] ---
  Timestamp: 2023-01-31T07:42:03.790Z
  Event: Suspend(ioRequest=Sleep(wakeUpAfter=2023-01-31T07:42:03.785Z), maySkipCheckpoint=false, fiber=6B4088ADCF0CE246E35F303D8C9E5D0A04E29659BF005B5C557CCE5A8D1720BE, currentStep=Starting)
  Actions: 
    PersistCheckpoint(id=[b9075f13-4075-455a-9bc0-26f25862e50d], checkpoint=Checkpoint(checkpointState=CheckpointState(invocationContext=InvocationContext(origin=Peer(party=O=Mock Company 1, L=London, C=GB), trace=Trace(invocationId=f89c66b6-c73c-4e25-b500-447e056ac308, timestamp: 2023-01-31T07:42:03.731Z, entityType: Invocation, sessionId=f89c66b6-c73c-4e25-b500-447e056ac308, timestamp: 2023-01-31T07:42:03.731Z, entityType: Session), actor=null, externalTrace=null, impersonatedActor=null, arguments=[], clientId=null), ourIdentity=O=Mock Company 3, L=London, C=GB, sessions={SessionId(toLong=8383758276858904125)=Initiated(peerParty=O=Mock Company 1, L=London, C=GB, peerFlowInfo=FlowInfo(flowVersion=1, appName=<unknown>), receivedMessages=[], otherSideErrored=false, peerSinkSessionId=SessionId(toLong=-7855006138722062871), deduplicationSeed=D--7855006138722062871--5407470294366436114)}, sessionsToBeClosed=[], subFlowStack=[Inlined(flowClass=class net.corda.samples.obligation.flows.IOUSettleFlowResponder, subFlowVersion=CorDappFlow(platformVersion=11, corDappName=workflows-1.0, corDappHash=8C2322F3ACFF6CA8FE3E7F554352489D40710486D8ED144430A5784441E56717), isEnabledTimedFlow=false), Inlined(flowClass=class net.corda.samples.obligation.flows.IOUSettleFlowResponder$call$signedTransactionFlow$1, subFlowVersion=CoreFlow(platformVersion=11), isEnabledTimedFlow=false), Inlined(flowClass=class net.corda.core.flows.ReceiveTransactionFlow, subFlowVersion=CoreFlow(platformVersion=11), isEnabledTimedFlow=false), Inlined(flowClass=class net.corda.core.internal.ResolveTransactionsFlow, subFlowVersion=CoreFlow(platformVersion=11), isEnabledTimedFlow=false)], numberOfSuspends=3, numberOfCommits=4), flowState=Started(flowIORequest=Sleep(wakeUpAfter=2023-01-31T07:42:03.785Z), frozenFiber=6B4088ADCF0CE246E35F303D8C9E5D0A04E29659BF005B5C557CCE5A8D1720BE), errorState=Clean, result=null, status=RUNNABLE, progressStep=Starting, flowIoRequest=Sleep, compatible=true), isCheckpointUpdate=true)
    PersistDeduplicationFacts(deduplicationHandlers=[net.corda.testing.node.internal.MockNodeMessagingService$InMemoryDeduplicationHandler@3a59fe3f])
    CommitTransaction
    AcknowledgeMessages(deduplicationHandlers=[net.corda.testing.node.internal.MockNodeMessagingService$InMemoryDeduplicationHandler@3a59fe3f])
    ScheduleEvent(event=DoRemainingWork)
  Continuation: ProcessEvents
  Diff between previous and next state:
pendingDeduplicationHandlers: 
    [net.corda.testing.node.internal.MockNodeMessagingService$InMemoryDeduplicationHandler@3a59fe3f]
    []
isFlowResumed: 
    true
    false
numberOfCommits: 
    3
    4
checkpoint.flowIoRequest: 
    SendAndReceive
    Sleep
checkpoint.checkpointState.numberOfCommits: 
    3
    4
checkpoint.checkpointState.numberOfSuspends: 
    2
    3
checkpoint.flowState.flowIORequest: 
    Receive(sessions=[FlowSessionImpl(destination=O=Mock Company 1, L=London, C=GB, sourceSessionId=SessionId(toLong=8383758276858904125))])
    Sleep(wakeUpAfter=2023-01-31T07:42:03.785Z)
checkpoint.flowState.frozenFiber.hash: 
    0F07145882CC9FE6EC041FA3FC409195C4E64D1D94721F1339C07A698E54C17F
    6B4088ADCF0CE246E35F303D8C9E5D0A04E29659BF005B5C557CCE5A8D1720BE
checkpoint.timestamp: 
    2023-01-31T07:42:03.784Z
    2023-01-31T07:42:03.787Z


 --- Transition of flow [b9075f13-4075-455a-9bc0-26f25862e50d] ---
  Timestamp: 2023-01-31T07:42:03.790Z
  Event: DoRemainingWork
  Actions: 
    SleepUntil(currentState=StateMachineState(checkpoint=Checkpoint(checkpointState=CheckpointState(invocationContext=InvocationContext(origin=Peer(party=O=Mock Company 1, L=London, C=GB), trace=Trace(invocationId=f89c66b6-c73c-4e25-b500-447e056ac308, timestamp: 2023-01-31T07:42:03.731Z, entityType: Invocation, sessionId=f89c66b6-c73c-4e25-b500-447e056ac308, timestamp: 2023-01-31T07:42:03.731Z, entityType: Session), actor=null, externalTrace=null, impersonatedActor=null, arguments=[], clientId=null), ourIdentity=O=Mock Company 3, L=London, C=GB, sessions={SessionId(toLong=8383758276858904125)=Initiated(peerParty=O=Mock Company 1, L=London, C=GB, peerFlowInfo=FlowInfo(flowVersion=1, appName=<unknown>), receivedMessages=[], otherSideErrored=false, peerSinkSessionId=SessionId(toLong=-7855006138722062871), deduplicationSeed=D--7855006138722062871--5407470294366436114)}, sessionsToBeClosed=[], subFlowStack=[Inlined(flowClass=class net.corda.samples.obligation.flows.IOUSettleFlowResponder, subFlowVersion=CorDappFlow(platformVersion=11, corDappName=workflows-1.0, corDappHash=8C2322F3ACFF6CA8FE3E7F554352489D40710486D8ED144430A5784441E56717), isEnabledTimedFlow=false), Inlined(flowClass=class net.corda.samples.obligation.flows.IOUSettleFlowResponder$call$signedTransactionFlow$1, subFlowVersion=CoreFlow(platformVersion=11), isEnabledTimedFlow=false), Inlined(flowClass=class net.corda.core.flows.ReceiveTransactionFlow, subFlowVersion=CoreFlow(platformVersion=11), isEnabledTimedFlow=false), Inlined(flowClass=class net.corda.core.internal.ResolveTransactionsFlow, subFlowVersion=CoreFlow(platformVersion=11), isEnabledTimedFlow=false)], numberOfSuspends=3, numberOfCommits=4), flowState=Started(flowIORequest=Sleep(wakeUpAfter=2023-01-31T07:42:03.785Z), frozenFiber=6B4088ADCF0CE246E35F303D8C9E5D0A04E29659BF005B5C557CCE5A8D1720BE), errorState=Clean, result=null, status=RUNNABLE, progressStep=Starting, flowIoRequest=Sleep, compatible=true), flowLogic=net.corda.samples.obligation.flows.IOUSettleFlowResponder@47330b32, pendingDeduplicationHandlers=[], isFlowResumed=false, isWaitingForFuture=true, future=java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask@5242885e, isAnyCheckpointPersisted=true, isStartIdempotent=false, isRemoved=false, isKilled=false, isDead=false, senderUUID=06d1057a-f6bc-49f1-bbda-e49059d9fc5a, reloadCheckpointAfterSuspendCount=null, numberOfCommits=4, lock=java.util.concurrent.Semaphore@5a6652b8[Permits = 0]), time=2023-01-31T07:42:03.785Z)
  Continuation: ProcessEvents
  Diff between previous and next state:
isWaitingForFuture: 
    false
    true
future: 
    null
    java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask@5242885e


 --- Transition of flow [b9075f13-4075-455a-9bc0-26f25862e50d] ---
  Timestamp: 2023-01-31T07:42:03.791Z
  Event: WakeUpSleepyFlow
  Actions: 
    CreateTransaction
  Continuation: Resume(result=class kotlin.Unit)
  Diff between previous and next state:
isFlowResumed: 
    false
    true
isWaitingForFuture: 
    true
    false
future: 
    java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask@5242885e
    null


 --- Transition of flow [b9075f13-4075-455a-9bc0-26f25862e50d] ---
  Timestamp: 2023-01-31T07:42:03.791Z
  Event: EnterSubFlow(subFlowClass=class net.corda.core.internal.FetchTransactionsFlow, subFlowVersion=CoreFlow(platformVersion=11), isEnabledTimedFlow=false)
  Actions: 
    
  Continuation: ProcessEvents
  Diff between previous and next state:
checkpoint.checkpointState.subFlowStack: 
    [Inlined(flowClass=class net.corda.samples.obligation.flows.IOUSettleFlowResponder, subFlowVersion=CorDappFlow(platformVersion=11, corDappName=workflows-1.0, corDappHash=8C2322F3ACFF6CA8FE3E7F554352489D40710486D8ED144430A5784441E56717), isEnabledTimedFlow=false), Inlined(flowClass=class net.corda.samples.obligation.flows.IOUSettleFlowResponder$call$signedTransactionFlow$1, subFlowVersion=CoreFlow(platformVersion=11), isEnabledTimedFlow=false), Inlined(flowClass=class net.corda.core.flows.ReceiveTransactionFlow, subFlowVersion=CoreFlow(platformVersion=11), isEnabledTimedFlow=false), Inlined(flowClass=class net.corda.core.internal.ResolveTransactionsFlow, subFlowVersion=CoreFlow(platformVersion=11), isEnabledTimedFlow=false)]
    [Inlined(flowClass=class net.corda.samples.obligation.flows.IOUSettleFlowResponder, subFlowVersion=CorDappFlow(platformVersion=11, corDappName=workflows-1.0, corDappHash=8C2322F3ACFF6CA8FE3E7F554352489D40710486D8ED144430A5784441E56717), isEnabledTimedFlow=false), Inlined(flowClass=class net.corda.samples.obligation.flows.IOUSettleFlowResponder$call$signedTransactionFlow$1, subFlowVersion=CoreFlow(platformVersion=11), isEnabledTimedFlow=false), Inlined(flowClass=class net.corda.core.flows.ReceiveTransactionFlow, subFlowVersion=CoreFlow(platformVersion=11), isEnabledTimedFlow=false), Inlined(flowClass=class net.corda.core.internal.ResolveTransactionsFlow, subFlowVersion=CoreFlow(platformVersion=11), isEnabledTimedFlow=false), Inlined(flowClass=class net.corda.core.internal.FetchTransactionsFlow, subFlowVersion=CoreFlow(platformVersion=11), isEnabledTimedFlow=false)]
checkpoint.timestamp: 
    2023-01-31T07:42:03.787Z
    2023-01-31T07:42:03.791Z


 --- Transition of flow [b9075f13-4075-455a-9bc0-26f25862e50d] ---
  Timestamp: 2023-01-31T07:42:03.792Z
  Event: LeaveSubFlow
  Actions: 
    
  Continuation: ProcessEvents
  Diff between previous and next state:
checkpoint.checkpointState.subFlowStack: 
    [Inlined(flowClass=class net.corda.samples.obligation.flows.IOUSettleFlowResponder, subFlowVersion=CorDappFlow(platformVersion=11, corDappName=workflows-1.0, corDappHash=8C2322F3ACFF6CA8FE3E7F554352489D40710486D8ED144430A5784441E56717), isEnabledTimedFlow=false), Inlined(flowClass=class net.corda.samples.obligation.flows.IOUSettleFlowResponder$call$signedTransactionFlow$1, subFlowVersion=CoreFlow(platformVersion=11), isEnabledTimedFlow=false), Inlined(flowClass=class net.corda.core.flows.ReceiveTransactionFlow, subFlowVersion=CoreFlow(platformVersion=11), isEnabledTimedFlow=false), Inlined(flowClass=class net.corda.core.internal.ResolveTransactionsFlow, subFlowVersion=CoreFlow(platformVersion=11), isEnabledTimedFlow=false), Inlined(flowClass=class net.corda.core.internal.FetchTransactionsFlow, subFlowVersion=CoreFlow(platformVersion=11), isEnabledTimedFlow=false)]
    [Inlined(flowClass=class net.corda.samples.obligation.flows.IOUSettleFlowResponder, subFlowVersion=CorDappFlow(platformVersion=11, corDappName=workflows-1.0, corDappHash=8C2322F3ACFF6CA8FE3E7F554352489D40710486D8ED144430A5784441E56717), isEnabledTimedFlow=false), Inlined(flowClass=class net.corda.samples.obligation.flows.IOUSettleFlowResponder$call$signedTransactionFlow$1, subFlowVersion=CoreFlow(platformVersion=11), isEnabledTimedFlow=false), Inlined(flowClass=class net.corda.core.flows.ReceiveTransactionFlow, subFlowVersion=CoreFlow(platformVersion=11), isEnabledTimedFlow=false), Inlined(flowClass=class net.corda.core.internal.ResolveTransactionsFlow, subFlowVersion=CoreFlow(platformVersion=11), isEnabledTimedFlow=false)]
checkpoint.timestamp: 
    2023-01-31T07:42:03.791Z
    2023-01-31T07:42:03.792Z


 --- Transition of flow [b9075f13-4075-455a-9bc0-26f25862e50d] ---
  Timestamp: 2023-01-31T07:42:03.797Z
  Event: Suspend(ioRequest=Send(sessionToMessage={FlowSessionImpl(destination=O=Mock Company 1, L=London, C=GB, sourceSessionId=SessionId(toLong=8383758276858904125))=768AED61FD2A58D74D7316731407E0600065080E1F3E6397EE4FA5AEFEE79295}), maySkipCheckpoint=false, fiber=FD18C961AC529C997B07690CD3CD815FBA91977F89D9A11DB16AD675967C0964, currentStep=Starting)
  Actions: 
    PersistCheckpoint(id=[b9075f13-4075-455a-9bc0-26f25862e50d], checkpoint=Checkpoint(checkpointState=CheckpointState(invocationContext=InvocationContext(origin=Peer(party=O=Mock Company 1, L=London, C=GB), trace=Trace(invocationId=f89c66b6-c73c-4e25-b500-447e056ac308, timestamp: 2023-01-31T07:42:03.731Z, entityType: Invocation, sessionId=f89c66b6-c73c-4e25-b500-447e056ac308, timestamp: 2023-01-31T07:42:03.731Z, entityType: Session), actor=null, externalTrace=null, impersonatedActor=null, arguments=[], clientId=null), ourIdentity=O=Mock Company 3, L=London, C=GB, sessions={SessionId(toLong=8383758276858904125)=Initiated(peerParty=O=Mock Company 1, L=London, C=GB, peerFlowInfo=FlowInfo(flowVersion=1, appName=<unknown>), receivedMessages=[], otherSideErrored=false, peerSinkSessionId=SessionId(toLong=-7855006138722062871), deduplicationSeed=D--7855006138722062871--5407470294366436114)}, sessionsToBeClosed=[], subFlowStack=[Inlined(flowClass=class net.corda.samples.obligation.flows.IOUSettleFlowResponder, subFlowVersion=CorDappFlow(platformVersion=11, corDappName=workflows-1.0, corDappHash=8C2322F3ACFF6CA8FE3E7F554352489D40710486D8ED144430A5784441E56717), isEnabledTimedFlow=false), Inlined(flowClass=class net.corda.samples.obligation.flows.IOUSettleFlowResponder$call$signedTransactionFlow$1, subFlowVersion=CoreFlow(platformVersion=11), isEnabledTimedFlow=false), Inlined(flowClass=class net.corda.core.flows.ReceiveTransactionFlow, subFlowVersion=CoreFlow(platformVersion=11), isEnabledTimedFlow=false), Inlined(flowClass=class net.corda.core.internal.ResolveTransactionsFlow, subFlowVersion=CoreFlow(platformVersion=11), isEnabledTimedFlow=false)], numberOfSuspends=4, numberOfCommits=5), flowState=Started(flowIORequest=Send(sessionToMessage={FlowSessionImpl(destination=O=Mock Company 1, L=London, C=GB, sourceSessionId=SessionId(toLong=8383758276858904125))=768AED61FD2A58D74D7316731407E0600065080E1F3E6397EE4FA5AEFEE79295}), frozenFiber=FD18C961AC529C997B07690CD3CD815FBA91977F89D9A11DB16AD675967C0964), errorState=Clean, result=null, status=RUNNABLE, progressStep=Starting, flowIoRequest=Send, compatible=true), isCheckpointUpdate=true)
    PersistDeduplicationFacts(deduplicationHandlers=[])
    CommitTransaction
    AcknowledgeMessages(deduplicationHandlers=[])
    ScheduleEvent(event=DoRemainingWork)
  Continuation: ProcessEvents
  Diff between previous and next state:
isFlowResumed: 
    true
    false
numberOfCommits: 
    4
    5
checkpoint.flowIoRequest: 
    Sleep
    Send
checkpoint.checkpointState.numberOfCommits: 
    4
    5
checkpoint.checkpointState.numberOfSuspends: 
    3
    4
checkpoint.flowState.flowIORequest: 
    Sleep(wakeUpAfter=2023-01-31T07:42:03.785Z)
    Send(sessionToMessage={FlowSessionImpl(destination=O=Mock Company 1, L=London, C=GB, sourceSessionId=SessionId(toLong=8383758276858904125))=768AED61FD2A58D74D7316731407E0600065080E1F3E6397EE4FA5AEFEE79295})
checkpoint.flowState.frozenFiber.hash: 
    6B4088ADCF0CE246E35F303D8C9E5D0A04E29659BF005B5C557CCE5A8D1720BE
    FD18C961AC529C997B07690CD3CD815FBA91977F89D9A11DB16AD675967C0964
checkpoint.timestamp: 
    2023-01-31T07:42:03.792Z
    2023-01-31T07:42:03.796Z


 --- Transition of flow [b9075f13-4075-455a-9bc0-26f25862e50d] ---
  Timestamp: 2023-01-31T07:42:03.798Z
  Event: DoRemainingWork
  Actions: 
    SendMultiple(sendInitial=[], sendExisting=[SendExisting(peerParty=O=Mock Company 1, L=London, C=GB, message=ExistingSessionMessage(recipientSessionId=SessionId(toLong=-7855006138722062871), payload=DataSessionMessage(payload=class net.corda.core.serialization.SerializedBytes)), deduplicationId=SenderDeduplicationId(deduplicationId=DeduplicationId(toString=N-D--7855006138722062871--5407470294366436114-4-0), senderUUID=06d1057a-f6bc-49f1-bbda-e49059d9fc5a))])
    CreateTransaction
  Continuation: Resume(result=class kotlin.Unit)
  Diff between previous and next state:
isFlowResumed: 
    false
    true


 --- Transition of flow [b9075f13-4075-455a-9bc0-26f25862e50d] ---
  Timestamp: 2023-01-31T07:42:03.866Z
  Event: LeaveSubFlow
  Actions: 
    
  Continuation: ProcessEvents
  Diff between previous and next state:
checkpoint.checkpointState.subFlowStack: 
    [Inlined(flowClass=class net.corda.samples.obligation.flows.IOUSettleFlowResponder, subFlowVersion=CorDappFlow(platformVersion=11, corDappName=workflows-1.0, corDappHash=8C2322F3ACFF6CA8FE3E7F554352489D40710486D8ED144430A5784441E56717), isEnabledTimedFlow=false), Inlined(flowClass=class net.corda.samples.obligation.flows.IOUSettleFlowResponder$call$signedTransactionFlow$1, subFlowVersion=CoreFlow(platformVersion=11), isEnabledTimedFlow=false), Inlined(flowClass=class net.corda.core.flows.ReceiveTransactionFlow, subFlowVersion=CoreFlow(platformVersion=11), isEnabledTimedFlow=false), Inlined(flowClass=class net.corda.core.internal.ResolveTransactionsFlow, subFlowVersion=CoreFlow(platformVersion=11), isEnabledTimedFlow=false)]
    [Inlined(flowClass=class net.corda.samples.obligation.flows.IOUSettleFlowResponder, subFlowVersion=CorDappFlow(platformVersion=11, corDappName=workflows-1.0, corDappHash=8C2322F3ACFF6CA8FE3E7F554352489D40710486D8ED144430A5784441E56717), isEnabledTimedFlow=false), Inlined(flowClass=class net.corda.samples.obligation.flows.IOUSettleFlowResponder$call$signedTransactionFlow$1, subFlowVersion=CoreFlow(platformVersion=11), isEnabledTimedFlow=false), Inlined(flowClass=class net.corda.core.flows.ReceiveTransactionFlow, subFlowVersion=CoreFlow(platformVersion=11), isEnabledTimedFlow=false)]
checkpoint.timestamp: 
    2023-01-31T07:42:03.798Z
    2023-01-31T07:42:03.866Z


 --- Transition of flow [b9075f13-4075-455a-9bc0-26f25862e50d] ---
  Timestamp: 2023-01-31T07:42:04.139Z
  Event: LeaveSubFlow
  Actions: 
    
  Continuation: ProcessEvents
  Diff between previous and next state:
checkpoint.checkpointState.subFlowStack: 
    [Inlined(flowClass=class net.corda.samples.obligation.flows.IOUSettleFlowResponder, subFlowVersion=CorDappFlow(platformVersion=11, corDappName=workflows-1.0, corDappHash=8C2322F3ACFF6CA8FE3E7F554352489D40710486D8ED144430A5784441E56717), isEnabledTimedFlow=false), Inlined(flowClass=class net.corda.samples.obligation.flows.IOUSettleFlowResponder$call$signedTransactionFlow$1, subFlowVersion=CoreFlow(platformVersion=11), isEnabledTimedFlow=false), Inlined(flowClass=class net.corda.core.flows.ReceiveTransactionFlow, subFlowVersion=CoreFlow(platformVersion=11), isEnabledTimedFlow=false)]
    [Inlined(flowClass=class net.corda.samples.obligation.flows.IOUSettleFlowResponder, subFlowVersion=CorDappFlow(platformVersion=11, corDappName=workflows-1.0, corDappHash=8C2322F3ACFF6CA8FE3E7F554352489D40710486D8ED144430A5784441E56717), isEnabledTimedFlow=false), Inlined(flowClass=class net.corda.samples.obligation.flows.IOUSettleFlowResponder$call$signedTransactionFlow$1, subFlowVersion=CoreFlow(platformVersion=11), isEnabledTimedFlow=false)]
checkpoint.timestamp: 
    2023-01-31T07:42:03.866Z
    2023-01-31T07:42:04.139Z


 --- Transition of flow [b9075f13-4075-455a-9bc0-26f25862e50d] ---
  Timestamp: 2023-01-31T07:42:04.143Z
  Event: Suspend(ioRequest=Receive(sessions=[FlowSessionImpl(destination=O=Mock Company 1, L=London, C=GB, sourceSessionId=SessionId(toLong=8383758276858904125))]), maySkipCheckpoint=false, fiber=6C374E14660C7B3DA26F89BB0741E8F0199E6DFC1EC5DAB7AB2FE948E0B6003C, currentStep=Starting)
  Actions: 
    PersistCheckpoint(id=[b9075f13-4075-455a-9bc0-26f25862e50d], checkpoint=Checkpoint(checkpointState=CheckpointState(invocationContext=InvocationContext(origin=Peer(party=O=Mock Company 1, L=London, C=GB), trace=Trace(invocationId=f89c66b6-c73c-4e25-b500-447e056ac308, timestamp: 2023-01-31T07:42:03.731Z, entityType: Invocation, sessionId=f89c66b6-c73c-4e25-b500-447e056ac308, timestamp: 2023-01-31T07:42:03.731Z, entityType: Session), actor=null, externalTrace=null, impersonatedActor=null, arguments=[], clientId=null), ourIdentity=O=Mock Company 3, L=London, C=GB, sessions={SessionId(toLong=8383758276858904125)=Initiated(peerParty=O=Mock Company 1, L=London, C=GB, peerFlowInfo=FlowInfo(flowVersion=1, appName=<unknown>), receivedMessages=[], otherSideErrored=false, peerSinkSessionId=SessionId(toLong=-7855006138722062871), deduplicationSeed=D--7855006138722062871--5407470294366436114)}, sessionsToBeClosed=[], subFlowStack=[Inlined(flowClass=class net.corda.samples.obligation.flows.IOUSettleFlowResponder, subFlowVersion=CorDappFlow(platformVersion=11, corDappName=workflows-1.0, corDappHash=8C2322F3ACFF6CA8FE3E7F554352489D40710486D8ED144430A5784441E56717), isEnabledTimedFlow=false), Inlined(flowClass=class net.corda.samples.obligation.flows.IOUSettleFlowResponder$call$signedTransactionFlow$1, subFlowVersion=CoreFlow(platformVersion=11), isEnabledTimedFlow=false)], numberOfSuspends=5, numberOfCommits=6), flowState=Started(flowIORequest=Receive(sessions=[FlowSessionImpl(destination=O=Mock Company 1, L=London, C=GB, sourceSessionId=SessionId(toLong=8383758276858904125))]), frozenFiber=6C374E14660C7B3DA26F89BB0741E8F0199E6DFC1EC5DAB7AB2FE948E0B6003C), errorState=Clean, result=null, status=RUNNABLE, progressStep=Starting, flowIoRequest=Receive, compatible=true), isCheckpointUpdate=true)
    PersistDeduplicationFacts(deduplicationHandlers=[])
    CommitTransaction
    AcknowledgeMessages(deduplicationHandlers=[])
    ScheduleEvent(event=DoRemainingWork)
  Continuation: ProcessEvents
  Diff between previous and next state:
isFlowResumed: 
    true
    false
numberOfCommits: 
    5
    6
checkpoint.flowIoRequest: 
    Send
    Receive
checkpoint.checkpointState.numberOfCommits: 
    5
    6
checkpoint.checkpointState.numberOfSuspends: 
    4
    5
checkpoint.flowState.flowIORequest: 
    Send(sessionToMessage={FlowSessionImpl(destination=O=Mock Company 1, L=London, C=GB, sourceSessionId=SessionId(toLong=8383758276858904125))=768AED61FD2A58D74D7316731407E0600065080E1F3E6397EE4FA5AEFEE79295})
    Receive(sessions=[FlowSessionImpl(destination=O=Mock Company 1, L=London, C=GB, sourceSessionId=SessionId(toLong=8383758276858904125))])
checkpoint.flowState.frozenFiber.hash: 
    FD18C961AC529C997B07690CD3CD815FBA91977F89D9A11DB16AD675967C0964
    6C374E14660C7B3DA26F89BB0741E8F0199E6DFC1EC5DAB7AB2FE948E0B6003C
checkpoint.timestamp: 
    2023-01-31T07:42:04.139Z
    2023-01-31T07:42:04.141Z


 --- Transition of flow [b9075f13-4075-455a-9bc0-26f25862e50d] ---
  Timestamp: 2023-01-31T07:42:04.143Z
  Event: DoRemainingWork
  Actions: 
    
  Continuation: ProcessEvents
  Diff between previous and next state:
null

 --- Transition of flow [b9075f13-4075-455a-9bc0-26f25862e50d] ---
  Timestamp: 2023-01-31T07:42:04.154Z
  Event: DeliverSessionMessage(sessionMessage=ExistingSessionMessage(recipientSessionId=SessionId(toLong=8383758276858904125), payload=DataSessionMessage(payload=class net.corda.core.serialization.SerializedBytes)), deduplicationHandler=net.corda.testing.node.internal.MockNodeMessagingService$InMemoryDeduplicationHandler@1e325456, sender=O=Mock Company 1, L=London, C=GB)
  Actions: 
    ScheduleEvent(event=DoRemainingWork)
  Continuation: ProcessEvents
  Diff between previous and next state:
pendingDeduplicationHandlers: 
    []
    [net.corda.testing.node.internal.MockNodeMessagingService$InMemoryDeduplicationHandler@1e325456]
checkpoint.checkpointState.sessions.SessionId(toLong=8383758276858904125).receivedMessages.isEmpty: 
    true
    false
checkpoint.timestamp: 
    2023-01-31T07:42:04.143Z
    2023-01-31T07:42:04.154Z


 --- Transition of flow [b9075f13-4075-455a-9bc0-26f25862e50d] ---
  Timestamp: 2023-01-31T07:42:04.154Z
  Event: DoRemainingWork
  Actions: 
    CreateTransaction
  Continuation: Resume(result=class java.util.LinkedHashMap)
  Diff between previous and next state:
isFlowResumed: 
    false
    true
checkpoint.checkpointState.sessions.SessionId(toLong=8383758276858904125).receivedMessages.isEmpty: 
    false
    true


 --- Transition of flow [b9075f13-4075-455a-9bc0-26f25862e50d] ---
  Timestamp: 2023-01-31T07:42:04.162Z
  Event: Suspend(ioRequest=Send(sessionToMessage={FlowSessionImpl(destination=O=Mock Company 1, L=London, C=GB, sourceSessionId=SessionId(toLong=8383758276858904125))=0B3E7A99B785C1F8B82DEB6594D9A9FC789E4CF3ECC68194E62FB63CC97B14D3}), maySkipCheckpoint=false, fiber=98F3009433C39551699CA71CC8ED0F432EEF2B35BED9998E504117538CFA94BF, currentStep=Starting)
  Actions: 
    PersistCheckpoint(id=[b9075f13-4075-455a-9bc0-26f25862e50d], checkpoint=Checkpoint(checkpointState=CheckpointState(invocationContext=InvocationContext(origin=Peer(party=O=Mock Company 1, L=London, C=GB), trace=Trace(invocationId=f89c66b6-c73c-4e25-b500-447e056ac308, timestamp: 2023-01-31T07:42:03.731Z, entityType: Invocation, sessionId=f89c66b6-c73c-4e25-b500-447e056ac308, timestamp: 2023-01-31T07:42:03.731Z, entityType: Session), actor=null, externalTrace=null, impersonatedActor=null, arguments=[], clientId=null), ourIdentity=O=Mock Company 3, L=London, C=GB, sessions={SessionId(toLong=8383758276858904125)=Initiated(peerParty=O=Mock Company 1, L=London, C=GB, peerFlowInfo=FlowInfo(flowVersion=1, appName=<unknown>), receivedMessages=[], otherSideErrored=false, peerSinkSessionId=SessionId(toLong=-7855006138722062871), deduplicationSeed=D--7855006138722062871--5407470294366436114)}, sessionsToBeClosed=[], subFlowStack=[Inlined(flowClass=class net.corda.samples.obligation.flows.IOUSettleFlowResponder, subFlowVersion=CorDappFlow(platformVersion=11, corDappName=workflows-1.0, corDappHash=8C2322F3ACFF6CA8FE3E7F554352489D40710486D8ED144430A5784441E56717), isEnabledTimedFlow=false), Inlined(flowClass=class net.corda.samples.obligation.flows.IOUSettleFlowResponder$call$signedTransactionFlow$1, subFlowVersion=CoreFlow(platformVersion=11), isEnabledTimedFlow=false)], numberOfSuspends=6, numberOfCommits=7), flowState=Started(flowIORequest=Send(sessionToMessage={FlowSessionImpl(destination=O=Mock Company 1, L=London, C=GB, sourceSessionId=SessionId(toLong=8383758276858904125))=0B3E7A99B785C1F8B82DEB6594D9A9FC789E4CF3ECC68194E62FB63CC97B14D3}), frozenFiber=98F3009433C39551699CA71CC8ED0F432EEF2B35BED9998E504117538CFA94BF), errorState=Clean, result=null, status=RUNNABLE, progressStep=Starting, flowIoRequest=Send, compatible=true), isCheckpointUpdate=true)
    PersistDeduplicationFacts(deduplicationHandlers=[net.corda.testing.node.internal.MockNodeMessagingService$InMemoryDeduplicationHandler@1e325456])
    CommitTransaction
    AcknowledgeMessages(deduplicationHandlers=[net.corda.testing.node.internal.MockNodeMessagingService$InMemoryDeduplicationHandler@1e325456])
    ScheduleEvent(event=DoRemainingWork)
  Continuation: ProcessEvents
  Diff between previous and next state:
pendingDeduplicationHandlers: 
    [net.corda.testing.node.internal.MockNodeMessagingService$InMemoryDeduplicationHandler@1e325456]
    []
isFlowResumed: 
    true
    false
numberOfCommits: 
    6
    7
checkpoint.flowIoRequest: 
    Receive
    Send
checkpoint.checkpointState.numberOfCommits: 
    6
    7
checkpoint.checkpointState.numberOfSuspends: 
    5
    6
checkpoint.flowState.flowIORequest: 
    Receive(sessions=[FlowSessionImpl(destination=O=Mock Company 1, L=London, C=GB, sourceSessionId=SessionId(toLong=8383758276858904125))])
    Send(sessionToMessage={FlowSessionImpl(destination=O=Mock Company 1, L=London, C=GB, sourceSessionId=SessionId(toLong=8383758276858904125))=0B3E7A99B785C1F8B82DEB6594D9A9FC789E4CF3ECC68194E62FB63CC97B14D3})
checkpoint.flowState.frozenFiber.hash: 
    6C374E14660C7B3DA26F89BB0741E8F0199E6DFC1EC5DAB7AB2FE948E0B6003C
    98F3009433C39551699CA71CC8ED0F432EEF2B35BED9998E504117538CFA94BF
checkpoint.timestamp: 
    2023-01-31T07:42:04.154Z
    2023-01-31T07:42:04.161Z


 --- Transition of flow [b9075f13-4075-455a-9bc0-26f25862e50d] ---
  Timestamp: 2023-01-31T07:42:04.163Z
  Event: DoRemainingWork
  Actions: 
    SendMultiple(sendInitial=[], sendExisting=[SendExisting(peerParty=O=Mock Company 1, L=London, C=GB, message=ExistingSessionMessage(recipientSessionId=SessionId(toLong=-7855006138722062871), payload=DataSessionMessage(payload=class net.corda.core.serialization.SerializedBytes)), deduplicationId=SenderDeduplicationId(deduplicationId=DeduplicationId(toString=N-D--7855006138722062871--5407470294366436114-6-0), senderUUID=06d1057a-f6bc-49f1-bbda-e49059d9fc5a))])
    CreateTransaction
  Continuation: Resume(result=class kotlin.Unit)
  Diff between previous and next state:
isFlowResumed: 
    false
    true


 --- Transition of flow [b9075f13-4075-455a-9bc0-26f25862e50d] ---
  Timestamp: 2023-01-31T07:42:04.163Z
  Event: LeaveSubFlow
  Actions: 
    
  Continuation: ProcessEvents
  Diff between previous and next state:
checkpoint.checkpointState.subFlowStack: 
    [Inlined(flowClass=class net.corda.samples.obligation.flows.IOUSettleFlowResponder, subFlowVersion=CorDappFlow(platformVersion=11, corDappName=workflows-1.0, corDappHash=8C2322F3ACFF6CA8FE3E7F554352489D40710486D8ED144430A5784441E56717), isEnabledTimedFlow=false), Inlined(flowClass=class net.corda.samples.obligation.flows.IOUSettleFlowResponder$call$signedTransactionFlow$1, subFlowVersion=CoreFlow(platformVersion=11), isEnabledTimedFlow=false)]
    [Inlined(flowClass=class net.corda.samples.obligation.flows.IOUSettleFlowResponder, subFlowVersion=CorDappFlow(platformVersion=11, corDappName=workflows-1.0, corDappHash=8C2322F3ACFF6CA8FE3E7F554352489D40710486D8ED144430A5784441E56717), isEnabledTimedFlow=false)]
checkpoint.timestamp: 
    2023-01-31T07:42:04.162Z
    2023-01-31T07:42:04.163Z


 --- Transition of flow [b9075f13-4075-455a-9bc0-26f25862e50d] ---
  Timestamp: 2023-01-31T07:42:04.163Z
  Event: EnterSubFlow(subFlowClass=class net.corda.core.flows.ReceiveFinalityFlow, subFlowVersion=CoreFlow(platformVersion=11), isEnabledTimedFlow=false)
  Actions: 
    
  Continuation: ProcessEvents
  Diff between previous and next state:
checkpoint.checkpointState.subFlowStack: 
    [Inlined(flowClass=class net.corda.samples.obligation.flows.IOUSettleFlowResponder, subFlowVersion=CorDappFlow(platformVersion=11, corDappName=workflows-1.0, corDappHash=8C2322F3ACFF6CA8FE3E7F554352489D40710486D8ED144430A5784441E56717), isEnabledTimedFlow=false)]
    [Inlined(flowClass=class net.corda.samples.obligation.flows.IOUSettleFlowResponder, subFlowVersion=CorDappFlow(platformVersion=11, corDappName=workflows-1.0, corDappHash=8C2322F3ACFF6CA8FE3E7F554352489D40710486D8ED144430A5784441E56717), isEnabledTimedFlow=false), Inlined(flowClass=class net.corda.core.flows.ReceiveFinalityFlow, subFlowVersion=CoreFlow(platformVersion=11), isEnabledTimedFlow=false)]


 --- Transition of flow [b9075f13-4075-455a-9bc0-26f25862e50d] ---
  Timestamp: 2023-01-31T07:42:04.163Z
  Event: EnterSubFlow(subFlowClass=class net.corda.core.flows.ReceiveFinalityFlow$call$1, subFlowVersion=CoreFlow(platformVersion=11), isEnabledTimedFlow=false)
  Actions: 
    
  Continuation: ProcessEvents
  Diff between previous and next state:
checkpoint.checkpointState.subFlowStack: 
    [Inlined(flowClass=class net.corda.samples.obligation.flows.IOUSettleFlowResponder, subFlowVersion=CorDappFlow(platformVersion=11, corDappName=workflows-1.0, corDappHash=8C2322F3ACFF6CA8FE3E7F554352489D40710486D8ED144430A5784441E56717), isEnabledTimedFlow=false), Inlined(flowClass=class net.corda.core.flows.ReceiveFinalityFlow, subFlowVersion=CoreFlow(platformVersion=11), isEnabledTimedFlow=false)]
    [Inlined(flowClass=class net.corda.samples.obligation.flows.IOUSettleFlowResponder, subFlowVersion=CorDappFlow(platformVersion=11, corDappName=workflows-1.0, corDappHash=8C2322F3ACFF6CA8FE3E7F554352489D40710486D8ED144430A5784441E56717), isEnabledTimedFlow=false), Inlined(flowClass=class net.corda.core.flows.ReceiveFinalityFlow, subFlowVersion=CoreFlow(platformVersion=11), isEnabledTimedFlow=false), Inlined(flowClass=class net.corda.core.flows.ReceiveFinalityFlow$call$1, subFlowVersion=CoreFlow(platformVersion=11), isEnabledTimedFlow=false)]


 --- Transition of flow [b9075f13-4075-455a-9bc0-26f25862e50d] ---
  Timestamp: 2023-01-31T07:42:04.166Z
  Event: Suspend(ioRequest=Receive(sessions=[FlowSessionImpl(destination=O=Mock Company 1, L=London, C=GB, sourceSessionId=SessionId(toLong=8383758276858904125))]), maySkipCheckpoint=false, fiber=8D886AA3AE154E1BDCBCC4271AE116463F78A50DBC8A22F0B849307DBEF3260D, currentStep=Starting)
  Actions: 
    PersistCheckpoint(id=[b9075f13-4075-455a-9bc0-26f25862e50d], checkpoint=Checkpoint(checkpointState=CheckpointState(invocationContext=InvocationContext(origin=Peer(party=O=Mock Company 1, L=London, C=GB), trace=Trace(invocationId=f89c66b6-c73c-4e25-b500-447e056ac308, timestamp: 2023-01-31T07:42:03.731Z, entityType: Invocation, sessionId=f89c66b6-c73c-4e25-b500-447e056ac308, timestamp: 2023-01-31T07:42:03.731Z, entityType: Session), actor=null, externalTrace=null, impersonatedActor=null, arguments=[], clientId=null), ourIdentity=O=Mock Company 3, L=London, C=GB, sessions={SessionId(toLong=8383758276858904125)=Initiated(peerParty=O=Mock Company 1, L=London, C=GB, peerFlowInfo=FlowInfo(flowVersion=1, appName=<unknown>), receivedMessages=[], otherSideErrored=false, peerSinkSessionId=SessionId(toLong=-7855006138722062871), deduplicationSeed=D--7855006138722062871--5407470294366436114)}, sessionsToBeClosed=[], subFlowStack=[Inlined(flowClass=class net.corda.samples.obligation.flows.IOUSettleFlowResponder, subFlowVersion=CorDappFlow(platformVersion=11, corDappName=workflows-1.0, corDappHash=8C2322F3ACFF6CA8FE3E7F554352489D40710486D8ED144430A5784441E56717), isEnabledTimedFlow=false), Inlined(flowClass=class net.corda.core.flows.ReceiveFinalityFlow, subFlowVersion=CoreFlow(platformVersion=11), isEnabledTimedFlow=false), Inlined(flowClass=class net.corda.core.flows.ReceiveFinalityFlow$call$1, subFlowVersion=CoreFlow(platformVersion=11), isEnabledTimedFlow=false)], numberOfSuspends=7, numberOfCommits=8), flowState=Started(flowIORequest=Receive(sessions=[FlowSessionImpl(destination=O=Mock Company 1, L=London, C=GB, sourceSessionId=SessionId(toLong=8383758276858904125))]), frozenFiber=8D886AA3AE154E1BDCBCC4271AE116463F78A50DBC8A22F0B849307DBEF3260D), errorState=Clean, result=null, status=RUNNABLE, progressStep=Starting, flowIoRequest=Receive, compatible=true), isCheckpointUpdate=true)
    PersistDeduplicationFacts(deduplicationHandlers=[])
    CommitTransaction
    AcknowledgeMessages(deduplicationHandlers=[])
    ScheduleEvent(event=DoRemainingWork)
  Continuation: ProcessEvents
  Diff between previous and next state:
isFlowResumed: 
    true
    false
numberOfCommits: 
    7
    8
checkpoint.flowIoRequest: 
    Send
    Receive
checkpoint.checkpointState.numberOfCommits: 
    7
    8
checkpoint.checkpointState.numberOfSuspends: 
    6
    7
checkpoint.flowState.flowIORequest: 
    Send(sessionToMessage={FlowSessionImpl(destination=O=Mock Company 1, L=London, C=GB, sourceSessionId=SessionId(toLong=8383758276858904125))=0B3E7A99B785C1F8B82DEB6594D9A9FC789E4CF3ECC68194E62FB63CC97B14D3})
    Receive(sessions=[FlowSessionImpl(destination=O=Mock Company 1, L=London, C=GB, sourceSessionId=SessionId(toLong=8383758276858904125))])
checkpoint.flowState.frozenFiber.hash: 
    98F3009433C39551699CA71CC8ED0F432EEF2B35BED9998E504117538CFA94BF
    8D886AA3AE154E1BDCBCC4271AE116463F78A50DBC8A22F0B849307DBEF3260D
checkpoint.timestamp: 
    2023-01-31T07:42:04.163Z
    2023-01-31T07:42:04.164Z


 --- Transition of flow [b9075f13-4075-455a-9bc0-26f25862e50d] ---
  Timestamp: 2023-01-31T07:42:04.167Z
  Event: DoRemainingWork
  Actions: 
    
  Continuation: ProcessEvents
  Diff between previous and next state:
null

 --- Transition of flow [b9075f13-4075-455a-9bc0-26f25862e50d] ---
  Timestamp: 2023-01-31T07:42:04.303Z
  Event: DeliverSessionMessage(sessionMessage=ExistingSessionMessage(recipientSessionId=SessionId(toLong=8383758276858904125), payload=ErrorSessionMessage(flowException=null, errorId=934314092166762226)), deduplicationHandler=net.corda.testing.node.internal.MockNodeMessagingService$InMemoryDeduplicationHandler@2599684a, sender=O=Mock Company 1, L=London, C=GB)
  Actions: 
    ScheduleEvent(event=DoRemainingWork)
  Continuation: ProcessEvents
  Diff between previous and next state:
pendingDeduplicationHandlers: 
    []
    [net.corda.testing.node.internal.MockNodeMessagingService$InMemoryDeduplicationHandler@2599684a]
checkpoint.checkpointState.sessions.SessionId(toLong=8383758276858904125).receivedMessages.isEmpty: 
    true
    false
checkpoint.timestamp: 
    2023-01-31T07:42:04.166Z
    2023-01-31T07:42:04.303Z


 --- Transition of flow [b9075f13-4075-455a-9bc0-26f25862e50d] ---
  Timestamp: 2023-01-31T07:42:04.304Z
  Event: DoRemainingWork
  Actions: 
    CreateTransaction
  Continuation: Throw(throwable=net.corda.core.flows.UnexpectedFlowEndException: Counter-flow errored)
  Diff between previous and next state:
isFlowResumed: 
    false
    true
checkpoint.checkpointState.sessions.SessionId(toLong=8383758276858904125).otherSideErrored: 
    false
    true
checkpoint.checkpointState.sessions.SessionId(toLong=8383758276858904125).receivedMessages.isEmpty: 
    false
    true
checkpoint.timestamp: 
    2023-01-31T07:42:04.303Z
    2023-01-31T07:42:04.304Z


 --- Transition of flow [b9075f13-4075-455a-9bc0-26f25862e50d] ---
  Timestamp: 2023-01-31T07:42:04.304Z
  Event: LeaveSubFlow
  Actions: 
    
  Continuation: ProcessEvents
  Diff between previous and next state:
checkpoint.checkpointState.subFlowStack: 
    [Inlined(flowClass=class net.corda.samples.obligation.flows.IOUSettleFlowResponder, subFlowVersion=CorDappFlow(platformVersion=11, corDappName=workflows-1.0, corDappHash=8C2322F3ACFF6CA8FE3E7F554352489D40710486D8ED144430A5784441E56717), isEnabledTimedFlow=false), Inlined(flowClass=class net.corda.core.flows.ReceiveFinalityFlow, subFlowVersion=CoreFlow(platformVersion=11), isEnabledTimedFlow=false), Inlined(flowClass=class net.corda.core.flows.ReceiveFinalityFlow$call$1, subFlowVersion=CoreFlow(platformVersion=11), isEnabledTimedFlow=false)]
    [Inlined(flowClass=class net.corda.samples.obligation.flows.IOUSettleFlowResponder, subFlowVersion=CorDappFlow(platformVersion=11, corDappName=workflows-1.0, corDappHash=8C2322F3ACFF6CA8FE3E7F554352489D40710486D8ED144430A5784441E56717), isEnabledTimedFlow=false), Inlined(flowClass=class net.corda.core.flows.ReceiveFinalityFlow, subFlowVersion=CoreFlow(platformVersion=11), isEnabledTimedFlow=false)]


 --- Transition of flow [b9075f13-4075-455a-9bc0-26f25862e50d] ---
  Timestamp: 2023-01-31T07:42:04.304Z
  Event: LeaveSubFlow
  Actions: 
    
  Continuation: ProcessEvents
  Diff between previous and next state:
checkpoint.checkpointState.subFlowStack: 
    [Inlined(flowClass=class net.corda.samples.obligation.flows.IOUSettleFlowResponder, subFlowVersion=CorDappFlow(platformVersion=11, corDappName=workflows-1.0, corDappHash=8C2322F3ACFF6CA8FE3E7F554352489D40710486D8ED144430A5784441E56717), isEnabledTimedFlow=false), Inlined(flowClass=class net.corda.core.flows.ReceiveFinalityFlow, subFlowVersion=CoreFlow(platformVersion=11), isEnabledTimedFlow=false)]
    [Inlined(flowClass=class net.corda.samples.obligation.flows.IOUSettleFlowResponder, subFlowVersion=CorDappFlow(platformVersion=11, corDappName=workflows-1.0, corDappHash=8C2322F3ACFF6CA8FE3E7F554352489D40710486D8ED144430A5784441E56717), isEnabledTimedFlow=false)]


 --- Transition of flow [b9075f13-4075-455a-9bc0-26f25862e50d] ---
  Timestamp: 2023-01-31T07:42:04.306Z
  Event: Error(exception=net.corda.core.flows.UnexpectedFlowEndException: Counter-flow errored, rollback=true)
  Actions: 
    RollbackTransaction
    ScheduleEvent(event=DoRemainingWork)
  Continuation: ProcessEvents
  Diff between previous and next state:
isFlowResumed: 
    true
    false
checkpoint.errorState: 
    Clean
    Errored(errors=[FlowError(errorId=934314092166762226, exception=net.corda.core.flows.UnexpectedFlowEndException: Counter-flow errored)], propagatedIndex=0, propagating=false)


 --- Transition of flow [b9075f13-4075-455a-9bc0-26f25862e50d] ---
  Timestamp: 2023-01-31T07:42:04.306Z
  Event: DoRemainingWork
  Actions: 
    
  Continuation: ProcessEvents
  Diff between previous and next state:
null

 --- Transition of flow [b9075f13-4075-455a-9bc0-26f25862e50d] ---
  Timestamp: 2023-01-31T07:42:04.306Z
  Event: StartErrorPropagation
  Actions: 
    ScheduleEvent(event=DoRemainingWork)
  Continuation: ProcessEvents
  Diff between previous and next state:
checkpoint.errorState.propagating: 
    false
    true
checkpoint.timestamp: 
    2023-01-31T07:42:04.304Z
    2023-01-31T07:42:04.306Z
 {fiber-id=10000029, flow-id=b9075f13-4075-455a-9bc0-26f25862e50d, invocation_id=f89c66b6-c73c-4e25-b500-447e056ac308, invocation_timestamp=2023-01-31T07:42:03.731Z, origin=O=Mock Company 1, L=London, C=GB, session_id=f89c66b6-c73c-4e25-b500-447e056ac308, session_timestamp=2023-01-31T07:42:03.731Z, thread-id=858, tx_id=55A76480A2D34BE067B32C0D7A6E787BEB22BC8E172C25AD05FE08B4B68BDB46}
[WARN ] 2023-01-31T07:42:04,326Z [Mock network] interceptors.DumpHistoryOnErrorInterceptor. - Flow [b9075f13-4075-455a-9bc0-26f25862e50d] error {fiber-id=10000029, flow-id=b9075f13-4075-455a-9bc0-26f25862e50d, invocation_id=f89c66b6-c73c-4e25-b500-447e056ac308, invocation_timestamp=2023-01-31T07:42:03.731Z, origin=O=Mock Company 1, L=London, C=GB, session_id=f89c66b6-c73c-4e25-b500-447e056ac308, session_timestamp=2023-01-31T07:42:03.731Z, thread-id=858, tx_id=55A76480A2D34BE067B32C0D7A6E787BEB22BC8E172C25AD05FE08B4B68BDB46}
net.corda.core.flows.UnexpectedFlowEndException: Counter-flow errored
	at Received unexpected counter-flow exception from peer O=Mock Company 1, L=London, C=GB.() ~[?:?]
	at net.corda.node.services.statemachine.FlowStateMachineImpl.fillInLocalStackTrace(FlowStateMachineImpl.kt:244) ~[corda-node-4.9.jar:?]
	at net.corda.node.services.statemachine.FlowStateMachineImpl.processEventsUntilFlowIsResumed(FlowStateMachineImpl.kt:225) ~[corda-node-4.9.jar:?]
	at net.corda.node.services.statemachine.FlowStateMachineImpl.suspend(FlowStateMachineImpl.kt:577) ~[corda-node-4.9.jar:?]
	at net.corda.node.services.statemachine.FlowSessionImpl.receive(FlowSessionImpl.kt:67) ~[corda-node-4.9.jar:?]
	at net.corda.node.services.statemachine.FlowSessionImpl.receive(FlowSessionImpl.kt:71) ~[corda-node-4.9.jar:?]
	at net.corda.core.flows.ReceiveTransactionFlow.call(ReceiveTransactionFlow.kt:103) ~[corda-core-4.9.jar:?]
	at net.corda.core.flows.ReceiveTransactionFlow.call(ReceiveTransactionFlow.kt:31) ~[corda-core-4.9.jar:?]
	at net.corda.node.services.statemachine.FlowStateMachineImpl.subFlow(FlowStateMachineImpl.kt:420) ~[corda-node-4.9.jar:?]
	at net.corda.core.flows.FlowLogic.subFlow(FlowLogic.kt:409) ~[corda-core-4.9.jar:?]
	at net.corda.core.flows.ReceiveFinalityFlow.call(FinalityFlow.kt:285) ~[corda-core-4.9.jar:?]
	at net.corda.core.flows.ReceiveFinalityFlow.call(FinalityFlow.kt:280) ~[corda-core-4.9.jar:?]
	at net.corda.node.services.statemachine.FlowStateMachineImpl.subFlow(FlowStateMachineImpl.kt:420) ~[corda-node-4.9.jar:?]
	at net.corda.core.flows.FlowLogic.subFlow(FlowLogic.kt:409) ~[corda-core-4.9.jar:?]
	at net.corda.samples.obligation.flows.IOUSettleFlowResponder.call(IOUSettleFlow.kt:139) ~[main/:?]
	at net.corda.samples.obligation.flows.IOUSettleFlowResponder.call(IOUSettleFlow.kt:126) ~[main/:?]
	at net.corda.node.services.statemachine.FlowStateMachineImpl.run(FlowStateMachineImpl.kt:349) ~[corda-node-4.9.jar:?]
	at net.corda.node.services.statemachine.FlowStateMachineImpl.run(FlowStateMachineImpl.kt:71) ~[corda-node-4.9.jar:?]
	at co.paralleluniverse.fibers.Fiber.run1(Fiber.java:1092) ~[quasar-core-0.7.10.jar:0.7.10]
	at co.paralleluniverse.fibers.Fiber.exec(Fiber.java:788) ~[quasar-core-0.7.10.jar:0.7.10]
	at co.paralleluniverse.fibers.RunnableFiberTask.doExec(RunnableFiberTask.java:100) ~[quasar-core-0.7.10.jar:0.7.10]
	at co.paralleluniverse.fibers.RunnableFiberTask.run(RunnableFiberTask.java:91) ~[quasar-core-0.7.10.jar:0.7.10]
	at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511) ~[?:1.8.0_202]
	at java.util.concurrent.FutureTask.run(FutureTask.java:266) ~[?:1.8.0_202]
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.access$201(ScheduledThreadPoolExecutor.java:180) ~[?:1.8.0_202]
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.run(ScheduledThreadPoolExecutor.java:293) ~[?:1.8.0_202]
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149) ~[?:1.8.0_202]
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624) ~[?:1.8.0_202]
	at net.corda.node.utilities.AffinityExecutor$ServiceAffinityExecutor$1$thread$1.run(AffinityExecutor.kt:63) ~[corda-node-4.9.jar:?]
[WARN ] 2023-01-31T07:42:04,327Z [Mock network] statemachine.ActionExecutorImpl. - Propagating error {fiber-id=10000029, flow-id=b9075f13-4075-455a-9bc0-26f25862e50d, invocation_id=f89c66b6-c73c-4e25-b500-447e056ac308, invocation_timestamp=2023-01-31T07:42:03.731Z, origin=O=Mock Company 1, L=London, C=GB, session_id=f89c66b6-c73c-4e25-b500-447e056ac308, session_timestamp=2023-01-31T07:42:03.731Z, thread-id=858, tx_id=55A76480A2D34BE067B32C0D7A6E787BEB22BC8E172C25AD05FE08B4B68BDB46}
[WARN ] 2023-01-31T07:42:04,344Z [Mock network] interceptors.DumpHistoryOnErrorInterceptor. - Flow [b9075f13-4075-455a-9bc0-26f25862e50d] errored, dumping all transitions:

 --- Transition of flow [b9075f13-4075-455a-9bc0-26f25862e50d] ---
  Timestamp: 2023-01-31T07:42:03.736Z
  Event: DoRemainingWork
  Actions: 
    CreateTransaction
    PersistCheckpoint(id=[b9075f13-4075-455a-9bc0-26f25862e50d], checkpoint=Checkpoint(checkpointState=CheckpointState(invocationContext=InvocationContext(origin=Peer(party=O=Mock Company 1, L=London, C=GB), trace=Trace(invocationId=f89c66b6-c73c-4e25-b500-447e056ac308, timestamp: 2023-01-31T07:42:03.731Z, entityType: Invocation, sessionId=f89c66b6-c73c-4e25-b500-447e056ac308, timestamp: 2023-01-31T07:42:03.731Z, entityType: Session), actor=null, externalTrace=null, impersonatedActor=null, arguments=[], clientId=null), ourIdentity=O=Mock Company 3, L=London, C=GB, sessions={}, sessionsToBeClosed=[], subFlowStack=[Inlined(flowClass=class net.corda.samples.obligation.flows.IOUSettleFlowResponder, subFlowVersion=CorDappFlow(platformVersion=11, corDappName=workflows-1.0, corDappHash=8C2322F3ACFF6CA8FE3E7F554352489D40710486D8ED144430A5784441E56717), isEnabledTimedFlow=false)], numberOfSuspends=0, numberOfCommits=1), flowState=Unstarted(flowStart=Initiated, frozenFlowLogic=B628763E7961793628C6A14972EAD4A3B82660C7A9C48E002379B8E368EC896D), errorState=Clean, result=null, status=RUNNABLE, progressStep=null, flowIoRequest=null, compatible=true), isCheckpointUpdate=false)
    PersistDeduplicationFacts(deduplicationHandlers=[net.corda.testing.node.internal.MockNodeMessagingService$InMemoryDeduplicationHandler@546c17c0])
    CommitTransaction
    AcknowledgeMessages(deduplicationHandlers=[net.corda.testing.node.internal.MockNodeMessagingService$InMemoryDeduplicationHandler@546c17c0])
    SignalFlowHasStarted(flowId=[b9075f13-4075-455a-9bc0-26f25862e50d])
    SendExisting(peerParty=O=Mock Company 1, L=London, C=GB, message=ExistingSessionMessage(recipientSessionId=SessionId(toLong=-7855006138722062871), payload=ConfirmSessionMessage(initiatedSessionId=SessionId(toLong=8383758276858904125), initiatedFlowInfo=FlowInfo(flowVersion=1, appName=<unknown>))), deduplicationId=SenderDeduplicationId(deduplicationId=DeduplicationId(toString=N-D--7855006138722062871--5407470294366436114-0-0), senderUUID=06d1057a-f6bc-49f1-bbda-e49059d9fc5a))
    CreateTransaction
  Continuation: Resume(result=null)
  Diff between previous and next state:
pendingDeduplicationHandlers: 
    [net.corda.testing.node.internal.MockNodeMessagingService$InMemoryDeduplicationHandler@546c17c0]
    []
isFlowResumed: 
    false
    true
isAnyCheckpointPersisted: 
    false
    true
checkpoint.checkpointState.sessions.SessionId(toLong=8383758276858904125): 
    null
    Initiated(peerParty=O=Mock Company 1, L=London, C=GB, peerFlowInfo=FlowInfo(flowVersion=1, appName=<unknown>), receivedMessages=[DataSessionMessage(payload=class net.corda.core.serialization.SerializedBytes)], otherSideErrored=false, peerSinkSessionId=SessionId(toLong=-7855006138722062871), deduplicationSeed=D--7855006138722062871--5407470294366436114)
checkpoint.timestamp: 
    2023-01-31T07:42:03.732Z
    2023-01-31T07:42:03.733Z


 --- Transition of flow [b9075f13-4075-455a-9bc0-26f25862e50d] ---
  Timestamp: 2023-01-31T07:42:03.738Z
  Event: EnterSubFlow(subFlowClass=class net.corda.samples.obligation.flows.IOUSettleFlowResponder$call$signedTransactionFlow$1, subFlowVersion=CoreFlow(platformVersion=11), isEnabledTimedFlow=false)
  Actions: 
    
  Continuation: ProcessEvents
  Diff between previous and next state:
checkpoint.checkpointState.subFlowStack: 
    [Inlined(flowClass=class net.corda.samples.obligation.flows.IOUSettleFlowResponder, subFlowVersion=CorDappFlow(platformVersion=11, corDappName=workflows-1.0, corDappHash=8C2322F3ACFF6CA8FE3E7F554352489D40710486D8ED144430A5784441E56717), isEnabledTimedFlow=false)]
    [Inlined(flowClass=class net.corda.samples.obligation.flows.IOUSettleFlowResponder, subFlowVersion=CorDappFlow(platformVersion=11, corDappName=workflows-1.0, corDappHash=8C2322F3ACFF6CA8FE3E7F554352489D40710486D8ED144430A5784441E56717), isEnabledTimedFlow=false), Inlined(flowClass=class net.corda.samples.obligation.flows.IOUSettleFlowResponder$call$signedTransactionFlow$1, subFlowVersion=CoreFlow(platformVersion=11), isEnabledTimedFlow=false)]
checkpoint.timestamp: 
    2023-01-31T07:42:03.733Z
    2023-01-31T07:42:03.738Z


 --- Transition of flow [b9075f13-4075-455a-9bc0-26f25862e50d] ---
  Timestamp: 2023-01-31T07:42:03.738Z
  Event: EnterSubFlow(subFlowClass=class net.corda.core.flows.ReceiveTransactionFlow, subFlowVersion=CoreFlow(platformVersion=11), isEnabledTimedFlow=false)
  Actions: 
    
  Continuation: ProcessEvents
  Diff between previous and next state:
checkpoint.checkpointState.subFlowStack: 
    [Inlined(flowClass=class net.corda.samples.obligation.flows.IOUSettleFlowResponder, subFlowVersion=CorDappFlow(platformVersion=11, corDappName=workflows-1.0, corDappHash=8C2322F3ACFF6CA8FE3E7F554352489D40710486D8ED144430A5784441E56717), isEnabledTimedFlow=false), Inlined(flowClass=class net.corda.samples.obligation.flows.IOUSettleFlowResponder$call$signedTransactionFlow$1, subFlowVersion=CoreFlow(platformVersion=11), isEnabledTimedFlow=false)]
    [Inlined(flowClass=class net.corda.samples.obligation.flows.IOUSettleFlowResponder, subFlowVersion=CorDappFlow(platformVersion=11, corDappName=workflows-1.0, corDappHash=8C2322F3ACFF6CA8FE3E7F554352489D40710486D8ED144430A5784441E56717), isEnabledTimedFlow=false), Inlined(flowClass=class net.corda.samples.obligation.flows.IOUSettleFlowResponder$call$signedTransactionFlow$1, subFlowVersion=CoreFlow(platformVersion=11), isEnabledTimedFlow=false), Inlined(flowClass=class net.corda.core.flows.ReceiveTransactionFlow, subFlowVersion=CoreFlow(platformVersion=11), isEnabledTimedFlow=false)]


 --- Transition of flow [b9075f13-4075-455a-9bc0-26f25862e50d] ---
  Timestamp: 2023-01-31T07:42:03.745Z
  Event: Suspend(ioRequest=Receive(sessions=[FlowSessionImpl(destination=O=Mock Company 1, L=London, C=GB, sourceSessionId=SessionId(toLong=8383758276858904125))]), maySkipCheckpoint=false, fiber=A20503487B134ED817BCC4E359A075CBE20719737E3F6B9AD227C7E7B9BCE5E8, currentStep=Starting)
  Actions: 
    PersistCheckpoint(id=[b9075f13-4075-455a-9bc0-26f25862e50d], checkpoint=Checkpoint(checkpointState=CheckpointState(invocationContext=InvocationContext(origin=Peer(party=O=Mock Company 1, L=London, C=GB), trace=Trace(invocationId=f89c66b6-c73c-4e25-b500-447e056ac308, timestamp: 2023-01-31T07:42:03.731Z, entityType: Invocation, sessionId=f89c66b6-c73c-4e25-b500-447e056ac308, timestamp: 2023-01-31T07:42:03.731Z, entityType: Session), actor=null, externalTrace=null, impersonatedActor=null, arguments=[], clientId=null), ourIdentity=O=Mock Company 3, L=London, C=GB, sessions={SessionId(toLong=8383758276858904125)=Initiated(peerParty=O=Mock Company 1, L=London, C=GB, peerFlowInfo=FlowInfo(flowVersion=1, appName=<unknown>), receivedMessages=[DataSessionMessage(payload=class net.corda.core.serialization.SerializedBytes)], otherSideErrored=false, peerSinkSessionId=SessionId(toLong=-7855006138722062871), deduplicationSeed=D--7855006138722062871--5407470294366436114)}, sessionsToBeClosed=[], subFlowStack=[Inlined(flowClass=class net.corda.samples.obligation.flows.IOUSettleFlowResponder, subFlowVersion=CorDappFlow(platformVersion=11, corDappName=workflows-1.0, corDappHash=8C2322F3ACFF6CA8FE3E7F554352489D40710486D8ED144430A5784441E56717), isEnabledTimedFlow=false), Inlined(flowClass=class net.corda.samples.obligation.flows.IOUSettleFlowResponder$call$signedTransactionFlow$1, subFlowVersion=CoreFlow(platformVersion=11), isEnabledTimedFlow=false), Inlined(flowClass=class net.corda.core.flows.ReceiveTransactionFlow, subFlowVersion=CoreFlow(platformVersion=11), isEnabledTimedFlow=false)], numberOfSuspends=1, numberOfCommits=2), flowState=Started(flowIORequest=Receive(sessions=[FlowSessionImpl(destination=O=Mock Company 1, L=London, C=GB, sourceSessionId=SessionId(toLong=8383758276858904125))]), frozenFiber=A20503487B134ED817BCC4E359A075CBE20719737E3F6B9AD227C7E7B9BCE5E8), errorState=Clean, result=null, status=RUNNABLE, progressStep=Starting, flowIoRequest=Receive, compatible=true), isCheckpointUpdate=true)
    PersistDeduplicationFacts(deduplicationHandlers=[])
    CommitTransaction
    AcknowledgeMessages(deduplicationHandlers=[])
    ScheduleEvent(event=DoRemainingWork)
  Continuation: ProcessEvents
  Diff between previous and next state:
isFlowResumed: 
    true
    false
numberOfCommits: 
    0
    2
checkpoint.progressStep: 
    null
    Starting
checkpoint.flowIoRequest: 
    null
    Receive
checkpoint.checkpointState.numberOfCommits: 
    1
    2
checkpoint.checkpointState.numberOfSuspends: 
    0
    1
checkpoint.flowState: 
    Unstarted(flowStart=Initiated, frozenFlowLogic=B628763E7961793628C6A14972EAD4A3B82660C7A9C48E002379B8E368EC896D)
    Started(flowIORequest=Receive(sessions=[FlowSessionImpl(destination=O=Mock Company 1, L=London, C=GB, sourceSessionId=SessionId(toLong=8383758276858904125))]), frozenFiber=A20503487B134ED817BCC4E359A075CBE20719737E3F6B9AD227C7E7B9BCE5E8)
checkpoint.timestamp: 
    2023-01-31T07:42:03.738Z
    2023-01-31T07:42:03.742Z


 --- Transition of flow [b9075f13-4075-455a-9bc0-26f25862e50d] ---
  Timestamp: 2023-01-31T07:42:03.745Z
  Event: DoRemainingWork
  Actions: 
    CreateTransaction
  Continuation: Resume(result=class java.util.LinkedHashMap)
  Diff between previous and next state:
isFlowResumed: 
    false
    true
checkpoint.checkpointState.sessions.SessionId(toLong=8383758276858904125).receivedMessages.isEmpty: 
    false
    true
checkpoint.timestamp: 
    2023-01-31T07:42:03.742Z
    2023-01-31T07:42:03.745Z


 --- Transition of flow [b9075f13-4075-455a-9bc0-26f25862e50d] ---
  Timestamp: 2023-01-31T07:42:03.754Z
  Event: EnterSubFlow(subFlowClass=class net.corda.core.internal.ResolveTransactionsFlow, subFlowVersion=CoreFlow(platformVersion=11), isEnabledTimedFlow=false)
  Actions: 
    
  Continuation: ProcessEvents
  Diff between previous and next state:
checkpoint.checkpointState.subFlowStack: 
    [Inlined(flowClass=class net.corda.samples.obligation.flows.IOUSettleFlowResponder, subFlowVersion=CorDappFlow(platformVersion=11, corDappName=workflows-1.0, corDappHash=8C2322F3ACFF6CA8FE3E7F554352489D40710486D8ED144430A5784441E56717), isEnabledTimedFlow=false), Inlined(flowClass=class net.corda.samples.obligation.flows.IOUSettleFlowResponder$call$signedTransactionFlow$1, subFlowVersion=CoreFlow(platformVersion=11), isEnabledTimedFlow=false), Inlined(flowClass=class net.corda.core.flows.ReceiveTransactionFlow, subFlowVersion=CoreFlow(platformVersion=11), isEnabledTimedFlow=false)]
    [Inlined(flowClass=class net.corda.samples.obligation.flows.IOUSettleFlowResponder, subFlowVersion=CorDappFlow(platformVersion=11, corDappName=workflows-1.0, corDappHash=8C2322F3ACFF6CA8FE3E7F554352489D40710486D8ED144430A5784441E56717), isEnabledTimedFlow=false), Inlined(flowClass=class net.corda.samples.obligation.flows.IOUSettleFlowResponder$call$signedTransactionFlow$1, subFlowVersion=CoreFlow(platformVersion=11), isEnabledTimedFlow=false), Inlined(flowClass=class net.corda.core.flows.ReceiveTransactionFlow, subFlowVersion=CoreFlow(platformVersion=11), isEnabledTimedFlow=false), Inlined(flowClass=class net.corda.core.internal.ResolveTransactionsFlow, subFlowVersion=CoreFlow(platformVersion=11), isEnabledTimedFlow=false)]
checkpoint.timestamp: 
    2023-01-31T07:42:03.745Z
    2023-01-31T07:42:03.754Z


 --- Transition of flow [b9075f13-4075-455a-9bc0-26f25862e50d] ---
  Timestamp: 2023-01-31T07:42:03.755Z
  Event: EnterSubFlow(subFlowClass=class net.corda.core.internal.FetchAttachmentsFlow, subFlowVersion=CoreFlow(platformVersion=11), isEnabledTimedFlow=false)
  Actions: 
    
  Continuation: ProcessEvents
  Diff between previous and next state:
checkpoint.checkpointState.subFlowStack: 
    [Inlined(flowClass=class net.corda.samples.obligation.flows.IOUSettleFlowResponder, subFlowVersion=CorDappFlow(platformVersion=11, corDappName=workflows-1.0, corDappHash=8C2322F3ACFF6CA8FE3E7F554352489D40710486D8ED144430A5784441E56717), isEnabledTimedFlow=false), Inlined(flowClass=class net.corda.samples.obligation.flows.IOUSettleFlowResponder$call$signedTransactionFlow$1, subFlowVersion=CoreFlow(platformVersion=11), isEnabledTimedFlow=false), Inlined(flowClass=class net.corda.core.flows.ReceiveTransactionFlow, subFlowVersion=CoreFlow(platformVersion=11), isEnabledTimedFlow=false), Inlined(flowClass=class net.corda.core.internal.ResolveTransactionsFlow, subFlowVersion=CoreFlow(platformVersion=11), isEnabledTimedFlow=false)]
    [Inlined(flowClass=class net.corda.samples.obligation.flows.IOUSettleFlowResponder, subFlowVersion=CorDappFlow(platformVersion=11, corDappName=workflows-1.0, corDappHash=8C2322F3ACFF6CA8FE3E7F554352489D40710486D8ED144430A5784441E56717), isEnabledTimedFlow=false), Inlined(flowClass=class net.corda.samples.obligation.flows.IOUSettleFlowResponder$call$signedTransactionFlow$1, subFlowVersion=CoreFlow(platformVersion=11), isEnabledTimedFlow=false), Inlined(flowClass=class net.corda.core.flows.ReceiveTransactionFlow, subFlowVersion=CoreFlow(platformVersion=11), isEnabledTimedFlow=false), Inlined(flowClass=class net.corda.core.internal.ResolveTransactionsFlow, subFlowVersion=CoreFlow(platformVersion=11), isEnabledTimedFlow=false), Inlined(flowClass=class net.corda.core.internal.FetchAttachmentsFlow, subFlowVersion=CoreFlow(platformVersion=11), isEnabledTimedFlow=false)]
checkpoint.timestamp: 
    2023-01-31T07:42:03.754Z
    2023-01-31T07:42:03.755Z


 --- Transition of flow [b9075f13-4075-455a-9bc0-26f25862e50d] ---
  Timestamp: 2023-01-31T07:42:03.758Z
  Event: LeaveSubFlow
  Actions: 
    
  Continuation: ProcessEvents
  Diff between previous and next state:
checkpoint.checkpointState.subFlowStack: 
    [Inlined(flowClass=class net.corda.samples.obligation.flows.IOUSettleFlowResponder, subFlowVersion=CorDappFlow(platformVersion=11, corDappName=workflows-1.0, corDappHash=8C2322F3ACFF6CA8FE3E7F554352489D40710486D8ED144430A5784441E56717), isEnabledTimedFlow=false), Inlined(flowClass=class net.corda.samples.obligation.flows.IOUSettleFlowResponder$call$signedTransactionFlow$1, subFlowVersion=CoreFlow(platformVersion=11), isEnabledTimedFlow=false), Inlined(flowClass=class net.corda.core.flows.ReceiveTransactionFlow, subFlowVersion=CoreFlow(platformVersion=11), isEnabledTimedFlow=false), Inlined(flowClass=class net.corda.core.internal.ResolveTransactionsFlow, subFlowVersion=CoreFlow(platformVersion=11), isEnabledTimedFlow=false), Inlined(flowClass=class net.corda.core.internal.FetchAttachmentsFlow, subFlowVersion=CoreFlow(platformVersion=11), isEnabledTimedFlow=false)]
    [Inlined(flowClass=class net.corda.samples.obligation.flows.IOUSettleFlowResponder, subFlowVersion=CorDappFlow(platformVersion=11, corDappName=workflows-1.0, corDappHash=8C2322F3ACFF6CA8FE3E7F554352489D40710486D8ED144430A5784441E56717), isEnabledTimedFlow=false), Inlined(flowClass=class net.corda.samples.obligation.flows.IOUSettleFlowResponder$call$signedTransactionFlow$1, subFlowVersion=CoreFlow(platformVersion=11), isEnabledTimedFlow=false), Inlined(flowClass=class net.corda.core.flows.ReceiveTransactionFlow, subFlowVersion=CoreFlow(platformVersion=11), isEnabledTimedFlow=false), Inlined(flowClass=class net.corda.core.internal.ResolveTransactionsFlow, subFlowVersion=CoreFlow(platformVersion=11), isEnabledTimedFlow=false)]
checkpoint.timestamp: 
    2023-01-31T07:42:03.755Z
    2023-01-31T07:42:03.758Z


 --- Transition of flow [b9075f13-4075-455a-9bc0-26f25862e50d] ---
  Timestamp: 2023-01-31T07:42:03.758Z
  Event: EnterSubFlow(subFlowClass=class net.corda.core.internal.FetchNetworkParametersFlow, subFlowVersion=CoreFlow(platformVersion=11), isEnabledTimedFlow=false)
  Actions: 
    
  Continuation: ProcessEvents
  Diff between previous and next state:
checkpoint.checkpointState.subFlowStack: 
    [Inlined(flowClass=class net.corda.samples.obligation.flows.IOUSettleFlowResponder, subFlowVersion=CorDappFlow(platformVersion=11, corDappName=workflows-1.0, corDappHash=8C2322F3ACFF6CA8FE3E7F554352489D40710486D8ED144430A5784441E56717), isEnabledTimedFlow=false), Inlined(flowClass=class net.corda.samples.obligation.flows.IOUSettleFlowResponder$call$signedTransactionFlow$1, subFlowVersion=CoreFlow(platformVersion=11), isEnabledTimedFlow=false), Inlined(flowClass=class net.corda.core.flows.ReceiveTransactionFlow, subFlowVersion=CoreFlow(platformVersion=11), isEnabledTimedFlow=false), Inlined(flowClass=class net.corda.core.internal.ResolveTransactionsFlow, subFlowVersion=CoreFlow(platformVersion=11), isEnabledTimedFlow=false)]
    [Inlined(flowClass=class net.corda.samples.obligation.flows.IOUSettleFlowResponder, subFlowVersion=CorDappFlow(platformVersion=11, corDappName=workflows-1.0, corDappHash=8C2322F3ACFF6CA8FE3E7F554352489D40710486D8ED144430A5784441E56717), isEnabledTimedFlow=false), Inlined(flowClass=class net.corda.samples.obligation.flows.IOUSettleFlowResponder$call$signedTransactionFlow$1, subFlowVersion=CoreFlow(platformVersion=11), isEnabledTimedFlow=false), Inlined(flowClass=class net.corda.core.flows.ReceiveTransactionFlow, subFlowVersion=CoreFlow(platformVersion=11), isEnabledTimedFlow=false), Inlined(flowClass=class net.corda.core.internal.ResolveTransactionsFlow, subFlowVersion=CoreFlow(platformVersion=11), isEnabledTimedFlow=false), Inlined(flowClass=class net.corda.core.internal.FetchNetworkParametersFlow, subFlowVersion=CoreFlow(platformVersion=11), isEnabledTimedFlow=false)]


 --- Transition of flow [b9075f13-4075-455a-9bc0-26f25862e50d] ---
  Timestamp: 2023-01-31T07:42:03.758Z
  Event: LeaveSubFlow
  Actions: 
    
  Continuation: ProcessEvents
  Diff between previous and next state:
checkpoint.checkpointState.subFlowStack: 
    [Inlined(flowClass=class net.corda.samples.obligation.flows.IOUSettleFlowResponder, subFlowVersion=CorDappFlow(platformVersion=11, corDappName=workflows-1.0, corDappHash=8C2322F3ACFF6CA8FE3E7F554352489D40710486D8ED144430A5784441E56717), isEnabledTimedFlow=false), Inlined(flowClass=class net.corda.samples.obligation.flows.IOUSettleFlowResponder$call$signedTransactionFlow$1, subFlowVersion=CoreFlow(platformVersion=11), isEnabledTimedFlow=false), Inlined(flowClass=class net.corda.core.flows.ReceiveTransactionFlow, subFlowVersion=CoreFlow(platformVersion=11), isEnabledTimedFlow=false), Inlined(flowClass=class net.corda.core.internal.ResolveTransactionsFlow, subFlowVersion=CoreFlow(platformVersion=11), isEnabledTimedFlow=false), Inlined(flowClass=class net.corda.core.internal.FetchNetworkParametersFlow, subFlowVersion=CoreFlow(platformVersion=11), isEnabledTimedFlow=false)]
    [Inlined(flowClass=class net.corda.samples.obligation.flows.IOUSettleFlowResponder, subFlowVersion=CorDappFlow(platformVersion=11, corDappName=workflows-1.0, corDappHash=8C2322F3ACFF6CA8FE3E7F554352489D40710486D8ED144430A5784441E56717), isEnabledTimedFlow=false), Inlined(flowClass=class net.corda.samples.obligation.flows.IOUSettleFlowResponder$call$signedTransactionFlow$1, subFlowVersion=CoreFlow(platformVersion=11), isEnabledTimedFlow=false), Inlined(flowClass=class net.corda.core.flows.ReceiveTransactionFlow, subFlowVersion=CoreFlow(platformVersion=11), isEnabledTimedFlow=false), Inlined(flowClass=class net.corda.core.internal.ResolveTransactionsFlow, subFlowVersion=CoreFlow(platformVersion=11), isEnabledTimedFlow=false)]


 --- Transition of flow [b9075f13-4075-455a-9bc0-26f25862e50d] ---
  Timestamp: 2023-01-31T07:42:03.758Z
  Event: EnterSubFlow(subFlowClass=class net.corda.core.internal.FetchTransactionsFlow, subFlowVersion=CoreFlow(platformVersion=11), isEnabledTimedFlow=false)
  Actions: 
    
  Continuation: ProcessEvents
  Diff between previous and next state:
checkpoint.checkpointState.subFlowStack: 
    [Inlined(flowClass=class net.corda.samples.obligation.flows.IOUSettleFlowResponder, subFlowVersion=CorDappFlow(platformVersion=11, corDappName=workflows-1.0, corDappHash=8C2322F3ACFF6CA8FE3E7F554352489D40710486D8ED144430A5784441E56717), isEnabledTimedFlow=false), Inlined(flowClass=class net.corda.samples.obligation.flows.IOUSettleFlowResponder$call$signedTransactionFlow$1, subFlowVersion=CoreFlow(platformVersion=11), isEnabledTimedFlow=false), Inlined(flowClass=class net.corda.core.flows.ReceiveTransactionFlow, subFlowVersion=CoreFlow(platformVersion=11), isEnabledTimedFlow=false), Inlined(flowClass=class net.corda.core.internal.ResolveTransactionsFlow, subFlowVersion=CoreFlow(platformVersion=11), isEnabledTimedFlow=false)]
    [Inlined(flowClass=class net.corda.samples.obligation.flows.IOUSettleFlowResponder, subFlowVersion=CorDappFlow(platformVersion=11, corDappName=workflows-1.0, corDappHash=8C2322F3ACFF6CA8FE3E7F554352489D40710486D8ED144430A5784441E56717), isEnabledTimedFlow=false), Inlined(flowClass=class net.corda.samples.obligation.flows.IOUSettleFlowResponder$call$signedTransactionFlow$1, subFlowVersion=CoreFlow(platformVersion=11), isEnabledTimedFlow=false), Inlined(flowClass=class net.corda.core.flows.ReceiveTransactionFlow, subFlowVersion=CoreFlow(platformVersion=11), isEnabledTimedFlow=false), Inlined(flowClass=class net.corda.core.internal.ResolveTransactionsFlow, subFlowVersion=CoreFlow(platformVersion=11), isEnabledTimedFlow=false), Inlined(flowClass=class net.corda.core.internal.FetchTransactionsFlow, subFlowVersion=CoreFlow(platformVersion=11), isEnabledTimedFlow=false)]


 --- Transition of flow [b9075f13-4075-455a-9bc0-26f25862e50d] ---
  Timestamp: 2023-01-31T07:42:03.766Z
  Event: Suspend(ioRequest=SendAndReceive({FlowSessionImpl(destination=O=Mock Company 1, L=London, C=GB, sourceSessionId=SessionId(toLong=8383758276858904125))=FlowSessionImpl(destination=O=Mock Company 1, L=London, C=GB, sourceSessionId=SessionId(toLong=8383758276858904125))=7484162AA4B4675678FF879F5FC60A03F40F4F47BC6F6C769522BDC93DF08F12}, shouldRetrySend=false), maySkipCheckpoint=false, fiber=0F07145882CC9FE6EC041FA3FC409195C4E64D1D94721F1339C07A698E54C17F, currentStep=Starting)
  Actions: 
    PersistCheckpoint(id=[b9075f13-4075-455a-9bc0-26f25862e50d], checkpoint=Checkpoint(checkpointState=CheckpointState(invocationContext=InvocationContext(origin=Peer(party=O=Mock Company 1, L=London, C=GB), trace=Trace(invocationId=f89c66b6-c73c-4e25-b500-447e056ac308, timestamp: 2023-01-31T07:42:03.731Z, entityType: Invocation, sessionId=f89c66b6-c73c-4e25-b500-447e056ac308, timestamp: 2023-01-31T07:42:03.731Z, entityType: Session), actor=null, externalTrace=null, impersonatedActor=null, arguments=[], clientId=null), ourIdentity=O=Mock Company 3, L=London, C=GB, sessions={SessionId(toLong=8383758276858904125)=Initiated(peerParty=O=Mock Company 1, L=London, C=GB, peerFlowInfo=FlowInfo(flowVersion=1, appName=<unknown>), receivedMessages=[], otherSideErrored=false, peerSinkSessionId=SessionId(toLong=-7855006138722062871), deduplicationSeed=D--7855006138722062871--5407470294366436114)}, sessionsToBeClosed=[], subFlowStack=[Inlined(flowClass=class net.corda.samples.obligation.flows.IOUSettleFlowResponder, subFlowVersion=CorDappFlow(platformVersion=11, corDappName=workflows-1.0, corDappHash=8C2322F3ACFF6CA8FE3E7F554352489D40710486D8ED144430A5784441E56717), isEnabledTimedFlow=false), Inlined(flowClass=class net.corda.samples.obligation.flows.IOUSettleFlowResponder$call$signedTransactionFlow$1, subFlowVersion=CoreFlow(platformVersion=11), isEnabledTimedFlow=false), Inlined(flowClass=class net.corda.core.flows.ReceiveTransactionFlow, subFlowVersion=CoreFlow(platformVersion=11), isEnabledTimedFlow=false), Inlined(flowClass=class net.corda.core.internal.ResolveTransactionsFlow, subFlowVersion=CoreFlow(platformVersion=11), isEnabledTimedFlow=false), Inlined(flowClass=class net.corda.core.internal.FetchTransactionsFlow, subFlowVersion=CoreFlow(platformVersion=11), isEnabledTimedFlow=false)], numberOfSuspends=2, numberOfCommits=3), flowState=Started(flowIORequest=SendAndReceive({FlowSessionImpl(destination=O=Mock Company 1, L=London, C=GB, sourceSessionId=SessionId(toLong=8383758276858904125))=FlowSessionImpl(destination=O=Mock Company 1, L=London, C=GB, sourceSessionId=SessionId(toLong=8383758276858904125))=7484162AA4B4675678FF879F5FC60A03F40F4F47BC6F6C769522BDC93DF08F12}, shouldRetrySend=false), frozenFiber=0F07145882CC9FE6EC041FA3FC409195C4E64D1D94721F1339C07A698E54C17F), errorState=Clean, result=null, status=RUNNABLE, progressStep=Starting, flowIoRequest=SendAndReceive, compatible=true), isCheckpointUpdate=true)
    PersistDeduplicationFacts(deduplicationHandlers=[])
    CommitTransaction
    AcknowledgeMessages(deduplicationHandlers=[])
    ScheduleEvent(event=DoRemainingWork)
  Continuation: ProcessEvents
  Diff between previous and next state:
isFlowResumed: 
    true
    false
numberOfCommits: 
    2
    3
checkpoint.flowIoRequest: 
    Receive
    SendAndReceive
checkpoint.checkpointState.numberOfCommits: 
    2
    3
checkpoint.checkpointState.numberOfSuspends: 
    1
    2
checkpoint.flowState.flowIORequest: 
    Receive(sessions=[FlowSessionImpl(destination=O=Mock Company 1, L=London, C=GB, sourceSessionId=SessionId(toLong=8383758276858904125))])
    SendAndReceive({FlowSessionImpl(destination=O=Mock Company 1, L=London, C=GB, sourceSessionId=SessionId(toLong=8383758276858904125))=FlowSessionImpl(destination=O=Mock Company 1, L=London, C=GB, sourceSessionId=SessionId(toLong=8383758276858904125))=7484162AA4B4675678FF879F5FC60A03F40F4F47BC6F6C769522BDC93DF08F12}, shouldRetrySend=false)
checkpoint.flowState.frozenFiber.hash: 
    A20503487B134ED817BCC4E359A075CBE20719737E3F6B9AD227C7E7B9BCE5E8
    0F07145882CC9FE6EC041FA3FC409195C4E64D1D94721F1339C07A698E54C17F
checkpoint.timestamp: 
    2023-01-31T07:42:03.758Z
    2023-01-31T07:42:03.764Z


 --- Transition of flow [b9075f13-4075-455a-9bc0-26f25862e50d] ---
  Timestamp: 2023-01-31T07:42:03.767Z
  Event: DoRemainingWork
  Actions: 
    SendMultiple(sendInitial=[], sendExisting=[SendExisting(peerParty=O=Mock Company 1, L=London, C=GB, message=ExistingSessionMessage(recipientSessionId=SessionId(toLong=-7855006138722062871), payload=DataSessionMessage(payload=class net.corda.core.serialization.SerializedBytes)), deduplicationId=SenderDeduplicationId(deduplicationId=DeduplicationId(toString=N-D--7855006138722062871--5407470294366436114-2-0), senderUUID=06d1057a-f6bc-49f1-bbda-e49059d9fc5a))])
  Continuation: ProcessEvents
  Diff between previous and next state:
checkpoint.flowState.flowIORequest: 
    SendAndReceive({FlowSessionImpl(destination=O=Mock Company 1, L=London, C=GB, sourceSessionId=SessionId(toLong=8383758276858904125))=FlowSessionImpl(destination=O=Mock Company 1, L=London, C=GB, sourceSessionId=SessionId(toLong=8383758276858904125))=7484162AA4B4675678FF879F5FC60A03F40F4F47BC6F6C769522BDC93DF08F12}, shouldRetrySend=false)
    Receive(sessions=[FlowSessionImpl(destination=O=Mock Company 1, L=London, C=GB, sourceSessionId=SessionId(toLong=8383758276858904125))])
checkpoint.timestamp: 
    2023-01-31T07:42:03.764Z
    2023-01-31T07:42:03.766Z


 --- Transition of flow [b9075f13-4075-455a-9bc0-26f25862e50d] ---
  Timestamp: 2023-01-31T07:42:03.780Z
  Event: DeliverSessionMessage(sessionMessage=ExistingSessionMessage(recipientSessionId=SessionId(toLong=8383758276858904125), payload=DataSessionMessage(payload=class net.corda.core.serialization.SerializedBytes)), deduplicationHandler=net.corda.testing.node.internal.MockNodeMessagingService$InMemoryDeduplicationHandler@3a59fe3f, sender=O=Mock Company 1, L=London, C=GB)
  Actions: 
    ScheduleEvent(event=DoRemainingWork)
  Continuation: ProcessEvents
  Diff between previous and next state:
pendingDeduplicationHandlers: 
    []
    [net.corda.testing.node.internal.MockNodeMessagingService$InMemoryDeduplicationHandler@3a59fe3f]
checkpoint.checkpointState.sessions.SessionId(toLong=8383758276858904125).receivedMessages.isEmpty: 
    true
    false
checkpoint.timestamp: 
    2023-01-31T07:42:03.766Z
    2023-01-31T07:42:03.780Z


 --- Transition of flow [b9075f13-4075-455a-9bc0-26f25862e50d] ---
  Timestamp: 2023-01-31T07:42:03.780Z
  Event: DoRemainingWork
  Actions: 
    CreateTransaction
  Continuation: Resume(result=class java.util.LinkedHashMap)
  Diff between previous and next state:
isFlowResumed: 
    false
    true
checkpoint.checkpointState.sessions.SessionId(toLong=8383758276858904125).receivedMessages.isEmpty: 
    false
    true


 --- Transition of flow [b9075f13-4075-455a-9bc0-26f25862e50d] ---
  Timestamp: 2023-01-31T07:42:03.781Z
  Event: LeaveSubFlow
  Actions: 
    
  Continuation: ProcessEvents
  Diff between previous and next state:
checkpoint.checkpointState.subFlowStack: 
    [Inlined(flowClass=class net.corda.samples.obligation.flows.IOUSettleFlowResponder, subFlowVersion=CorDappFlow(platformVersion=11, corDappName=workflows-1.0, corDappHash=8C2322F3ACFF6CA8FE3E7F554352489D40710486D8ED144430A5784441E56717), isEnabledTimedFlow=false), Inlined(flowClass=class net.corda.samples.obligation.flows.IOUSettleFlowResponder$call$signedTransactionFlow$1, subFlowVersion=CoreFlow(platformVersion=11), isEnabledTimedFlow=false), Inlined(flowClass=class net.corda.core.flows.ReceiveTransactionFlow, subFlowVersion=CoreFlow(platformVersion=11), isEnabledTimedFlow=false), Inlined(flowClass=class net.corda.core.internal.ResolveTransactionsFlow, subFlowVersion=CoreFlow(platformVersion=11), isEnabledTimedFlow=false), Inlined(flowClass=class net.corda.core.internal.FetchTransactionsFlow, subFlowVersion=CoreFlow(platformVersion=11), isEnabledTimedFlow=false)]
    [Inlined(flowClass=class net.corda.samples.obligation.flows.IOUSettleFlowResponder, subFlowVersion=CorDappFlow(platformVersion=11, corDappName=workflows-1.0, corDappHash=8C2322F3ACFF6CA8FE3E7F554352489D40710486D8ED144430A5784441E56717), isEnabledTimedFlow=false), Inlined(flowClass=class net.corda.samples.obligation.flows.IOUSettleFlowResponder$call$signedTransactionFlow$1, subFlowVersion=CoreFlow(platformVersion=11), isEnabledTimedFlow=false), Inlined(flowClass=class net.corda.core.flows.ReceiveTransactionFlow, subFlowVersion=CoreFlow(platformVersion=11), isEnabledTimedFlow=false), Inlined(flowClass=class net.corda.core.internal.ResolveTransactionsFlow, subFlowVersion=CoreFlow(platformVersion=11), isEnabledTimedFlow=false)]
checkpoint.timestamp: 
    2023-01-31T07:42:03.780Z
    2023-01-31T07:42:03.781Z


 --- Transition of flow [b9075f13-4075-455a-9bc0-26f25862e50d] ---
  Timestamp: 2023-01-31T07:42:03.784Z
  Event: EnterSubFlow(subFlowClass=class net.corda.core.internal.FetchAttachmentsFlow, subFlowVersion=CoreFlow(platformVersion=11), isEnabledTimedFlow=false)
  Actions: 
    
  Continuation: ProcessEvents
  Diff between previous and next state:
checkpoint.checkpointState.subFlowStack: 
    [Inlined(flowClass=class net.corda.samples.obligation.flows.IOUSettleFlowResponder, subFlowVersion=CorDappFlow(platformVersion=11, corDappName=workflows-1.0, corDappHash=8C2322F3ACFF6CA8FE3E7F554352489D40710486D8ED144430A5784441E56717), isEnabledTimedFlow=false), Inlined(flowClass=class net.corda.samples.obligation.flows.IOUSettleFlowResponder$call$signedTransactionFlow$1, subFlowVersion=CoreFlow(platformVersion=11), isEnabledTimedFlow=false), Inlined(flowClass=class net.corda.core.flows.ReceiveTransactionFlow, subFlowVersion=CoreFlow(platformVersion=11), isEnabledTimedFlow=false), Inlined(flowClass=class net.corda.core.internal.ResolveTransactionsFlow, subFlowVersion=CoreFlow(platformVersion=11), isEnabledTimedFlow=false)]
    [Inlined(flowClass=class net.corda.samples.obligation.flows.IOUSettleFlowResponder, subFlowVersion=CorDappFlow(platformVersion=11, corDappName=workflows-1.0, corDappHash=8C2322F3ACFF6CA8FE3E7F554352489D40710486D8ED144430A5784441E56717), isEnabledTimedFlow=false), Inlined(flowClass=class net.corda.samples.obligation.flows.IOUSettleFlowResponder$call$signedTransactionFlow$1, subFlowVersion=CoreFlow(platformVersion=11), isEnabledTimedFlow=false), Inlined(flowClass=class net.corda.core.flows.ReceiveTransactionFlow, subFlowVersion=CoreFlow(platformVersion=11), isEnabledTimedFlow=false), Inlined(flowClass=class net.corda.core.internal.ResolveTransactionsFlow, subFlowVersion=CoreFlow(platformVersion=11), isEnabledTimedFlow=false), Inlined(flowClass=class net.corda.core.internal.FetchAttachmentsFlow, subFlowVersion=CoreFlow(platformVersion=11), isEnabledTimedFlow=false)]
checkpoint.timestamp: 
    2023-01-31T07:42:03.781Z
    2023-01-31T07:42:03.784Z


 --- Transition of flow [b9075f13-4075-455a-9bc0-26f25862e50d] ---
  Timestamp: 2023-01-31T07:42:03.784Z
  Event: LeaveSubFlow
  Actions: 
    
  Continuation: ProcessEvents
  Diff between previous and next state:
checkpoint.checkpointState.subFlowStack: 
    [Inlined(flowClass=class net.corda.samples.obligation.flows.IOUSettleFlowResponder, subFlowVersion=CorDappFlow(platformVersion=11, corDappName=workflows-1.0, corDappHash=8C2322F3ACFF6CA8FE3E7F554352489D40710486D8ED144430A5784441E56717), isEnabledTimedFlow=false), Inlined(flowClass=class net.corda.samples.obligation.flows.IOUSettleFlowResponder$call$signedTransactionFlow$1, subFlowVersion=CoreFlow(platformVersion=11), isEnabledTimedFlow=false), Inlined(flowClass=class net.corda.core.flows.ReceiveTransactionFlow, subFlowVersion=CoreFlow(platformVersion=11), isEnabledTimedFlow=false), Inlined(flowClass=class net.corda.core.internal.ResolveTransactionsFlow, subFlowVersion=CoreFlow(platformVersion=11), isEnabledTimedFlow=false), Inlined(flowClass=class net.corda.core.internal.FetchAttachmentsFlow, subFlowVersion=CoreFlow(platformVersion=11), isEnabledTimedFlow=false)]
    [Inlined(flowClass=class net.corda.samples.obligation.flows.IOUSettleFlowResponder, subFlowVersion=CorDappFlow(platformVersion=11, corDappName=workflows-1.0, corDappHash=8C2322F3ACFF6CA8FE3E7F554352489D40710486D8ED144430A5784441E56717), isEnabledTimedFlow=false), Inlined(flowClass=class net.corda.samples.obligation.flows.IOUSettleFlowResponder$call$signedTransactionFlow$1, subFlowVersion=CoreFlow(platformVersion=11), isEnabledTimedFlow=false), Inlined(flowClass=class net.corda.core.flows.ReceiveTransactionFlow, subFlowVersion=CoreFlow(platformVersion=11), isEnabledTimedFlow=false), Inlined(flowClass=class net.corda.core.internal.ResolveTransactionsFlow, subFlowVersion=CoreFlow(platformVersion=11), isEnabledTimedFlow=false)]


 --- Transition of flow [b9075f13-4075-455a-9bc0-26f25862e50d] ---
  Timestamp: 2023-01-31T07:42:03.784Z
  Event: EnterSubFlow(subFlowClass=class net.corda.core.internal.FetchNetworkParametersFlow, subFlowVersion=CoreFlow(platformVersion=11), isEnabledTimedFlow=false)
  Actions: 
    
  Continuation: ProcessEvents
  Diff between previous and next state:
checkpoint.checkpointState.subFlowStack: 
    [Inlined(flowClass=class net.corda.samples.obligation.flows.IOUSettleFlowResponder, subFlowVersion=CorDappFlow(platformVersion=11, corDappName=workflows-1.0, corDappHash=8C2322F3ACFF6CA8FE3E7F554352489D40710486D8ED144430A5784441E56717), isEnabledTimedFlow=false), Inlined(flowClass=class net.corda.samples.obligation.flows.IOUSettleFlowResponder$call$signedTransactionFlow$1, subFlowVersion=CoreFlow(platformVersion=11), isEnabledTimedFlow=false), Inlined(flowClass=class net.corda.core.flows.ReceiveTransactionFlow, subFlowVersion=CoreFlow(platformVersion=11), isEnabledTimedFlow=false), Inlined(flowClass=class net.corda.core.internal.ResolveTransactionsFlow, subFlowVersion=CoreFlow(platformVersion=11), isEnabledTimedFlow=false)]
    [Inlined(flowClass=class net.corda.samples.obligation.flows.IOUSettleFlowResponder, subFlowVersion=CorDappFlow(platformVersion=11, corDappName=workflows-1.0, corDappHash=8C2322F3ACFF6CA8FE3E7F554352489D40710486D8ED144430A5784441E56717), isEnabledTimedFlow=false), Inlined(flowClass=class net.corda.samples.obligation.flows.IOUSettleFlowResponder$call$signedTransactionFlow$1, subFlowVersion=CoreFlow(platformVersion=11), isEnabledTimedFlow=false), Inlined(flowClass=class net.corda.core.flows.ReceiveTransactionFlow, subFlowVersion=CoreFlow(platformVersion=11), isEnabledTimedFlow=false), Inlined(flowClass=class net.corda.core.internal.ResolveTransactionsFlow, subFlowVersion=CoreFlow(platformVersion=11), isEnabledTimedFlow=false), Inlined(flowClass=class net.corda.core.internal.FetchNetworkParametersFlow, subFlowVersion=CoreFlow(platformVersion=11), isEnabledTimedFlow=false)]


 --- Transition of flow [b9075f13-4075-455a-9bc0-26f25862e50d] ---
  Timestamp: 2023-01-31T07:42:03.784Z
  Event: LeaveSubFlow
  Actions: 
    
  Continuation: ProcessEvents
  Diff between previous and next state:
checkpoint.checkpointState.subFlowStack: 
    [Inlined(flowClass=class net.corda.samples.obligation.flows.IOUSettleFlowResponder, subFlowVersion=CorDappFlow(platformVersion=11, corDappName=workflows-1.0, corDappHash=8C2322F3ACFF6CA8FE3E7F554352489D40710486D8ED144430A5784441E56717), isEnabledTimedFlow=false), Inlined(flowClass=class net.corda.samples.obligation.flows.IOUSettleFlowResponder$call$signedTransactionFlow$1, subFlowVersion=CoreFlow(platformVersion=11), isEnabledTimedFlow=false), Inlined(flowClass=class net.corda.core.flows.ReceiveTransactionFlow, subFlowVersion=CoreFlow(platformVersion=11), isEnabledTimedFlow=false), Inlined(flowClass=class net.corda.core.internal.ResolveTransactionsFlow, subFlowVersion=CoreFlow(platformVersion=11), isEnabledTimedFlow=false), Inlined(flowClass=class net.corda.core.internal.FetchNetworkParametersFlow, subFlowVersion=CoreFlow(platformVersion=11), isEnabledTimedFlow=false)]
    [Inlined(flowClass=class net.corda.samples.obligation.flows.IOUSettleFlowResponder, subFlowVersion=CorDappFlow(platformVersion=11, corDappName=workflows-1.0, corDappHash=8C2322F3ACFF6CA8FE3E7F554352489D40710486D8ED144430A5784441E56717), isEnabledTimedFlow=false), Inlined(flowClass=class net.corda.samples.obligation.flows.IOUSettleFlowResponder$call$signedTransactionFlow$1, subFlowVersion=CoreFlow(platformVersion=11), isEnabledTimedFlow=false), Inlined(flowClass=class net.corda.core.flows.ReceiveTransactionFlow, subFlowVersion=CoreFlow(platformVersion=11), isEnabledTimedFlow=false), Inlined(flowClass=class net.corda.core.internal.ResolveTransactionsFlow, subFlowVersion=CoreFlow(platformVersion=11), isEnabledTimedFlow=false)]


 --- Transition of flow [b9075f13-4075-455a-9bc0-26f25862e50d] ---
  Timestamp: 2023-01-31T07:42:03.790Z
  Event: Suspend(ioRequest=Sleep(wakeUpAfter=2023-01-31T07:42:03.785Z), maySkipCheckpoint=false, fiber=6B4088ADCF0CE246E35F303D8C9E5D0A04E29659BF005B5C557CCE5A8D1720BE, currentStep=Starting)
  Actions: 
    PersistCheckpoint(id=[b9075f13-4075-455a-9bc0-26f25862e50d], checkpoint=Checkpoint(checkpointState=CheckpointState(invocationContext=InvocationContext(origin=Peer(party=O=Mock Company 1, L=London, C=GB), trace=Trace(invocationId=f89c66b6-c73c-4e25-b500-447e056ac308, timestamp: 2023-01-31T07:42:03.731Z, entityType: Invocation, sessionId=f89c66b6-c73c-4e25-b500-447e056ac308, timestamp: 2023-01-31T07:42:03.731Z, entityType: Session), actor=null, externalTrace=null, impersonatedActor=null, arguments=[], clientId=null), ourIdentity=O=Mock Company 3, L=London, C=GB, sessions={SessionId(toLong=8383758276858904125)=Initiated(peerParty=O=Mock Company 1, L=London, C=GB, peerFlowInfo=FlowInfo(flowVersion=1, appName=<unknown>), receivedMessages=[], otherSideErrored=false, peerSinkSessionId=SessionId(toLong=-7855006138722062871), deduplicationSeed=D--7855006138722062871--5407470294366436114)}, sessionsToBeClosed=[], subFlowStack=[Inlined(flowClass=class net.corda.samples.obligation.flows.IOUSettleFlowResponder, subFlowVersion=CorDappFlow(platformVersion=11, corDappName=workflows-1.0, corDappHash=8C2322F3ACFF6CA8FE3E7F554352489D40710486D8ED144430A5784441E56717), isEnabledTimedFlow=false), Inlined(flowClass=class net.corda.samples.obligation.flows.IOUSettleFlowResponder$call$signedTransactionFlow$1, subFlowVersion=CoreFlow(platformVersion=11), isEnabledTimedFlow=false), Inlined(flowClass=class net.corda.core.flows.ReceiveTransactionFlow, subFlowVersion=CoreFlow(platformVersion=11), isEnabledTimedFlow=false), Inlined(flowClass=class net.corda.core.internal.ResolveTransactionsFlow, subFlowVersion=CoreFlow(platformVersion=11), isEnabledTimedFlow=false)], numberOfSuspends=3, numberOfCommits=4), flowState=Started(flowIORequest=Sleep(wakeUpAfter=2023-01-31T07:42:03.785Z), frozenFiber=6B4088ADCF0CE246E35F303D8C9E5D0A04E29659BF005B5C557CCE5A8D1720BE), errorState=Clean, result=null, status=RUNNABLE, progressStep=Starting, flowIoRequest=Sleep, compatible=true), isCheckpointUpdate=true)
    PersistDeduplicationFacts(deduplicationHandlers=[net.corda.testing.node.internal.MockNodeMessagingService$InMemoryDeduplicationHandler@3a59fe3f])
    CommitTransaction
    AcknowledgeMessages(deduplicationHandlers=[net.corda.testing.node.internal.MockNodeMessagingService$InMemoryDeduplicationHandler@3a59fe3f])
    ScheduleEvent(event=DoRemainingWork)
  Continuation: ProcessEvents
  Diff between previous and next state:
pendingDeduplicationHandlers: 
    [net.corda.testing.node.internal.MockNodeMessagingService$InMemoryDeduplicationHandler@3a59fe3f]
    []
isFlowResumed: 
    true
    false
numberOfCommits: 
    3
    4
checkpoint.flowIoRequest: 
    SendAndReceive
    Sleep
checkpoint.checkpointState.numberOfCommits: 
    3
    4
checkpoint.checkpointState.numberOfSuspends: 
    2
    3
checkpoint.flowState.flowIORequest: 
    Receive(sessions=[FlowSessionImpl(destination=O=Mock Company 1, L=London, C=GB, sourceSessionId=SessionId(toLong=8383758276858904125))])
    Sleep(wakeUpAfter=2023-01-31T07:42:03.785Z)
checkpoint.flowState.frozenFiber.hash: 
    0F07145882CC9FE6EC041FA3FC409195C4E64D1D94721F1339C07A698E54C17F
    6B4088ADCF0CE246E35F303D8C9E5D0A04E29659BF005B5C557CCE5A8D1720BE
checkpoint.timestamp: 
    2023-01-31T07:42:03.784Z
    2023-01-31T07:42:03.787Z


 --- Transition of flow [b9075f13-4075-455a-9bc0-26f25862e50d] ---
  Timestamp: 2023-01-31T07:42:03.790Z
  Event: DoRemainingWork
  Actions: 
    SleepUntil(currentState=StateMachineState(checkpoint=Checkpoint(checkpointState=CheckpointState(invocationContext=InvocationContext(origin=Peer(party=O=Mock Company 1, L=London, C=GB), trace=Trace(invocationId=f89c66b6-c73c-4e25-b500-447e056ac308, timestamp: 2023-01-31T07:42:03.731Z, entityType: Invocation, sessionId=f89c66b6-c73c-4e25-b500-447e056ac308, timestamp: 2023-01-31T07:42:03.731Z, entityType: Session), actor=null, externalTrace=null, impersonatedActor=null, arguments=[], clientId=null), ourIdentity=O=Mock Company 3, L=London, C=GB, sessions={SessionId(toLong=8383758276858904125)=Initiated(peerParty=O=Mock Company 1, L=London, C=GB, peerFlowInfo=FlowInfo(flowVersion=1, appName=<unknown>), receivedMessages=[], otherSideErrored=false, peerSinkSessionId=SessionId(toLong=-7855006138722062871), deduplicationSeed=D--7855006138722062871--5407470294366436114)}, sessionsToBeClosed=[], subFlowStack=[Inlined(flowClass=class net.corda.samples.obligation.flows.IOUSettleFlowResponder, subFlowVersion=CorDappFlow(platformVersion=11, corDappName=workflows-1.0, corDappHash=8C2322F3ACFF6CA8FE3E7F554352489D40710486D8ED144430A5784441E56717), isEnabledTimedFlow=false), Inlined(flowClass=class net.corda.samples.obligation.flows.IOUSettleFlowResponder$call$signedTransactionFlow$1, subFlowVersion=CoreFlow(platformVersion=11), isEnabledTimedFlow=false), Inlined(flowClass=class net.corda.core.flows.ReceiveTransactionFlow, subFlowVersion=CoreFlow(platformVersion=11), isEnabledTimedFlow=false), Inlined(flowClass=class net.corda.core.internal.ResolveTransactionsFlow, subFlowVersion=CoreFlow(platformVersion=11), isEnabledTimedFlow=false)], numberOfSuspends=3, numberOfCommits=4), flowState=Started(flowIORequest=Sleep(wakeUpAfter=2023-01-31T07:42:03.785Z), frozenFiber=6B4088ADCF0CE246E35F303D8C9E5D0A04E29659BF005B5C557CCE5A8D1720BE), errorState=Clean, result=null, status=RUNNABLE, progressStep=Starting, flowIoRequest=Sleep, compatible=true), flowLogic=net.corda.samples.obligation.flows.IOUSettleFlowResponder@47330b32, pendingDeduplicationHandlers=[], isFlowResumed=false, isWaitingForFuture=true, future=java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask@5242885e, isAnyCheckpointPersisted=true, isStartIdempotent=false, isRemoved=false, isKilled=false, isDead=false, senderUUID=06d1057a-f6bc-49f1-bbda-e49059d9fc5a, reloadCheckpointAfterSuspendCount=null, numberOfCommits=4, lock=java.util.concurrent.Semaphore@5a6652b8[Permits = 0]), time=2023-01-31T07:42:03.785Z)
  Continuation: ProcessEvents
  Diff between previous and next state:
isWaitingForFuture: 
    false
    true
future: 
    null
    java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask@5242885e


 --- Transition of flow [b9075f13-4075-455a-9bc0-26f25862e50d] ---
  Timestamp: 2023-01-31T07:42:03.791Z
  Event: WakeUpSleepyFlow
  Actions: 
    CreateTransaction
  Continuation: Resume(result=class kotlin.Unit)
  Diff between previous and next state:
isFlowResumed: 
    false
    true
isWaitingForFuture: 
    true
    false
future: 
    java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask@5242885e
    null


 --- Transition of flow [b9075f13-4075-455a-9bc0-26f25862e50d] ---
  Timestamp: 2023-01-31T07:42:03.791Z
  Event: EnterSubFlow(subFlowClass=class net.corda.core.internal.FetchTransactionsFlow, subFlowVersion=CoreFlow(platformVersion=11), isEnabledTimedFlow=false)
  Actions: 
    
  Continuation: ProcessEvents
  Diff between previous and next state:
checkpoint.checkpointState.subFlowStack: 
    [Inlined(flowClass=class net.corda.samples.obligation.flows.IOUSettleFlowResponder, subFlowVersion=CorDappFlow(platformVersion=11, corDappName=workflows-1.0, corDappHash=8C2322F3ACFF6CA8FE3E7F554352489D40710486D8ED144430A5784441E56717), isEnabledTimedFlow=false), Inlined(flowClass=class net.corda.samples.obligation.flows.IOUSettleFlowResponder$call$signedTransactionFlow$1, subFlowVersion=CoreFlow(platformVersion=11), isEnabledTimedFlow=false), Inlined(flowClass=class net.corda.core.flows.ReceiveTransactionFlow, subFlowVersion=CoreFlow(platformVersion=11), isEnabledTimedFlow=false), Inlined(flowClass=class net.corda.core.internal.ResolveTransactionsFlow, subFlowVersion=CoreFlow(platformVersion=11), isEnabledTimedFlow=false)]
    [Inlined(flowClass=class net.corda.samples.obligation.flows.IOUSettleFlowResponder, subFlowVersion=CorDappFlow(platformVersion=11, corDappName=workflows-1.0, corDappHash=8C2322F3ACFF6CA8FE3E7F554352489D40710486D8ED144430A5784441E56717), isEnabledTimedFlow=false), Inlined(flowClass=class net.corda.samples.obligation.flows.IOUSettleFlowResponder$call$signedTransactionFlow$1, subFlowVersion=CoreFlow(platformVersion=11), isEnabledTimedFlow=false), Inlined(flowClass=class net.corda.core.flows.ReceiveTransactionFlow, subFlowVersion=CoreFlow(platformVersion=11), isEnabledTimedFlow=false), Inlined(flowClass=class net.corda.core.internal.ResolveTransactionsFlow, subFlowVersion=CoreFlow(platformVersion=11), isEnabledTimedFlow=false), Inlined(flowClass=class net.corda.core.internal.FetchTransactionsFlow, subFlowVersion=CoreFlow(platformVersion=11), isEnabledTimedFlow=false)]
checkpoint.timestamp: 
    2023-01-31T07:42:03.787Z
    2023-01-31T07:42:03.791Z


 --- Transition of flow [b9075f13-4075-455a-9bc0-26f25862e50d] ---
  Timestamp: 2023-01-31T07:42:03.792Z
  Event: LeaveSubFlow
  Actions: 
    
  Continuation: ProcessEvents
  Diff between previous and next state:
checkpoint.checkpointState.subFlowStack: 
    [Inlined(flowClass=class net.corda.samples.obligation.flows.IOUSettleFlowResponder, subFlowVersion=CorDappFlow(platformVersion=11, corDappName=workflows-1.0, corDappHash=8C2322F3ACFF6CA8FE3E7F554352489D40710486D8ED144430A5784441E56717), isEnabledTimedFlow=false), Inlined(flowClass=class net.corda.samples.obligation.flows.IOUSettleFlowResponder$call$signedTransactionFlow$1, subFlowVersion=CoreFlow(platformVersion=11), isEnabledTimedFlow=false), Inlined(flowClass=class net.corda.core.flows.ReceiveTransactionFlow, subFlowVersion=CoreFlow(platformVersion=11), isEnabledTimedFlow=false), Inlined(flowClass=class net.corda.core.internal.ResolveTransactionsFlow, subFlowVersion=CoreFlow(platformVersion=11), isEnabledTimedFlow=false), Inlined(flowClass=class net.corda.core.internal.FetchTransactionsFlow, subFlowVersion=CoreFlow(platformVersion=11), isEnabledTimedFlow=false)]
    [Inlined(flowClass=class net.corda.samples.obligation.flows.IOUSettleFlowResponder, subFlowVersion=CorDappFlow(platformVersion=11, corDappName=workflows-1.0, corDappHash=8C2322F3ACFF6CA8FE3E7F554352489D40710486D8ED144430A5784441E56717), isEnabledTimedFlow=false), Inlined(flowClass=class net.corda.samples.obligation.flows.IOUSettleFlowResponder$call$signedTransactionFlow$1, subFlowVersion=CoreFlow(platformVersion=11), isEnabledTimedFlow=false), Inlined(flowClass=class net.corda.core.flows.ReceiveTransactionFlow, subFlowVersion=CoreFlow(platformVersion=11), isEnabledTimedFlow=false), Inlined(flowClass=class net.corda.core.internal.ResolveTransactionsFlow, subFlowVersion=CoreFlow(platformVersion=11), isEnabledTimedFlow=false)]
checkpoint.timestamp: 
    2023-01-31T07:42:03.791Z
    2023-01-31T07:42:03.792Z


 --- Transition of flow [b9075f13-4075-455a-9bc0-26f25862e50d] ---
  Timestamp: 2023-01-31T07:42:03.797Z
  Event: Suspend(ioRequest=Send(sessionToMessage={FlowSessionImpl(destination=O=Mock Company 1, L=London, C=GB, sourceSessionId=SessionId(toLong=8383758276858904125))=768AED61FD2A58D74D7316731407E0600065080E1F3E6397EE4FA5AEFEE79295}), maySkipCheckpoint=false, fiber=FD18C961AC529C997B07690CD3CD815FBA91977F89D9A11DB16AD675967C0964, currentStep=Starting)
  Actions: 
    PersistCheckpoint(id=[b9075f13-4075-455a-9bc0-26f25862e50d], checkpoint=Checkpoint(checkpointState=CheckpointState(invocationContext=InvocationContext(origin=Peer(party=O=Mock Company 1, L=London, C=GB), trace=Trace(invocationId=f89c66b6-c73c-4e25-b500-447e056ac308, timestamp: 2023-01-31T07:42:03.731Z, entityType: Invocation, sessionId=f89c66b6-c73c-4e25-b500-447e056ac308, timestamp: 2023-01-31T07:42:03.731Z, entityType: Session), actor=null, externalTrace=null, impersonatedActor=null, arguments=[], clientId=null), ourIdentity=O=Mock Company 3, L=London, C=GB, sessions={SessionId(toLong=8383758276858904125)=Initiated(peerParty=O=Mock Company 1, L=London, C=GB, peerFlowInfo=FlowInfo(flowVersion=1, appName=<unknown>), receivedMessages=[], otherSideErrored=false, peerSinkSessionId=SessionId(toLong=-7855006138722062871), deduplicationSeed=D--7855006138722062871--5407470294366436114)}, sessionsToBeClosed=[], subFlowStack=[Inlined(flowClass=class net.corda.samples.obligation.flows.IOUSettleFlowResponder, subFlowVersion=CorDappFlow(platformVersion=11, corDappName=workflows-1.0, corDappHash=8C2322F3ACFF6CA8FE3E7F554352489D40710486D8ED144430A5784441E56717), isEnabledTimedFlow=false), Inlined(flowClass=class net.corda.samples.obligation.flows.IOUSettleFlowResponder$call$signedTransactionFlow$1, subFlowVersion=CoreFlow(platformVersion=11), isEnabledTimedFlow=false), Inlined(flowClass=class net.corda.core.flows.ReceiveTransactionFlow, subFlowVersion=CoreFlow(platformVersion=11), isEnabledTimedFlow=false), Inlined(flowClass=class net.corda.core.internal.ResolveTransactionsFlow, subFlowVersion=CoreFlow(platformVersion=11), isEnabledTimedFlow=false)], numberOfSuspends=4, numberOfCommits=5), flowState=Started(flowIORequest=Send(sessionToMessage={FlowSessionImpl(destination=O=Mock Company 1, L=London, C=GB, sourceSessionId=SessionId(toLong=8383758276858904125))=768AED61FD2A58D74D7316731407E0600065080E1F3E6397EE4FA5AEFEE79295}), frozenFiber=FD18C961AC529C997B07690CD3CD815FBA91977F89D9A11DB16AD675967C0964), errorState=Clean, result=null, status=RUNNABLE, progressStep=Starting, flowIoRequest=Send, compatible=true), isCheckpointUpdate=true)
    PersistDeduplicationFacts(deduplicationHandlers=[])
    CommitTransaction
    AcknowledgeMessages(deduplicationHandlers=[])
    ScheduleEvent(event=DoRemainingWork)
  Continuation: ProcessEvents
  Diff between previous and next state:
isFlowResumed: 
    true
    false
numberOfCommits: 
    4
    5
checkpoint.flowIoRequest: 
    Sleep
    Send
checkpoint.checkpointState.numberOfCommits: 
    4
    5
checkpoint.checkpointState.numberOfSuspends: 
    3
    4
checkpoint.flowState.flowIORequest: 
    Sleep(wakeUpAfter=2023-01-31T07:42:03.785Z)
    Send(sessionToMessage={FlowSessionImpl(destination=O=Mock Company 1, L=London, C=GB, sourceSessionId=SessionId(toLong=8383758276858904125))=768AED61FD2A58D74D7316731407E0600065080E1F3E6397EE4FA5AEFEE79295})
checkpoint.flowState.frozenFiber.hash: 
    6B4088ADCF0CE246E35F303D8C9E5D0A04E29659BF005B5C557CCE5A8D1720BE
    FD18C961AC529C997B07690CD3CD815FBA91977F89D9A11DB16AD675967C0964
checkpoint.timestamp: 
    2023-01-31T07:42:03.792Z
    2023-01-31T07:42:03.796Z


 --- Transition of flow [b9075f13-4075-455a-9bc0-26f25862e50d] ---
  Timestamp: 2023-01-31T07:42:03.798Z
  Event: DoRemainingWork
  Actions: 
    SendMultiple(sendInitial=[], sendExisting=[SendExisting(peerParty=O=Mock Company 1, L=London, C=GB, message=ExistingSessionMessage(recipientSessionId=SessionId(toLong=-7855006138722062871), payload=DataSessionMessage(payload=class net.corda.core.serialization.SerializedBytes)), deduplicationId=SenderDeduplicationId(deduplicationId=DeduplicationId(toString=N-D--7855006138722062871--5407470294366436114-4-0), senderUUID=06d1057a-f6bc-49f1-bbda-e49059d9fc5a))])
    CreateTransaction
  Continuation: Resume(result=class kotlin.Unit)
  Diff between previous and next state:
isFlowResumed: 
    false
    true


 --- Transition of flow [b9075f13-4075-455a-9bc0-26f25862e50d] ---
  Timestamp: 2023-01-31T07:42:03.866Z
  Event: LeaveSubFlow
  Actions: 
    
  Continuation: ProcessEvents
  Diff between previous and next state:
checkpoint.checkpointState.subFlowStack: 
    [Inlined(flowClass=class net.corda.samples.obligation.flows.IOUSettleFlowResponder, subFlowVersion=CorDappFlow(platformVersion=11, corDappName=workflows-1.0, corDappHash=8C2322F3ACFF6CA8FE3E7F554352489D40710486D8ED144430A5784441E56717), isEnabledTimedFlow=false), Inlined(flowClass=class net.corda.samples.obligation.flows.IOUSettleFlowResponder$call$signedTransactionFlow$1, subFlowVersion=CoreFlow(platformVersion=11), isEnabledTimedFlow=false), Inlined(flowClass=class net.corda.core.flows.ReceiveTransactionFlow, subFlowVersion=CoreFlow(platformVersion=11), isEnabledTimedFlow=false), Inlined(flowClass=class net.corda.core.internal.ResolveTransactionsFlow, subFlowVersion=CoreFlow(platformVersion=11), isEnabledTimedFlow=false)]
    [Inlined(flowClass=class net.corda.samples.obligation.flows.IOUSettleFlowResponder, subFlowVersion=CorDappFlow(platformVersion=11, corDappName=workflows-1.0, corDappHash=8C2322F3ACFF6CA8FE3E7F554352489D40710486D8ED144430A5784441E56717), isEnabledTimedFlow=false), Inlined(flowClass=class net.corda.samples.obligation.flows.IOUSettleFlowResponder$call$signedTransactionFlow$1, subFlowVersion=CoreFlow(platformVersion=11), isEnabledTimedFlow=false), Inlined(flowClass=class net.corda.core.flows.ReceiveTransactionFlow, subFlowVersion=CoreFlow(platformVersion=11), isEnabledTimedFlow=false)]
checkpoint.timestamp: 
    2023-01-31T07:42:03.798Z
    2023-01-31T07:42:03.866Z


 --- Transition of flow [b9075f13-4075-455a-9bc0-26f25862e50d] ---
  Timestamp: 2023-01-31T07:42:04.139Z
  Event: LeaveSubFlow
  Actions: 
    
  Continuation: ProcessEvents
  Diff between previous and next state:
checkpoint.checkpointState.subFlowStack: 
    [Inlined(flowClass=class net.corda.samples.obligation.flows.IOUSettleFlowResponder, subFlowVersion=CorDappFlow(platformVersion=11, corDappName=workflows-1.0, corDappHash=8C2322F3ACFF6CA8FE3E7F554352489D40710486D8ED144430A5784441E56717), isEnabledTimedFlow=false), Inlined(flowClass=class net.corda.samples.obligation.flows.IOUSettleFlowResponder$call$signedTransactionFlow$1, subFlowVersion=CoreFlow(platformVersion=11), isEnabledTimedFlow=false), Inlined(flowClass=class net.corda.core.flows.ReceiveTransactionFlow, subFlowVersion=CoreFlow(platformVersion=11), isEnabledTimedFlow=false)]
    [Inlined(flowClass=class net.corda.samples.obligation.flows.IOUSettleFlowResponder, subFlowVersion=CorDappFlow(platformVersion=11, corDappName=workflows-1.0, corDappHash=8C2322F3ACFF6CA8FE3E7F554352489D40710486D8ED144430A5784441E56717), isEnabledTimedFlow=false), Inlined(flowClass=class net.corda.samples.obligation.flows.IOUSettleFlowResponder$call$signedTransactionFlow$1, subFlowVersion=CoreFlow(platformVersion=11), isEnabledTimedFlow=false)]
checkpoint.timestamp: 
    2023-01-31T07:42:03.866Z
    2023-01-31T07:42:04.139Z


 --- Transition of flow [b9075f13-4075-455a-9bc0-26f25862e50d] ---
  Timestamp: 2023-01-31T07:42:04.143Z
  Event: Suspend(ioRequest=Receive(sessions=[FlowSessionImpl(destination=O=Mock Company 1, L=London, C=GB, sourceSessionId=SessionId(toLong=8383758276858904125))]), maySkipCheckpoint=false, fiber=6C374E14660C7B3DA26F89BB0741E8F0199E6DFC1EC5DAB7AB2FE948E0B6003C, currentStep=Starting)
  Actions: 
    PersistCheckpoint(id=[b9075f13-4075-455a-9bc0-26f25862e50d], checkpoint=Checkpoint(checkpointState=CheckpointState(invocationContext=InvocationContext(origin=Peer(party=O=Mock Company 1, L=London, C=GB), trace=Trace(invocationId=f89c66b6-c73c-4e25-b500-447e056ac308, timestamp: 2023-01-31T07:42:03.731Z, entityType: Invocation, sessionId=f89c66b6-c73c-4e25-b500-447e056ac308, timestamp: 2023-01-31T07:42:03.731Z, entityType: Session), actor=null, externalTrace=null, impersonatedActor=null, arguments=[], clientId=null), ourIdentity=O=Mock Company 3, L=London, C=GB, sessions={SessionId(toLong=8383758276858904125)=Initiated(peerParty=O=Mock Company 1, L=London, C=GB, peerFlowInfo=FlowInfo(flowVersion=1, appName=<unknown>), receivedMessages=[], otherSideErrored=false, peerSinkSessionId=SessionId(toLong=-7855006138722062871), deduplicationSeed=D--7855006138722062871--5407470294366436114)}, sessionsToBeClosed=[], subFlowStack=[Inlined(flowClass=class net.corda.samples.obligation.flows.IOUSettleFlowResponder, subFlowVersion=CorDappFlow(platformVersion=11, corDappName=workflows-1.0, corDappHash=8C2322F3ACFF6CA8FE3E7F554352489D40710486D8ED144430A5784441E56717), isEnabledTimedFlow=false), Inlined(flowClass=class net.corda.samples.obligation.flows.IOUSettleFlowResponder$call$signedTransactionFlow$1, subFlowVersion=CoreFlow(platformVersion=11), isEnabledTimedFlow=false)], numberOfSuspends=5, numberOfCommits=6), flowState=Started(flowIORequest=Receive(sessions=[FlowSessionImpl(destination=O=Mock Company 1, L=London, C=GB, sourceSessionId=SessionId(toLong=8383758276858904125))]), frozenFiber=6C374E14660C7B3DA26F89BB0741E8F0199E6DFC1EC5DAB7AB2FE948E0B6003C), errorState=Clean, result=null, status=RUNNABLE, progressStep=Starting, flowIoRequest=Receive, compatible=true), isCheckpointUpdate=true)
    PersistDeduplicationFacts(deduplicationHandlers=[])
    CommitTransaction
    AcknowledgeMessages(deduplicationHandlers=[])
    ScheduleEvent(event=DoRemainingWork)
  Continuation: ProcessEvents
  Diff between previous and next state:
isFlowResumed: 
    true
    false
numberOfCommits: 
    5
    6
checkpoint.flowIoRequest: 
    Send
    Receive
checkpoint.checkpointState.numberOfCommits: 
    5
    6
checkpoint.checkpointState.numberOfSuspends: 
    4
    5
checkpoint.flowState.flowIORequest: 
    Send(sessionToMessage={FlowSessionImpl(destination=O=Mock Company 1, L=London, C=GB, sourceSessionId=SessionId(toLong=8383758276858904125))=768AED61FD2A58D74D7316731407E0600065080E1F3E6397EE4FA5AEFEE79295})
    Receive(sessions=[FlowSessionImpl(destination=O=Mock Company 1, L=London, C=GB, sourceSessionId=SessionId(toLong=8383758276858904125))])
checkpoint.flowState.frozenFiber.hash: 
    FD18C961AC529C997B07690CD3CD815FBA91977F89D9A11DB16AD675967C0964
    6C374E14660C7B3DA26F89BB0741E8F0199E6DFC1EC5DAB7AB2FE948E0B6003C
checkpoint.timestamp: 
    2023-01-31T07:42:04.139Z
    2023-01-31T07:42:04.141Z


 --- Transition of flow [b9075f13-4075-455a-9bc0-26f25862e50d] ---
  Timestamp: 2023-01-31T07:42:04.143Z
  Event: DoRemainingWork
  Actions: 
    
  Continuation: ProcessEvents
  Diff between previous and next state:
null

 --- Transition of flow [b9075f13-4075-455a-9bc0-26f25862e50d] ---
  Timestamp: 2023-01-31T07:42:04.154Z
  Event: DeliverSessionMessage(sessionMessage=ExistingSessionMessage(recipientSessionId=SessionId(toLong=8383758276858904125), payload=DataSessionMessage(payload=class net.corda.core.serialization.SerializedBytes)), deduplicationHandler=net.corda.testing.node.internal.MockNodeMessagingService$InMemoryDeduplicationHandler@1e325456, sender=O=Mock Company 1, L=London, C=GB)
  Actions: 
    ScheduleEvent(event=DoRemainingWork)
  Continuation: ProcessEvents
  Diff between previous and next state:
pendingDeduplicationHandlers: 
    []
    [net.corda.testing.node.internal.MockNodeMessagingService$InMemoryDeduplicationHandler@1e325456]
checkpoint.checkpointState.sessions.SessionId(toLong=8383758276858904125).receivedMessages.isEmpty: 
    true
    false
checkpoint.timestamp: 
    2023-01-31T07:42:04.143Z
    2023-01-31T07:42:04.154Z


 --- Transition of flow [b9075f13-4075-455a-9bc0-26f25862e50d] ---
  Timestamp: 2023-01-31T07:42:04.154Z
  Event: DoRemainingWork
  Actions: 
    CreateTransaction
  Continuation: Resume(result=class java.util.LinkedHashMap)
  Diff between previous and next state:
isFlowResumed: 
    false
    true
checkpoint.checkpointState.sessions.SessionId(toLong=8383758276858904125).receivedMessages.isEmpty: 
    false
    true


 --- Transition of flow [b9075f13-4075-455a-9bc0-26f25862e50d] ---
  Timestamp: 2023-01-31T07:42:04.162Z
  Event: Suspend(ioRequest=Send(sessionToMessage={FlowSessionImpl(destination=O=Mock Company 1, L=London, C=GB, sourceSessionId=SessionId(toLong=8383758276858904125))=0B3E7A99B785C1F8B82DEB6594D9A9FC789E4CF3ECC68194E62FB63CC97B14D3}), maySkipCheckpoint=false, fiber=98F3009433C39551699CA71CC8ED0F432EEF2B35BED9998E504117538CFA94BF, currentStep=Starting)
  Actions: 
    PersistCheckpoint(id=[b9075f13-4075-455a-9bc0-26f25862e50d], checkpoint=Checkpoint(checkpointState=CheckpointState(invocationContext=InvocationContext(origin=Peer(party=O=Mock Company 1, L=London, C=GB), trace=Trace(invocationId=f89c66b6-c73c-4e25-b500-447e056ac308, timestamp: 2023-01-31T07:42:03.731Z, entityType: Invocation, sessionId=f89c66b6-c73c-4e25-b500-447e056ac308, timestamp: 2023-01-31T07:42:03.731Z, entityType: Session), actor=null, externalTrace=null, impersonatedActor=null, arguments=[], clientId=null), ourIdentity=O=Mock Company 3, L=London, C=GB, sessions={SessionId(toLong=8383758276858904125)=Initiated(peerParty=O=Mock Company 1, L=London, C=GB, peerFlowInfo=FlowInfo(flowVersion=1, appName=<unknown>), receivedMessages=[], otherSideErrored=false, peerSinkSessionId=SessionId(toLong=-7855006138722062871), deduplicationSeed=D--7855006138722062871--5407470294366436114)}, sessionsToBeClosed=[], subFlowStack=[Inlined(flowClass=class net.corda.samples.obligation.flows.IOUSettleFlowResponder, subFlowVersion=CorDappFlow(platformVersion=11, corDappName=workflows-1.0, corDappHash=8C2322F3ACFF6CA8FE3E7F554352489D40710486D8ED144430A5784441E56717), isEnabledTimedFlow=false), Inlined(flowClass=class net.corda.samples.obligation.flows.IOUSettleFlowResponder$call$signedTransactionFlow$1, subFlowVersion=CoreFlow(platformVersion=11), isEnabledTimedFlow=false)], numberOfSuspends=6, numberOfCommits=7), flowState=Started(flowIORequest=Send(sessionToMessage={FlowSessionImpl(destination=O=Mock Company 1, L=London, C=GB, sourceSessionId=SessionId(toLong=8383758276858904125))=0B3E7A99B785C1F8B82DEB6594D9A9FC789E4CF3ECC68194E62FB63CC97B14D3}), frozenFiber=98F3009433C39551699CA71CC8ED0F432EEF2B35BED9998E504117538CFA94BF), errorState=Clean, result=null, status=RUNNABLE, progressStep=Starting, flowIoRequest=Send, compatible=true), isCheckpointUpdate=true)
    PersistDeduplicationFacts(deduplicationHandlers=[net.corda.testing.node.internal.MockNodeMessagingService$InMemoryDeduplicationHandler@1e325456])
    CommitTransaction
    AcknowledgeMessages(deduplicationHandlers=[net.corda.testing.node.internal.MockNodeMessagingService$InMemoryDeduplicationHandler@1e325456])
    ScheduleEvent(event=DoRemainingWork)
  Continuation: ProcessEvents
  Diff between previous and next state:
pendingDeduplicationHandlers: 
    [net.corda.testing.node.internal.MockNodeMessagingService$InMemoryDeduplicationHandler@1e325456]
    []
isFlowResumed: 
    true
    false
numberOfCommits: 
    6
    7
checkpoint.flowIoRequest: 
    Receive
    Send
checkpoint.checkpointState.numberOfCommits: 
    6
    7
checkpoint.checkpointState.numberOfSuspends: 
    5
    6
checkpoint.flowState.flowIORequest: 
    Receive(sessions=[FlowSessionImpl(destination=O=Mock Company 1, L=London, C=GB, sourceSessionId=SessionId(toLong=8383758276858904125))])
    Send(sessionToMessage={FlowSessionImpl(destination=O=Mock Company 1, L=London, C=GB, sourceSessionId=SessionId(toLong=8383758276858904125))=0B3E7A99B785C1F8B82DEB6594D9A9FC789E4CF3ECC68194E62FB63CC97B14D3})
checkpoint.flowState.frozenFiber.hash: 
    6C374E14660C7B3DA26F89BB0741E8F0199E6DFC1EC5DAB7AB2FE948E0B6003C
    98F3009433C39551699CA71CC8ED0F432EEF2B35BED9998E504117538CFA94BF
checkpoint.timestamp: 
    2023-01-31T07:42:04.154Z
    2023-01-31T07:42:04.161Z


 --- Transition of flow [b9075f13-4075-455a-9bc0-26f25862e50d] ---
  Timestamp: 2023-01-31T07:42:04.163Z
  Event: DoRemainingWork
  Actions: 
    SendMultiple(sendInitial=[], sendExisting=[SendExisting(peerParty=O=Mock Company 1, L=London, C=GB, message=ExistingSessionMessage(recipientSessionId=SessionId(toLong=-7855006138722062871), payload=DataSessionMessage(payload=class net.corda.core.serialization.SerializedBytes)), deduplicationId=SenderDeduplicationId(deduplicationId=DeduplicationId(toString=N-D--7855006138722062871--5407470294366436114-6-0), senderUUID=06d1057a-f6bc-49f1-bbda-e49059d9fc5a))])
    CreateTransaction
  Continuation: Resume(result=class kotlin.Unit)
  Diff between previous and next state:
isFlowResumed: 
    false
    true


 --- Transition of flow [b9075f13-4075-455a-9bc0-26f25862e50d] ---
  Timestamp: 2023-01-31T07:42:04.163Z
  Event: LeaveSubFlow
  Actions: 
    
  Continuation: ProcessEvents
  Diff between previous and next state:
checkpoint.checkpointState.subFlowStack: 
    [Inlined(flowClass=class net.corda.samples.obligation.flows.IOUSettleFlowResponder, subFlowVersion=CorDappFlow(platformVersion=11, corDappName=workflows-1.0, corDappHash=8C2322F3ACFF6CA8FE3E7F554352489D40710486D8ED144430A5784441E56717), isEnabledTimedFlow=false), Inlined(flowClass=class net.corda.samples.obligation.flows.IOUSettleFlowResponder$call$signedTransactionFlow$1, subFlowVersion=CoreFlow(platformVersion=11), isEnabledTimedFlow=false)]
    [Inlined(flowClass=class net.corda.samples.obligation.flows.IOUSettleFlowResponder, subFlowVersion=CorDappFlow(platformVersion=11, corDappName=workflows-1.0, corDappHash=8C2322F3ACFF6CA8FE3E7F554352489D40710486D8ED144430A5784441E56717), isEnabledTimedFlow=false)]
checkpoint.timestamp: 
    2023-01-31T07:42:04.162Z
    2023-01-31T07:42:04.163Z


 --- Transition of flow [b9075f13-4075-455a-9bc0-26f25862e50d] ---
  Timestamp: 2023-01-31T07:42:04.163Z
  Event: EnterSubFlow(subFlowClass=class net.corda.core.flows.ReceiveFinalityFlow, subFlowVersion=CoreFlow(platformVersion=11), isEnabledTimedFlow=false)
  Actions: 
    
  Continuation: ProcessEvents
  Diff between previous and next state:
checkpoint.checkpointState.subFlowStack: 
    [Inlined(flowClass=class net.corda.samples.obligation.flows.IOUSettleFlowResponder, subFlowVersion=CorDappFlow(platformVersion=11, corDappName=workflows-1.0, corDappHash=8C2322F3ACFF6CA8FE3E7F554352489D40710486D8ED144430A5784441E56717), isEnabledTimedFlow=false)]
    [Inlined(flowClass=class net.corda.samples.obligation.flows.IOUSettleFlowResponder, subFlowVersion=CorDappFlow(platformVersion=11, corDappName=workflows-1.0, corDappHash=8C2322F3ACFF6CA8FE3E7F554352489D40710486D8ED144430A5784441E56717), isEnabledTimedFlow=false), Inlined(flowClass=class net.corda.core.flows.ReceiveFinalityFlow, subFlowVersion=CoreFlow(platformVersion=11), isEnabledTimedFlow=false)]


 --- Transition of flow [b9075f13-4075-455a-9bc0-26f25862e50d] ---
  Timestamp: 2023-01-31T07:42:04.163Z
  Event: EnterSubFlow(subFlowClass=class net.corda.core.flows.ReceiveFinalityFlow$call$1, subFlowVersion=CoreFlow(platformVersion=11), isEnabledTimedFlow=false)
  Actions: 
    
  Continuation: ProcessEvents
  Diff between previous and next state:
checkpoint.checkpointState.subFlowStack: 
    [Inlined(flowClass=class net.corda.samples.obligation.flows.IOUSettleFlowResponder, subFlowVersion=CorDappFlow(platformVersion=11, corDappName=workflows-1.0, corDappHash=8C2322F3ACFF6CA8FE3E7F554352489D40710486D8ED144430A5784441E56717), isEnabledTimedFlow=false), Inlined(flowClass=class net.corda.core.flows.ReceiveFinalityFlow, subFlowVersion=CoreFlow(platformVersion=11), isEnabledTimedFlow=false)]
    [Inlined(flowClass=class net.corda.samples.obligation.flows.IOUSettleFlowResponder, subFlowVersion=CorDappFlow(platformVersion=11, corDappName=workflows-1.0, corDappHash=8C2322F3ACFF6CA8FE3E7F554352489D40710486D8ED144430A5784441E56717), isEnabledTimedFlow=false), Inlined(flowClass=class net.corda.core.flows.ReceiveFinalityFlow, subFlowVersion=CoreFlow(platformVersion=11), isEnabledTimedFlow=false), Inlined(flowClass=class net.corda.core.flows.ReceiveFinalityFlow$call$1, subFlowVersion=CoreFlow(platformVersion=11), isEnabledTimedFlow=false)]


 --- Transition of flow [b9075f13-4075-455a-9bc0-26f25862e50d] ---
  Timestamp: 2023-01-31T07:42:04.166Z
  Event: Suspend(ioRequest=Receive(sessions=[FlowSessionImpl(destination=O=Mock Company 1, L=London, C=GB, sourceSessionId=SessionId(toLong=8383758276858904125))]), maySkipCheckpoint=false, fiber=8D886AA3AE154E1BDCBCC4271AE116463F78A50DBC8A22F0B849307DBEF3260D, currentStep=Starting)
  Actions: 
    PersistCheckpoint(id=[b9075f13-4075-455a-9bc0-26f25862e50d], checkpoint=Checkpoint(checkpointState=CheckpointState(invocationContext=InvocationContext(origin=Peer(party=O=Mock Company 1, L=London, C=GB), trace=Trace(invocationId=f89c66b6-c73c-4e25-b500-447e056ac308, timestamp: 2023-01-31T07:42:03.731Z, entityType: Invocation, sessionId=f89c66b6-c73c-4e25-b500-447e056ac308, timestamp: 2023-01-31T07:42:03.731Z, entityType: Session), actor=null, externalTrace=null, impersonatedActor=null, arguments=[], clientId=null), ourIdentity=O=Mock Company 3, L=London, C=GB, sessions={SessionId(toLong=8383758276858904125)=Initiated(peerParty=O=Mock Company 1, L=London, C=GB, peerFlowInfo=FlowInfo(flowVersion=1, appName=<unknown>), receivedMessages=[], otherSideErrored=false, peerSinkSessionId=SessionId(toLong=-7855006138722062871), deduplicationSeed=D--7855006138722062871--5407470294366436114)}, sessionsToBeClosed=[], subFlowStack=[Inlined(flowClass=class net.corda.samples.obligation.flows.IOUSettleFlowResponder, subFlowVersion=CorDappFlow(platformVersion=11, corDappName=workflows-1.0, corDappHash=8C2322F3ACFF6CA8FE3E7F554352489D40710486D8ED144430A5784441E56717), isEnabledTimedFlow=false), Inlined(flowClass=class net.corda.core.flows.ReceiveFinalityFlow, subFlowVersion=CoreFlow(platformVersion=11), isEnabledTimedFlow=false), Inlined(flowClass=class net.corda.core.flows.ReceiveFinalityFlow$call$1, subFlowVersion=CoreFlow(platformVersion=11), isEnabledTimedFlow=false)], numberOfSuspends=7, numberOfCommits=8), flowState=Started(flowIORequest=Receive(sessions=[FlowSessionImpl(destination=O=Mock Company 1, L=London, C=GB, sourceSessionId=SessionId(toLong=8383758276858904125))]), frozenFiber=8D886AA3AE154E1BDCBCC4271AE116463F78A50DBC8A22F0B849307DBEF3260D), errorState=Clean, result=null, status=RUNNABLE, progressStep=Starting, flowIoRequest=Receive, compatible=true), isCheckpointUpdate=true)
    PersistDeduplicationFacts(deduplicationHandlers=[])
    CommitTransaction
    AcknowledgeMessages(deduplicationHandlers=[])
    ScheduleEvent(event=DoRemainingWork)
  Continuation: ProcessEvents
  Diff between previous and next state:
isFlowResumed: 
    true
    false
numberOfCommits: 
    7
    8
checkpoint.flowIoRequest: 
    Send
    Receive
checkpoint.checkpointState.numberOfCommits: 
    7
    8
checkpoint.checkpointState.numberOfSuspends: 
    6
    7
checkpoint.flowState.flowIORequest: 
    Send(sessionToMessage={FlowSessionImpl(destination=O=Mock Company 1, L=London, C=GB, sourceSessionId=SessionId(toLong=8383758276858904125))=0B3E7A99B785C1F8B82DEB6594D9A9FC789E4CF3ECC68194E62FB63CC97B14D3})
    Receive(sessions=[FlowSessionImpl(destination=O=Mock Company 1, L=London, C=GB, sourceSessionId=SessionId(toLong=8383758276858904125))])
checkpoint.flowState.frozenFiber.hash: 
    98F3009433C39551699CA71CC8ED0F432EEF2B35BED9998E504117538CFA94BF
    8D886AA3AE154E1BDCBCC4271AE116463F78A50DBC8A22F0B849307DBEF3260D
checkpoint.timestamp: 
    2023-01-31T07:42:04.163Z
    2023-01-31T07:42:04.164Z


 --- Transition of flow [b9075f13-4075-455a-9bc0-26f25862e50d] ---
  Timestamp: 2023-01-31T07:42:04.167Z
  Event: DoRemainingWork
  Actions: 
    
  Continuation: ProcessEvents
  Diff between previous and next state:
null

 --- Transition of flow [b9075f13-4075-455a-9bc0-26f25862e50d] ---
  Timestamp: 2023-01-31T07:42:04.303Z
  Event: DeliverSessionMessage(sessionMessage=ExistingSessionMessage(recipientSessionId=SessionId(toLong=8383758276858904125), payload=ErrorSessionMessage(flowException=null, errorId=934314092166762226)), deduplicationHandler=net.corda.testing.node.internal.MockNodeMessagingService$InMemoryDeduplicationHandler@2599684a, sender=O=Mock Company 1, L=London, C=GB)
  Actions: 
    ScheduleEvent(event=DoRemainingWork)
  Continuation: ProcessEvents
  Diff between previous and next state:
pendingDeduplicationHandlers: 
    []
    [net.corda.testing.node.internal.MockNodeMessagingService$InMemoryDeduplicationHandler@2599684a]
checkpoint.checkpointState.sessions.SessionId(toLong=8383758276858904125).receivedMessages.isEmpty: 
    true
    false
checkpoint.timestamp: 
    2023-01-31T07:42:04.166Z
    2023-01-31T07:42:04.303Z


 --- Transition of flow [b9075f13-4075-455a-9bc0-26f25862e50d] ---
  Timestamp: 2023-01-31T07:42:04.304Z
  Event: DoRemainingWork
  Actions: 
    CreateTransaction
  Continuation: Throw(throwable=net.corda.core.flows.UnexpectedFlowEndException: Counter-flow errored)
  Diff between previous and next state:
isFlowResumed: 
    false
    true
checkpoint.checkpointState.sessions.SessionId(toLong=8383758276858904125).otherSideErrored: 
    false
    true
checkpoint.checkpointState.sessions.SessionId(toLong=8383758276858904125).receivedMessages.isEmpty: 
    false
    true
checkpoint.timestamp: 
    2023-01-31T07:42:04.303Z
    2023-01-31T07:42:04.304Z


 --- Transition of flow [b9075f13-4075-455a-9bc0-26f25862e50d] ---
  Timestamp: 2023-01-31T07:42:04.304Z
  Event: LeaveSubFlow
  Actions: 
    
  Continuation: ProcessEvents
  Diff between previous and next state:
checkpoint.checkpointState.subFlowStack: 
    [Inlined(flowClass=class net.corda.samples.obligation.flows.IOUSettleFlowResponder, subFlowVersion=CorDappFlow(platformVersion=11, corDappName=workflows-1.0, corDappHash=8C2322F3ACFF6CA8FE3E7F554352489D40710486D8ED144430A5784441E56717), isEnabledTimedFlow=false), Inlined(flowClass=class net.corda.core.flows.ReceiveFinalityFlow, subFlowVersion=CoreFlow(platformVersion=11), isEnabledTimedFlow=false), Inlined(flowClass=class net.corda.core.flows.ReceiveFinalityFlow$call$1, subFlowVersion=CoreFlow(platformVersion=11), isEnabledTimedFlow=false)]
    [Inlined(flowClass=class net.corda.samples.obligation.flows.IOUSettleFlowResponder, subFlowVersion=CorDappFlow(platformVersion=11, corDappName=workflows-1.0, corDappHash=8C2322F3ACFF6CA8FE3E7F554352489D40710486D8ED144430A5784441E56717), isEnabledTimedFlow=false), Inlined(flowClass=class net.corda.core.flows.ReceiveFinalityFlow, subFlowVersion=CoreFlow(platformVersion=11), isEnabledTimedFlow=false)]


 --- Transition of flow [b9075f13-4075-455a-9bc0-26f25862e50d] ---
  Timestamp: 2023-01-31T07:42:04.304Z
  Event: LeaveSubFlow
  Actions: 
    
  Continuation: ProcessEvents
  Diff between previous and next state:
checkpoint.checkpointState.subFlowStack: 
    [Inlined(flowClass=class net.corda.samples.obligation.flows.IOUSettleFlowResponder, subFlowVersion=CorDappFlow(platformVersion=11, corDappName=workflows-1.0, corDappHash=8C2322F3ACFF6CA8FE3E7F554352489D40710486D8ED144430A5784441E56717), isEnabledTimedFlow=false), Inlined(flowClass=class net.corda.core.flows.ReceiveFinalityFlow, subFlowVersion=CoreFlow(platformVersion=11), isEnabledTimedFlow=false)]
    [Inlined(flowClass=class net.corda.samples.obligation.flows.IOUSettleFlowResponder, subFlowVersion=CorDappFlow(platformVersion=11, corDappName=workflows-1.0, corDappHash=8C2322F3ACFF6CA8FE3E7F554352489D40710486D8ED144430A5784441E56717), isEnabledTimedFlow=false)]


 --- Transition of flow [b9075f13-4075-455a-9bc0-26f25862e50d] ---
  Timestamp: 2023-01-31T07:42:04.306Z
  Event: Error(exception=net.corda.core.flows.UnexpectedFlowEndException: Counter-flow errored, rollback=true)
  Actions: 
    RollbackTransaction
    ScheduleEvent(event=DoRemainingWork)
  Continuation: ProcessEvents
  Diff between previous and next state:
isFlowResumed: 
    true
    false
checkpoint.errorState: 
    Clean
    Errored(errors=[FlowError(errorId=934314092166762226, exception=net.corda.core.flows.UnexpectedFlowEndException: Counter-flow errored)], propagatedIndex=0, propagating=false)


 --- Transition of flow [b9075f13-4075-455a-9bc0-26f25862e50d] ---
  Timestamp: 2023-01-31T07:42:04.306Z
  Event: DoRemainingWork
  Actions: 
    
  Continuation: ProcessEvents
  Diff between previous and next state:
null

 --- Transition of flow [b9075f13-4075-455a-9bc0-26f25862e50d] ---
  Timestamp: 2023-01-31T07:42:04.306Z
  Event: StartErrorPropagation
  Actions: 
    ScheduleEvent(event=DoRemainingWork)
  Continuation: ProcessEvents
  Diff between previous and next state:
checkpoint.errorState.propagating: 
    false
    true
checkpoint.timestamp: 
    2023-01-31T07:42:04.304Z
    2023-01-31T07:42:04.306Z


 --- Transition of flow [b9075f13-4075-455a-9bc0-26f25862e50d] ---
  Timestamp: 2023-01-31T07:42:04.333Z
  Event: DoRemainingWork
  Actions: 
    PropagateErrors(errorMessages=[ErrorSessionMessage(flowException=null, errorId=934314092166762226)], sessions=[], senderUUID=06d1057a-f6bc-49f1-bbda-e49059d9fc5a)
    CreateTransaction
    RemoveCheckpoint(id=[b9075f13-4075-455a-9bc0-26f25862e50d], mayHavePersistentResults=false)
    PersistDeduplicationFacts(deduplicationHandlers=[net.corda.testing.node.internal.MockNodeMessagingService$InMemoryDeduplicationHandler@2599684a])
    ReleaseSoftLocks(uuid=b9075f13-4075-455a-9bc0-26f25862e50d)
    CommitTransaction
    AcknowledgeMessages(deduplicationHandlers=[net.corda.testing.node.internal.MockNodeMessagingService$InMemoryDeduplicationHandler@2599684a])
    RemoveSessionBindings(sessionIds=[SessionId(toLong=8383758276858904125)])
    RemoveFlow(flowId=[b9075f13-4075-455a-9bc0-26f25862e50d], removalReason=ErrorFinish(flowErrors=[FlowError(errorId=934314092166762226, exception=net.corda.core.flows.UnexpectedFlowEndException: Counter-flow errored)]), lastState=StateMachineState(checkpoint=Checkpoint(checkpointState=CheckpointState(invocationContext=InvocationContext(origin=Peer(party=O=Mock Company 1, L=London, C=GB), trace=Trace(invocationId=f89c66b6-c73c-4e25-b500-447e056ac308, timestamp: 2023-01-31T07:42:03.731Z, entityType: Invocation, sessionId=f89c66b6-c73c-4e25-b500-447e056ac308, timestamp: 2023-01-31T07:42:03.731Z, entityType: Session), actor=null, externalTrace=null, impersonatedActor=null, arguments=[], clientId=null), ourIdentity=O=Mock Company 3, L=London, C=GB, sessions={SessionId(toLong=8383758276858904125)=Initiated(peerParty=O=Mock Company 1, L=London, C=GB, peerFlowInfo=FlowInfo(flowVersion=1, appName=<unknown>), receivedMessages=[], otherSideErrored=true, peerSinkSessionId=SessionId(toLong=-7855006138722062871), deduplicationSeed=D--7855006138722062871--5407470294366436114)}, sessionsToBeClosed=[], subFlowStack=[Inlined(flowClass=class net.corda.samples.obligation.flows.IOUSettleFlowResponder, subFlowVersion=CorDappFlow(platformVersion=11, corDappName=workflows-1.0, corDappHash=8C2322F3ACFF6CA8FE3E7F554352489D40710486D8ED144430A5784441E56717), isEnabledTimedFlow=false)], numberOfSuspends=7, numberOfCommits=9), flowState=net.corda.node.services.statemachine.FlowState$Finished@5c0781ef, errorState=Errored(errors=[FlowError(errorId=934314092166762226, exception=net.corda.core.flows.UnexpectedFlowEndException: Counter-flow errored)], propagatedIndex=0, propagating=true), result=null, status=FAILED, progressStep=Starting, flowIoRequest=Receive, compatible=true), flowLogic=net.corda.samples.obligation.flows.IOUSettleFlowResponder@47330b32, pendingDeduplicationHandlers=[], isFlowResumed=false, isWaitingForFuture=false, future=null, isAnyCheckpointPersisted=true, isStartIdempotent=false, isRemoved=true, isKilled=false, isDead=false, senderUUID=06d1057a-f6bc-49f1-bbda-e49059d9fc5a, reloadCheckpointAfterSuspendCount=null, numberOfCommits=9, lock=java.util.concurrent.Semaphore@5a6652b8[Permits = 0]))
  Continuation: Abort
  Diff between previous and next state:
pendingDeduplicationHandlers: 
    [net.corda.testing.node.internal.MockNodeMessagingService$InMemoryDeduplicationHandler@2599684a]
    []
numberOfCommits: 
    8
    9
isRemoved: 
    false
    true
checkpoint.status: 
    RUNNABLE
    FAILED
checkpoint.checkpointState.numberOfCommits: 
    8
    9
checkpoint.flowState: 
    Started(flowIORequest=Receive(sessions=[FlowSessionImpl(destination=O=Mock Company 1, L=London, C=GB, sourceSessionId=SessionId(toLong=8383758276858904125))]), frozenFiber=8D886AA3AE154E1BDCBCC4271AE116463F78A50DBC8A22F0B849307DBEF3260D)
    net.corda.node.services.statemachine.FlowState$Finished@5c0781ef
checkpoint.timestamp: 
    2023-01-31T07:42:04.306Z
    2023-01-31T07:42:04.327Z
 {fiber-id=10000029, flow-id=b9075f13-4075-455a-9bc0-26f25862e50d, invocation_id=f89c66b6-c73c-4e25-b500-447e056ac308, invocation_timestamp=2023-01-31T07:42:03.731Z, origin=O=Mock Company 1, L=London, C=GB, session_id=f89c66b6-c73c-4e25-b500-447e056ac308, session_timestamp=2023-01-31T07:42:03.731Z, thread-id=858, tx_id=55A76480A2D34BE067B32C0D7A6E787BEB22BC8E172C25AD05FE08B4B68BDB46}
[WARN ] 2023-01-31T07:42:04,344Z [Mock network] interceptors.DumpHistoryOnErrorInterceptor. - Flow [b9075f13-4075-455a-9bc0-26f25862e50d] error {fiber-id=10000029, flow-id=b9075f13-4075-455a-9bc0-26f25862e50d, invocation_id=f89c66b6-c73c-4e25-b500-447e056ac308, invocation_timestamp=2023-01-31T07:42:03.731Z, origin=O=Mock Company 1, L=London, C=GB, session_id=f89c66b6-c73c-4e25-b500-447e056ac308, session_timestamp=2023-01-31T07:42:03.731Z, thread-id=858, tx_id=55A76480A2D34BE067B32C0D7A6E787BEB22BC8E172C25AD05FE08B4B68BDB46}
net.corda.core.flows.UnexpectedFlowEndException: Counter-flow errored
	at Received unexpected counter-flow exception from peer O=Mock Company 1, L=London, C=GB.() ~[?:?]
	at net.corda.node.services.statemachine.FlowStateMachineImpl.fillInLocalStackTrace(FlowStateMachineImpl.kt:244) ~[corda-node-4.9.jar:?]
	at net.corda.node.services.statemachine.FlowStateMachineImpl.processEventsUntilFlowIsResumed(FlowStateMachineImpl.kt:225) ~[corda-node-4.9.jar:?]
	at net.corda.node.services.statemachine.FlowStateMachineImpl.suspend(FlowStateMachineImpl.kt:577) ~[corda-node-4.9.jar:?]
	at net.corda.node.services.statemachine.FlowSessionImpl.receive(FlowSessionImpl.kt:67) ~[corda-node-4.9.jar:?]
	at net.corda.node.services.statemachine.FlowSessionImpl.receive(FlowSessionImpl.kt:71) ~[corda-node-4.9.jar:?]
	at net.corda.core.flows.ReceiveTransactionFlow.call(ReceiveTransactionFlow.kt:103) ~[corda-core-4.9.jar:?]
	at net.corda.core.flows.ReceiveTransactionFlow.call(ReceiveTransactionFlow.kt:31) ~[corda-core-4.9.jar:?]
	at net.corda.node.services.statemachine.FlowStateMachineImpl.subFlow(FlowStateMachineImpl.kt:420) ~[corda-node-4.9.jar:?]
	at net.corda.core.flows.FlowLogic.subFlow(FlowLogic.kt:409) ~[corda-core-4.9.jar:?]
	at net.corda.core.flows.ReceiveFinalityFlow.call(FinalityFlow.kt:285) ~[corda-core-4.9.jar:?]
	at net.corda.core.flows.ReceiveFinalityFlow.call(FinalityFlow.kt:280) ~[corda-core-4.9.jar:?]
	at net.corda.node.services.statemachine.FlowStateMachineImpl.subFlow(FlowStateMachineImpl.kt:420) ~[corda-node-4.9.jar:?]
	at net.corda.core.flows.FlowLogic.subFlow(FlowLogic.kt:409) ~[corda-core-4.9.jar:?]
	at net.corda.samples.obligation.flows.IOUSettleFlowResponder.call(IOUSettleFlow.kt:139) ~[main/:?]
	at net.corda.samples.obligation.flows.IOUSettleFlowResponder.call(IOUSettleFlow.kt:126) ~[main/:?]
	at net.corda.node.services.statemachine.FlowStateMachineImpl.run(FlowStateMachineImpl.kt:349) ~[corda-node-4.9.jar:?]
	at net.corda.node.services.statemachine.FlowStateMachineImpl.run(FlowStateMachineImpl.kt:71) ~[corda-node-4.9.jar:?]
	at co.paralleluniverse.fibers.Fiber.run1(Fiber.java:1092) ~[quasar-core-0.7.10.jar:0.7.10]
	at co.paralleluniverse.fibers.Fiber.exec(Fiber.java:788) ~[quasar-core-0.7.10.jar:0.7.10]
	at co.paralleluniverse.fibers.RunnableFiberTask.doExec(RunnableFiberTask.java:100) ~[quasar-core-0.7.10.jar:0.7.10]
	at co.paralleluniverse.fibers.RunnableFiberTask.run(RunnableFiberTask.java:91) ~[quasar-core-0.7.10.jar:0.7.10]
	at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:511) ~[?:1.8.0_202]
	at java.util.concurrent.FutureTask.run(FutureTask.java:266) ~[?:1.8.0_202]
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.access$201(ScheduledThreadPoolExecutor.java:180) ~[?:1.8.0_202]
	at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.run(ScheduledThreadPoolExecutor.java:293) ~[?:1.8.0_202]
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149) ~[?:1.8.0_202]
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624) ~[?:1.8.0_202]
	at net.corda.node.utilities.AffinityExecutor$ServiceAffinityExecutor$1$thread$1.run(AffinityExecutor.kt:63) ~[corda-node-4.9.jar:?]
[INFO ] 2023-01-31T07:42:04,360Z [Test worker] persistence.CordaPersistence. - Closing HikariDataSource (HikariPool-1) {}
[INFO ] 2023-01-31T07:42:04,394Z [Test worker] internal.MockNodeMessagingService. - Status change to false {}
[INFO ] 2023-01-31T07:42:04,394Z [Test worker] internal.InternalMockNetwork$MockNode. - MessagingService active change to: false {}
[INFO ] 2023-01-31T07:42:04,399Z [Test worker] persistence.CordaPersistence. - Closing HikariDataSource (HikariPool-2) {}
[INFO ] 2023-01-31T07:42:04,422Z [Test worker] internal.MockNodeMessagingService. - Status change to false {}
[INFO ] 2023-01-31T07:42:04,422Z [Test worker] internal.InternalMockNetwork$MockNode. - MessagingService active change to: false {}
[INFO ] 2023-01-31T07:42:04,424Z [Test worker] persistence.CordaPersistence. - Closing HikariDataSource (HikariPool-3) {}
[INFO ] 2023-01-31T07:42:04,437Z [Test worker] internal.MockNodeMessagingService. - Status change to false {}
[INFO ] 2023-01-31T07:42:04,437Z [Test worker] internal.InternalMockNetwork$MockNode. - MessagingService active change to: false {}
[INFO ] 2023-01-31T07:42:04,439Z [Test worker] persistence.CordaPersistence. - Closing HikariDataSource (HikariPool-4) {}
[INFO ] 2023-01-31T07:42:04,451Z [Test worker] internal.MockNodeMessagingService. - Status change to false {}
[INFO ] 2023-01-31T07:42:04,451Z [Test worker] internal.InternalMockNetwork$MockNode. - MessagingService active change to: false {}
[INFO ] 2023-01-31T07:44:51,260Z [Test worker] internal.TestCordappImpl. - Generating CorDapp jar from local project in /Users/peter.li/Desktop/obligation-cordapp/workflows ... {}
[INFO ] 2023-01-31T07:44:51,402Z [Connection worker] internal.TestCordappImpl. - Build {}
[INFO ] 2023-01-31T07:44:52,599Z [Connection worker] internal.TestCordappImpl. - Starting Gradle Daemon {}
[INFO ] 2023-01-31T07:44:53,470Z [Connection worker] internal.TestCordappImpl. - Connecting to Gradle Daemon {}
[INFO ] 2023-01-31T07:44:53,487Z [Connection worker] internal.TestCordappImpl. - Starting Gradle Daemon {}
[INFO ] 2023-01-31T07:44:53,487Z [Connection worker] internal.TestCordappImpl. - Build {}
[INFO ] 2023-01-31T07:44:53,984Z [Connection worker] internal.TestCordappImpl. - Run build {}
[INFO ] 2023-01-31T07:44:54,010Z [Connection worker] internal.TestCordappImpl. - Evaluate settings {}
[INFO ] 2023-01-31T07:44:54,402Z [Connection worker] internal.TestCordappImpl. - Run build {}
[INFO ] 2023-01-31T07:44:54,402Z [Connection worker] internal.TestCordappImpl. - Configure build {}
[INFO ] 2023-01-31T07:44:54,402Z [Connection worker] internal.TestCordappImpl. - Load projects {}
[INFO ] 2023-01-31T07:44:54,536Z [Connection worker] internal.TestCordappImpl. - Configure build {}
[INFO ] 2023-01-31T07:44:54,547Z [Connection worker] internal.TestCordappImpl. - Configure project : {}
[INFO ] 2023-01-31T07:44:54,976Z [Connection worker] internal.TestCordappImpl. - Resolve dependencies of :classpath {}
[INFO ] 2023-01-31T07:44:55,293Z [Connection worker] internal.TestCordappImpl. - Configure project : {}
[INFO ] 2023-01-31T07:44:55,303Z [Connection worker] internal.TestCordappImpl. - Resolve files of :classpath {}
[INFO ] 2023-01-31T07:44:55,334Z [Connection worker] internal.TestCordappImpl. - Configure project : {}
[INFO ] 2023-01-31T07:44:55,335Z [Connection worker] internal.TestCordappImpl. - Resolve files of :classpath {}
[INFO ] 2023-01-31T07:44:55,335Z [Connection worker] internal.TestCordappImpl. - Configure project : {}
[INFO ] 2023-01-31T07:44:56,306Z [Connection worker] internal.TestCordappImpl. - Configure build {}
[INFO ] 2023-01-31T07:44:56,306Z [Connection worker] internal.TestCordappImpl. - Configure project :clients {}
[INFO ] 2023-01-31T07:44:56,416Z [Connection worker] internal.TestCordappImpl. - Configure build {}
[INFO ] 2023-01-31T07:44:56,416Z [Connection worker] internal.TestCordappImpl. - Configure project :contracts {}
[INFO ] 2023-01-31T07:44:56,437Z [Connection worker] internal.TestCordappImpl. - Configure build {}
[INFO ] 2023-01-31T07:44:56,437Z [Connection worker] internal.TestCordappImpl. - Configure project :workflows {}
[INFO ] 2023-01-31T07:44:56,538Z [Connection worker] internal.TestCordappImpl. - Configure build {}
[INFO ] 2023-01-31T07:44:56,538Z [Connection worker] internal.TestCordappImpl. - Run build {}
[INFO ] 2023-01-31T07:44:56,628Z [Connection worker] internal.TestCordappImpl. - Resolve dependencies of :workflows:kotlinCompilerClasspath {}
[INFO ] 2023-01-31T07:44:56,638Z [Connection worker] internal.TestCordappImpl. - Run build {}
[INFO ] 2023-01-31T07:44:56,638Z [Connection worker] internal.TestCordappImpl. - Resolve files of :workflows:kotlinCompilerClasspath {}
[INFO ] 2023-01-31T07:44:56,638Z [Connection worker] internal.TestCordappImpl. - Run build {}
[INFO ] 2023-01-31T07:44:56,650Z [Connection worker] internal.TestCordappImpl. - Resolve dependencies of :contracts:kotlinCompilerClasspath {}
[INFO ] 2023-01-31T07:44:56,650Z [Connection worker] internal.TestCordappImpl. - Run build {}
[INFO ] 2023-01-31T07:44:56,650Z [Connection worker] internal.TestCordappImpl. - Resolve files of :contracts:kotlinCompilerClasspath {}
[INFO ] 2023-01-31T07:44:56,650Z [Connection worker] internal.TestCordappImpl. - Run build {}
[INFO ] 2023-01-31T07:44:56,660Z [Connection worker] internal.TestCordappImpl. - Run tasks {}
[INFO ] 2023-01-31T07:44:56,682Z [Connection worker] internal.TestCordappImpl. - Task :contracts:compileKotlin {}
[INFO ] 2023-01-31T07:44:56,683Z [Connection worker] internal.TestCordappImpl. - Resolve files of :contracts:kotlinCompilerClasspath {}
[INFO ] 2023-01-31T07:44:56,683Z [Connection worker] internal.TestCordappImpl. - Task :contracts:compileKotlin {}
[INFO ] 2023-01-31T07:44:56,737Z [Connection worker] internal.TestCordappImpl. - Resolve dependencies of :contracts:kotlinCompilerPluginClasspath {}
[INFO ] 2023-01-31T07:44:56,747Z [Connection worker] internal.TestCordappImpl. - Task :contracts:compileKotlin {}
[INFO ] 2023-01-31T07:44:56,748Z [Connection worker] internal.TestCordappImpl. - Resolve files of :contracts:kotlinCompilerPluginClasspath {}
[INFO ] 2023-01-31T07:44:56,748Z [Connection worker] internal.TestCordappImpl. - Task :contracts:compileKotlin {}
[INFO ] 2023-01-31T07:44:56,748Z [Connection worker] internal.TestCordappImpl. - Resolve dependencies of :contracts:compileClasspath {}
[INFO ] 2023-01-31T07:44:56,810Z [Connection worker] internal.TestCordappImpl. - Task :contracts:compileKotlin {}
[INFO ] 2023-01-31T07:44:56,810Z [Connection worker] internal.TestCordappImpl. - Resolve files of :contracts:compileClasspath {}
[INFO ] 2023-01-31T07:44:56,811Z [Connection worker] internal.TestCordappImpl. - Task :contracts:compileKotlin {}
[INFO ] 2023-01-31T07:44:57,185Z [Connection worker] internal.TestCordappImpl. - Resolve files of :contracts:compileClasspath {}
[INFO ] 2023-01-31T07:44:57,185Z [Connection worker] internal.TestCordappImpl. - Task :contracts:compileKotlin {}
[INFO ] 2023-01-31T07:44:57,198Z [Connection worker] internal.TestCordappImpl. - Resolve files of :contracts:kotlinCompilerPluginClasspath {}
[INFO ] 2023-01-31T07:44:57,198Z [Connection worker] internal.TestCordappImpl. - Task :contracts:compileKotlin {}
[INFO ] 2023-01-31T07:44:57,228Z [Connection worker] internal.TestCordappImpl. - Run tasks {}
[INFO ] 2023-01-31T07:44:57,229Z [Connection worker] internal.TestCordappImpl. - Task :contracts:compileJava {}
[INFO ] 2023-01-31T07:44:57,241Z [Connection worker] internal.TestCordappImpl. - Run tasks {}
[INFO ] 2023-01-31T07:44:57,241Z [Connection worker] internal.TestCordappImpl. - Task :contracts:processResources {}
[INFO ] 2023-01-31T07:44:57,241Z [Connection worker] internal.TestCordappImpl. - Run tasks {}
[INFO ] 2023-01-31T07:44:57,241Z [Connection worker] internal.TestCordappImpl. - Task :contracts:classes {}
[INFO ] 2023-01-31T07:44:57,241Z [Connection worker] internal.TestCordappImpl. - Run tasks {}
[INFO ] 2023-01-31T07:44:57,241Z [Connection worker] internal.TestCordappImpl. - Task :contracts:configureCordappFatJar {}
[INFO ] 2023-01-31T07:44:57,251Z [Connection worker] internal.TestCordappImpl. - Resolve dependencies of :contracts:runtime {}
[INFO ] 2023-01-31T07:44:57,274Z [Connection worker] internal.TestCordappImpl. - Task :contracts:configureCordappFatJar {}
[INFO ] 2023-01-31T07:44:57,274Z [Connection worker] internal.TestCordappImpl. - Resolve files of :contracts:runtime {}
[INFO ] 2023-01-31T07:44:57,284Z [Connection worker] internal.TestCordappImpl. - Task :contracts:configureCordappFatJar {}
[INFO ] 2023-01-31T07:44:57,284Z [Connection worker] internal.TestCordappImpl. - Resolve files of :contracts:runtime {}
[INFO ] 2023-01-31T07:44:57,284Z [Connection worker] internal.TestCordappImpl. - Task :contracts:configureCordappFatJar {}
[INFO ] 2023-01-31T07:44:57,284Z [Connection worker] internal.TestCordappImpl. - Resolve files of :contracts:runtime {}
[INFO ] 2023-01-31T07:44:57,284Z [Connection worker] internal.TestCordappImpl. - Task :contracts:configureCordappFatJar {}
[INFO ] 2023-01-31T07:44:57,284Z [Connection worker] internal.TestCordappImpl. - Resolve files of :contracts:runtime {}
[INFO ] 2023-01-31T07:44:57,284Z [Connection worker] internal.TestCordappImpl. - Task :contracts:configureCordappFatJar {}
[INFO ] 2023-01-31T07:44:57,284Z [Connection worker] internal.TestCordappImpl. - Resolve files of :contracts:runtime {}
[INFO ] 2023-01-31T07:44:57,284Z [Connection worker] internal.TestCordappImpl. - Task :contracts:configureCordappFatJar {}
[INFO ] 2023-01-31T07:44:57,295Z [Connection worker] internal.TestCordappImpl. - Run tasks {}
[INFO ] 2023-01-31T07:44:57,295Z [Connection worker] internal.TestCordappImpl. - Task :contracts:inspectClassesForKotlinIC {}
[INFO ] 2023-01-31T07:44:57,296Z [Connection worker] internal.TestCordappImpl. - Run tasks {}
[INFO ] 2023-01-31T07:44:57,307Z [Connection worker] internal.TestCordappImpl. - Task :contracts:jar {}
[INFO ] 2023-01-31T07:44:57,317Z [Connection worker] internal.TestCordappImpl. - Run tasks {}
[INFO ] 2023-01-31T07:44:57,317Z [Connection worker] internal.TestCordappImpl. - Task :workflows:compileKotlin {}
[INFO ] 2023-01-31T07:44:57,317Z [Connection worker] internal.TestCordappImpl. - Resolve files of :workflows:kotlinCompilerClasspath {}
[INFO ] 2023-01-31T07:44:57,317Z [Connection worker] internal.TestCordappImpl. - Task :workflows:compileKotlin {}
[INFO ] 2023-01-31T07:44:57,338Z [Connection worker] internal.TestCordappImpl. - Resolve dependencies of :workflows:kotlinCompilerPluginClasspath {}
[INFO ] 2023-01-31T07:44:57,338Z [Connection worker] internal.TestCordappImpl. - Task :workflows:compileKotlin {}
[INFO ] 2023-01-31T07:44:57,338Z [Connection worker] internal.TestCordappImpl. - Resolve files of :workflows:kotlinCompilerPluginClasspath {}
[INFO ] 2023-01-31T07:44:57,338Z [Connection worker] internal.TestCordappImpl. - Task :workflows:compileKotlin {}
[INFO ] 2023-01-31T07:44:57,338Z [Connection worker] internal.TestCordappImpl. - Resolve dependencies of :workflows:compileClasspath {}
[INFO ] 2023-01-31T07:44:57,359Z [Connection worker] internal.TestCordappImpl. - Task :workflows:compileKotlin {}
[INFO ] 2023-01-31T07:44:57,359Z [Connection worker] internal.TestCordappImpl. - Resolve files of :workflows:compileClasspath {}
[INFO ] 2023-01-31T07:44:57,359Z [Connection worker] internal.TestCordappImpl. - Task :workflows:compileKotlin {}
[INFO ] 2023-01-31T07:44:57,360Z [Connection worker] internal.TestCordappImpl. - Resolve files of :workflows:compileClasspath {}
[INFO ] 2023-01-31T07:44:57,360Z [Connection worker] internal.TestCordappImpl. - Task :workflows:compileKotlin {}
[INFO ] 2023-01-31T07:44:57,370Z [Connection worker] internal.TestCordappImpl. - Resolve files of :workflows:kotlinCompilerPluginClasspath {}
[INFO ] 2023-01-31T07:44:57,370Z [Connection worker] internal.TestCordappImpl. - Task :workflows:compileKotlin {}
[INFO ] 2023-01-31T07:44:57,370Z [Connection worker] internal.TestCordappImpl. - Run tasks {}
[INFO ] 2023-01-31T07:44:57,382Z [Connection worker] internal.TestCordappImpl. - Task :workflows:compileJava {}
[INFO ] 2023-01-31T07:44:57,383Z [Connection worker] internal.TestCordappImpl. - Run tasks {}
[INFO ] 2023-01-31T07:44:57,383Z [Connection worker] internal.TestCordappImpl. - Task :workflows:processResources {}
[INFO ] 2023-01-31T07:44:57,383Z [Connection worker] internal.TestCordappImpl. - Run tasks {}
[INFO ] 2023-01-31T07:44:57,383Z [Connection worker] internal.TestCordappImpl. - Task :workflows:classes {}
[INFO ] 2023-01-31T07:44:57,383Z [Connection worker] internal.TestCordappImpl. - Run tasks {}
[INFO ] 2023-01-31T07:44:57,383Z [Connection worker] internal.TestCordappImpl. - Task :workflows:configureCordappFatJar {}
[INFO ] 2023-01-31T07:44:57,383Z [Connection worker] internal.TestCordappImpl. - Resolve dependencies of :workflows:runtime {}
[INFO ] 2023-01-31T07:44:57,414Z [Connection worker] internal.TestCordappImpl. - Task :workflows:configureCordappFatJar {}
[INFO ] 2023-01-31T07:44:57,414Z [Connection worker] internal.TestCordappImpl. - Resolve files of :workflows:runtime {}
[INFO ] 2023-01-31T07:44:57,414Z [Connection worker] internal.TestCordappImpl. - Task :workflows:configureCordappFatJar {}
[INFO ] 2023-01-31T07:44:57,414Z [Connection worker] internal.TestCordappImpl. - Resolve files of :workflows:runtime {}
[INFO ] 2023-01-31T07:44:57,414Z [Connection worker] internal.TestCordappImpl. - Task :workflows:configureCordappFatJar {}
[INFO ] 2023-01-31T07:44:57,414Z [Connection worker] internal.TestCordappImpl. - Resolve files of :workflows:runtime {}
[INFO ] 2023-01-31T07:44:57,414Z [Connection worker] internal.TestCordappImpl. - Task :workflows:configureCordappFatJar {}
[INFO ] 2023-01-31T07:44:57,415Z [Connection worker] internal.TestCordappImpl. - Resolve files of :workflows:runtime {}
[INFO ] 2023-01-31T07:44:57,415Z [Connection worker] internal.TestCordappImpl. - Task :workflows:configureCordappFatJar {}
[INFO ] 2023-01-31T07:44:57,415Z [Connection worker] internal.TestCordappImpl. - Resolve files of :workflows:runtime {}
[INFO ] 2023-01-31T07:44:57,415Z [Connection worker] internal.TestCordappImpl. - Task :workflows:configureCordappFatJar {}
[INFO ] 2023-01-31T07:44:57,415Z [Connection worker] internal.TestCordappImpl. - Resolve files of :workflows:runtime {}
[INFO ] 2023-01-31T07:44:57,415Z [Connection worker] internal.TestCordappImpl. - Task :workflows:configureCordappFatJar {}
[INFO ] 2023-01-31T07:44:57,415Z [Connection worker] internal.TestCordappImpl. - Resolve files of :workflows:runtime {}
[INFO ] 2023-01-31T07:44:57,415Z [Connection worker] internal.TestCordappImpl. - Task :workflows:configureCordappFatJar {}
[INFO ] 2023-01-31T07:44:57,415Z [Connection worker] internal.TestCordappImpl. - Resolve files of :workflows:runtime {}
[INFO ] 2023-01-31T07:44:57,415Z [Connection worker] internal.TestCordappImpl. - Task :workflows:configureCordappFatJar {}
[INFO ] 2023-01-31T07:44:57,415Z [Connection worker] internal.TestCordappImpl. - Run tasks {}
[INFO ] 2023-01-31T07:44:57,415Z [Connection worker] internal.TestCordappImpl. - Task :workflows:inspectClassesForKotlinIC {}
[INFO ] 2023-01-31T07:44:57,447Z [Connection worker] internal.TestCordappImpl. - Run tasks {}
[INFO ] 2023-01-31T07:44:57,447Z [Connection worker] internal.TestCordappImpl. - Task :workflows:jar {}
[INFO ] 2023-01-31T07:44:59,038Z [Connection worker] internal.TestCordappImpl. - Run tasks {}
[INFO ] 2023-01-31T07:44:59,038Z [Connection worker] internal.TestCordappImpl. - Run build {}
[INFO ] 2023-01-31T07:44:59,038Z [Connection worker] internal.TestCordappImpl. - Build model 'java.lang.Void' for project ':workflows' {}
[INFO ] 2023-01-31T07:44:59,038Z [Connection worker] internal.TestCordappImpl. - Run build {}
[INFO ] 2023-01-31T07:44:59,054Z [Connection worker] internal.TestCordappImpl. - Build {}
[INFO ] 2023-01-31T07:44:59,062Z [Connection worker] internal.TestCordappImpl. - Deleting unused version-specific caches in /Users/peter.li/Desktop/obligation-cordapp/.gradle {}
[INFO ] 2023-01-31T07:44:59,062Z [Connection worker] internal.TestCordappImpl. - Build {}
[INFO ] 2023-01-31T07:44:59,087Z [Connection worker] internal.TestCordappImpl. -  {}
[INFO ] 2023-01-31T07:45:03,486Z [Test worker] cordapp.JarScanningCordappLoader. - Looking for CorDapps in [build/mock-network/20230131-074450.589-37A63494049C6D3E/nodes/0/cordapps] {}
[INFO ] 2023-01-31T07:45:03,494Z [Test worker] cordapp.JarScanningCordappLoader. - Loading CorDapps from RestrictedURL(url=file:/Users/peter.li/Desktop/obligation-cordapp/workflows/build/mock-network/20230131-074450.589-37A63494049C6D3E/nodes/0/cordapps/accounts-contracts-1.0.jar, rootPackageName=null), RestrictedURL(url=file:/Users/peter.li/Desktop/obligation-cordapp/workflows/build/mock-network/20230131-074450.589-37A63494049C6D3E/nodes/0/cordapps/accounts-workflows-1.0.jar, rootPackageName=null), RestrictedURL(url=file:/Users/peter.li/Desktop/obligation-cordapp/workflows/build/mock-network/20230131-074450.589-37A63494049C6D3E/nodes/0/cordapps/corda-finance-contracts-4.9.jar, rootPackageName=null), RestrictedURL(url=file:/Users/peter.li/Desktop/obligation-cordapp/workflows/build/mock-network/20230131-074450.589-37A63494049C6D3E/nodes/0/cordapps/contracts-1.0.jar, rootPackageName=null), RestrictedURL(url=file:/Users/peter.li/Desktop/obligation-cordapp/workflows/build/mock-network/20230131-074450.589-37A63494049C6D3E/nodes/0/cordapps/workflows-1.0.jar, rootPackageName=null) {}
[INFO ] 2023-01-31T07:45:03,504Z [Test worker] cordapp.JarScanningCordappLoader. - Scanning CorDapp in file:/Users/peter.li/Desktop/obligation-cordapp/workflows/build/mock-network/20230131-074450.589-37A63494049C6D3E/nodes/0/cordapps/accounts-contracts-1.0.jar {}
[INFO ] 2023-01-31T07:45:03,613Z [Test worker] cordapp.JarScanningCordappLoader. - Scanning CorDapp in file:/Users/peter.li/Desktop/obligation-cordapp/workflows/build/mock-network/20230131-074450.589-37A63494049C6D3E/nodes/0/cordapps/accounts-workflows-1.0.jar {}
[INFO ] 2023-01-31T07:45:03,779Z [Test worker] cordapp.JarScanningCordappLoader. - Scanning CorDapp in file:/Users/peter.li/Desktop/obligation-cordapp/workflows/build/mock-network/20230131-074450.589-37A63494049C6D3E/nodes/0/cordapps/corda-finance-contracts-4.9.jar {}
[INFO ] 2023-01-31T07:45:03,902Z [Test worker] cordapp.JarScanningCordappLoader. - Scanning CorDapp in file:/Users/peter.li/Desktop/obligation-cordapp/workflows/build/mock-network/20230131-074450.589-37A63494049C6D3E/nodes/0/cordapps/contracts-1.0.jar {}
[INFO ] 2023-01-31T07:45:03,913Z [Test worker] cordapp.JarScanningCordappLoader. - Scanning CorDapp in file:/Users/peter.li/Desktop/obligation-cordapp/workflows/build/mock-network/20230131-074450.589-37A63494049C6D3E/nodes/0/cordapps/workflows-1.0.jar {}
[INFO ] 2023-01-31T07:45:05,155Z [Test worker] internal.InternalMockNetwork$MockNode. - MessagingService active change to: false {}
[INFO ] 2023-01-31T07:45:05,375Z [Test worker] internal.InternalMockNetwork$MockNode. - Flow external operation executor has a max of 2 threads {}
[INFO ] 2023-01-31T07:45:05,429Z [Test worker] internal.InternalMockNetwork$MockNode. - Node starting up ... {}
[INFO ] 2023-01-31T07:45:05,448Z [Test worker] internal.KeyStoreHandler. - Loaded trusted root certificate: DL7fwxLm5xbiMD8adUuYTsPZHAict46Ng4w6RNcySt5vAw, alias: cordarootca {}
[INFO ] 2023-01-31T07:45:05,451Z [Test worker] internal.KeyStoreHandler. - Loaded node identity key: DLrGDpfecxXDUXVV2BaaNYr3Vmk33rAHfAjgDHBH6J8jm, alias: identity-private-key {}
[INFO ] 2023-01-31T07:45:05,573Z [Test worker] internal.NodeFlowManager. - Registered com.r3.corda.lib.accounts.workflows.flows.ShareStateAndSyncAccounts to initiate com.r3.corda.lib.accounts.workflows.flows.ReceiveStateAndSyncAccounts (version 1) {}
[INFO ] 2023-01-31T07:45:05,574Z [Test worker] internal.NodeFlowManager. - Registered com.r3.corda.lib.accounts.workflows.flows.ShareStateWithAccount to initiate com.r3.corda.lib.accounts.workflows.flows.ReceiveStateForAccount (version 1) {}
[INFO ] 2023-01-31T07:45:05,574Z [Test worker] internal.NodeFlowManager. - Registered com.r3.corda.lib.accounts.workflows.flows.RequestAccountInfo to initiate com.r3.corda.lib.accounts.workflows.flows.RequestAccountInfoHandler (version 1) {}
[INFO ] 2023-01-31T07:45:05,574Z [Test worker] internal.NodeFlowManager. - Registered com.r3.corda.lib.accounts.workflows.flows.RequestKeyForAccount to initiate com.r3.corda.lib.accounts.workflows.flows.SendKeyForAccount (version 1) {}
[INFO ] 2023-01-31T07:45:05,575Z [Test worker] internal.NodeFlowManager. - Registered com.r3.corda.lib.accounts.workflows.flows.ShareAccountInfo to initiate com.r3.corda.lib.accounts.workflows.flows.ShareAccountInfoHandler (version 1) {}
[INFO ] 2023-01-31T07:45:05,576Z [Test worker] internal.NodeFlowManager. - Registered net.corda.samples.obligation.flows.IOUIssueFlow to initiate net.corda.samples.obligation.flows.IOUIssueFlowResponder (version 1) {}
[INFO ] 2023-01-31T07:45:05,576Z [Test worker] internal.NodeFlowManager. - Registered net.corda.samples.obligation.flows.IOUSettleFlow to initiate net.corda.samples.obligation.flows.IOUSettleFlowResponder (version 1) {}
[INFO ] 2023-01-31T07:45:05,576Z [Test worker] internal.NodeFlowManager. - Registered net.corda.samples.obligation.flows.IOUTransferFlow to initiate net.corda.samples.obligation.flows.IOUTransferFlowResponder (version 1) {}
[INFO ] 2023-01-31T07:45:05,660Z [Test worker] internal.InternalMockNetwork$MockNode. - Loaded network parameters: NetworkParameters {
      minimumPlatformVersion=4
      notaries=[NotaryInfo(identity=O=Notary, L=London, C=GB, validating=true)]
      maxMessageSize=10485760
      maxTransactionSize=524288000
      whitelistedContractImplementations {
        
      }
      eventHorizon=PT720H
      packageOwnership {
        
      }
      modifiedTime=2023-01-31T07:44:50.362Z
      epoch=1
  } {}
[INFO ] 2023-01-31T07:45:10,434Z [Test worker] internal.InternalMockNetwork$MockNode. - Connected to H2 database. {}
[INFO ] 2023-01-31T07:45:10,489Z [Test worker] persistence.HibernateConfiguration. - Init HibernateConfiguration for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1), AccountsContractsSchemaV1(name=com.r3.corda.lib.accounts.contracts.internal.schemas.AccountsContractsSchema, version=1), AccountsWorkflowsSchemaV1(name=com.r3.corda.lib.accounts.workflows.internal.schemas.AccountsWorkflowsSchema, version=1), CashSchemaV1(name=net.corda.finance.schemas.CashSchema, version=1), CommercialPaperSchemaV1(name=net.corda.finance.schemas.CommercialPaperSchema, version=1), JPANotarySchemaV1(name=net.corda.notary.jpa.JPANotarySchema, version=1)] {}
[INFO ] 2023-01-31T07:45:10,492Z [Test worker] factory.BaseSessionFactoryFactory. - Creating session factory for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1), AccountsContractsSchemaV1(name=com.r3.corda.lib.accounts.contracts.internal.schemas.AccountsContractsSchema, version=1), AccountsWorkflowsSchemaV1(name=com.r3.corda.lib.accounts.workflows.internal.schemas.AccountsWorkflowsSchema, version=1), CashSchemaV1(name=net.corda.finance.schemas.CashSchema, version=1), CommercialPaperSchemaV1(name=net.corda.finance.schemas.CommercialPaperSchema, version=1), JPANotarySchemaV1(name=net.corda.notary.jpa.JPANotarySchema, version=1)] {}
[INFO ] 2023-01-31T07:45:12,602Z [Test worker] factory.BaseSessionFactoryFactory. - Created session factory for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1), AccountsContractsSchemaV1(name=com.r3.corda.lib.accounts.contracts.internal.schemas.AccountsContractsSchema, version=1), AccountsWorkflowsSchemaV1(name=com.r3.corda.lib.accounts.workflows.internal.schemas.AccountsWorkflowsSchema, version=1), CashSchemaV1(name=net.corda.finance.schemas.CashSchema, version=1), CommercialPaperSchemaV1(name=net.corda.finance.schemas.CommercialPaperSchema, version=1), JPANotarySchemaV1(name=net.corda.notary.jpa.JPANotarySchema, version=1)] {}
[INFO ] 2023-01-31T07:45:12,877Z [Test worker] internal.InternalMockNetwork$MockNode. - Node-info has changed so submitting update. Old node-info was null {}
[INFO ] 2023-01-31T07:45:12,885Z [Test worker] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Notary, L=London, C=GB], platformVersion=11, serial=1675151112877), owningKey=DLrGDpfecxXDUXVV2BaaNYr3Vmk33rAHfAjgDHBH6J8jm {}
[INFO ] 2023-01-31T07:45:12,885Z [Test worker] network.PersistentNetworkMapCache. - No previous node found for O=Notary, L=London, C=GB {}
[INFO ] 2023-01-31T07:45:13,034Z [Test worker] internal.InternalMockNetwork$MockNode. - New node-info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Notary, L=London, C=GB], platformVersion=11, serial=1675151112877) {}
[INFO ] 2023-01-31T07:45:13,091Z [Test worker] network.NetworkMapUpdater. - Auto-accept enabled for network parameter changes which modify only: [epoch, modifiedTime, packageOwnership, whitelistedContractImplementations] {}
[INFO ] 2023-01-31T07:45:13,119Z [Test worker] internal.MockNodeMessagingService. - Status change to true {}
[INFO ] 2023-01-31T07:45:13,126Z [Test worker] internal.InternalMockNetwork$MockNode. - MessagingService active change to: true {}
[INFO ] 2023-01-31T07:45:13,160Z [MockNode-1-2] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Notary, L=London, C=GB], platformVersion=11, serial=1675151112877), owningKey=DLrGDpfecxXDUXVV2BaaNYr3Vmk33rAHfAjgDHBH6J8jm {}
[INFO ] 2023-01-31T07:45:13,160Z [MockNode-1-2] network.PersistentNetworkMapCache. - Previous node was identical to incoming one - doing nothing {}
[INFO ] 2023-01-31T07:45:13,252Z [Test worker] persistence.NodeAttachmentService. - Stored new attachment: id=D370FD972C7E07CE73F4F9B7886D226807F6B16C4EE287398B9C69384109DC14 uploader=app filename=Accounts SDK - States and Contracts {}
[INFO ] 2023-01-31T07:45:13,289Z [Test worker] persistence.NodeAttachmentService. - Stored new attachment: id=BD0C932EAF8B1FE96DCBBF275B914BCD776D14EDC8F97DCEBF7E15DA09C606AE uploader=app filename=Corda Finance Demo {}
[INFO ] 2023-01-31T07:45:13,305Z [Test worker] persistence.NodeAttachmentService. - Stored new attachment: id=8D797B45F40704FA4FD70921F5BC6E2D7B34450D345CE6788D2A87859EF63BD8 uploader=app filename=Obligation Contracts {}
[INFO ] 2023-01-31T07:45:13,319Z [Test worker] internal.InternalMockNetwork$MockNode. - Installed com.r3.corda.lib.accounts.workflows.services.KeyManagementBackedAccountService Corda service {}
[INFO ] 2023-01-31T07:45:13,319Z [Test worker] utilities.NotaryLoader. - Starting notary service: class net.corda.notary.jpa.JPANotaryService {}
[INFO ] 2023-01-31T07:45:14,033Z [Test worker] statemachine.SingleThreadedStateMachineManager. - Node ready, info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Notary, L=London, C=GB], platformVersion=11, serial=1675151112877) {}
[INFO ] 2023-01-31T07:45:14,041Z [Test worker] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Notary, L=London, C=GB], platformVersion=11, serial=1675151112877), owningKey=DLrGDpfecxXDUXVV2BaaNYr3Vmk33rAHfAjgDHBH6J8jm {}
[INFO ] 2023-01-31T07:45:14,041Z [Test worker] network.PersistentNetworkMapCache. - Previous node was identical to incoming one - doing nothing {}
[INFO ] 2023-01-31T07:45:14,041Z [Test worker] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Notary, L=London, C=GB], platformVersion=11, serial=1675151112877), owningKey=DLrGDpfecxXDUXVV2BaaNYr3Vmk33rAHfAjgDHBH6J8jm {}
[INFO ] 2023-01-31T07:45:14,041Z [Test worker] network.PersistentNetworkMapCache. - Previous node was identical to incoming one - doing nothing {}
[INFO ] 2023-01-31T07:45:14,058Z [Test worker] cordapp.JarScanningCordappLoader. - Looking for CorDapps in [build/mock-network/20230131-074450.589-37A63494049C6D3E/nodes/1/cordapps] {}
[INFO ] 2023-01-31T07:45:14,058Z [Test worker] cordapp.JarScanningCordappLoader. - Loading CorDapps from RestrictedURL(url=file:/Users/peter.li/Desktop/obligation-cordapp/workflows/build/mock-network/20230131-074450.589-37A63494049C6D3E/nodes/1/cordapps/accounts-contracts-1.0.jar, rootPackageName=null), RestrictedURL(url=file:/Users/peter.li/Desktop/obligation-cordapp/workflows/build/mock-network/20230131-074450.589-37A63494049C6D3E/nodes/1/cordapps/accounts-workflows-1.0.jar, rootPackageName=null), RestrictedURL(url=file:/Users/peter.li/Desktop/obligation-cordapp/workflows/build/mock-network/20230131-074450.589-37A63494049C6D3E/nodes/1/cordapps/corda-finance-contracts-4.9.jar, rootPackageName=null), RestrictedURL(url=file:/Users/peter.li/Desktop/obligation-cordapp/workflows/build/mock-network/20230131-074450.589-37A63494049C6D3E/nodes/1/cordapps/contracts-1.0.jar, rootPackageName=null), RestrictedURL(url=file:/Users/peter.li/Desktop/obligation-cordapp/workflows/build/mock-network/20230131-074450.589-37A63494049C6D3E/nodes/1/cordapps/workflows-1.0.jar, rootPackageName=null) {}
[INFO ] 2023-01-31T07:45:14,059Z [Test worker] cordapp.JarScanningCordappLoader. - Scanning CorDapp in file:/Users/peter.li/Desktop/obligation-cordapp/workflows/build/mock-network/20230131-074450.589-37A63494049C6D3E/nodes/1/cordapps/accounts-contracts-1.0.jar {}
[INFO ] 2023-01-31T07:45:14,086Z [Test worker] cordapp.JarScanningCordappLoader. - Scanning CorDapp in file:/Users/peter.li/Desktop/obligation-cordapp/workflows/build/mock-network/20230131-074450.589-37A63494049C6D3E/nodes/1/cordapps/accounts-workflows-1.0.jar {}
[INFO ] 2023-01-31T07:45:14,097Z [Test worker] cordapp.JarScanningCordappLoader. - Scanning CorDapp in file:/Users/peter.li/Desktop/obligation-cordapp/workflows/build/mock-network/20230131-074450.589-37A63494049C6D3E/nodes/1/cordapps/corda-finance-contracts-4.9.jar {}
[INFO ] 2023-01-31T07:45:14,110Z [Test worker] cordapp.JarScanningCordappLoader. - Scanning CorDapp in file:/Users/peter.li/Desktop/obligation-cordapp/workflows/build/mock-network/20230131-074450.589-37A63494049C6D3E/nodes/1/cordapps/contracts-1.0.jar {}
[INFO ] 2023-01-31T07:45:14,116Z [Test worker] cordapp.JarScanningCordappLoader. - Scanning CorDapp in file:/Users/peter.li/Desktop/obligation-cordapp/workflows/build/mock-network/20230131-074450.589-37A63494049C6D3E/nodes/1/cordapps/workflows-1.0.jar {}
[INFO ] 2023-01-31T07:45:14,147Z [Test worker] internal.InternalMockNetwork$MockNode. - MessagingService active change to: false {}
[INFO ] 2023-01-31T07:45:14,148Z [Test worker] internal.InternalMockNetwork$MockNode. - Flow external operation executor has a max of 2 threads {}
[INFO ] 2023-01-31T07:45:14,150Z [Test worker] internal.InternalMockNetwork$MockNode. - Node starting up ... {}
[INFO ] 2023-01-31T07:45:14,189Z [Test worker] internal.KeyStoreHandler. - Loaded trusted root certificate: DL7fwxLm5xbiMD8adUuYTsPZHAict46Ng4w6RNcySt5vAw, alias: cordarootca {}
[INFO ] 2023-01-31T07:45:14,190Z [Test worker] internal.KeyStoreHandler. - Loaded node identity key: DL6TRqMjzaxJqTRYmKbSdjxrn2gwnkbBuvnxB3thJ2aKkn, alias: identity-private-key {}
[INFO ] 2023-01-31T07:45:14,196Z [Test worker] internal.NodeFlowManager. - Registered com.r3.corda.lib.accounts.workflows.flows.ShareStateAndSyncAccounts to initiate com.r3.corda.lib.accounts.workflows.flows.ReceiveStateAndSyncAccounts (version 1) {}
[INFO ] 2023-01-31T07:45:14,196Z [Test worker] internal.NodeFlowManager. - Registered com.r3.corda.lib.accounts.workflows.flows.ShareStateWithAccount to initiate com.r3.corda.lib.accounts.workflows.flows.ReceiveStateForAccount (version 1) {}
[INFO ] 2023-01-31T07:45:14,196Z [Test worker] internal.NodeFlowManager. - Registered com.r3.corda.lib.accounts.workflows.flows.RequestAccountInfo to initiate com.r3.corda.lib.accounts.workflows.flows.RequestAccountInfoHandler (version 1) {}
[INFO ] 2023-01-31T07:45:14,196Z [Test worker] internal.NodeFlowManager. - Registered com.r3.corda.lib.accounts.workflows.flows.RequestKeyForAccount to initiate com.r3.corda.lib.accounts.workflows.flows.SendKeyForAccount (version 1) {}
[INFO ] 2023-01-31T07:45:14,196Z [Test worker] internal.NodeFlowManager. - Registered com.r3.corda.lib.accounts.workflows.flows.ShareAccountInfo to initiate com.r3.corda.lib.accounts.workflows.flows.ShareAccountInfoHandler (version 1) {}
[INFO ] 2023-01-31T07:45:14,196Z [Test worker] internal.NodeFlowManager. - Registered net.corda.samples.obligation.flows.IOUIssueFlow to initiate net.corda.samples.obligation.flows.IOUIssueFlowResponder (version 1) {}
[INFO ] 2023-01-31T07:45:14,196Z [Test worker] internal.NodeFlowManager. - Registered net.corda.samples.obligation.flows.IOUSettleFlow to initiate net.corda.samples.obligation.flows.IOUSettleFlowResponder (version 1) {}
[INFO ] 2023-01-31T07:45:14,196Z [Test worker] internal.NodeFlowManager. - Registered net.corda.samples.obligation.flows.IOUTransferFlow to initiate net.corda.samples.obligation.flows.IOUTransferFlowResponder (version 1) {}
[INFO ] 2023-01-31T07:45:14,202Z [Test worker] internal.InternalMockNetwork$MockNode. - Loaded network parameters: NetworkParameters {
      minimumPlatformVersion=4
      notaries=[NotaryInfo(identity=O=Notary, L=London, C=GB, validating=true)]
      maxMessageSize=10485760
      maxTransactionSize=524288000
      whitelistedContractImplementations {
        
      }
      eventHorizon=PT720H
      packageOwnership {
        
      }
      modifiedTime=2023-01-31T07:44:50.362Z
      epoch=1
  } {}
[INFO ] 2023-01-31T07:45:14,892Z [Test worker] internal.InternalMockNetwork$MockNode. - Connected to H2 database. {}
[INFO ] 2023-01-31T07:45:14,894Z [Test worker] persistence.HibernateConfiguration. - Init HibernateConfiguration for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1), AccountsContractsSchemaV1(name=com.r3.corda.lib.accounts.contracts.internal.schemas.AccountsContractsSchema, version=1), AccountsWorkflowsSchemaV1(name=com.r3.corda.lib.accounts.workflows.internal.schemas.AccountsWorkflowsSchema, version=1), CashSchemaV1(name=net.corda.finance.schemas.CashSchema, version=1), CommercialPaperSchemaV1(name=net.corda.finance.schemas.CommercialPaperSchema, version=1)] {}
[INFO ] 2023-01-31T07:45:14,894Z [Test worker] factory.BaseSessionFactoryFactory. - Creating session factory for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1), AccountsContractsSchemaV1(name=com.r3.corda.lib.accounts.contracts.internal.schemas.AccountsContractsSchema, version=1), AccountsWorkflowsSchemaV1(name=com.r3.corda.lib.accounts.workflows.internal.schemas.AccountsWorkflowsSchema, version=1), CashSchemaV1(name=net.corda.finance.schemas.CashSchema, version=1), CommercialPaperSchemaV1(name=net.corda.finance.schemas.CommercialPaperSchema, version=1)] {}
[INFO ] 2023-01-31T07:45:15,054Z [Test worker] factory.BaseSessionFactoryFactory. - Created session factory for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1), AccountsContractsSchemaV1(name=com.r3.corda.lib.accounts.contracts.internal.schemas.AccountsContractsSchema, version=1), AccountsWorkflowsSchemaV1(name=com.r3.corda.lib.accounts.workflows.internal.schemas.AccountsWorkflowsSchema, version=1), CashSchemaV1(name=net.corda.finance.schemas.CashSchema, version=1), CommercialPaperSchemaV1(name=net.corda.finance.schemas.CommercialPaperSchema, version=1)] {}
[INFO ] 2023-01-31T07:45:15,058Z [Test worker] internal.InternalMockNetwork$MockNode. - Node-info has changed so submitting update. Old node-info was null {}
[INFO ] 2023-01-31T07:45:15,063Z [Test worker] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 1, L=London, C=GB], platformVersion=11, serial=1675151115058), owningKey=DL6TRqMjzaxJqTRYmKbSdjxrn2gwnkbBuvnxB3thJ2aKkn {}
[INFO ] 2023-01-31T07:45:15,063Z [Test worker] network.PersistentNetworkMapCache. - No previous node found for O=Mock Company 1, L=London, C=GB {}
[INFO ] 2023-01-31T07:45:15,073Z [Test worker] internal.InternalMockNetwork$MockNode. - New node-info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 1, L=London, C=GB], platformVersion=11, serial=1675151115058) {}
[INFO ] 2023-01-31T07:45:15,081Z [Test worker] network.NetworkMapUpdater. - Auto-accept enabled for network parameter changes which modify only: [epoch, modifiedTime, packageOwnership, whitelistedContractImplementations] {}
[INFO ] 2023-01-31T07:45:15,082Z [Test worker] internal.MockNodeMessagingService. - Status change to true {}
[INFO ] 2023-01-31T07:45:15,082Z [Test worker] internal.InternalMockNetwork$MockNode. - MessagingService active change to: true {}
[INFO ] 2023-01-31T07:45:15,095Z [MockNode-2-2] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 1, L=London, C=GB], platformVersion=11, serial=1675151115058), owningKey=DL6TRqMjzaxJqTRYmKbSdjxrn2gwnkbBuvnxB3thJ2aKkn {}
[INFO ] 2023-01-31T07:45:15,095Z [MockNode-2-2] network.PersistentNetworkMapCache. - Previous node was identical to incoming one - doing nothing {}
[INFO ] 2023-01-31T07:45:15,119Z [Test worker] persistence.NodeAttachmentService. - Stored new attachment: id=D370FD972C7E07CE73F4F9B7886D226807F6B16C4EE287398B9C69384109DC14 uploader=app filename=Accounts SDK - States and Contracts {}
[INFO ] 2023-01-31T07:45:15,165Z [Test worker] persistence.NodeAttachmentService. - Stored new attachment: id=BD0C932EAF8B1FE96DCBBF275B914BCD776D14EDC8F97DCEBF7E15DA09C606AE uploader=app filename=Corda Finance Demo {}
[INFO ] 2023-01-31T07:45:15,180Z [Test worker] persistence.NodeAttachmentService. - Stored new attachment: id=8D797B45F40704FA4FD70921F5BC6E2D7B34450D345CE6788D2A87859EF63BD8 uploader=app filename=Obligation Contracts {}
[INFO ] 2023-01-31T07:45:15,182Z [Test worker] internal.InternalMockNetwork$MockNode. - Installed com.r3.corda.lib.accounts.workflows.services.KeyManagementBackedAccountService Corda service {}
[INFO ] 2023-01-31T07:45:15,202Z [Test worker] statemachine.SingleThreadedStateMachineManager. - Node ready, info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 1, L=London, C=GB], platformVersion=11, serial=1675151115058) {}
[INFO ] 2023-01-31T07:45:15,205Z [Test worker] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Notary, L=London, C=GB], platformVersion=11, serial=1675151112877), owningKey=DLrGDpfecxXDUXVV2BaaNYr3Vmk33rAHfAjgDHBH6J8jm {}
[INFO ] 2023-01-31T07:45:15,205Z [Test worker] network.PersistentNetworkMapCache. - No previous node found for O=Notary, L=London, C=GB {}
[INFO ] 2023-01-31T07:45:15,216Z [Test worker] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 1, L=London, C=GB], platformVersion=11, serial=1675151115058), owningKey=DL6TRqMjzaxJqTRYmKbSdjxrn2gwnkbBuvnxB3thJ2aKkn {}
[INFO ] 2023-01-31T07:45:15,216Z [Test worker] network.PersistentNetworkMapCache. - No previous node found for O=Mock Company 1, L=London, C=GB {}
[INFO ] 2023-01-31T07:45:15,225Z [Test worker] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 1, L=London, C=GB], platformVersion=11, serial=1675151115058), owningKey=DL6TRqMjzaxJqTRYmKbSdjxrn2gwnkbBuvnxB3thJ2aKkn {}
[INFO ] 2023-01-31T07:45:15,226Z [Test worker] network.PersistentNetworkMapCache. - Previous node was identical to incoming one - doing nothing {}
[INFO ] 2023-01-31T07:45:15,226Z [Test worker] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 1, L=London, C=GB], platformVersion=11, serial=1675151115058), owningKey=DL6TRqMjzaxJqTRYmKbSdjxrn2gwnkbBuvnxB3thJ2aKkn {}
[INFO ] 2023-01-31T07:45:15,226Z [Test worker] network.PersistentNetworkMapCache. - Previous node was identical to incoming one - doing nothing {}
[INFO ] 2023-01-31T07:45:15,240Z [Test worker] cordapp.JarScanningCordappLoader. - Looking for CorDapps in [build/mock-network/20230131-074450.589-37A63494049C6D3E/nodes/2/cordapps] {}
[INFO ] 2023-01-31T07:45:15,242Z [Test worker] cordapp.JarScanningCordappLoader. - Loading CorDapps from RestrictedURL(url=file:/Users/peter.li/Desktop/obligation-cordapp/workflows/build/mock-network/20230131-074450.589-37A63494049C6D3E/nodes/2/cordapps/accounts-contracts-1.0.jar, rootPackageName=null), RestrictedURL(url=file:/Users/peter.li/Desktop/obligation-cordapp/workflows/build/mock-network/20230131-074450.589-37A63494049C6D3E/nodes/2/cordapps/accounts-workflows-1.0.jar, rootPackageName=null), RestrictedURL(url=file:/Users/peter.li/Desktop/obligation-cordapp/workflows/build/mock-network/20230131-074450.589-37A63494049C6D3E/nodes/2/cordapps/corda-finance-contracts-4.9.jar, rootPackageName=null), RestrictedURL(url=file:/Users/peter.li/Desktop/obligation-cordapp/workflows/build/mock-network/20230131-074450.589-37A63494049C6D3E/nodes/2/cordapps/contracts-1.0.jar, rootPackageName=null), RestrictedURL(url=file:/Users/peter.li/Desktop/obligation-cordapp/workflows/build/mock-network/20230131-074450.589-37A63494049C6D3E/nodes/2/cordapps/workflows-1.0.jar, rootPackageName=null) {}
[INFO ] 2023-01-31T07:45:15,242Z [Test worker] cordapp.JarScanningCordappLoader. - Scanning CorDapp in file:/Users/peter.li/Desktop/obligation-cordapp/workflows/build/mock-network/20230131-074450.589-37A63494049C6D3E/nodes/2/cordapps/accounts-contracts-1.0.jar {}
[INFO ] 2023-01-31T07:45:15,265Z [Test worker] cordapp.JarScanningCordappLoader. - Scanning CorDapp in file:/Users/peter.li/Desktop/obligation-cordapp/workflows/build/mock-network/20230131-074450.589-37A63494049C6D3E/nodes/2/cordapps/accounts-workflows-1.0.jar {}
[INFO ] 2023-01-31T07:45:15,275Z [Test worker] cordapp.JarScanningCordappLoader. - Scanning CorDapp in file:/Users/peter.li/Desktop/obligation-cordapp/workflows/build/mock-network/20230131-074450.589-37A63494049C6D3E/nodes/2/cordapps/corda-finance-contracts-4.9.jar {}
[INFO ] 2023-01-31T07:45:15,286Z [Test worker] cordapp.JarScanningCordappLoader. - Scanning CorDapp in file:/Users/peter.li/Desktop/obligation-cordapp/workflows/build/mock-network/20230131-074450.589-37A63494049C6D3E/nodes/2/cordapps/contracts-1.0.jar {}
[INFO ] 2023-01-31T07:45:15,297Z [Test worker] cordapp.JarScanningCordappLoader. - Scanning CorDapp in file:/Users/peter.li/Desktop/obligation-cordapp/workflows/build/mock-network/20230131-074450.589-37A63494049C6D3E/nodes/2/cordapps/workflows-1.0.jar {}
[INFO ] 2023-01-31T07:45:15,320Z [Test worker] internal.InternalMockNetwork$MockNode. - MessagingService active change to: false {}
[INFO ] 2023-01-31T07:45:15,321Z [Test worker] internal.InternalMockNetwork$MockNode. - Flow external operation executor has a max of 2 threads {}
[INFO ] 2023-01-31T07:45:15,323Z [Test worker] internal.InternalMockNetwork$MockNode. - Node starting up ... {}
[INFO ] 2023-01-31T07:45:15,358Z [Test worker] internal.KeyStoreHandler. - Loaded trusted root certificate: DL7fwxLm5xbiMD8adUuYTsPZHAict46Ng4w6RNcySt5vAw, alias: cordarootca {}
[INFO ] 2023-01-31T07:45:15,358Z [Test worker] internal.KeyStoreHandler. - Loaded node identity key: DLNVnEZzGnRs1QzoANbrfYmAQfZmMj4VYd7dVyNBnaVwD, alias: identity-private-key {}
[INFO ] 2023-01-31T07:45:15,366Z [Test worker] internal.NodeFlowManager. - Registered com.r3.corda.lib.accounts.workflows.flows.ShareStateAndSyncAccounts to initiate com.r3.corda.lib.accounts.workflows.flows.ReceiveStateAndSyncAccounts (version 1) {}
[INFO ] 2023-01-31T07:45:15,366Z [Test worker] internal.NodeFlowManager. - Registered com.r3.corda.lib.accounts.workflows.flows.ShareStateWithAccount to initiate com.r3.corda.lib.accounts.workflows.flows.ReceiveStateForAccount (version 1) {}
[INFO ] 2023-01-31T07:45:15,366Z [Test worker] internal.NodeFlowManager. - Registered com.r3.corda.lib.accounts.workflows.flows.RequestAccountInfo to initiate com.r3.corda.lib.accounts.workflows.flows.RequestAccountInfoHandler (version 1) {}
[INFO ] 2023-01-31T07:45:15,366Z [Test worker] internal.NodeFlowManager. - Registered com.r3.corda.lib.accounts.workflows.flows.RequestKeyForAccount to initiate com.r3.corda.lib.accounts.workflows.flows.SendKeyForAccount (version 1) {}
[INFO ] 2023-01-31T07:45:15,366Z [Test worker] internal.NodeFlowManager. - Registered com.r3.corda.lib.accounts.workflows.flows.ShareAccountInfo to initiate com.r3.corda.lib.accounts.workflows.flows.ShareAccountInfoHandler (version 1) {}
[INFO ] 2023-01-31T07:45:15,366Z [Test worker] internal.NodeFlowManager. - Registered net.corda.samples.obligation.flows.IOUIssueFlow to initiate net.corda.samples.obligation.flows.IOUIssueFlowResponder (version 1) {}
[INFO ] 2023-01-31T07:45:15,366Z [Test worker] internal.NodeFlowManager. - Registered net.corda.samples.obligation.flows.IOUSettleFlow to initiate net.corda.samples.obligation.flows.IOUSettleFlowResponder (version 1) {}
[INFO ] 2023-01-31T07:45:15,366Z [Test worker] internal.NodeFlowManager. - Registered net.corda.samples.obligation.flows.IOUTransferFlow to initiate net.corda.samples.obligation.flows.IOUTransferFlowResponder (version 1) {}
[INFO ] 2023-01-31T07:45:15,372Z [Test worker] internal.InternalMockNetwork$MockNode. - Loaded network parameters: NetworkParameters {
      minimumPlatformVersion=4
      notaries=[NotaryInfo(identity=O=Notary, L=London, C=GB, validating=true)]
      maxMessageSize=10485760
      maxTransactionSize=524288000
      whitelistedContractImplementations {
        
      }
      eventHorizon=PT720H
      packageOwnership {
        
      }
      modifiedTime=2023-01-31T07:44:50.362Z
      epoch=1
  } {}
[INFO ] 2023-01-31T07:45:15,988Z [Test worker] internal.InternalMockNetwork$MockNode. - Connected to H2 database. {}
[INFO ] 2023-01-31T07:45:15,989Z [Test worker] persistence.HibernateConfiguration. - Init HibernateConfiguration for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1), AccountsContractsSchemaV1(name=com.r3.corda.lib.accounts.contracts.internal.schemas.AccountsContractsSchema, version=1), AccountsWorkflowsSchemaV1(name=com.r3.corda.lib.accounts.workflows.internal.schemas.AccountsWorkflowsSchema, version=1), CashSchemaV1(name=net.corda.finance.schemas.CashSchema, version=1), CommercialPaperSchemaV1(name=net.corda.finance.schemas.CommercialPaperSchema, version=1)] {}
[INFO ] 2023-01-31T07:45:15,989Z [Test worker] factory.BaseSessionFactoryFactory. - Creating session factory for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1), AccountsContractsSchemaV1(name=com.r3.corda.lib.accounts.contracts.internal.schemas.AccountsContractsSchema, version=1), AccountsWorkflowsSchemaV1(name=com.r3.corda.lib.accounts.workflows.internal.schemas.AccountsWorkflowsSchema, version=1), CashSchemaV1(name=net.corda.finance.schemas.CashSchema, version=1), CommercialPaperSchemaV1(name=net.corda.finance.schemas.CommercialPaperSchema, version=1)] {}
[INFO ] 2023-01-31T07:45:16,142Z [Test worker] factory.BaseSessionFactoryFactory. - Created session factory for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1), AccountsContractsSchemaV1(name=com.r3.corda.lib.accounts.contracts.internal.schemas.AccountsContractsSchema, version=1), AccountsWorkflowsSchemaV1(name=com.r3.corda.lib.accounts.workflows.internal.schemas.AccountsWorkflowsSchema, version=1), CashSchemaV1(name=net.corda.finance.schemas.CashSchema, version=1), CommercialPaperSchemaV1(name=net.corda.finance.schemas.CommercialPaperSchema, version=1)] {}
[INFO ] 2023-01-31T07:45:16,147Z [Test worker] internal.InternalMockNetwork$MockNode. - Node-info has changed so submitting update. Old node-info was null {}
[INFO ] 2023-01-31T07:45:16,150Z [Test worker] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 2, L=London, C=GB], platformVersion=11, serial=1675151116147), owningKey=DLNVnEZzGnRs1QzoANbrfYmAQfZmMj4VYd7dVyNBnaVwD {}
[INFO ] 2023-01-31T07:45:16,150Z [Test worker] network.PersistentNetworkMapCache. - No previous node found for O=Mock Company 2, L=London, C=GB {}
[INFO ] 2023-01-31T07:45:16,158Z [Test worker] internal.InternalMockNetwork$MockNode. - New node-info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 2, L=London, C=GB], platformVersion=11, serial=1675151116147) {}
[INFO ] 2023-01-31T07:45:16,165Z [Test worker] network.NetworkMapUpdater. - Auto-accept enabled for network parameter changes which modify only: [epoch, modifiedTime, packageOwnership, whitelistedContractImplementations] {}
[INFO ] 2023-01-31T07:45:16,166Z [Test worker] internal.MockNodeMessagingService. - Status change to true {}
[INFO ] 2023-01-31T07:45:16,166Z [Test worker] internal.InternalMockNetwork$MockNode. - MessagingService active change to: true {}
[INFO ] 2023-01-31T07:45:16,177Z [MockNode-3-2] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 2, L=London, C=GB], platformVersion=11, serial=1675151116147), owningKey=DLNVnEZzGnRs1QzoANbrfYmAQfZmMj4VYd7dVyNBnaVwD {}
[INFO ] 2023-01-31T07:45:16,177Z [MockNode-3-2] network.PersistentNetworkMapCache. - Previous node was identical to incoming one - doing nothing {}
[INFO ] 2023-01-31T07:45:16,200Z [Test worker] persistence.NodeAttachmentService. - Stored new attachment: id=D370FD972C7E07CE73F4F9B7886D226807F6B16C4EE287398B9C69384109DC14 uploader=app filename=Accounts SDK - States and Contracts {}
[INFO ] 2023-01-31T07:45:16,234Z [Test worker] persistence.NodeAttachmentService. - Stored new attachment: id=BD0C932EAF8B1FE96DCBBF275B914BCD776D14EDC8F97DCEBF7E15DA09C606AE uploader=app filename=Corda Finance Demo {}
[INFO ] 2023-01-31T07:45:16,248Z [Test worker] persistence.NodeAttachmentService. - Stored new attachment: id=8D797B45F40704FA4FD70921F5BC6E2D7B34450D345CE6788D2A87859EF63BD8 uploader=app filename=Obligation Contracts {}
[INFO ] 2023-01-31T07:45:16,250Z [Test worker] internal.InternalMockNetwork$MockNode. - Installed com.r3.corda.lib.accounts.workflows.services.KeyManagementBackedAccountService Corda service {}
[INFO ] 2023-01-31T07:45:16,270Z [Test worker] statemachine.SingleThreadedStateMachineManager. - Node ready, info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 2, L=London, C=GB], platformVersion=11, serial=1675151116147) {}
[INFO ] 2023-01-31T07:45:16,273Z [Test worker] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Notary, L=London, C=GB], platformVersion=11, serial=1675151112877), owningKey=DLrGDpfecxXDUXVV2BaaNYr3Vmk33rAHfAjgDHBH6J8jm {}
[INFO ] 2023-01-31T07:45:16,273Z [Test worker] network.PersistentNetworkMapCache. - No previous node found for O=Notary, L=London, C=GB {}
[INFO ] 2023-01-31T07:45:16,283Z [Test worker] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 2, L=London, C=GB], platformVersion=11, serial=1675151116147), owningKey=DLNVnEZzGnRs1QzoANbrfYmAQfZmMj4VYd7dVyNBnaVwD {}
[INFO ] 2023-01-31T07:45:16,283Z [Test worker] network.PersistentNetworkMapCache. - No previous node found for O=Mock Company 2, L=London, C=GB {}
[INFO ] 2023-01-31T07:45:16,296Z [Test worker] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 1, L=London, C=GB], platformVersion=11, serial=1675151115058), owningKey=DL6TRqMjzaxJqTRYmKbSdjxrn2gwnkbBuvnxB3thJ2aKkn {}
[INFO ] 2023-01-31T07:45:16,296Z [Test worker] network.PersistentNetworkMapCache. - No previous node found for O=Mock Company 1, L=London, C=GB {}
[INFO ] 2023-01-31T07:45:16,306Z [Test worker] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 2, L=London, C=GB], platformVersion=11, serial=1675151116147), owningKey=DLNVnEZzGnRs1QzoANbrfYmAQfZmMj4VYd7dVyNBnaVwD {}
[INFO ] 2023-01-31T07:45:16,306Z [Test worker] network.PersistentNetworkMapCache. - No previous node found for O=Mock Company 2, L=London, C=GB {}
[INFO ] 2023-01-31T07:45:16,316Z [Test worker] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 2, L=London, C=GB], platformVersion=11, serial=1675151116147), owningKey=DLNVnEZzGnRs1QzoANbrfYmAQfZmMj4VYd7dVyNBnaVwD {}
[INFO ] 2023-01-31T07:45:16,316Z [Test worker] network.PersistentNetworkMapCache. - Previous node was identical to incoming one - doing nothing {}
[INFO ] 2023-01-31T07:45:16,316Z [Test worker] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 2, L=London, C=GB], platformVersion=11, serial=1675151116147), owningKey=DLNVnEZzGnRs1QzoANbrfYmAQfZmMj4VYd7dVyNBnaVwD {}
[INFO ] 2023-01-31T07:45:16,316Z [Test worker] network.PersistentNetworkMapCache. - Previous node was identical to incoming one - doing nothing {}
[INFO ] 2023-01-31T07:45:16,329Z [Test worker] cordapp.JarScanningCordappLoader. - Looking for CorDapps in [build/mock-network/20230131-074450.589-37A63494049C6D3E/nodes/3/cordapps] {}
[INFO ] 2023-01-31T07:45:16,330Z [Test worker] cordapp.JarScanningCordappLoader. - Loading CorDapps from RestrictedURL(url=file:/Users/peter.li/Desktop/obligation-cordapp/workflows/build/mock-network/20230131-074450.589-37A63494049C6D3E/nodes/3/cordapps/accounts-contracts-1.0.jar, rootPackageName=null), RestrictedURL(url=file:/Users/peter.li/Desktop/obligation-cordapp/workflows/build/mock-network/20230131-074450.589-37A63494049C6D3E/nodes/3/cordapps/accounts-workflows-1.0.jar, rootPackageName=null), RestrictedURL(url=file:/Users/peter.li/Desktop/obligation-cordapp/workflows/build/mock-network/20230131-074450.589-37A63494049C6D3E/nodes/3/cordapps/corda-finance-contracts-4.9.jar, rootPackageName=null), RestrictedURL(url=file:/Users/peter.li/Desktop/obligation-cordapp/workflows/build/mock-network/20230131-074450.589-37A63494049C6D3E/nodes/3/cordapps/contracts-1.0.jar, rootPackageName=null), RestrictedURL(url=file:/Users/peter.li/Desktop/obligation-cordapp/workflows/build/mock-network/20230131-074450.589-37A63494049C6D3E/nodes/3/cordapps/workflows-1.0.jar, rootPackageName=null) {}
[INFO ] 2023-01-31T07:45:16,330Z [Test worker] cordapp.JarScanningCordappLoader. - Scanning CorDapp in file:/Users/peter.li/Desktop/obligation-cordapp/workflows/build/mock-network/20230131-074450.589-37A63494049C6D3E/nodes/3/cordapps/accounts-contracts-1.0.jar {}
[INFO ] 2023-01-31T07:45:16,354Z [Test worker] cordapp.JarScanningCordappLoader. - Scanning CorDapp in file:/Users/peter.li/Desktop/obligation-cordapp/workflows/build/mock-network/20230131-074450.589-37A63494049C6D3E/nodes/3/cordapps/accounts-workflows-1.0.jar {}
[INFO ] 2023-01-31T07:45:16,363Z [Test worker] cordapp.JarScanningCordappLoader. - Scanning CorDapp in file:/Users/peter.li/Desktop/obligation-cordapp/workflows/build/mock-network/20230131-074450.589-37A63494049C6D3E/nodes/3/cordapps/corda-finance-contracts-4.9.jar {}
[INFO ] 2023-01-31T07:45:16,373Z [Test worker] cordapp.JarScanningCordappLoader. - Scanning CorDapp in file:/Users/peter.li/Desktop/obligation-cordapp/workflows/build/mock-network/20230131-074450.589-37A63494049C6D3E/nodes/3/cordapps/contracts-1.0.jar {}
[INFO ] 2023-01-31T07:45:16,380Z [Test worker] cordapp.JarScanningCordappLoader. - Scanning CorDapp in file:/Users/peter.li/Desktop/obligation-cordapp/workflows/build/mock-network/20230131-074450.589-37A63494049C6D3E/nodes/3/cordapps/workflows-1.0.jar {}
[INFO ] 2023-01-31T07:45:16,402Z [Test worker] internal.InternalMockNetwork$MockNode. - MessagingService active change to: false {}
[INFO ] 2023-01-31T07:45:16,403Z [Test worker] internal.InternalMockNetwork$MockNode. - Flow external operation executor has a max of 2 threads {}
[INFO ] 2023-01-31T07:45:16,404Z [Test worker] internal.InternalMockNetwork$MockNode. - Node starting up ... {}
[INFO ] 2023-01-31T07:45:16,465Z [Test worker] internal.KeyStoreHandler. - Loaded trusted root certificate: DL7fwxLm5xbiMD8adUuYTsPZHAict46Ng4w6RNcySt5vAw, alias: cordarootca {}
[INFO ] 2023-01-31T07:45:16,465Z [Test worker] internal.KeyStoreHandler. - Loaded node identity key: DL9baL8qBn1WuebJSsXEaaHfGVXkXrHTqi54ziL9S3r5CF, alias: identity-private-key {}
[INFO ] 2023-01-31T07:45:16,469Z [Test worker] internal.NodeFlowManager. - Registered com.r3.corda.lib.accounts.workflows.flows.ShareStateAndSyncAccounts to initiate com.r3.corda.lib.accounts.workflows.flows.ReceiveStateAndSyncAccounts (version 1) {}
[INFO ] 2023-01-31T07:45:16,469Z [Test worker] internal.NodeFlowManager. - Registered com.r3.corda.lib.accounts.workflows.flows.ShareStateWithAccount to initiate com.r3.corda.lib.accounts.workflows.flows.ReceiveStateForAccount (version 1) {}
[INFO ] 2023-01-31T07:45:16,469Z [Test worker] internal.NodeFlowManager. - Registered com.r3.corda.lib.accounts.workflows.flows.RequestAccountInfo to initiate com.r3.corda.lib.accounts.workflows.flows.RequestAccountInfoHandler (version 1) {}
[INFO ] 2023-01-31T07:45:16,469Z [Test worker] internal.NodeFlowManager. - Registered com.r3.corda.lib.accounts.workflows.flows.RequestKeyForAccount to initiate com.r3.corda.lib.accounts.workflows.flows.SendKeyForAccount (version 1) {}
[INFO ] 2023-01-31T07:45:16,469Z [Test worker] internal.NodeFlowManager. - Registered com.r3.corda.lib.accounts.workflows.flows.ShareAccountInfo to initiate com.r3.corda.lib.accounts.workflows.flows.ShareAccountInfoHandler (version 1) {}
[INFO ] 2023-01-31T07:45:16,469Z [Test worker] internal.NodeFlowManager. - Registered net.corda.samples.obligation.flows.IOUIssueFlow to initiate net.corda.samples.obligation.flows.IOUIssueFlowResponder (version 1) {}
[INFO ] 2023-01-31T07:45:16,469Z [Test worker] internal.NodeFlowManager. - Registered net.corda.samples.obligation.flows.IOUSettleFlow to initiate net.corda.samples.obligation.flows.IOUSettleFlowResponder (version 1) {}
[INFO ] 2023-01-31T07:45:16,469Z [Test worker] internal.NodeFlowManager. - Registered net.corda.samples.obligation.flows.IOUTransferFlow to initiate net.corda.samples.obligation.flows.IOUTransferFlowResponder (version 1) {}
[INFO ] 2023-01-31T07:45:16,474Z [Test worker] internal.InternalMockNetwork$MockNode. - Loaded network parameters: NetworkParameters {
      minimumPlatformVersion=4
      notaries=[NotaryInfo(identity=O=Notary, L=London, C=GB, validating=true)]
      maxMessageSize=10485760
      maxTransactionSize=524288000
      whitelistedContractImplementations {
        
      }
      eventHorizon=PT720H
      packageOwnership {
        
      }
      modifiedTime=2023-01-31T07:44:50.362Z
      epoch=1
  } {}
[INFO ] 2023-01-31T07:45:17,026Z [Test worker] internal.InternalMockNetwork$MockNode. - Connected to H2 database. {}
[INFO ] 2023-01-31T07:45:17,030Z [Test worker] persistence.HibernateConfiguration. - Init HibernateConfiguration for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1), AccountsContractsSchemaV1(name=com.r3.corda.lib.accounts.contracts.internal.schemas.AccountsContractsSchema, version=1), AccountsWorkflowsSchemaV1(name=com.r3.corda.lib.accounts.workflows.internal.schemas.AccountsWorkflowsSchema, version=1), CashSchemaV1(name=net.corda.finance.schemas.CashSchema, version=1), CommercialPaperSchemaV1(name=net.corda.finance.schemas.CommercialPaperSchema, version=1)] {}
[INFO ] 2023-01-31T07:45:17,030Z [Test worker] factory.BaseSessionFactoryFactory. - Creating session factory for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1), AccountsContractsSchemaV1(name=com.r3.corda.lib.accounts.contracts.internal.schemas.AccountsContractsSchema, version=1), AccountsWorkflowsSchemaV1(name=com.r3.corda.lib.accounts.workflows.internal.schemas.AccountsWorkflowsSchema, version=1), CashSchemaV1(name=net.corda.finance.schemas.CashSchema, version=1), CommercialPaperSchemaV1(name=net.corda.finance.schemas.CommercialPaperSchema, version=1)] {}
[INFO ] 2023-01-31T07:45:17,166Z [Test worker] factory.BaseSessionFactoryFactory. - Created session factory for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1), AccountsContractsSchemaV1(name=com.r3.corda.lib.accounts.contracts.internal.schemas.AccountsContractsSchema, version=1), AccountsWorkflowsSchemaV1(name=com.r3.corda.lib.accounts.workflows.internal.schemas.AccountsWorkflowsSchema, version=1), CashSchemaV1(name=net.corda.finance.schemas.CashSchema, version=1), CommercialPaperSchemaV1(name=net.corda.finance.schemas.CommercialPaperSchema, version=1)] {}
[INFO ] 2023-01-31T07:45:17,171Z [Test worker] internal.InternalMockNetwork$MockNode. - Node-info has changed so submitting update. Old node-info was null {}
[INFO ] 2023-01-31T07:45:17,174Z [Test worker] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 3, L=London, C=GB], platformVersion=11, serial=1675151117171), owningKey=DL9baL8qBn1WuebJSsXEaaHfGVXkXrHTqi54ziL9S3r5CF {}
[INFO ] 2023-01-31T07:45:17,174Z [Test worker] network.PersistentNetworkMapCache. - No previous node found for O=Mock Company 3, L=London, C=GB {}
[INFO ] 2023-01-31T07:45:17,182Z [Test worker] internal.InternalMockNetwork$MockNode. - New node-info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 3, L=London, C=GB], platformVersion=11, serial=1675151117171) {}
[INFO ] 2023-01-31T07:45:17,189Z [Test worker] network.NetworkMapUpdater. - Auto-accept enabled for network parameter changes which modify only: [epoch, modifiedTime, packageOwnership, whitelistedContractImplementations] {}
[INFO ] 2023-01-31T07:45:17,190Z [Test worker] internal.MockNodeMessagingService. - Status change to true {}
[INFO ] 2023-01-31T07:45:17,190Z [Test worker] internal.InternalMockNetwork$MockNode. - MessagingService active change to: true {}
[INFO ] 2023-01-31T07:45:17,201Z [MockNode-4-2] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 3, L=London, C=GB], platformVersion=11, serial=1675151117171), owningKey=DL9baL8qBn1WuebJSsXEaaHfGVXkXrHTqi54ziL9S3r5CF {}
[INFO ] 2023-01-31T07:45:17,201Z [MockNode-4-2] network.PersistentNetworkMapCache. - Previous node was identical to incoming one - doing nothing {}
[INFO ] 2023-01-31T07:45:17,222Z [Test worker] persistence.NodeAttachmentService. - Stored new attachment: id=D370FD972C7E07CE73F4F9B7886D226807F6B16C4EE287398B9C69384109DC14 uploader=app filename=Accounts SDK - States and Contracts {}
[INFO ] 2023-01-31T07:45:17,257Z [Test worker] persistence.NodeAttachmentService. - Stored new attachment: id=BD0C932EAF8B1FE96DCBBF275B914BCD776D14EDC8F97DCEBF7E15DA09C606AE uploader=app filename=Corda Finance Demo {}
[INFO ] 2023-01-31T07:45:17,270Z [Test worker] persistence.NodeAttachmentService. - Stored new attachment: id=8D797B45F40704FA4FD70921F5BC6E2D7B34450D345CE6788D2A87859EF63BD8 uploader=app filename=Obligation Contracts {}
[INFO ] 2023-01-31T07:45:17,272Z [Test worker] internal.InternalMockNetwork$MockNode. - Installed com.r3.corda.lib.accounts.workflows.services.KeyManagementBackedAccountService Corda service {}
[INFO ] 2023-01-31T07:45:17,290Z [Test worker] statemachine.SingleThreadedStateMachineManager. - Node ready, info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 3, L=London, C=GB], platformVersion=11, serial=1675151117171) {}
[INFO ] 2023-01-31T07:45:17,292Z [Test worker] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Notary, L=London, C=GB], platformVersion=11, serial=1675151112877), owningKey=DLrGDpfecxXDUXVV2BaaNYr3Vmk33rAHfAjgDHBH6J8jm {}
[INFO ] 2023-01-31T07:45:17,292Z [Test worker] network.PersistentNetworkMapCache. - No previous node found for O=Notary, L=London, C=GB {}
[INFO ] 2023-01-31T07:45:17,301Z [Test worker] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 3, L=London, C=GB], platformVersion=11, serial=1675151117171), owningKey=DL9baL8qBn1WuebJSsXEaaHfGVXkXrHTqi54ziL9S3r5CF {}
[INFO ] 2023-01-31T07:45:17,301Z [Test worker] network.PersistentNetworkMapCache. - No previous node found for O=Mock Company 3, L=London, C=GB {}
[INFO ] 2023-01-31T07:45:17,311Z [Test worker] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 1, L=London, C=GB], platformVersion=11, serial=1675151115058), owningKey=DL6TRqMjzaxJqTRYmKbSdjxrn2gwnkbBuvnxB3thJ2aKkn {}
[INFO ] 2023-01-31T07:45:17,311Z [Test worker] network.PersistentNetworkMapCache. - No previous node found for O=Mock Company 1, L=London, C=GB {}
[INFO ] 2023-01-31T07:45:17,320Z [Test worker] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 3, L=London, C=GB], platformVersion=11, serial=1675151117171), owningKey=DL9baL8qBn1WuebJSsXEaaHfGVXkXrHTqi54ziL9S3r5CF {}
[INFO ] 2023-01-31T07:45:17,320Z [Test worker] network.PersistentNetworkMapCache. - No previous node found for O=Mock Company 3, L=London, C=GB {}
[INFO ] 2023-01-31T07:45:17,330Z [Test worker] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 2, L=London, C=GB], platformVersion=11, serial=1675151116147), owningKey=DLNVnEZzGnRs1QzoANbrfYmAQfZmMj4VYd7dVyNBnaVwD {}
[INFO ] 2023-01-31T07:45:17,330Z [Test worker] network.PersistentNetworkMapCache. - No previous node found for O=Mock Company 2, L=London, C=GB {}
[INFO ] 2023-01-31T07:45:17,339Z [Test worker] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 3, L=London, C=GB], platformVersion=11, serial=1675151117171), owningKey=DL9baL8qBn1WuebJSsXEaaHfGVXkXrHTqi54ziL9S3r5CF {}
[INFO ] 2023-01-31T07:45:17,339Z [Test worker] network.PersistentNetworkMapCache. - No previous node found for O=Mock Company 3, L=London, C=GB {}
[INFO ] 2023-01-31T07:45:17,347Z [Test worker] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 3, L=London, C=GB], platformVersion=11, serial=1675151117171), owningKey=DL9baL8qBn1WuebJSsXEaaHfGVXkXrHTqi54ziL9S3r5CF {}
[INFO ] 2023-01-31T07:45:17,347Z [Test worker] network.PersistentNetworkMapCache. - Previous node was identical to incoming one - doing nothing {}
[INFO ] 2023-01-31T07:45:17,347Z [Test worker] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 3, L=London, C=GB], platformVersion=11, serial=1675151117171), owningKey=DL9baL8qBn1WuebJSsXEaaHfGVXkXrHTqi54ziL9S3r5CF {}
[INFO ] 2023-01-31T07:45:17,347Z [Test worker] network.PersistentNetworkMapCache. - Previous node was identical to incoming one - doing nothing {}
[WARN ] 2023-01-31T07:45:17,349Z [Test worker] internal.NodeFlowManager. - Multiple flows are registered for InitiatingFlow: class net.corda.samples.obligation.flows.IOUIssueFlow, currently using: class net.corda.samples.obligation.flows.IOUIssueFlowResponder {}
[INFO ] 2023-01-31T07:45:17,349Z [Test worker] internal.NodeFlowManager. - Registered net.corda.samples.obligation.flows.IOUIssueFlow to initiate net.corda.samples.obligation.flows.IOUIssueFlowResponder (version 1) {}
[WARN ] 2023-01-31T07:45:17,353Z [Test worker] internal.NodeFlowManager. - Multiple flows are registered for InitiatingFlow: class net.corda.samples.obligation.flows.IOUIssueFlow, currently using: class net.corda.samples.obligation.flows.IOUIssueFlowResponder {}
[INFO ] 2023-01-31T07:45:17,353Z [Test worker] internal.NodeFlowManager. - Registered net.corda.samples.obligation.flows.IOUIssueFlow to initiate net.corda.samples.obligation.flows.IOUIssueFlowResponder (version 1) {}
[WARN ] 2023-01-31T07:45:17,353Z [Test worker] internal.NodeFlowManager. - Multiple flows are registered for InitiatingFlow: class net.corda.samples.obligation.flows.IOUIssueFlow, currently using: class net.corda.samples.obligation.flows.IOUIssueFlowResponder {}
[INFO ] 2023-01-31T07:45:17,353Z [Test worker] internal.NodeFlowManager. - Registered net.corda.samples.obligation.flows.IOUIssueFlow to initiate net.corda.samples.obligation.flows.IOUIssueFlowResponder (version 1) {}
[WARN ] 2023-01-31T07:45:17,353Z [Test worker] internal.NodeFlowManager. - Multiple flows are registered for InitiatingFlow: class net.corda.samples.obligation.flows.IOUSettleFlow, currently using: class net.corda.samples.obligation.flows.IOUSettleFlowResponder {}
[INFO ] 2023-01-31T07:45:17,353Z [Test worker] internal.NodeFlowManager. - Registered net.corda.samples.obligation.flows.IOUSettleFlow to initiate net.corda.samples.obligation.flows.IOUSettleFlowResponder (version 1) {}
[WARN ] 2023-01-31T07:45:17,353Z [Test worker] internal.NodeFlowManager. - Multiple flows are registered for InitiatingFlow: class net.corda.samples.obligation.flows.IOUSettleFlow, currently using: class net.corda.samples.obligation.flows.IOUSettleFlowResponder {}
[INFO ] 2023-01-31T07:45:17,353Z [Test worker] internal.NodeFlowManager. - Registered net.corda.samples.obligation.flows.IOUSettleFlow to initiate net.corda.samples.obligation.flows.IOUSettleFlowResponder (version 1) {}
[WARN ] 2023-01-31T07:45:17,353Z [Test worker] internal.NodeFlowManager. - Multiple flows are registered for InitiatingFlow: class net.corda.samples.obligation.flows.IOUSettleFlow, currently using: class net.corda.samples.obligation.flows.IOUSettleFlowResponder {}
[INFO ] 2023-01-31T07:45:17,353Z [Test worker] internal.NodeFlowManager. - Registered net.corda.samples.obligation.flows.IOUSettleFlow to initiate net.corda.samples.obligation.flows.IOUSettleFlowResponder (version 1) {}
[INFO ] 2023-01-31T07:45:18,202Z [Mock network] corda.flow. - No need to notarise this transaction. {actor_id=Only For Testing, actor_owning_identity=O=Mock Company 1, L=London, C=GB, actor_store_id=TEST, fiber-id=10000001, flow-id=7fec9194-1a7e-4120-960a-6799f4c0178e, invocation_id=d0425e91-e169-40e1-9c9b-c2dc146fc7cf, invocation_timestamp=2023-01-31T07:45:17.380Z, origin=Only For Testing, session_id=d0425e91-e169-40e1-9c9b-c2dc146fc7cf, session_timestamp=2023-01-31T07:45:17.380Z, thread-id=854, tx_id=92B0FAC524A371E30A652D3E724B2CD7A2543A9A3FCB6649D37486F44C0F9635}
[INFO ] 2023-01-31T07:45:18,202Z [Mock network] corda.flow. - Recording transaction locally. {actor_id=Only For Testing, actor_owning_identity=O=Mock Company 1, L=London, C=GB, actor_store_id=TEST, fiber-id=10000001, flow-id=7fec9194-1a7e-4120-960a-6799f4c0178e, invocation_id=d0425e91-e169-40e1-9c9b-c2dc146fc7cf, invocation_timestamp=2023-01-31T07:45:17.380Z, origin=Only For Testing, session_id=d0425e91-e169-40e1-9c9b-c2dc146fc7cf, session_timestamp=2023-01-31T07:45:17.380Z, thread-id=854, tx_id=92B0FAC524A371E30A652D3E724B2CD7A2543A9A3FCB6649D37486F44C0F9635}
[INFO ] 2023-01-31T07:45:18,303Z [Mock network] corda.flow. - Recorded transaction locally successfully. {actor_id=Only For Testing, actor_owning_identity=O=Mock Company 1, L=London, C=GB, actor_store_id=TEST, fiber-id=10000001, flow-id=7fec9194-1a7e-4120-960a-6799f4c0178e, invocation_id=d0425e91-e169-40e1-9c9b-c2dc146fc7cf, invocation_timestamp=2023-01-31T07:45:17.380Z, origin=Only For Testing, session_id=d0425e91-e169-40e1-9c9b-c2dc146fc7cf, session_timestamp=2023-01-31T07:45:17.380Z, thread-id=854, tx_id=92B0FAC524A371E30A652D3E724B2CD7A2543A9A3FCB6649D37486F44C0F9635}
[INFO ] 2023-01-31T07:45:18,303Z [Mock network] corda.flow. - All parties received the transaction successfully. {actor_id=Only For Testing, actor_owning_identity=O=Mock Company 1, L=London, C=GB, actor_store_id=TEST, fiber-id=10000001, flow-id=7fec9194-1a7e-4120-960a-6799f4c0178e, invocation_id=d0425e91-e169-40e1-9c9b-c2dc146fc7cf, invocation_timestamp=2023-01-31T07:45:17.380Z, origin=Only For Testing, session_id=d0425e91-e169-40e1-9c9b-c2dc146fc7cf, session_timestamp=2023-01-31T07:45:17.380Z, thread-id=854, tx_id=92B0FAC524A371E30A652D3E724B2CD7A2543A9A3FCB6649D37486F44C0F9635}
[INFO ] 2023-01-31T07:45:18,472Z [Mock network] corda.flow. - Received transaction acknowledgement request from party O=Mock Company 1, L=London, C=GB. {fiber-id=10000002, flow-id=f09b8244-5c34-43d6-a074-fee2397862ba, invocation_id=537dcdb7-f55c-4058-9dbe-a86876686a89, invocation_timestamp=2023-01-31T07:45:18.425Z, origin=O=Mock Company 1, L=London, C=GB, session_id=537dcdb7-f55c-4058-9dbe-a86876686a89, session_timestamp=2023-01-31T07:45:18.425Z, thread-id=854, tx_id=92B0FAC524A371E30A652D3E724B2CD7A2543A9A3FCB6649D37486F44C0F9635}
[INFO ] 2023-01-31T07:45:18,520Z [Mock network] corda.flow. - Transaction dependencies resolution completed. {fiber-id=10000002, flow-id=f09b8244-5c34-43d6-a074-fee2397862ba, invocation_id=537dcdb7-f55c-4058-9dbe-a86876686a89, invocation_timestamp=2023-01-31T07:45:18.425Z, origin=O=Mock Company 1, L=London, C=GB, session_id=537dcdb7-f55c-4058-9dbe-a86876686a89, session_timestamp=2023-01-31T07:45:18.425Z, thread-id=854, tx_id=92B0FAC524A371E30A652D3E724B2CD7A2543A9A3FCB6649D37486F44C0F9635}
[INFO ] 2023-01-31T07:45:18,582Z [Mock network] corda.flow. - Successfully received fully signed tx. Sending it to the vault for processing. {fiber-id=10000002, flow-id=f09b8244-5c34-43d6-a074-fee2397862ba, invocation_id=537dcdb7-f55c-4058-9dbe-a86876686a89, invocation_timestamp=2023-01-31T07:45:18.425Z, origin=O=Mock Company 1, L=London, C=GB, session_id=537dcdb7-f55c-4058-9dbe-a86876686a89, session_timestamp=2023-01-31T07:45:18.425Z, thread-id=854, tx_id=92B0FAC524A371E30A652D3E724B2CD7A2543A9A3FCB6649D37486F44C0F9635}
[INFO ] 2023-01-31T07:45:18,590Z [Mock network] corda.flow. - Successfully recorded received transaction locally. {fiber-id=10000002, flow-id=f09b8244-5c34-43d6-a074-fee2397862ba, invocation_id=537dcdb7-f55c-4058-9dbe-a86876686a89, invocation_timestamp=2023-01-31T07:45:18.425Z, origin=O=Mock Company 1, L=London, C=GB, session_id=537dcdb7-f55c-4058-9dbe-a86876686a89, session_timestamp=2023-01-31T07:45:18.425Z, thread-id=854, tx_id=92B0FAC524A371E30A652D3E724B2CD7A2543A9A3FCB6649D37486F44C0F9635}
[INFO ] 2023-01-31T07:45:18,663Z [Mock network] corda.flow. - Received transaction acknowledgement request from party O=Mock Company 1, L=London, C=GB. {fiber-id=10000003, flow-id=71117c04-7f7b-4379-8cfa-4497501c82f3, invocation_id=52206791-0d24-400a-b0fd-a7b097af45d7, invocation_timestamp=2023-01-31T07:45:18.649Z, origin=O=Mock Company 1, L=London, C=GB, session_id=52206791-0d24-400a-b0fd-a7b097af45d7, session_timestamp=2023-01-31T07:45:18.649Z, thread-id=854, tx_id=92B0FAC524A371E30A652D3E724B2CD7A2543A9A3FCB6649D37486F44C0F9635}
[INFO ] 2023-01-31T07:45:18,676Z [Mock network] corda.flow. - Transaction dependencies resolution completed. {fiber-id=10000003, flow-id=71117c04-7f7b-4379-8cfa-4497501c82f3, invocation_id=52206791-0d24-400a-b0fd-a7b097af45d7, invocation_timestamp=2023-01-31T07:45:18.649Z, origin=O=Mock Company 1, L=London, C=GB, session_id=52206791-0d24-400a-b0fd-a7b097af45d7, session_timestamp=2023-01-31T07:45:18.649Z, thread-id=854, tx_id=92B0FAC524A371E30A652D3E724B2CD7A2543A9A3FCB6649D37486F44C0F9635}
[INFO ] 2023-01-31T07:45:18,758Z [Mock network] corda.flow. - Successfully received fully signed tx. Sending it to the vault for processing. {fiber-id=10000003, flow-id=71117c04-7f7b-4379-8cfa-4497501c82f3, invocation_id=52206791-0d24-400a-b0fd-a7b097af45d7, invocation_timestamp=2023-01-31T07:45:18.649Z, origin=O=Mock Company 1, L=London, C=GB, session_id=52206791-0d24-400a-b0fd-a7b097af45d7, session_timestamp=2023-01-31T07:45:18.649Z, thread-id=854, tx_id=92B0FAC524A371E30A652D3E724B2CD7A2543A9A3FCB6649D37486F44C0F9635}
[INFO ] 2023-01-31T07:45:18,770Z [Mock network] corda.flow. - Successfully recorded received transaction locally. {fiber-id=10000003, flow-id=71117c04-7f7b-4379-8cfa-4497501c82f3, invocation_id=52206791-0d24-400a-b0fd-a7b097af45d7, invocation_timestamp=2023-01-31T07:45:18.649Z, origin=O=Mock Company 1, L=London, C=GB, session_id=52206791-0d24-400a-b0fd-a7b097af45d7, session_timestamp=2023-01-31T07:45:18.649Z, thread-id=854, tx_id=92B0FAC524A371E30A652D3E724B2CD7A2543A9A3FCB6649D37486F44C0F9635}
[INFO ] 2023-01-31T07:45:18,817Z [Mock network] corda.flow. - No need to notarise this transaction. {actor_id=Only For Testing, actor_owning_identity=O=Mock Company 2, L=London, C=GB, actor_store_id=TEST, fiber-id=10000004, flow-id=9fd3cf62-d7bd-4e26-a7c5-305a5706bbcd, invocation_id=2eb50c35-a4d6-4630-b0de-135cdf1304fc, invocation_timestamp=2023-01-31T07:45:18.798Z, origin=Only For Testing, session_id=2eb50c35-a4d6-4630-b0de-135cdf1304fc, session_timestamp=2023-01-31T07:45:18.798Z, thread-id=854, tx_id=92319E88247937A40F3DDAD83609907758C58C8A8CF75AE891689E3E2DA64FF2}
[INFO ] 2023-01-31T07:45:18,817Z [Mock network] corda.flow. - Recording transaction locally. {actor_id=Only For Testing, actor_owning_identity=O=Mock Company 2, L=London, C=GB, actor_store_id=TEST, fiber-id=10000004, flow-id=9fd3cf62-d7bd-4e26-a7c5-305a5706bbcd, invocation_id=2eb50c35-a4d6-4630-b0de-135cdf1304fc, invocation_timestamp=2023-01-31T07:45:18.798Z, origin=Only For Testing, session_id=2eb50c35-a4d6-4630-b0de-135cdf1304fc, session_timestamp=2023-01-31T07:45:18.798Z, thread-id=854, tx_id=92319E88247937A40F3DDAD83609907758C58C8A8CF75AE891689E3E2DA64FF2}
[INFO ] 2023-01-31T07:45:18,821Z [Mock network] corda.flow. - Recorded transaction locally successfully. {actor_id=Only For Testing, actor_owning_identity=O=Mock Company 2, L=London, C=GB, actor_store_id=TEST, fiber-id=10000004, flow-id=9fd3cf62-d7bd-4e26-a7c5-305a5706bbcd, invocation_id=2eb50c35-a4d6-4630-b0de-135cdf1304fc, invocation_timestamp=2023-01-31T07:45:18.798Z, origin=Only For Testing, session_id=2eb50c35-a4d6-4630-b0de-135cdf1304fc, session_timestamp=2023-01-31T07:45:18.798Z, thread-id=854, tx_id=92319E88247937A40F3DDAD83609907758C58C8A8CF75AE891689E3E2DA64FF2}
[INFO ] 2023-01-31T07:45:18,821Z [Mock network] corda.flow. - All parties received the transaction successfully. {actor_id=Only For Testing, actor_owning_identity=O=Mock Company 2, L=London, C=GB, actor_store_id=TEST, fiber-id=10000004, flow-id=9fd3cf62-d7bd-4e26-a7c5-305a5706bbcd, invocation_id=2eb50c35-a4d6-4630-b0de-135cdf1304fc, invocation_timestamp=2023-01-31T07:45:18.798Z, origin=Only For Testing, session_id=2eb50c35-a4d6-4630-b0de-135cdf1304fc, session_timestamp=2023-01-31T07:45:18.798Z, thread-id=854, tx_id=92319E88247937A40F3DDAD83609907758C58C8A8CF75AE891689E3E2DA64FF2}
[INFO ] 2023-01-31T07:45:18,847Z [Mock network] corda.flow. - Received transaction acknowledgement request from party O=Mock Company 2, L=London, C=GB. {fiber-id=10000005, flow-id=10ead1e6-0439-47de-a8f2-1b7f13aa20bc, invocation_id=3fa88cb9-1405-4986-9f46-69147c9e3ef4, invocation_timestamp=2023-01-31T07:45:18.836Z, origin=O=Mock Company 2, L=London, C=GB, session_id=3fa88cb9-1405-4986-9f46-69147c9e3ef4, session_timestamp=2023-01-31T07:45:18.836Z, thread-id=854, tx_id=92319E88247937A40F3DDAD83609907758C58C8A8CF75AE891689E3E2DA64FF2}
[INFO ] 2023-01-31T07:45:18,855Z [Mock network] corda.flow. - Transaction dependencies resolution completed. {fiber-id=10000005, flow-id=10ead1e6-0439-47de-a8f2-1b7f13aa20bc, invocation_id=3fa88cb9-1405-4986-9f46-69147c9e3ef4, invocation_timestamp=2023-01-31T07:45:18.836Z, origin=O=Mock Company 2, L=London, C=GB, session_id=3fa88cb9-1405-4986-9f46-69147c9e3ef4, session_timestamp=2023-01-31T07:45:18.836Z, thread-id=854, tx_id=92319E88247937A40F3DDAD83609907758C58C8A8CF75AE891689E3E2DA64FF2}
[INFO ] 2023-01-31T07:45:18,858Z [Mock network] corda.flow. - Successfully received fully signed tx. Sending it to the vault for processing. {fiber-id=10000005, flow-id=10ead1e6-0439-47de-a8f2-1b7f13aa20bc, invocation_id=3fa88cb9-1405-4986-9f46-69147c9e3ef4, invocation_timestamp=2023-01-31T07:45:18.836Z, origin=O=Mock Company 2, L=London, C=GB, session_id=3fa88cb9-1405-4986-9f46-69147c9e3ef4, session_timestamp=2023-01-31T07:45:18.836Z, thread-id=854, tx_id=92319E88247937A40F3DDAD83609907758C58C8A8CF75AE891689E3E2DA64FF2}
[INFO ] 2023-01-31T07:45:19,040Z [Mock network] corda.flow. - Successfully recorded received transaction locally. {fiber-id=10000005, flow-id=10ead1e6-0439-47de-a8f2-1b7f13aa20bc, invocation_id=3fa88cb9-1405-4986-9f46-69147c9e3ef4, invocation_timestamp=2023-01-31T07:45:18.836Z, origin=O=Mock Company 2, L=London, C=GB, session_id=3fa88cb9-1405-4986-9f46-69147c9e3ef4, session_timestamp=2023-01-31T07:45:18.836Z, thread-id=854, tx_id=92319E88247937A40F3DDAD83609907758C58C8A8CF75AE891689E3E2DA64FF2}
[INFO ] 2023-01-31T07:45:19,081Z [Mock network] corda.flow. - Received transaction acknowledgement request from party O=Mock Company 2, L=London, C=GB. {fiber-id=10000006, flow-id=c185c8be-a02b-4836-8500-59e1687f60fd, invocation_id=6156b390-9f48-45a8-a6e4-92702285edfa, invocation_timestamp=2023-01-31T07:45:19.067Z, origin=O=Mock Company 2, L=London, C=GB, session_id=6156b390-9f48-45a8-a6e4-92702285edfa, session_timestamp=2023-01-31T07:45:19.067Z, thread-id=854, tx_id=92319E88247937A40F3DDAD83609907758C58C8A8CF75AE891689E3E2DA64FF2}
[INFO ] 2023-01-31T07:45:19,086Z [Mock network] corda.flow. - Transaction dependencies resolution completed. {fiber-id=10000006, flow-id=c185c8be-a02b-4836-8500-59e1687f60fd, invocation_id=6156b390-9f48-45a8-a6e4-92702285edfa, invocation_timestamp=2023-01-31T07:45:19.067Z, origin=O=Mock Company 2, L=London, C=GB, session_id=6156b390-9f48-45a8-a6e4-92702285edfa, session_timestamp=2023-01-31T07:45:19.067Z, thread-id=854, tx_id=92319E88247937A40F3DDAD83609907758C58C8A8CF75AE891689E3E2DA64FF2}
[INFO ] 2023-01-31T07:45:19,090Z [Mock network] corda.flow. - Successfully received fully signed tx. Sending it to the vault for processing. {fiber-id=10000006, flow-id=c185c8be-a02b-4836-8500-59e1687f60fd, invocation_id=6156b390-9f48-45a8-a6e4-92702285edfa, invocation_timestamp=2023-01-31T07:45:19.067Z, origin=O=Mock Company 2, L=London, C=GB, session_id=6156b390-9f48-45a8-a6e4-92702285edfa, session_timestamp=2023-01-31T07:45:19.067Z, thread-id=854, tx_id=92319E88247937A40F3DDAD83609907758C58C8A8CF75AE891689E3E2DA64FF2}
[INFO ] 2023-01-31T07:45:19,095Z [Mock network] corda.flow. - Successfully recorded received transaction locally. {fiber-id=10000006, flow-id=c185c8be-a02b-4836-8500-59e1687f60fd, invocation_id=6156b390-9f48-45a8-a6e4-92702285edfa, invocation_timestamp=2023-01-31T07:45:19.067Z, origin=O=Mock Company 2, L=London, C=GB, session_id=6156b390-9f48-45a8-a6e4-92702285edfa, session_timestamp=2023-01-31T07:45:19.067Z, thread-id=854, tx_id=92319E88247937A40F3DDAD83609907758C58C8A8CF75AE891689E3E2DA64FF2}
[INFO ] 2023-01-31T07:45:19,130Z [Mock network] corda.flow. - No need to notarise this transaction. {actor_id=Only For Testing, actor_owning_identity=O=Mock Company 3, L=London, C=GB, actor_store_id=TEST, fiber-id=10000007, flow-id=eed9a4f3-48d5-46d2-afeb-9307be835d70, invocation_id=96806a95-f073-448c-b8b7-eba79d390bcf, invocation_timestamp=2023-01-31T07:45:19.114Z, origin=Only For Testing, session_id=96806a95-f073-448c-b8b7-eba79d390bcf, session_timestamp=2023-01-31T07:45:19.114Z, thread-id=854, tx_id=92ADFAA470A90E348651B6110BF161144321BD456AA158129BF66AB23B35C50B}
[INFO ] 2023-01-31T07:45:19,130Z [Mock network] corda.flow. - Recording transaction locally. {actor_id=Only For Testing, actor_owning_identity=O=Mock Company 3, L=London, C=GB, actor_store_id=TEST, fiber-id=10000007, flow-id=eed9a4f3-48d5-46d2-afeb-9307be835d70, invocation_id=96806a95-f073-448c-b8b7-eba79d390bcf, invocation_timestamp=2023-01-31T07:45:19.114Z, origin=Only For Testing, session_id=96806a95-f073-448c-b8b7-eba79d390bcf, session_timestamp=2023-01-31T07:45:19.114Z, thread-id=854, tx_id=92ADFAA470A90E348651B6110BF161144321BD456AA158129BF66AB23B35C50B}
[INFO ] 2023-01-31T07:45:19,132Z [Mock network] corda.flow. - Recorded transaction locally successfully. {actor_id=Only For Testing, actor_owning_identity=O=Mock Company 3, L=London, C=GB, actor_store_id=TEST, fiber-id=10000007, flow-id=eed9a4f3-48d5-46d2-afeb-9307be835d70, invocation_id=96806a95-f073-448c-b8b7-eba79d390bcf, invocation_timestamp=2023-01-31T07:45:19.114Z, origin=Only For Testing, session_id=96806a95-f073-448c-b8b7-eba79d390bcf, session_timestamp=2023-01-31T07:45:19.114Z, thread-id=854, tx_id=92ADFAA470A90E348651B6110BF161144321BD456AA158129BF66AB23B35C50B}
[INFO ] 2023-01-31T07:45:19,132Z [Mock network] corda.flow. - All parties received the transaction successfully. {actor_id=Only For Testing, actor_owning_identity=O=Mock Company 3, L=London, C=GB, actor_store_id=TEST, fiber-id=10000007, flow-id=eed9a4f3-48d5-46d2-afeb-9307be835d70, invocation_id=96806a95-f073-448c-b8b7-eba79d390bcf, invocation_timestamp=2023-01-31T07:45:19.114Z, origin=Only For Testing, session_id=96806a95-f073-448c-b8b7-eba79d390bcf, session_timestamp=2023-01-31T07:45:19.114Z, thread-id=854, tx_id=92ADFAA470A90E348651B6110BF161144321BD456AA158129BF66AB23B35C50B}
[INFO ] 2023-01-31T07:45:19,155Z [Mock network] corda.flow. - Received transaction acknowledgement request from party O=Mock Company 3, L=London, C=GB. {fiber-id=10000008, flow-id=f44b083c-d08e-47cd-8f19-6d65b09c3410, invocation_id=c05e9df1-ced9-4fb9-9972-9dec8f7dc741, invocation_timestamp=2023-01-31T07:45:19.146Z, origin=O=Mock Company 3, L=London, C=GB, session_id=c05e9df1-ced9-4fb9-9972-9dec8f7dc741, session_timestamp=2023-01-31T07:45:19.146Z, thread-id=854, tx_id=92ADFAA470A90E348651B6110BF161144321BD456AA158129BF66AB23B35C50B}
[INFO ] 2023-01-31T07:45:19,164Z [Mock network] corda.flow. - Transaction dependencies resolution completed. {fiber-id=10000008, flow-id=f44b083c-d08e-47cd-8f19-6d65b09c3410, invocation_id=c05e9df1-ced9-4fb9-9972-9dec8f7dc741, invocation_timestamp=2023-01-31T07:45:19.146Z, origin=O=Mock Company 3, L=London, C=GB, session_id=c05e9df1-ced9-4fb9-9972-9dec8f7dc741, session_timestamp=2023-01-31T07:45:19.146Z, thread-id=854, tx_id=92ADFAA470A90E348651B6110BF161144321BD456AA158129BF66AB23B35C50B}
[INFO ] 2023-01-31T07:45:19,168Z [Mock network] corda.flow. - Successfully received fully signed tx. Sending it to the vault for processing. {fiber-id=10000008, flow-id=f44b083c-d08e-47cd-8f19-6d65b09c3410, invocation_id=c05e9df1-ced9-4fb9-9972-9dec8f7dc741, invocation_timestamp=2023-01-31T07:45:19.146Z, origin=O=Mock Company 3, L=London, C=GB, session_id=c05e9df1-ced9-4fb9-9972-9dec8f7dc741, session_timestamp=2023-01-31T07:45:19.146Z, thread-id=854, tx_id=92ADFAA470A90E348651B6110BF161144321BD456AA158129BF66AB23B35C50B}
[INFO ] 2023-01-31T07:45:19,174Z [Mock network] corda.flow. - Successfully recorded received transaction locally. {fiber-id=10000008, flow-id=f44b083c-d08e-47cd-8f19-6d65b09c3410, invocation_id=c05e9df1-ced9-4fb9-9972-9dec8f7dc741, invocation_timestamp=2023-01-31T07:45:19.146Z, origin=O=Mock Company 3, L=London, C=GB, session_id=c05e9df1-ced9-4fb9-9972-9dec8f7dc741, session_timestamp=2023-01-31T07:45:19.146Z, thread-id=854, tx_id=92ADFAA470A90E348651B6110BF161144321BD456AA158129BF66AB23B35C50B}
[INFO ] 2023-01-31T07:45:19,209Z [Mock network] corda.flow. - Received transaction acknowledgement request from party O=Mock Company 3, L=London, C=GB. {fiber-id=10000009, flow-id=c805153e-2f6d-4e31-9c18-fbb7c0c9b273, invocation_id=71669ba5-93e3-4d9d-a0b4-27cd552a94df, invocation_timestamp=2023-01-31T07:45:19.199Z, origin=O=Mock Company 3, L=London, C=GB, session_id=71669ba5-93e3-4d9d-a0b4-27cd552a94df, session_timestamp=2023-01-31T07:45:19.199Z, thread-id=854, tx_id=92ADFAA470A90E348651B6110BF161144321BD456AA158129BF66AB23B35C50B}
[INFO ] 2023-01-31T07:45:19,215Z [Mock network] corda.flow. - Transaction dependencies resolution completed. {fiber-id=10000009, flow-id=c805153e-2f6d-4e31-9c18-fbb7c0c9b273, invocation_id=71669ba5-93e3-4d9d-a0b4-27cd552a94df, invocation_timestamp=2023-01-31T07:45:19.199Z, origin=O=Mock Company 3, L=London, C=GB, session_id=71669ba5-93e3-4d9d-a0b4-27cd552a94df, session_timestamp=2023-01-31T07:45:19.199Z, thread-id=854, tx_id=92ADFAA470A90E348651B6110BF161144321BD456AA158129BF66AB23B35C50B}
[INFO ] 2023-01-31T07:45:19,219Z [Mock network] corda.flow. - Successfully received fully signed tx. Sending it to the vault for processing. {fiber-id=10000009, flow-id=c805153e-2f6d-4e31-9c18-fbb7c0c9b273, invocation_id=71669ba5-93e3-4d9d-a0b4-27cd552a94df, invocation_timestamp=2023-01-31T07:45:19.199Z, origin=O=Mock Company 3, L=London, C=GB, session_id=71669ba5-93e3-4d9d-a0b4-27cd552a94df, session_timestamp=2023-01-31T07:45:19.199Z, thread-id=854, tx_id=92ADFAA470A90E348651B6110BF161144321BD456AA158129BF66AB23B35C50B}
[INFO ] 2023-01-31T07:45:19,223Z [Mock network] corda.flow. - Successfully recorded received transaction locally. {fiber-id=10000009, flow-id=c805153e-2f6d-4e31-9c18-fbb7c0c9b273, invocation_id=71669ba5-93e3-4d9d-a0b4-27cd552a94df, invocation_timestamp=2023-01-31T07:45:19.199Z, origin=O=Mock Company 3, L=London, C=GB, session_id=71669ba5-93e3-4d9d-a0b4-27cd552a94df, session_timestamp=2023-01-31T07:45:19.199Z, thread-id=854, tx_id=92ADFAA470A90E348651B6110BF161144321BD456AA158129BF66AB23B35C50B}
[INFO ] 2023-01-31T07:45:19,267Z [Mock network] identity.PersistentIdentityService. - Linking: 3C6C9904A217E17EEF6B80B885CE0DA7517C41686128C8F0CA56AB677EBDB70F to O=Mock Company 1, L=London, C=GB {actor_id=Only For Testing, actor_owning_identity=O=Mock Company 1, L=London, C=GB, actor_store_id=TEST, fiber-id=10000011, flow-id=6ba721d7-44b1-4ac4-bd28-fe4f772f149d, invocation_id=f5b8c0c4-bfc7-40bb-bdf0-49ca90205898, invocation_timestamp=2023-01-31T07:45:19.255Z, origin=Only For Testing, session_id=f5b8c0c4-bfc7-40bb-bdf0-49ca90205898, session_timestamp=2023-01-31T07:45:19.255Z, thread-id=854}
[INFO ] 2023-01-31T07:45:19,345Z [Mock network] identity.PersistentIdentityService. - Linking: 15F78D29D3F8D7D325FD8824E3C95F196D723062F9A37E39EEABD41D35F77CF1 to O=Mock Company 2, L=London, C=GB {fiber-id=10000012, flow-id=93a4db64-085a-4975-b5f6-22374276dfa6, invocation_id=e6447d6e-3394-4b89-a2bf-5616c4a74c3e, invocation_timestamp=2023-01-31T07:45:19.280Z, origin=O=Mock Company 1, L=London, C=GB, session_id=e6447d6e-3394-4b89-a2bf-5616c4a74c3e, session_timestamp=2023-01-31T07:45:19.280Z, thread-id=854}
[INFO ] 2023-01-31T07:45:19,369Z [Mock network] identity.PersistentIdentityService. - Linking: 15F78D29D3F8D7D325FD8824E3C95F196D723062F9A37E39EEABD41D35F77CF1 to O=Mock Company 2, L=London, C=GB {actor_id=Only For Testing, actor_owning_identity=O=Mock Company 1, L=London, C=GB, actor_store_id=TEST, fiber-id=10000011, flow-id=6ba721d7-44b1-4ac4-bd28-fe4f772f149d, invocation_id=f5b8c0c4-bfc7-40bb-bdf0-49ca90205898, invocation_timestamp=2023-01-31T07:45:19.255Z, origin=Only For Testing, session_id=f5b8c0c4-bfc7-40bb-bdf0-49ca90205898, session_timestamp=2023-01-31T07:45:19.255Z, thread-id=854}
[INFO ] 2023-01-31T07:45:19,478Z [Mock network] corda.flow. - Received transaction acknowledgement request from party O=Mock Company 1, L=London, C=GB. {fiber-id=10000013, flow-id=4d62f693-1483-4b81-9187-cc3c1684e659, invocation_id=dd09bfcd-9f74-4173-88f0-6118d085de95, invocation_timestamp=2023-01-31T07:45:19.461Z, origin=O=Mock Company 1, L=London, C=GB, session_id=dd09bfcd-9f74-4173-88f0-6118d085de95, session_timestamp=2023-01-31T07:45:19.461Z, thread-id=854, tx_id=8D455EFD4BAEEA8CE3423D82E5BF4D16F66769A6617C049BA8A8AF2BD6DC50FE}
[INFO ] 2023-01-31T07:45:19,485Z [Mock network] corda.flow. - Transaction dependencies resolution completed. {fiber-id=10000013, flow-id=4d62f693-1483-4b81-9187-cc3c1684e659, invocation_id=dd09bfcd-9f74-4173-88f0-6118d085de95, invocation_timestamp=2023-01-31T07:45:19.461Z, origin=O=Mock Company 1, L=London, C=GB, session_id=dd09bfcd-9f74-4173-88f0-6118d085de95, session_timestamp=2023-01-31T07:45:19.461Z, thread-id=854, tx_id=8D455EFD4BAEEA8CE3423D82E5BF4D16F66769A6617C049BA8A8AF2BD6DC50FE}
[INFO ] 2023-01-31T07:45:19,553Z [Mock network] corda.flow. - No need to notarise this transaction. {actor_id=Only For Testing, actor_owning_identity=O=Mock Company 1, L=London, C=GB, actor_store_id=TEST, fiber-id=10000011, flow-id=6ba721d7-44b1-4ac4-bd28-fe4f772f149d, invocation_id=f5b8c0c4-bfc7-40bb-bdf0-49ca90205898, invocation_timestamp=2023-01-31T07:45:19.255Z, origin=Only For Testing, session_id=f5b8c0c4-bfc7-40bb-bdf0-49ca90205898, session_timestamp=2023-01-31T07:45:19.255Z, thread-id=854, tx_id=8D455EFD4BAEEA8CE3423D82E5BF4D16F66769A6617C049BA8A8AF2BD6DC50FE}
[INFO ] 2023-01-31T07:45:19,553Z [Mock network] corda.flow. - Recording transaction locally. {actor_id=Only For Testing, actor_owning_identity=O=Mock Company 1, L=London, C=GB, actor_store_id=TEST, fiber-id=10000011, flow-id=6ba721d7-44b1-4ac4-bd28-fe4f772f149d, invocation_id=f5b8c0c4-bfc7-40bb-bdf0-49ca90205898, invocation_timestamp=2023-01-31T07:45:19.255Z, origin=Only For Testing, session_id=f5b8c0c4-bfc7-40bb-bdf0-49ca90205898, session_timestamp=2023-01-31T07:45:19.255Z, thread-id=854, tx_id=8D455EFD4BAEEA8CE3423D82E5BF4D16F66769A6617C049BA8A8AF2BD6DC50FE}
[INFO ] 2023-01-31T07:45:19,556Z [Mock network] corda.flow. - Recorded transaction locally successfully. {actor_id=Only For Testing, actor_owning_identity=O=Mock Company 1, L=London, C=GB, actor_store_id=TEST, fiber-id=10000011, flow-id=6ba721d7-44b1-4ac4-bd28-fe4f772f149d, invocation_id=f5b8c0c4-bfc7-40bb-bdf0-49ca90205898, invocation_timestamp=2023-01-31T07:45:19.255Z, origin=Only For Testing, session_id=f5b8c0c4-bfc7-40bb-bdf0-49ca90205898, session_timestamp=2023-01-31T07:45:19.255Z, thread-id=854, tx_id=8D455EFD4BAEEA8CE3423D82E5BF4D16F66769A6617C049BA8A8AF2BD6DC50FE}
[INFO ] 2023-01-31T07:45:19,574Z [Mock network] corda.flow. - Received transaction acknowledgement request from party O=Mock Company 1, L=London, C=GB. {fiber-id=10000013, flow-id=4d62f693-1483-4b81-9187-cc3c1684e659, invocation_id=dd09bfcd-9f74-4173-88f0-6118d085de95, invocation_timestamp=2023-01-31T07:45:19.461Z, origin=O=Mock Company 1, L=London, C=GB, session_id=dd09bfcd-9f74-4173-88f0-6118d085de95, session_timestamp=2023-01-31T07:45:19.461Z, thread-id=854, tx_id=8D455EFD4BAEEA8CE3423D82E5BF4D16F66769A6617C049BA8A8AF2BD6DC50FE}
[INFO ] 2023-01-31T07:45:19,579Z [Mock network] corda.flow. - Transaction dependencies resolution completed. {fiber-id=10000013, flow-id=4d62f693-1483-4b81-9187-cc3c1684e659, invocation_id=dd09bfcd-9f74-4173-88f0-6118d085de95, invocation_timestamp=2023-01-31T07:45:19.461Z, origin=O=Mock Company 1, L=London, C=GB, session_id=dd09bfcd-9f74-4173-88f0-6118d085de95, session_timestamp=2023-01-31T07:45:19.461Z, thread-id=854, tx_id=8D455EFD4BAEEA8CE3423D82E5BF4D16F66769A6617C049BA8A8AF2BD6DC50FE}
[INFO ] 2023-01-31T07:45:19,582Z [Mock network] corda.flow. - Successfully received fully signed tx. Sending it to the vault for processing. {fiber-id=10000013, flow-id=4d62f693-1483-4b81-9187-cc3c1684e659, invocation_id=dd09bfcd-9f74-4173-88f0-6118d085de95, invocation_timestamp=2023-01-31T07:45:19.461Z, origin=O=Mock Company 1, L=London, C=GB, session_id=dd09bfcd-9f74-4173-88f0-6118d085de95, session_timestamp=2023-01-31T07:45:19.461Z, thread-id=854, tx_id=8D455EFD4BAEEA8CE3423D82E5BF4D16F66769A6617C049BA8A8AF2BD6DC50FE}
[INFO ] 2023-01-31T07:45:19,587Z [Mock network] corda.flow. - Successfully recorded received transaction locally. {fiber-id=10000013, flow-id=4d62f693-1483-4b81-9187-cc3c1684e659, invocation_id=dd09bfcd-9f74-4173-88f0-6118d085de95, invocation_timestamp=2023-01-31T07:45:19.461Z, origin=O=Mock Company 1, L=London, C=GB, session_id=dd09bfcd-9f74-4173-88f0-6118d085de95, session_timestamp=2023-01-31T07:45:19.461Z, thread-id=854, tx_id=8D455EFD4BAEEA8CE3423D82E5BF4D16F66769A6617C049BA8A8AF2BD6DC50FE}
[WARN ] 2023-01-31T07:45:19,589Z [Mock network] persistence.AbstractPartyToX500NameAsStringConverter. - Identity service unable to resolve AbstractParty: Anonymous(DL54sWN1ep5VDx9uLAPXdYArwasAYtVEJ4mEvkgYBJbvD4) {actor_id=Only For Testing, actor_owning_identity=O=Mock Company 1, L=London, C=GB, actor_store_id=TEST, fiber-id=10000013, flow-id=4d62f693-1483-4b81-9187-cc3c1684e659, invocation_id=dd09bfcd-9f74-4173-88f0-6118d085de95, invocation_timestamp=2023-01-31T07:45:19.461Z, origin=O=Mock Company 1, L=London, C=GB, session_id=dd09bfcd-9f74-4173-88f0-6118d085de95, session_timestamp=2023-01-31T07:45:19.461Z, thread-id=854}
[INFO ] 2023-01-31T07:45:19,593Z [Mock network] corda.flow. - Party O=Mock Company 2, L=London, C=GB received the transaction. {actor_id=Only For Testing, actor_owning_identity=O=Mock Company 1, L=London, C=GB, actor_store_id=TEST, fiber-id=10000011, flow-id=6ba721d7-44b1-4ac4-bd28-fe4f772f149d, invocation_id=f5b8c0c4-bfc7-40bb-bdf0-49ca90205898, invocation_timestamp=2023-01-31T07:45:19.255Z, origin=Only For Testing, session_id=f5b8c0c4-bfc7-40bb-bdf0-49ca90205898, session_timestamp=2023-01-31T07:45:19.255Z, thread-id=854, tx_id=8D455EFD4BAEEA8CE3423D82E5BF4D16F66769A6617C049BA8A8AF2BD6DC50FE}
[INFO ] 2023-01-31T07:45:19,593Z [Mock network] corda.flow. - All parties received the transaction successfully. {actor_id=Only For Testing, actor_owning_identity=O=Mock Company 1, L=London, C=GB, actor_store_id=TEST, fiber-id=10000011, flow-id=6ba721d7-44b1-4ac4-bd28-fe4f772f149d, invocation_id=f5b8c0c4-bfc7-40bb-bdf0-49ca90205898, invocation_timestamp=2023-01-31T07:45:19.255Z, origin=Only For Testing, session_id=f5b8c0c4-bfc7-40bb-bdf0-49ca90205898, session_timestamp=2023-01-31T07:45:19.255Z, thread-id=854, tx_id=8D455EFD4BAEEA8CE3423D82E5BF4D16F66769A6617C049BA8A8AF2BD6DC50FE}
[INFO ] 2023-01-31T07:45:19,637Z [Mock network] corda.flow. - Received transaction acknowledgement request from party O=Mock Company 1, L=London, C=GB. {fiber-id=10000014, flow-id=5c37899b-c464-43d2-b592-2a9e508cb6e9, invocation_id=149c50cf-719b-4e31-9c2d-0110fd80fe98, invocation_timestamp=2023-01-31T07:45:19.620Z, origin=O=Mock Company 1, L=London, C=GB, session_id=149c50cf-719b-4e31-9c2d-0110fd80fe98, session_timestamp=2023-01-31T07:45:19.620Z, thread-id=854, tx_id=92319E88247937A40F3DDAD83609907758C58C8A8CF75AE891689E3E2DA64FF2}
[INFO ] 2023-01-31T07:45:19,642Z [Mock network] corda.flow. - Transaction dependencies resolution completed. {fiber-id=10000014, flow-id=5c37899b-c464-43d2-b592-2a9e508cb6e9, invocation_id=149c50cf-719b-4e31-9c2d-0110fd80fe98, invocation_timestamp=2023-01-31T07:45:19.620Z, origin=O=Mock Company 1, L=London, C=GB, session_id=149c50cf-719b-4e31-9c2d-0110fd80fe98, session_timestamp=2023-01-31T07:45:19.620Z, thread-id=854, tx_id=92319E88247937A40F3DDAD83609907758C58C8A8CF75AE891689E3E2DA64FF2}
[INFO ] 2023-01-31T07:45:19,645Z [Mock network] corda.flow. - Successfully received fully signed tx. Sending it to the vault for processing. {fiber-id=10000014, flow-id=5c37899b-c464-43d2-b592-2a9e508cb6e9, invocation_id=149c50cf-719b-4e31-9c2d-0110fd80fe98, invocation_timestamp=2023-01-31T07:45:19.620Z, origin=O=Mock Company 1, L=London, C=GB, session_id=149c50cf-719b-4e31-9c2d-0110fd80fe98, session_timestamp=2023-01-31T07:45:19.620Z, thread-id=854, tx_id=92319E88247937A40F3DDAD83609907758C58C8A8CF75AE891689E3E2DA64FF2}
[INFO ] 2023-01-31T07:45:19,648Z [Mock network] corda.flow. - Successfully recorded received transaction locally. {fiber-id=10000014, flow-id=5c37899b-c464-43d2-b592-2a9e508cb6e9, invocation_id=149c50cf-719b-4e31-9c2d-0110fd80fe98, invocation_timestamp=2023-01-31T07:45:19.620Z, origin=O=Mock Company 1, L=London, C=GB, session_id=149c50cf-719b-4e31-9c2d-0110fd80fe98, session_timestamp=2023-01-31T07:45:19.620Z, thread-id=854, tx_id=92319E88247937A40F3DDAD83609907758C58C8A8CF75AE891689E3E2DA64FF2}
[INFO ] 2023-01-31T07:45:19,668Z [Mock network] identity.PersistentIdentityService. - An existing entry for DL2UkVrCTM9evm1222WcVbGoBuvieoR25dVWBr8oMqVUdW already exists. {fiber-id=10000014, flow-id=5c37899b-c464-43d2-b592-2a9e508cb6e9, invocation_id=149c50cf-719b-4e31-9c2d-0110fd80fe98, invocation_timestamp=2023-01-31T07:45:19.620Z, origin=O=Mock Company 1, L=London, C=GB, session_id=149c50cf-719b-4e31-9c2d-0110fd80fe98, session_timestamp=2023-01-31T07:45:19.620Z, thread-id=854, tx_id=92319E88247937A40F3DDAD83609907758C58C8A8CF75AE891689E3E2DA64FF2}
[INFO ] 2023-01-31T07:45:19,674Z [Mock network] corda.flow. - Received transaction acknowledgement request from party O=Mock Company 1, L=London, C=GB. {fiber-id=10000014, flow-id=5c37899b-c464-43d2-b592-2a9e508cb6e9, invocation_id=149c50cf-719b-4e31-9c2d-0110fd80fe98, invocation_timestamp=2023-01-31T07:45:19.620Z, origin=O=Mock Company 1, L=London, C=GB, session_id=149c50cf-719b-4e31-9c2d-0110fd80fe98, session_timestamp=2023-01-31T07:45:19.620Z, thread-id=854, tx_id=92B0FAC524A371E30A652D3E724B2CD7A2543A9A3FCB6649D37486F44C0F9635}
[INFO ] 2023-01-31T07:45:19,681Z [Mock network] corda.flow. - Transaction dependencies resolution completed. {fiber-id=10000014, flow-id=5c37899b-c464-43d2-b592-2a9e508cb6e9, invocation_id=149c50cf-719b-4e31-9c2d-0110fd80fe98, invocation_timestamp=2023-01-31T07:45:19.620Z, origin=O=Mock Company 1, L=London, C=GB, session_id=149c50cf-719b-4e31-9c2d-0110fd80fe98, session_timestamp=2023-01-31T07:45:19.620Z, thread-id=854, tx_id=92B0FAC524A371E30A652D3E724B2CD7A2543A9A3FCB6649D37486F44C0F9635}
[INFO ] 2023-01-31T07:45:19,683Z [Mock network] corda.flow. - Successfully received fully signed tx. Sending it to the vault for processing. {fiber-id=10000014, flow-id=5c37899b-c464-43d2-b592-2a9e508cb6e9, invocation_id=149c50cf-719b-4e31-9c2d-0110fd80fe98, invocation_timestamp=2023-01-31T07:45:19.620Z, origin=O=Mock Company 1, L=London, C=GB, session_id=149c50cf-719b-4e31-9c2d-0110fd80fe98, session_timestamp=2023-01-31T07:45:19.620Z, thread-id=854, tx_id=92B0FAC524A371E30A652D3E724B2CD7A2543A9A3FCB6649D37486F44C0F9635}
[INFO ] 2023-01-31T07:45:19,686Z [Mock network] corda.flow. - Successfully recorded received transaction locally. {fiber-id=10000014, flow-id=5c37899b-c464-43d2-b592-2a9e508cb6e9, invocation_id=149c50cf-719b-4e31-9c2d-0110fd80fe98, invocation_timestamp=2023-01-31T07:45:19.620Z, origin=O=Mock Company 1, L=London, C=GB, session_id=149c50cf-719b-4e31-9c2d-0110fd80fe98, session_timestamp=2023-01-31T07:45:19.620Z, thread-id=854, tx_id=92B0FAC524A371E30A652D3E724B2CD7A2543A9A3FCB6649D37486F44C0F9635}
[INFO ] 2023-01-31T07:45:19,706Z [Mock network] identity.PersistentIdentityService. - Linking: 3C6C9904A217E17EEF6B80B885CE0DA7517C41686128C8F0CA56AB677EBDB70F to O=Mock Company 1, L=London, C=GB {fiber-id=10000014, flow-id=5c37899b-c464-43d2-b592-2a9e508cb6e9, invocation_id=149c50cf-719b-4e31-9c2d-0110fd80fe98, invocation_timestamp=2023-01-31T07:45:19.620Z, origin=O=Mock Company 1, L=London, C=GB, session_id=149c50cf-719b-4e31-9c2d-0110fd80fe98, session_timestamp=2023-01-31T07:45:19.620Z, thread-id=854, tx_id=92B0FAC524A371E30A652D3E724B2CD7A2543A9A3FCB6649D37486F44C0F9635}
[INFO ] 2023-01-31T07:45:19,713Z [Mock network] corda.flow. - Received transaction acknowledgement request from party O=Mock Company 1, L=London, C=GB. {fiber-id=10000014, flow-id=5c37899b-c464-43d2-b592-2a9e508cb6e9, invocation_id=149c50cf-719b-4e31-9c2d-0110fd80fe98, invocation_timestamp=2023-01-31T07:45:19.620Z, origin=O=Mock Company 1, L=London, C=GB, session_id=149c50cf-719b-4e31-9c2d-0110fd80fe98, session_timestamp=2023-01-31T07:45:19.620Z, thread-id=854, tx_id=8D455EFD4BAEEA8CE3423D82E5BF4D16F66769A6617C049BA8A8AF2BD6DC50FE}
[INFO ] 2023-01-31T07:45:19,718Z [Mock network] corda.flow. - Transaction dependencies resolution completed. {fiber-id=10000014, flow-id=5c37899b-c464-43d2-b592-2a9e508cb6e9, invocation_id=149c50cf-719b-4e31-9c2d-0110fd80fe98, invocation_timestamp=2023-01-31T07:45:19.620Z, origin=O=Mock Company 1, L=London, C=GB, session_id=149c50cf-719b-4e31-9c2d-0110fd80fe98, session_timestamp=2023-01-31T07:45:19.620Z, thread-id=854, tx_id=8D455EFD4BAEEA8CE3423D82E5BF4D16F66769A6617C049BA8A8AF2BD6DC50FE}
[INFO ] 2023-01-31T07:45:19,722Z [Mock network] corda.flow. - Successfully received fully signed tx. Sending it to the vault for processing. {fiber-id=10000014, flow-id=5c37899b-c464-43d2-b592-2a9e508cb6e9, invocation_id=149c50cf-719b-4e31-9c2d-0110fd80fe98, invocation_timestamp=2023-01-31T07:45:19.620Z, origin=O=Mock Company 1, L=London, C=GB, session_id=149c50cf-719b-4e31-9c2d-0110fd80fe98, session_timestamp=2023-01-31T07:45:19.620Z, thread-id=854, tx_id=8D455EFD4BAEEA8CE3423D82E5BF4D16F66769A6617C049BA8A8AF2BD6DC50FE}
[INFO ] 2023-01-31T07:45:19,726Z [Mock network] corda.flow. - Successfully recorded received transaction locally. {fiber-id=10000014, flow-id=5c37899b-c464-43d2-b592-2a9e508cb6e9, invocation_id=149c50cf-719b-4e31-9c2d-0110fd80fe98, invocation_timestamp=2023-01-31T07:45:19.620Z, origin=O=Mock Company 1, L=London, C=GB, session_id=149c50cf-719b-4e31-9c2d-0110fd80fe98, session_timestamp=2023-01-31T07:45:19.620Z, thread-id=854, tx_id=8D455EFD4BAEEA8CE3423D82E5BF4D16F66769A6617C049BA8A8AF2BD6DC50FE}
[INFO ] 2023-01-31T07:45:19,813Z [Mock network] identity.PersistentIdentityService. - Linking: B9C6D30127421B2D705B675E60881F5E254C78FE6CE61980D8F0AECF4FF69B97 to O=Mock Company 1, L=London, C=GB {fiber-id=10000017, flow-id=be8777ab-63ae-442a-aae9-e4fa9d1facae, invocation_id=46d110e7-cdf9-4373-9dce-6008545f056f, invocation_timestamp=2023-01-31T07:45:19.785Z, origin=O=Mock Company 2, L=London, C=GB, session_id=46d110e7-cdf9-4373-9dce-6008545f056f, session_timestamp=2023-01-31T07:45:19.785Z, thread-id=854}
[INFO ] 2023-01-31T07:45:19,825Z [Mock network] identity.PersistentIdentityService. - Linking: B9C6D30127421B2D705B675E60881F5E254C78FE6CE61980D8F0AECF4FF69B97 to O=Mock Company 1, L=London, C=GB {actor_id=Only For Testing, actor_owning_identity=O=Mock Company 2, L=London, C=GB, actor_store_id=TEST, fiber-id=10000016, flow-id=d5f7a232-89f7-4f15-9d30-1721de6ea27d, invocation_id=5771fe89-7b08-4d09-9e35-af175fdf6be2, invocation_timestamp=2023-01-31T07:45:19.761Z, origin=Only For Testing, session_id=5771fe89-7b08-4d09-9e35-af175fdf6be2, session_timestamp=2023-01-31T07:45:19.761Z, thread-id=854}
[INFO ] 2023-01-31T07:45:19,830Z [Mock network] identity.PersistentIdentityService. - Linking: 60AE9BE85992E6459CC84AE0BF349AD339702AAA353EFBDB9F26837713652323 to O=Mock Company 2, L=London, C=GB {actor_id=Only For Testing, actor_owning_identity=O=Mock Company 2, L=London, C=GB, actor_store_id=TEST, fiber-id=10000016, flow-id=d5f7a232-89f7-4f15-9d30-1721de6ea27d, invocation_id=5771fe89-7b08-4d09-9e35-af175fdf6be2, invocation_timestamp=2023-01-31T07:45:19.761Z, origin=Only For Testing, session_id=5771fe89-7b08-4d09-9e35-af175fdf6be2, session_timestamp=2023-01-31T07:45:19.761Z, thread-id=854}
[INFO ] 2023-01-31T07:45:19,871Z [Mock network] identity.PersistentIdentityService. - Linking: 528D2B10FB2271BA5213D356018A398C8FC4092004FE46F3E1B28AFA26395FA2 to O=Mock Company 3, L=London, C=GB {fiber-id=10000018, flow-id=98bbc87e-8d61-472f-99d4-cdd77c102ddb, invocation_id=694c7d3f-94c7-42ad-955b-14be3b6f1ca0, invocation_timestamp=2023-01-31T07:45:19.839Z, origin=O=Mock Company 2, L=London, C=GB, session_id=694c7d3f-94c7-42ad-955b-14be3b6f1ca0, session_timestamp=2023-01-31T07:45:19.839Z, thread-id=854}
[INFO ] 2023-01-31T07:45:19,885Z [Mock network] identity.PersistentIdentityService. - Linking: 528D2B10FB2271BA5213D356018A398C8FC4092004FE46F3E1B28AFA26395FA2 to O=Mock Company 3, L=London, C=GB {actor_id=Only For Testing, actor_owning_identity=O=Mock Company 2, L=London, C=GB, actor_store_id=TEST, fiber-id=10000016, flow-id=d5f7a232-89f7-4f15-9d30-1721de6ea27d, invocation_id=5771fe89-7b08-4d09-9e35-af175fdf6be2, invocation_timestamp=2023-01-31T07:45:19.761Z, origin=Only For Testing, session_id=5771fe89-7b08-4d09-9e35-af175fdf6be2, session_timestamp=2023-01-31T07:45:19.761Z, thread-id=854}
[INFO ] 2023-01-31T07:45:19,958Z [Mock network] corda.flow. - Received transaction acknowledgement request from party O=Mock Company 2, L=London, C=GB. {fiber-id=10000019, flow-id=a2c1dfde-5141-4220-b7c1-3384506d85c6, invocation_id=7b7c87ff-6b4d-4d65-bd63-cd80a04b552d, invocation_timestamp=2023-01-31T07:45:19.944Z, origin=O=Mock Company 2, L=London, C=GB, session_id=7b7c87ff-6b4d-4d65-bd63-cd80a04b552d, session_timestamp=2023-01-31T07:45:19.944Z, thread-id=854, tx_id=B2B31AF56EEE5FDDA384644F7ED9FB081671A58CDDE8B8146E1DB87604ADC8AB}
[INFO ] 2023-01-31T07:45:20,065Z [Mock network] corda.flow. - Transaction dependencies resolution completed. {fiber-id=10000019, flow-id=a2c1dfde-5141-4220-b7c1-3384506d85c6, invocation_id=7b7c87ff-6b4d-4d65-bd63-cd80a04b552d, invocation_timestamp=2023-01-31T07:45:19.944Z, origin=O=Mock Company 2, L=London, C=GB, session_id=7b7c87ff-6b4d-4d65-bd63-cd80a04b552d, session_timestamp=2023-01-31T07:45:19.944Z, thread-id=854, tx_id=B2B31AF56EEE5FDDA384644F7ED9FB081671A58CDDE8B8146E1DB87604ADC8AB}
[INFO ] 2023-01-31T07:45:20,116Z [Mock network] corda.flow. - Received transaction acknowledgement request from party O=Mock Company 2, L=London, C=GB. {fiber-id=10000020, flow-id=c5e2dbcc-d594-4843-8a3d-61b84cffbf49, invocation_id=7ab93e6e-dbc2-452c-ae2a-1895665d8d22, invocation_timestamp=2023-01-31T07:45:20.108Z, origin=O=Mock Company 2, L=London, C=GB, session_id=7ab93e6e-dbc2-452c-ae2a-1895665d8d22, session_timestamp=2023-01-31T07:45:20.108Z, thread-id=854, tx_id=B2B31AF56EEE5FDDA384644F7ED9FB081671A58CDDE8B8146E1DB87604ADC8AB}
[INFO ] 2023-01-31T07:45:20,124Z [Mock network] corda.flow. - Transaction dependencies resolution completed. {fiber-id=10000020, flow-id=c5e2dbcc-d594-4843-8a3d-61b84cffbf49, invocation_id=7ab93e6e-dbc2-452c-ae2a-1895665d8d22, invocation_timestamp=2023-01-31T07:45:20.108Z, origin=O=Mock Company 2, L=London, C=GB, session_id=7ab93e6e-dbc2-452c-ae2a-1895665d8d22, session_timestamp=2023-01-31T07:45:20.108Z, thread-id=854, tx_id=B2B31AF56EEE5FDDA384644F7ED9FB081671A58CDDE8B8146E1DB87604ADC8AB}
[INFO ] 2023-01-31T07:45:20,195Z [Mock network] corda.flow. - Sending transaction to notary: O=Notary, L=London, C=GB. {actor_id=Only For Testing, actor_owning_identity=O=Mock Company 2, L=London, C=GB, actor_store_id=TEST, fiber-id=10000016, flow-id=d5f7a232-89f7-4f15-9d30-1721de6ea27d, invocation_id=5771fe89-7b08-4d09-9e35-af175fdf6be2, invocation_timestamp=2023-01-31T07:45:19.761Z, origin=Only For Testing, session_id=5771fe89-7b08-4d09-9e35-af175fdf6be2, session_timestamp=2023-01-31T07:45:19.761Z, thread-id=854, tx_id=B2B31AF56EEE5FDDA384644F7ED9FB081671A58CDDE8B8146E1DB87604ADC8AB}
[INFO ] 2023-01-31T07:45:20,233Z [Mock network] corda.flow. - Received a notarisation request for Tx [B2B31AF56EEE5FDDA384644F7ED9FB081671A58CDDE8B8146E1DB87604ADC8AB] from [O=Mock Company 2, L=London, C=GB] {fiber-id=10000021, flow-id=24e07f3e-4bfc-4348-b42b-52f37626e1ef, invocation_id=515e2b6b-0099-44be-b1ab-35265495dc0b, invocation_timestamp=2023-01-31T07:45:20.219Z, origin=O=Mock Company 2, L=London, C=GB, session_id=515e2b6b-0099-44be-b1ab-35265495dc0b, session_timestamp=2023-01-31T07:45:20.219Z, thread-id=854}
[INFO ] 2023-01-31T07:45:20,455Z [Notary request queue processor] jpa.JPAUniquenessProvider. - Processing notarization requests with 1 input states and 0 references {}
[INFO ] 2023-01-31T07:45:20,481Z [Mock network] corda.flow. - Transaction [B2B31AF56EEE5FDDA384644F7ED9FB081671A58CDDE8B8146E1DB87604ADC8AB] successfully notarised, sending signature back to [O=Mock Company 2, L=London, C=GB] {fiber-id=10000021, flow-id=24e07f3e-4bfc-4348-b42b-52f37626e1ef, invocation_id=515e2b6b-0099-44be-b1ab-35265495dc0b, invocation_timestamp=2023-01-31T07:45:20.219Z, origin=O=Mock Company 2, L=London, C=GB, session_id=515e2b6b-0099-44be-b1ab-35265495dc0b, session_timestamp=2023-01-31T07:45:20.219Z, thread-id=854}
[INFO ] 2023-01-31T07:45:20,495Z [Mock network] corda.flow. - Notary responded (O=Notary, L=London, C=GB). {actor_id=Only For Testing, actor_owning_identity=O=Mock Company 2, L=London, C=GB, actor_store_id=TEST, fiber-id=10000016, flow-id=d5f7a232-89f7-4f15-9d30-1721de6ea27d, invocation_id=5771fe89-7b08-4d09-9e35-af175fdf6be2, invocation_timestamp=2023-01-31T07:45:19.761Z, origin=Only For Testing, session_id=5771fe89-7b08-4d09-9e35-af175fdf6be2, session_timestamp=2023-01-31T07:45:19.761Z, thread-id=854, tx_id=B2B31AF56EEE5FDDA384644F7ED9FB081671A58CDDE8B8146E1DB87604ADC8AB}
[INFO ] 2023-01-31T07:45:20,496Z [Mock network] corda.flow. - Recording transaction locally. {actor_id=Only For Testing, actor_owning_identity=O=Mock Company 2, L=London, C=GB, actor_store_id=TEST, fiber-id=10000016, flow-id=d5f7a232-89f7-4f15-9d30-1721de6ea27d, invocation_id=5771fe89-7b08-4d09-9e35-af175fdf6be2, invocation_timestamp=2023-01-31T07:45:19.761Z, origin=Only For Testing, session_id=5771fe89-7b08-4d09-9e35-af175fdf6be2, session_timestamp=2023-01-31T07:45:19.761Z, thread-id=854, tx_id=B2B31AF56EEE5FDDA384644F7ED9FB081671A58CDDE8B8146E1DB87604ADC8AB}
[INFO ] 2023-01-31T07:45:20,505Z [Mock network] corda.flow. - Recorded transaction locally successfully. {actor_id=Only For Testing, actor_owning_identity=O=Mock Company 2, L=London, C=GB, actor_store_id=TEST, fiber-id=10000016, flow-id=d5f7a232-89f7-4f15-9d30-1721de6ea27d, invocation_id=5771fe89-7b08-4d09-9e35-af175fdf6be2, invocation_timestamp=2023-01-31T07:45:19.761Z, origin=Only For Testing, session_id=5771fe89-7b08-4d09-9e35-af175fdf6be2, session_timestamp=2023-01-31T07:45:19.761Z, thread-id=854, tx_id=B2B31AF56EEE5FDDA384644F7ED9FB081671A58CDDE8B8146E1DB87604ADC8AB}
[INFO ] 2023-01-31T07:45:20,514Z [Mock network] corda.flow. - Received transaction acknowledgement request from party O=Mock Company 2, L=London, C=GB. {fiber-id=10000019, flow-id=a2c1dfde-5141-4220-b7c1-3384506d85c6, invocation_id=7b7c87ff-6b4d-4d65-bd63-cd80a04b552d, invocation_timestamp=2023-01-31T07:45:19.944Z, origin=O=Mock Company 2, L=London, C=GB, session_id=7b7c87ff-6b4d-4d65-bd63-cd80a04b552d, session_timestamp=2023-01-31T07:45:19.944Z, thread-id=854, tx_id=B2B31AF56EEE5FDDA384644F7ED9FB081671A58CDDE8B8146E1DB87604ADC8AB}
[INFO ] 2023-01-31T07:45:20,520Z [Mock network] corda.flow. - Transaction dependencies resolution completed. {fiber-id=10000019, flow-id=a2c1dfde-5141-4220-b7c1-3384506d85c6, invocation_id=7b7c87ff-6b4d-4d65-bd63-cd80a04b552d, invocation_timestamp=2023-01-31T07:45:19.944Z, origin=O=Mock Company 2, L=London, C=GB, session_id=7b7c87ff-6b4d-4d65-bd63-cd80a04b552d, session_timestamp=2023-01-31T07:45:19.944Z, thread-id=854, tx_id=B2B31AF56EEE5FDDA384644F7ED9FB081671A58CDDE8B8146E1DB87604ADC8AB}
[INFO ] 2023-01-31T07:45:20,526Z [Mock network] corda.flow. - Successfully received fully signed tx. Sending it to the vault for processing. {fiber-id=10000019, flow-id=a2c1dfde-5141-4220-b7c1-3384506d85c6, invocation_id=7b7c87ff-6b4d-4d65-bd63-cd80a04b552d, invocation_timestamp=2023-01-31T07:45:19.944Z, origin=O=Mock Company 2, L=London, C=GB, session_id=7b7c87ff-6b4d-4d65-bd63-cd80a04b552d, session_timestamp=2023-01-31T07:45:19.944Z, thread-id=854, tx_id=B2B31AF56EEE5FDDA384644F7ED9FB081671A58CDDE8B8146E1DB87604ADC8AB}
[INFO ] 2023-01-31T07:45:20,531Z [Mock network] corda.flow. - Successfully recorded received transaction locally. {fiber-id=10000019, flow-id=a2c1dfde-5141-4220-b7c1-3384506d85c6, invocation_id=7b7c87ff-6b4d-4d65-bd63-cd80a04b552d, invocation_timestamp=2023-01-31T07:45:19.944Z, origin=O=Mock Company 2, L=London, C=GB, session_id=7b7c87ff-6b4d-4d65-bd63-cd80a04b552d, session_timestamp=2023-01-31T07:45:19.944Z, thread-id=854, tx_id=B2B31AF56EEE5FDDA384644F7ED9FB081671A58CDDE8B8146E1DB87604ADC8AB}
[WARN ] 2023-01-31T07:45:20,533Z [Mock network] persistence.AbstractPartyToX500NameAsStringConverter. - Identity service unable to resolve AbstractParty: Anonymous(DL54sWN1ep5VDx9uLAPXdYArwasAYtVEJ4mEvkgYBJbvD4) {actor_id=Only For Testing, actor_owning_identity=O=Mock Company 2, L=London, C=GB, actor_store_id=TEST, fiber-id=10000019, flow-id=a2c1dfde-5141-4220-b7c1-3384506d85c6, invocation_id=7b7c87ff-6b4d-4d65-bd63-cd80a04b552d, invocation_timestamp=2023-01-31T07:45:19.944Z, origin=O=Mock Company 2, L=London, C=GB, session_id=7b7c87ff-6b4d-4d65-bd63-cd80a04b552d, session_timestamp=2023-01-31T07:45:19.944Z, thread-id=854}
[INFO ] 2023-01-31T07:45:20,538Z [Mock network] corda.flow. - Party O=Mock Company 3, L=London, C=GB received the transaction. {actor_id=Only For Testing, actor_owning_identity=O=Mock Company 2, L=London, C=GB, actor_store_id=TEST, fiber-id=10000016, flow-id=d5f7a232-89f7-4f15-9d30-1721de6ea27d, invocation_id=5771fe89-7b08-4d09-9e35-af175fdf6be2, invocation_timestamp=2023-01-31T07:45:19.761Z, origin=Only For Testing, session_id=5771fe89-7b08-4d09-9e35-af175fdf6be2, session_timestamp=2023-01-31T07:45:19.761Z, thread-id=854, tx_id=B2B31AF56EEE5FDDA384644F7ED9FB081671A58CDDE8B8146E1DB87604ADC8AB}
[INFO ] 2023-01-31T07:45:20,545Z [Mock network] corda.flow. - Received transaction acknowledgement request from party O=Mock Company 2, L=London, C=GB. {fiber-id=10000020, flow-id=c5e2dbcc-d594-4843-8a3d-61b84cffbf49, invocation_id=7ab93e6e-dbc2-452c-ae2a-1895665d8d22, invocation_timestamp=2023-01-31T07:45:20.108Z, origin=O=Mock Company 2, L=London, C=GB, session_id=7ab93e6e-dbc2-452c-ae2a-1895665d8d22, session_timestamp=2023-01-31T07:45:20.108Z, thread-id=854, tx_id=B2B31AF56EEE5FDDA384644F7ED9FB081671A58CDDE8B8146E1DB87604ADC8AB}
[INFO ] 2023-01-31T07:45:20,551Z [Mock network] corda.flow. - Transaction dependencies resolution completed. {fiber-id=10000020, flow-id=c5e2dbcc-d594-4843-8a3d-61b84cffbf49, invocation_id=7ab93e6e-dbc2-452c-ae2a-1895665d8d22, invocation_timestamp=2023-01-31T07:45:20.108Z, origin=O=Mock Company 2, L=London, C=GB, session_id=7ab93e6e-dbc2-452c-ae2a-1895665d8d22, session_timestamp=2023-01-31T07:45:20.108Z, thread-id=854, tx_id=B2B31AF56EEE5FDDA384644F7ED9FB081671A58CDDE8B8146E1DB87604ADC8AB}
[INFO ] 2023-01-31T07:45:20,557Z [Mock network] corda.flow. - Successfully received fully signed tx. Sending it to the vault for processing. {fiber-id=10000020, flow-id=c5e2dbcc-d594-4843-8a3d-61b84cffbf49, invocation_id=7ab93e6e-dbc2-452c-ae2a-1895665d8d22, invocation_timestamp=2023-01-31T07:45:20.108Z, origin=O=Mock Company 2, L=London, C=GB, session_id=7ab93e6e-dbc2-452c-ae2a-1895665d8d22, session_timestamp=2023-01-31T07:45:20.108Z, thread-id=854, tx_id=B2B31AF56EEE5FDDA384644F7ED9FB081671A58CDDE8B8146E1DB87604ADC8AB}
[INFO ] 2023-01-31T07:45:20,565Z [Mock network] corda.flow. - Successfully recorded received transaction locally. {fiber-id=10000020, flow-id=c5e2dbcc-d594-4843-8a3d-61b84cffbf49, invocation_id=7ab93e6e-dbc2-452c-ae2a-1895665d8d22, invocation_timestamp=2023-01-31T07:45:20.108Z, origin=O=Mock Company 2, L=London, C=GB, session_id=7ab93e6e-dbc2-452c-ae2a-1895665d8d22, session_timestamp=2023-01-31T07:45:20.108Z, thread-id=854, tx_id=B2B31AF56EEE5FDDA384644F7ED9FB081671A58CDDE8B8146E1DB87604ADC8AB}
[WARN ] 2023-01-31T07:45:20,566Z [Mock network] persistence.AbstractPartyToX500NameAsStringConverter. - Identity service unable to resolve AbstractParty: Anonymous(DL6ZFHJfUcVF3cpNxTBCoqm7HNTe9VeRRWk3LQEJ4rN2Ly) {actor_id=Only For Testing, actor_owning_identity=O=Mock Company 2, L=London, C=GB, actor_store_id=TEST, fiber-id=10000020, flow-id=c5e2dbcc-d594-4843-8a3d-61b84cffbf49, invocation_id=7ab93e6e-dbc2-452c-ae2a-1895665d8d22, invocation_timestamp=2023-01-31T07:45:20.108Z, origin=O=Mock Company 2, L=London, C=GB, session_id=7ab93e6e-dbc2-452c-ae2a-1895665d8d22, session_timestamp=2023-01-31T07:45:20.108Z, thread-id=854}
[INFO ] 2023-01-31T07:45:20,572Z [Mock network] corda.flow. - Party O=Mock Company 1, L=London, C=GB received the transaction. {actor_id=Only For Testing, actor_owning_identity=O=Mock Company 2, L=London, C=GB, actor_store_id=TEST, fiber-id=10000016, flow-id=d5f7a232-89f7-4f15-9d30-1721de6ea27d, invocation_id=5771fe89-7b08-4d09-9e35-af175fdf6be2, invocation_timestamp=2023-01-31T07:45:19.761Z, origin=Only For Testing, session_id=5771fe89-7b08-4d09-9e35-af175fdf6be2, session_timestamp=2023-01-31T07:45:19.761Z, thread-id=854, tx_id=B2B31AF56EEE5FDDA384644F7ED9FB081671A58CDDE8B8146E1DB87604ADC8AB}
[INFO ] 2023-01-31T07:45:20,572Z [Mock network] corda.flow. - All parties received the transaction successfully. {actor_id=Only For Testing, actor_owning_identity=O=Mock Company 2, L=London, C=GB, actor_store_id=TEST, fiber-id=10000016, flow-id=d5f7a232-89f7-4f15-9d30-1721de6ea27d, invocation_id=5771fe89-7b08-4d09-9e35-af175fdf6be2, invocation_timestamp=2023-01-31T07:45:19.761Z, origin=Only For Testing, session_id=5771fe89-7b08-4d09-9e35-af175fdf6be2, session_timestamp=2023-01-31T07:45:19.761Z, thread-id=854, tx_id=B2B31AF56EEE5FDDA384644F7ED9FB081671A58CDDE8B8146E1DB87604ADC8AB}
[INFO ] 2023-01-31T07:45:20,623Z [Mock network] corda.flow. - Received transaction acknowledgement request from party O=Mock Company 3, L=London, C=GB. {fiber-id=10000024, flow-id=fe5d4c76-724a-4bf9-bae8-7d85cf909919, invocation_id=dc098d7e-0da8-4f63-ad68-37e82a62ccbc, invocation_timestamp=2023-01-31T07:45:20.609Z, origin=O=Mock Company 3, L=London, C=GB, session_id=dc098d7e-0da8-4f63-ad68-37e82a62ccbc, session_timestamp=2023-01-31T07:45:20.609Z, thread-id=854, tx_id=92ADFAA470A90E348651B6110BF161144321BD456AA158129BF66AB23B35C50B}
[INFO ] 2023-01-31T07:45:20,627Z [Mock network] corda.flow. - Transaction dependencies resolution completed. {fiber-id=10000024, flow-id=fe5d4c76-724a-4bf9-bae8-7d85cf909919, invocation_id=dc098d7e-0da8-4f63-ad68-37e82a62ccbc, invocation_timestamp=2023-01-31T07:45:20.609Z, origin=O=Mock Company 3, L=London, C=GB, session_id=dc098d7e-0da8-4f63-ad68-37e82a62ccbc, session_timestamp=2023-01-31T07:45:20.609Z, thread-id=854, tx_id=92ADFAA470A90E348651B6110BF161144321BD456AA158129BF66AB23B35C50B}
[INFO ] 2023-01-31T07:45:20,630Z [Mock network] corda.flow. - Successfully received fully signed tx. Sending it to the vault for processing. {fiber-id=10000024, flow-id=fe5d4c76-724a-4bf9-bae8-7d85cf909919, invocation_id=dc098d7e-0da8-4f63-ad68-37e82a62ccbc, invocation_timestamp=2023-01-31T07:45:20.609Z, origin=O=Mock Company 3, L=London, C=GB, session_id=dc098d7e-0da8-4f63-ad68-37e82a62ccbc, session_timestamp=2023-01-31T07:45:20.609Z, thread-id=854, tx_id=92ADFAA470A90E348651B6110BF161144321BD456AA158129BF66AB23B35C50B}
[INFO ] 2023-01-31T07:45:20,633Z [Mock network] corda.flow. - Successfully recorded received transaction locally. {fiber-id=10000024, flow-id=fe5d4c76-724a-4bf9-bae8-7d85cf909919, invocation_id=dc098d7e-0da8-4f63-ad68-37e82a62ccbc, invocation_timestamp=2023-01-31T07:45:20.609Z, origin=O=Mock Company 3, L=London, C=GB, session_id=dc098d7e-0da8-4f63-ad68-37e82a62ccbc, session_timestamp=2023-01-31T07:45:20.609Z, thread-id=854, tx_id=92ADFAA470A90E348651B6110BF161144321BD456AA158129BF66AB23B35C50B}
[INFO ] 2023-01-31T07:45:20,649Z [Mock network] identity.PersistentIdentityService. - Linking: 528D2B10FB2271BA5213D356018A398C8FC4092004FE46F3E1B28AFA26395FA2 to O=Mock Company 3, L=London, C=GB {fiber-id=10000024, flow-id=fe5d4c76-724a-4bf9-bae8-7d85cf909919, invocation_id=dc098d7e-0da8-4f63-ad68-37e82a62ccbc, invocation_timestamp=2023-01-31T07:45:20.609Z, origin=O=Mock Company 3, L=London, C=GB, session_id=dc098d7e-0da8-4f63-ad68-37e82a62ccbc, session_timestamp=2023-01-31T07:45:20.609Z, thread-id=854, tx_id=92ADFAA470A90E348651B6110BF161144321BD456AA158129BF66AB23B35C50B}
[INFO ] 2023-01-31T07:45:20,655Z [Mock network] corda.flow. - Received transaction acknowledgement request from party O=Mock Company 3, L=London, C=GB. {fiber-id=10000024, flow-id=fe5d4c76-724a-4bf9-bae8-7d85cf909919, invocation_id=dc098d7e-0da8-4f63-ad68-37e82a62ccbc, invocation_timestamp=2023-01-31T07:45:20.609Z, origin=O=Mock Company 3, L=London, C=GB, session_id=dc098d7e-0da8-4f63-ad68-37e82a62ccbc, session_timestamp=2023-01-31T07:45:20.609Z, thread-id=854, tx_id=B2B31AF56EEE5FDDA384644F7ED9FB081671A58CDDE8B8146E1DB87604ADC8AB}
[INFO ] 2023-01-31T07:45:20,660Z [Mock network] corda.flow. - Transaction dependencies resolution completed. {fiber-id=10000024, flow-id=fe5d4c76-724a-4bf9-bae8-7d85cf909919, invocation_id=dc098d7e-0da8-4f63-ad68-37e82a62ccbc, invocation_timestamp=2023-01-31T07:45:20.609Z, origin=O=Mock Company 3, L=London, C=GB, session_id=dc098d7e-0da8-4f63-ad68-37e82a62ccbc, session_timestamp=2023-01-31T07:45:20.609Z, thread-id=854, tx_id=B2B31AF56EEE5FDDA384644F7ED9FB081671A58CDDE8B8146E1DB87604ADC8AB}
[INFO ] 2023-01-31T07:45:20,666Z [Mock network] corda.flow. - Successfully received fully signed tx. Sending it to the vault for processing. {fiber-id=10000024, flow-id=fe5d4c76-724a-4bf9-bae8-7d85cf909919, invocation_id=dc098d7e-0da8-4f63-ad68-37e82a62ccbc, invocation_timestamp=2023-01-31T07:45:20.609Z, origin=O=Mock Company 3, L=London, C=GB, session_id=dc098d7e-0da8-4f63-ad68-37e82a62ccbc, session_timestamp=2023-01-31T07:45:20.609Z, thread-id=854, tx_id=B2B31AF56EEE5FDDA384644F7ED9FB081671A58CDDE8B8146E1DB87604ADC8AB}
[INFO ] 2023-01-31T07:45:20,670Z [Mock network] corda.flow. - Successfully recorded received transaction locally. {fiber-id=10000024, flow-id=fe5d4c76-724a-4bf9-bae8-7d85cf909919, invocation_id=dc098d7e-0da8-4f63-ad68-37e82a62ccbc, invocation_timestamp=2023-01-31T07:45:20.609Z, origin=O=Mock Company 3, L=London, C=GB, session_id=dc098d7e-0da8-4f63-ad68-37e82a62ccbc, session_timestamp=2023-01-31T07:45:20.609Z, thread-id=854, tx_id=B2B31AF56EEE5FDDA384644F7ED9FB081671A58CDDE8B8146E1DB87604ADC8AB}
[INFO ] 2023-01-31T07:45:20,684Z [Mock network] identity.PersistentIdentityService. - Linking: 41522EDE104EDC8A7055B1B26822577B649F90294C3A34A1233953E308AE8990 to O=Mock Company 1, L=London, C=GB {actor_id=Only For Testing, actor_owning_identity=O=Mock Company 1, L=London, C=GB, actor_store_id=TEST, fiber-id=10000025, flow-id=eac0c2d2-7334-44ca-88d5-3ff68881d1e0, invocation_id=c78edea5-4ad4-4dbe-b87a-2ad691da202b, invocation_timestamp=2023-01-31T07:45:20.680Z, origin=Only For Testing, session_id=c78edea5-4ad4-4dbe-b87a-2ad691da202b, session_timestamp=2023-01-31T07:45:20.680Z, thread-id=854}
[INFO ] 2023-01-31T07:45:20,806Z [Mock network] corda.flow. - No need to notarise this transaction. {actor_id=Only For Testing, actor_owning_identity=O=Mock Company 1, L=London, C=GB, actor_store_id=TEST, fiber-id=10000025, flow-id=eac0c2d2-7334-44ca-88d5-3ff68881d1e0, invocation_id=c78edea5-4ad4-4dbe-b87a-2ad691da202b, invocation_timestamp=2023-01-31T07:45:20.680Z, origin=Only For Testing, session_id=c78edea5-4ad4-4dbe-b87a-2ad691da202b, session_timestamp=2023-01-31T07:45:20.680Z, thread-id=854, tx_id=17F0DA617B42FAB7E413677975DFB1C0173C8BAA6FD68EF426FA4F57508B2B5F}
[INFO ] 2023-01-31T07:45:20,806Z [Mock network] corda.flow. - Recording transaction locally. {actor_id=Only For Testing, actor_owning_identity=O=Mock Company 1, L=London, C=GB, actor_store_id=TEST, fiber-id=10000025, flow-id=eac0c2d2-7334-44ca-88d5-3ff68881d1e0, invocation_id=c78edea5-4ad4-4dbe-b87a-2ad691da202b, invocation_timestamp=2023-01-31T07:45:20.680Z, origin=Only For Testing, session_id=c78edea5-4ad4-4dbe-b87a-2ad691da202b, session_timestamp=2023-01-31T07:45:20.680Z, thread-id=854, tx_id=17F0DA617B42FAB7E413677975DFB1C0173C8BAA6FD68EF426FA4F57508B2B5F}
[INFO ] 2023-01-31T07:45:20,834Z [Mock network] corda.flow. - Recorded transaction locally successfully. {actor_id=Only For Testing, actor_owning_identity=O=Mock Company 1, L=London, C=GB, actor_store_id=TEST, fiber-id=10000025, flow-id=eac0c2d2-7334-44ca-88d5-3ff68881d1e0, invocation_id=c78edea5-4ad4-4dbe-b87a-2ad691da202b, invocation_timestamp=2023-01-31T07:45:20.680Z, origin=Only For Testing, session_id=c78edea5-4ad4-4dbe-b87a-2ad691da202b, session_timestamp=2023-01-31T07:45:20.680Z, thread-id=854, tx_id=17F0DA617B42FAB7E413677975DFB1C0173C8BAA6FD68EF426FA4F57508B2B5F}
[INFO ] 2023-01-31T07:45:20,834Z [Mock network] corda.flow. - All parties received the transaction successfully. {actor_id=Only For Testing, actor_owning_identity=O=Mock Company 1, L=London, C=GB, actor_store_id=TEST, fiber-id=10000025, flow-id=eac0c2d2-7334-44ca-88d5-3ff68881d1e0, invocation_id=c78edea5-4ad4-4dbe-b87a-2ad691da202b, invocation_timestamp=2023-01-31T07:45:20.680Z, origin=Only For Testing, session_id=c78edea5-4ad4-4dbe-b87a-2ad691da202b, session_timestamp=2023-01-31T07:45:20.680Z, thread-id=854, tx_id=17F0DA617B42FAB7E413677975DFB1C0173C8BAA6FD68EF426FA4F57508B2B5F}
[INFO ] 2023-01-31T07:45:20,854Z [Mock network] identity.PersistentIdentityService. - Linking: F22E9A978B03DA4ED532029EBB9C698424E5417A3F6B011008ADAAABE7778836 to O=Mock Company 1, L=London, C=GB {actor_id=Only For Testing, actor_owning_identity=O=Mock Company 1, L=London, C=GB, actor_store_id=TEST, fiber-id=10000026, flow-id=1d7e61b6-bf18-49af-93e6-c6b40df513ef, invocation_id=e4aed9b5-c310-49df-9ed8-e8ddf48ee685, invocation_timestamp=2023-01-31T07:45:20.850Z, origin=Only For Testing, session_id=e4aed9b5-c310-49df-9ed8-e8ddf48ee685, session_timestamp=2023-01-31T07:45:20.850Z, thread-id=854}
[INFO ] 2023-01-31T07:45:20,864Z [Mock network] corda.flow. - No need to notarise this transaction. {actor_id=Only For Testing, actor_owning_identity=O=Mock Company 1, L=London, C=GB, actor_store_id=TEST, fiber-id=10000026, flow-id=1d7e61b6-bf18-49af-93e6-c6b40df513ef, invocation_id=e4aed9b5-c310-49df-9ed8-e8ddf48ee685, invocation_timestamp=2023-01-31T07:45:20.850Z, origin=Only For Testing, session_id=e4aed9b5-c310-49df-9ed8-e8ddf48ee685, session_timestamp=2023-01-31T07:45:20.850Z, thread-id=854, tx_id=F0D129614015D8C80ABF2AEEE8274165C34462310660876EEC4FEB58E29E44C0}
[INFO ] 2023-01-31T07:45:20,864Z [Mock network] corda.flow. - Recording transaction locally. {actor_id=Only For Testing, actor_owning_identity=O=Mock Company 1, L=London, C=GB, actor_store_id=TEST, fiber-id=10000026, flow-id=1d7e61b6-bf18-49af-93e6-c6b40df513ef, invocation_id=e4aed9b5-c310-49df-9ed8-e8ddf48ee685, invocation_timestamp=2023-01-31T07:45:20.850Z, origin=Only For Testing, session_id=e4aed9b5-c310-49df-9ed8-e8ddf48ee685, session_timestamp=2023-01-31T07:45:20.850Z, thread-id=854, tx_id=F0D129614015D8C80ABF2AEEE8274165C34462310660876EEC4FEB58E29E44C0}
[INFO ] 2023-01-31T07:45:20,868Z [Mock network] corda.flow. - Recorded transaction locally successfully. {actor_id=Only For Testing, actor_owning_identity=O=Mock Company 1, L=London, C=GB, actor_store_id=TEST, fiber-id=10000026, flow-id=1d7e61b6-bf18-49af-93e6-c6b40df513ef, invocation_id=e4aed9b5-c310-49df-9ed8-e8ddf48ee685, invocation_timestamp=2023-01-31T07:45:20.850Z, origin=Only For Testing, session_id=e4aed9b5-c310-49df-9ed8-e8ddf48ee685, session_timestamp=2023-01-31T07:45:20.850Z, thread-id=854, tx_id=F0D129614015D8C80ABF2AEEE8274165C34462310660876EEC4FEB58E29E44C0}
[INFO ] 2023-01-31T07:45:20,868Z [Mock network] corda.flow. - All parties received the transaction successfully. {actor_id=Only For Testing, actor_owning_identity=O=Mock Company 1, L=London, C=GB, actor_store_id=TEST, fiber-id=10000026, flow-id=1d7e61b6-bf18-49af-93e6-c6b40df513ef, invocation_id=e4aed9b5-c310-49df-9ed8-e8ddf48ee685, invocation_timestamp=2023-01-31T07:45:20.850Z, origin=Only For Testing, session_id=e4aed9b5-c310-49df-9ed8-e8ddf48ee685, session_timestamp=2023-01-31T07:45:20.850Z, thread-id=854, tx_id=F0D129614015D8C80ABF2AEEE8274165C34462310660876EEC4FEB58E29E44C0}
[INFO ] 2023-01-31T07:45:20,894Z [Mock network] identity.PersistentIdentityService. - Linking: F020C508AEB539139D2F7B5151DB1D540265F77CD5F2A12793EB551B56646C53 to O=Mock Company 1, L=London, C=GB {actor_id=Only For Testing, actor_owning_identity=O=Mock Company 1, L=London, C=GB, actor_store_id=TEST, fiber-id=10000028, flow-id=fc4bcd87-d6a6-45d2-82bc-727cccce2135, invocation_id=a74f4db6-aff4-4214-bafd-d79f76271b04, invocation_timestamp=2023-01-31T07:45:20.889Z, origin=Only For Testing, session_id=a74f4db6-aff4-4214-bafd-d79f76271b04, session_timestamp=2023-01-31T07:45:20.889Z, thread-id=854}
[INFO ] 2023-01-31T07:45:20,932Z [Mock network] identity.PersistentIdentityService. - Linking: 5826530621E3E6F0C952A34AD413F4BE2C9737BCCB78B8F529923C8334DC92B9 to O=Mock Company 3, L=London, C=GB {fiber-id=10000029, flow-id=52645c2b-5d55-4ef4-9c9d-363d9c70bd0f, invocation_id=2c67ed84-f82e-45c6-bf23-d949fc2dbc9b, invocation_timestamp=2023-01-31T07:45:20.910Z, origin=O=Mock Company 1, L=London, C=GB, session_id=2c67ed84-f82e-45c6-bf23-d949fc2dbc9b, session_timestamp=2023-01-31T07:45:20.910Z, thread-id=854}
[INFO ] 2023-01-31T07:45:20,943Z [Mock network] identity.PersistentIdentityService. - Linking: 5826530621E3E6F0C952A34AD413F4BE2C9737BCCB78B8F529923C8334DC92B9 to O=Mock Company 3, L=London, C=GB {actor_id=Only For Testing, actor_owning_identity=O=Mock Company 1, L=London, C=GB, actor_store_id=TEST, fiber-id=10000028, flow-id=fc4bcd87-d6a6-45d2-82bc-727cccce2135, invocation_id=a74f4db6-aff4-4214-bafd-d79f76271b04, invocation_timestamp=2023-01-31T07:45:20.889Z, origin=Only For Testing, session_id=a74f4db6-aff4-4214-bafd-d79f76271b04, session_timestamp=2023-01-31T07:45:20.889Z, thread-id=854}
[INFO ] 2023-01-31T07:45:21,351Z [Mock network] corda.flow. - Received transaction acknowledgement request from party O=Mock Company 1, L=London, C=GB. {fiber-id=10000030, flow-id=8ba1c867-1dce-4141-bcd2-96a5ea29837b, invocation_id=b27dd1ef-57b6-4e72-bf0a-3af1f02b273b, invocation_timestamp=2023-01-31T07:45:21.341Z, origin=O=Mock Company 1, L=London, C=GB, session_id=b27dd1ef-57b6-4e72-bf0a-3af1f02b273b, session_timestamp=2023-01-31T07:45:21.341Z, thread-id=854, tx_id=C296FB72BA0A0159C1E69E2252EE5E2DD886ECAB238CBDD3F84AAA2378BCB997}
[INFO ] 2023-01-31T07:45:21,420Z [Mock network] corda.flow. - Transaction dependencies resolution completed. {fiber-id=10000030, flow-id=8ba1c867-1dce-4141-bcd2-96a5ea29837b, invocation_id=b27dd1ef-57b6-4e72-bf0a-3af1f02b273b, invocation_timestamp=2023-01-31T07:45:21.341Z, origin=O=Mock Company 1, L=London, C=GB, session_id=b27dd1ef-57b6-4e72-bf0a-3af1f02b273b, session_timestamp=2023-01-31T07:45:21.341Z, thread-id=854, tx_id=C296FB72BA0A0159C1E69E2252EE5E2DD886ECAB238CBDD3F84AAA2378BCB997}
[INFO ] 2023-01-31T07:45:21,558Z [Mock network] corda.flow. - Sending transaction to notary: O=Notary, L=London, C=GB. {actor_id=Only For Testing, actor_owning_identity=O=Mock Company 1, L=London, C=GB, actor_store_id=TEST, fiber-id=10000028, flow-id=fc4bcd87-d6a6-45d2-82bc-727cccce2135, invocation_id=a74f4db6-aff4-4214-bafd-d79f76271b04, invocation_timestamp=2023-01-31T07:45:20.889Z, origin=Only For Testing, session_id=a74f4db6-aff4-4214-bafd-d79f76271b04, session_timestamp=2023-01-31T07:45:20.889Z, thread-id=854, tx_id=C296FB72BA0A0159C1E69E2252EE5E2DD886ECAB238CBDD3F84AAA2378BCB997}
[INFO ] 2023-01-31T07:45:21,576Z [Mock network] corda.flow. - Received a notarisation request for Tx [C296FB72BA0A0159C1E69E2252EE5E2DD886ECAB238CBDD3F84AAA2378BCB997] from [O=Mock Company 1, L=London, C=GB] {fiber-id=10000031, flow-id=dc8710e4-146a-40fc-9038-c74f65220ede, invocation_id=c84252c4-90b0-44de-9c62-4299669468ca, invocation_timestamp=2023-01-31T07:45:21.566Z, origin=O=Mock Company 1, L=London, C=GB, session_id=c84252c4-90b0-44de-9c62-4299669468ca, session_timestamp=2023-01-31T07:45:21.566Z, thread-id=854}
[INFO ] 2023-01-31T07:45:22,123Z [Notary request queue processor] jpa.JPAUniquenessProvider. - Processing notarization requests with 2 input states and 0 references {}
[INFO ] 2023-01-31T07:45:22,127Z [Mock network] corda.flow. - Transaction [C296FB72BA0A0159C1E69E2252EE5E2DD886ECAB238CBDD3F84AAA2378BCB997] successfully notarised, sending signature back to [O=Mock Company 1, L=London, C=GB] {fiber-id=10000031, flow-id=dc8710e4-146a-40fc-9038-c74f65220ede, invocation_id=c84252c4-90b0-44de-9c62-4299669468ca, invocation_timestamp=2023-01-31T07:45:21.566Z, origin=O=Mock Company 1, L=London, C=GB, session_id=c84252c4-90b0-44de-9c62-4299669468ca, session_timestamp=2023-01-31T07:45:21.566Z, thread-id=854}
[INFO ] 2023-01-31T07:45:22,181Z [Mock network] corda.flow. - Notary responded (O=Notary, L=London, C=GB). {actor_id=Only For Testing, actor_owning_identity=O=Mock Company 1, L=London, C=GB, actor_store_id=TEST, fiber-id=10000028, flow-id=fc4bcd87-d6a6-45d2-82bc-727cccce2135, invocation_id=a74f4db6-aff4-4214-bafd-d79f76271b04, invocation_timestamp=2023-01-31T07:45:20.889Z, origin=Only For Testing, session_id=a74f4db6-aff4-4214-bafd-d79f76271b04, session_timestamp=2023-01-31T07:45:20.889Z, thread-id=854, tx_id=C296FB72BA0A0159C1E69E2252EE5E2DD886ECAB238CBDD3F84AAA2378BCB997}
[INFO ] 2023-01-31T07:45:22,182Z [Mock network] corda.flow. - Recording transaction locally. {actor_id=Only For Testing, actor_owning_identity=O=Mock Company 1, L=London, C=GB, actor_store_id=TEST, fiber-id=10000028, flow-id=fc4bcd87-d6a6-45d2-82bc-727cccce2135, invocation_id=a74f4db6-aff4-4214-bafd-d79f76271b04, invocation_timestamp=2023-01-31T07:45:20.889Z, origin=Only For Testing, session_id=a74f4db6-aff4-4214-bafd-d79f76271b04, session_timestamp=2023-01-31T07:45:20.889Z, thread-id=854, tx_id=C296FB72BA0A0159C1E69E2252EE5E2DD886ECAB238CBDD3F84AAA2378BCB997}
[INFO ] 2023-01-31T07:45:22,189Z [Mock network] corda.flow. - Recorded transaction locally successfully. {actor_id=Only For Testing, actor_owning_identity=O=Mock Company 1, L=London, C=GB, actor_store_id=TEST, fiber-id=10000028, flow-id=fc4bcd87-d6a6-45d2-82bc-727cccce2135, invocation_id=a74f4db6-aff4-4214-bafd-d79f76271b04, invocation_timestamp=2023-01-31T07:45:20.889Z, origin=Only For Testing, session_id=a74f4db6-aff4-4214-bafd-d79f76271b04, session_timestamp=2023-01-31T07:45:20.889Z, thread-id=854, tx_id=C296FB72BA0A0159C1E69E2252EE5E2DD886ECAB238CBDD3F84AAA2378BCB997}
[INFO ] 2023-01-31T07:45:22,293Z [Mock network] corda.flow. - Received transaction acknowledgement request from party O=Mock Company 1, L=London, C=GB. {fiber-id=10000030, flow-id=8ba1c867-1dce-4141-bcd2-96a5ea29837b, invocation_id=b27dd1ef-57b6-4e72-bf0a-3af1f02b273b, invocation_timestamp=2023-01-31T07:45:21.341Z, origin=O=Mock Company 1, L=London, C=GB, session_id=b27dd1ef-57b6-4e72-bf0a-3af1f02b273b, session_timestamp=2023-01-31T07:45:21.341Z, thread-id=854, tx_id=C296FB72BA0A0159C1E69E2252EE5E2DD886ECAB238CBDD3F84AAA2378BCB997}
[INFO ] 2023-01-31T07:45:22,299Z [Mock network] corda.flow. - Transaction dependencies resolution completed. {fiber-id=10000030, flow-id=8ba1c867-1dce-4141-bcd2-96a5ea29837b, invocation_id=b27dd1ef-57b6-4e72-bf0a-3af1f02b273b, invocation_timestamp=2023-01-31T07:45:21.341Z, origin=O=Mock Company 1, L=London, C=GB, session_id=b27dd1ef-57b6-4e72-bf0a-3af1f02b273b, session_timestamp=2023-01-31T07:45:21.341Z, thread-id=854, tx_id=C296FB72BA0A0159C1E69E2252EE5E2DD886ECAB238CBDD3F84AAA2378BCB997}
[INFO ] 2023-01-31T07:45:22,305Z [Mock network] corda.flow. - Successfully received fully signed tx. Sending it to the vault for processing. {fiber-id=10000030, flow-id=8ba1c867-1dce-4141-bcd2-96a5ea29837b, invocation_id=b27dd1ef-57b6-4e72-bf0a-3af1f02b273b, invocation_timestamp=2023-01-31T07:45:21.341Z, origin=O=Mock Company 1, L=London, C=GB, session_id=b27dd1ef-57b6-4e72-bf0a-3af1f02b273b, session_timestamp=2023-01-31T07:45:21.341Z, thread-id=854, tx_id=C296FB72BA0A0159C1E69E2252EE5E2DD886ECAB238CBDD3F84AAA2378BCB997}
[WARN ] 2023-01-31T07:45:22,313Z [Mock network] persistence.AbstractPartyToX500NameAsStringConverter. - Identity service unable to resolve AbstractParty: Anonymous(DL54sWN1ep5VDx9uLAPXdYArwasAYtVEJ4mEvkgYBJbvD4) {fiber-id=10000030, flow-id=8ba1c867-1dce-4141-bcd2-96a5ea29837b, invocation_id=b27dd1ef-57b6-4e72-bf0a-3af1f02b273b, invocation_timestamp=2023-01-31T07:45:21.341Z, origin=O=Mock Company 1, L=London, C=GB, session_id=b27dd1ef-57b6-4e72-bf0a-3af1f02b273b, session_timestamp=2023-01-31T07:45:21.341Z, thread-id=854, tx_id=C296FB72BA0A0159C1E69E2252EE5E2DD886ECAB238CBDD3F84AAA2378BCB997}
[INFO ] 2023-01-31T07:45:22,314Z [Mock network] corda.flow. - Successfully recorded received transaction locally. {fiber-id=10000030, flow-id=8ba1c867-1dce-4141-bcd2-96a5ea29837b, invocation_id=b27dd1ef-57b6-4e72-bf0a-3af1f02b273b, invocation_timestamp=2023-01-31T07:45:21.341Z, origin=O=Mock Company 1, L=London, C=GB, session_id=b27dd1ef-57b6-4e72-bf0a-3af1f02b273b, session_timestamp=2023-01-31T07:45:21.341Z, thread-id=854, tx_id=C296FB72BA0A0159C1E69E2252EE5E2DD886ECAB238CBDD3F84AAA2378BCB997}
[INFO ] 2023-01-31T07:45:22,321Z [Mock network] corda.flow. - Party O=Mock Company 3, L=London, C=GB received the transaction. {actor_id=Only For Testing, actor_owning_identity=O=Mock Company 1, L=London, C=GB, actor_store_id=TEST, fiber-id=10000028, flow-id=fc4bcd87-d6a6-45d2-82bc-727cccce2135, invocation_id=a74f4db6-aff4-4214-bafd-d79f76271b04, invocation_timestamp=2023-01-31T07:45:20.889Z, origin=Only For Testing, session_id=a74f4db6-aff4-4214-bafd-d79f76271b04, session_timestamp=2023-01-31T07:45:20.889Z, thread-id=854, tx_id=C296FB72BA0A0159C1E69E2252EE5E2DD886ECAB238CBDD3F84AAA2378BCB997}
[INFO ] 2023-01-31T07:45:22,321Z [Mock network] corda.flow. - All parties received the transaction successfully. {actor_id=Only For Testing, actor_owning_identity=O=Mock Company 1, L=London, C=GB, actor_store_id=TEST, fiber-id=10000028, flow-id=fc4bcd87-d6a6-45d2-82bc-727cccce2135, invocation_id=a74f4db6-aff4-4214-bafd-d79f76271b04, invocation_timestamp=2023-01-31T07:45:20.889Z, origin=Only For Testing, session_id=a74f4db6-aff4-4214-bafd-d79f76271b04, session_timestamp=2023-01-31T07:45:20.889Z, thread-id=854, tx_id=C296FB72BA0A0159C1E69E2252EE5E2DD886ECAB238CBDD3F84AAA2378BCB997}
[INFO ] 2023-01-31T07:45:22,349Z [Test worker] persistence.CordaPersistence. - Closing HikariDataSource (HikariPool-1) {}
[INFO ] 2023-01-31T07:45:22,369Z [Test worker] internal.MockNodeMessagingService. - Status change to false {}
[INFO ] 2023-01-31T07:45:22,369Z [Test worker] internal.InternalMockNetwork$MockNode. - MessagingService active change to: false {}
[INFO ] 2023-01-31T07:45:22,377Z [Test worker] persistence.CordaPersistence. - Closing HikariDataSource (HikariPool-2) {}
[INFO ] 2023-01-31T07:45:22,395Z [Test worker] internal.MockNodeMessagingService. - Status change to false {}
[INFO ] 2023-01-31T07:45:22,395Z [Test worker] internal.InternalMockNetwork$MockNode. - MessagingService active change to: false {}
[INFO ] 2023-01-31T07:45:22,396Z [Test worker] persistence.CordaPersistence. - Closing HikariDataSource (HikariPool-3) {}
[INFO ] 2023-01-31T07:45:22,413Z [Test worker] internal.MockNodeMessagingService. - Status change to false {}
[INFO ] 2023-01-31T07:45:22,413Z [Test worker] internal.InternalMockNetwork$MockNode. - MessagingService active change to: false {}
[INFO ] 2023-01-31T07:45:22,414Z [Test worker] persistence.CordaPersistence. - Closing HikariDataSource (HikariPool-4) {}
[INFO ] 2023-01-31T07:45:22,427Z [Test worker] internal.MockNodeMessagingService. - Status change to false {}
[INFO ] 2023-01-31T07:45:22,427Z [Test worker] internal.InternalMockNetwork$MockNode. - MessagingService active change to: false {}
[INFO ] 2023-01-31T09:10:23,830Z [Test worker] internal.TestCordappImpl. - Generating CorDapp jar from local project in /Users/peter.li/Desktop/obligation-cordapp/workflows ... {}
[INFO ] 2023-01-31T09:10:24,033Z [Connection worker] internal.TestCordappImpl. - Build {}
[INFO ] 2023-01-31T09:10:25,638Z [Connection worker] internal.TestCordappImpl. - Starting Gradle Daemon {}
[INFO ] 2023-01-31T09:10:26,467Z [Connection worker] internal.TestCordappImpl. - Connecting to Gradle Daemon {}
[INFO ] 2023-01-31T09:10:26,478Z [Connection worker] internal.TestCordappImpl. - Starting Gradle Daemon {}
[INFO ] 2023-01-31T09:10:26,479Z [Connection worker] internal.TestCordappImpl. - Build {}
[INFO ] 2023-01-31T09:10:26,991Z [Connection worker] internal.TestCordappImpl. - Run build {}
[INFO ] 2023-01-31T09:10:27,012Z [Connection worker] internal.TestCordappImpl. - Evaluate settings {}
[INFO ] 2023-01-31T09:10:27,469Z [Connection worker] internal.TestCordappImpl. - Run build {}
[INFO ] 2023-01-31T09:10:27,469Z [Connection worker] internal.TestCordappImpl. - Configure build {}
[INFO ] 2023-01-31T09:10:27,469Z [Connection worker] internal.TestCordappImpl. - Load projects {}
[INFO ] 2023-01-31T09:10:27,619Z [Connection worker] internal.TestCordappImpl. - Configure build {}
[INFO ] 2023-01-31T09:10:27,629Z [Connection worker] internal.TestCordappImpl. - Configure project : {}
[INFO ] 2023-01-31T09:10:28,123Z [Connection worker] internal.TestCordappImpl. - Resolve dependencies of :classpath {}
[INFO ] 2023-01-31T09:10:28,520Z [Connection worker] internal.TestCordappImpl. - Configure project : {}
[INFO ] 2023-01-31T09:10:28,520Z [Connection worker] internal.TestCordappImpl. - Resolve files of :classpath {}
[INFO ] 2023-01-31T09:10:28,552Z [Connection worker] internal.TestCordappImpl. - Configure project : {}
[INFO ] 2023-01-31T09:10:28,553Z [Connection worker] internal.TestCordappImpl. - Resolve files of :classpath {}
[INFO ] 2023-01-31T09:10:28,553Z [Connection worker] internal.TestCordappImpl. - Configure project : {}
[INFO ] 2023-01-31T09:10:29,812Z [Connection worker] internal.TestCordappImpl. - Configure build {}
[INFO ] 2023-01-31T09:10:29,812Z [Connection worker] internal.TestCordappImpl. - Configure project :clients {}
[INFO ] 2023-01-31T09:10:30,009Z [Connection worker] internal.TestCordappImpl. - Configure build {}
[INFO ] 2023-01-31T09:10:30,009Z [Connection worker] internal.TestCordappImpl. - Configure project :contracts {}
[INFO ] 2023-01-31T09:10:30,057Z [Connection worker] internal.TestCordappImpl. - Configure build {}
[INFO ] 2023-01-31T09:10:30,057Z [Connection worker] internal.TestCordappImpl. - Configure project :workflows {}
[INFO ] 2023-01-31T09:10:30,200Z [Connection worker] internal.TestCordappImpl. - Configure build {}
[INFO ] 2023-01-31T09:10:30,200Z [Connection worker] internal.TestCordappImpl. - Run build {}
[INFO ] 2023-01-31T09:10:30,287Z [Connection worker] internal.TestCordappImpl. - Resolve dependencies of :workflows:kotlinCompilerClasspath {}
[INFO ] 2023-01-31T09:10:30,297Z [Connection worker] internal.TestCordappImpl. - Run build {}
[INFO ] 2023-01-31T09:10:30,297Z [Connection worker] internal.TestCordappImpl. - Resolve files of :workflows:kotlinCompilerClasspath {}
[INFO ] 2023-01-31T09:10:30,298Z [Connection worker] internal.TestCordappImpl. - Run build {}
[INFO ] 2023-01-31T09:10:30,310Z [Connection worker] internal.TestCordappImpl. - Resolve dependencies of :contracts:kotlinCompilerClasspath {}
[INFO ] 2023-01-31T09:10:30,320Z [Connection worker] internal.TestCordappImpl. - Run build {}
[INFO ] 2023-01-31T09:10:30,321Z [Connection worker] internal.TestCordappImpl. - Resolve files of :contracts:kotlinCompilerClasspath {}
[INFO ] 2023-01-31T09:10:30,321Z [Connection worker] internal.TestCordappImpl. - Run build {}
[INFO ] 2023-01-31T09:10:30,321Z [Connection worker] internal.TestCordappImpl. - Run tasks {}
[INFO ] 2023-01-31T09:10:30,356Z [Connection worker] internal.TestCordappImpl. - Task :contracts:compileKotlin {}
[INFO ] 2023-01-31T09:10:30,367Z [Connection worker] internal.TestCordappImpl. - Resolve files of :contracts:kotlinCompilerClasspath {}
[INFO ] 2023-01-31T09:10:30,367Z [Connection worker] internal.TestCordappImpl. - Task :contracts:compileKotlin {}
[INFO ] 2023-01-31T09:10:30,436Z [Connection worker] internal.TestCordappImpl. - Resolve dependencies of :contracts:kotlinCompilerPluginClasspath {}
[INFO ] 2023-01-31T09:10:30,436Z [Connection worker] internal.TestCordappImpl. - Task :contracts:compileKotlin {}
[INFO ] 2023-01-31T09:10:30,436Z [Connection worker] internal.TestCordappImpl. - Resolve files of :contracts:kotlinCompilerPluginClasspath {}
[INFO ] 2023-01-31T09:10:30,436Z [Connection worker] internal.TestCordappImpl. - Task :contracts:compileKotlin {}
[INFO ] 2023-01-31T09:10:30,436Z [Connection worker] internal.TestCordappImpl. - Resolve dependencies of :contracts:compileClasspath {}
[INFO ] 2023-01-31T09:10:30,511Z [Connection worker] internal.TestCordappImpl. - Task :contracts:compileKotlin {}
[INFO ] 2023-01-31T09:10:30,511Z [Connection worker] internal.TestCordappImpl. - Resolve files of :contracts:compileClasspath {}
[INFO ] 2023-01-31T09:10:30,521Z [Connection worker] internal.TestCordappImpl. - Task :contracts:compileKotlin {}
[INFO ] 2023-01-31T09:10:30,900Z [Connection worker] internal.TestCordappImpl. - Resolve files of :contracts:compileClasspath {}
[INFO ] 2023-01-31T09:10:30,901Z [Connection worker] internal.TestCordappImpl. - Task :contracts:compileKotlin {}
[INFO ] 2023-01-31T09:10:30,912Z [Connection worker] internal.TestCordappImpl. - Resolve files of :contracts:kotlinCompilerPluginClasspath {}
[INFO ] 2023-01-31T09:10:30,912Z [Connection worker] internal.TestCordappImpl. - Task :contracts:compileKotlin {}
[INFO ] 2023-01-31T09:10:30,945Z [Connection worker] internal.TestCordappImpl. - Run tasks {}
[INFO ] 2023-01-31T09:10:30,945Z [Connection worker] internal.TestCordappImpl. - Task :contracts:compileJava {}
[INFO ] 2023-01-31T09:10:30,958Z [Connection worker] internal.TestCordappImpl. - Run tasks {}
[INFO ] 2023-01-31T09:10:30,958Z [Connection worker] internal.TestCordappImpl. - Task :contracts:processResources {}
[INFO ] 2023-01-31T09:10:30,958Z [Connection worker] internal.TestCordappImpl. - Run tasks {}
[INFO ] 2023-01-31T09:10:30,958Z [Connection worker] internal.TestCordappImpl. - Task :contracts:classes {}
[INFO ] 2023-01-31T09:10:30,958Z [Connection worker] internal.TestCordappImpl. - Run tasks {}
[INFO ] 2023-01-31T09:10:30,958Z [Connection worker] internal.TestCordappImpl. - Task :contracts:configureCordappFatJar {}
[INFO ] 2023-01-31T09:10:30,969Z [Connection worker] internal.TestCordappImpl. - Resolve dependencies of :contracts:runtime {}
[INFO ] 2023-01-31T09:10:30,991Z [Connection worker] internal.TestCordappImpl. - Task :contracts:configureCordappFatJar {}
[INFO ] 2023-01-31T09:10:30,991Z [Connection worker] internal.TestCordappImpl. - Resolve files of :contracts:runtime {}
[INFO ] 2023-01-31T09:10:31,001Z [Connection worker] internal.TestCordappImpl. - Task :contracts:configureCordappFatJar {}
[INFO ] 2023-01-31T09:10:31,002Z [Connection worker] internal.TestCordappImpl. - Resolve files of :contracts:runtime {}
[INFO ] 2023-01-31T09:10:31,002Z [Connection worker] internal.TestCordappImpl. - Task :contracts:configureCordappFatJar {}
[INFO ] 2023-01-31T09:10:31,002Z [Connection worker] internal.TestCordappImpl. - Resolve files of :contracts:runtime {}
[INFO ] 2023-01-31T09:10:31,002Z [Connection worker] internal.TestCordappImpl. - Task :contracts:configureCordappFatJar {}
[INFO ] 2023-01-31T09:10:31,002Z [Connection worker] internal.TestCordappImpl. - Resolve files of :contracts:runtime {}
[INFO ] 2023-01-31T09:10:31,002Z [Connection worker] internal.TestCordappImpl. - Task :contracts:configureCordappFatJar {}
[INFO ] 2023-01-31T09:10:31,002Z [Connection worker] internal.TestCordappImpl. - Resolve files of :contracts:runtime {}
[INFO ] 2023-01-31T09:10:31,002Z [Connection worker] internal.TestCordappImpl. - Task :contracts:configureCordappFatJar {}
[INFO ] 2023-01-31T09:10:31,002Z [Connection worker] internal.TestCordappImpl. - Run tasks {}
[INFO ] 2023-01-31T09:10:31,002Z [Connection worker] internal.TestCordappImpl. - Task :contracts:inspectClassesForKotlinIC {}
[INFO ] 2023-01-31T09:10:31,012Z [Connection worker] internal.TestCordappImpl. - Run tasks {}
[INFO ] 2023-01-31T09:10:31,013Z [Connection worker] internal.TestCordappImpl. - Task :contracts:jar {}
[INFO ] 2023-01-31T09:10:31,026Z [Connection worker] internal.TestCordappImpl. - Run tasks {}
[INFO ] 2023-01-31T09:10:31,026Z [Connection worker] internal.TestCordappImpl. - Task :workflows:compileKotlin {}
[INFO ] 2023-01-31T09:10:31,026Z [Connection worker] internal.TestCordappImpl. - Resolve files of :workflows:kotlinCompilerClasspath {}
[INFO ] 2023-01-31T09:10:31,026Z [Connection worker] internal.TestCordappImpl. - Task :workflows:compileKotlin {}
[INFO ] 2023-01-31T09:10:31,037Z [Connection worker] internal.TestCordappImpl. - Resolve dependencies of :workflows:kotlinCompilerPluginClasspath {}
[INFO ] 2023-01-31T09:10:31,050Z [Connection worker] internal.TestCordappImpl. - Task :workflows:compileKotlin {}
[INFO ] 2023-01-31T09:10:31,050Z [Connection worker] internal.TestCordappImpl. - Resolve files of :workflows:kotlinCompilerPluginClasspath {}
[INFO ] 2023-01-31T09:10:31,050Z [Connection worker] internal.TestCordappImpl. - Task :workflows:compileKotlin {}
[INFO ] 2023-01-31T09:10:31,050Z [Connection worker] internal.TestCordappImpl. - Resolve dependencies of :workflows:compileClasspath {}
[INFO ] 2023-01-31T09:10:31,062Z [Connection worker] internal.TestCordappImpl. - Task :workflows:compileKotlin {}
[INFO ] 2023-01-31T09:10:31,062Z [Connection worker] internal.TestCordappImpl. - Resolve files of :workflows:compileClasspath {}
[INFO ] 2023-01-31T09:10:31,075Z [Connection worker] internal.TestCordappImpl. - Task :workflows:compileKotlin {}
[INFO ] 2023-01-31T09:10:31,075Z [Connection worker] internal.TestCordappImpl. - Resolve files of :workflows:compileClasspath {}
[INFO ] 2023-01-31T09:10:31,075Z [Connection worker] internal.TestCordappImpl. - Task :workflows:compileKotlin {}
[INFO ] 2023-01-31T09:10:31,075Z [Connection worker] internal.TestCordappImpl. - Resolve files of :workflows:kotlinCompilerPluginClasspath {}
[INFO ] 2023-01-31T09:10:31,075Z [Connection worker] internal.TestCordappImpl. - Task :workflows:compileKotlin {}
[INFO ] 2023-01-31T09:10:31,075Z [Connection worker] internal.TestCordappImpl. - Run tasks {}
[INFO ] 2023-01-31T09:10:31,091Z [Connection worker] internal.TestCordappImpl. - Task :workflows:compileJava {}
[INFO ] 2023-01-31T09:10:31,091Z [Connection worker] internal.TestCordappImpl. - Run tasks {}
[INFO ] 2023-01-31T09:10:31,091Z [Connection worker] internal.TestCordappImpl. - Task :workflows:processResources {}
[INFO ] 2023-01-31T09:10:31,091Z [Connection worker] internal.TestCordappImpl. - Run tasks {}
[INFO ] 2023-01-31T09:10:31,091Z [Connection worker] internal.TestCordappImpl. - Task :workflows:classes {}
[INFO ] 2023-01-31T09:10:31,091Z [Connection worker] internal.TestCordappImpl. - Run tasks {}
[INFO ] 2023-01-31T09:10:31,091Z [Connection worker] internal.TestCordappImpl. - Task :workflows:configureCordappFatJar {}
[INFO ] 2023-01-31T09:10:31,096Z [Connection worker] internal.TestCordappImpl. - Resolve dependencies of :workflows:runtime {}
[INFO ] 2023-01-31T09:10:31,119Z [Connection worker] internal.TestCordappImpl. - Task :workflows:configureCordappFatJar {}
[INFO ] 2023-01-31T09:10:31,119Z [Connection worker] internal.TestCordappImpl. - Resolve files of :workflows:runtime {}
[INFO ] 2023-01-31T09:10:31,119Z [Connection worker] internal.TestCordappImpl. - Task :workflows:configureCordappFatJar {}
[INFO ] 2023-01-31T09:10:31,119Z [Connection worker] internal.TestCordappImpl. - Resolve files of :workflows:runtime {}
[INFO ] 2023-01-31T09:10:31,119Z [Connection worker] internal.TestCordappImpl. - Task :workflows:configureCordappFatJar {}
[INFO ] 2023-01-31T09:10:31,119Z [Connection worker] internal.TestCordappImpl. - Resolve files of :workflows:runtime {}
[INFO ] 2023-01-31T09:10:31,119Z [Connection worker] internal.TestCordappImpl. - Task :workflows:configureCordappFatJar {}
[INFO ] 2023-01-31T09:10:31,119Z [Connection worker] internal.TestCordappImpl. - Resolve files of :workflows:runtime {}
[INFO ] 2023-01-31T09:10:31,119Z [Connection worker] internal.TestCordappImpl. - Task :workflows:configureCordappFatJar {}
[INFO ] 2023-01-31T09:10:31,119Z [Connection worker] internal.TestCordappImpl. - Resolve files of :workflows:runtime {}
[INFO ] 2023-01-31T09:10:31,119Z [Connection worker] internal.TestCordappImpl. - Task :workflows:configureCordappFatJar {}
[INFO ] 2023-01-31T09:10:31,119Z [Connection worker] internal.TestCordappImpl. - Resolve files of :workflows:runtime {}
[INFO ] 2023-01-31T09:10:31,119Z [Connection worker] internal.TestCordappImpl. - Task :workflows:configureCordappFatJar {}
[INFO ] 2023-01-31T09:10:31,119Z [Connection worker] internal.TestCordappImpl. - Resolve files of :workflows:runtime {}
[INFO ] 2023-01-31T09:10:31,119Z [Connection worker] internal.TestCordappImpl. - Task :workflows:configureCordappFatJar {}
[INFO ] 2023-01-31T09:10:31,119Z [Connection worker] internal.TestCordappImpl. - Resolve files of :workflows:runtime {}
[INFO ] 2023-01-31T09:10:31,120Z [Connection worker] internal.TestCordappImpl. - Task :workflows:configureCordappFatJar {}
[INFO ] 2023-01-31T09:10:31,120Z [Connection worker] internal.TestCordappImpl. - Run tasks {}
[INFO ] 2023-01-31T09:10:31,120Z [Connection worker] internal.TestCordappImpl. - Task :workflows:inspectClassesForKotlinIC {}
[INFO ] 2023-01-31T09:10:31,150Z [Connection worker] internal.TestCordappImpl. - Run tasks {}
[INFO ] 2023-01-31T09:10:31,151Z [Connection worker] internal.TestCordappImpl. - Task :workflows:jar {}
[INFO ] 2023-01-31T09:10:32,817Z [Connection worker] internal.TestCordappImpl. - Run tasks {}
[INFO ] 2023-01-31T09:10:32,829Z [Connection worker] internal.TestCordappImpl. - Run build {}
[INFO ] 2023-01-31T09:10:32,829Z [Connection worker] internal.TestCordappImpl. - Build model 'java.lang.Void' for project ':workflows' {}
[INFO ] 2023-01-31T09:10:32,829Z [Connection worker] internal.TestCordappImpl. - Run build {}
[INFO ] 2023-01-31T09:10:32,854Z [Connection worker] internal.TestCordappImpl. - Build {}
[INFO ] 2023-01-31T09:10:32,874Z [Connection worker] internal.TestCordappImpl. - Deleting unused version-specific caches in /Users/peter.li/Desktop/obligation-cordapp/.gradle {}
[INFO ] 2023-01-31T09:10:32,874Z [Connection worker] internal.TestCordappImpl. - Build {}
[INFO ] 2023-01-31T09:10:32,899Z [Connection worker] internal.TestCordappImpl. -  {}
[INFO ] 2023-01-31T09:10:37,819Z [Test worker] cordapp.JarScanningCordappLoader. - Looking for CorDapps in [build/mock-network/20230131-091022.933-02061F336C16C302/nodes/0/cordapps] {}
[INFO ] 2023-01-31T09:10:37,827Z [Test worker] cordapp.JarScanningCordappLoader. - Loading CorDapps from RestrictedURL(url=file:/Users/peter.li/Desktop/obligation-cordapp/workflows/build/mock-network/20230131-091022.933-02061F336C16C302/nodes/0/cordapps/accounts-contracts-1.0.jar, rootPackageName=null), RestrictedURL(url=file:/Users/peter.li/Desktop/obligation-cordapp/workflows/build/mock-network/20230131-091022.933-02061F336C16C302/nodes/0/cordapps/accounts-workflows-1.0.jar, rootPackageName=null), RestrictedURL(url=file:/Users/peter.li/Desktop/obligation-cordapp/workflows/build/mock-network/20230131-091022.933-02061F336C16C302/nodes/0/cordapps/corda-finance-contracts-4.9.jar, rootPackageName=null), RestrictedURL(url=file:/Users/peter.li/Desktop/obligation-cordapp/workflows/build/mock-network/20230131-091022.933-02061F336C16C302/nodes/0/cordapps/contracts-1.0.jar, rootPackageName=null), RestrictedURL(url=file:/Users/peter.li/Desktop/obligation-cordapp/workflows/build/mock-network/20230131-091022.933-02061F336C16C302/nodes/0/cordapps/workflows-1.0.jar, rootPackageName=null) {}
[INFO ] 2023-01-31T09:10:37,843Z [Test worker] cordapp.JarScanningCordappLoader. - Scanning CorDapp in file:/Users/peter.li/Desktop/obligation-cordapp/workflows/build/mock-network/20230131-091022.933-02061F336C16C302/nodes/0/cordapps/accounts-contracts-1.0.jar {}
[INFO ] 2023-01-31T09:10:37,957Z [Test worker] cordapp.JarScanningCordappLoader. - Scanning CorDapp in file:/Users/peter.li/Desktop/obligation-cordapp/workflows/build/mock-network/20230131-091022.933-02061F336C16C302/nodes/0/cordapps/accounts-workflows-1.0.jar {}
[INFO ] 2023-01-31T09:10:38,138Z [Test worker] cordapp.JarScanningCordappLoader. - Scanning CorDapp in file:/Users/peter.li/Desktop/obligation-cordapp/workflows/build/mock-network/20230131-091022.933-02061F336C16C302/nodes/0/cordapps/corda-finance-contracts-4.9.jar {}
[INFO ] 2023-01-31T09:10:38,275Z [Test worker] cordapp.JarScanningCordappLoader. - Scanning CorDapp in file:/Users/peter.li/Desktop/obligation-cordapp/workflows/build/mock-network/20230131-091022.933-02061F336C16C302/nodes/0/cordapps/contracts-1.0.jar {}
[INFO ] 2023-01-31T09:10:38,289Z [Test worker] cordapp.JarScanningCordappLoader. - Scanning CorDapp in file:/Users/peter.li/Desktop/obligation-cordapp/workflows/build/mock-network/20230131-091022.933-02061F336C16C302/nodes/0/cordapps/workflows-1.0.jar {}
[INFO ] 2023-01-31T09:10:39,543Z [Test worker] internal.InternalMockNetwork$MockNode. - MessagingService active change to: false {}
[INFO ] 2023-01-31T09:10:39,794Z [Test worker] internal.InternalMockNetwork$MockNode. - Flow external operation executor has a max of 2 threads {}
[INFO ] 2023-01-31T09:10:39,857Z [Test worker] internal.InternalMockNetwork$MockNode. - Node starting up ... {}
[INFO ] 2023-01-31T09:10:39,893Z [Test worker] internal.KeyStoreHandler. - Loaded trusted root certificate: DL7fwxLm5xbiMD8adUuYTsPZHAict46Ng4w6RNcySt5vAw, alias: cordarootca {}
[INFO ] 2023-01-31T09:10:39,897Z [Test worker] internal.KeyStoreHandler. - Loaded node identity key: DL2zKFNTAN9yVze6wgwgqH47s271qgsyFusNbrJEMfXEiS, alias: identity-private-key {}
[INFO ] 2023-01-31T09:10:40,022Z [Test worker] internal.NodeFlowManager. - Registered com.r3.corda.lib.accounts.workflows.flows.ShareStateAndSyncAccounts to initiate com.r3.corda.lib.accounts.workflows.flows.ReceiveStateAndSyncAccounts (version 1) {}
[INFO ] 2023-01-31T09:10:40,023Z [Test worker] internal.NodeFlowManager. - Registered com.r3.corda.lib.accounts.workflows.flows.ShareStateWithAccount to initiate com.r3.corda.lib.accounts.workflows.flows.ReceiveStateForAccount (version 1) {}
[INFO ] 2023-01-31T09:10:40,023Z [Test worker] internal.NodeFlowManager. - Registered com.r3.corda.lib.accounts.workflows.flows.RequestAccountInfo to initiate com.r3.corda.lib.accounts.workflows.flows.RequestAccountInfoHandler (version 1) {}
[INFO ] 2023-01-31T09:10:40,024Z [Test worker] internal.NodeFlowManager. - Registered com.r3.corda.lib.accounts.workflows.flows.RequestKeyForAccount to initiate com.r3.corda.lib.accounts.workflows.flows.SendKeyForAccount (version 1) {}
[INFO ] 2023-01-31T09:10:40,024Z [Test worker] internal.NodeFlowManager. - Registered com.r3.corda.lib.accounts.workflows.flows.ShareAccountInfo to initiate com.r3.corda.lib.accounts.workflows.flows.ShareAccountInfoHandler (version 1) {}
[INFO ] 2023-01-31T09:10:40,025Z [Test worker] internal.NodeFlowManager. - Registered net.corda.samples.obligation.flows.IOUIssueFlow to initiate net.corda.samples.obligation.flows.IOUIssueFlowResponder (version 1) {}
[INFO ] 2023-01-31T09:10:40,026Z [Test worker] internal.NodeFlowManager. - Registered net.corda.samples.obligation.flows.IOUSettleFlow to initiate net.corda.samples.obligation.flows.IOUSettleFlowResponder (version 1) {}
[INFO ] 2023-01-31T09:10:40,026Z [Test worker] internal.NodeFlowManager. - Registered net.corda.samples.obligation.flows.IOUTransferFlow to initiate net.corda.samples.obligation.flows.IOUTransferFlowResponder (version 1) {}
[INFO ] 2023-01-31T09:10:40,118Z [Test worker] internal.InternalMockNetwork$MockNode. - Loaded network parameters: NetworkParameters {
      minimumPlatformVersion=4
      notaries=[NotaryInfo(identity=O=Notary, L=London, C=GB, validating=true)]
      maxMessageSize=10485760
      maxTransactionSize=524288000
      whitelistedContractImplementations {
        
      }
      eventHorizon=PT720H
      packageOwnership {
        
      }
      modifiedTime=2023-01-31T09:10:22.635Z
      epoch=1
  } {}
[INFO ] 2023-01-31T09:10:45,529Z [Test worker] internal.InternalMockNetwork$MockNode. - Connected to H2 database. {}
[INFO ] 2023-01-31T09:10:45,596Z [Test worker] persistence.HibernateConfiguration. - Init HibernateConfiguration for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1), AccountsContractsSchemaV1(name=com.r3.corda.lib.accounts.contracts.internal.schemas.AccountsContractsSchema, version=1), AccountsWorkflowsSchemaV1(name=com.r3.corda.lib.accounts.workflows.internal.schemas.AccountsWorkflowsSchema, version=1), CashSchemaV1(name=net.corda.finance.schemas.CashSchema, version=1), CommercialPaperSchemaV1(name=net.corda.finance.schemas.CommercialPaperSchema, version=1), JPANotarySchemaV1(name=net.corda.notary.jpa.JPANotarySchema, version=1)] {}
[INFO ] 2023-01-31T09:10:45,600Z [Test worker] factory.BaseSessionFactoryFactory. - Creating session factory for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1), AccountsContractsSchemaV1(name=com.r3.corda.lib.accounts.contracts.internal.schemas.AccountsContractsSchema, version=1), AccountsWorkflowsSchemaV1(name=com.r3.corda.lib.accounts.workflows.internal.schemas.AccountsWorkflowsSchema, version=1), CashSchemaV1(name=net.corda.finance.schemas.CashSchema, version=1), CommercialPaperSchemaV1(name=net.corda.finance.schemas.CommercialPaperSchema, version=1), JPANotarySchemaV1(name=net.corda.notary.jpa.JPANotarySchema, version=1)] {}
[INFO ] 2023-01-31T09:10:48,590Z [Test worker] factory.BaseSessionFactoryFactory. - Created session factory for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1), AccountsContractsSchemaV1(name=com.r3.corda.lib.accounts.contracts.internal.schemas.AccountsContractsSchema, version=1), AccountsWorkflowsSchemaV1(name=com.r3.corda.lib.accounts.workflows.internal.schemas.AccountsWorkflowsSchema, version=1), CashSchemaV1(name=net.corda.finance.schemas.CashSchema, version=1), CommercialPaperSchemaV1(name=net.corda.finance.schemas.CommercialPaperSchema, version=1), JPANotarySchemaV1(name=net.corda.notary.jpa.JPANotarySchema, version=1)] {}
[INFO ] 2023-01-31T09:10:48,899Z [Test worker] internal.InternalMockNetwork$MockNode. - Node-info has changed so submitting update. Old node-info was null {}
[INFO ] 2023-01-31T09:10:48,908Z [Test worker] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Notary, L=London, C=GB], platformVersion=11, serial=1675156248899), owningKey=DL2zKFNTAN9yVze6wgwgqH47s271qgsyFusNbrJEMfXEiS {}
[INFO ] 2023-01-31T09:10:48,908Z [Test worker] network.PersistentNetworkMapCache. - No previous node found for O=Notary, L=London, C=GB {}
[INFO ] 2023-01-31T09:10:49,072Z [Test worker] internal.InternalMockNetwork$MockNode. - New node-info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Notary, L=London, C=GB], platformVersion=11, serial=1675156248899) {}
[INFO ] 2023-01-31T09:10:49,134Z [Test worker] network.NetworkMapUpdater. - Auto-accept enabled for network parameter changes which modify only: [epoch, modifiedTime, packageOwnership, whitelistedContractImplementations] {}
[INFO ] 2023-01-31T09:10:49,169Z [Test worker] internal.MockNodeMessagingService. - Status change to true {}
[INFO ] 2023-01-31T09:10:49,171Z [Test worker] internal.InternalMockNetwork$MockNode. - MessagingService active change to: true {}
[INFO ] 2023-01-31T09:10:49,211Z [MockNode-1-2] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Notary, L=London, C=GB], platformVersion=11, serial=1675156248899), owningKey=DL2zKFNTAN9yVze6wgwgqH47s271qgsyFusNbrJEMfXEiS {}
[INFO ] 2023-01-31T09:10:49,211Z [MockNode-1-2] network.PersistentNetworkMapCache. - Previous node was identical to incoming one - doing nothing {}
[INFO ] 2023-01-31T09:10:49,296Z [Test worker] persistence.NodeAttachmentService. - Stored new attachment: id=D370FD972C7E07CE73F4F9B7886D226807F6B16C4EE287398B9C69384109DC14 uploader=app filename=Accounts SDK - States and Contracts {}
[INFO ] 2023-01-31T09:10:49,345Z [Test worker] persistence.NodeAttachmentService. - Stored new attachment: id=BD0C932EAF8B1FE96DCBBF275B914BCD776D14EDC8F97DCEBF7E15DA09C606AE uploader=app filename=Corda Finance Demo {}
[INFO ] 2023-01-31T09:10:49,371Z [Test worker] persistence.NodeAttachmentService. - Stored new attachment: id=8D797B45F40704FA4FD70921F5BC6E2D7B34450D345CE6788D2A87859EF63BD8 uploader=app filename=Obligation Contracts {}
[INFO ] 2023-01-31T09:10:49,386Z [Test worker] internal.InternalMockNetwork$MockNode. - Installed com.r3.corda.lib.accounts.workflows.services.KeyManagementBackedAccountService Corda service {}
[INFO ] 2023-01-31T09:10:49,387Z [Test worker] utilities.NotaryLoader. - Starting notary service: class net.corda.notary.jpa.JPANotaryService {}
[INFO ] 2023-01-31T09:10:50,254Z [Test worker] statemachine.SingleThreadedStateMachineManager. - Node ready, info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Notary, L=London, C=GB], platformVersion=11, serial=1675156248899) {}
[INFO ] 2023-01-31T09:10:50,263Z [Test worker] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Notary, L=London, C=GB], platformVersion=11, serial=1675156248899), owningKey=DL2zKFNTAN9yVze6wgwgqH47s271qgsyFusNbrJEMfXEiS {}
[INFO ] 2023-01-31T09:10:50,263Z [Test worker] network.PersistentNetworkMapCache. - Previous node was identical to incoming one - doing nothing {}
[INFO ] 2023-01-31T09:10:50,264Z [Test worker] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Notary, L=London, C=GB], platformVersion=11, serial=1675156248899), owningKey=DL2zKFNTAN9yVze6wgwgqH47s271qgsyFusNbrJEMfXEiS {}
[INFO ] 2023-01-31T09:10:50,264Z [Test worker] network.PersistentNetworkMapCache. - Previous node was identical to incoming one - doing nothing {}
[INFO ] 2023-01-31T09:10:50,279Z [Test worker] cordapp.JarScanningCordappLoader. - Looking for CorDapps in [build/mock-network/20230131-091022.933-02061F336C16C302/nodes/1/cordapps] {}
[INFO ] 2023-01-31T09:10:50,280Z [Test worker] cordapp.JarScanningCordappLoader. - Loading CorDapps from RestrictedURL(url=file:/Users/peter.li/Desktop/obligation-cordapp/workflows/build/mock-network/20230131-091022.933-02061F336C16C302/nodes/1/cordapps/accounts-contracts-1.0.jar, rootPackageName=null), RestrictedURL(url=file:/Users/peter.li/Desktop/obligation-cordapp/workflows/build/mock-network/20230131-091022.933-02061F336C16C302/nodes/1/cordapps/accounts-workflows-1.0.jar, rootPackageName=null), RestrictedURL(url=file:/Users/peter.li/Desktop/obligation-cordapp/workflows/build/mock-network/20230131-091022.933-02061F336C16C302/nodes/1/cordapps/corda-finance-contracts-4.9.jar, rootPackageName=null), RestrictedURL(url=file:/Users/peter.li/Desktop/obligation-cordapp/workflows/build/mock-network/20230131-091022.933-02061F336C16C302/nodes/1/cordapps/contracts-1.0.jar, rootPackageName=null), RestrictedURL(url=file:/Users/peter.li/Desktop/obligation-cordapp/workflows/build/mock-network/20230131-091022.933-02061F336C16C302/nodes/1/cordapps/workflows-1.0.jar, rootPackageName=null) {}
[INFO ] 2023-01-31T09:10:50,280Z [Test worker] cordapp.JarScanningCordappLoader. - Scanning CorDapp in file:/Users/peter.li/Desktop/obligation-cordapp/workflows/build/mock-network/20230131-091022.933-02061F336C16C302/nodes/1/cordapps/accounts-contracts-1.0.jar {}
[INFO ] 2023-01-31T09:10:50,304Z [Test worker] cordapp.JarScanningCordappLoader. - Scanning CorDapp in file:/Users/peter.li/Desktop/obligation-cordapp/workflows/build/mock-network/20230131-091022.933-02061F336C16C302/nodes/1/cordapps/accounts-workflows-1.0.jar {}
[INFO ] 2023-01-31T09:10:50,314Z [Test worker] cordapp.JarScanningCordappLoader. - Scanning CorDapp in file:/Users/peter.li/Desktop/obligation-cordapp/workflows/build/mock-network/20230131-091022.933-02061F336C16C302/nodes/1/cordapps/corda-finance-contracts-4.9.jar {}
[INFO ] 2023-01-31T09:10:50,330Z [Test worker] cordapp.JarScanningCordappLoader. - Scanning CorDapp in file:/Users/peter.li/Desktop/obligation-cordapp/workflows/build/mock-network/20230131-091022.933-02061F336C16C302/nodes/1/cordapps/contracts-1.0.jar {}
[INFO ] 2023-01-31T09:10:50,337Z [Test worker] cordapp.JarScanningCordappLoader. - Scanning CorDapp in file:/Users/peter.li/Desktop/obligation-cordapp/workflows/build/mock-network/20230131-091022.933-02061F336C16C302/nodes/1/cordapps/workflows-1.0.jar {}
[INFO ] 2023-01-31T09:10:50,367Z [Test worker] internal.InternalMockNetwork$MockNode. - MessagingService active change to: false {}
[INFO ] 2023-01-31T09:10:50,368Z [Test worker] internal.InternalMockNetwork$MockNode. - Flow external operation executor has a max of 2 threads {}
[INFO ] 2023-01-31T09:10:50,370Z [Test worker] internal.InternalMockNetwork$MockNode. - Node starting up ... {}
[INFO ] 2023-01-31T09:10:50,426Z [Test worker] internal.KeyStoreHandler. - Loaded trusted root certificate: DL7fwxLm5xbiMD8adUuYTsPZHAict46Ng4w6RNcySt5vAw, alias: cordarootca {}
[INFO ] 2023-01-31T09:10:50,426Z [Test worker] internal.KeyStoreHandler. - Loaded node identity key: DLFdZmAs8pUTC275mmAdpnRD8zvYBT1EFowehNKoYBMJCD, alias: identity-private-key {}
[INFO ] 2023-01-31T09:10:50,433Z [Test worker] internal.NodeFlowManager. - Registered com.r3.corda.lib.accounts.workflows.flows.ShareStateAndSyncAccounts to initiate com.r3.corda.lib.accounts.workflows.flows.ReceiveStateAndSyncAccounts (version 1) {}
[INFO ] 2023-01-31T09:10:50,433Z [Test worker] internal.NodeFlowManager. - Registered com.r3.corda.lib.accounts.workflows.flows.ShareStateWithAccount to initiate com.r3.corda.lib.accounts.workflows.flows.ReceiveStateForAccount (version 1) {}
[INFO ] 2023-01-31T09:10:50,434Z [Test worker] internal.NodeFlowManager. - Registered com.r3.corda.lib.accounts.workflows.flows.RequestAccountInfo to initiate com.r3.corda.lib.accounts.workflows.flows.RequestAccountInfoHandler (version 1) {}
[INFO ] 2023-01-31T09:10:50,434Z [Test worker] internal.NodeFlowManager. - Registered com.r3.corda.lib.accounts.workflows.flows.RequestKeyForAccount to initiate com.r3.corda.lib.accounts.workflows.flows.SendKeyForAccount (version 1) {}
[INFO ] 2023-01-31T09:10:50,434Z [Test worker] internal.NodeFlowManager. - Registered com.r3.corda.lib.accounts.workflows.flows.ShareAccountInfo to initiate com.r3.corda.lib.accounts.workflows.flows.ShareAccountInfoHandler (version 1) {}
[INFO ] 2023-01-31T09:10:50,434Z [Test worker] internal.NodeFlowManager. - Registered net.corda.samples.obligation.flows.IOUIssueFlow to initiate net.corda.samples.obligation.flows.IOUIssueFlowResponder (version 1) {}
[INFO ] 2023-01-31T09:10:50,434Z [Test worker] internal.NodeFlowManager. - Registered net.corda.samples.obligation.flows.IOUSettleFlow to initiate net.corda.samples.obligation.flows.IOUSettleFlowResponder (version 1) {}
[INFO ] 2023-01-31T09:10:50,434Z [Test worker] internal.NodeFlowManager. - Registered net.corda.samples.obligation.flows.IOUTransferFlow to initiate net.corda.samples.obligation.flows.IOUTransferFlowResponder (version 1) {}
[INFO ] 2023-01-31T09:10:50,439Z [Test worker] internal.InternalMockNetwork$MockNode. - Loaded network parameters: NetworkParameters {
      minimumPlatformVersion=4
      notaries=[NotaryInfo(identity=O=Notary, L=London, C=GB, validating=true)]
      maxMessageSize=10485760
      maxTransactionSize=524288000
      whitelistedContractImplementations {
        
      }
      eventHorizon=PT720H
      packageOwnership {
        
      }
      modifiedTime=2023-01-31T09:10:22.635Z
      epoch=1
  } {}
[INFO ] 2023-01-31T09:10:51,167Z [Test worker] internal.InternalMockNetwork$MockNode. - Connected to H2 database. {}
[INFO ] 2023-01-31T09:10:51,168Z [Test worker] persistence.HibernateConfiguration. - Init HibernateConfiguration for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1), AccountsContractsSchemaV1(name=com.r3.corda.lib.accounts.contracts.internal.schemas.AccountsContractsSchema, version=1), AccountsWorkflowsSchemaV1(name=com.r3.corda.lib.accounts.workflows.internal.schemas.AccountsWorkflowsSchema, version=1), CashSchemaV1(name=net.corda.finance.schemas.CashSchema, version=1), CommercialPaperSchemaV1(name=net.corda.finance.schemas.CommercialPaperSchema, version=1)] {}
[INFO ] 2023-01-31T09:10:51,168Z [Test worker] factory.BaseSessionFactoryFactory. - Creating session factory for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1), AccountsContractsSchemaV1(name=com.r3.corda.lib.accounts.contracts.internal.schemas.AccountsContractsSchema, version=1), AccountsWorkflowsSchemaV1(name=com.r3.corda.lib.accounts.workflows.internal.schemas.AccountsWorkflowsSchema, version=1), CashSchemaV1(name=net.corda.finance.schemas.CashSchema, version=1), CommercialPaperSchemaV1(name=net.corda.finance.schemas.CommercialPaperSchema, version=1)] {}
[INFO ] 2023-01-31T09:10:51,373Z [Test worker] factory.BaseSessionFactoryFactory. - Created session factory for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1), AccountsContractsSchemaV1(name=com.r3.corda.lib.accounts.contracts.internal.schemas.AccountsContractsSchema, version=1), AccountsWorkflowsSchemaV1(name=com.r3.corda.lib.accounts.workflows.internal.schemas.AccountsWorkflowsSchema, version=1), CashSchemaV1(name=net.corda.finance.schemas.CashSchema, version=1), CommercialPaperSchemaV1(name=net.corda.finance.schemas.CommercialPaperSchema, version=1)] {}
[INFO ] 2023-01-31T09:10:51,378Z [Test worker] internal.InternalMockNetwork$MockNode. - Node-info has changed so submitting update. Old node-info was null {}
[INFO ] 2023-01-31T09:10:51,383Z [Test worker] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 1, L=London, C=GB], platformVersion=11, serial=1675156251378), owningKey=DLFdZmAs8pUTC275mmAdpnRD8zvYBT1EFowehNKoYBMJCD {}
[INFO ] 2023-01-31T09:10:51,383Z [Test worker] network.PersistentNetworkMapCache. - No previous node found for O=Mock Company 1, L=London, C=GB {}
[INFO ] 2023-01-31T09:10:51,392Z [Test worker] internal.InternalMockNetwork$MockNode. - New node-info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 1, L=London, C=GB], platformVersion=11, serial=1675156251378) {}
[INFO ] 2023-01-31T09:10:51,404Z [Test worker] network.NetworkMapUpdater. - Auto-accept enabled for network parameter changes which modify only: [epoch, modifiedTime, packageOwnership, whitelistedContractImplementations] {}
[INFO ] 2023-01-31T09:10:51,407Z [Test worker] internal.MockNodeMessagingService. - Status change to true {}
[INFO ] 2023-01-31T09:10:51,407Z [Test worker] internal.InternalMockNetwork$MockNode. - MessagingService active change to: true {}
[INFO ] 2023-01-31T09:10:51,421Z [MockNode-2-2] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 1, L=London, C=GB], platformVersion=11, serial=1675156251378), owningKey=DLFdZmAs8pUTC275mmAdpnRD8zvYBT1EFowehNKoYBMJCD {}
[INFO ] 2023-01-31T09:10:51,421Z [MockNode-2-2] network.PersistentNetworkMapCache. - Previous node was identical to incoming one - doing nothing {}
[INFO ] 2023-01-31T09:10:51,449Z [Test worker] persistence.NodeAttachmentService. - Stored new attachment: id=D370FD972C7E07CE73F4F9B7886D226807F6B16C4EE287398B9C69384109DC14 uploader=app filename=Accounts SDK - States and Contracts {}
[INFO ] 2023-01-31T09:10:51,494Z [Test worker] persistence.NodeAttachmentService. - Stored new attachment: id=BD0C932EAF8B1FE96DCBBF275B914BCD776D14EDC8F97DCEBF7E15DA09C606AE uploader=app filename=Corda Finance Demo {}
[INFO ] 2023-01-31T09:10:51,514Z [Test worker] persistence.NodeAttachmentService. - Stored new attachment: id=8D797B45F40704FA4FD70921F5BC6E2D7B34450D345CE6788D2A87859EF63BD8 uploader=app filename=Obligation Contracts {}
[INFO ] 2023-01-31T09:10:51,518Z [Test worker] internal.InternalMockNetwork$MockNode. - Installed com.r3.corda.lib.accounts.workflows.services.KeyManagementBackedAccountService Corda service {}
[INFO ] 2023-01-31T09:10:51,544Z [Test worker] statemachine.SingleThreadedStateMachineManager. - Node ready, info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 1, L=London, C=GB], platformVersion=11, serial=1675156251378) {}
[INFO ] 2023-01-31T09:10:51,547Z [Test worker] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Notary, L=London, C=GB], platformVersion=11, serial=1675156248899), owningKey=DL2zKFNTAN9yVze6wgwgqH47s271qgsyFusNbrJEMfXEiS {}
[INFO ] 2023-01-31T09:10:51,547Z [Test worker] network.PersistentNetworkMapCache. - No previous node found for O=Notary, L=London, C=GB {}
[INFO ] 2023-01-31T09:10:51,560Z [Test worker] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 1, L=London, C=GB], platformVersion=11, serial=1675156251378), owningKey=DLFdZmAs8pUTC275mmAdpnRD8zvYBT1EFowehNKoYBMJCD {}
[INFO ] 2023-01-31T09:10:51,560Z [Test worker] network.PersistentNetworkMapCache. - No previous node found for O=Mock Company 1, L=London, C=GB {}
[INFO ] 2023-01-31T09:10:51,570Z [Test worker] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 1, L=London, C=GB], platformVersion=11, serial=1675156251378), owningKey=DLFdZmAs8pUTC275mmAdpnRD8zvYBT1EFowehNKoYBMJCD {}
[INFO ] 2023-01-31T09:10:51,570Z [Test worker] network.PersistentNetworkMapCache. - Previous node was identical to incoming one - doing nothing {}
[INFO ] 2023-01-31T09:10:51,571Z [Test worker] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 1, L=London, C=GB], platformVersion=11, serial=1675156251378), owningKey=DLFdZmAs8pUTC275mmAdpnRD8zvYBT1EFowehNKoYBMJCD {}
[INFO ] 2023-01-31T09:10:51,571Z [Test worker] network.PersistentNetworkMapCache. - Previous node was identical to incoming one - doing nothing {}
[INFO ] 2023-01-31T09:10:51,585Z [Test worker] cordapp.JarScanningCordappLoader. - Looking for CorDapps in [build/mock-network/20230131-091022.933-02061F336C16C302/nodes/2/cordapps] {}
[INFO ] 2023-01-31T09:10:51,586Z [Test worker] cordapp.JarScanningCordappLoader. - Loading CorDapps from RestrictedURL(url=file:/Users/peter.li/Desktop/obligation-cordapp/workflows/build/mock-network/20230131-091022.933-02061F336C16C302/nodes/2/cordapps/accounts-contracts-1.0.jar, rootPackageName=null), RestrictedURL(url=file:/Users/peter.li/Desktop/obligation-cordapp/workflows/build/mock-network/20230131-091022.933-02061F336C16C302/nodes/2/cordapps/accounts-workflows-1.0.jar, rootPackageName=null), RestrictedURL(url=file:/Users/peter.li/Desktop/obligation-cordapp/workflows/build/mock-network/20230131-091022.933-02061F336C16C302/nodes/2/cordapps/corda-finance-contracts-4.9.jar, rootPackageName=null), RestrictedURL(url=file:/Users/peter.li/Desktop/obligation-cordapp/workflows/build/mock-network/20230131-091022.933-02061F336C16C302/nodes/2/cordapps/contracts-1.0.jar, rootPackageName=null), RestrictedURL(url=file:/Users/peter.li/Desktop/obligation-cordapp/workflows/build/mock-network/20230131-091022.933-02061F336C16C302/nodes/2/cordapps/workflows-1.0.jar, rootPackageName=null) {}
[INFO ] 2023-01-31T09:10:51,586Z [Test worker] cordapp.JarScanningCordappLoader. - Scanning CorDapp in file:/Users/peter.li/Desktop/obligation-cordapp/workflows/build/mock-network/20230131-091022.933-02061F336C16C302/nodes/2/cordapps/accounts-contracts-1.0.jar {}
[INFO ] 2023-01-31T09:10:51,611Z [Test worker] cordapp.JarScanningCordappLoader. - Scanning CorDapp in file:/Users/peter.li/Desktop/obligation-cordapp/workflows/build/mock-network/20230131-091022.933-02061F336C16C302/nodes/2/cordapps/accounts-workflows-1.0.jar {}
[INFO ] 2023-01-31T09:10:51,620Z [Test worker] cordapp.JarScanningCordappLoader. - Scanning CorDapp in file:/Users/peter.li/Desktop/obligation-cordapp/workflows/build/mock-network/20230131-091022.933-02061F336C16C302/nodes/2/cordapps/corda-finance-contracts-4.9.jar {}
[INFO ] 2023-01-31T09:10:51,631Z [Test worker] cordapp.JarScanningCordappLoader. - Scanning CorDapp in file:/Users/peter.li/Desktop/obligation-cordapp/workflows/build/mock-network/20230131-091022.933-02061F336C16C302/nodes/2/cordapps/contracts-1.0.jar {}
[INFO ] 2023-01-31T09:10:51,637Z [Test worker] cordapp.JarScanningCordappLoader. - Scanning CorDapp in file:/Users/peter.li/Desktop/obligation-cordapp/workflows/build/mock-network/20230131-091022.933-02061F336C16C302/nodes/2/cordapps/workflows-1.0.jar {}
[INFO ] 2023-01-31T09:10:51,666Z [Test worker] internal.InternalMockNetwork$MockNode. - MessagingService active change to: false {}
[INFO ] 2023-01-31T09:10:51,667Z [Test worker] internal.InternalMockNetwork$MockNode. - Flow external operation executor has a max of 2 threads {}
[INFO ] 2023-01-31T09:10:51,669Z [Test worker] internal.InternalMockNetwork$MockNode. - Node starting up ... {}
[INFO ] 2023-01-31T09:10:51,708Z [Test worker] internal.KeyStoreHandler. - Loaded trusted root certificate: DL7fwxLm5xbiMD8adUuYTsPZHAict46Ng4w6RNcySt5vAw, alias: cordarootca {}
[INFO ] 2023-01-31T09:10:51,709Z [Test worker] internal.KeyStoreHandler. - Loaded node identity key: DLH5shaf5PmEKnk4poHnrZae9P1QbyzVKt5Kvq8FwK2mWx, alias: identity-private-key {}
[INFO ] 2023-01-31T09:10:51,718Z [Test worker] internal.NodeFlowManager. - Registered com.r3.corda.lib.accounts.workflows.flows.ShareStateAndSyncAccounts to initiate com.r3.corda.lib.accounts.workflows.flows.ReceiveStateAndSyncAccounts (version 1) {}
[INFO ] 2023-01-31T09:10:51,718Z [Test worker] internal.NodeFlowManager. - Registered com.r3.corda.lib.accounts.workflows.flows.ShareStateWithAccount to initiate com.r3.corda.lib.accounts.workflows.flows.ReceiveStateForAccount (version 1) {}
[INFO ] 2023-01-31T09:10:51,718Z [Test worker] internal.NodeFlowManager. - Registered com.r3.corda.lib.accounts.workflows.flows.RequestAccountInfo to initiate com.r3.corda.lib.accounts.workflows.flows.RequestAccountInfoHandler (version 1) {}
[INFO ] 2023-01-31T09:10:51,718Z [Test worker] internal.NodeFlowManager. - Registered com.r3.corda.lib.accounts.workflows.flows.RequestKeyForAccount to initiate com.r3.corda.lib.accounts.workflows.flows.SendKeyForAccount (version 1) {}
[INFO ] 2023-01-31T09:10:51,718Z [Test worker] internal.NodeFlowManager. - Registered com.r3.corda.lib.accounts.workflows.flows.ShareAccountInfo to initiate com.r3.corda.lib.accounts.workflows.flows.ShareAccountInfoHandler (version 1) {}
[INFO ] 2023-01-31T09:10:51,718Z [Test worker] internal.NodeFlowManager. - Registered net.corda.samples.obligation.flows.IOUIssueFlow to initiate net.corda.samples.obligation.flows.IOUIssueFlowResponder (version 1) {}
[INFO ] 2023-01-31T09:10:51,718Z [Test worker] internal.NodeFlowManager. - Registered net.corda.samples.obligation.flows.IOUSettleFlow to initiate net.corda.samples.obligation.flows.IOUSettleFlowResponder (version 1) {}
[INFO ] 2023-01-31T09:10:51,718Z [Test worker] internal.NodeFlowManager. - Registered net.corda.samples.obligation.flows.IOUTransferFlow to initiate net.corda.samples.obligation.flows.IOUTransferFlowResponder (version 1) {}
[INFO ] 2023-01-31T09:10:51,725Z [Test worker] internal.InternalMockNetwork$MockNode. - Loaded network parameters: NetworkParameters {
      minimumPlatformVersion=4
      notaries=[NotaryInfo(identity=O=Notary, L=London, C=GB, validating=true)]
      maxMessageSize=10485760
      maxTransactionSize=524288000
      whitelistedContractImplementations {
        
      }
      eventHorizon=PT720H
      packageOwnership {
        
      }
      modifiedTime=2023-01-31T09:10:22.635Z
      epoch=1
  } {}
[INFO ] 2023-01-31T09:10:52,383Z [Test worker] internal.InternalMockNetwork$MockNode. - Connected to H2 database. {}
[INFO ] 2023-01-31T09:10:52,385Z [Test worker] persistence.HibernateConfiguration. - Init HibernateConfiguration for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1), AccountsContractsSchemaV1(name=com.r3.corda.lib.accounts.contracts.internal.schemas.AccountsContractsSchema, version=1), AccountsWorkflowsSchemaV1(name=com.r3.corda.lib.accounts.workflows.internal.schemas.AccountsWorkflowsSchema, version=1), CashSchemaV1(name=net.corda.finance.schemas.CashSchema, version=1), CommercialPaperSchemaV1(name=net.corda.finance.schemas.CommercialPaperSchema, version=1)] {}
[INFO ] 2023-01-31T09:10:52,385Z [Test worker] factory.BaseSessionFactoryFactory. - Creating session factory for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1), AccountsContractsSchemaV1(name=com.r3.corda.lib.accounts.contracts.internal.schemas.AccountsContractsSchema, version=1), AccountsWorkflowsSchemaV1(name=com.r3.corda.lib.accounts.workflows.internal.schemas.AccountsWorkflowsSchema, version=1), CashSchemaV1(name=net.corda.finance.schemas.CashSchema, version=1), CommercialPaperSchemaV1(name=net.corda.finance.schemas.CommercialPaperSchema, version=1)] {}
[INFO ] 2023-01-31T09:10:52,592Z [Test worker] factory.BaseSessionFactoryFactory. - Created session factory for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1), AccountsContractsSchemaV1(name=com.r3.corda.lib.accounts.contracts.internal.schemas.AccountsContractsSchema, version=1), AccountsWorkflowsSchemaV1(name=com.r3.corda.lib.accounts.workflows.internal.schemas.AccountsWorkflowsSchema, version=1), CashSchemaV1(name=net.corda.finance.schemas.CashSchema, version=1), CommercialPaperSchemaV1(name=net.corda.finance.schemas.CommercialPaperSchema, version=1)] {}
[INFO ] 2023-01-31T09:10:52,597Z [Test worker] internal.InternalMockNetwork$MockNode. - Node-info has changed so submitting update. Old node-info was null {}
[INFO ] 2023-01-31T09:10:52,601Z [Test worker] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 2, L=London, C=GB], platformVersion=11, serial=1675156252597), owningKey=DLH5shaf5PmEKnk4poHnrZae9P1QbyzVKt5Kvq8FwK2mWx {}
[INFO ] 2023-01-31T09:10:52,601Z [Test worker] network.PersistentNetworkMapCache. - No previous node found for O=Mock Company 2, L=London, C=GB {}
[INFO ] 2023-01-31T09:10:52,611Z [Test worker] internal.InternalMockNetwork$MockNode. - New node-info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 2, L=London, C=GB], platformVersion=11, serial=1675156252597) {}
[INFO ] 2023-01-31T09:10:52,622Z [Test worker] network.NetworkMapUpdater. - Auto-accept enabled for network parameter changes which modify only: [epoch, modifiedTime, packageOwnership, whitelistedContractImplementations] {}
[INFO ] 2023-01-31T09:10:52,622Z [Test worker] internal.MockNodeMessagingService. - Status change to true {}
[INFO ] 2023-01-31T09:10:52,622Z [Test worker] internal.InternalMockNetwork$MockNode. - MessagingService active change to: true {}
[INFO ] 2023-01-31T09:10:52,636Z [MockNode-3-2] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 2, L=London, C=GB], platformVersion=11, serial=1675156252597), owningKey=DLH5shaf5PmEKnk4poHnrZae9P1QbyzVKt5Kvq8FwK2mWx {}
[INFO ] 2023-01-31T09:10:52,636Z [MockNode-3-2] network.PersistentNetworkMapCache. - Previous node was identical to incoming one - doing nothing {}
[INFO ] 2023-01-31T09:10:52,668Z [Test worker] persistence.NodeAttachmentService. - Stored new attachment: id=D370FD972C7E07CE73F4F9B7886D226807F6B16C4EE287398B9C69384109DC14 uploader=app filename=Accounts SDK - States and Contracts {}
[INFO ] 2023-01-31T09:10:52,722Z [Test worker] persistence.NodeAttachmentService. - Stored new attachment: id=BD0C932EAF8B1FE96DCBBF275B914BCD776D14EDC8F97DCEBF7E15DA09C606AE uploader=app filename=Corda Finance Demo {}
[INFO ] 2023-01-31T09:10:52,737Z [Test worker] persistence.NodeAttachmentService. - Stored new attachment: id=8D797B45F40704FA4FD70921F5BC6E2D7B34450D345CE6788D2A87859EF63BD8 uploader=app filename=Obligation Contracts {}
[INFO ] 2023-01-31T09:10:52,739Z [Test worker] internal.InternalMockNetwork$MockNode. - Installed com.r3.corda.lib.accounts.workflows.services.KeyManagementBackedAccountService Corda service {}
[INFO ] 2023-01-31T09:10:52,758Z [Test worker] statemachine.SingleThreadedStateMachineManager. - Node ready, info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 2, L=London, C=GB], platformVersion=11, serial=1675156252597) {}
[INFO ] 2023-01-31T09:10:52,759Z [Test worker] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Notary, L=London, C=GB], platformVersion=11, serial=1675156248899), owningKey=DL2zKFNTAN9yVze6wgwgqH47s271qgsyFusNbrJEMfXEiS {}
[INFO ] 2023-01-31T09:10:52,759Z [Test worker] network.PersistentNetworkMapCache. - No previous node found for O=Notary, L=London, C=GB {}
[INFO ] 2023-01-31T09:10:52,769Z [Test worker] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 2, L=London, C=GB], platformVersion=11, serial=1675156252597), owningKey=DLH5shaf5PmEKnk4poHnrZae9P1QbyzVKt5Kvq8FwK2mWx {}
[INFO ] 2023-01-31T09:10:52,769Z [Test worker] network.PersistentNetworkMapCache. - No previous node found for O=Mock Company 2, L=London, C=GB {}
[INFO ] 2023-01-31T09:10:52,780Z [Test worker] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 1, L=London, C=GB], platformVersion=11, serial=1675156251378), owningKey=DLFdZmAs8pUTC275mmAdpnRD8zvYBT1EFowehNKoYBMJCD {}
[INFO ] 2023-01-31T09:10:52,780Z [Test worker] network.PersistentNetworkMapCache. - No previous node found for O=Mock Company 1, L=London, C=GB {}
[INFO ] 2023-01-31T09:10:52,790Z [Test worker] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 2, L=London, C=GB], platformVersion=11, serial=1675156252597), owningKey=DLH5shaf5PmEKnk4poHnrZae9P1QbyzVKt5Kvq8FwK2mWx {}
[INFO ] 2023-01-31T09:10:52,790Z [Test worker] network.PersistentNetworkMapCache. - No previous node found for O=Mock Company 2, L=London, C=GB {}
[INFO ] 2023-01-31T09:10:52,798Z [Test worker] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 2, L=London, C=GB], platformVersion=11, serial=1675156252597), owningKey=DLH5shaf5PmEKnk4poHnrZae9P1QbyzVKt5Kvq8FwK2mWx {}
[INFO ] 2023-01-31T09:10:52,798Z [Test worker] network.PersistentNetworkMapCache. - Previous node was identical to incoming one - doing nothing {}
[INFO ] 2023-01-31T09:10:52,798Z [Test worker] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 2, L=London, C=GB], platformVersion=11, serial=1675156252597), owningKey=DLH5shaf5PmEKnk4poHnrZae9P1QbyzVKt5Kvq8FwK2mWx {}
[INFO ] 2023-01-31T09:10:52,798Z [Test worker] network.PersistentNetworkMapCache. - Previous node was identical to incoming one - doing nothing {}
[INFO ] 2023-01-31T09:10:52,810Z [Test worker] cordapp.JarScanningCordappLoader. - Looking for CorDapps in [build/mock-network/20230131-091022.933-02061F336C16C302/nodes/3/cordapps] {}
[INFO ] 2023-01-31T09:10:52,811Z [Test worker] cordapp.JarScanningCordappLoader. - Loading CorDapps from RestrictedURL(url=file:/Users/peter.li/Desktop/obligation-cordapp/workflows/build/mock-network/20230131-091022.933-02061F336C16C302/nodes/3/cordapps/accounts-contracts-1.0.jar, rootPackageName=null), RestrictedURL(url=file:/Users/peter.li/Desktop/obligation-cordapp/workflows/build/mock-network/20230131-091022.933-02061F336C16C302/nodes/3/cordapps/accounts-workflows-1.0.jar, rootPackageName=null), RestrictedURL(url=file:/Users/peter.li/Desktop/obligation-cordapp/workflows/build/mock-network/20230131-091022.933-02061F336C16C302/nodes/3/cordapps/corda-finance-contracts-4.9.jar, rootPackageName=null), RestrictedURL(url=file:/Users/peter.li/Desktop/obligation-cordapp/workflows/build/mock-network/20230131-091022.933-02061F336C16C302/nodes/3/cordapps/contracts-1.0.jar, rootPackageName=null), RestrictedURL(url=file:/Users/peter.li/Desktop/obligation-cordapp/workflows/build/mock-network/20230131-091022.933-02061F336C16C302/nodes/3/cordapps/workflows-1.0.jar, rootPackageName=null) {}
[INFO ] 2023-01-31T09:10:52,811Z [Test worker] cordapp.JarScanningCordappLoader. - Scanning CorDapp in file:/Users/peter.li/Desktop/obligation-cordapp/workflows/build/mock-network/20230131-091022.933-02061F336C16C302/nodes/3/cordapps/accounts-contracts-1.0.jar {}
[INFO ] 2023-01-31T09:10:52,835Z [Test worker] cordapp.JarScanningCordappLoader. - Scanning CorDapp in file:/Users/peter.li/Desktop/obligation-cordapp/workflows/build/mock-network/20230131-091022.933-02061F336C16C302/nodes/3/cordapps/accounts-workflows-1.0.jar {}
[INFO ] 2023-01-31T09:10:52,843Z [Test worker] cordapp.JarScanningCordappLoader. - Scanning CorDapp in file:/Users/peter.li/Desktop/obligation-cordapp/workflows/build/mock-network/20230131-091022.933-02061F336C16C302/nodes/3/cordapps/corda-finance-contracts-4.9.jar {}
[INFO ] 2023-01-31T09:10:52,855Z [Test worker] cordapp.JarScanningCordappLoader. - Scanning CorDapp in file:/Users/peter.li/Desktop/obligation-cordapp/workflows/build/mock-network/20230131-091022.933-02061F336C16C302/nodes/3/cordapps/contracts-1.0.jar {}
[INFO ] 2023-01-31T09:10:52,862Z [Test worker] cordapp.JarScanningCordappLoader. - Scanning CorDapp in file:/Users/peter.li/Desktop/obligation-cordapp/workflows/build/mock-network/20230131-091022.933-02061F336C16C302/nodes/3/cordapps/workflows-1.0.jar {}
[INFO ] 2023-01-31T09:10:52,887Z [Test worker] internal.InternalMockNetwork$MockNode. - MessagingService active change to: false {}
[INFO ] 2023-01-31T09:10:52,888Z [Test worker] internal.InternalMockNetwork$MockNode. - Flow external operation executor has a max of 2 threads {}
[INFO ] 2023-01-31T09:10:52,889Z [Test worker] internal.InternalMockNetwork$MockNode. - Node starting up ... {}
[INFO ] 2023-01-31T09:10:52,941Z [Test worker] internal.KeyStoreHandler. - Loaded trusted root certificate: DL7fwxLm5xbiMD8adUuYTsPZHAict46Ng4w6RNcySt5vAw, alias: cordarootca {}
[INFO ] 2023-01-31T09:10:52,941Z [Test worker] internal.KeyStoreHandler. - Loaded node identity key: DL7Lx4KrXjVnYW7WULWLUkq9uAwREe1VN69ZLfhLhMVojm, alias: identity-private-key {}
[INFO ] 2023-01-31T09:10:52,948Z [Test worker] internal.NodeFlowManager. - Registered com.r3.corda.lib.accounts.workflows.flows.ShareStateAndSyncAccounts to initiate com.r3.corda.lib.accounts.workflows.flows.ReceiveStateAndSyncAccounts (version 1) {}
[INFO ] 2023-01-31T09:10:52,948Z [Test worker] internal.NodeFlowManager. - Registered com.r3.corda.lib.accounts.workflows.flows.ShareStateWithAccount to initiate com.r3.corda.lib.accounts.workflows.flows.ReceiveStateForAccount (version 1) {}
[INFO ] 2023-01-31T09:10:52,948Z [Test worker] internal.NodeFlowManager. - Registered com.r3.corda.lib.accounts.workflows.flows.RequestAccountInfo to initiate com.r3.corda.lib.accounts.workflows.flows.RequestAccountInfoHandler (version 1) {}
[INFO ] 2023-01-31T09:10:52,948Z [Test worker] internal.NodeFlowManager. - Registered com.r3.corda.lib.accounts.workflows.flows.RequestKeyForAccount to initiate com.r3.corda.lib.accounts.workflows.flows.SendKeyForAccount (version 1) {}
[INFO ] 2023-01-31T09:10:52,948Z [Test worker] internal.NodeFlowManager. - Registered com.r3.corda.lib.accounts.workflows.flows.ShareAccountInfo to initiate com.r3.corda.lib.accounts.workflows.flows.ShareAccountInfoHandler (version 1) {}
[INFO ] 2023-01-31T09:10:52,948Z [Test worker] internal.NodeFlowManager. - Registered net.corda.samples.obligation.flows.IOUIssueFlow to initiate net.corda.samples.obligation.flows.IOUIssueFlowResponder (version 1) {}
[INFO ] 2023-01-31T09:10:52,948Z [Test worker] internal.NodeFlowManager. - Registered net.corda.samples.obligation.flows.IOUSettleFlow to initiate net.corda.samples.obligation.flows.IOUSettleFlowResponder (version 1) {}
[INFO ] 2023-01-31T09:10:52,948Z [Test worker] internal.NodeFlowManager. - Registered net.corda.samples.obligation.flows.IOUTransferFlow to initiate net.corda.samples.obligation.flows.IOUTransferFlowResponder (version 1) {}
[INFO ] 2023-01-31T09:10:52,954Z [Test worker] internal.InternalMockNetwork$MockNode. - Loaded network parameters: NetworkParameters {
      minimumPlatformVersion=4
      notaries=[NotaryInfo(identity=O=Notary, L=London, C=GB, validating=true)]
      maxMessageSize=10485760
      maxTransactionSize=524288000
      whitelistedContractImplementations {
        
      }
      eventHorizon=PT720H
      packageOwnership {
        
      }
      modifiedTime=2023-01-31T09:10:22.635Z
      epoch=1
  } {}
[INFO ] 2023-01-31T09:10:53,613Z [Test worker] internal.InternalMockNetwork$MockNode. - Connected to H2 database. {}
[INFO ] 2023-01-31T09:10:53,614Z [Test worker] persistence.HibernateConfiguration. - Init HibernateConfiguration for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1), AccountsContractsSchemaV1(name=com.r3.corda.lib.accounts.contracts.internal.schemas.AccountsContractsSchema, version=1), AccountsWorkflowsSchemaV1(name=com.r3.corda.lib.accounts.workflows.internal.schemas.AccountsWorkflowsSchema, version=1), CashSchemaV1(name=net.corda.finance.schemas.CashSchema, version=1), CommercialPaperSchemaV1(name=net.corda.finance.schemas.CommercialPaperSchema, version=1)] {}
[INFO ] 2023-01-31T09:10:53,614Z [Test worker] factory.BaseSessionFactoryFactory. - Creating session factory for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1), AccountsContractsSchemaV1(name=com.r3.corda.lib.accounts.contracts.internal.schemas.AccountsContractsSchema, version=1), AccountsWorkflowsSchemaV1(name=com.r3.corda.lib.accounts.workflows.internal.schemas.AccountsWorkflowsSchema, version=1), CashSchemaV1(name=net.corda.finance.schemas.CashSchema, version=1), CommercialPaperSchemaV1(name=net.corda.finance.schemas.CommercialPaperSchema, version=1)] {}
[INFO ] 2023-01-31T09:10:53,756Z [Test worker] factory.BaseSessionFactoryFactory. - Created session factory for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1), AccountsContractsSchemaV1(name=com.r3.corda.lib.accounts.contracts.internal.schemas.AccountsContractsSchema, version=1), AccountsWorkflowsSchemaV1(name=com.r3.corda.lib.accounts.workflows.internal.schemas.AccountsWorkflowsSchema, version=1), CashSchemaV1(name=net.corda.finance.schemas.CashSchema, version=1), CommercialPaperSchemaV1(name=net.corda.finance.schemas.CommercialPaperSchema, version=1)] {}
[INFO ] 2023-01-31T09:10:53,762Z [Test worker] internal.InternalMockNetwork$MockNode. - Node-info has changed so submitting update. Old node-info was null {}
[INFO ] 2023-01-31T09:10:53,765Z [Test worker] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 3, L=London, C=GB], platformVersion=11, serial=1675156253762), owningKey=DL7Lx4KrXjVnYW7WULWLUkq9uAwREe1VN69ZLfhLhMVojm {}
[INFO ] 2023-01-31T09:10:53,765Z [Test worker] network.PersistentNetworkMapCache. - No previous node found for O=Mock Company 3, L=London, C=GB {}
[INFO ] 2023-01-31T09:10:53,773Z [Test worker] internal.InternalMockNetwork$MockNode. - New node-info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 3, L=London, C=GB], platformVersion=11, serial=1675156253762) {}
[INFO ] 2023-01-31T09:10:53,781Z [Test worker] network.NetworkMapUpdater. - Auto-accept enabled for network parameter changes which modify only: [epoch, modifiedTime, packageOwnership, whitelistedContractImplementations] {}
[INFO ] 2023-01-31T09:10:53,782Z [Test worker] internal.MockNodeMessagingService. - Status change to true {}
[INFO ] 2023-01-31T09:10:53,782Z [Test worker] internal.InternalMockNetwork$MockNode. - MessagingService active change to: true {}
[INFO ] 2023-01-31T09:10:53,795Z [MockNode-4-2] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 3, L=London, C=GB], platformVersion=11, serial=1675156253762), owningKey=DL7Lx4KrXjVnYW7WULWLUkq9uAwREe1VN69ZLfhLhMVojm {}
[INFO ] 2023-01-31T09:10:53,795Z [MockNode-4-2] network.PersistentNetworkMapCache. - Previous node was identical to incoming one - doing nothing {}
[INFO ] 2023-01-31T09:10:53,818Z [Test worker] persistence.NodeAttachmentService. - Stored new attachment: id=D370FD972C7E07CE73F4F9B7886D226807F6B16C4EE287398B9C69384109DC14 uploader=app filename=Accounts SDK - States and Contracts {}
[INFO ] 2023-01-31T09:10:53,863Z [Test worker] persistence.NodeAttachmentService. - Stored new attachment: id=BD0C932EAF8B1FE96DCBBF275B914BCD776D14EDC8F97DCEBF7E15DA09C606AE uploader=app filename=Corda Finance Demo {}
[INFO ] 2023-01-31T09:10:53,876Z [Test worker] persistence.NodeAttachmentService. - Stored new attachment: id=8D797B45F40704FA4FD70921F5BC6E2D7B34450D345CE6788D2A87859EF63BD8 uploader=app filename=Obligation Contracts {}
[INFO ] 2023-01-31T09:10:53,878Z [Test worker] internal.InternalMockNetwork$MockNode. - Installed com.r3.corda.lib.accounts.workflows.services.KeyManagementBackedAccountService Corda service {}
[INFO ] 2023-01-31T09:10:53,896Z [Test worker] statemachine.SingleThreadedStateMachineManager. - Node ready, info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 3, L=London, C=GB], platformVersion=11, serial=1675156253762) {}
[INFO ] 2023-01-31T09:10:53,898Z [Test worker] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Notary, L=London, C=GB], platformVersion=11, serial=1675156248899), owningKey=DL2zKFNTAN9yVze6wgwgqH47s271qgsyFusNbrJEMfXEiS {}
[INFO ] 2023-01-31T09:10:53,898Z [Test worker] network.PersistentNetworkMapCache. - No previous node found for O=Notary, L=London, C=GB {}
[INFO ] 2023-01-31T09:10:53,908Z [Test worker] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 3, L=London, C=GB], platformVersion=11, serial=1675156253762), owningKey=DL7Lx4KrXjVnYW7WULWLUkq9uAwREe1VN69ZLfhLhMVojm {}
[INFO ] 2023-01-31T09:10:53,908Z [Test worker] network.PersistentNetworkMapCache. - No previous node found for O=Mock Company 3, L=London, C=GB {}
[INFO ] 2023-01-31T09:10:53,923Z [Test worker] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 1, L=London, C=GB], platformVersion=11, serial=1675156251378), owningKey=DLFdZmAs8pUTC275mmAdpnRD8zvYBT1EFowehNKoYBMJCD {}
[INFO ] 2023-01-31T09:10:53,923Z [Test worker] network.PersistentNetworkMapCache. - No previous node found for O=Mock Company 1, L=London, C=GB {}
[INFO ] 2023-01-31T09:10:53,936Z [Test worker] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 3, L=London, C=GB], platformVersion=11, serial=1675156253762), owningKey=DL7Lx4KrXjVnYW7WULWLUkq9uAwREe1VN69ZLfhLhMVojm {}
[INFO ] 2023-01-31T09:10:53,936Z [Test worker] network.PersistentNetworkMapCache. - No previous node found for O=Mock Company 3, L=London, C=GB {}
[INFO ] 2023-01-31T09:10:53,951Z [Test worker] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 2, L=London, C=GB], platformVersion=11, serial=1675156252597), owningKey=DLH5shaf5PmEKnk4poHnrZae9P1QbyzVKt5Kvq8FwK2mWx {}
[INFO ] 2023-01-31T09:10:53,951Z [Test worker] network.PersistentNetworkMapCache. - No previous node found for O=Mock Company 2, L=London, C=GB {}
[INFO ] 2023-01-31T09:10:53,962Z [Test worker] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 3, L=London, C=GB], platformVersion=11, serial=1675156253762), owningKey=DL7Lx4KrXjVnYW7WULWLUkq9uAwREe1VN69ZLfhLhMVojm {}
[INFO ] 2023-01-31T09:10:53,962Z [Test worker] network.PersistentNetworkMapCache. - No previous node found for O=Mock Company 3, L=London, C=GB {}
[INFO ] 2023-01-31T09:10:53,980Z [Test worker] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 3, L=London, C=GB], platformVersion=11, serial=1675156253762), owningKey=DL7Lx4KrXjVnYW7WULWLUkq9uAwREe1VN69ZLfhLhMVojm {}
[INFO ] 2023-01-31T09:10:53,980Z [Test worker] network.PersistentNetworkMapCache. - Previous node was identical to incoming one - doing nothing {}
[INFO ] 2023-01-31T09:10:53,980Z [Test worker] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 3, L=London, C=GB], platformVersion=11, serial=1675156253762), owningKey=DL7Lx4KrXjVnYW7WULWLUkq9uAwREe1VN69ZLfhLhMVojm {}
[INFO ] 2023-01-31T09:10:53,980Z [Test worker] network.PersistentNetworkMapCache. - Previous node was identical to incoming one - doing nothing {}
[WARN ] 2023-01-31T09:10:53,982Z [Test worker] internal.NodeFlowManager. - Multiple flows are registered for InitiatingFlow: class net.corda.samples.obligation.flows.IOUIssueFlow, currently using: class net.corda.samples.obligation.flows.IOUIssueFlowResponder {}
[INFO ] 2023-01-31T09:10:53,982Z [Test worker] internal.NodeFlowManager. - Registered net.corda.samples.obligation.flows.IOUIssueFlow to initiate net.corda.samples.obligation.flows.IOUIssueFlowResponder (version 1) {}
[WARN ] 2023-01-31T09:10:53,988Z [Test worker] internal.NodeFlowManager. - Multiple flows are registered for InitiatingFlow: class net.corda.samples.obligation.flows.IOUIssueFlow, currently using: class net.corda.samples.obligation.flows.IOUIssueFlowResponder {}
[INFO ] 2023-01-31T09:10:53,988Z [Test worker] internal.NodeFlowManager. - Registered net.corda.samples.obligation.flows.IOUIssueFlow to initiate net.corda.samples.obligation.flows.IOUIssueFlowResponder (version 1) {}
[WARN ] 2023-01-31T09:10:53,988Z [Test worker] internal.NodeFlowManager. - Multiple flows are registered for InitiatingFlow: class net.corda.samples.obligation.flows.IOUIssueFlow, currently using: class net.corda.samples.obligation.flows.IOUIssueFlowResponder {}
[INFO ] 2023-01-31T09:10:53,988Z [Test worker] internal.NodeFlowManager. - Registered net.corda.samples.obligation.flows.IOUIssueFlow to initiate net.corda.samples.obligation.flows.IOUIssueFlowResponder (version 1) {}
[WARN ] 2023-01-31T09:10:53,988Z [Test worker] internal.NodeFlowManager. - Multiple flows are registered for InitiatingFlow: class net.corda.samples.obligation.flows.IOUTransferFlow, currently using: class net.corda.samples.obligation.flows.IOUTransferFlowResponder {}
[INFO ] 2023-01-31T09:10:53,988Z [Test worker] internal.NodeFlowManager. - Registered net.corda.samples.obligation.flows.IOUTransferFlow to initiate net.corda.samples.obligation.flows.IOUTransferFlowResponder (version 1) {}
[WARN ] 2023-01-31T09:10:53,988Z [Test worker] internal.NodeFlowManager. - Multiple flows are registered for InitiatingFlow: class net.corda.samples.obligation.flows.IOUTransferFlow, currently using: class net.corda.samples.obligation.flows.IOUTransferFlowResponder {}
[INFO ] 2023-01-31T09:10:53,988Z [Test worker] internal.NodeFlowManager. - Registered net.corda.samples.obligation.flows.IOUTransferFlow to initiate net.corda.samples.obligation.flows.IOUTransferFlowResponder (version 1) {}
[WARN ] 2023-01-31T09:10:53,988Z [Test worker] internal.NodeFlowManager. - Multiple flows are registered for InitiatingFlow: class net.corda.samples.obligation.flows.IOUTransferFlow, currently using: class net.corda.samples.obligation.flows.IOUTransferFlowResponder {}
[INFO ] 2023-01-31T09:10:53,988Z [Test worker] internal.NodeFlowManager. - Registered net.corda.samples.obligation.flows.IOUTransferFlow to initiate net.corda.samples.obligation.flows.IOUTransferFlowResponder (version 1) {}
[INFO ] 2023-01-31T09:10:54,828Z [Mock network] corda.flow. - No need to notarise this transaction. {actor_id=Only For Testing, actor_owning_identity=O=Mock Company 1, L=London, C=GB, actor_store_id=TEST, fiber-id=10000001, flow-id=a5b0609f-ed3b-4e64-ae42-9fc286efe8f5, invocation_id=b134486d-5402-4f49-bd35-628d0cac6b68, invocation_timestamp=2023-01-31T09:10:54.024Z, origin=Only For Testing, session_id=b134486d-5402-4f49-bd35-628d0cac6b68, session_timestamp=2023-01-31T09:10:54.024Z, thread-id=854, tx_id=91AABBDFE68DC3006D2F286CD5DF2B48F533D0C6087515AE73ED268B5F0C5497}
[INFO ] 2023-01-31T09:10:54,828Z [Mock network] corda.flow. - Recording transaction locally. {actor_id=Only For Testing, actor_owning_identity=O=Mock Company 1, L=London, C=GB, actor_store_id=TEST, fiber-id=10000001, flow-id=a5b0609f-ed3b-4e64-ae42-9fc286efe8f5, invocation_id=b134486d-5402-4f49-bd35-628d0cac6b68, invocation_timestamp=2023-01-31T09:10:54.024Z, origin=Only For Testing, session_id=b134486d-5402-4f49-bd35-628d0cac6b68, session_timestamp=2023-01-31T09:10:54.024Z, thread-id=854, tx_id=91AABBDFE68DC3006D2F286CD5DF2B48F533D0C6087515AE73ED268B5F0C5497}
[INFO ] 2023-01-31T09:10:54,930Z [Mock network] corda.flow. - Recorded transaction locally successfully. {actor_id=Only For Testing, actor_owning_identity=O=Mock Company 1, L=London, C=GB, actor_store_id=TEST, fiber-id=10000001, flow-id=a5b0609f-ed3b-4e64-ae42-9fc286efe8f5, invocation_id=b134486d-5402-4f49-bd35-628d0cac6b68, invocation_timestamp=2023-01-31T09:10:54.024Z, origin=Only For Testing, session_id=b134486d-5402-4f49-bd35-628d0cac6b68, session_timestamp=2023-01-31T09:10:54.024Z, thread-id=854, tx_id=91AABBDFE68DC3006D2F286CD5DF2B48F533D0C6087515AE73ED268B5F0C5497}
[INFO ] 2023-01-31T09:10:54,930Z [Mock network] corda.flow. - All parties received the transaction successfully. {actor_id=Only For Testing, actor_owning_identity=O=Mock Company 1, L=London, C=GB, actor_store_id=TEST, fiber-id=10000001, flow-id=a5b0609f-ed3b-4e64-ae42-9fc286efe8f5, invocation_id=b134486d-5402-4f49-bd35-628d0cac6b68, invocation_timestamp=2023-01-31T09:10:54.024Z, origin=Only For Testing, session_id=b134486d-5402-4f49-bd35-628d0cac6b68, session_timestamp=2023-01-31T09:10:54.024Z, thread-id=854, tx_id=91AABBDFE68DC3006D2F286CD5DF2B48F533D0C6087515AE73ED268B5F0C5497}
[INFO ] 2023-01-31T09:10:55,117Z [Mock network] corda.flow. - Received transaction acknowledgement request from party O=Mock Company 1, L=London, C=GB. {fiber-id=10000002, flow-id=061ccda3-9e89-4d7c-8e33-81285b4fe5a2, invocation_id=a2323539-3b0f-441d-8b56-2801bb36db13, invocation_timestamp=2023-01-31T09:10:55.070Z, origin=O=Mock Company 1, L=London, C=GB, session_id=a2323539-3b0f-441d-8b56-2801bb36db13, session_timestamp=2023-01-31T09:10:55.070Z, thread-id=854, tx_id=91AABBDFE68DC3006D2F286CD5DF2B48F533D0C6087515AE73ED268B5F0C5497}
[INFO ] 2023-01-31T09:10:55,173Z [Mock network] corda.flow. - Transaction dependencies resolution completed. {fiber-id=10000002, flow-id=061ccda3-9e89-4d7c-8e33-81285b4fe5a2, invocation_id=a2323539-3b0f-441d-8b56-2801bb36db13, invocation_timestamp=2023-01-31T09:10:55.070Z, origin=O=Mock Company 1, L=London, C=GB, session_id=a2323539-3b0f-441d-8b56-2801bb36db13, session_timestamp=2023-01-31T09:10:55.070Z, thread-id=854, tx_id=91AABBDFE68DC3006D2F286CD5DF2B48F533D0C6087515AE73ED268B5F0C5497}
[INFO ] 2023-01-31T09:10:55,206Z [Mock network] corda.flow. - Successfully received fully signed tx. Sending it to the vault for processing. {fiber-id=10000002, flow-id=061ccda3-9e89-4d7c-8e33-81285b4fe5a2, invocation_id=a2323539-3b0f-441d-8b56-2801bb36db13, invocation_timestamp=2023-01-31T09:10:55.070Z, origin=O=Mock Company 1, L=London, C=GB, session_id=a2323539-3b0f-441d-8b56-2801bb36db13, session_timestamp=2023-01-31T09:10:55.070Z, thread-id=854, tx_id=91AABBDFE68DC3006D2F286CD5DF2B48F533D0C6087515AE73ED268B5F0C5497}
[INFO ] 2023-01-31T09:10:55,213Z [Mock network] corda.flow. - Successfully recorded received transaction locally. {fiber-id=10000002, flow-id=061ccda3-9e89-4d7c-8e33-81285b4fe5a2, invocation_id=a2323539-3b0f-441d-8b56-2801bb36db13, invocation_timestamp=2023-01-31T09:10:55.070Z, origin=O=Mock Company 1, L=London, C=GB, session_id=a2323539-3b0f-441d-8b56-2801bb36db13, session_timestamp=2023-01-31T09:10:55.070Z, thread-id=854, tx_id=91AABBDFE68DC3006D2F286CD5DF2B48F533D0C6087515AE73ED268B5F0C5497}
[INFO ] 2023-01-31T09:10:55,293Z [Mock network] corda.flow. - Received transaction acknowledgement request from party O=Mock Company 1, L=London, C=GB. {fiber-id=10000003, flow-id=3263fae8-4ded-4258-8e8d-13e42be4034e, invocation_id=cdf58470-1eaa-416d-8543-b739d5d83f3c, invocation_timestamp=2023-01-31T09:10:55.277Z, origin=O=Mock Company 1, L=London, C=GB, session_id=cdf58470-1eaa-416d-8543-b739d5d83f3c, session_timestamp=2023-01-31T09:10:55.277Z, thread-id=854, tx_id=91AABBDFE68DC3006D2F286CD5DF2B48F533D0C6087515AE73ED268B5F0C5497}
[INFO ] 2023-01-31T09:10:55,302Z [Mock network] corda.flow. - Transaction dependencies resolution completed. {fiber-id=10000003, flow-id=3263fae8-4ded-4258-8e8d-13e42be4034e, invocation_id=cdf58470-1eaa-416d-8543-b739d5d83f3c, invocation_timestamp=2023-01-31T09:10:55.277Z, origin=O=Mock Company 1, L=London, C=GB, session_id=cdf58470-1eaa-416d-8543-b739d5d83f3c, session_timestamp=2023-01-31T09:10:55.277Z, thread-id=854, tx_id=91AABBDFE68DC3006D2F286CD5DF2B48F533D0C6087515AE73ED268B5F0C5497}
[INFO ] 2023-01-31T09:10:55,357Z [Mock network] corda.flow. - Successfully received fully signed tx. Sending it to the vault for processing. {fiber-id=10000003, flow-id=3263fae8-4ded-4258-8e8d-13e42be4034e, invocation_id=cdf58470-1eaa-416d-8543-b739d5d83f3c, invocation_timestamp=2023-01-31T09:10:55.277Z, origin=O=Mock Company 1, L=London, C=GB, session_id=cdf58470-1eaa-416d-8543-b739d5d83f3c, session_timestamp=2023-01-31T09:10:55.277Z, thread-id=854, tx_id=91AABBDFE68DC3006D2F286CD5DF2B48F533D0C6087515AE73ED268B5F0C5497}
[INFO ] 2023-01-31T09:10:55,363Z [Mock network] corda.flow. - Successfully recorded received transaction locally. {fiber-id=10000003, flow-id=3263fae8-4ded-4258-8e8d-13e42be4034e, invocation_id=cdf58470-1eaa-416d-8543-b739d5d83f3c, invocation_timestamp=2023-01-31T09:10:55.277Z, origin=O=Mock Company 1, L=London, C=GB, session_id=cdf58470-1eaa-416d-8543-b739d5d83f3c, session_timestamp=2023-01-31T09:10:55.277Z, thread-id=854, tx_id=91AABBDFE68DC3006D2F286CD5DF2B48F533D0C6087515AE73ED268B5F0C5497}
[INFO ] 2023-01-31T09:10:55,407Z [Mock network] corda.flow. - No need to notarise this transaction. {actor_id=Only For Testing, actor_owning_identity=O=Mock Company 2, L=London, C=GB, actor_store_id=TEST, fiber-id=10000004, flow-id=47dc4f55-368b-4505-afb0-e38875dc2246, invocation_id=fdef3454-81c9-4d4f-b486-105a6c69ef9e, invocation_timestamp=2023-01-31T09:10:55.388Z, origin=Only For Testing, session_id=fdef3454-81c9-4d4f-b486-105a6c69ef9e, session_timestamp=2023-01-31T09:10:55.388Z, thread-id=854, tx_id=3E83F0278639C5D4490216D0BFCC4F4E030AFD217811E907D14824191C73216C}
[INFO ] 2023-01-31T09:10:55,407Z [Mock network] corda.flow. - Recording transaction locally. {actor_id=Only For Testing, actor_owning_identity=O=Mock Company 2, L=London, C=GB, actor_store_id=TEST, fiber-id=10000004, flow-id=47dc4f55-368b-4505-afb0-e38875dc2246, invocation_id=fdef3454-81c9-4d4f-b486-105a6c69ef9e, invocation_timestamp=2023-01-31T09:10:55.388Z, origin=Only For Testing, session_id=fdef3454-81c9-4d4f-b486-105a6c69ef9e, session_timestamp=2023-01-31T09:10:55.388Z, thread-id=854, tx_id=3E83F0278639C5D4490216D0BFCC4F4E030AFD217811E907D14824191C73216C}
[INFO ] 2023-01-31T09:10:55,410Z [Mock network] corda.flow. - Recorded transaction locally successfully. {actor_id=Only For Testing, actor_owning_identity=O=Mock Company 2, L=London, C=GB, actor_store_id=TEST, fiber-id=10000004, flow-id=47dc4f55-368b-4505-afb0-e38875dc2246, invocation_id=fdef3454-81c9-4d4f-b486-105a6c69ef9e, invocation_timestamp=2023-01-31T09:10:55.388Z, origin=Only For Testing, session_id=fdef3454-81c9-4d4f-b486-105a6c69ef9e, session_timestamp=2023-01-31T09:10:55.388Z, thread-id=854, tx_id=3E83F0278639C5D4490216D0BFCC4F4E030AFD217811E907D14824191C73216C}
[INFO ] 2023-01-31T09:10:55,410Z [Mock network] corda.flow. - All parties received the transaction successfully. {actor_id=Only For Testing, actor_owning_identity=O=Mock Company 2, L=London, C=GB, actor_store_id=TEST, fiber-id=10000004, flow-id=47dc4f55-368b-4505-afb0-e38875dc2246, invocation_id=fdef3454-81c9-4d4f-b486-105a6c69ef9e, invocation_timestamp=2023-01-31T09:10:55.388Z, origin=Only For Testing, session_id=fdef3454-81c9-4d4f-b486-105a6c69ef9e, session_timestamp=2023-01-31T09:10:55.388Z, thread-id=854, tx_id=3E83F0278639C5D4490216D0BFCC4F4E030AFD217811E907D14824191C73216C}
[INFO ] 2023-01-31T09:10:55,453Z [Mock network] corda.flow. - Received transaction acknowledgement request from party O=Mock Company 2, L=London, C=GB. {fiber-id=10000005, flow-id=9ca48636-3b11-465a-a229-96424ef5bb8d, invocation_id=9f3f1d0d-ccb7-469a-a59a-7a0b29147e37, invocation_timestamp=2023-01-31T09:10:55.438Z, origin=O=Mock Company 2, L=London, C=GB, session_id=9f3f1d0d-ccb7-469a-a59a-7a0b29147e37, session_timestamp=2023-01-31T09:10:55.438Z, thread-id=854, tx_id=3E83F0278639C5D4490216D0BFCC4F4E030AFD217811E907D14824191C73216C}
[INFO ] 2023-01-31T09:10:55,463Z [Mock network] corda.flow. - Transaction dependencies resolution completed. {fiber-id=10000005, flow-id=9ca48636-3b11-465a-a229-96424ef5bb8d, invocation_id=9f3f1d0d-ccb7-469a-a59a-7a0b29147e37, invocation_timestamp=2023-01-31T09:10:55.438Z, origin=O=Mock Company 2, L=London, C=GB, session_id=9f3f1d0d-ccb7-469a-a59a-7a0b29147e37, session_timestamp=2023-01-31T09:10:55.438Z, thread-id=854, tx_id=3E83F0278639C5D4490216D0BFCC4F4E030AFD217811E907D14824191C73216C}
[INFO ] 2023-01-31T09:10:55,468Z [Mock network] corda.flow. - Successfully received fully signed tx. Sending it to the vault for processing. {fiber-id=10000005, flow-id=9ca48636-3b11-465a-a229-96424ef5bb8d, invocation_id=9f3f1d0d-ccb7-469a-a59a-7a0b29147e37, invocation_timestamp=2023-01-31T09:10:55.438Z, origin=O=Mock Company 2, L=London, C=GB, session_id=9f3f1d0d-ccb7-469a-a59a-7a0b29147e37, session_timestamp=2023-01-31T09:10:55.438Z, thread-id=854, tx_id=3E83F0278639C5D4490216D0BFCC4F4E030AFD217811E907D14824191C73216C}
[INFO ] 2023-01-31T09:10:55,474Z [Mock network] corda.flow. - Successfully recorded received transaction locally. {fiber-id=10000005, flow-id=9ca48636-3b11-465a-a229-96424ef5bb8d, invocation_id=9f3f1d0d-ccb7-469a-a59a-7a0b29147e37, invocation_timestamp=2023-01-31T09:10:55.438Z, origin=O=Mock Company 2, L=London, C=GB, session_id=9f3f1d0d-ccb7-469a-a59a-7a0b29147e37, session_timestamp=2023-01-31T09:10:55.438Z, thread-id=854, tx_id=3E83F0278639C5D4490216D0BFCC4F4E030AFD217811E907D14824191C73216C}
[INFO ] 2023-01-31T09:10:55,529Z [Mock network] corda.flow. - Received transaction acknowledgement request from party O=Mock Company 2, L=London, C=GB. {fiber-id=10000006, flow-id=ae602536-5818-4318-9a62-f3c3ef6d19f0, invocation_id=46cf64cf-490e-4bbd-a714-6278e7d8c3ff, invocation_timestamp=2023-01-31T09:10:55.514Z, origin=O=Mock Company 2, L=London, C=GB, session_id=46cf64cf-490e-4bbd-a714-6278e7d8c3ff, session_timestamp=2023-01-31T09:10:55.514Z, thread-id=854, tx_id=3E83F0278639C5D4490216D0BFCC4F4E030AFD217811E907D14824191C73216C}
[INFO ] 2023-01-31T09:10:55,536Z [Mock network] corda.flow. - Transaction dependencies resolution completed. {fiber-id=10000006, flow-id=ae602536-5818-4318-9a62-f3c3ef6d19f0, invocation_id=46cf64cf-490e-4bbd-a714-6278e7d8c3ff, invocation_timestamp=2023-01-31T09:10:55.514Z, origin=O=Mock Company 2, L=London, C=GB, session_id=46cf64cf-490e-4bbd-a714-6278e7d8c3ff, session_timestamp=2023-01-31T09:10:55.514Z, thread-id=854, tx_id=3E83F0278639C5D4490216D0BFCC4F4E030AFD217811E907D14824191C73216C}
[INFO ] 2023-01-31T09:10:55,540Z [Mock network] corda.flow. - Successfully received fully signed tx. Sending it to the vault for processing. {fiber-id=10000006, flow-id=ae602536-5818-4318-9a62-f3c3ef6d19f0, invocation_id=46cf64cf-490e-4bbd-a714-6278e7d8c3ff, invocation_timestamp=2023-01-31T09:10:55.514Z, origin=O=Mock Company 2, L=London, C=GB, session_id=46cf64cf-490e-4bbd-a714-6278e7d8c3ff, session_timestamp=2023-01-31T09:10:55.514Z, thread-id=854, tx_id=3E83F0278639C5D4490216D0BFCC4F4E030AFD217811E907D14824191C73216C}
[INFO ] 2023-01-31T09:10:55,546Z [Mock network] corda.flow. - Successfully recorded received transaction locally. {fiber-id=10000006, flow-id=ae602536-5818-4318-9a62-f3c3ef6d19f0, invocation_id=46cf64cf-490e-4bbd-a714-6278e7d8c3ff, invocation_timestamp=2023-01-31T09:10:55.514Z, origin=O=Mock Company 2, L=London, C=GB, session_id=46cf64cf-490e-4bbd-a714-6278e7d8c3ff, session_timestamp=2023-01-31T09:10:55.514Z, thread-id=854, tx_id=3E83F0278639C5D4490216D0BFCC4F4E030AFD217811E907D14824191C73216C}
[INFO ] 2023-01-31T09:10:55,585Z [Mock network] corda.flow. - No need to notarise this transaction. {actor_id=Only For Testing, actor_owning_identity=O=Mock Company 3, L=London, C=GB, actor_store_id=TEST, fiber-id=10000007, flow-id=9a3c3ceb-4952-4eb9-9021-dc2b8f621362, invocation_id=3a846d73-4017-4295-bf57-92d3898f6b06, invocation_timestamp=2023-01-31T09:10:55.566Z, origin=Only For Testing, session_id=3a846d73-4017-4295-bf57-92d3898f6b06, session_timestamp=2023-01-31T09:10:55.566Z, thread-id=854, tx_id=1B62150295B1F00B6E11F1249744DE97C824903316688B07748B544AA0ACA27C}
[INFO ] 2023-01-31T09:10:55,585Z [Mock network] corda.flow. - Recording transaction locally. {actor_id=Only For Testing, actor_owning_identity=O=Mock Company 3, L=London, C=GB, actor_store_id=TEST, fiber-id=10000007, flow-id=9a3c3ceb-4952-4eb9-9021-dc2b8f621362, invocation_id=3a846d73-4017-4295-bf57-92d3898f6b06, invocation_timestamp=2023-01-31T09:10:55.566Z, origin=Only For Testing, session_id=3a846d73-4017-4295-bf57-92d3898f6b06, session_timestamp=2023-01-31T09:10:55.566Z, thread-id=854, tx_id=1B62150295B1F00B6E11F1249744DE97C824903316688B07748B544AA0ACA27C}
[INFO ] 2023-01-31T09:10:55,588Z [Mock network] corda.flow. - Recorded transaction locally successfully. {actor_id=Only For Testing, actor_owning_identity=O=Mock Company 3, L=London, C=GB, actor_store_id=TEST, fiber-id=10000007, flow-id=9a3c3ceb-4952-4eb9-9021-dc2b8f621362, invocation_id=3a846d73-4017-4295-bf57-92d3898f6b06, invocation_timestamp=2023-01-31T09:10:55.566Z, origin=Only For Testing, session_id=3a846d73-4017-4295-bf57-92d3898f6b06, session_timestamp=2023-01-31T09:10:55.566Z, thread-id=854, tx_id=1B62150295B1F00B6E11F1249744DE97C824903316688B07748B544AA0ACA27C}
[INFO ] 2023-01-31T09:10:55,588Z [Mock network] corda.flow. - All parties received the transaction successfully. {actor_id=Only For Testing, actor_owning_identity=O=Mock Company 3, L=London, C=GB, actor_store_id=TEST, fiber-id=10000007, flow-id=9a3c3ceb-4952-4eb9-9021-dc2b8f621362, invocation_id=3a846d73-4017-4295-bf57-92d3898f6b06, invocation_timestamp=2023-01-31T09:10:55.566Z, origin=Only For Testing, session_id=3a846d73-4017-4295-bf57-92d3898f6b06, session_timestamp=2023-01-31T09:10:55.566Z, thread-id=854, tx_id=1B62150295B1F00B6E11F1249744DE97C824903316688B07748B544AA0ACA27C}
[INFO ] 2023-01-31T09:10:55,610Z [Mock network] corda.flow. - Received transaction acknowledgement request from party O=Mock Company 3, L=London, C=GB. {fiber-id=10000008, flow-id=46c22b3f-8301-438b-9e10-85c604d40124, invocation_id=b7e8a5fa-86a4-4e79-b5a7-d5bf62db493e, invocation_timestamp=2023-01-31T09:10:55.601Z, origin=O=Mock Company 3, L=London, C=GB, session_id=b7e8a5fa-86a4-4e79-b5a7-d5bf62db493e, session_timestamp=2023-01-31T09:10:55.601Z, thread-id=854, tx_id=1B62150295B1F00B6E11F1249744DE97C824903316688B07748B544AA0ACA27C}
[INFO ] 2023-01-31T09:10:55,617Z [Mock network] corda.flow. - Transaction dependencies resolution completed. {fiber-id=10000008, flow-id=46c22b3f-8301-438b-9e10-85c604d40124, invocation_id=b7e8a5fa-86a4-4e79-b5a7-d5bf62db493e, invocation_timestamp=2023-01-31T09:10:55.601Z, origin=O=Mock Company 3, L=London, C=GB, session_id=b7e8a5fa-86a4-4e79-b5a7-d5bf62db493e, session_timestamp=2023-01-31T09:10:55.601Z, thread-id=854, tx_id=1B62150295B1F00B6E11F1249744DE97C824903316688B07748B544AA0ACA27C}
[INFO ] 2023-01-31T09:10:55,620Z [Mock network] corda.flow. - Successfully received fully signed tx. Sending it to the vault for processing. {fiber-id=10000008, flow-id=46c22b3f-8301-438b-9e10-85c604d40124, invocation_id=b7e8a5fa-86a4-4e79-b5a7-d5bf62db493e, invocation_timestamp=2023-01-31T09:10:55.601Z, origin=O=Mock Company 3, L=London, C=GB, session_id=b7e8a5fa-86a4-4e79-b5a7-d5bf62db493e, session_timestamp=2023-01-31T09:10:55.601Z, thread-id=854, tx_id=1B62150295B1F00B6E11F1249744DE97C824903316688B07748B544AA0ACA27C}
[INFO ] 2023-01-31T09:10:55,625Z [Mock network] corda.flow. - Successfully recorded received transaction locally. {fiber-id=10000008, flow-id=46c22b3f-8301-438b-9e10-85c604d40124, invocation_id=b7e8a5fa-86a4-4e79-b5a7-d5bf62db493e, invocation_timestamp=2023-01-31T09:10:55.601Z, origin=O=Mock Company 3, L=London, C=GB, session_id=b7e8a5fa-86a4-4e79-b5a7-d5bf62db493e, session_timestamp=2023-01-31T09:10:55.601Z, thread-id=854, tx_id=1B62150295B1F00B6E11F1249744DE97C824903316688B07748B544AA0ACA27C}
[INFO ] 2023-01-31T09:10:55,658Z [Mock network] corda.flow. - Received transaction acknowledgement request from party O=Mock Company 3, L=London, C=GB. {fiber-id=10000009, flow-id=cd693915-e8e8-4ca9-b34c-f7731f9db8f4, invocation_id=9dee4cbd-4ff9-4ba8-86ff-7da10ac35677, invocation_timestamp=2023-01-31T09:10:55.647Z, origin=O=Mock Company 3, L=London, C=GB, session_id=9dee4cbd-4ff9-4ba8-86ff-7da10ac35677, session_timestamp=2023-01-31T09:10:55.647Z, thread-id=854, tx_id=1B62150295B1F00B6E11F1249744DE97C824903316688B07748B544AA0ACA27C}
[INFO ] 2023-01-31T09:10:55,663Z [Mock network] corda.flow. - Transaction dependencies resolution completed. {fiber-id=10000009, flow-id=cd693915-e8e8-4ca9-b34c-f7731f9db8f4, invocation_id=9dee4cbd-4ff9-4ba8-86ff-7da10ac35677, invocation_timestamp=2023-01-31T09:10:55.647Z, origin=O=Mock Company 3, L=London, C=GB, session_id=9dee4cbd-4ff9-4ba8-86ff-7da10ac35677, session_timestamp=2023-01-31T09:10:55.647Z, thread-id=854, tx_id=1B62150295B1F00B6E11F1249744DE97C824903316688B07748B544AA0ACA27C}
[INFO ] 2023-01-31T09:10:55,666Z [Mock network] corda.flow. - Successfully received fully signed tx. Sending it to the vault for processing. {fiber-id=10000009, flow-id=cd693915-e8e8-4ca9-b34c-f7731f9db8f4, invocation_id=9dee4cbd-4ff9-4ba8-86ff-7da10ac35677, invocation_timestamp=2023-01-31T09:10:55.647Z, origin=O=Mock Company 3, L=London, C=GB, session_id=9dee4cbd-4ff9-4ba8-86ff-7da10ac35677, session_timestamp=2023-01-31T09:10:55.647Z, thread-id=854, tx_id=1B62150295B1F00B6E11F1249744DE97C824903316688B07748B544AA0ACA27C}
[INFO ] 2023-01-31T09:10:55,671Z [Mock network] corda.flow. - Successfully recorded received transaction locally. {fiber-id=10000009, flow-id=cd693915-e8e8-4ca9-b34c-f7731f9db8f4, invocation_id=9dee4cbd-4ff9-4ba8-86ff-7da10ac35677, invocation_timestamp=2023-01-31T09:10:55.647Z, origin=O=Mock Company 3, L=London, C=GB, session_id=9dee4cbd-4ff9-4ba8-86ff-7da10ac35677, session_timestamp=2023-01-31T09:10:55.647Z, thread-id=854, tx_id=1B62150295B1F00B6E11F1249744DE97C824903316688B07748B544AA0ACA27C}
[INFO ] 2023-01-31T09:10:55,721Z [Mock network] identity.PersistentIdentityService. - Linking: EB899CE04DE106CEB70859451488745BF9B6595EF8BA53F6ACF392FF7B8D5D65 to O=Mock Company 1, L=London, C=GB {actor_id=Only For Testing, actor_owning_identity=O=Mock Company 1, L=London, C=GB, actor_store_id=TEST, fiber-id=10000011, flow-id=dd7445b7-adb3-4d3b-82c0-a4ff2566e9da, invocation_id=c48fc66d-c861-4050-818c-6f31a7b7d4d3, invocation_timestamp=2023-01-31T09:10:55.705Z, origin=Only For Testing, session_id=c48fc66d-c861-4050-818c-6f31a7b7d4d3, session_timestamp=2023-01-31T09:10:55.705Z, thread-id=854}
[INFO ] 2023-01-31T09:10:55,829Z [Mock network] identity.PersistentIdentityService. - Linking: 66789761EA75C0B54B72C31AAA49EAD0C1962F1F58C3953DE0FE828E2E6D5F2D to O=Mock Company 2, L=London, C=GB {fiber-id=10000012, flow-id=dc97afc8-fa6a-4a0e-b0d5-0b4481cd3db3, invocation_id=6d266715-9007-43a1-9785-3c17cb27801f, invocation_timestamp=2023-01-31T09:10:55.738Z, origin=O=Mock Company 1, L=London, C=GB, session_id=6d266715-9007-43a1-9785-3c17cb27801f, session_timestamp=2023-01-31T09:10:55.738Z, thread-id=854}
[INFO ] 2023-01-31T09:10:55,853Z [Mock network] identity.PersistentIdentityService. - Linking: 66789761EA75C0B54B72C31AAA49EAD0C1962F1F58C3953DE0FE828E2E6D5F2D to O=Mock Company 2, L=London, C=GB {actor_id=Only For Testing, actor_owning_identity=O=Mock Company 1, L=London, C=GB, actor_store_id=TEST, fiber-id=10000011, flow-id=dd7445b7-adb3-4d3b-82c0-a4ff2566e9da, invocation_id=c48fc66d-c861-4050-818c-6f31a7b7d4d3, invocation_timestamp=2023-01-31T09:10:55.705Z, origin=Only For Testing, session_id=c48fc66d-c861-4050-818c-6f31a7b7d4d3, session_timestamp=2023-01-31T09:10:55.705Z, thread-id=854}
[INFO ] 2023-01-31T09:10:56,004Z [Mock network] corda.flow. - Received transaction acknowledgement request from party O=Mock Company 1, L=London, C=GB. {fiber-id=10000013, flow-id=10ca4798-ff47-47a1-8438-d8092e236141, invocation_id=5b842151-4d75-459d-8c99-ec91f3d631c2, invocation_timestamp=2023-01-31T09:10:55.973Z, origin=O=Mock Company 1, L=London, C=GB, session_id=5b842151-4d75-459d-8c99-ec91f3d631c2, session_timestamp=2023-01-31T09:10:55.973Z, thread-id=854, tx_id=AB43E391578117C6B6312945C7582F591CE592B81B9312556A039B25FDB223E7}
[INFO ] 2023-01-31T09:10:56,018Z [Mock network] corda.flow. - Transaction dependencies resolution completed. {fiber-id=10000013, flow-id=10ca4798-ff47-47a1-8438-d8092e236141, invocation_id=5b842151-4d75-459d-8c99-ec91f3d631c2, invocation_timestamp=2023-01-31T09:10:55.973Z, origin=O=Mock Company 1, L=London, C=GB, session_id=5b842151-4d75-459d-8c99-ec91f3d631c2, session_timestamp=2023-01-31T09:10:55.973Z, thread-id=854, tx_id=AB43E391578117C6B6312945C7582F591CE592B81B9312556A039B25FDB223E7}
[INFO ] 2023-01-31T09:10:56,124Z [Mock network] corda.flow. - No need to notarise this transaction. {actor_id=Only For Testing, actor_owning_identity=O=Mock Company 1, L=London, C=GB, actor_store_id=TEST, fiber-id=10000011, flow-id=dd7445b7-adb3-4d3b-82c0-a4ff2566e9da, invocation_id=c48fc66d-c861-4050-818c-6f31a7b7d4d3, invocation_timestamp=2023-01-31T09:10:55.705Z, origin=Only For Testing, session_id=c48fc66d-c861-4050-818c-6f31a7b7d4d3, session_timestamp=2023-01-31T09:10:55.705Z, thread-id=854, tx_id=AB43E391578117C6B6312945C7582F591CE592B81B9312556A039B25FDB223E7}
[INFO ] 2023-01-31T09:10:56,124Z [Mock network] corda.flow. - Recording transaction locally. {actor_id=Only For Testing, actor_owning_identity=O=Mock Company 1, L=London, C=GB, actor_store_id=TEST, fiber-id=10000011, flow-id=dd7445b7-adb3-4d3b-82c0-a4ff2566e9da, invocation_id=c48fc66d-c861-4050-818c-6f31a7b7d4d3, invocation_timestamp=2023-01-31T09:10:55.705Z, origin=Only For Testing, session_id=c48fc66d-c861-4050-818c-6f31a7b7d4d3, session_timestamp=2023-01-31T09:10:55.705Z, thread-id=854, tx_id=AB43E391578117C6B6312945C7582F591CE592B81B9312556A039B25FDB223E7}
[INFO ] 2023-01-31T09:10:56,128Z [Mock network] corda.flow. - Recorded transaction locally successfully. {actor_id=Only For Testing, actor_owning_identity=O=Mock Company 1, L=London, C=GB, actor_store_id=TEST, fiber-id=10000011, flow-id=dd7445b7-adb3-4d3b-82c0-a4ff2566e9da, invocation_id=c48fc66d-c861-4050-818c-6f31a7b7d4d3, invocation_timestamp=2023-01-31T09:10:55.705Z, origin=Only For Testing, session_id=c48fc66d-c861-4050-818c-6f31a7b7d4d3, session_timestamp=2023-01-31T09:10:55.705Z, thread-id=854, tx_id=AB43E391578117C6B6312945C7582F591CE592B81B9312556A039B25FDB223E7}
[INFO ] 2023-01-31T09:10:56,150Z [Mock network] corda.flow. - Received transaction acknowledgement request from party O=Mock Company 1, L=London, C=GB. {fiber-id=10000013, flow-id=10ca4798-ff47-47a1-8438-d8092e236141, invocation_id=5b842151-4d75-459d-8c99-ec91f3d631c2, invocation_timestamp=2023-01-31T09:10:55.973Z, origin=O=Mock Company 1, L=London, C=GB, session_id=5b842151-4d75-459d-8c99-ec91f3d631c2, session_timestamp=2023-01-31T09:10:55.973Z, thread-id=854, tx_id=AB43E391578117C6B6312945C7582F591CE592B81B9312556A039B25FDB223E7}
[INFO ] 2023-01-31T09:10:56,157Z [Mock network] corda.flow. - Transaction dependencies resolution completed. {fiber-id=10000013, flow-id=10ca4798-ff47-47a1-8438-d8092e236141, invocation_id=5b842151-4d75-459d-8c99-ec91f3d631c2, invocation_timestamp=2023-01-31T09:10:55.973Z, origin=O=Mock Company 1, L=London, C=GB, session_id=5b842151-4d75-459d-8c99-ec91f3d631c2, session_timestamp=2023-01-31T09:10:55.973Z, thread-id=854, tx_id=AB43E391578117C6B6312945C7582F591CE592B81B9312556A039B25FDB223E7}
[INFO ] 2023-01-31T09:10:56,162Z [Mock network] corda.flow. - Successfully received fully signed tx. Sending it to the vault for processing. {fiber-id=10000013, flow-id=10ca4798-ff47-47a1-8438-d8092e236141, invocation_id=5b842151-4d75-459d-8c99-ec91f3d631c2, invocation_timestamp=2023-01-31T09:10:55.973Z, origin=O=Mock Company 1, L=London, C=GB, session_id=5b842151-4d75-459d-8c99-ec91f3d631c2, session_timestamp=2023-01-31T09:10:55.973Z, thread-id=854, tx_id=AB43E391578117C6B6312945C7582F591CE592B81B9312556A039B25FDB223E7}
[INFO ] 2023-01-31T09:10:56,168Z [Mock network] corda.flow. - Successfully recorded received transaction locally. {fiber-id=10000013, flow-id=10ca4798-ff47-47a1-8438-d8092e236141, invocation_id=5b842151-4d75-459d-8c99-ec91f3d631c2, invocation_timestamp=2023-01-31T09:10:55.973Z, origin=O=Mock Company 1, L=London, C=GB, session_id=5b842151-4d75-459d-8c99-ec91f3d631c2, session_timestamp=2023-01-31T09:10:55.973Z, thread-id=854, tx_id=AB43E391578117C6B6312945C7582F591CE592B81B9312556A039B25FDB223E7}
[WARN ] 2023-01-31T09:10:56,171Z [Mock network] persistence.AbstractPartyToX500NameAsStringConverter. - Identity service unable to resolve AbstractParty: Anonymous(DLGrSWqYQmzTiS2jZoBeJ52EfWqsScLaMsVwjB8DVSipNG) {actor_id=Only For Testing, actor_owning_identity=O=Mock Company 1, L=London, C=GB, actor_store_id=TEST, fiber-id=10000013, flow-id=10ca4798-ff47-47a1-8438-d8092e236141, invocation_id=5b842151-4d75-459d-8c99-ec91f3d631c2, invocation_timestamp=2023-01-31T09:10:55.973Z, origin=O=Mock Company 1, L=London, C=GB, session_id=5b842151-4d75-459d-8c99-ec91f3d631c2, session_timestamp=2023-01-31T09:10:55.973Z, thread-id=854}
[INFO ] 2023-01-31T09:10:56,177Z [Mock network] corda.flow. - Party O=Mock Company 2, L=London, C=GB received the transaction. {actor_id=Only For Testing, actor_owning_identity=O=Mock Company 1, L=London, C=GB, actor_store_id=TEST, fiber-id=10000011, flow-id=dd7445b7-adb3-4d3b-82c0-a4ff2566e9da, invocation_id=c48fc66d-c861-4050-818c-6f31a7b7d4d3, invocation_timestamp=2023-01-31T09:10:55.705Z, origin=Only For Testing, session_id=c48fc66d-c861-4050-818c-6f31a7b7d4d3, session_timestamp=2023-01-31T09:10:55.705Z, thread-id=854, tx_id=AB43E391578117C6B6312945C7582F591CE592B81B9312556A039B25FDB223E7}
[INFO ] 2023-01-31T09:10:56,177Z [Mock network] corda.flow. - All parties received the transaction successfully. {actor_id=Only For Testing, actor_owning_identity=O=Mock Company 1, L=London, C=GB, actor_store_id=TEST, fiber-id=10000011, flow-id=dd7445b7-adb3-4d3b-82c0-a4ff2566e9da, invocation_id=c48fc66d-c861-4050-818c-6f31a7b7d4d3, invocation_timestamp=2023-01-31T09:10:55.705Z, origin=Only For Testing, session_id=c48fc66d-c861-4050-818c-6f31a7b7d4d3, session_timestamp=2023-01-31T09:10:55.705Z, thread-id=854, tx_id=AB43E391578117C6B6312945C7582F591CE592B81B9312556A039B25FDB223E7}
[INFO ] 2023-01-31T09:10:56,256Z [Mock network] corda.flow. - Received transaction acknowledgement request from party O=Mock Company 1, L=London, C=GB. {fiber-id=10000014, flow-id=9f3e209b-22ee-4770-b586-ecf72cce78e4, invocation_id=0c5f9bcf-d0d4-44df-8680-d8c7cfa8a90c, invocation_timestamp=2023-01-31T09:10:56.217Z, origin=O=Mock Company 1, L=London, C=GB, session_id=0c5f9bcf-d0d4-44df-8680-d8c7cfa8a90c, session_timestamp=2023-01-31T09:10:56.217Z, thread-id=854, tx_id=3E83F0278639C5D4490216D0BFCC4F4E030AFD217811E907D14824191C73216C}
[INFO ] 2023-01-31T09:10:56,263Z [Mock network] corda.flow. - Transaction dependencies resolution completed. {fiber-id=10000014, flow-id=9f3e209b-22ee-4770-b586-ecf72cce78e4, invocation_id=0c5f9bcf-d0d4-44df-8680-d8c7cfa8a90c, invocation_timestamp=2023-01-31T09:10:56.217Z, origin=O=Mock Company 1, L=London, C=GB, session_id=0c5f9bcf-d0d4-44df-8680-d8c7cfa8a90c, session_timestamp=2023-01-31T09:10:56.217Z, thread-id=854, tx_id=3E83F0278639C5D4490216D0BFCC4F4E030AFD217811E907D14824191C73216C}
[INFO ] 2023-01-31T09:10:56,266Z [Mock network] corda.flow. - Successfully received fully signed tx. Sending it to the vault for processing. {fiber-id=10000014, flow-id=9f3e209b-22ee-4770-b586-ecf72cce78e4, invocation_id=0c5f9bcf-d0d4-44df-8680-d8c7cfa8a90c, invocation_timestamp=2023-01-31T09:10:56.217Z, origin=O=Mock Company 1, L=London, C=GB, session_id=0c5f9bcf-d0d4-44df-8680-d8c7cfa8a90c, session_timestamp=2023-01-31T09:10:56.217Z, thread-id=854, tx_id=3E83F0278639C5D4490216D0BFCC4F4E030AFD217811E907D14824191C73216C}
[INFO ] 2023-01-31T09:10:56,277Z [Mock network] corda.flow. - Successfully recorded received transaction locally. {fiber-id=10000014, flow-id=9f3e209b-22ee-4770-b586-ecf72cce78e4, invocation_id=0c5f9bcf-d0d4-44df-8680-d8c7cfa8a90c, invocation_timestamp=2023-01-31T09:10:56.217Z, origin=O=Mock Company 1, L=London, C=GB, session_id=0c5f9bcf-d0d4-44df-8680-d8c7cfa8a90c, session_timestamp=2023-01-31T09:10:56.217Z, thread-id=854, tx_id=3E83F0278639C5D4490216D0BFCC4F4E030AFD217811E907D14824191C73216C}
[INFO ] 2023-01-31T09:10:56,305Z [Mock network] identity.PersistentIdentityService. - An existing entry for DL7u1EjU8sR6gsvuCaXMwt29fcsncrwxBbyuQUaBhQJQyi already exists. {fiber-id=10000014, flow-id=9f3e209b-22ee-4770-b586-ecf72cce78e4, invocation_id=0c5f9bcf-d0d4-44df-8680-d8c7cfa8a90c, invocation_timestamp=2023-01-31T09:10:56.217Z, origin=O=Mock Company 1, L=London, C=GB, session_id=0c5f9bcf-d0d4-44df-8680-d8c7cfa8a90c, session_timestamp=2023-01-31T09:10:56.217Z, thread-id=854, tx_id=3E83F0278639C5D4490216D0BFCC4F4E030AFD217811E907D14824191C73216C}
[INFO ] 2023-01-31T09:10:56,317Z [Mock network] corda.flow. - Received transaction acknowledgement request from party O=Mock Company 1, L=London, C=GB. {fiber-id=10000014, flow-id=9f3e209b-22ee-4770-b586-ecf72cce78e4, invocation_id=0c5f9bcf-d0d4-44df-8680-d8c7cfa8a90c, invocation_timestamp=2023-01-31T09:10:56.217Z, origin=O=Mock Company 1, L=London, C=GB, session_id=0c5f9bcf-d0d4-44df-8680-d8c7cfa8a90c, session_timestamp=2023-01-31T09:10:56.217Z, thread-id=854, tx_id=91AABBDFE68DC3006D2F286CD5DF2B48F533D0C6087515AE73ED268B5F0C5497}
[INFO ] 2023-01-31T09:10:56,326Z [Mock network] corda.flow. - Transaction dependencies resolution completed. {fiber-id=10000014, flow-id=9f3e209b-22ee-4770-b586-ecf72cce78e4, invocation_id=0c5f9bcf-d0d4-44df-8680-d8c7cfa8a90c, invocation_timestamp=2023-01-31T09:10:56.217Z, origin=O=Mock Company 1, L=London, C=GB, session_id=0c5f9bcf-d0d4-44df-8680-d8c7cfa8a90c, session_timestamp=2023-01-31T09:10:56.217Z, thread-id=854, tx_id=91AABBDFE68DC3006D2F286CD5DF2B48F533D0C6087515AE73ED268B5F0C5497}
[INFO ] 2023-01-31T09:10:56,330Z [Mock network] corda.flow. - Successfully received fully signed tx. Sending it to the vault for processing. {fiber-id=10000014, flow-id=9f3e209b-22ee-4770-b586-ecf72cce78e4, invocation_id=0c5f9bcf-d0d4-44df-8680-d8c7cfa8a90c, invocation_timestamp=2023-01-31T09:10:56.217Z, origin=O=Mock Company 1, L=London, C=GB, session_id=0c5f9bcf-d0d4-44df-8680-d8c7cfa8a90c, session_timestamp=2023-01-31T09:10:56.217Z, thread-id=854, tx_id=91AABBDFE68DC3006D2F286CD5DF2B48F533D0C6087515AE73ED268B5F0C5497}
[INFO ] 2023-01-31T09:10:56,336Z [Mock network] corda.flow. - Successfully recorded received transaction locally. {fiber-id=10000014, flow-id=9f3e209b-22ee-4770-b586-ecf72cce78e4, invocation_id=0c5f9bcf-d0d4-44df-8680-d8c7cfa8a90c, invocation_timestamp=2023-01-31T09:10:56.217Z, origin=O=Mock Company 1, L=London, C=GB, session_id=0c5f9bcf-d0d4-44df-8680-d8c7cfa8a90c, session_timestamp=2023-01-31T09:10:56.217Z, thread-id=854, tx_id=91AABBDFE68DC3006D2F286CD5DF2B48F533D0C6087515AE73ED268B5F0C5497}
[INFO ] 2023-01-31T09:10:56,368Z [Mock network] identity.PersistentIdentityService. - Linking: EB899CE04DE106CEB70859451488745BF9B6595EF8BA53F6ACF392FF7B8D5D65 to O=Mock Company 1, L=London, C=GB {fiber-id=10000014, flow-id=9f3e209b-22ee-4770-b586-ecf72cce78e4, invocation_id=0c5f9bcf-d0d4-44df-8680-d8c7cfa8a90c, invocation_timestamp=2023-01-31T09:10:56.217Z, origin=O=Mock Company 1, L=London, C=GB, session_id=0c5f9bcf-d0d4-44df-8680-d8c7cfa8a90c, session_timestamp=2023-01-31T09:10:56.217Z, thread-id=854, tx_id=91AABBDFE68DC3006D2F286CD5DF2B48F533D0C6087515AE73ED268B5F0C5497}
[INFO ] 2023-01-31T09:10:56,381Z [Mock network] corda.flow. - Received transaction acknowledgement request from party O=Mock Company 1, L=London, C=GB. {fiber-id=10000014, flow-id=9f3e209b-22ee-4770-b586-ecf72cce78e4, invocation_id=0c5f9bcf-d0d4-44df-8680-d8c7cfa8a90c, invocation_timestamp=2023-01-31T09:10:56.217Z, origin=O=Mock Company 1, L=London, C=GB, session_id=0c5f9bcf-d0d4-44df-8680-d8c7cfa8a90c, session_timestamp=2023-01-31T09:10:56.217Z, thread-id=854, tx_id=AB43E391578117C6B6312945C7582F591CE592B81B9312556A039B25FDB223E7}
[INFO ] 2023-01-31T09:10:56,390Z [Mock network] corda.flow. - Transaction dependencies resolution completed. {fiber-id=10000014, flow-id=9f3e209b-22ee-4770-b586-ecf72cce78e4, invocation_id=0c5f9bcf-d0d4-44df-8680-d8c7cfa8a90c, invocation_timestamp=2023-01-31T09:10:56.217Z, origin=O=Mock Company 1, L=London, C=GB, session_id=0c5f9bcf-d0d4-44df-8680-d8c7cfa8a90c, session_timestamp=2023-01-31T09:10:56.217Z, thread-id=854, tx_id=AB43E391578117C6B6312945C7582F591CE592B81B9312556A039B25FDB223E7}
[INFO ] 2023-01-31T09:10:56,396Z [Mock network] corda.flow. - Successfully received fully signed tx. Sending it to the vault for processing. {fiber-id=10000014, flow-id=9f3e209b-22ee-4770-b586-ecf72cce78e4, invocation_id=0c5f9bcf-d0d4-44df-8680-d8c7cfa8a90c, invocation_timestamp=2023-01-31T09:10:56.217Z, origin=O=Mock Company 1, L=London, C=GB, session_id=0c5f9bcf-d0d4-44df-8680-d8c7cfa8a90c, session_timestamp=2023-01-31T09:10:56.217Z, thread-id=854, tx_id=AB43E391578117C6B6312945C7582F591CE592B81B9312556A039B25FDB223E7}
[INFO ] 2023-01-31T09:10:56,401Z [Mock network] corda.flow. - Successfully recorded received transaction locally. {fiber-id=10000014, flow-id=9f3e209b-22ee-4770-b586-ecf72cce78e4, invocation_id=0c5f9bcf-d0d4-44df-8680-d8c7cfa8a90c, invocation_timestamp=2023-01-31T09:10:56.217Z, origin=O=Mock Company 1, L=London, C=GB, session_id=0c5f9bcf-d0d4-44df-8680-d8c7cfa8a90c, session_timestamp=2023-01-31T09:10:56.217Z, thread-id=854, tx_id=AB43E391578117C6B6312945C7582F591CE592B81B9312556A039B25FDB223E7}
[INFO ] 2023-01-31T09:10:56,505Z [Mock network] identity.PersistentIdentityService. - Linking: B37911888F9D56E7B2890400C4E9947B6311335AEE19D3A005AA097F41A396A7 to O=Mock Company 1, L=London, C=GB {fiber-id=10000017, flow-id=62c57d30-d6d6-4781-9920-f86f34bdf591, invocation_id=cb098577-a8b3-4ed5-9d29-c0f6d576ff00, invocation_timestamp=2023-01-31T09:10:56.476Z, origin=O=Mock Company 2, L=London, C=GB, session_id=cb098577-a8b3-4ed5-9d29-c0f6d576ff00, session_timestamp=2023-01-31T09:10:56.476Z, thread-id=854}
[INFO ] 2023-01-31T09:10:56,520Z [Mock network] identity.PersistentIdentityService. - Linking: B37911888F9D56E7B2890400C4E9947B6311335AEE19D3A005AA097F41A396A7 to O=Mock Company 1, L=London, C=GB {actor_id=Only For Testing, actor_owning_identity=O=Mock Company 2, L=London, C=GB, actor_store_id=TEST, fiber-id=10000016, flow-id=5fbffd2a-230b-4044-a5e9-b9641fae66e3, invocation_id=c1b8cedd-13b6-4e91-a947-e1e60b17d292, invocation_timestamp=2023-01-31T09:10:56.448Z, origin=Only For Testing, session_id=c1b8cedd-13b6-4e91-a947-e1e60b17d292, session_timestamp=2023-01-31T09:10:56.448Z, thread-id=854}
[INFO ] 2023-01-31T09:10:56,526Z [Mock network] identity.PersistentIdentityService. - Linking: 3E94A0E9BD78D265BC199D643DC7896D1AF5A396FC1FC5534A07C902B24AB9E1 to O=Mock Company 2, L=London, C=GB {actor_id=Only For Testing, actor_owning_identity=O=Mock Company 2, L=London, C=GB, actor_store_id=TEST, fiber-id=10000016, flow-id=5fbffd2a-230b-4044-a5e9-b9641fae66e3, invocation_id=c1b8cedd-13b6-4e91-a947-e1e60b17d292, invocation_timestamp=2023-01-31T09:10:56.448Z, origin=Only For Testing, session_id=c1b8cedd-13b6-4e91-a947-e1e60b17d292, session_timestamp=2023-01-31T09:10:56.448Z, thread-id=854}
[INFO ] 2023-01-31T09:10:56,587Z [Mock network] identity.PersistentIdentityService. - Linking: C7905CC48574FCC8F203998C94034613953361771BDC697E3B9E4BBB266CBAA3 to O=Mock Company 3, L=London, C=GB {fiber-id=10000018, flow-id=6da5e10b-b85b-4ec2-871e-b70c22a40687, invocation_id=d6fb6f1e-2368-4ce5-8f64-b18229e84f3d, invocation_timestamp=2023-01-31T09:10:56.545Z, origin=O=Mock Company 2, L=London, C=GB, session_id=d6fb6f1e-2368-4ce5-8f64-b18229e84f3d, session_timestamp=2023-01-31T09:10:56.545Z, thread-id=854}
[INFO ] 2023-01-31T09:10:56,602Z [Mock network] identity.PersistentIdentityService. - Linking: C7905CC48574FCC8F203998C94034613953361771BDC697E3B9E4BBB266CBAA3 to O=Mock Company 3, L=London, C=GB {actor_id=Only For Testing, actor_owning_identity=O=Mock Company 2, L=London, C=GB, actor_store_id=TEST, fiber-id=10000016, flow-id=5fbffd2a-230b-4044-a5e9-b9641fae66e3, invocation_id=c1b8cedd-13b6-4e91-a947-e1e60b17d292, invocation_timestamp=2023-01-31T09:10:56.448Z, origin=Only For Testing, session_id=c1b8cedd-13b6-4e91-a947-e1e60b17d292, session_timestamp=2023-01-31T09:10:56.448Z, thread-id=854}
[INFO ] 2023-01-31T09:10:56,695Z [Mock network] corda.flow. - Received transaction acknowledgement request from party O=Mock Company 2, L=London, C=GB. {fiber-id=10000019, flow-id=b5c1c411-8664-44cb-9592-46e4d6d0c8a6, invocation_id=0bb2b58d-6352-49c9-b676-136a088ee7f2, invocation_timestamp=2023-01-31T09:10:56.676Z, origin=O=Mock Company 2, L=London, C=GB, session_id=0bb2b58d-6352-49c9-b676-136a088ee7f2, session_timestamp=2023-01-31T09:10:56.676Z, thread-id=854, tx_id=3862BA56BC6564EFB5858C7DCCD6F5D79E030AC874F1D9834809B88BB6EAF409}
[INFO ] 2023-01-31T09:10:56,847Z [Mock network] corda.flow. - Transaction dependencies resolution completed. {fiber-id=10000019, flow-id=b5c1c411-8664-44cb-9592-46e4d6d0c8a6, invocation_id=0bb2b58d-6352-49c9-b676-136a088ee7f2, invocation_timestamp=2023-01-31T09:10:56.676Z, origin=O=Mock Company 2, L=London, C=GB, session_id=0bb2b58d-6352-49c9-b676-136a088ee7f2, session_timestamp=2023-01-31T09:10:56.676Z, thread-id=854, tx_id=3862BA56BC6564EFB5858C7DCCD6F5D79E030AC874F1D9834809B88BB6EAF409}
[INFO ] 2023-01-31T09:10:56,905Z [Mock network] corda.flow. - Received transaction acknowledgement request from party O=Mock Company 2, L=London, C=GB. {fiber-id=10000020, flow-id=03bcc347-e83e-4fe2-9a8b-499a02b4d998, invocation_id=91c10602-cbed-4ef8-adf4-68fd548c3d54, invocation_timestamp=2023-01-31T09:10:56.895Z, origin=O=Mock Company 2, L=London, C=GB, session_id=91c10602-cbed-4ef8-adf4-68fd548c3d54, session_timestamp=2023-01-31T09:10:56.895Z, thread-id=854, tx_id=3862BA56BC6564EFB5858C7DCCD6F5D79E030AC874F1D9834809B88BB6EAF409}
[INFO ] 2023-01-31T09:10:56,912Z [Mock network] corda.flow. - Transaction dependencies resolution completed. {fiber-id=10000020, flow-id=03bcc347-e83e-4fe2-9a8b-499a02b4d998, invocation_id=91c10602-cbed-4ef8-adf4-68fd548c3d54, invocation_timestamp=2023-01-31T09:10:56.895Z, origin=O=Mock Company 2, L=London, C=GB, session_id=91c10602-cbed-4ef8-adf4-68fd548c3d54, session_timestamp=2023-01-31T09:10:56.895Z, thread-id=854, tx_id=3862BA56BC6564EFB5858C7DCCD6F5D79E030AC874F1D9834809B88BB6EAF409}
[INFO ] 2023-01-31T09:10:56,983Z [Mock network] corda.flow. - Sending transaction to notary: O=Notary, L=London, C=GB. {actor_id=Only For Testing, actor_owning_identity=O=Mock Company 2, L=London, C=GB, actor_store_id=TEST, fiber-id=10000016, flow-id=5fbffd2a-230b-4044-a5e9-b9641fae66e3, invocation_id=c1b8cedd-13b6-4e91-a947-e1e60b17d292, invocation_timestamp=2023-01-31T09:10:56.448Z, origin=Only For Testing, session_id=c1b8cedd-13b6-4e91-a947-e1e60b17d292, session_timestamp=2023-01-31T09:10:56.448Z, thread-id=854, tx_id=3862BA56BC6564EFB5858C7DCCD6F5D79E030AC874F1D9834809B88BB6EAF409}
[INFO ] 2023-01-31T09:10:57,026Z [Mock network] corda.flow. - Received a notarisation request for Tx [3862BA56BC6564EFB5858C7DCCD6F5D79E030AC874F1D9834809B88BB6EAF409] from [O=Mock Company 2, L=London, C=GB] {fiber-id=10000021, flow-id=8a0cd7b9-e161-4ca5-b848-eb27b2ea4768, invocation_id=c75e5844-0141-4c7d-be8e-76fb88827019, invocation_timestamp=2023-01-31T09:10:57.011Z, origin=O=Mock Company 2, L=London, C=GB, session_id=c75e5844-0141-4c7d-be8e-76fb88827019, session_timestamp=2023-01-31T09:10:57.011Z, thread-id=854}
[INFO ] 2023-01-31T09:10:57,249Z [Notary request queue processor] jpa.JPAUniquenessProvider. - Processing notarization requests with 1 input states and 0 references {}
[INFO ] 2023-01-31T09:10:57,280Z [Mock network] corda.flow. - Transaction [3862BA56BC6564EFB5858C7DCCD6F5D79E030AC874F1D9834809B88BB6EAF409] successfully notarised, sending signature back to [O=Mock Company 2, L=London, C=GB] {fiber-id=10000021, flow-id=8a0cd7b9-e161-4ca5-b848-eb27b2ea4768, invocation_id=c75e5844-0141-4c7d-be8e-76fb88827019, invocation_timestamp=2023-01-31T09:10:57.011Z, origin=O=Mock Company 2, L=London, C=GB, session_id=c75e5844-0141-4c7d-be8e-76fb88827019, session_timestamp=2023-01-31T09:10:57.011Z, thread-id=854}
[INFO ] 2023-01-31T09:10:57,304Z [Mock network] corda.flow. - Notary responded (O=Notary, L=London, C=GB). {actor_id=Only For Testing, actor_owning_identity=O=Mock Company 2, L=London, C=GB, actor_store_id=TEST, fiber-id=10000016, flow-id=5fbffd2a-230b-4044-a5e9-b9641fae66e3, invocation_id=c1b8cedd-13b6-4e91-a947-e1e60b17d292, invocation_timestamp=2023-01-31T09:10:56.448Z, origin=Only For Testing, session_id=c1b8cedd-13b6-4e91-a947-e1e60b17d292, session_timestamp=2023-01-31T09:10:56.448Z, thread-id=854, tx_id=3862BA56BC6564EFB5858C7DCCD6F5D79E030AC874F1D9834809B88BB6EAF409}
[INFO ] 2023-01-31T09:10:57,305Z [Mock network] corda.flow. - Recording transaction locally. {actor_id=Only For Testing, actor_owning_identity=O=Mock Company 2, L=London, C=GB, actor_store_id=TEST, fiber-id=10000016, flow-id=5fbffd2a-230b-4044-a5e9-b9641fae66e3, invocation_id=c1b8cedd-13b6-4e91-a947-e1e60b17d292, invocation_timestamp=2023-01-31T09:10:56.448Z, origin=Only For Testing, session_id=c1b8cedd-13b6-4e91-a947-e1e60b17d292, session_timestamp=2023-01-31T09:10:56.448Z, thread-id=854, tx_id=3862BA56BC6564EFB5858C7DCCD6F5D79E030AC874F1D9834809B88BB6EAF409}
[INFO ] 2023-01-31T09:10:57,315Z [Mock network] corda.flow. - Recorded transaction locally successfully. {actor_id=Only For Testing, actor_owning_identity=O=Mock Company 2, L=London, C=GB, actor_store_id=TEST, fiber-id=10000016, flow-id=5fbffd2a-230b-4044-a5e9-b9641fae66e3, invocation_id=c1b8cedd-13b6-4e91-a947-e1e60b17d292, invocation_timestamp=2023-01-31T09:10:56.448Z, origin=Only For Testing, session_id=c1b8cedd-13b6-4e91-a947-e1e60b17d292, session_timestamp=2023-01-31T09:10:56.448Z, thread-id=854, tx_id=3862BA56BC6564EFB5858C7DCCD6F5D79E030AC874F1D9834809B88BB6EAF409}
[INFO ] 2023-01-31T09:10:57,325Z [Mock network] corda.flow. - Received transaction acknowledgement request from party O=Mock Company 2, L=London, C=GB. {fiber-id=10000019, flow-id=b5c1c411-8664-44cb-9592-46e4d6d0c8a6, invocation_id=0bb2b58d-6352-49c9-b676-136a088ee7f2, invocation_timestamp=2023-01-31T09:10:56.676Z, origin=O=Mock Company 2, L=London, C=GB, session_id=0bb2b58d-6352-49c9-b676-136a088ee7f2, session_timestamp=2023-01-31T09:10:56.676Z, thread-id=854, tx_id=3862BA56BC6564EFB5858C7DCCD6F5D79E030AC874F1D9834809B88BB6EAF409}
[INFO ] 2023-01-31T09:10:57,330Z [Mock network] corda.flow. - Transaction dependencies resolution completed. {fiber-id=10000019, flow-id=b5c1c411-8664-44cb-9592-46e4d6d0c8a6, invocation_id=0bb2b58d-6352-49c9-b676-136a088ee7f2, invocation_timestamp=2023-01-31T09:10:56.676Z, origin=O=Mock Company 2, L=London, C=GB, session_id=0bb2b58d-6352-49c9-b676-136a088ee7f2, session_timestamp=2023-01-31T09:10:56.676Z, thread-id=854, tx_id=3862BA56BC6564EFB5858C7DCCD6F5D79E030AC874F1D9834809B88BB6EAF409}
[INFO ] 2023-01-31T09:10:57,337Z [Mock network] corda.flow. - Successfully received fully signed tx. Sending it to the vault for processing. {fiber-id=10000019, flow-id=b5c1c411-8664-44cb-9592-46e4d6d0c8a6, invocation_id=0bb2b58d-6352-49c9-b676-136a088ee7f2, invocation_timestamp=2023-01-31T09:10:56.676Z, origin=O=Mock Company 2, L=London, C=GB, session_id=0bb2b58d-6352-49c9-b676-136a088ee7f2, session_timestamp=2023-01-31T09:10:56.676Z, thread-id=854, tx_id=3862BA56BC6564EFB5858C7DCCD6F5D79E030AC874F1D9834809B88BB6EAF409}
[INFO ] 2023-01-31T09:10:57,342Z [Mock network] corda.flow. - Successfully recorded received transaction locally. {fiber-id=10000019, flow-id=b5c1c411-8664-44cb-9592-46e4d6d0c8a6, invocation_id=0bb2b58d-6352-49c9-b676-136a088ee7f2, invocation_timestamp=2023-01-31T09:10:56.676Z, origin=O=Mock Company 2, L=London, C=GB, session_id=0bb2b58d-6352-49c9-b676-136a088ee7f2, session_timestamp=2023-01-31T09:10:56.676Z, thread-id=854, tx_id=3862BA56BC6564EFB5858C7DCCD6F5D79E030AC874F1D9834809B88BB6EAF409}
[WARN ] 2023-01-31T09:10:57,344Z [Mock network] persistence.AbstractPartyToX500NameAsStringConverter. - Identity service unable to resolve AbstractParty: Anonymous(DLGrSWqYQmzTiS2jZoBeJ52EfWqsScLaMsVwjB8DVSipNG) {actor_id=Only For Testing, actor_owning_identity=O=Mock Company 2, L=London, C=GB, actor_store_id=TEST, fiber-id=10000019, flow-id=b5c1c411-8664-44cb-9592-46e4d6d0c8a6, invocation_id=0bb2b58d-6352-49c9-b676-136a088ee7f2, invocation_timestamp=2023-01-31T09:10:56.676Z, origin=O=Mock Company 2, L=London, C=GB, session_id=0bb2b58d-6352-49c9-b676-136a088ee7f2, session_timestamp=2023-01-31T09:10:56.676Z, thread-id=854}
[INFO ] 2023-01-31T09:10:57,349Z [Mock network] corda.flow. - Party O=Mock Company 3, L=London, C=GB received the transaction. {actor_id=Only For Testing, actor_owning_identity=O=Mock Company 2, L=London, C=GB, actor_store_id=TEST, fiber-id=10000016, flow-id=5fbffd2a-230b-4044-a5e9-b9641fae66e3, invocation_id=c1b8cedd-13b6-4e91-a947-e1e60b17d292, invocation_timestamp=2023-01-31T09:10:56.448Z, origin=Only For Testing, session_id=c1b8cedd-13b6-4e91-a947-e1e60b17d292, session_timestamp=2023-01-31T09:10:56.448Z, thread-id=854, tx_id=3862BA56BC6564EFB5858C7DCCD6F5D79E030AC874F1D9834809B88BB6EAF409}
[INFO ] 2023-01-31T09:10:57,358Z [Mock network] corda.flow. - Received transaction acknowledgement request from party O=Mock Company 2, L=London, C=GB. {fiber-id=10000020, flow-id=03bcc347-e83e-4fe2-9a8b-499a02b4d998, invocation_id=91c10602-cbed-4ef8-adf4-68fd548c3d54, invocation_timestamp=2023-01-31T09:10:56.895Z, origin=O=Mock Company 2, L=London, C=GB, session_id=91c10602-cbed-4ef8-adf4-68fd548c3d54, session_timestamp=2023-01-31T09:10:56.895Z, thread-id=854, tx_id=3862BA56BC6564EFB5858C7DCCD6F5D79E030AC874F1D9834809B88BB6EAF409}
[INFO ] 2023-01-31T09:10:57,365Z [Mock network] corda.flow. - Transaction dependencies resolution completed. {fiber-id=10000020, flow-id=03bcc347-e83e-4fe2-9a8b-499a02b4d998, invocation_id=91c10602-cbed-4ef8-adf4-68fd548c3d54, invocation_timestamp=2023-01-31T09:10:56.895Z, origin=O=Mock Company 2, L=London, C=GB, session_id=91c10602-cbed-4ef8-adf4-68fd548c3d54, session_timestamp=2023-01-31T09:10:56.895Z, thread-id=854, tx_id=3862BA56BC6564EFB5858C7DCCD6F5D79E030AC874F1D9834809B88BB6EAF409}
[INFO ] 2023-01-31T09:10:57,372Z [Mock network] corda.flow. - Successfully received fully signed tx. Sending it to the vault for processing. {fiber-id=10000020, flow-id=03bcc347-e83e-4fe2-9a8b-499a02b4d998, invocation_id=91c10602-cbed-4ef8-adf4-68fd548c3d54, invocation_timestamp=2023-01-31T09:10:56.895Z, origin=O=Mock Company 2, L=London, C=GB, session_id=91c10602-cbed-4ef8-adf4-68fd548c3d54, session_timestamp=2023-01-31T09:10:56.895Z, thread-id=854, tx_id=3862BA56BC6564EFB5858C7DCCD6F5D79E030AC874F1D9834809B88BB6EAF409}
[INFO ] 2023-01-31T09:10:57,379Z [Mock network] corda.flow. - Successfully recorded received transaction locally. {fiber-id=10000020, flow-id=03bcc347-e83e-4fe2-9a8b-499a02b4d998, invocation_id=91c10602-cbed-4ef8-adf4-68fd548c3d54, invocation_timestamp=2023-01-31T09:10:56.895Z, origin=O=Mock Company 2, L=London, C=GB, session_id=91c10602-cbed-4ef8-adf4-68fd548c3d54, session_timestamp=2023-01-31T09:10:56.895Z, thread-id=854, tx_id=3862BA56BC6564EFB5858C7DCCD6F5D79E030AC874F1D9834809B88BB6EAF409}
[WARN ] 2023-01-31T09:10:57,381Z [Mock network] persistence.AbstractPartyToX500NameAsStringConverter. - Identity service unable to resolve AbstractParty: Anonymous(DLES1ondvG674vZiYLMQRCsTWxhALnCQJSnyePyJmXT4RQ) {actor_id=Only For Testing, actor_owning_identity=O=Mock Company 2, L=London, C=GB, actor_store_id=TEST, fiber-id=10000020, flow-id=03bcc347-e83e-4fe2-9a8b-499a02b4d998, invocation_id=91c10602-cbed-4ef8-adf4-68fd548c3d54, invocation_timestamp=2023-01-31T09:10:56.895Z, origin=O=Mock Company 2, L=London, C=GB, session_id=91c10602-cbed-4ef8-adf4-68fd548c3d54, session_timestamp=2023-01-31T09:10:56.895Z, thread-id=854}
[INFO ] 2023-01-31T09:10:57,387Z [Mock network] corda.flow. - Party O=Mock Company 1, L=London, C=GB received the transaction. {actor_id=Only For Testing, actor_owning_identity=O=Mock Company 2, L=London, C=GB, actor_store_id=TEST, fiber-id=10000016, flow-id=5fbffd2a-230b-4044-a5e9-b9641fae66e3, invocation_id=c1b8cedd-13b6-4e91-a947-e1e60b17d292, invocation_timestamp=2023-01-31T09:10:56.448Z, origin=Only For Testing, session_id=c1b8cedd-13b6-4e91-a947-e1e60b17d292, session_timestamp=2023-01-31T09:10:56.448Z, thread-id=854, tx_id=3862BA56BC6564EFB5858C7DCCD6F5D79E030AC874F1D9834809B88BB6EAF409}
[INFO ] 2023-01-31T09:10:57,387Z [Mock network] corda.flow. - All parties received the transaction successfully. {actor_id=Only For Testing, actor_owning_identity=O=Mock Company 2, L=London, C=GB, actor_store_id=TEST, fiber-id=10000016, flow-id=5fbffd2a-230b-4044-a5e9-b9641fae66e3, invocation_id=c1b8cedd-13b6-4e91-a947-e1e60b17d292, invocation_timestamp=2023-01-31T09:10:56.448Z, origin=Only For Testing, session_id=c1b8cedd-13b6-4e91-a947-e1e60b17d292, session_timestamp=2023-01-31T09:10:56.448Z, thread-id=854, tx_id=3862BA56BC6564EFB5858C7DCCD6F5D79E030AC874F1D9834809B88BB6EAF409}
[INFO ] 2023-01-31T09:10:57,423Z [Test worker] persistence.CordaPersistence. - Closing HikariDataSource (HikariPool-1) {}
[INFO ] 2023-01-31T09:10:57,448Z [Test worker] internal.MockNodeMessagingService. - Status change to false {}
[INFO ] 2023-01-31T09:10:57,448Z [Test worker] internal.InternalMockNetwork$MockNode. - MessagingService active change to: false {}
[INFO ] 2023-01-31T09:10:57,451Z [Test worker] persistence.CordaPersistence. - Closing HikariDataSource (HikariPool-2) {}
[INFO ] 2023-01-31T09:10:57,466Z [Test worker] internal.MockNodeMessagingService. - Status change to false {}
[INFO ] 2023-01-31T09:10:57,466Z [Test worker] internal.InternalMockNetwork$MockNode. - MessagingService active change to: false {}
[INFO ] 2023-01-31T09:10:57,467Z [Test worker] persistence.CordaPersistence. - Closing HikariDataSource (HikariPool-3) {}
[INFO ] 2023-01-31T09:10:57,480Z [Test worker] internal.MockNodeMessagingService. - Status change to false {}
[INFO ] 2023-01-31T09:10:57,480Z [Test worker] internal.InternalMockNetwork$MockNode. - MessagingService active change to: false {}
[INFO ] 2023-01-31T09:10:57,481Z [Test worker] persistence.CordaPersistence. - Closing HikariDataSource (HikariPool-4) {}
[INFO ] 2023-01-31T09:10:57,494Z [Test worker] internal.MockNodeMessagingService. - Status change to false {}
[INFO ] 2023-01-31T09:10:57,494Z [Test worker] internal.InternalMockNetwork$MockNode. - MessagingService active change to: false {}
[INFO ] 2023-01-31T09:11:51,992Z [Test worker] internal.TestCordappImpl. - Generating CorDapp jar from local project in /Users/peter.li/Desktop/obligation-cordapp/workflows ... {}
[INFO ] 2023-01-31T09:11:52,161Z [Connection worker] internal.TestCordappImpl. - Build {}
[INFO ] 2023-01-31T09:11:53,444Z [Connection worker] internal.TestCordappImpl. - Starting Gradle Daemon {}
[INFO ] 2023-01-31T09:11:54,365Z [Connection worker] internal.TestCordappImpl. - Connecting to Gradle Daemon {}
[INFO ] 2023-01-31T09:11:54,377Z [Connection worker] internal.TestCordappImpl. - Starting Gradle Daemon {}
[INFO ] 2023-01-31T09:11:54,378Z [Connection worker] internal.TestCordappImpl. - Build {}
[INFO ] 2023-01-31T09:11:54,868Z [Connection worker] internal.TestCordappImpl. - Run build {}
[INFO ] 2023-01-31T09:11:54,889Z [Connection worker] internal.TestCordappImpl. - Evaluate settings {}
[INFO ] 2023-01-31T09:11:55,317Z [Connection worker] internal.TestCordappImpl. - Run build {}
[INFO ] 2023-01-31T09:11:55,317Z [Connection worker] internal.TestCordappImpl. - Configure build {}
[INFO ] 2023-01-31T09:11:55,317Z [Connection worker] internal.TestCordappImpl. - Load projects {}
[INFO ] 2023-01-31T09:11:55,470Z [Connection worker] internal.TestCordappImpl. - Configure build {}
[INFO ] 2023-01-31T09:11:55,481Z [Connection worker] internal.TestCordappImpl. - Configure project : {}
[INFO ] 2023-01-31T09:11:55,945Z [Connection worker] internal.TestCordappImpl. - Resolve dependencies of :classpath {}
[INFO ] 2023-01-31T09:11:56,297Z [Connection worker] internal.TestCordappImpl. - Configure project : {}
[INFO ] 2023-01-31T09:11:56,308Z [Connection worker] internal.TestCordappImpl. - Resolve files of :classpath {}
[INFO ] 2023-01-31T09:11:56,331Z [Connection worker] internal.TestCordappImpl. - Configure project : {}
[INFO ] 2023-01-31T09:11:56,331Z [Connection worker] internal.TestCordappImpl. - Resolve files of :classpath {}
[INFO ] 2023-01-31T09:11:56,331Z [Connection worker] internal.TestCordappImpl. - Configure project : {}
[INFO ] 2023-01-31T09:11:57,310Z [Connection worker] internal.TestCordappImpl. - Configure build {}
[INFO ] 2023-01-31T09:11:57,310Z [Connection worker] internal.TestCordappImpl. - Configure project :clients {}
[INFO ] 2023-01-31T09:11:57,429Z [Connection worker] internal.TestCordappImpl. - Configure build {}
[INFO ] 2023-01-31T09:11:57,429Z [Connection worker] internal.TestCordappImpl. - Configure project :contracts {}
[INFO ] 2023-01-31T09:11:57,450Z [Connection worker] internal.TestCordappImpl. - Configure build {}
[INFO ] 2023-01-31T09:11:57,450Z [Connection worker] internal.TestCordappImpl. - Configure project :workflows {}
[INFO ] 2023-01-31T09:11:57,562Z [Connection worker] internal.TestCordappImpl. - Configure build {}
[INFO ] 2023-01-31T09:11:57,562Z [Connection worker] internal.TestCordappImpl. - Run build {}
[INFO ] 2023-01-31T09:11:57,663Z [Connection worker] internal.TestCordappImpl. - Resolve dependencies of :workflows:kotlinCompilerClasspath {}
[INFO ] 2023-01-31T09:11:57,663Z [Connection worker] internal.TestCordappImpl. - Run build {}
[INFO ] 2023-01-31T09:11:57,664Z [Connection worker] internal.TestCordappImpl. - Resolve files of :workflows:kotlinCompilerClasspath {}
[INFO ] 2023-01-31T09:11:57,674Z [Connection worker] internal.TestCordappImpl. - Run build {}
[INFO ] 2023-01-31T09:11:57,674Z [Connection worker] internal.TestCordappImpl. - Resolve dependencies of :contracts:kotlinCompilerClasspath {}
[INFO ] 2023-01-31T09:11:57,684Z [Connection worker] internal.TestCordappImpl. - Run build {}
[INFO ] 2023-01-31T09:11:57,684Z [Connection worker] internal.TestCordappImpl. - Resolve files of :contracts:kotlinCompilerClasspath {}
[INFO ] 2023-01-31T09:11:57,685Z [Connection worker] internal.TestCordappImpl. - Run build {}
[INFO ] 2023-01-31T09:11:57,694Z [Connection worker] internal.TestCordappImpl. - Run tasks {}
[INFO ] 2023-01-31T09:11:57,736Z [Connection worker] internal.TestCordappImpl. - Task :contracts:compileKotlin {}
[INFO ] 2023-01-31T09:11:57,736Z [Connection worker] internal.TestCordappImpl. - Resolve files of :contracts:kotlinCompilerClasspath {}
[INFO ] 2023-01-31T09:11:57,736Z [Connection worker] internal.TestCordappImpl. - Task :contracts:compileKotlin {}
[INFO ] 2023-01-31T09:11:57,790Z [Connection worker] internal.TestCordappImpl. - Resolve dependencies of :contracts:kotlinCompilerPluginClasspath {}
[INFO ] 2023-01-31T09:11:57,801Z [Connection worker] internal.TestCordappImpl. - Task :contracts:compileKotlin {}
[INFO ] 2023-01-31T09:11:57,801Z [Connection worker] internal.TestCordappImpl. - Resolve files of :contracts:kotlinCompilerPluginClasspath {}
[INFO ] 2023-01-31T09:11:57,801Z [Connection worker] internal.TestCordappImpl. - Task :contracts:compileKotlin {}
[INFO ] 2023-01-31T09:11:57,801Z [Connection worker] internal.TestCordappImpl. - Resolve dependencies of :contracts:compileClasspath {}
[INFO ] 2023-01-31T09:11:57,877Z [Connection worker] internal.TestCordappImpl. - Task :contracts:compileKotlin {}
[INFO ] 2023-01-31T09:11:57,877Z [Connection worker] internal.TestCordappImpl. - Resolve files of :contracts:compileClasspath {}
[INFO ] 2023-01-31T09:11:57,890Z [Connection worker] internal.TestCordappImpl. - Task :contracts:compileKotlin {}
[INFO ] 2023-01-31T09:11:58,320Z [Connection worker] internal.TestCordappImpl. - Resolve files of :contracts:compileClasspath {}
[INFO ] 2023-01-31T09:11:58,320Z [Connection worker] internal.TestCordappImpl. - Task :contracts:compileKotlin {}
[INFO ] 2023-01-31T09:11:58,331Z [Connection worker] internal.TestCordappImpl. - Resolve files of :contracts:kotlinCompilerPluginClasspath {}
[INFO ] 2023-01-31T09:11:58,331Z [Connection worker] internal.TestCordappImpl. - Task :contracts:compileKotlin {}
[INFO ] 2023-01-31T09:11:58,374Z [Connection worker] internal.TestCordappImpl. - Run tasks {}
[INFO ] 2023-01-31T09:11:58,374Z [Connection worker] internal.TestCordappImpl. - Task :contracts:compileJava {}
[INFO ] 2023-01-31T09:11:58,374Z [Connection worker] internal.TestCordappImpl. - Run tasks {}
[INFO ] 2023-01-31T09:11:58,374Z [Connection worker] internal.TestCordappImpl. - Task :contracts:processResources {}
[INFO ] 2023-01-31T09:11:58,374Z [Connection worker] internal.TestCordappImpl. - Run tasks {}
[INFO ] 2023-01-31T09:11:58,374Z [Connection worker] internal.TestCordappImpl. - Task :contracts:classes {}
[INFO ] 2023-01-31T09:11:58,374Z [Connection worker] internal.TestCordappImpl. - Run tasks {}
[INFO ] 2023-01-31T09:11:58,374Z [Connection worker] internal.TestCordappImpl. - Task :contracts:configureCordappFatJar {}
[INFO ] 2023-01-31T09:11:58,384Z [Connection worker] internal.TestCordappImpl. - Resolve dependencies of :contracts:runtime {}
[INFO ] 2023-01-31T09:11:58,417Z [Connection worker] internal.TestCordappImpl. - Task :contracts:configureCordappFatJar {}
[INFO ] 2023-01-31T09:11:58,417Z [Connection worker] internal.TestCordappImpl. - Resolve files of :contracts:runtime {}
[INFO ] 2023-01-31T09:11:58,430Z [Connection worker] internal.TestCordappImpl. - Task :contracts:configureCordappFatJar {}
[INFO ] 2023-01-31T09:11:58,430Z [Connection worker] internal.TestCordappImpl. - Resolve files of :contracts:runtime {}
[INFO ] 2023-01-31T09:11:58,430Z [Connection worker] internal.TestCordappImpl. - Task :contracts:configureCordappFatJar {}
[INFO ] 2023-01-31T09:11:58,430Z [Connection worker] internal.TestCordappImpl. - Resolve files of :contracts:runtime {}
[INFO ] 2023-01-31T09:11:58,430Z [Connection worker] internal.TestCordappImpl. - Task :contracts:configureCordappFatJar {}
[INFO ] 2023-01-31T09:11:58,430Z [Connection worker] internal.TestCordappImpl. - Resolve files of :contracts:runtime {}
[INFO ] 2023-01-31T09:11:58,430Z [Connection worker] internal.TestCordappImpl. - Task :contracts:configureCordappFatJar {}
[INFO ] 2023-01-31T09:11:58,430Z [Connection worker] internal.TestCordappImpl. - Resolve files of :contracts:runtime {}
[INFO ] 2023-01-31T09:11:58,430Z [Connection worker] internal.TestCordappImpl. - Task :contracts:configureCordappFatJar {}
[INFO ] 2023-01-31T09:11:58,430Z [Connection worker] internal.TestCordappImpl. - Run tasks {}
[INFO ] 2023-01-31T09:11:58,430Z [Connection worker] internal.TestCordappImpl. - Task :contracts:inspectClassesForKotlinIC {}
[INFO ] 2023-01-31T09:11:58,440Z [Connection worker] internal.TestCordappImpl. - Run tasks {}
[INFO ] 2023-01-31T09:11:58,440Z [Connection worker] internal.TestCordappImpl. - Task :contracts:jar {}
[INFO ] 2023-01-31T09:11:58,451Z [Connection worker] internal.TestCordappImpl. - Run tasks {}
[INFO ] 2023-01-31T09:11:58,461Z [Connection worker] internal.TestCordappImpl. - Task :workflows:compileKotlin {}
[INFO ] 2023-01-31T09:11:58,462Z [Connection worker] internal.TestCordappImpl. - Resolve files of :workflows:kotlinCompilerClasspath {}
[INFO ] 2023-01-31T09:11:58,462Z [Connection worker] internal.TestCordappImpl. - Task :workflows:compileKotlin {}
[INFO ] 2023-01-31T09:11:58,473Z [Connection worker] internal.TestCordappImpl. - Resolve dependencies of :workflows:kotlinCompilerPluginClasspath {}
[INFO ] 2023-01-31T09:11:58,474Z [Connection worker] internal.TestCordappImpl. - Task :workflows:compileKotlin {}
[INFO ] 2023-01-31T09:11:58,474Z [Connection worker] internal.TestCordappImpl. - Resolve files of :workflows:kotlinCompilerPluginClasspath {}
[INFO ] 2023-01-31T09:11:58,474Z [Connection worker] internal.TestCordappImpl. - Task :workflows:compileKotlin {}
[INFO ] 2023-01-31T09:11:58,474Z [Connection worker] internal.TestCordappImpl. - Resolve dependencies of :workflows:compileClasspath {}
[INFO ] 2023-01-31T09:11:58,506Z [Connection worker] internal.TestCordappImpl. - Task :workflows:compileKotlin {}
[INFO ] 2023-01-31T09:11:58,506Z [Connection worker] internal.TestCordappImpl. - Resolve files of :workflows:compileClasspath {}
[INFO ] 2023-01-31T09:11:58,506Z [Connection worker] internal.TestCordappImpl. - Task :workflows:compileKotlin {}
[INFO ] 2023-01-31T09:11:58,506Z [Connection worker] internal.TestCordappImpl. - Resolve files of :workflows:compileClasspath {}
[INFO ] 2023-01-31T09:11:58,506Z [Connection worker] internal.TestCordappImpl. - Task :workflows:compileKotlin {}
[INFO ] 2023-01-31T09:11:58,506Z [Connection worker] internal.TestCordappImpl. - Resolve files of :workflows:kotlinCompilerPluginClasspath {}
[INFO ] 2023-01-31T09:11:58,506Z [Connection worker] internal.TestCordappImpl. - Task :workflows:compileKotlin {}
[INFO ] 2023-01-31T09:11:58,517Z [Connection worker] internal.TestCordappImpl. - Run tasks {}
[INFO ] 2023-01-31T09:11:58,517Z [Connection worker] internal.TestCordappImpl. - Task :workflows:compileJava {}
[INFO ] 2023-01-31T09:11:58,517Z [Connection worker] internal.TestCordappImpl. - Run tasks {}
[INFO ] 2023-01-31T09:11:58,517Z [Connection worker] internal.TestCordappImpl. - Task :workflows:processResources {}
[INFO ] 2023-01-31T09:11:58,528Z [Connection worker] internal.TestCordappImpl. - Run tasks {}
[INFO ] 2023-01-31T09:11:58,528Z [Connection worker] internal.TestCordappImpl. - Task :workflows:classes {}
[INFO ] 2023-01-31T09:11:58,528Z [Connection worker] internal.TestCordappImpl. - Run tasks {}
[INFO ] 2023-01-31T09:11:58,528Z [Connection worker] internal.TestCordappImpl. - Task :workflows:configureCordappFatJar {}
[INFO ] 2023-01-31T09:11:58,528Z [Connection worker] internal.TestCordappImpl. - Resolve dependencies of :workflows:runtime {}
[INFO ] 2023-01-31T09:11:58,550Z [Connection worker] internal.TestCordappImpl. - Task :workflows:configureCordappFatJar {}
[INFO ] 2023-01-31T09:11:58,550Z [Connection worker] internal.TestCordappImpl. - Resolve files of :workflows:runtime {}
[INFO ] 2023-01-31T09:11:58,550Z [Connection worker] internal.TestCordappImpl. - Task :workflows:configureCordappFatJar {}
[INFO ] 2023-01-31T09:11:58,550Z [Connection worker] internal.TestCordappImpl. - Resolve files of :workflows:runtime {}
[INFO ] 2023-01-31T09:11:58,550Z [Connection worker] internal.TestCordappImpl. - Task :workflows:configureCordappFatJar {}
[INFO ] 2023-01-31T09:11:58,550Z [Connection worker] internal.TestCordappImpl. - Resolve files of :workflows:runtime {}
[INFO ] 2023-01-31T09:11:58,550Z [Connection worker] internal.TestCordappImpl. - Task :workflows:configureCordappFatJar {}
[INFO ] 2023-01-31T09:11:58,550Z [Connection worker] internal.TestCordappImpl. - Resolve files of :workflows:runtime {}
[INFO ] 2023-01-31T09:11:58,550Z [Connection worker] internal.TestCordappImpl. - Task :workflows:configureCordappFatJar {}
[INFO ] 2023-01-31T09:11:58,550Z [Connection worker] internal.TestCordappImpl. - Resolve files of :workflows:runtime {}
[INFO ] 2023-01-31T09:11:58,551Z [Connection worker] internal.TestCordappImpl. - Task :workflows:configureCordappFatJar {}
[INFO ] 2023-01-31T09:11:58,551Z [Connection worker] internal.TestCordappImpl. - Resolve files of :workflows:runtime {}
[INFO ] 2023-01-31T09:11:58,551Z [Connection worker] internal.TestCordappImpl. - Task :workflows:configureCordappFatJar {}
[INFO ] 2023-01-31T09:11:58,561Z [Connection worker] internal.TestCordappImpl. - Resolve files of :workflows:runtime {}
[INFO ] 2023-01-31T09:11:58,561Z [Connection worker] internal.TestCordappImpl. - Task :workflows:configureCordappFatJar {}
[INFO ] 2023-01-31T09:11:58,561Z [Connection worker] internal.TestCordappImpl. - Resolve files of :workflows:runtime {}
[INFO ] 2023-01-31T09:11:58,561Z [Connection worker] internal.TestCordappImpl. - Task :workflows:configureCordappFatJar {}
[INFO ] 2023-01-31T09:11:58,561Z [Connection worker] internal.TestCordappImpl. - Run tasks {}
[INFO ] 2023-01-31T09:11:58,561Z [Connection worker] internal.TestCordappImpl. - Task :workflows:inspectClassesForKotlinIC {}
[INFO ] 2023-01-31T09:11:58,572Z [Connection worker] internal.TestCordappImpl. - Run tasks {}
[INFO ] 2023-01-31T09:11:58,572Z [Connection worker] internal.TestCordappImpl. - Task :workflows:jar {}
[INFO ] 2023-01-31T09:11:58,593Z [Connection worker] internal.TestCordappImpl. - Run tasks {}
[INFO ] 2023-01-31T09:11:58,604Z [Connection worker] internal.TestCordappImpl. - Run build {}
[INFO ] 2023-01-31T09:11:58,604Z [Connection worker] internal.TestCordappImpl. - Build model 'java.lang.Void' for project ':workflows' {}
[INFO ] 2023-01-31T09:11:58,605Z [Connection worker] internal.TestCordappImpl. - Run build {}
[INFO ] 2023-01-31T09:11:58,621Z [Connection worker] internal.TestCordappImpl. - Build {}
[INFO ] 2023-01-31T09:11:58,639Z [Connection worker] internal.TestCordappImpl. - Deleting unused version-specific caches in /Users/peter.li/Desktop/obligation-cordapp/.gradle {}
[INFO ] 2023-01-31T09:11:58,640Z [Connection worker] internal.TestCordappImpl. - Build {}
[INFO ] 2023-01-31T09:11:58,667Z [Connection worker] internal.TestCordappImpl. -  {}
[INFO ] 2023-01-31T09:12:03,419Z [Test worker] cordapp.JarScanningCordappLoader. - Looking for CorDapps in [build/mock-network/20230131-091151.143-013EE91356D92CDA/nodes/0/cordapps] {}
[INFO ] 2023-01-31T09:12:03,427Z [Test worker] cordapp.JarScanningCordappLoader. - Loading CorDapps from RestrictedURL(url=file:/Users/peter.li/Desktop/obligation-cordapp/workflows/build/mock-network/20230131-091151.143-013EE91356D92CDA/nodes/0/cordapps/accounts-contracts-1.0.jar, rootPackageName=null), RestrictedURL(url=file:/Users/peter.li/Desktop/obligation-cordapp/workflows/build/mock-network/20230131-091151.143-013EE91356D92CDA/nodes/0/cordapps/accounts-workflows-1.0.jar, rootPackageName=null), RestrictedURL(url=file:/Users/peter.li/Desktop/obligation-cordapp/workflows/build/mock-network/20230131-091151.143-013EE91356D92CDA/nodes/0/cordapps/corda-finance-contracts-4.9.jar, rootPackageName=null), RestrictedURL(url=file:/Users/peter.li/Desktop/obligation-cordapp/workflows/build/mock-network/20230131-091151.143-013EE91356D92CDA/nodes/0/cordapps/contracts-1.0.jar, rootPackageName=null), RestrictedURL(url=file:/Users/peter.li/Desktop/obligation-cordapp/workflows/build/mock-network/20230131-091151.143-013EE91356D92CDA/nodes/0/cordapps/workflows-1.0.jar, rootPackageName=null) {}
[INFO ] 2023-01-31T09:12:03,437Z [Test worker] cordapp.JarScanningCordappLoader. - Scanning CorDapp in file:/Users/peter.li/Desktop/obligation-cordapp/workflows/build/mock-network/20230131-091151.143-013EE91356D92CDA/nodes/0/cordapps/accounts-contracts-1.0.jar {}
[INFO ] 2023-01-31T09:12:03,543Z [Test worker] cordapp.JarScanningCordappLoader. - Scanning CorDapp in file:/Users/peter.li/Desktop/obligation-cordapp/workflows/build/mock-network/20230131-091151.143-013EE91356D92CDA/nodes/0/cordapps/accounts-workflows-1.0.jar {}
[INFO ] 2023-01-31T09:12:03,726Z [Test worker] cordapp.JarScanningCordappLoader. - Scanning CorDapp in file:/Users/peter.li/Desktop/obligation-cordapp/workflows/build/mock-network/20230131-091151.143-013EE91356D92CDA/nodes/0/cordapps/corda-finance-contracts-4.9.jar {}
[INFO ] 2023-01-31T09:12:03,871Z [Test worker] cordapp.JarScanningCordappLoader. - Scanning CorDapp in file:/Users/peter.li/Desktop/obligation-cordapp/workflows/build/mock-network/20230131-091151.143-013EE91356D92CDA/nodes/0/cordapps/contracts-1.0.jar {}
[INFO ] 2023-01-31T09:12:03,884Z [Test worker] cordapp.JarScanningCordappLoader. - Scanning CorDapp in file:/Users/peter.li/Desktop/obligation-cordapp/workflows/build/mock-network/20230131-091151.143-013EE91356D92CDA/nodes/0/cordapps/workflows-1.0.jar {}
[INFO ] 2023-01-31T09:12:05,164Z [Test worker] internal.InternalMockNetwork$MockNode. - MessagingService active change to: false {}
[INFO ] 2023-01-31T09:12:05,372Z [Test worker] internal.InternalMockNetwork$MockNode. - Flow external operation executor has a max of 2 threads {}
[INFO ] 2023-01-31T09:12:05,433Z [Test worker] internal.InternalMockNetwork$MockNode. - Node starting up ... {}
[INFO ] 2023-01-31T09:12:05,452Z [Test worker] internal.KeyStoreHandler. - Loaded trusted root certificate: DL7fwxLm5xbiMD8adUuYTsPZHAict46Ng4w6RNcySt5vAw, alias: cordarootca {}
[INFO ] 2023-01-31T09:12:05,456Z [Test worker] internal.KeyStoreHandler. - Loaded node identity key: DL93EtDyChBkAMwXXdfAJJyYeM32A8aJWpBBo94hE9sLbr, alias: identity-private-key {}
[INFO ] 2023-01-31T09:12:05,565Z [Test worker] internal.NodeFlowManager. - Registered com.r3.corda.lib.accounts.workflows.flows.ShareStateAndSyncAccounts to initiate com.r3.corda.lib.accounts.workflows.flows.ReceiveStateAndSyncAccounts (version 1) {}
[INFO ] 2023-01-31T09:12:05,565Z [Test worker] internal.NodeFlowManager. - Registered com.r3.corda.lib.accounts.workflows.flows.ShareStateWithAccount to initiate com.r3.corda.lib.accounts.workflows.flows.ReceiveStateForAccount (version 1) {}
[INFO ] 2023-01-31T09:12:05,566Z [Test worker] internal.NodeFlowManager. - Registered com.r3.corda.lib.accounts.workflows.flows.RequestAccountInfo to initiate com.r3.corda.lib.accounts.workflows.flows.RequestAccountInfoHandler (version 1) {}
[INFO ] 2023-01-31T09:12:05,567Z [Test worker] internal.NodeFlowManager. - Registered com.r3.corda.lib.accounts.workflows.flows.RequestKeyForAccount to initiate com.r3.corda.lib.accounts.workflows.flows.SendKeyForAccount (version 1) {}
[INFO ] 2023-01-31T09:12:05,567Z [Test worker] internal.NodeFlowManager. - Registered com.r3.corda.lib.accounts.workflows.flows.ShareAccountInfo to initiate com.r3.corda.lib.accounts.workflows.flows.ShareAccountInfoHandler (version 1) {}
[INFO ] 2023-01-31T09:12:05,568Z [Test worker] internal.NodeFlowManager. - Registered net.corda.samples.obligation.flows.IOUIssueFlow to initiate net.corda.samples.obligation.flows.IOUIssueFlowResponder (version 1) {}
[INFO ] 2023-01-31T09:12:05,569Z [Test worker] internal.NodeFlowManager. - Registered net.corda.samples.obligation.flows.IOUSettleFlow to initiate net.corda.samples.obligation.flows.IOUSettleFlowResponder (version 1) {}
[INFO ] 2023-01-31T09:12:05,569Z [Test worker] internal.NodeFlowManager. - Registered net.corda.samples.obligation.flows.IOUTransferFlow to initiate net.corda.samples.obligation.flows.IOUTransferFlowResponder (version 1) {}
[INFO ] 2023-01-31T09:12:05,642Z [Test worker] internal.InternalMockNetwork$MockNode. - Loaded network parameters: NetworkParameters {
      minimumPlatformVersion=4
      notaries=[NotaryInfo(identity=O=Notary, L=London, C=GB, validating=true)]
      maxMessageSize=10485760
      maxTransactionSize=524288000
      whitelistedContractImplementations {
        
      }
      eventHorizon=PT720H
      packageOwnership {
        
      }
      modifiedTime=2023-01-31T09:11:50.724Z
      epoch=1
  } {}
[INFO ] 2023-01-31T09:12:10,220Z [Test worker] internal.InternalMockNetwork$MockNode. - Connected to H2 database. {}
[INFO ] 2023-01-31T09:12:10,292Z [Test worker] persistence.HibernateConfiguration. - Init HibernateConfiguration for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1), AccountsContractsSchemaV1(name=com.r3.corda.lib.accounts.contracts.internal.schemas.AccountsContractsSchema, version=1), AccountsWorkflowsSchemaV1(name=com.r3.corda.lib.accounts.workflows.internal.schemas.AccountsWorkflowsSchema, version=1), CashSchemaV1(name=net.corda.finance.schemas.CashSchema, version=1), CommercialPaperSchemaV1(name=net.corda.finance.schemas.CommercialPaperSchema, version=1), JPANotarySchemaV1(name=net.corda.notary.jpa.JPANotarySchema, version=1)] {}
[INFO ] 2023-01-31T09:12:10,298Z [Test worker] factory.BaseSessionFactoryFactory. - Creating session factory for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1), AccountsContractsSchemaV1(name=com.r3.corda.lib.accounts.contracts.internal.schemas.AccountsContractsSchema, version=1), AccountsWorkflowsSchemaV1(name=com.r3.corda.lib.accounts.workflows.internal.schemas.AccountsWorkflowsSchema, version=1), CashSchemaV1(name=net.corda.finance.schemas.CashSchema, version=1), CommercialPaperSchemaV1(name=net.corda.finance.schemas.CommercialPaperSchema, version=1), JPANotarySchemaV1(name=net.corda.notary.jpa.JPANotarySchema, version=1)] {}
[INFO ] 2023-01-31T09:12:12,747Z [Test worker] factory.BaseSessionFactoryFactory. - Created session factory for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1), AccountsContractsSchemaV1(name=com.r3.corda.lib.accounts.contracts.internal.schemas.AccountsContractsSchema, version=1), AccountsWorkflowsSchemaV1(name=com.r3.corda.lib.accounts.workflows.internal.schemas.AccountsWorkflowsSchema, version=1), CashSchemaV1(name=net.corda.finance.schemas.CashSchema, version=1), CommercialPaperSchemaV1(name=net.corda.finance.schemas.CommercialPaperSchema, version=1), JPANotarySchemaV1(name=net.corda.notary.jpa.JPANotarySchema, version=1)] {}
[INFO ] 2023-01-31T09:12:13,048Z [Test worker] internal.InternalMockNetwork$MockNode. - Node-info has changed so submitting update. Old node-info was null {}
[INFO ] 2023-01-31T09:12:13,055Z [Test worker] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Notary, L=London, C=GB], platformVersion=11, serial=1675156333048), owningKey=DL93EtDyChBkAMwXXdfAJJyYeM32A8aJWpBBo94hE9sLbr {}
[INFO ] 2023-01-31T09:12:13,055Z [Test worker] network.PersistentNetworkMapCache. - No previous node found for O=Notary, L=London, C=GB {}
[INFO ] 2023-01-31T09:12:13,189Z [Test worker] internal.InternalMockNetwork$MockNode. - New node-info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Notary, L=London, C=GB], platformVersion=11, serial=1675156333048) {}
[INFO ] 2023-01-31T09:12:13,241Z [Test worker] network.NetworkMapUpdater. - Auto-accept enabled for network parameter changes which modify only: [epoch, modifiedTime, packageOwnership, whitelistedContractImplementations] {}
[INFO ] 2023-01-31T09:12:13,264Z [Test worker] internal.MockNodeMessagingService. - Status change to true {}
[INFO ] 2023-01-31T09:12:13,265Z [Test worker] internal.InternalMockNetwork$MockNode. - MessagingService active change to: true {}
[INFO ] 2023-01-31T09:12:13,295Z [MockNode-1-2] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Notary, L=London, C=GB], platformVersion=11, serial=1675156333048), owningKey=DL93EtDyChBkAMwXXdfAJJyYeM32A8aJWpBBo94hE9sLbr {}
[INFO ] 2023-01-31T09:12:13,295Z [MockNode-1-2] network.PersistentNetworkMapCache. - Previous node was identical to incoming one - doing nothing {}
[INFO ] 2023-01-31T09:12:13,391Z [Test worker] persistence.NodeAttachmentService. - Stored new attachment: id=D370FD972C7E07CE73F4F9B7886D226807F6B16C4EE287398B9C69384109DC14 uploader=app filename=Accounts SDK - States and Contracts {}
[INFO ] 2023-01-31T09:12:13,428Z [Test worker] persistence.NodeAttachmentService. - Stored new attachment: id=BD0C932EAF8B1FE96DCBBF275B914BCD776D14EDC8F97DCEBF7E15DA09C606AE uploader=app filename=Corda Finance Demo {}
[INFO ] 2023-01-31T09:12:13,444Z [Test worker] persistence.NodeAttachmentService. - Stored new attachment: id=8D797B45F40704FA4FD70921F5BC6E2D7B34450D345CE6788D2A87859EF63BD8 uploader=app filename=Obligation Contracts {}
[INFO ] 2023-01-31T09:12:13,464Z [Test worker] internal.InternalMockNetwork$MockNode. - Installed com.r3.corda.lib.accounts.workflows.services.KeyManagementBackedAccountService Corda service {}
[INFO ] 2023-01-31T09:12:13,464Z [Test worker] utilities.NotaryLoader. - Starting notary service: class net.corda.notary.jpa.JPANotaryService {}
[INFO ] 2023-01-31T09:12:14,234Z [Test worker] statemachine.SingleThreadedStateMachineManager. - Node ready, info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Notary, L=London, C=GB], platformVersion=11, serial=1675156333048) {}
[INFO ] 2023-01-31T09:12:14,241Z [Test worker] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Notary, L=London, C=GB], platformVersion=11, serial=1675156333048), owningKey=DL93EtDyChBkAMwXXdfAJJyYeM32A8aJWpBBo94hE9sLbr {}
[INFO ] 2023-01-31T09:12:14,241Z [Test worker] network.PersistentNetworkMapCache. - Previous node was identical to incoming one - doing nothing {}
[INFO ] 2023-01-31T09:12:14,241Z [Test worker] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Notary, L=London, C=GB], platformVersion=11, serial=1675156333048), owningKey=DL93EtDyChBkAMwXXdfAJJyYeM32A8aJWpBBo94hE9sLbr {}
[INFO ] 2023-01-31T09:12:14,241Z [Test worker] network.PersistentNetworkMapCache. - Previous node was identical to incoming one - doing nothing {}
[INFO ] 2023-01-31T09:12:14,257Z [Test worker] cordapp.JarScanningCordappLoader. - Looking for CorDapps in [build/mock-network/20230131-091151.143-013EE91356D92CDA/nodes/1/cordapps] {}
[INFO ] 2023-01-31T09:12:14,257Z [Test worker] cordapp.JarScanningCordappLoader. - Loading CorDapps from RestrictedURL(url=file:/Users/peter.li/Desktop/obligation-cordapp/workflows/build/mock-network/20230131-091151.143-013EE91356D92CDA/nodes/1/cordapps/accounts-contracts-1.0.jar, rootPackageName=null), RestrictedURL(url=file:/Users/peter.li/Desktop/obligation-cordapp/workflows/build/mock-network/20230131-091151.143-013EE91356D92CDA/nodes/1/cordapps/accounts-workflows-1.0.jar, rootPackageName=null), RestrictedURL(url=file:/Users/peter.li/Desktop/obligation-cordapp/workflows/build/mock-network/20230131-091151.143-013EE91356D92CDA/nodes/1/cordapps/corda-finance-contracts-4.9.jar, rootPackageName=null), RestrictedURL(url=file:/Users/peter.li/Desktop/obligation-cordapp/workflows/build/mock-network/20230131-091151.143-013EE91356D92CDA/nodes/1/cordapps/contracts-1.0.jar, rootPackageName=null), RestrictedURL(url=file:/Users/peter.li/Desktop/obligation-cordapp/workflows/build/mock-network/20230131-091151.143-013EE91356D92CDA/nodes/1/cordapps/workflows-1.0.jar, rootPackageName=null) {}
[INFO ] 2023-01-31T09:12:14,257Z [Test worker] cordapp.JarScanningCordappLoader. - Scanning CorDapp in file:/Users/peter.li/Desktop/obligation-cordapp/workflows/build/mock-network/20230131-091151.143-013EE91356D92CDA/nodes/1/cordapps/accounts-contracts-1.0.jar {}
[INFO ] 2023-01-31T09:12:14,282Z [Test worker] cordapp.JarScanningCordappLoader. - Scanning CorDapp in file:/Users/peter.li/Desktop/obligation-cordapp/workflows/build/mock-network/20230131-091151.143-013EE91356D92CDA/nodes/1/cordapps/accounts-workflows-1.0.jar {}
[INFO ] 2023-01-31T09:12:14,292Z [Test worker] cordapp.JarScanningCordappLoader. - Scanning CorDapp in file:/Users/peter.li/Desktop/obligation-cordapp/workflows/build/mock-network/20230131-091151.143-013EE91356D92CDA/nodes/1/cordapps/corda-finance-contracts-4.9.jar {}
[INFO ] 2023-01-31T09:12:14,308Z [Test worker] cordapp.JarScanningCordappLoader. - Scanning CorDapp in file:/Users/peter.li/Desktop/obligation-cordapp/workflows/build/mock-network/20230131-091151.143-013EE91356D92CDA/nodes/1/cordapps/contracts-1.0.jar {}
[INFO ] 2023-01-31T09:12:14,315Z [Test worker] cordapp.JarScanningCordappLoader. - Scanning CorDapp in file:/Users/peter.li/Desktop/obligation-cordapp/workflows/build/mock-network/20230131-091151.143-013EE91356D92CDA/nodes/1/cordapps/workflows-1.0.jar {}
[INFO ] 2023-01-31T09:12:14,347Z [Test worker] internal.InternalMockNetwork$MockNode. - MessagingService active change to: false {}
[INFO ] 2023-01-31T09:12:14,348Z [Test worker] internal.InternalMockNetwork$MockNode. - Flow external operation executor has a max of 2 threads {}
[INFO ] 2023-01-31T09:12:14,349Z [Test worker] internal.InternalMockNetwork$MockNode. - Node starting up ... {}
[INFO ] 2023-01-31T09:12:14,399Z [Test worker] internal.KeyStoreHandler. - Loaded trusted root certificate: DL7fwxLm5xbiMD8adUuYTsPZHAict46Ng4w6RNcySt5vAw, alias: cordarootca {}
[INFO ] 2023-01-31T09:12:14,400Z [Test worker] internal.KeyStoreHandler. - Loaded node identity key: DL6wkcEgsMowj9Yw5f1UiZ157UJRLYM7xgrPMaTytBB4GM, alias: identity-private-key {}
[INFO ] 2023-01-31T09:12:14,407Z [Test worker] internal.NodeFlowManager. - Registered com.r3.corda.lib.accounts.workflows.flows.ShareStateAndSyncAccounts to initiate com.r3.corda.lib.accounts.workflows.flows.ReceiveStateAndSyncAccounts (version 1) {}
[INFO ] 2023-01-31T09:12:14,407Z [Test worker] internal.NodeFlowManager. - Registered com.r3.corda.lib.accounts.workflows.flows.ShareStateWithAccount to initiate com.r3.corda.lib.accounts.workflows.flows.ReceiveStateForAccount (version 1) {}
[INFO ] 2023-01-31T09:12:14,407Z [Test worker] internal.NodeFlowManager. - Registered com.r3.corda.lib.accounts.workflows.flows.RequestAccountInfo to initiate com.r3.corda.lib.accounts.workflows.flows.RequestAccountInfoHandler (version 1) {}
[INFO ] 2023-01-31T09:12:14,407Z [Test worker] internal.NodeFlowManager. - Registered com.r3.corda.lib.accounts.workflows.flows.RequestKeyForAccount to initiate com.r3.corda.lib.accounts.workflows.flows.SendKeyForAccount (version 1) {}
[INFO ] 2023-01-31T09:12:14,407Z [Test worker] internal.NodeFlowManager. - Registered com.r3.corda.lib.accounts.workflows.flows.ShareAccountInfo to initiate com.r3.corda.lib.accounts.workflows.flows.ShareAccountInfoHandler (version 1) {}
[INFO ] 2023-01-31T09:12:14,407Z [Test worker] internal.NodeFlowManager. - Registered net.corda.samples.obligation.flows.IOUIssueFlow to initiate net.corda.samples.obligation.flows.IOUIssueFlowResponder (version 1) {}
[INFO ] 2023-01-31T09:12:14,407Z [Test worker] internal.NodeFlowManager. - Registered net.corda.samples.obligation.flows.IOUSettleFlow to initiate net.corda.samples.obligation.flows.IOUSettleFlowResponder (version 1) {}
[INFO ] 2023-01-31T09:12:14,407Z [Test worker] internal.NodeFlowManager. - Registered net.corda.samples.obligation.flows.IOUTransferFlow to initiate net.corda.samples.obligation.flows.IOUTransferFlowResponder (version 1) {}
[INFO ] 2023-01-31T09:12:14,413Z [Test worker] internal.InternalMockNetwork$MockNode. - Loaded network parameters: NetworkParameters {
      minimumPlatformVersion=4
      notaries=[NotaryInfo(identity=O=Notary, L=London, C=GB, validating=true)]
      maxMessageSize=10485760
      maxTransactionSize=524288000
      whitelistedContractImplementations {
        
      }
      eventHorizon=PT720H
      packageOwnership {
        
      }
      modifiedTime=2023-01-31T09:11:50.724Z
      epoch=1
  } {}
[INFO ] 2023-01-31T09:12:15,095Z [Test worker] internal.InternalMockNetwork$MockNode. - Connected to H2 database. {}
[INFO ] 2023-01-31T09:12:15,097Z [Test worker] persistence.HibernateConfiguration. - Init HibernateConfiguration for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1), AccountsContractsSchemaV1(name=com.r3.corda.lib.accounts.contracts.internal.schemas.AccountsContractsSchema, version=1), AccountsWorkflowsSchemaV1(name=com.r3.corda.lib.accounts.workflows.internal.schemas.AccountsWorkflowsSchema, version=1), CashSchemaV1(name=net.corda.finance.schemas.CashSchema, version=1), CommercialPaperSchemaV1(name=net.corda.finance.schemas.CommercialPaperSchema, version=1)] {}
[INFO ] 2023-01-31T09:12:15,097Z [Test worker] factory.BaseSessionFactoryFactory. - Creating session factory for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1), AccountsContractsSchemaV1(name=com.r3.corda.lib.accounts.contracts.internal.schemas.AccountsContractsSchema, version=1), AccountsWorkflowsSchemaV1(name=com.r3.corda.lib.accounts.workflows.internal.schemas.AccountsWorkflowsSchema, version=1), CashSchemaV1(name=net.corda.finance.schemas.CashSchema, version=1), CommercialPaperSchemaV1(name=net.corda.finance.schemas.CommercialPaperSchema, version=1)] {}
[INFO ] 2023-01-31T09:12:15,274Z [Test worker] factory.BaseSessionFactoryFactory. - Created session factory for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1), AccountsContractsSchemaV1(name=com.r3.corda.lib.accounts.contracts.internal.schemas.AccountsContractsSchema, version=1), AccountsWorkflowsSchemaV1(name=com.r3.corda.lib.accounts.workflows.internal.schemas.AccountsWorkflowsSchema, version=1), CashSchemaV1(name=net.corda.finance.schemas.CashSchema, version=1), CommercialPaperSchemaV1(name=net.corda.finance.schemas.CommercialPaperSchema, version=1)] {}
[INFO ] 2023-01-31T09:12:15,278Z [Test worker] internal.InternalMockNetwork$MockNode. - Node-info has changed so submitting update. Old node-info was null {}
[INFO ] 2023-01-31T09:12:15,282Z [Test worker] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 1, L=London, C=GB], platformVersion=11, serial=1675156335278), owningKey=DL6wkcEgsMowj9Yw5f1UiZ157UJRLYM7xgrPMaTytBB4GM {}
[INFO ] 2023-01-31T09:12:15,282Z [Test worker] network.PersistentNetworkMapCache. - No previous node found for O=Mock Company 1, L=London, C=GB {}
[INFO ] 2023-01-31T09:12:15,290Z [Test worker] internal.InternalMockNetwork$MockNode. - New node-info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 1, L=London, C=GB], platformVersion=11, serial=1675156335278) {}
[INFO ] 2023-01-31T09:12:15,297Z [Test worker] network.NetworkMapUpdater. - Auto-accept enabled for network parameter changes which modify only: [epoch, modifiedTime, packageOwnership, whitelistedContractImplementations] {}
[INFO ] 2023-01-31T09:12:15,297Z [Test worker] internal.MockNodeMessagingService. - Status change to true {}
[INFO ] 2023-01-31T09:12:15,297Z [Test worker] internal.InternalMockNetwork$MockNode. - MessagingService active change to: true {}
[INFO ] 2023-01-31T09:12:15,310Z [MockNode-2-2] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 1, L=London, C=GB], platformVersion=11, serial=1675156335278), owningKey=DL6wkcEgsMowj9Yw5f1UiZ157UJRLYM7xgrPMaTytBB4GM {}
[INFO ] 2023-01-31T09:12:15,310Z [MockNode-2-2] network.PersistentNetworkMapCache. - Previous node was identical to incoming one - doing nothing {}
[INFO ] 2023-01-31T09:12:15,342Z [Test worker] persistence.NodeAttachmentService. - Stored new attachment: id=D370FD972C7E07CE73F4F9B7886D226807F6B16C4EE287398B9C69384109DC14 uploader=app filename=Accounts SDK - States and Contracts {}
[INFO ] 2023-01-31T09:12:15,389Z [Test worker] persistence.NodeAttachmentService. - Stored new attachment: id=BD0C932EAF8B1FE96DCBBF275B914BCD776D14EDC8F97DCEBF7E15DA09C606AE uploader=app filename=Corda Finance Demo {}
[INFO ] 2023-01-31T09:12:15,410Z [Test worker] persistence.NodeAttachmentService. - Stored new attachment: id=8D797B45F40704FA4FD70921F5BC6E2D7B34450D345CE6788D2A87859EF63BD8 uploader=app filename=Obligation Contracts {}
[INFO ] 2023-01-31T09:12:15,412Z [Test worker] internal.InternalMockNetwork$MockNode. - Installed com.r3.corda.lib.accounts.workflows.services.KeyManagementBackedAccountService Corda service {}
[INFO ] 2023-01-31T09:12:15,435Z [Test worker] statemachine.SingleThreadedStateMachineManager. - Node ready, info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 1, L=London, C=GB], platformVersion=11, serial=1675156335278) {}
[INFO ] 2023-01-31T09:12:15,438Z [Test worker] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Notary, L=London, C=GB], platformVersion=11, serial=1675156333048), owningKey=DL93EtDyChBkAMwXXdfAJJyYeM32A8aJWpBBo94hE9sLbr {}
[INFO ] 2023-01-31T09:12:15,438Z [Test worker] network.PersistentNetworkMapCache. - No previous node found for O=Notary, L=London, C=GB {}
[INFO ] 2023-01-31T09:12:15,450Z [Test worker] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 1, L=London, C=GB], platformVersion=11, serial=1675156335278), owningKey=DL6wkcEgsMowj9Yw5f1UiZ157UJRLYM7xgrPMaTytBB4GM {}
[INFO ] 2023-01-31T09:12:15,450Z [Test worker] network.PersistentNetworkMapCache. - No previous node found for O=Mock Company 1, L=London, C=GB {}
[INFO ] 2023-01-31T09:12:15,461Z [Test worker] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 1, L=London, C=GB], platformVersion=11, serial=1675156335278), owningKey=DL6wkcEgsMowj9Yw5f1UiZ157UJRLYM7xgrPMaTytBB4GM {}
[INFO ] 2023-01-31T09:12:15,461Z [Test worker] network.PersistentNetworkMapCache. - Previous node was identical to incoming one - doing nothing {}
[INFO ] 2023-01-31T09:12:15,461Z [Test worker] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 1, L=London, C=GB], platformVersion=11, serial=1675156335278), owningKey=DL6wkcEgsMowj9Yw5f1UiZ157UJRLYM7xgrPMaTytBB4GM {}
[INFO ] 2023-01-31T09:12:15,461Z [Test worker] network.PersistentNetworkMapCache. - Previous node was identical to incoming one - doing nothing {}
[INFO ] 2023-01-31T09:12:15,475Z [Test worker] cordapp.JarScanningCordappLoader. - Looking for CorDapps in [build/mock-network/20230131-091151.143-013EE91356D92CDA/nodes/2/cordapps] {}
[INFO ] 2023-01-31T09:12:15,475Z [Test worker] cordapp.JarScanningCordappLoader. - Loading CorDapps from RestrictedURL(url=file:/Users/peter.li/Desktop/obligation-cordapp/workflows/build/mock-network/20230131-091151.143-013EE91356D92CDA/nodes/2/cordapps/accounts-contracts-1.0.jar, rootPackageName=null), RestrictedURL(url=file:/Users/peter.li/Desktop/obligation-cordapp/workflows/build/mock-network/20230131-091151.143-013EE91356D92CDA/nodes/2/cordapps/accounts-workflows-1.0.jar, rootPackageName=null), RestrictedURL(url=file:/Users/peter.li/Desktop/obligation-cordapp/workflows/build/mock-network/20230131-091151.143-013EE91356D92CDA/nodes/2/cordapps/corda-finance-contracts-4.9.jar, rootPackageName=null), RestrictedURL(url=file:/Users/peter.li/Desktop/obligation-cordapp/workflows/build/mock-network/20230131-091151.143-013EE91356D92CDA/nodes/2/cordapps/contracts-1.0.jar, rootPackageName=null), RestrictedURL(url=file:/Users/peter.li/Desktop/obligation-cordapp/workflows/build/mock-network/20230131-091151.143-013EE91356D92CDA/nodes/2/cordapps/workflows-1.0.jar, rootPackageName=null) {}
[INFO ] 2023-01-31T09:12:15,476Z [Test worker] cordapp.JarScanningCordappLoader. - Scanning CorDapp in file:/Users/peter.li/Desktop/obligation-cordapp/workflows/build/mock-network/20230131-091151.143-013EE91356D92CDA/nodes/2/cordapps/accounts-contracts-1.0.jar {}
[INFO ] 2023-01-31T09:12:15,498Z [Test worker] cordapp.JarScanningCordappLoader. - Scanning CorDapp in file:/Users/peter.li/Desktop/obligation-cordapp/workflows/build/mock-network/20230131-091151.143-013EE91356D92CDA/nodes/2/cordapps/accounts-workflows-1.0.jar {}
[INFO ] 2023-01-31T09:12:15,506Z [Test worker] cordapp.JarScanningCordappLoader. - Scanning CorDapp in file:/Users/peter.li/Desktop/obligation-cordapp/workflows/build/mock-network/20230131-091151.143-013EE91356D92CDA/nodes/2/cordapps/corda-finance-contracts-4.9.jar {}
[INFO ] 2023-01-31T09:12:15,520Z [Test worker] cordapp.JarScanningCordappLoader. - Scanning CorDapp in file:/Users/peter.li/Desktop/obligation-cordapp/workflows/build/mock-network/20230131-091151.143-013EE91356D92CDA/nodes/2/cordapps/contracts-1.0.jar {}
[INFO ] 2023-01-31T09:12:15,525Z [Test worker] cordapp.JarScanningCordappLoader. - Scanning CorDapp in file:/Users/peter.li/Desktop/obligation-cordapp/workflows/build/mock-network/20230131-091151.143-013EE91356D92CDA/nodes/2/cordapps/workflows-1.0.jar {}
[INFO ] 2023-01-31T09:12:15,549Z [Test worker] internal.InternalMockNetwork$MockNode. - MessagingService active change to: false {}
[INFO ] 2023-01-31T09:12:15,550Z [Test worker] internal.InternalMockNetwork$MockNode. - Flow external operation executor has a max of 2 threads {}
[INFO ] 2023-01-31T09:12:15,551Z [Test worker] internal.InternalMockNetwork$MockNode. - Node starting up ... {}
[INFO ] 2023-01-31T09:12:15,587Z [Test worker] internal.KeyStoreHandler. - Loaded trusted root certificate: DL7fwxLm5xbiMD8adUuYTsPZHAict46Ng4w6RNcySt5vAw, alias: cordarootca {}
[INFO ] 2023-01-31T09:12:15,588Z [Test worker] internal.KeyStoreHandler. - Loaded node identity key: DLBMS2AyJxiZqFXuCgGz4Q6NPqFcNTzeA9PY5ffhWPQd35, alias: identity-private-key {}
[INFO ] 2023-01-31T09:12:15,593Z [Test worker] internal.NodeFlowManager. - Registered com.r3.corda.lib.accounts.workflows.flows.ShareStateAndSyncAccounts to initiate com.r3.corda.lib.accounts.workflows.flows.ReceiveStateAndSyncAccounts (version 1) {}
[INFO ] 2023-01-31T09:12:15,593Z [Test worker] internal.NodeFlowManager. - Registered com.r3.corda.lib.accounts.workflows.flows.ShareStateWithAccount to initiate com.r3.corda.lib.accounts.workflows.flows.ReceiveStateForAccount (version 1) {}
[INFO ] 2023-01-31T09:12:15,593Z [Test worker] internal.NodeFlowManager. - Registered com.r3.corda.lib.accounts.workflows.flows.RequestAccountInfo to initiate com.r3.corda.lib.accounts.workflows.flows.RequestAccountInfoHandler (version 1) {}
[INFO ] 2023-01-31T09:12:15,594Z [Test worker] internal.NodeFlowManager. - Registered com.r3.corda.lib.accounts.workflows.flows.RequestKeyForAccount to initiate com.r3.corda.lib.accounts.workflows.flows.SendKeyForAccount (version 1) {}
[INFO ] 2023-01-31T09:12:15,594Z [Test worker] internal.NodeFlowManager. - Registered com.r3.corda.lib.accounts.workflows.flows.ShareAccountInfo to initiate com.r3.corda.lib.accounts.workflows.flows.ShareAccountInfoHandler (version 1) {}
[INFO ] 2023-01-31T09:12:15,594Z [Test worker] internal.NodeFlowManager. - Registered net.corda.samples.obligation.flows.IOUIssueFlow to initiate net.corda.samples.obligation.flows.IOUIssueFlowResponder (version 1) {}
[INFO ] 2023-01-31T09:12:15,594Z [Test worker] internal.NodeFlowManager. - Registered net.corda.samples.obligation.flows.IOUSettleFlow to initiate net.corda.samples.obligation.flows.IOUSettleFlowResponder (version 1) {}
[INFO ] 2023-01-31T09:12:15,594Z [Test worker] internal.NodeFlowManager. - Registered net.corda.samples.obligation.flows.IOUTransferFlow to initiate net.corda.samples.obligation.flows.IOUTransferFlowResponder (version 1) {}
[INFO ] 2023-01-31T09:12:15,599Z [Test worker] internal.InternalMockNetwork$MockNode. - Loaded network parameters: NetworkParameters {
      minimumPlatformVersion=4
      notaries=[NotaryInfo(identity=O=Notary, L=London, C=GB, validating=true)]
      maxMessageSize=10485760
      maxTransactionSize=524288000
      whitelistedContractImplementations {
        
      }
      eventHorizon=PT720H
      packageOwnership {
        
      }
      modifiedTime=2023-01-31T09:11:50.724Z
      epoch=1
  } {}
[INFO ] 2023-01-31T09:12:16,200Z [Test worker] internal.InternalMockNetwork$MockNode. - Connected to H2 database. {}
[INFO ] 2023-01-31T09:12:16,201Z [Test worker] persistence.HibernateConfiguration. - Init HibernateConfiguration for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1), AccountsContractsSchemaV1(name=com.r3.corda.lib.accounts.contracts.internal.schemas.AccountsContractsSchema, version=1), AccountsWorkflowsSchemaV1(name=com.r3.corda.lib.accounts.workflows.internal.schemas.AccountsWorkflowsSchema, version=1), CashSchemaV1(name=net.corda.finance.schemas.CashSchema, version=1), CommercialPaperSchemaV1(name=net.corda.finance.schemas.CommercialPaperSchema, version=1)] {}
[INFO ] 2023-01-31T09:12:16,202Z [Test worker] factory.BaseSessionFactoryFactory. - Creating session factory for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1), AccountsContractsSchemaV1(name=com.r3.corda.lib.accounts.contracts.internal.schemas.AccountsContractsSchema, version=1), AccountsWorkflowsSchemaV1(name=com.r3.corda.lib.accounts.workflows.internal.schemas.AccountsWorkflowsSchema, version=1), CashSchemaV1(name=net.corda.finance.schemas.CashSchema, version=1), CommercialPaperSchemaV1(name=net.corda.finance.schemas.CommercialPaperSchema, version=1)] {}
[INFO ] 2023-01-31T09:12:16,360Z [Test worker] factory.BaseSessionFactoryFactory. - Created session factory for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1), AccountsContractsSchemaV1(name=com.r3.corda.lib.accounts.contracts.internal.schemas.AccountsContractsSchema, version=1), AccountsWorkflowsSchemaV1(name=com.r3.corda.lib.accounts.workflows.internal.schemas.AccountsWorkflowsSchema, version=1), CashSchemaV1(name=net.corda.finance.schemas.CashSchema, version=1), CommercialPaperSchemaV1(name=net.corda.finance.schemas.CommercialPaperSchema, version=1)] {}
[INFO ] 2023-01-31T09:12:16,364Z [Test worker] internal.InternalMockNetwork$MockNode. - Node-info has changed so submitting update. Old node-info was null {}
[INFO ] 2023-01-31T09:12:16,367Z [Test worker] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 2, L=London, C=GB], platformVersion=11, serial=1675156336364), owningKey=DLBMS2AyJxiZqFXuCgGz4Q6NPqFcNTzeA9PY5ffhWPQd35 {}
[INFO ] 2023-01-31T09:12:16,367Z [Test worker] network.PersistentNetworkMapCache. - No previous node found for O=Mock Company 2, L=London, C=GB {}
[INFO ] 2023-01-31T09:12:16,374Z [Test worker] internal.InternalMockNetwork$MockNode. - New node-info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 2, L=London, C=GB], platformVersion=11, serial=1675156336364) {}
[INFO ] 2023-01-31T09:12:16,380Z [Test worker] network.NetworkMapUpdater. - Auto-accept enabled for network parameter changes which modify only: [epoch, modifiedTime, packageOwnership, whitelistedContractImplementations] {}
[INFO ] 2023-01-31T09:12:16,380Z [Test worker] internal.MockNodeMessagingService. - Status change to true {}
[INFO ] 2023-01-31T09:12:16,380Z [Test worker] internal.InternalMockNetwork$MockNode. - MessagingService active change to: true {}
[INFO ] 2023-01-31T09:12:16,391Z [MockNode-3-2] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 2, L=London, C=GB], platformVersion=11, serial=1675156336364), owningKey=DLBMS2AyJxiZqFXuCgGz4Q6NPqFcNTzeA9PY5ffhWPQd35 {}
[INFO ] 2023-01-31T09:12:16,391Z [MockNode-3-2] network.PersistentNetworkMapCache. - Previous node was identical to incoming one - doing nothing {}
[INFO ] 2023-01-31T09:12:16,418Z [Test worker] persistence.NodeAttachmentService. - Stored new attachment: id=D370FD972C7E07CE73F4F9B7886D226807F6B16C4EE287398B9C69384109DC14 uploader=app filename=Accounts SDK - States and Contracts {}
[INFO ] 2023-01-31T09:12:16,464Z [Test worker] persistence.NodeAttachmentService. - Stored new attachment: id=BD0C932EAF8B1FE96DCBBF275B914BCD776D14EDC8F97DCEBF7E15DA09C606AE uploader=app filename=Corda Finance Demo {}
[INFO ] 2023-01-31T09:12:16,482Z [Test worker] persistence.NodeAttachmentService. - Stored new attachment: id=8D797B45F40704FA4FD70921F5BC6E2D7B34450D345CE6788D2A87859EF63BD8 uploader=app filename=Obligation Contracts {}
[INFO ] 2023-01-31T09:12:16,485Z [Test worker] internal.InternalMockNetwork$MockNode. - Installed com.r3.corda.lib.accounts.workflows.services.KeyManagementBackedAccountService Corda service {}
[INFO ] 2023-01-31T09:12:16,506Z [Test worker] statemachine.SingleThreadedStateMachineManager. - Node ready, info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 2, L=London, C=GB], platformVersion=11, serial=1675156336364) {}
[INFO ] 2023-01-31T09:12:16,508Z [Test worker] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Notary, L=London, C=GB], platformVersion=11, serial=1675156333048), owningKey=DL93EtDyChBkAMwXXdfAJJyYeM32A8aJWpBBo94hE9sLbr {}
[INFO ] 2023-01-31T09:12:16,508Z [Test worker] network.PersistentNetworkMapCache. - No previous node found for O=Notary, L=London, C=GB {}
[INFO ] 2023-01-31T09:12:16,519Z [Test worker] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 2, L=London, C=GB], platformVersion=11, serial=1675156336364), owningKey=DLBMS2AyJxiZqFXuCgGz4Q6NPqFcNTzeA9PY5ffhWPQd35 {}
[INFO ] 2023-01-31T09:12:16,519Z [Test worker] network.PersistentNetworkMapCache. - No previous node found for O=Mock Company 2, L=London, C=GB {}
[INFO ] 2023-01-31T09:12:16,530Z [Test worker] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 1, L=London, C=GB], platformVersion=11, serial=1675156335278), owningKey=DL6wkcEgsMowj9Yw5f1UiZ157UJRLYM7xgrPMaTytBB4GM {}
[INFO ] 2023-01-31T09:12:16,530Z [Test worker] network.PersistentNetworkMapCache. - No previous node found for O=Mock Company 1, L=London, C=GB {}
[INFO ] 2023-01-31T09:12:16,540Z [Test worker] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 2, L=London, C=GB], platformVersion=11, serial=1675156336364), owningKey=DLBMS2AyJxiZqFXuCgGz4Q6NPqFcNTzeA9PY5ffhWPQd35 {}
[INFO ] 2023-01-31T09:12:16,540Z [Test worker] network.PersistentNetworkMapCache. - No previous node found for O=Mock Company 2, L=London, C=GB {}
[INFO ] 2023-01-31T09:12:16,548Z [Test worker] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 2, L=London, C=GB], platformVersion=11, serial=1675156336364), owningKey=DLBMS2AyJxiZqFXuCgGz4Q6NPqFcNTzeA9PY5ffhWPQd35 {}
[INFO ] 2023-01-31T09:12:16,548Z [Test worker] network.PersistentNetworkMapCache. - Previous node was identical to incoming one - doing nothing {}
[INFO ] 2023-01-31T09:12:16,549Z [Test worker] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 2, L=London, C=GB], platformVersion=11, serial=1675156336364), owningKey=DLBMS2AyJxiZqFXuCgGz4Q6NPqFcNTzeA9PY5ffhWPQd35 {}
[INFO ] 2023-01-31T09:12:16,549Z [Test worker] network.PersistentNetworkMapCache. - Previous node was identical to incoming one - doing nothing {}
[INFO ] 2023-01-31T09:12:16,560Z [Test worker] cordapp.JarScanningCordappLoader. - Looking for CorDapps in [build/mock-network/20230131-091151.143-013EE91356D92CDA/nodes/3/cordapps] {}
[INFO ] 2023-01-31T09:12:16,560Z [Test worker] cordapp.JarScanningCordappLoader. - Loading CorDapps from RestrictedURL(url=file:/Users/peter.li/Desktop/obligation-cordapp/workflows/build/mock-network/20230131-091151.143-013EE91356D92CDA/nodes/3/cordapps/accounts-contracts-1.0.jar, rootPackageName=null), RestrictedURL(url=file:/Users/peter.li/Desktop/obligation-cordapp/workflows/build/mock-network/20230131-091151.143-013EE91356D92CDA/nodes/3/cordapps/accounts-workflows-1.0.jar, rootPackageName=null), RestrictedURL(url=file:/Users/peter.li/Desktop/obligation-cordapp/workflows/build/mock-network/20230131-091151.143-013EE91356D92CDA/nodes/3/cordapps/corda-finance-contracts-4.9.jar, rootPackageName=null), RestrictedURL(url=file:/Users/peter.li/Desktop/obligation-cordapp/workflows/build/mock-network/20230131-091151.143-013EE91356D92CDA/nodes/3/cordapps/contracts-1.0.jar, rootPackageName=null), RestrictedURL(url=file:/Users/peter.li/Desktop/obligation-cordapp/workflows/build/mock-network/20230131-091151.143-013EE91356D92CDA/nodes/3/cordapps/workflows-1.0.jar, rootPackageName=null) {}
[INFO ] 2023-01-31T09:12:16,561Z [Test worker] cordapp.JarScanningCordappLoader. - Scanning CorDapp in file:/Users/peter.li/Desktop/obligation-cordapp/workflows/build/mock-network/20230131-091151.143-013EE91356D92CDA/nodes/3/cordapps/accounts-contracts-1.0.jar {}
[INFO ] 2023-01-31T09:12:16,582Z [Test worker] cordapp.JarScanningCordappLoader. - Scanning CorDapp in file:/Users/peter.li/Desktop/obligation-cordapp/workflows/build/mock-network/20230131-091151.143-013EE91356D92CDA/nodes/3/cordapps/accounts-workflows-1.0.jar {}
[INFO ] 2023-01-31T09:12:16,591Z [Test worker] cordapp.JarScanningCordappLoader. - Scanning CorDapp in file:/Users/peter.li/Desktop/obligation-cordapp/workflows/build/mock-network/20230131-091151.143-013EE91356D92CDA/nodes/3/cordapps/corda-finance-contracts-4.9.jar {}
[INFO ] 2023-01-31T09:12:16,602Z [Test worker] cordapp.JarScanningCordappLoader. - Scanning CorDapp in file:/Users/peter.li/Desktop/obligation-cordapp/workflows/build/mock-network/20230131-091151.143-013EE91356D92CDA/nodes/3/cordapps/contracts-1.0.jar {}
[INFO ] 2023-01-31T09:12:16,608Z [Test worker] cordapp.JarScanningCordappLoader. - Scanning CorDapp in file:/Users/peter.li/Desktop/obligation-cordapp/workflows/build/mock-network/20230131-091151.143-013EE91356D92CDA/nodes/3/cordapps/workflows-1.0.jar {}
[INFO ] 2023-01-31T09:12:16,638Z [Test worker] internal.InternalMockNetwork$MockNode. - MessagingService active change to: false {}
[INFO ] 2023-01-31T09:12:16,639Z [Test worker] internal.InternalMockNetwork$MockNode. - Flow external operation executor has a max of 2 threads {}
[INFO ] 2023-01-31T09:12:16,641Z [Test worker] internal.InternalMockNetwork$MockNode. - Node starting up ... {}
[INFO ] 2023-01-31T09:12:16,683Z [Test worker] internal.KeyStoreHandler. - Loaded trusted root certificate: DL7fwxLm5xbiMD8adUuYTsPZHAict46Ng4w6RNcySt5vAw, alias: cordarootca {}
[INFO ] 2023-01-31T09:12:16,683Z [Test worker] internal.KeyStoreHandler. - Loaded node identity key: DLH5pYARP3s2SGE9pLNwdLaa79dsMQTkQWSj9rUqbB7mJt, alias: identity-private-key {}
[INFO ] 2023-01-31T09:12:16,688Z [Test worker] internal.NodeFlowManager. - Registered com.r3.corda.lib.accounts.workflows.flows.ShareStateAndSyncAccounts to initiate com.r3.corda.lib.accounts.workflows.flows.ReceiveStateAndSyncAccounts (version 1) {}
[INFO ] 2023-01-31T09:12:16,688Z [Test worker] internal.NodeFlowManager. - Registered com.r3.corda.lib.accounts.workflows.flows.ShareStateWithAccount to initiate com.r3.corda.lib.accounts.workflows.flows.ReceiveStateForAccount (version 1) {}
[INFO ] 2023-01-31T09:12:16,688Z [Test worker] internal.NodeFlowManager. - Registered com.r3.corda.lib.accounts.workflows.flows.RequestAccountInfo to initiate com.r3.corda.lib.accounts.workflows.flows.RequestAccountInfoHandler (version 1) {}
[INFO ] 2023-01-31T09:12:16,688Z [Test worker] internal.NodeFlowManager. - Registered com.r3.corda.lib.accounts.workflows.flows.RequestKeyForAccount to initiate com.r3.corda.lib.accounts.workflows.flows.SendKeyForAccount (version 1) {}
[INFO ] 2023-01-31T09:12:16,689Z [Test worker] internal.NodeFlowManager. - Registered com.r3.corda.lib.accounts.workflows.flows.ShareAccountInfo to initiate com.r3.corda.lib.accounts.workflows.flows.ShareAccountInfoHandler (version 1) {}
[INFO ] 2023-01-31T09:12:16,689Z [Test worker] internal.NodeFlowManager. - Registered net.corda.samples.obligation.flows.IOUIssueFlow to initiate net.corda.samples.obligation.flows.IOUIssueFlowResponder (version 1) {}
[INFO ] 2023-01-31T09:12:16,689Z [Test worker] internal.NodeFlowManager. - Registered net.corda.samples.obligation.flows.IOUSettleFlow to initiate net.corda.samples.obligation.flows.IOUSettleFlowResponder (version 1) {}
[INFO ] 2023-01-31T09:12:16,689Z [Test worker] internal.NodeFlowManager. - Registered net.corda.samples.obligation.flows.IOUTransferFlow to initiate net.corda.samples.obligation.flows.IOUTransferFlowResponder (version 1) {}
[INFO ] 2023-01-31T09:12:16,694Z [Test worker] internal.InternalMockNetwork$MockNode. - Loaded network parameters: NetworkParameters {
      minimumPlatformVersion=4
      notaries=[NotaryInfo(identity=O=Notary, L=London, C=GB, validating=true)]
      maxMessageSize=10485760
      maxTransactionSize=524288000
      whitelistedContractImplementations {
        
      }
      eventHorizon=PT720H
      packageOwnership {
        
      }
      modifiedTime=2023-01-31T09:11:50.724Z
      epoch=1
  } {}
[INFO ] 2023-01-31T09:12:17,260Z [Test worker] internal.InternalMockNetwork$MockNode. - Connected to H2 database. {}
[INFO ] 2023-01-31T09:12:17,262Z [Test worker] persistence.HibernateConfiguration. - Init HibernateConfiguration for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1), AccountsContractsSchemaV1(name=com.r3.corda.lib.accounts.contracts.internal.schemas.AccountsContractsSchema, version=1), AccountsWorkflowsSchemaV1(name=com.r3.corda.lib.accounts.workflows.internal.schemas.AccountsWorkflowsSchema, version=1), CashSchemaV1(name=net.corda.finance.schemas.CashSchema, version=1), CommercialPaperSchemaV1(name=net.corda.finance.schemas.CommercialPaperSchema, version=1)] {}
[INFO ] 2023-01-31T09:12:17,262Z [Test worker] factory.BaseSessionFactoryFactory. - Creating session factory for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1), AccountsContractsSchemaV1(name=com.r3.corda.lib.accounts.contracts.internal.schemas.AccountsContractsSchema, version=1), AccountsWorkflowsSchemaV1(name=com.r3.corda.lib.accounts.workflows.internal.schemas.AccountsWorkflowsSchema, version=1), CashSchemaV1(name=net.corda.finance.schemas.CashSchema, version=1), CommercialPaperSchemaV1(name=net.corda.finance.schemas.CommercialPaperSchema, version=1)] {}
[INFO ] 2023-01-31T09:12:17,413Z [Test worker] factory.BaseSessionFactoryFactory. - Created session factory for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1), AccountsContractsSchemaV1(name=com.r3.corda.lib.accounts.contracts.internal.schemas.AccountsContractsSchema, version=1), AccountsWorkflowsSchemaV1(name=com.r3.corda.lib.accounts.workflows.internal.schemas.AccountsWorkflowsSchema, version=1), CashSchemaV1(name=net.corda.finance.schemas.CashSchema, version=1), CommercialPaperSchemaV1(name=net.corda.finance.schemas.CommercialPaperSchema, version=1)] {}
[INFO ] 2023-01-31T09:12:17,418Z [Test worker] internal.InternalMockNetwork$MockNode. - Node-info has changed so submitting update. Old node-info was null {}
[INFO ] 2023-01-31T09:12:17,421Z [Test worker] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 3, L=London, C=GB], platformVersion=11, serial=1675156337418), owningKey=DLH5pYARP3s2SGE9pLNwdLaa79dsMQTkQWSj9rUqbB7mJt {}
[INFO ] 2023-01-31T09:12:17,421Z [Test worker] network.PersistentNetworkMapCache. - No previous node found for O=Mock Company 3, L=London, C=GB {}
[INFO ] 2023-01-31T09:12:17,427Z [Test worker] internal.InternalMockNetwork$MockNode. - New node-info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 3, L=London, C=GB], platformVersion=11, serial=1675156337418) {}
[INFO ] 2023-01-31T09:12:17,441Z [Test worker] network.NetworkMapUpdater. - Auto-accept enabled for network parameter changes which modify only: [epoch, modifiedTime, packageOwnership, whitelistedContractImplementations] {}
[INFO ] 2023-01-31T09:12:17,441Z [Test worker] internal.MockNodeMessagingService. - Status change to true {}
[INFO ] 2023-01-31T09:12:17,441Z [Test worker] internal.InternalMockNetwork$MockNode. - MessagingService active change to: true {}
[INFO ] 2023-01-31T09:12:17,450Z [MockNode-4-2] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 3, L=London, C=GB], platformVersion=11, serial=1675156337418), owningKey=DLH5pYARP3s2SGE9pLNwdLaa79dsMQTkQWSj9rUqbB7mJt {}
[INFO ] 2023-01-31T09:12:17,450Z [MockNode-4-2] network.PersistentNetworkMapCache. - Previous node was identical to incoming one - doing nothing {}
[INFO ] 2023-01-31T09:12:17,471Z [Test worker] persistence.NodeAttachmentService. - Stored new attachment: id=D370FD972C7E07CE73F4F9B7886D226807F6B16C4EE287398B9C69384109DC14 uploader=app filename=Accounts SDK - States and Contracts {}
[INFO ] 2023-01-31T09:12:17,513Z [Test worker] persistence.NodeAttachmentService. - Stored new attachment: id=BD0C932EAF8B1FE96DCBBF275B914BCD776D14EDC8F97DCEBF7E15DA09C606AE uploader=app filename=Corda Finance Demo {}
[INFO ] 2023-01-31T09:12:17,532Z [Test worker] persistence.NodeAttachmentService. - Stored new attachment: id=8D797B45F40704FA4FD70921F5BC6E2D7B34450D345CE6788D2A87859EF63BD8 uploader=app filename=Obligation Contracts {}
[INFO ] 2023-01-31T09:12:17,537Z [Test worker] internal.InternalMockNetwork$MockNode. - Installed com.r3.corda.lib.accounts.workflows.services.KeyManagementBackedAccountService Corda service {}
[INFO ] 2023-01-31T09:12:17,564Z [Test worker] statemachine.SingleThreadedStateMachineManager. - Node ready, info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 3, L=London, C=GB], platformVersion=11, serial=1675156337418) {}
[INFO ] 2023-01-31T09:12:17,567Z [Test worker] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Notary, L=London, C=GB], platformVersion=11, serial=1675156333048), owningKey=DL93EtDyChBkAMwXXdfAJJyYeM32A8aJWpBBo94hE9sLbr {}
[INFO ] 2023-01-31T09:12:17,567Z [Test worker] network.PersistentNetworkMapCache. - No previous node found for O=Notary, L=London, C=GB {}
[INFO ] 2023-01-31T09:12:17,582Z [Test worker] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 3, L=London, C=GB], platformVersion=11, serial=1675156337418), owningKey=DLH5pYARP3s2SGE9pLNwdLaa79dsMQTkQWSj9rUqbB7mJt {}
[INFO ] 2023-01-31T09:12:17,582Z [Test worker] network.PersistentNetworkMapCache. - No previous node found for O=Mock Company 3, L=London, C=GB {}
[INFO ] 2023-01-31T09:12:17,598Z [Test worker] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 1, L=London, C=GB], platformVersion=11, serial=1675156335278), owningKey=DL6wkcEgsMowj9Yw5f1UiZ157UJRLYM7xgrPMaTytBB4GM {}
[INFO ] 2023-01-31T09:12:17,598Z [Test worker] network.PersistentNetworkMapCache. - No previous node found for O=Mock Company 1, L=London, C=GB {}
[INFO ] 2023-01-31T09:12:17,609Z [Test worker] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 3, L=London, C=GB], platformVersion=11, serial=1675156337418), owningKey=DLH5pYARP3s2SGE9pLNwdLaa79dsMQTkQWSj9rUqbB7mJt {}
[INFO ] 2023-01-31T09:12:17,609Z [Test worker] network.PersistentNetworkMapCache. - No previous node found for O=Mock Company 3, L=London, C=GB {}
[INFO ] 2023-01-31T09:12:17,618Z [Test worker] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 2, L=London, C=GB], platformVersion=11, serial=1675156336364), owningKey=DLBMS2AyJxiZqFXuCgGz4Q6NPqFcNTzeA9PY5ffhWPQd35 {}
[INFO ] 2023-01-31T09:12:17,618Z [Test worker] network.PersistentNetworkMapCache. - No previous node found for O=Mock Company 2, L=London, C=GB {}
[INFO ] 2023-01-31T09:12:17,628Z [Test worker] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 3, L=London, C=GB], platformVersion=11, serial=1675156337418), owningKey=DLH5pYARP3s2SGE9pLNwdLaa79dsMQTkQWSj9rUqbB7mJt {}
[INFO ] 2023-01-31T09:12:17,628Z [Test worker] network.PersistentNetworkMapCache. - No previous node found for O=Mock Company 3, L=London, C=GB {}
[INFO ] 2023-01-31T09:12:17,635Z [Test worker] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 3, L=London, C=GB], platformVersion=11, serial=1675156337418), owningKey=DLH5pYARP3s2SGE9pLNwdLaa79dsMQTkQWSj9rUqbB7mJt {}
[INFO ] 2023-01-31T09:12:17,635Z [Test worker] network.PersistentNetworkMapCache. - Previous node was identical to incoming one - doing nothing {}
[INFO ] 2023-01-31T09:12:17,636Z [Test worker] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 3, L=London, C=GB], platformVersion=11, serial=1675156337418), owningKey=DLH5pYARP3s2SGE9pLNwdLaa79dsMQTkQWSj9rUqbB7mJt {}
[INFO ] 2023-01-31T09:12:17,636Z [Test worker] network.PersistentNetworkMapCache. - Previous node was identical to incoming one - doing nothing {}
[WARN ] 2023-01-31T09:12:17,637Z [Test worker] internal.NodeFlowManager. - Multiple flows are registered for InitiatingFlow: class net.corda.samples.obligation.flows.IOUIssueFlow, currently using: class net.corda.samples.obligation.flows.IOUIssueFlowResponder {}
[INFO ] 2023-01-31T09:12:17,637Z [Test worker] internal.NodeFlowManager. - Registered net.corda.samples.obligation.flows.IOUIssueFlow to initiate net.corda.samples.obligation.flows.IOUIssueFlowResponder (version 1) {}
[WARN ] 2023-01-31T09:12:17,641Z [Test worker] internal.NodeFlowManager. - Multiple flows are registered for InitiatingFlow: class net.corda.samples.obligation.flows.IOUIssueFlow, currently using: class net.corda.samples.obligation.flows.IOUIssueFlowResponder {}
[INFO ] 2023-01-31T09:12:17,641Z [Test worker] internal.NodeFlowManager. - Registered net.corda.samples.obligation.flows.IOUIssueFlow to initiate net.corda.samples.obligation.flows.IOUIssueFlowResponder (version 1) {}
[WARN ] 2023-01-31T09:12:17,641Z [Test worker] internal.NodeFlowManager. - Multiple flows are registered for InitiatingFlow: class net.corda.samples.obligation.flows.IOUIssueFlow, currently using: class net.corda.samples.obligation.flows.IOUIssueFlowResponder {}
[INFO ] 2023-01-31T09:12:17,641Z [Test worker] internal.NodeFlowManager. - Registered net.corda.samples.obligation.flows.IOUIssueFlow to initiate net.corda.samples.obligation.flows.IOUIssueFlowResponder (version 1) {}
[WARN ] 2023-01-31T09:12:17,641Z [Test worker] internal.NodeFlowManager. - Multiple flows are registered for InitiatingFlow: class net.corda.samples.obligation.flows.IOUSettleFlow, currently using: class net.corda.samples.obligation.flows.IOUSettleFlowResponder {}
[INFO ] 2023-01-31T09:12:17,641Z [Test worker] internal.NodeFlowManager. - Registered net.corda.samples.obligation.flows.IOUSettleFlow to initiate net.corda.samples.obligation.flows.IOUSettleFlowResponder (version 1) {}
[WARN ] 2023-01-31T09:12:17,641Z [Test worker] internal.NodeFlowManager. - Multiple flows are registered for InitiatingFlow: class net.corda.samples.obligation.flows.IOUSettleFlow, currently using: class net.corda.samples.obligation.flows.IOUSettleFlowResponder {}
[INFO ] 2023-01-31T09:12:17,641Z [Test worker] internal.NodeFlowManager. - Registered net.corda.samples.obligation.flows.IOUSettleFlow to initiate net.corda.samples.obligation.flows.IOUSettleFlowResponder (version 1) {}
[WARN ] 2023-01-31T09:12:17,641Z [Test worker] internal.NodeFlowManager. - Multiple flows are registered for InitiatingFlow: class net.corda.samples.obligation.flows.IOUSettleFlow, currently using: class net.corda.samples.obligation.flows.IOUSettleFlowResponder {}
[INFO ] 2023-01-31T09:12:17,641Z [Test worker] internal.NodeFlowManager. - Registered net.corda.samples.obligation.flows.IOUSettleFlow to initiate net.corda.samples.obligation.flows.IOUSettleFlowResponder (version 1) {}
[INFO ] 2023-01-31T09:12:18,651Z [Mock network] corda.flow. - No need to notarise this transaction. {actor_id=Only For Testing, actor_owning_identity=O=Mock Company 1, L=London, C=GB, actor_store_id=TEST, fiber-id=10000001, flow-id=8a73bdb3-2f38-4269-8925-9c84cdd6a0cc, invocation_id=de197aae-8af9-4b5b-9216-547b0dff726b, invocation_timestamp=2023-01-31T09:12:17.673Z, origin=Only For Testing, session_id=de197aae-8af9-4b5b-9216-547b0dff726b, session_timestamp=2023-01-31T09:12:17.673Z, thread-id=854, tx_id=A65F3D9228566DD554E8688A8D473BC0CE81D395F7E86BCD0A37F0342D7B5079}
[INFO ] 2023-01-31T09:12:18,651Z [Mock network] corda.flow. - Recording transaction locally. {actor_id=Only For Testing, actor_owning_identity=O=Mock Company 1, L=London, C=GB, actor_store_id=TEST, fiber-id=10000001, flow-id=8a73bdb3-2f38-4269-8925-9c84cdd6a0cc, invocation_id=de197aae-8af9-4b5b-9216-547b0dff726b, invocation_timestamp=2023-01-31T09:12:17.673Z, origin=Only For Testing, session_id=de197aae-8af9-4b5b-9216-547b0dff726b, session_timestamp=2023-01-31T09:12:17.673Z, thread-id=854, tx_id=A65F3D9228566DD554E8688A8D473BC0CE81D395F7E86BCD0A37F0342D7B5079}
[INFO ] 2023-01-31T09:12:18,749Z [Mock network] corda.flow. - Recorded transaction locally successfully. {actor_id=Only For Testing, actor_owning_identity=O=Mock Company 1, L=London, C=GB, actor_store_id=TEST, fiber-id=10000001, flow-id=8a73bdb3-2f38-4269-8925-9c84cdd6a0cc, invocation_id=de197aae-8af9-4b5b-9216-547b0dff726b, invocation_timestamp=2023-01-31T09:12:17.673Z, origin=Only For Testing, session_id=de197aae-8af9-4b5b-9216-547b0dff726b, session_timestamp=2023-01-31T09:12:17.673Z, thread-id=854, tx_id=A65F3D9228566DD554E8688A8D473BC0CE81D395F7E86BCD0A37F0342D7B5079}
[INFO ] 2023-01-31T09:12:18,749Z [Mock network] corda.flow. - All parties received the transaction successfully. {actor_id=Only For Testing, actor_owning_identity=O=Mock Company 1, L=London, C=GB, actor_store_id=TEST, fiber-id=10000001, flow-id=8a73bdb3-2f38-4269-8925-9c84cdd6a0cc, invocation_id=de197aae-8af9-4b5b-9216-547b0dff726b, invocation_timestamp=2023-01-31T09:12:17.673Z, origin=Only For Testing, session_id=de197aae-8af9-4b5b-9216-547b0dff726b, session_timestamp=2023-01-31T09:12:17.673Z, thread-id=854, tx_id=A65F3D9228566DD554E8688A8D473BC0CE81D395F7E86BCD0A37F0342D7B5079}
[INFO ] 2023-01-31T09:12:18,931Z [Mock network] corda.flow. - Received transaction acknowledgement request from party O=Mock Company 1, L=London, C=GB. {fiber-id=10000002, flow-id=b82316d5-a7e2-4bff-86ce-46c638a01adf, invocation_id=4ac3c03d-440d-454f-b85c-fbd7a67699e9, invocation_timestamp=2023-01-31T09:12:18.882Z, origin=O=Mock Company 1, L=London, C=GB, session_id=4ac3c03d-440d-454f-b85c-fbd7a67699e9, session_timestamp=2023-01-31T09:12:18.882Z, thread-id=854, tx_id=A65F3D9228566DD554E8688A8D473BC0CE81D395F7E86BCD0A37F0342D7B5079}
[INFO ] 2023-01-31T09:12:18,990Z [Mock network] corda.flow. - Transaction dependencies resolution completed. {fiber-id=10000002, flow-id=b82316d5-a7e2-4bff-86ce-46c638a01adf, invocation_id=4ac3c03d-440d-454f-b85c-fbd7a67699e9, invocation_timestamp=2023-01-31T09:12:18.882Z, origin=O=Mock Company 1, L=London, C=GB, session_id=4ac3c03d-440d-454f-b85c-fbd7a67699e9, session_timestamp=2023-01-31T09:12:18.882Z, thread-id=854, tx_id=A65F3D9228566DD554E8688A8D473BC0CE81D395F7E86BCD0A37F0342D7B5079}
[INFO ] 2023-01-31T09:12:19,027Z [Mock network] corda.flow. - Successfully received fully signed tx. Sending it to the vault for processing. {fiber-id=10000002, flow-id=b82316d5-a7e2-4bff-86ce-46c638a01adf, invocation_id=4ac3c03d-440d-454f-b85c-fbd7a67699e9, invocation_timestamp=2023-01-31T09:12:18.882Z, origin=O=Mock Company 1, L=London, C=GB, session_id=4ac3c03d-440d-454f-b85c-fbd7a67699e9, session_timestamp=2023-01-31T09:12:18.882Z, thread-id=854, tx_id=A65F3D9228566DD554E8688A8D473BC0CE81D395F7E86BCD0A37F0342D7B5079}
[INFO ] 2023-01-31T09:12:19,036Z [Mock network] corda.flow. - Successfully recorded received transaction locally. {fiber-id=10000002, flow-id=b82316d5-a7e2-4bff-86ce-46c638a01adf, invocation_id=4ac3c03d-440d-454f-b85c-fbd7a67699e9, invocation_timestamp=2023-01-31T09:12:18.882Z, origin=O=Mock Company 1, L=London, C=GB, session_id=4ac3c03d-440d-454f-b85c-fbd7a67699e9, session_timestamp=2023-01-31T09:12:18.882Z, thread-id=854, tx_id=A65F3D9228566DD554E8688A8D473BC0CE81D395F7E86BCD0A37F0342D7B5079}
[INFO ] 2023-01-31T09:12:19,113Z [Mock network] corda.flow. - Received transaction acknowledgement request from party O=Mock Company 1, L=London, C=GB. {fiber-id=10000003, flow-id=7ee48005-f605-4b27-a9b8-ffec144f8228, invocation_id=68a506cb-ba8d-4ad5-bee7-7ee77f3b0792, invocation_timestamp=2023-01-31T09:12:19.099Z, origin=O=Mock Company 1, L=London, C=GB, session_id=68a506cb-ba8d-4ad5-bee7-7ee77f3b0792, session_timestamp=2023-01-31T09:12:19.099Z, thread-id=854, tx_id=A65F3D9228566DD554E8688A8D473BC0CE81D395F7E86BCD0A37F0342D7B5079}
[INFO ] 2023-01-31T09:12:19,123Z [Mock network] corda.flow. - Transaction dependencies resolution completed. {fiber-id=10000003, flow-id=7ee48005-f605-4b27-a9b8-ffec144f8228, invocation_id=68a506cb-ba8d-4ad5-bee7-7ee77f3b0792, invocation_timestamp=2023-01-31T09:12:19.099Z, origin=O=Mock Company 1, L=London, C=GB, session_id=68a506cb-ba8d-4ad5-bee7-7ee77f3b0792, session_timestamp=2023-01-31T09:12:19.099Z, thread-id=854, tx_id=A65F3D9228566DD554E8688A8D473BC0CE81D395F7E86BCD0A37F0342D7B5079}
[INFO ] 2023-01-31T09:12:19,189Z [Mock network] corda.flow. - Successfully received fully signed tx. Sending it to the vault for processing. {fiber-id=10000003, flow-id=7ee48005-f605-4b27-a9b8-ffec144f8228, invocation_id=68a506cb-ba8d-4ad5-bee7-7ee77f3b0792, invocation_timestamp=2023-01-31T09:12:19.099Z, origin=O=Mock Company 1, L=London, C=GB, session_id=68a506cb-ba8d-4ad5-bee7-7ee77f3b0792, session_timestamp=2023-01-31T09:12:19.099Z, thread-id=854, tx_id=A65F3D9228566DD554E8688A8D473BC0CE81D395F7E86BCD0A37F0342D7B5079}
[INFO ] 2023-01-31T09:12:19,199Z [Mock network] corda.flow. - Successfully recorded received transaction locally. {fiber-id=10000003, flow-id=7ee48005-f605-4b27-a9b8-ffec144f8228, invocation_id=68a506cb-ba8d-4ad5-bee7-7ee77f3b0792, invocation_timestamp=2023-01-31T09:12:19.099Z, origin=O=Mock Company 1, L=London, C=GB, session_id=68a506cb-ba8d-4ad5-bee7-7ee77f3b0792, session_timestamp=2023-01-31T09:12:19.099Z, thread-id=854, tx_id=A65F3D9228566DD554E8688A8D473BC0CE81D395F7E86BCD0A37F0342D7B5079}
[INFO ] 2023-01-31T09:12:19,249Z [Mock network] corda.flow. - No need to notarise this transaction. {actor_id=Only For Testing, actor_owning_identity=O=Mock Company 2, L=London, C=GB, actor_store_id=TEST, fiber-id=10000004, flow-id=9db31b81-6a66-4741-8220-25e926497cd7, invocation_id=b2eabb54-c022-4637-884b-5f5455986ac1, invocation_timestamp=2023-01-31T09:12:19.231Z, origin=Only For Testing, session_id=b2eabb54-c022-4637-884b-5f5455986ac1, session_timestamp=2023-01-31T09:12:19.231Z, thread-id=854, tx_id=F1F623435F5CD3EE7C37B31B104AAD23CF29543CDEEB22AD5FF8B7C94354F2A9}
[INFO ] 2023-01-31T09:12:19,249Z [Mock network] corda.flow. - Recording transaction locally. {actor_id=Only For Testing, actor_owning_identity=O=Mock Company 2, L=London, C=GB, actor_store_id=TEST, fiber-id=10000004, flow-id=9db31b81-6a66-4741-8220-25e926497cd7, invocation_id=b2eabb54-c022-4637-884b-5f5455986ac1, invocation_timestamp=2023-01-31T09:12:19.231Z, origin=Only For Testing, session_id=b2eabb54-c022-4637-884b-5f5455986ac1, session_timestamp=2023-01-31T09:12:19.231Z, thread-id=854, tx_id=F1F623435F5CD3EE7C37B31B104AAD23CF29543CDEEB22AD5FF8B7C94354F2A9}
[INFO ] 2023-01-31T09:12:19,264Z [Mock network] corda.flow. - Recorded transaction locally successfully. {actor_id=Only For Testing, actor_owning_identity=O=Mock Company 2, L=London, C=GB, actor_store_id=TEST, fiber-id=10000004, flow-id=9db31b81-6a66-4741-8220-25e926497cd7, invocation_id=b2eabb54-c022-4637-884b-5f5455986ac1, invocation_timestamp=2023-01-31T09:12:19.231Z, origin=Only For Testing, session_id=b2eabb54-c022-4637-884b-5f5455986ac1, session_timestamp=2023-01-31T09:12:19.231Z, thread-id=854, tx_id=F1F623435F5CD3EE7C37B31B104AAD23CF29543CDEEB22AD5FF8B7C94354F2A9}
[INFO ] 2023-01-31T09:12:19,264Z [Mock network] corda.flow. - All parties received the transaction successfully. {actor_id=Only For Testing, actor_owning_identity=O=Mock Company 2, L=London, C=GB, actor_store_id=TEST, fiber-id=10000004, flow-id=9db31b81-6a66-4741-8220-25e926497cd7, invocation_id=b2eabb54-c022-4637-884b-5f5455986ac1, invocation_timestamp=2023-01-31T09:12:19.231Z, origin=Only For Testing, session_id=b2eabb54-c022-4637-884b-5f5455986ac1, session_timestamp=2023-01-31T09:12:19.231Z, thread-id=854, tx_id=F1F623435F5CD3EE7C37B31B104AAD23CF29543CDEEB22AD5FF8B7C94354F2A9}
[INFO ] 2023-01-31T09:12:19,288Z [Mock network] corda.flow. - Received transaction acknowledgement request from party O=Mock Company 2, L=London, C=GB. {fiber-id=10000005, flow-id=ff444065-c650-4c67-993f-4083c3b469c5, invocation_id=2247e4e5-9a5a-4291-b756-6c0f4cc45504, invocation_timestamp=2023-01-31T09:12:19.279Z, origin=O=Mock Company 2, L=London, C=GB, session_id=2247e4e5-9a5a-4291-b756-6c0f4cc45504, session_timestamp=2023-01-31T09:12:19.279Z, thread-id=854, tx_id=F1F623435F5CD3EE7C37B31B104AAD23CF29543CDEEB22AD5FF8B7C94354F2A9}
[INFO ] 2023-01-31T09:12:19,296Z [Mock network] corda.flow. - Transaction dependencies resolution completed. {fiber-id=10000005, flow-id=ff444065-c650-4c67-993f-4083c3b469c5, invocation_id=2247e4e5-9a5a-4291-b756-6c0f4cc45504, invocation_timestamp=2023-01-31T09:12:19.279Z, origin=O=Mock Company 2, L=London, C=GB, session_id=2247e4e5-9a5a-4291-b756-6c0f4cc45504, session_timestamp=2023-01-31T09:12:19.279Z, thread-id=854, tx_id=F1F623435F5CD3EE7C37B31B104AAD23CF29543CDEEB22AD5FF8B7C94354F2A9}
[INFO ] 2023-01-31T09:12:19,299Z [Mock network] corda.flow. - Successfully received fully signed tx. Sending it to the vault for processing. {fiber-id=10000005, flow-id=ff444065-c650-4c67-993f-4083c3b469c5, invocation_id=2247e4e5-9a5a-4291-b756-6c0f4cc45504, invocation_timestamp=2023-01-31T09:12:19.279Z, origin=O=Mock Company 2, L=London, C=GB, session_id=2247e4e5-9a5a-4291-b756-6c0f4cc45504, session_timestamp=2023-01-31T09:12:19.279Z, thread-id=854, tx_id=F1F623435F5CD3EE7C37B31B104AAD23CF29543CDEEB22AD5FF8B7C94354F2A9}
[INFO ] 2023-01-31T09:12:19,304Z [Mock network] corda.flow. - Successfully recorded received transaction locally. {fiber-id=10000005, flow-id=ff444065-c650-4c67-993f-4083c3b469c5, invocation_id=2247e4e5-9a5a-4291-b756-6c0f4cc45504, invocation_timestamp=2023-01-31T09:12:19.279Z, origin=O=Mock Company 2, L=London, C=GB, session_id=2247e4e5-9a5a-4291-b756-6c0f4cc45504, session_timestamp=2023-01-31T09:12:19.279Z, thread-id=854, tx_id=F1F623435F5CD3EE7C37B31B104AAD23CF29543CDEEB22AD5FF8B7C94354F2A9}
[INFO ] 2023-01-31T09:12:19,347Z [Mock network] corda.flow. - Received transaction acknowledgement request from party O=Mock Company 2, L=London, C=GB. {fiber-id=10000006, flow-id=62ef9525-47fe-431f-a44e-7403b3103e1e, invocation_id=fb106bfc-adb9-44c6-acb5-5b651b1ce387, invocation_timestamp=2023-01-31T09:12:19.333Z, origin=O=Mock Company 2, L=London, C=GB, session_id=fb106bfc-adb9-44c6-acb5-5b651b1ce387, session_timestamp=2023-01-31T09:12:19.333Z, thread-id=854, tx_id=F1F623435F5CD3EE7C37B31B104AAD23CF29543CDEEB22AD5FF8B7C94354F2A9}
[INFO ] 2023-01-31T09:12:19,352Z [Mock network] corda.flow. - Transaction dependencies resolution completed. {fiber-id=10000006, flow-id=62ef9525-47fe-431f-a44e-7403b3103e1e, invocation_id=fb106bfc-adb9-44c6-acb5-5b651b1ce387, invocation_timestamp=2023-01-31T09:12:19.333Z, origin=O=Mock Company 2, L=London, C=GB, session_id=fb106bfc-adb9-44c6-acb5-5b651b1ce387, session_timestamp=2023-01-31T09:12:19.333Z, thread-id=854, tx_id=F1F623435F5CD3EE7C37B31B104AAD23CF29543CDEEB22AD5FF8B7C94354F2A9}
[INFO ] 2023-01-31T09:12:19,356Z [Mock network] corda.flow. - Successfully received fully signed tx. Sending it to the vault for processing. {fiber-id=10000006, flow-id=62ef9525-47fe-431f-a44e-7403b3103e1e, invocation_id=fb106bfc-adb9-44c6-acb5-5b651b1ce387, invocation_timestamp=2023-01-31T09:12:19.333Z, origin=O=Mock Company 2, L=London, C=GB, session_id=fb106bfc-adb9-44c6-acb5-5b651b1ce387, session_timestamp=2023-01-31T09:12:19.333Z, thread-id=854, tx_id=F1F623435F5CD3EE7C37B31B104AAD23CF29543CDEEB22AD5FF8B7C94354F2A9}
[INFO ] 2023-01-31T09:12:19,361Z [Mock network] corda.flow. - Successfully recorded received transaction locally. {fiber-id=10000006, flow-id=62ef9525-47fe-431f-a44e-7403b3103e1e, invocation_id=fb106bfc-adb9-44c6-acb5-5b651b1ce387, invocation_timestamp=2023-01-31T09:12:19.333Z, origin=O=Mock Company 2, L=London, C=GB, session_id=fb106bfc-adb9-44c6-acb5-5b651b1ce387, session_timestamp=2023-01-31T09:12:19.333Z, thread-id=854, tx_id=F1F623435F5CD3EE7C37B31B104AAD23CF29543CDEEB22AD5FF8B7C94354F2A9}
[INFO ] 2023-01-31T09:12:19,395Z [Mock network] corda.flow. - No need to notarise this transaction. {actor_id=Only For Testing, actor_owning_identity=O=Mock Company 3, L=London, C=GB, actor_store_id=TEST, fiber-id=10000007, flow-id=a7e42902-4fb5-4c0e-b700-8e8f770f7585, invocation_id=020a6fa1-a0fb-47aa-8c62-897472c088fe, invocation_timestamp=2023-01-31T09:12:19.379Z, origin=Only For Testing, session_id=020a6fa1-a0fb-47aa-8c62-897472c088fe, session_timestamp=2023-01-31T09:12:19.379Z, thread-id=854, tx_id=666E084B7E048EDFE04045A78BADA3494BC7127770A564769999C01265D5EF13}
[INFO ] 2023-01-31T09:12:19,395Z [Mock network] corda.flow. - Recording transaction locally. {actor_id=Only For Testing, actor_owning_identity=O=Mock Company 3, L=London, C=GB, actor_store_id=TEST, fiber-id=10000007, flow-id=a7e42902-4fb5-4c0e-b700-8e8f770f7585, invocation_id=020a6fa1-a0fb-47aa-8c62-897472c088fe, invocation_timestamp=2023-01-31T09:12:19.379Z, origin=Only For Testing, session_id=020a6fa1-a0fb-47aa-8c62-897472c088fe, session_timestamp=2023-01-31T09:12:19.379Z, thread-id=854, tx_id=666E084B7E048EDFE04045A78BADA3494BC7127770A564769999C01265D5EF13}
[INFO ] 2023-01-31T09:12:19,398Z [Mock network] corda.flow. - Recorded transaction locally successfully. {actor_id=Only For Testing, actor_owning_identity=O=Mock Company 3, L=London, C=GB, actor_store_id=TEST, fiber-id=10000007, flow-id=a7e42902-4fb5-4c0e-b700-8e8f770f7585, invocation_id=020a6fa1-a0fb-47aa-8c62-897472c088fe, invocation_timestamp=2023-01-31T09:12:19.379Z, origin=Only For Testing, session_id=020a6fa1-a0fb-47aa-8c62-897472c088fe, session_timestamp=2023-01-31T09:12:19.379Z, thread-id=854, tx_id=666E084B7E048EDFE04045A78BADA3494BC7127770A564769999C01265D5EF13}
[INFO ] 2023-01-31T09:12:19,398Z [Mock network] corda.flow. - All parties received the transaction successfully. {actor_id=Only For Testing, actor_owning_identity=O=Mock Company 3, L=London, C=GB, actor_store_id=TEST, fiber-id=10000007, flow-id=a7e42902-4fb5-4c0e-b700-8e8f770f7585, invocation_id=020a6fa1-a0fb-47aa-8c62-897472c088fe, invocation_timestamp=2023-01-31T09:12:19.379Z, origin=Only For Testing, session_id=020a6fa1-a0fb-47aa-8c62-897472c088fe, session_timestamp=2023-01-31T09:12:19.379Z, thread-id=854, tx_id=666E084B7E048EDFE04045A78BADA3494BC7127770A564769999C01265D5EF13}
[INFO ] 2023-01-31T09:12:19,422Z [Mock network] corda.flow. - Received transaction acknowledgement request from party O=Mock Company 3, L=London, C=GB. {fiber-id=10000008, flow-id=8e59a156-2fe5-4853-bfbd-e8437b31cfe7, invocation_id=61bec800-08b0-4b51-aca0-f165b798b59d, invocation_timestamp=2023-01-31T09:12:19.413Z, origin=O=Mock Company 3, L=London, C=GB, session_id=61bec800-08b0-4b51-aca0-f165b798b59d, session_timestamp=2023-01-31T09:12:19.413Z, thread-id=854, tx_id=666E084B7E048EDFE04045A78BADA3494BC7127770A564769999C01265D5EF13}
[INFO ] 2023-01-31T09:12:19,430Z [Mock network] corda.flow. - Transaction dependencies resolution completed. {fiber-id=10000008, flow-id=8e59a156-2fe5-4853-bfbd-e8437b31cfe7, invocation_id=61bec800-08b0-4b51-aca0-f165b798b59d, invocation_timestamp=2023-01-31T09:12:19.413Z, origin=O=Mock Company 3, L=London, C=GB, session_id=61bec800-08b0-4b51-aca0-f165b798b59d, session_timestamp=2023-01-31T09:12:19.413Z, thread-id=854, tx_id=666E084B7E048EDFE04045A78BADA3494BC7127770A564769999C01265D5EF13}
[INFO ] 2023-01-31T09:12:19,434Z [Mock network] corda.flow. - Successfully received fully signed tx. Sending it to the vault for processing. {fiber-id=10000008, flow-id=8e59a156-2fe5-4853-bfbd-e8437b31cfe7, invocation_id=61bec800-08b0-4b51-aca0-f165b798b59d, invocation_timestamp=2023-01-31T09:12:19.413Z, origin=O=Mock Company 3, L=London, C=GB, session_id=61bec800-08b0-4b51-aca0-f165b798b59d, session_timestamp=2023-01-31T09:12:19.413Z, thread-id=854, tx_id=666E084B7E048EDFE04045A78BADA3494BC7127770A564769999C01265D5EF13}
[INFO ] 2023-01-31T09:12:19,439Z [Mock network] corda.flow. - Successfully recorded received transaction locally. {fiber-id=10000008, flow-id=8e59a156-2fe5-4853-bfbd-e8437b31cfe7, invocation_id=61bec800-08b0-4b51-aca0-f165b798b59d, invocation_timestamp=2023-01-31T09:12:19.413Z, origin=O=Mock Company 3, L=London, C=GB, session_id=61bec800-08b0-4b51-aca0-f165b798b59d, session_timestamp=2023-01-31T09:12:19.413Z, thread-id=854, tx_id=666E084B7E048EDFE04045A78BADA3494BC7127770A564769999C01265D5EF13}
[INFO ] 2023-01-31T09:12:19,476Z [Mock network] corda.flow. - Received transaction acknowledgement request from party O=Mock Company 3, L=London, C=GB. {fiber-id=10000009, flow-id=de66e3e2-c90b-4c23-a3b3-ae72a48ae194, invocation_id=05a89d1d-7fdc-448a-8654-d72dbfcc4c79, invocation_timestamp=2023-01-31T09:12:19.465Z, origin=O=Mock Company 3, L=London, C=GB, session_id=05a89d1d-7fdc-448a-8654-d72dbfcc4c79, session_timestamp=2023-01-31T09:12:19.465Z, thread-id=854, tx_id=666E084B7E048EDFE04045A78BADA3494BC7127770A564769999C01265D5EF13}
[INFO ] 2023-01-31T09:12:19,492Z [Mock network] corda.flow. - Transaction dependencies resolution completed. {fiber-id=10000009, flow-id=de66e3e2-c90b-4c23-a3b3-ae72a48ae194, invocation_id=05a89d1d-7fdc-448a-8654-d72dbfcc4c79, invocation_timestamp=2023-01-31T09:12:19.465Z, origin=O=Mock Company 3, L=London, C=GB, session_id=05a89d1d-7fdc-448a-8654-d72dbfcc4c79, session_timestamp=2023-01-31T09:12:19.465Z, thread-id=854, tx_id=666E084B7E048EDFE04045A78BADA3494BC7127770A564769999C01265D5EF13}
[INFO ] 2023-01-31T09:12:19,496Z [Mock network] corda.flow. - Successfully received fully signed tx. Sending it to the vault for processing. {fiber-id=10000009, flow-id=de66e3e2-c90b-4c23-a3b3-ae72a48ae194, invocation_id=05a89d1d-7fdc-448a-8654-d72dbfcc4c79, invocation_timestamp=2023-01-31T09:12:19.465Z, origin=O=Mock Company 3, L=London, C=GB, session_id=05a89d1d-7fdc-448a-8654-d72dbfcc4c79, session_timestamp=2023-01-31T09:12:19.465Z, thread-id=854, tx_id=666E084B7E048EDFE04045A78BADA3494BC7127770A564769999C01265D5EF13}
[INFO ] 2023-01-31T09:12:19,501Z [Mock network] corda.flow. - Successfully recorded received transaction locally. {fiber-id=10000009, flow-id=de66e3e2-c90b-4c23-a3b3-ae72a48ae194, invocation_id=05a89d1d-7fdc-448a-8654-d72dbfcc4c79, invocation_timestamp=2023-01-31T09:12:19.465Z, origin=O=Mock Company 3, L=London, C=GB, session_id=05a89d1d-7fdc-448a-8654-d72dbfcc4c79, session_timestamp=2023-01-31T09:12:19.465Z, thread-id=854, tx_id=666E084B7E048EDFE04045A78BADA3494BC7127770A564769999C01265D5EF13}
[INFO ] 2023-01-31T09:12:19,543Z [Mock network] identity.PersistentIdentityService. - Linking: 0CED7D7B35F89977A9949B93AF1D457C92FA56DF8F6660C245D315963D7C88E5 to O=Mock Company 1, L=London, C=GB {actor_id=Only For Testing, actor_owning_identity=O=Mock Company 1, L=London, C=GB, actor_store_id=TEST, fiber-id=10000011, flow-id=c63e8a76-b71c-4ced-86fe-e763ce35c194, invocation_id=14edd337-8778-402f-bdce-e891d89c899b, invocation_timestamp=2023-01-31T09:12:19.531Z, origin=Only For Testing, session_id=14edd337-8778-402f-bdce-e891d89c899b, session_timestamp=2023-01-31T09:12:19.531Z, thread-id=854}
[INFO ] 2023-01-31T09:12:19,626Z [Mock network] identity.PersistentIdentityService. - Linking: 3A604FFF781E329065EEC0B2B573FD4D6861D77D58F9FEBB3E63E4A036B4EC3E to O=Mock Company 2, L=London, C=GB {fiber-id=10000012, flow-id=fc5ad261-68a4-472f-bb29-4d92110f6489, invocation_id=fe65cc1d-9129-4f21-953c-1263ce7f9164, invocation_timestamp=2023-01-31T09:12:19.556Z, origin=O=Mock Company 1, L=London, C=GB, session_id=fe65cc1d-9129-4f21-953c-1263ce7f9164, session_timestamp=2023-01-31T09:12:19.556Z, thread-id=854}
[INFO ] 2023-01-31T09:12:19,650Z [Mock network] identity.PersistentIdentityService. - Linking: 3A604FFF781E329065EEC0B2B573FD4D6861D77D58F9FEBB3E63E4A036B4EC3E to O=Mock Company 2, L=London, C=GB {actor_id=Only For Testing, actor_owning_identity=O=Mock Company 1, L=London, C=GB, actor_store_id=TEST, fiber-id=10000011, flow-id=c63e8a76-b71c-4ced-86fe-e763ce35c194, invocation_id=14edd337-8778-402f-bdce-e891d89c899b, invocation_timestamp=2023-01-31T09:12:19.531Z, origin=Only For Testing, session_id=14edd337-8778-402f-bdce-e891d89c899b, session_timestamp=2023-01-31T09:12:19.531Z, thread-id=854}
[INFO ] 2023-01-31T09:12:19,845Z [Mock network] corda.flow. - Received transaction acknowledgement request from party O=Mock Company 1, L=London, C=GB. {fiber-id=10000013, flow-id=1e6f7cb6-584a-46d0-9b63-c8be619d430e, invocation_id=b78fac33-c4ec-460e-acf3-880bda428f4a, invocation_timestamp=2023-01-31T09:12:19.827Z, origin=O=Mock Company 1, L=London, C=GB, session_id=b78fac33-c4ec-460e-acf3-880bda428f4a, session_timestamp=2023-01-31T09:12:19.827Z, thread-id=854, tx_id=4329DEC920FF6ACB23DB4917B3C67464594A9984D84BE789B11CA4DDCF672A46}
[INFO ] 2023-01-31T09:12:19,852Z [Mock network] corda.flow. - Transaction dependencies resolution completed. {fiber-id=10000013, flow-id=1e6f7cb6-584a-46d0-9b63-c8be619d430e, invocation_id=b78fac33-c4ec-460e-acf3-880bda428f4a, invocation_timestamp=2023-01-31T09:12:19.827Z, origin=O=Mock Company 1, L=London, C=GB, session_id=b78fac33-c4ec-460e-acf3-880bda428f4a, session_timestamp=2023-01-31T09:12:19.827Z, thread-id=854, tx_id=4329DEC920FF6ACB23DB4917B3C67464594A9984D84BE789B11CA4DDCF672A46}
[INFO ] 2023-01-31T09:12:19,922Z [Mock network] corda.flow. - No need to notarise this transaction. {actor_id=Only For Testing, actor_owning_identity=O=Mock Company 1, L=London, C=GB, actor_store_id=TEST, fiber-id=10000011, flow-id=c63e8a76-b71c-4ced-86fe-e763ce35c194, invocation_id=14edd337-8778-402f-bdce-e891d89c899b, invocation_timestamp=2023-01-31T09:12:19.531Z, origin=Only For Testing, session_id=14edd337-8778-402f-bdce-e891d89c899b, session_timestamp=2023-01-31T09:12:19.531Z, thread-id=854, tx_id=4329DEC920FF6ACB23DB4917B3C67464594A9984D84BE789B11CA4DDCF672A46}
[INFO ] 2023-01-31T09:12:19,922Z [Mock network] corda.flow. - Recording transaction locally. {actor_id=Only For Testing, actor_owning_identity=O=Mock Company 1, L=London, C=GB, actor_store_id=TEST, fiber-id=10000011, flow-id=c63e8a76-b71c-4ced-86fe-e763ce35c194, invocation_id=14edd337-8778-402f-bdce-e891d89c899b, invocation_timestamp=2023-01-31T09:12:19.531Z, origin=Only For Testing, session_id=14edd337-8778-402f-bdce-e891d89c899b, session_timestamp=2023-01-31T09:12:19.531Z, thread-id=854, tx_id=4329DEC920FF6ACB23DB4917B3C67464594A9984D84BE789B11CA4DDCF672A46}
[INFO ] 2023-01-31T09:12:19,926Z [Mock network] corda.flow. - Recorded transaction locally successfully. {actor_id=Only For Testing, actor_owning_identity=O=Mock Company 1, L=London, C=GB, actor_store_id=TEST, fiber-id=10000011, flow-id=c63e8a76-b71c-4ced-86fe-e763ce35c194, invocation_id=14edd337-8778-402f-bdce-e891d89c899b, invocation_timestamp=2023-01-31T09:12:19.531Z, origin=Only For Testing, session_id=14edd337-8778-402f-bdce-e891d89c899b, session_timestamp=2023-01-31T09:12:19.531Z, thread-id=854, tx_id=4329DEC920FF6ACB23DB4917B3C67464594A9984D84BE789B11CA4DDCF672A46}
[INFO ] 2023-01-31T09:12:19,952Z [Mock network] corda.flow. - Received transaction acknowledgement request from party O=Mock Company 1, L=London, C=GB. {fiber-id=10000013, flow-id=1e6f7cb6-584a-46d0-9b63-c8be619d430e, invocation_id=b78fac33-c4ec-460e-acf3-880bda428f4a, invocation_timestamp=2023-01-31T09:12:19.827Z, origin=O=Mock Company 1, L=London, C=GB, session_id=b78fac33-c4ec-460e-acf3-880bda428f4a, session_timestamp=2023-01-31T09:12:19.827Z, thread-id=854, tx_id=4329DEC920FF6ACB23DB4917B3C67464594A9984D84BE789B11CA4DDCF672A46}
[INFO ] 2023-01-31T09:12:19,958Z [Mock network] corda.flow. - Transaction dependencies resolution completed. {fiber-id=10000013, flow-id=1e6f7cb6-584a-46d0-9b63-c8be619d430e, invocation_id=b78fac33-c4ec-460e-acf3-880bda428f4a, invocation_timestamp=2023-01-31T09:12:19.827Z, origin=O=Mock Company 1, L=London, C=GB, session_id=b78fac33-c4ec-460e-acf3-880bda428f4a, session_timestamp=2023-01-31T09:12:19.827Z, thread-id=854, tx_id=4329DEC920FF6ACB23DB4917B3C67464594A9984D84BE789B11CA4DDCF672A46}
[INFO ] 2023-01-31T09:12:19,961Z [Mock network] corda.flow. - Successfully received fully signed tx. Sending it to the vault for processing. {fiber-id=10000013, flow-id=1e6f7cb6-584a-46d0-9b63-c8be619d430e, invocation_id=b78fac33-c4ec-460e-acf3-880bda428f4a, invocation_timestamp=2023-01-31T09:12:19.827Z, origin=O=Mock Company 1, L=London, C=GB, session_id=b78fac33-c4ec-460e-acf3-880bda428f4a, session_timestamp=2023-01-31T09:12:19.827Z, thread-id=854, tx_id=4329DEC920FF6ACB23DB4917B3C67464594A9984D84BE789B11CA4DDCF672A46}
[INFO ] 2023-01-31T09:12:19,965Z [Mock network] corda.flow. - Successfully recorded received transaction locally. {fiber-id=10000013, flow-id=1e6f7cb6-584a-46d0-9b63-c8be619d430e, invocation_id=b78fac33-c4ec-460e-acf3-880bda428f4a, invocation_timestamp=2023-01-31T09:12:19.827Z, origin=O=Mock Company 1, L=London, C=GB, session_id=b78fac33-c4ec-460e-acf3-880bda428f4a, session_timestamp=2023-01-31T09:12:19.827Z, thread-id=854, tx_id=4329DEC920FF6ACB23DB4917B3C67464594A9984D84BE789B11CA4DDCF672A46}
[WARN ] 2023-01-31T09:12:19,967Z [Mock network] persistence.AbstractPartyToX500NameAsStringConverter. - Identity service unable to resolve AbstractParty: Anonymous(DLsTvw6uonHiHjdKLr53ZZvqkJAZNeY1qG1UiLuru9Ykk) {actor_id=Only For Testing, actor_owning_identity=O=Mock Company 1, L=London, C=GB, actor_store_id=TEST, fiber-id=10000013, flow-id=1e6f7cb6-584a-46d0-9b63-c8be619d430e, invocation_id=b78fac33-c4ec-460e-acf3-880bda428f4a, invocation_timestamp=2023-01-31T09:12:19.827Z, origin=O=Mock Company 1, L=London, C=GB, session_id=b78fac33-c4ec-460e-acf3-880bda428f4a, session_timestamp=2023-01-31T09:12:19.827Z, thread-id=854}
[INFO ] 2023-01-31T09:12:19,971Z [Mock network] corda.flow. - Party O=Mock Company 2, L=London, C=GB received the transaction. {actor_id=Only For Testing, actor_owning_identity=O=Mock Company 1, L=London, C=GB, actor_store_id=TEST, fiber-id=10000011, flow-id=c63e8a76-b71c-4ced-86fe-e763ce35c194, invocation_id=14edd337-8778-402f-bdce-e891d89c899b, invocation_timestamp=2023-01-31T09:12:19.531Z, origin=Only For Testing, session_id=14edd337-8778-402f-bdce-e891d89c899b, session_timestamp=2023-01-31T09:12:19.531Z, thread-id=854, tx_id=4329DEC920FF6ACB23DB4917B3C67464594A9984D84BE789B11CA4DDCF672A46}
[INFO ] 2023-01-31T09:12:19,971Z [Mock network] corda.flow. - All parties received the transaction successfully. {actor_id=Only For Testing, actor_owning_identity=O=Mock Company 1, L=London, C=GB, actor_store_id=TEST, fiber-id=10000011, flow-id=c63e8a76-b71c-4ced-86fe-e763ce35c194, invocation_id=14edd337-8778-402f-bdce-e891d89c899b, invocation_timestamp=2023-01-31T09:12:19.531Z, origin=Only For Testing, session_id=14edd337-8778-402f-bdce-e891d89c899b, session_timestamp=2023-01-31T09:12:19.531Z, thread-id=854, tx_id=4329DEC920FF6ACB23DB4917B3C67464594A9984D84BE789B11CA4DDCF672A46}
[INFO ] 2023-01-31T09:12:20,025Z [Mock network] corda.flow. - Received transaction acknowledgement request from party O=Mock Company 1, L=London, C=GB. {fiber-id=10000014, flow-id=d2b5acb3-facc-40c2-8487-b9953f33d84e, invocation_id=5dfc18ff-422b-4654-9c41-e87eb3834f74, invocation_timestamp=2023-01-31T09:12:20.006Z, origin=O=Mock Company 1, L=London, C=GB, session_id=5dfc18ff-422b-4654-9c41-e87eb3834f74, session_timestamp=2023-01-31T09:12:20.006Z, thread-id=854, tx_id=F1F623435F5CD3EE7C37B31B104AAD23CF29543CDEEB22AD5FF8B7C94354F2A9}
[INFO ] 2023-01-31T09:12:20,031Z [Mock network] corda.flow. - Transaction dependencies resolution completed. {fiber-id=10000014, flow-id=d2b5acb3-facc-40c2-8487-b9953f33d84e, invocation_id=5dfc18ff-422b-4654-9c41-e87eb3834f74, invocation_timestamp=2023-01-31T09:12:20.006Z, origin=O=Mock Company 1, L=London, C=GB, session_id=5dfc18ff-422b-4654-9c41-e87eb3834f74, session_timestamp=2023-01-31T09:12:20.006Z, thread-id=854, tx_id=F1F623435F5CD3EE7C37B31B104AAD23CF29543CDEEB22AD5FF8B7C94354F2A9}
[INFO ] 2023-01-31T09:12:20,033Z [Mock network] corda.flow. - Successfully received fully signed tx. Sending it to the vault for processing. {fiber-id=10000014, flow-id=d2b5acb3-facc-40c2-8487-b9953f33d84e, invocation_id=5dfc18ff-422b-4654-9c41-e87eb3834f74, invocation_timestamp=2023-01-31T09:12:20.006Z, origin=O=Mock Company 1, L=London, C=GB, session_id=5dfc18ff-422b-4654-9c41-e87eb3834f74, session_timestamp=2023-01-31T09:12:20.006Z, thread-id=854, tx_id=F1F623435F5CD3EE7C37B31B104AAD23CF29543CDEEB22AD5FF8B7C94354F2A9}
[INFO ] 2023-01-31T09:12:20,036Z [Mock network] corda.flow. - Successfully recorded received transaction locally. {fiber-id=10000014, flow-id=d2b5acb3-facc-40c2-8487-b9953f33d84e, invocation_id=5dfc18ff-422b-4654-9c41-e87eb3834f74, invocation_timestamp=2023-01-31T09:12:20.006Z, origin=O=Mock Company 1, L=London, C=GB, session_id=5dfc18ff-422b-4654-9c41-e87eb3834f74, session_timestamp=2023-01-31T09:12:20.006Z, thread-id=854, tx_id=F1F623435F5CD3EE7C37B31B104AAD23CF29543CDEEB22AD5FF8B7C94354F2A9}
[INFO ] 2023-01-31T09:12:20,055Z [Mock network] identity.PersistentIdentityService. - An existing entry for DL4vsptk6dFRg7UZh8bEQJXrSTS5DAAaRvhQ5ud4avezN1 already exists. {fiber-id=10000014, flow-id=d2b5acb3-facc-40c2-8487-b9953f33d84e, invocation_id=5dfc18ff-422b-4654-9c41-e87eb3834f74, invocation_timestamp=2023-01-31T09:12:20.006Z, origin=O=Mock Company 1, L=London, C=GB, session_id=5dfc18ff-422b-4654-9c41-e87eb3834f74, session_timestamp=2023-01-31T09:12:20.006Z, thread-id=854, tx_id=F1F623435F5CD3EE7C37B31B104AAD23CF29543CDEEB22AD5FF8B7C94354F2A9}
[INFO ] 2023-01-31T09:12:20,061Z [Mock network] corda.flow. - Received transaction acknowledgement request from party O=Mock Company 1, L=London, C=GB. {fiber-id=10000014, flow-id=d2b5acb3-facc-40c2-8487-b9953f33d84e, invocation_id=5dfc18ff-422b-4654-9c41-e87eb3834f74, invocation_timestamp=2023-01-31T09:12:20.006Z, origin=O=Mock Company 1, L=London, C=GB, session_id=5dfc18ff-422b-4654-9c41-e87eb3834f74, session_timestamp=2023-01-31T09:12:20.006Z, thread-id=854, tx_id=A65F3D9228566DD554E8688A8D473BC0CE81D395F7E86BCD0A37F0342D7B5079}
[INFO ] 2023-01-31T09:12:20,066Z [Mock network] corda.flow. - Transaction dependencies resolution completed. {fiber-id=10000014, flow-id=d2b5acb3-facc-40c2-8487-b9953f33d84e, invocation_id=5dfc18ff-422b-4654-9c41-e87eb3834f74, invocation_timestamp=2023-01-31T09:12:20.006Z, origin=O=Mock Company 1, L=London, C=GB, session_id=5dfc18ff-422b-4654-9c41-e87eb3834f74, session_timestamp=2023-01-31T09:12:20.006Z, thread-id=854, tx_id=A65F3D9228566DD554E8688A8D473BC0CE81D395F7E86BCD0A37F0342D7B5079}
[INFO ] 2023-01-31T09:12:20,068Z [Mock network] corda.flow. - Successfully received fully signed tx. Sending it to the vault for processing. {fiber-id=10000014, flow-id=d2b5acb3-facc-40c2-8487-b9953f33d84e, invocation_id=5dfc18ff-422b-4654-9c41-e87eb3834f74, invocation_timestamp=2023-01-31T09:12:20.006Z, origin=O=Mock Company 1, L=London, C=GB, session_id=5dfc18ff-422b-4654-9c41-e87eb3834f74, session_timestamp=2023-01-31T09:12:20.006Z, thread-id=854, tx_id=A65F3D9228566DD554E8688A8D473BC0CE81D395F7E86BCD0A37F0342D7B5079}
[INFO ] 2023-01-31T09:12:20,071Z [Mock network] corda.flow. - Successfully recorded received transaction locally. {fiber-id=10000014, flow-id=d2b5acb3-facc-40c2-8487-b9953f33d84e, invocation_id=5dfc18ff-422b-4654-9c41-e87eb3834f74, invocation_timestamp=2023-01-31T09:12:20.006Z, origin=O=Mock Company 1, L=London, C=GB, session_id=5dfc18ff-422b-4654-9c41-e87eb3834f74, session_timestamp=2023-01-31T09:12:20.006Z, thread-id=854, tx_id=A65F3D9228566DD554E8688A8D473BC0CE81D395F7E86BCD0A37F0342D7B5079}
[INFO ] 2023-01-31T09:12:20,091Z [Mock network] identity.PersistentIdentityService. - Linking: 0CED7D7B35F89977A9949B93AF1D457C92FA56DF8F6660C245D315963D7C88E5 to O=Mock Company 1, L=London, C=GB {fiber-id=10000014, flow-id=d2b5acb3-facc-40c2-8487-b9953f33d84e, invocation_id=5dfc18ff-422b-4654-9c41-e87eb3834f74, invocation_timestamp=2023-01-31T09:12:20.006Z, origin=O=Mock Company 1, L=London, C=GB, session_id=5dfc18ff-422b-4654-9c41-e87eb3834f74, session_timestamp=2023-01-31T09:12:20.006Z, thread-id=854, tx_id=A65F3D9228566DD554E8688A8D473BC0CE81D395F7E86BCD0A37F0342D7B5079}
[INFO ] 2023-01-31T09:12:20,099Z [Mock network] corda.flow. - Received transaction acknowledgement request from party O=Mock Company 1, L=London, C=GB. {fiber-id=10000014, flow-id=d2b5acb3-facc-40c2-8487-b9953f33d84e, invocation_id=5dfc18ff-422b-4654-9c41-e87eb3834f74, invocation_timestamp=2023-01-31T09:12:20.006Z, origin=O=Mock Company 1, L=London, C=GB, session_id=5dfc18ff-422b-4654-9c41-e87eb3834f74, session_timestamp=2023-01-31T09:12:20.006Z, thread-id=854, tx_id=4329DEC920FF6ACB23DB4917B3C67464594A9984D84BE789B11CA4DDCF672A46}
[INFO ] 2023-01-31T09:12:20,104Z [Mock network] corda.flow. - Transaction dependencies resolution completed. {fiber-id=10000014, flow-id=d2b5acb3-facc-40c2-8487-b9953f33d84e, invocation_id=5dfc18ff-422b-4654-9c41-e87eb3834f74, invocation_timestamp=2023-01-31T09:12:20.006Z, origin=O=Mock Company 1, L=London, C=GB, session_id=5dfc18ff-422b-4654-9c41-e87eb3834f74, session_timestamp=2023-01-31T09:12:20.006Z, thread-id=854, tx_id=4329DEC920FF6ACB23DB4917B3C67464594A9984D84BE789B11CA4DDCF672A46}
[INFO ] 2023-01-31T09:12:20,108Z [Mock network] corda.flow. - Successfully received fully signed tx. Sending it to the vault for processing. {fiber-id=10000014, flow-id=d2b5acb3-facc-40c2-8487-b9953f33d84e, invocation_id=5dfc18ff-422b-4654-9c41-e87eb3834f74, invocation_timestamp=2023-01-31T09:12:20.006Z, origin=O=Mock Company 1, L=London, C=GB, session_id=5dfc18ff-422b-4654-9c41-e87eb3834f74, session_timestamp=2023-01-31T09:12:20.006Z, thread-id=854, tx_id=4329DEC920FF6ACB23DB4917B3C67464594A9984D84BE789B11CA4DDCF672A46}
[INFO ] 2023-01-31T09:12:20,113Z [Mock network] corda.flow. - Successfully recorded received transaction locally. {fiber-id=10000014, flow-id=d2b5acb3-facc-40c2-8487-b9953f33d84e, invocation_id=5dfc18ff-422b-4654-9c41-e87eb3834f74, invocation_timestamp=2023-01-31T09:12:20.006Z, origin=O=Mock Company 1, L=London, C=GB, session_id=5dfc18ff-422b-4654-9c41-e87eb3834f74, session_timestamp=2023-01-31T09:12:20.006Z, thread-id=854, tx_id=4329DEC920FF6ACB23DB4917B3C67464594A9984D84BE789B11CA4DDCF672A46}
[INFO ] 2023-01-31T09:12:20,205Z [Mock network] identity.PersistentIdentityService. - Linking: A3AD9A49BDDF183B54FD60C997984628863F6D26FE7F382D9C4A3B2A7BAF3622 to O=Mock Company 1, L=London, C=GB {fiber-id=10000017, flow-id=a2d716e8-9f3e-421b-b818-406b234833b8, invocation_id=d6063b71-8b60-45cf-9be2-abef9668a8b0, invocation_timestamp=2023-01-31T09:12:20.181Z, origin=O=Mock Company 2, L=London, C=GB, session_id=d6063b71-8b60-45cf-9be2-abef9668a8b0, session_timestamp=2023-01-31T09:12:20.181Z, thread-id=854}
[INFO ] 2023-01-31T09:12:20,219Z [Mock network] identity.PersistentIdentityService. - Linking: A3AD9A49BDDF183B54FD60C997984628863F6D26FE7F382D9C4A3B2A7BAF3622 to O=Mock Company 1, L=London, C=GB {actor_id=Only For Testing, actor_owning_identity=O=Mock Company 2, L=London, C=GB, actor_store_id=TEST, fiber-id=10000016, flow-id=95ff87f2-6248-499a-9125-20f13ad72757, invocation_id=f1a0eecf-29a2-4ae7-bf29-8d7c653c6f2a, invocation_timestamp=2023-01-31T09:12:20.155Z, origin=Only For Testing, session_id=f1a0eecf-29a2-4ae7-bf29-8d7c653c6f2a, session_timestamp=2023-01-31T09:12:20.155Z, thread-id=854}
[INFO ] 2023-01-31T09:12:20,224Z [Mock network] identity.PersistentIdentityService. - Linking: FC2A579F83E92455F71796F297F3D10C6DCF239B3D1BB6B67C458F0FCD0619EB to O=Mock Company 2, L=London, C=GB {actor_id=Only For Testing, actor_owning_identity=O=Mock Company 2, L=London, C=GB, actor_store_id=TEST, fiber-id=10000016, flow-id=95ff87f2-6248-499a-9125-20f13ad72757, invocation_id=f1a0eecf-29a2-4ae7-bf29-8d7c653c6f2a, invocation_timestamp=2023-01-31T09:12:20.155Z, origin=Only For Testing, session_id=f1a0eecf-29a2-4ae7-bf29-8d7c653c6f2a, session_timestamp=2023-01-31T09:12:20.155Z, thread-id=854}
[INFO ] 2023-01-31T09:12:20,268Z [Mock network] identity.PersistentIdentityService. - Linking: 41863506ADB2482E7C3FCC94EC557F72CCDCDDAAD136A0587CE786688E0A4C4B to O=Mock Company 3, L=London, C=GB {fiber-id=10000018, flow-id=9f877225-1243-4e6e-b1e4-5abf7bb34921, invocation_id=d8cf7f83-3f95-4728-ad25-0f65c452d4c3, invocation_timestamp=2023-01-31T09:12:20.233Z, origin=O=Mock Company 2, L=London, C=GB, session_id=d8cf7f83-3f95-4728-ad25-0f65c452d4c3, session_timestamp=2023-01-31T09:12:20.233Z, thread-id=854}
[INFO ] 2023-01-31T09:12:20,280Z [Mock network] identity.PersistentIdentityService. - Linking: 41863506ADB2482E7C3FCC94EC557F72CCDCDDAAD136A0587CE786688E0A4C4B to O=Mock Company 3, L=London, C=GB {actor_id=Only For Testing, actor_owning_identity=O=Mock Company 2, L=London, C=GB, actor_store_id=TEST, fiber-id=10000016, flow-id=95ff87f2-6248-499a-9125-20f13ad72757, invocation_id=f1a0eecf-29a2-4ae7-bf29-8d7c653c6f2a, invocation_timestamp=2023-01-31T09:12:20.155Z, origin=Only For Testing, session_id=f1a0eecf-29a2-4ae7-bf29-8d7c653c6f2a, session_timestamp=2023-01-31T09:12:20.155Z, thread-id=854}
[INFO ] 2023-01-31T09:12:20,346Z [Mock network] corda.flow. - Received transaction acknowledgement request from party O=Mock Company 2, L=London, C=GB. {fiber-id=10000019, flow-id=e11b746b-5a16-4a40-968c-e3e05ecab84f, invocation_id=f9d0fdbc-9130-430c-9e17-6725052e8ed7, invocation_timestamp=2023-01-31T09:12:20.336Z, origin=O=Mock Company 2, L=London, C=GB, session_id=f9d0fdbc-9130-430c-9e17-6725052e8ed7, session_timestamp=2023-01-31T09:12:20.336Z, thread-id=854, tx_id=081BB74A4DDDAE56BB8D14CDFC494FF6B2027799D8446FAADFC8B872D9A86474}
[INFO ] 2023-01-31T09:12:20,461Z [Mock network] corda.flow. - Transaction dependencies resolution completed. {fiber-id=10000019, flow-id=e11b746b-5a16-4a40-968c-e3e05ecab84f, invocation_id=f9d0fdbc-9130-430c-9e17-6725052e8ed7, invocation_timestamp=2023-01-31T09:12:20.336Z, origin=O=Mock Company 2, L=London, C=GB, session_id=f9d0fdbc-9130-430c-9e17-6725052e8ed7, session_timestamp=2023-01-31T09:12:20.336Z, thread-id=854, tx_id=081BB74A4DDDAE56BB8D14CDFC494FF6B2027799D8446FAADFC8B872D9A86474}
[INFO ] 2023-01-31T09:12:20,535Z [Mock network] corda.flow. - Received transaction acknowledgement request from party O=Mock Company 2, L=London, C=GB. {fiber-id=10000020, flow-id=57370a21-95b3-43b6-af85-c27eca0ce28e, invocation_id=5a7c8438-ac13-41ea-b89a-5ae4ad2f426f, invocation_timestamp=2023-01-31T09:12:20.527Z, origin=O=Mock Company 2, L=London, C=GB, session_id=5a7c8438-ac13-41ea-b89a-5ae4ad2f426f, session_timestamp=2023-01-31T09:12:20.527Z, thread-id=854, tx_id=081BB74A4DDDAE56BB8D14CDFC494FF6B2027799D8446FAADFC8B872D9A86474}
[INFO ] 2023-01-31T09:12:20,543Z [Mock network] corda.flow. - Transaction dependencies resolution completed. {fiber-id=10000020, flow-id=57370a21-95b3-43b6-af85-c27eca0ce28e, invocation_id=5a7c8438-ac13-41ea-b89a-5ae4ad2f426f, invocation_timestamp=2023-01-31T09:12:20.527Z, origin=O=Mock Company 2, L=London, C=GB, session_id=5a7c8438-ac13-41ea-b89a-5ae4ad2f426f, session_timestamp=2023-01-31T09:12:20.527Z, thread-id=854, tx_id=081BB74A4DDDAE56BB8D14CDFC494FF6B2027799D8446FAADFC8B872D9A86474}
[INFO ] 2023-01-31T09:12:20,605Z [Mock network] corda.flow. - Sending transaction to notary: O=Notary, L=London, C=GB. {actor_id=Only For Testing, actor_owning_identity=O=Mock Company 2, L=London, C=GB, actor_store_id=TEST, fiber-id=10000016, flow-id=95ff87f2-6248-499a-9125-20f13ad72757, invocation_id=f1a0eecf-29a2-4ae7-bf29-8d7c653c6f2a, invocation_timestamp=2023-01-31T09:12:20.155Z, origin=Only For Testing, session_id=f1a0eecf-29a2-4ae7-bf29-8d7c653c6f2a, session_timestamp=2023-01-31T09:12:20.155Z, thread-id=854, tx_id=081BB74A4DDDAE56BB8D14CDFC494FF6B2027799D8446FAADFC8B872D9A86474}
[INFO ] 2023-01-31T09:12:20,648Z [Mock network] corda.flow. - Received a notarisation request for Tx [081BB74A4DDDAE56BB8D14CDFC494FF6B2027799D8446FAADFC8B872D9A86474] from [O=Mock Company 2, L=London, C=GB] {fiber-id=10000021, flow-id=88bf0a51-fbf1-4775-82f2-764153512a2c, invocation_id=6144d519-7ebe-4e31-bade-244701a85d0c, invocation_timestamp=2023-01-31T09:12:20.632Z, origin=O=Mock Company 2, L=London, C=GB, session_id=6144d519-7ebe-4e31-bade-244701a85d0c, session_timestamp=2023-01-31T09:12:20.632Z, thread-id=854}
[INFO ] 2023-01-31T09:12:20,823Z [Notary request queue processor] jpa.JPAUniquenessProvider. - Processing notarization requests with 1 input states and 0 references {}
[INFO ] 2023-01-31T09:12:20,855Z [Mock network] corda.flow. - Transaction [081BB74A4DDDAE56BB8D14CDFC494FF6B2027799D8446FAADFC8B872D9A86474] successfully notarised, sending signature back to [O=Mock Company 2, L=London, C=GB] {fiber-id=10000021, flow-id=88bf0a51-fbf1-4775-82f2-764153512a2c, invocation_id=6144d519-7ebe-4e31-bade-244701a85d0c, invocation_timestamp=2023-01-31T09:12:20.632Z, origin=O=Mock Company 2, L=London, C=GB, session_id=6144d519-7ebe-4e31-bade-244701a85d0c, session_timestamp=2023-01-31T09:12:20.632Z, thread-id=854}
[INFO ] 2023-01-31T09:12:20,879Z [Mock network] corda.flow. - Notary responded (O=Notary, L=London, C=GB). {actor_id=Only For Testing, actor_owning_identity=O=Mock Company 2, L=London, C=GB, actor_store_id=TEST, fiber-id=10000016, flow-id=95ff87f2-6248-499a-9125-20f13ad72757, invocation_id=f1a0eecf-29a2-4ae7-bf29-8d7c653c6f2a, invocation_timestamp=2023-01-31T09:12:20.155Z, origin=Only For Testing, session_id=f1a0eecf-29a2-4ae7-bf29-8d7c653c6f2a, session_timestamp=2023-01-31T09:12:20.155Z, thread-id=854, tx_id=081BB74A4DDDAE56BB8D14CDFC494FF6B2027799D8446FAADFC8B872D9A86474}
[INFO ] 2023-01-31T09:12:20,880Z [Mock network] corda.flow. - Recording transaction locally. {actor_id=Only For Testing, actor_owning_identity=O=Mock Company 2, L=London, C=GB, actor_store_id=TEST, fiber-id=10000016, flow-id=95ff87f2-6248-499a-9125-20f13ad72757, invocation_id=f1a0eecf-29a2-4ae7-bf29-8d7c653c6f2a, invocation_timestamp=2023-01-31T09:12:20.155Z, origin=Only For Testing, session_id=f1a0eecf-29a2-4ae7-bf29-8d7c653c6f2a, session_timestamp=2023-01-31T09:12:20.155Z, thread-id=854, tx_id=081BB74A4DDDAE56BB8D14CDFC494FF6B2027799D8446FAADFC8B872D9A86474}
[INFO ] 2023-01-31T09:12:20,888Z [Mock network] corda.flow. - Recorded transaction locally successfully. {actor_id=Only For Testing, actor_owning_identity=O=Mock Company 2, L=London, C=GB, actor_store_id=TEST, fiber-id=10000016, flow-id=95ff87f2-6248-499a-9125-20f13ad72757, invocation_id=f1a0eecf-29a2-4ae7-bf29-8d7c653c6f2a, invocation_timestamp=2023-01-31T09:12:20.155Z, origin=Only For Testing, session_id=f1a0eecf-29a2-4ae7-bf29-8d7c653c6f2a, session_timestamp=2023-01-31T09:12:20.155Z, thread-id=854, tx_id=081BB74A4DDDAE56BB8D14CDFC494FF6B2027799D8446FAADFC8B872D9A86474}
[INFO ] 2023-01-31T09:12:20,898Z [Mock network] corda.flow. - Received transaction acknowledgement request from party O=Mock Company 2, L=London, C=GB. {fiber-id=10000019, flow-id=e11b746b-5a16-4a40-968c-e3e05ecab84f, invocation_id=f9d0fdbc-9130-430c-9e17-6725052e8ed7, invocation_timestamp=2023-01-31T09:12:20.336Z, origin=O=Mock Company 2, L=London, C=GB, session_id=f9d0fdbc-9130-430c-9e17-6725052e8ed7, session_timestamp=2023-01-31T09:12:20.336Z, thread-id=854, tx_id=081BB74A4DDDAE56BB8D14CDFC494FF6B2027799D8446FAADFC8B872D9A86474}
[INFO ] 2023-01-31T09:12:20,903Z [Mock network] corda.flow. - Transaction dependencies resolution completed. {fiber-id=10000019, flow-id=e11b746b-5a16-4a40-968c-e3e05ecab84f, invocation_id=f9d0fdbc-9130-430c-9e17-6725052e8ed7, invocation_timestamp=2023-01-31T09:12:20.336Z, origin=O=Mock Company 2, L=London, C=GB, session_id=f9d0fdbc-9130-430c-9e17-6725052e8ed7, session_timestamp=2023-01-31T09:12:20.336Z, thread-id=854, tx_id=081BB74A4DDDAE56BB8D14CDFC494FF6B2027799D8446FAADFC8B872D9A86474}
[INFO ] 2023-01-31T09:12:21,220Z [Mock network] corda.flow. - Successfully received fully signed tx. Sending it to the vault for processing. {fiber-id=10000019, flow-id=e11b746b-5a16-4a40-968c-e3e05ecab84f, invocation_id=f9d0fdbc-9130-430c-9e17-6725052e8ed7, invocation_timestamp=2023-01-31T09:12:20.336Z, origin=O=Mock Company 2, L=London, C=GB, session_id=f9d0fdbc-9130-430c-9e17-6725052e8ed7, session_timestamp=2023-01-31T09:12:20.336Z, thread-id=854, tx_id=081BB74A4DDDAE56BB8D14CDFC494FF6B2027799D8446FAADFC8B872D9A86474}
[INFO ] 2023-01-31T09:12:21,227Z [Mock network] corda.flow. - Successfully recorded received transaction locally. {fiber-id=10000019, flow-id=e11b746b-5a16-4a40-968c-e3e05ecab84f, invocation_id=f9d0fdbc-9130-430c-9e17-6725052e8ed7, invocation_timestamp=2023-01-31T09:12:20.336Z, origin=O=Mock Company 2, L=London, C=GB, session_id=f9d0fdbc-9130-430c-9e17-6725052e8ed7, session_timestamp=2023-01-31T09:12:20.336Z, thread-id=854, tx_id=081BB74A4DDDAE56BB8D14CDFC494FF6B2027799D8446FAADFC8B872D9A86474}
[WARN ] 2023-01-31T09:12:21,229Z [Mock network] persistence.AbstractPartyToX500NameAsStringConverter. - Identity service unable to resolve AbstractParty: Anonymous(DLsTvw6uonHiHjdKLr53ZZvqkJAZNeY1qG1UiLuru9Ykk) {actor_id=Only For Testing, actor_owning_identity=O=Mock Company 2, L=London, C=GB, actor_store_id=TEST, fiber-id=10000019, flow-id=e11b746b-5a16-4a40-968c-e3e05ecab84f, invocation_id=f9d0fdbc-9130-430c-9e17-6725052e8ed7, invocation_timestamp=2023-01-31T09:12:20.336Z, origin=O=Mock Company 2, L=London, C=GB, session_id=f9d0fdbc-9130-430c-9e17-6725052e8ed7, session_timestamp=2023-01-31T09:12:20.336Z, thread-id=854}
[INFO ] 2023-01-31T09:12:21,235Z [Mock network] corda.flow. - Party O=Mock Company 3, L=London, C=GB received the transaction. {actor_id=Only For Testing, actor_owning_identity=O=Mock Company 2, L=London, C=GB, actor_store_id=TEST, fiber-id=10000016, flow-id=95ff87f2-6248-499a-9125-20f13ad72757, invocation_id=f1a0eecf-29a2-4ae7-bf29-8d7c653c6f2a, invocation_timestamp=2023-01-31T09:12:20.155Z, origin=Only For Testing, session_id=f1a0eecf-29a2-4ae7-bf29-8d7c653c6f2a, session_timestamp=2023-01-31T09:12:20.155Z, thread-id=854, tx_id=081BB74A4DDDAE56BB8D14CDFC494FF6B2027799D8446FAADFC8B872D9A86474}
[INFO ] 2023-01-31T09:12:21,244Z [Mock network] corda.flow. - Received transaction acknowledgement request from party O=Mock Company 2, L=London, C=GB. {fiber-id=10000020, flow-id=57370a21-95b3-43b6-af85-c27eca0ce28e, invocation_id=5a7c8438-ac13-41ea-b89a-5ae4ad2f426f, invocation_timestamp=2023-01-31T09:12:20.527Z, origin=O=Mock Company 2, L=London, C=GB, session_id=5a7c8438-ac13-41ea-b89a-5ae4ad2f426f, session_timestamp=2023-01-31T09:12:20.527Z, thread-id=854, tx_id=081BB74A4DDDAE56BB8D14CDFC494FF6B2027799D8446FAADFC8B872D9A86474}
[INFO ] 2023-01-31T09:12:21,250Z [Mock network] corda.flow. - Transaction dependencies resolution completed. {fiber-id=10000020, flow-id=57370a21-95b3-43b6-af85-c27eca0ce28e, invocation_id=5a7c8438-ac13-41ea-b89a-5ae4ad2f426f, invocation_timestamp=2023-01-31T09:12:20.527Z, origin=O=Mock Company 2, L=London, C=GB, session_id=5a7c8438-ac13-41ea-b89a-5ae4ad2f426f, session_timestamp=2023-01-31T09:12:20.527Z, thread-id=854, tx_id=081BB74A4DDDAE56BB8D14CDFC494FF6B2027799D8446FAADFC8B872D9A86474}
[INFO ] 2023-01-31T09:12:21,256Z [Mock network] corda.flow. - Successfully received fully signed tx. Sending it to the vault for processing. {fiber-id=10000020, flow-id=57370a21-95b3-43b6-af85-c27eca0ce28e, invocation_id=5a7c8438-ac13-41ea-b89a-5ae4ad2f426f, invocation_timestamp=2023-01-31T09:12:20.527Z, origin=O=Mock Company 2, L=London, C=GB, session_id=5a7c8438-ac13-41ea-b89a-5ae4ad2f426f, session_timestamp=2023-01-31T09:12:20.527Z, thread-id=854, tx_id=081BB74A4DDDAE56BB8D14CDFC494FF6B2027799D8446FAADFC8B872D9A86474}
[INFO ] 2023-01-31T09:12:21,265Z [Mock network] corda.flow. - Successfully recorded received transaction locally. {fiber-id=10000020, flow-id=57370a21-95b3-43b6-af85-c27eca0ce28e, invocation_id=5a7c8438-ac13-41ea-b89a-5ae4ad2f426f, invocation_timestamp=2023-01-31T09:12:20.527Z, origin=O=Mock Company 2, L=London, C=GB, session_id=5a7c8438-ac13-41ea-b89a-5ae4ad2f426f, session_timestamp=2023-01-31T09:12:20.527Z, thread-id=854, tx_id=081BB74A4DDDAE56BB8D14CDFC494FF6B2027799D8446FAADFC8B872D9A86474}
[WARN ] 2023-01-31T09:12:21,266Z [Mock network] persistence.AbstractPartyToX500NameAsStringConverter. - Identity service unable to resolve AbstractParty: Anonymous(DL5QnCF2GdYsmLzaBf2NMFeEJ3SCC8VMYUvDve1UNwsKMk) {actor_id=Only For Testing, actor_owning_identity=O=Mock Company 2, L=London, C=GB, actor_store_id=TEST, fiber-id=10000020, flow-id=57370a21-95b3-43b6-af85-c27eca0ce28e, invocation_id=5a7c8438-ac13-41ea-b89a-5ae4ad2f426f, invocation_timestamp=2023-01-31T09:12:20.527Z, origin=O=Mock Company 2, L=London, C=GB, session_id=5a7c8438-ac13-41ea-b89a-5ae4ad2f426f, session_timestamp=2023-01-31T09:12:20.527Z, thread-id=854}
[INFO ] 2023-01-31T09:12:21,279Z [Mock network] corda.flow. - Party O=Mock Company 1, L=London, C=GB received the transaction. {actor_id=Only For Testing, actor_owning_identity=O=Mock Company 2, L=London, C=GB, actor_store_id=TEST, fiber-id=10000016, flow-id=95ff87f2-6248-499a-9125-20f13ad72757, invocation_id=f1a0eecf-29a2-4ae7-bf29-8d7c653c6f2a, invocation_timestamp=2023-01-31T09:12:20.155Z, origin=Only For Testing, session_id=f1a0eecf-29a2-4ae7-bf29-8d7c653c6f2a, session_timestamp=2023-01-31T09:12:20.155Z, thread-id=854, tx_id=081BB74A4DDDAE56BB8D14CDFC494FF6B2027799D8446FAADFC8B872D9A86474}
[INFO ] 2023-01-31T09:12:21,279Z [Mock network] corda.flow. - All parties received the transaction successfully. {actor_id=Only For Testing, actor_owning_identity=O=Mock Company 2, L=London, C=GB, actor_store_id=TEST, fiber-id=10000016, flow-id=95ff87f2-6248-499a-9125-20f13ad72757, invocation_id=f1a0eecf-29a2-4ae7-bf29-8d7c653c6f2a, invocation_timestamp=2023-01-31T09:12:20.155Z, origin=Only For Testing, session_id=f1a0eecf-29a2-4ae7-bf29-8d7c653c6f2a, session_timestamp=2023-01-31T09:12:20.155Z, thread-id=854, tx_id=081BB74A4DDDAE56BB8D14CDFC494FF6B2027799D8446FAADFC8B872D9A86474}
[INFO ] 2023-01-31T09:12:21,330Z [Mock network] corda.flow. - Received transaction acknowledgement request from party O=Mock Company 3, L=London, C=GB. {fiber-id=10000024, flow-id=5a374e04-02d9-41c4-a2b4-9577e57f8dc6, invocation_id=475063ca-1d89-41b9-a4de-5d61d0552ec8, invocation_timestamp=2023-01-31T09:12:21.317Z, origin=O=Mock Company 3, L=London, C=GB, session_id=475063ca-1d89-41b9-a4de-5d61d0552ec8, session_timestamp=2023-01-31T09:12:21.317Z, thread-id=854, tx_id=666E084B7E048EDFE04045A78BADA3494BC7127770A564769999C01265D5EF13}
[INFO ] 2023-01-31T09:12:21,335Z [Mock network] corda.flow. - Transaction dependencies resolution completed. {fiber-id=10000024, flow-id=5a374e04-02d9-41c4-a2b4-9577e57f8dc6, invocation_id=475063ca-1d89-41b9-a4de-5d61d0552ec8, invocation_timestamp=2023-01-31T09:12:21.317Z, origin=O=Mock Company 3, L=London, C=GB, session_id=475063ca-1d89-41b9-a4de-5d61d0552ec8, session_timestamp=2023-01-31T09:12:21.317Z, thread-id=854, tx_id=666E084B7E048EDFE04045A78BADA3494BC7127770A564769999C01265D5EF13}
[INFO ] 2023-01-31T09:12:21,338Z [Mock network] corda.flow. - Successfully received fully signed tx. Sending it to the vault for processing. {fiber-id=10000024, flow-id=5a374e04-02d9-41c4-a2b4-9577e57f8dc6, invocation_id=475063ca-1d89-41b9-a4de-5d61d0552ec8, invocation_timestamp=2023-01-31T09:12:21.317Z, origin=O=Mock Company 3, L=London, C=GB, session_id=475063ca-1d89-41b9-a4de-5d61d0552ec8, session_timestamp=2023-01-31T09:12:21.317Z, thread-id=854, tx_id=666E084B7E048EDFE04045A78BADA3494BC7127770A564769999C01265D5EF13}
[INFO ] 2023-01-31T09:12:21,340Z [Mock network] corda.flow. - Successfully recorded received transaction locally. {fiber-id=10000024, flow-id=5a374e04-02d9-41c4-a2b4-9577e57f8dc6, invocation_id=475063ca-1d89-41b9-a4de-5d61d0552ec8, invocation_timestamp=2023-01-31T09:12:21.317Z, origin=O=Mock Company 3, L=London, C=GB, session_id=475063ca-1d89-41b9-a4de-5d61d0552ec8, session_timestamp=2023-01-31T09:12:21.317Z, thread-id=854, tx_id=666E084B7E048EDFE04045A78BADA3494BC7127770A564769999C01265D5EF13}
[INFO ] 2023-01-31T09:12:21,356Z [Mock network] identity.PersistentIdentityService. - Linking: 41863506ADB2482E7C3FCC94EC557F72CCDCDDAAD136A0587CE786688E0A4C4B to O=Mock Company 3, L=London, C=GB {fiber-id=10000024, flow-id=5a374e04-02d9-41c4-a2b4-9577e57f8dc6, invocation_id=475063ca-1d89-41b9-a4de-5d61d0552ec8, invocation_timestamp=2023-01-31T09:12:21.317Z, origin=O=Mock Company 3, L=London, C=GB, session_id=475063ca-1d89-41b9-a4de-5d61d0552ec8, session_timestamp=2023-01-31T09:12:21.317Z, thread-id=854, tx_id=666E084B7E048EDFE04045A78BADA3494BC7127770A564769999C01265D5EF13}
[INFO ] 2023-01-31T09:12:21,363Z [Mock network] corda.flow. - Received transaction acknowledgement request from party O=Mock Company 3, L=London, C=GB. {fiber-id=10000024, flow-id=5a374e04-02d9-41c4-a2b4-9577e57f8dc6, invocation_id=475063ca-1d89-41b9-a4de-5d61d0552ec8, invocation_timestamp=2023-01-31T09:12:21.317Z, origin=O=Mock Company 3, L=London, C=GB, session_id=475063ca-1d89-41b9-a4de-5d61d0552ec8, session_timestamp=2023-01-31T09:12:21.317Z, thread-id=854, tx_id=081BB74A4DDDAE56BB8D14CDFC494FF6B2027799D8446FAADFC8B872D9A86474}
[INFO ] 2023-01-31T09:12:21,369Z [Mock network] corda.flow. - Transaction dependencies resolution completed. {fiber-id=10000024, flow-id=5a374e04-02d9-41c4-a2b4-9577e57f8dc6, invocation_id=475063ca-1d89-41b9-a4de-5d61d0552ec8, invocation_timestamp=2023-01-31T09:12:21.317Z, origin=O=Mock Company 3, L=London, C=GB, session_id=475063ca-1d89-41b9-a4de-5d61d0552ec8, session_timestamp=2023-01-31T09:12:21.317Z, thread-id=854, tx_id=081BB74A4DDDAE56BB8D14CDFC494FF6B2027799D8446FAADFC8B872D9A86474}
[INFO ] 2023-01-31T09:12:21,375Z [Mock network] corda.flow. - Successfully received fully signed tx. Sending it to the vault for processing. {fiber-id=10000024, flow-id=5a374e04-02d9-41c4-a2b4-9577e57f8dc6, invocation_id=475063ca-1d89-41b9-a4de-5d61d0552ec8, invocation_timestamp=2023-01-31T09:12:21.317Z, origin=O=Mock Company 3, L=London, C=GB, session_id=475063ca-1d89-41b9-a4de-5d61d0552ec8, session_timestamp=2023-01-31T09:12:21.317Z, thread-id=854, tx_id=081BB74A4DDDAE56BB8D14CDFC494FF6B2027799D8446FAADFC8B872D9A86474}
[INFO ] 2023-01-31T09:12:21,380Z [Mock network] corda.flow. - Successfully recorded received transaction locally. {fiber-id=10000024, flow-id=5a374e04-02d9-41c4-a2b4-9577e57f8dc6, invocation_id=475063ca-1d89-41b9-a4de-5d61d0552ec8, invocation_timestamp=2023-01-31T09:12:21.317Z, origin=O=Mock Company 3, L=London, C=GB, session_id=475063ca-1d89-41b9-a4de-5d61d0552ec8, session_timestamp=2023-01-31T09:12:21.317Z, thread-id=854, tx_id=081BB74A4DDDAE56BB8D14CDFC494FF6B2027799D8446FAADFC8B872D9A86474}
[INFO ] 2023-01-31T09:12:21,394Z [Mock network] identity.PersistentIdentityService. - Linking: 150310FBD43E5E7CF54096B2D8C6B9B4B7A2E91305B1CCF6F8F7E221C9FBFA77 to O=Mock Company 1, L=London, C=GB {actor_id=Only For Testing, actor_owning_identity=O=Mock Company 1, L=London, C=GB, actor_store_id=TEST, fiber-id=10000025, flow-id=bb1b1943-6bed-4e22-81d3-81c8db2433c4, invocation_id=d3b78956-aa84-4994-b0ca-6585dd9554f9, invocation_timestamp=2023-01-31T09:12:21.389Z, origin=Only For Testing, session_id=d3b78956-aa84-4994-b0ca-6585dd9554f9, session_timestamp=2023-01-31T09:12:21.389Z, thread-id=854}
[INFO ] 2023-01-31T09:12:21,551Z [Mock network] corda.flow. - No need to notarise this transaction. {actor_id=Only For Testing, actor_owning_identity=O=Mock Company 1, L=London, C=GB, actor_store_id=TEST, fiber-id=10000025, flow-id=bb1b1943-6bed-4e22-81d3-81c8db2433c4, invocation_id=d3b78956-aa84-4994-b0ca-6585dd9554f9, invocation_timestamp=2023-01-31T09:12:21.389Z, origin=Only For Testing, session_id=d3b78956-aa84-4994-b0ca-6585dd9554f9, session_timestamp=2023-01-31T09:12:21.389Z, thread-id=854, tx_id=C16EF2A1D06E3A30871E9938A7AC81A4124BF9F06B87ADA3948B2BB5F98DD4F7}
[INFO ] 2023-01-31T09:12:21,551Z [Mock network] corda.flow. - Recording transaction locally. {actor_id=Only For Testing, actor_owning_identity=O=Mock Company 1, L=London, C=GB, actor_store_id=TEST, fiber-id=10000025, flow-id=bb1b1943-6bed-4e22-81d3-81c8db2433c4, invocation_id=d3b78956-aa84-4994-b0ca-6585dd9554f9, invocation_timestamp=2023-01-31T09:12:21.389Z, origin=Only For Testing, session_id=d3b78956-aa84-4994-b0ca-6585dd9554f9, session_timestamp=2023-01-31T09:12:21.389Z, thread-id=854, tx_id=C16EF2A1D06E3A30871E9938A7AC81A4124BF9F06B87ADA3948B2BB5F98DD4F7}
[INFO ] 2023-01-31T09:12:21,569Z [Mock network] corda.flow. - Recorded transaction locally successfully. {actor_id=Only For Testing, actor_owning_identity=O=Mock Company 1, L=London, C=GB, actor_store_id=TEST, fiber-id=10000025, flow-id=bb1b1943-6bed-4e22-81d3-81c8db2433c4, invocation_id=d3b78956-aa84-4994-b0ca-6585dd9554f9, invocation_timestamp=2023-01-31T09:12:21.389Z, origin=Only For Testing, session_id=d3b78956-aa84-4994-b0ca-6585dd9554f9, session_timestamp=2023-01-31T09:12:21.389Z, thread-id=854, tx_id=C16EF2A1D06E3A30871E9938A7AC81A4124BF9F06B87ADA3948B2BB5F98DD4F7}
[INFO ] 2023-01-31T09:12:21,569Z [Mock network] corda.flow. - All parties received the transaction successfully. {actor_id=Only For Testing, actor_owning_identity=O=Mock Company 1, L=London, C=GB, actor_store_id=TEST, fiber-id=10000025, flow-id=bb1b1943-6bed-4e22-81d3-81c8db2433c4, invocation_id=d3b78956-aa84-4994-b0ca-6585dd9554f9, invocation_timestamp=2023-01-31T09:12:21.389Z, origin=Only For Testing, session_id=d3b78956-aa84-4994-b0ca-6585dd9554f9, session_timestamp=2023-01-31T09:12:21.389Z, thread-id=854, tx_id=C16EF2A1D06E3A30871E9938A7AC81A4124BF9F06B87ADA3948B2BB5F98DD4F7}
[INFO ] 2023-01-31T09:12:21,589Z [Mock network] identity.PersistentIdentityService. - Linking: 8E67F4427FE35C270FB827533A54C43E10741AD8B2508525CD5A96BE0290188D to O=Mock Company 1, L=London, C=GB {actor_id=Only For Testing, actor_owning_identity=O=Mock Company 1, L=London, C=GB, actor_store_id=TEST, fiber-id=10000026, flow-id=d699f099-cd85-408a-9fcf-7f7242807cdb, invocation_id=c4064db8-7931-4dca-b0dd-30169130aae5, invocation_timestamp=2023-01-31T09:12:21.585Z, origin=Only For Testing, session_id=c4064db8-7931-4dca-b0dd-30169130aae5, session_timestamp=2023-01-31T09:12:21.585Z, thread-id=854}
[INFO ] 2023-01-31T09:12:21,600Z [Mock network] corda.flow. - No need to notarise this transaction. {actor_id=Only For Testing, actor_owning_identity=O=Mock Company 1, L=London, C=GB, actor_store_id=TEST, fiber-id=10000026, flow-id=d699f099-cd85-408a-9fcf-7f7242807cdb, invocation_id=c4064db8-7931-4dca-b0dd-30169130aae5, invocation_timestamp=2023-01-31T09:12:21.585Z, origin=Only For Testing, session_id=c4064db8-7931-4dca-b0dd-30169130aae5, session_timestamp=2023-01-31T09:12:21.585Z, thread-id=854, tx_id=9A6622415E5D78439AEBB8F35168AFDBC22CACD47E10C19AE6125305FAEFC1A9}
[INFO ] 2023-01-31T09:12:21,600Z [Mock network] corda.flow. - Recording transaction locally. {actor_id=Only For Testing, actor_owning_identity=O=Mock Company 1, L=London, C=GB, actor_store_id=TEST, fiber-id=10000026, flow-id=d699f099-cd85-408a-9fcf-7f7242807cdb, invocation_id=c4064db8-7931-4dca-b0dd-30169130aae5, invocation_timestamp=2023-01-31T09:12:21.585Z, origin=Only For Testing, session_id=c4064db8-7931-4dca-b0dd-30169130aae5, session_timestamp=2023-01-31T09:12:21.585Z, thread-id=854, tx_id=9A6622415E5D78439AEBB8F35168AFDBC22CACD47E10C19AE6125305FAEFC1A9}
[INFO ] 2023-01-31T09:12:21,603Z [Mock network] corda.flow. - Recorded transaction locally successfully. {actor_id=Only For Testing, actor_owning_identity=O=Mock Company 1, L=London, C=GB, actor_store_id=TEST, fiber-id=10000026, flow-id=d699f099-cd85-408a-9fcf-7f7242807cdb, invocation_id=c4064db8-7931-4dca-b0dd-30169130aae5, invocation_timestamp=2023-01-31T09:12:21.585Z, origin=Only For Testing, session_id=c4064db8-7931-4dca-b0dd-30169130aae5, session_timestamp=2023-01-31T09:12:21.585Z, thread-id=854, tx_id=9A6622415E5D78439AEBB8F35168AFDBC22CACD47E10C19AE6125305FAEFC1A9}
[INFO ] 2023-01-31T09:12:21,603Z [Mock network] corda.flow. - All parties received the transaction successfully. {actor_id=Only For Testing, actor_owning_identity=O=Mock Company 1, L=London, C=GB, actor_store_id=TEST, fiber-id=10000026, flow-id=d699f099-cd85-408a-9fcf-7f7242807cdb, invocation_id=c4064db8-7931-4dca-b0dd-30169130aae5, invocation_timestamp=2023-01-31T09:12:21.585Z, origin=Only For Testing, session_id=c4064db8-7931-4dca-b0dd-30169130aae5, session_timestamp=2023-01-31T09:12:21.585Z, thread-id=854, tx_id=9A6622415E5D78439AEBB8F35168AFDBC22CACD47E10C19AE6125305FAEFC1A9}
[INFO ] 2023-01-31T09:12:21,630Z [Mock network] identity.PersistentIdentityService. - Linking: 8713C97404A1625E5D65EB224AFB4E5C0908BBB71BD22EBD827EE0DC9CF3F35F to O=Mock Company 1, L=London, C=GB {actor_id=Only For Testing, actor_owning_identity=O=Mock Company 1, L=London, C=GB, actor_store_id=TEST, fiber-id=10000028, flow-id=f7879a06-10dc-4069-9d7d-19b4a4b1c7ab, invocation_id=6329264b-bc04-4b04-9056-88533a1d1a5a, invocation_timestamp=2023-01-31T09:12:21.624Z, origin=Only For Testing, session_id=6329264b-bc04-4b04-9056-88533a1d1a5a, session_timestamp=2023-01-31T09:12:21.624Z, thread-id=854}
[INFO ] 2023-01-31T09:12:21,674Z [Mock network] identity.PersistentIdentityService. - Linking: B82A0E4F3CEDBC9BE89E5567A13D783D1274107464DCCD868E9949AF4BDE5E6F to O=Mock Company 3, L=London, C=GB {fiber-id=10000029, flow-id=dbabb226-ff73-41c4-b803-f31bbaa36f09, invocation_id=aa535a12-d3ad-4faa-a671-7f25439abb52, invocation_timestamp=2023-01-31T09:12:21.646Z, origin=O=Mock Company 1, L=London, C=GB, session_id=aa535a12-d3ad-4faa-a671-7f25439abb52, session_timestamp=2023-01-31T09:12:21.646Z, thread-id=854}
[INFO ] 2023-01-31T09:12:21,683Z [Mock network] identity.PersistentIdentityService. - Linking: B82A0E4F3CEDBC9BE89E5567A13D783D1274107464DCCD868E9949AF4BDE5E6F to O=Mock Company 3, L=London, C=GB {actor_id=Only For Testing, actor_owning_identity=O=Mock Company 1, L=London, C=GB, actor_store_id=TEST, fiber-id=10000028, flow-id=f7879a06-10dc-4069-9d7d-19b4a4b1c7ab, invocation_id=6329264b-bc04-4b04-9056-88533a1d1a5a, invocation_timestamp=2023-01-31T09:12:21.624Z, origin=Only For Testing, session_id=6329264b-bc04-4b04-9056-88533a1d1a5a, session_timestamp=2023-01-31T09:12:21.624Z, thread-id=854}
[INFO ] 2023-01-31T09:12:21,898Z [Mock network] corda.flow. - Received transaction acknowledgement request from party O=Mock Company 1, L=London, C=GB. {fiber-id=10000030, flow-id=94db6b14-ef14-41af-898d-d9913c3826f2, invocation_id=59a03eda-e7b1-4e55-9e91-b3f5789a5e91, invocation_timestamp=2023-01-31T09:12:21.887Z, origin=O=Mock Company 1, L=London, C=GB, session_id=59a03eda-e7b1-4e55-9e91-b3f5789a5e91, session_timestamp=2023-01-31T09:12:21.887Z, thread-id=854, tx_id=C5D4A42A6222A07E1DB3D36A9007E66EBAACB5353F3C4BC3791AF56C87DD943F}
[INFO ] 2023-01-31T09:12:22,001Z [Mock network] corda.flow. - Transaction dependencies resolution completed. {fiber-id=10000030, flow-id=94db6b14-ef14-41af-898d-d9913c3826f2, invocation_id=59a03eda-e7b1-4e55-9e91-b3f5789a5e91, invocation_timestamp=2023-01-31T09:12:21.887Z, origin=O=Mock Company 1, L=London, C=GB, session_id=59a03eda-e7b1-4e55-9e91-b3f5789a5e91, session_timestamp=2023-01-31T09:12:21.887Z, thread-id=854, tx_id=C5D4A42A6222A07E1DB3D36A9007E66EBAACB5353F3C4BC3791AF56C87DD943F}
[INFO ] 2023-01-31T09:12:22,130Z [Mock network] corda.flow. - Sending transaction to notary: O=Notary, L=London, C=GB. {actor_id=Only For Testing, actor_owning_identity=O=Mock Company 1, L=London, C=GB, actor_store_id=TEST, fiber-id=10000028, flow-id=f7879a06-10dc-4069-9d7d-19b4a4b1c7ab, invocation_id=6329264b-bc04-4b04-9056-88533a1d1a5a, invocation_timestamp=2023-01-31T09:12:21.624Z, origin=Only For Testing, session_id=6329264b-bc04-4b04-9056-88533a1d1a5a, session_timestamp=2023-01-31T09:12:21.624Z, thread-id=854, tx_id=C5D4A42A6222A07E1DB3D36A9007E66EBAACB5353F3C4BC3791AF56C87DD943F}
[INFO ] 2023-01-31T09:12:22,148Z [Mock network] corda.flow. - Received a notarisation request for Tx [C5D4A42A6222A07E1DB3D36A9007E66EBAACB5353F3C4BC3791AF56C87DD943F] from [O=Mock Company 1, L=London, C=GB] {fiber-id=10000031, flow-id=2178d668-e590-405c-96d5-67a7a229965b, invocation_id=250bebd1-d358-4f07-b9d3-d0cacbbec9cf, invocation_timestamp=2023-01-31T09:12:22.138Z, origin=O=Mock Company 1, L=London, C=GB, session_id=250bebd1-d358-4f07-b9d3-d0cacbbec9cf, session_timestamp=2023-01-31T09:12:22.138Z, thread-id=854}
[INFO ] 2023-01-31T09:12:22,707Z [Notary request queue processor] jpa.JPAUniquenessProvider. - Processing notarization requests with 2 input states and 0 references {}
[INFO ] 2023-01-31T09:12:22,712Z [Mock network] corda.flow. - Transaction [C5D4A42A6222A07E1DB3D36A9007E66EBAACB5353F3C4BC3791AF56C87DD943F] successfully notarised, sending signature back to [O=Mock Company 1, L=London, C=GB] {fiber-id=10000031, flow-id=2178d668-e590-405c-96d5-67a7a229965b, invocation_id=250bebd1-d358-4f07-b9d3-d0cacbbec9cf, invocation_timestamp=2023-01-31T09:12:22.138Z, origin=O=Mock Company 1, L=London, C=GB, session_id=250bebd1-d358-4f07-b9d3-d0cacbbec9cf, session_timestamp=2023-01-31T09:12:22.138Z, thread-id=854}
[INFO ] 2023-01-31T09:12:22,726Z [Mock network] corda.flow. - Notary responded (O=Notary, L=London, C=GB). {actor_id=Only For Testing, actor_owning_identity=O=Mock Company 1, L=London, C=GB, actor_store_id=TEST, fiber-id=10000028, flow-id=f7879a06-10dc-4069-9d7d-19b4a4b1c7ab, invocation_id=6329264b-bc04-4b04-9056-88533a1d1a5a, invocation_timestamp=2023-01-31T09:12:21.624Z, origin=Only For Testing, session_id=6329264b-bc04-4b04-9056-88533a1d1a5a, session_timestamp=2023-01-31T09:12:21.624Z, thread-id=854, tx_id=C5D4A42A6222A07E1DB3D36A9007E66EBAACB5353F3C4BC3791AF56C87DD943F}
[INFO ] 2023-01-31T09:12:22,726Z [Mock network] corda.flow. - Recording transaction locally. {actor_id=Only For Testing, actor_owning_identity=O=Mock Company 1, L=London, C=GB, actor_store_id=TEST, fiber-id=10000028, flow-id=f7879a06-10dc-4069-9d7d-19b4a4b1c7ab, invocation_id=6329264b-bc04-4b04-9056-88533a1d1a5a, invocation_timestamp=2023-01-31T09:12:21.624Z, origin=Only For Testing, session_id=6329264b-bc04-4b04-9056-88533a1d1a5a, session_timestamp=2023-01-31T09:12:21.624Z, thread-id=854, tx_id=C5D4A42A6222A07E1DB3D36A9007E66EBAACB5353F3C4BC3791AF56C87DD943F}
[INFO ] 2023-01-31T09:12:22,735Z [Mock network] corda.flow. - Recorded transaction locally successfully. {actor_id=Only For Testing, actor_owning_identity=O=Mock Company 1, L=London, C=GB, actor_store_id=TEST, fiber-id=10000028, flow-id=f7879a06-10dc-4069-9d7d-19b4a4b1c7ab, invocation_id=6329264b-bc04-4b04-9056-88533a1d1a5a, invocation_timestamp=2023-01-31T09:12:21.624Z, origin=Only For Testing, session_id=6329264b-bc04-4b04-9056-88533a1d1a5a, session_timestamp=2023-01-31T09:12:21.624Z, thread-id=854, tx_id=C5D4A42A6222A07E1DB3D36A9007E66EBAACB5353F3C4BC3791AF56C87DD943F}
[INFO ] 2023-01-31T09:12:22,755Z [Mock network] corda.flow. - Received transaction acknowledgement request from party O=Mock Company 1, L=London, C=GB. {fiber-id=10000030, flow-id=94db6b14-ef14-41af-898d-d9913c3826f2, invocation_id=59a03eda-e7b1-4e55-9e91-b3f5789a5e91, invocation_timestamp=2023-01-31T09:12:21.887Z, origin=O=Mock Company 1, L=London, C=GB, session_id=59a03eda-e7b1-4e55-9e91-b3f5789a5e91, session_timestamp=2023-01-31T09:12:21.887Z, thread-id=854, tx_id=C5D4A42A6222A07E1DB3D36A9007E66EBAACB5353F3C4BC3791AF56C87DD943F}
[INFO ] 2023-01-31T09:12:22,762Z [Mock network] corda.flow. - Transaction dependencies resolution completed. {fiber-id=10000030, flow-id=94db6b14-ef14-41af-898d-d9913c3826f2, invocation_id=59a03eda-e7b1-4e55-9e91-b3f5789a5e91, invocation_timestamp=2023-01-31T09:12:21.887Z, origin=O=Mock Company 1, L=London, C=GB, session_id=59a03eda-e7b1-4e55-9e91-b3f5789a5e91, session_timestamp=2023-01-31T09:12:21.887Z, thread-id=854, tx_id=C5D4A42A6222A07E1DB3D36A9007E66EBAACB5353F3C4BC3791AF56C87DD943F}
[INFO ] 2023-01-31T09:12:22,768Z [Mock network] corda.flow. - Successfully received fully signed tx. Sending it to the vault for processing. {fiber-id=10000030, flow-id=94db6b14-ef14-41af-898d-d9913c3826f2, invocation_id=59a03eda-e7b1-4e55-9e91-b3f5789a5e91, invocation_timestamp=2023-01-31T09:12:21.887Z, origin=O=Mock Company 1, L=London, C=GB, session_id=59a03eda-e7b1-4e55-9e91-b3f5789a5e91, session_timestamp=2023-01-31T09:12:21.887Z, thread-id=854, tx_id=C5D4A42A6222A07E1DB3D36A9007E66EBAACB5353F3C4BC3791AF56C87DD943F}
[WARN ] 2023-01-31T09:12:22,786Z [Mock network] persistence.AbstractPartyToX500NameAsStringConverter. - Identity service unable to resolve AbstractParty: Anonymous(DLsTvw6uonHiHjdKLr53ZZvqkJAZNeY1qG1UiLuru9Ykk) {fiber-id=10000030, flow-id=94db6b14-ef14-41af-898d-d9913c3826f2, invocation_id=59a03eda-e7b1-4e55-9e91-b3f5789a5e91, invocation_timestamp=2023-01-31T09:12:21.887Z, origin=O=Mock Company 1, L=London, C=GB, session_id=59a03eda-e7b1-4e55-9e91-b3f5789a5e91, session_timestamp=2023-01-31T09:12:21.887Z, thread-id=854, tx_id=C5D4A42A6222A07E1DB3D36A9007E66EBAACB5353F3C4BC3791AF56C87DD943F}
[INFO ] 2023-01-31T09:12:22,788Z [Mock network] corda.flow. - Successfully recorded received transaction locally. {fiber-id=10000030, flow-id=94db6b14-ef14-41af-898d-d9913c3826f2, invocation_id=59a03eda-e7b1-4e55-9e91-b3f5789a5e91, invocation_timestamp=2023-01-31T09:12:21.887Z, origin=O=Mock Company 1, L=London, C=GB, session_id=59a03eda-e7b1-4e55-9e91-b3f5789a5e91, session_timestamp=2023-01-31T09:12:21.887Z, thread-id=854, tx_id=C5D4A42A6222A07E1DB3D36A9007E66EBAACB5353F3C4BC3791AF56C87DD943F}
[INFO ] 2023-01-31T09:12:22,797Z [Mock network] corda.flow. - Party O=Mock Company 3, L=London, C=GB received the transaction. {actor_id=Only For Testing, actor_owning_identity=O=Mock Company 1, L=London, C=GB, actor_store_id=TEST, fiber-id=10000028, flow-id=f7879a06-10dc-4069-9d7d-19b4a4b1c7ab, invocation_id=6329264b-bc04-4b04-9056-88533a1d1a5a, invocation_timestamp=2023-01-31T09:12:21.624Z, origin=Only For Testing, session_id=6329264b-bc04-4b04-9056-88533a1d1a5a, session_timestamp=2023-01-31T09:12:21.624Z, thread-id=854, tx_id=C5D4A42A6222A07E1DB3D36A9007E66EBAACB5353F3C4BC3791AF56C87DD943F}
[INFO ] 2023-01-31T09:12:22,797Z [Mock network] corda.flow. - All parties received the transaction successfully. {actor_id=Only For Testing, actor_owning_identity=O=Mock Company 1, L=London, C=GB, actor_store_id=TEST, fiber-id=10000028, flow-id=f7879a06-10dc-4069-9d7d-19b4a4b1c7ab, invocation_id=6329264b-bc04-4b04-9056-88533a1d1a5a, invocation_timestamp=2023-01-31T09:12:21.624Z, origin=Only For Testing, session_id=6329264b-bc04-4b04-9056-88533a1d1a5a, session_timestamp=2023-01-31T09:12:21.624Z, thread-id=854, tx_id=C5D4A42A6222A07E1DB3D36A9007E66EBAACB5353F3C4BC3791AF56C87DD943F}
[INFO ] 2023-01-31T09:12:22,835Z [Test worker] persistence.CordaPersistence. - Closing HikariDataSource (HikariPool-1) {}
[INFO ] 2023-01-31T09:12:22,855Z [Test worker] internal.MockNodeMessagingService. - Status change to false {}
[INFO ] 2023-01-31T09:12:22,855Z [Test worker] internal.InternalMockNetwork$MockNode. - MessagingService active change to: false {}
[INFO ] 2023-01-31T09:12:22,859Z [Test worker] persistence.CordaPersistence. - Closing HikariDataSource (HikariPool-2) {}
[INFO ] 2023-01-31T09:12:22,876Z [Test worker] internal.MockNodeMessagingService. - Status change to false {}
[INFO ] 2023-01-31T09:12:22,876Z [Test worker] internal.InternalMockNetwork$MockNode. - MessagingService active change to: false {}
[INFO ] 2023-01-31T09:12:22,878Z [Test worker] persistence.CordaPersistence. - Closing HikariDataSource (HikariPool-3) {}
[INFO ] 2023-01-31T09:12:22,888Z [Test worker] internal.MockNodeMessagingService. - Status change to false {}
[INFO ] 2023-01-31T09:12:22,888Z [Test worker] internal.InternalMockNetwork$MockNode. - MessagingService active change to: false {}
[INFO ] 2023-01-31T09:12:22,890Z [Test worker] persistence.CordaPersistence. - Closing HikariDataSource (HikariPool-4) {}
[INFO ] 2023-01-31T09:12:22,900Z [Test worker] internal.MockNodeMessagingService. - Status change to false {}
[INFO ] 2023-01-31T09:12:22,900Z [Test worker] internal.InternalMockNetwork$MockNode. - MessagingService active change to: false {}
[INFO ] 2023-01-31T09:12:22,997Z [Test worker] cordapp.JarScanningCordappLoader. - Looking for CorDapps in [build/mock-network/20230131-091222.904-4386D9818EBC177A/nodes/0/cordapps] {}
[INFO ] 2023-01-31T09:12:22,998Z [Test worker] cordapp.JarScanningCordappLoader. - Loading CorDapps from RestrictedURL(url=file:/Users/peter.li/Desktop/obligation-cordapp/workflows/build/mock-network/20230131-091222.904-4386D9818EBC177A/nodes/0/cordapps/accounts-contracts-1.0.jar, rootPackageName=null), RestrictedURL(url=file:/Users/peter.li/Desktop/obligation-cordapp/workflows/build/mock-network/20230131-091222.904-4386D9818EBC177A/nodes/0/cordapps/accounts-workflows-1.0.jar, rootPackageName=null), RestrictedURL(url=file:/Users/peter.li/Desktop/obligation-cordapp/workflows/build/mock-network/20230131-091222.904-4386D9818EBC177A/nodes/0/cordapps/corda-finance-contracts-4.9.jar, rootPackageName=null), RestrictedURL(url=file:/Users/peter.li/Desktop/obligation-cordapp/workflows/build/mock-network/20230131-091222.904-4386D9818EBC177A/nodes/0/cordapps/contracts-1.0.jar, rootPackageName=null), RestrictedURL(url=file:/Users/peter.li/Desktop/obligation-cordapp/workflows/build/mock-network/20230131-091222.904-4386D9818EBC177A/nodes/0/cordapps/workflows-1.0.jar, rootPackageName=null) {}
[INFO ] 2023-01-31T09:12:22,998Z [Test worker] cordapp.JarScanningCordappLoader. - Scanning CorDapp in file:/Users/peter.li/Desktop/obligation-cordapp/workflows/build/mock-network/20230131-091222.904-4386D9818EBC177A/nodes/0/cordapps/accounts-contracts-1.0.jar {}
[INFO ] 2023-01-31T09:12:23,027Z [Test worker] cordapp.JarScanningCordappLoader. - Scanning CorDapp in file:/Users/peter.li/Desktop/obligation-cordapp/workflows/build/mock-network/20230131-091222.904-4386D9818EBC177A/nodes/0/cordapps/accounts-workflows-1.0.jar {}
[INFO ] 2023-01-31T09:12:23,036Z [Test worker] cordapp.JarScanningCordappLoader. - Scanning CorDapp in file:/Users/peter.li/Desktop/obligation-cordapp/workflows/build/mock-network/20230131-091222.904-4386D9818EBC177A/nodes/0/cordapps/corda-finance-contracts-4.9.jar {}
[INFO ] 2023-01-31T09:12:23,047Z [Test worker] cordapp.JarScanningCordappLoader. - Scanning CorDapp in file:/Users/peter.li/Desktop/obligation-cordapp/workflows/build/mock-network/20230131-091222.904-4386D9818EBC177A/nodes/0/cordapps/contracts-1.0.jar {}
[INFO ] 2023-01-31T09:12:23,051Z [Test worker] cordapp.JarScanningCordappLoader. - Scanning CorDapp in file:/Users/peter.li/Desktop/obligation-cordapp/workflows/build/mock-network/20230131-091222.904-4386D9818EBC177A/nodes/0/cordapps/workflows-1.0.jar {}
[INFO ] 2023-01-31T09:12:23,076Z [Test worker] internal.InternalMockNetwork$MockNode. - MessagingService active change to: false {}
[INFO ] 2023-01-31T09:12:23,077Z [Test worker] internal.InternalMockNetwork$MockNode. - Flow external operation executor has a max of 2 threads {}
[INFO ] 2023-01-31T09:12:23,079Z [Test worker] internal.InternalMockNetwork$MockNode. - Node starting up ... {}
[INFO ] 2023-01-31T09:12:23,085Z [Test worker] internal.KeyStoreHandler. - Loaded trusted root certificate: DL7fwxLm5xbiMD8adUuYTsPZHAict46Ng4w6RNcySt5vAw, alias: cordarootca {}
[INFO ] 2023-01-31T09:12:23,086Z [Test worker] internal.KeyStoreHandler. - Loaded node identity key: DLC6huW4ebTTYY8F1udconygqBVSqVfSyuwuhd5dCK9twJ, alias: identity-private-key {}
[INFO ] 2023-01-31T09:12:23,092Z [Test worker] internal.NodeFlowManager. - Registered com.r3.corda.lib.accounts.workflows.flows.ShareStateAndSyncAccounts to initiate com.r3.corda.lib.accounts.workflows.flows.ReceiveStateAndSyncAccounts (version 1) {}
[INFO ] 2023-01-31T09:12:23,092Z [Test worker] internal.NodeFlowManager. - Registered com.r3.corda.lib.accounts.workflows.flows.ShareStateWithAccount to initiate com.r3.corda.lib.accounts.workflows.flows.ReceiveStateForAccount (version 1) {}
[INFO ] 2023-01-31T09:12:23,093Z [Test worker] internal.NodeFlowManager. - Registered com.r3.corda.lib.accounts.workflows.flows.RequestAccountInfo to initiate com.r3.corda.lib.accounts.workflows.flows.RequestAccountInfoHandler (version 1) {}
[INFO ] 2023-01-31T09:12:23,093Z [Test worker] internal.NodeFlowManager. - Registered com.r3.corda.lib.accounts.workflows.flows.RequestKeyForAccount to initiate com.r3.corda.lib.accounts.workflows.flows.SendKeyForAccount (version 1) {}
[INFO ] 2023-01-31T09:12:23,093Z [Test worker] internal.NodeFlowManager. - Registered com.r3.corda.lib.accounts.workflows.flows.ShareAccountInfo to initiate com.r3.corda.lib.accounts.workflows.flows.ShareAccountInfoHandler (version 1) {}
[INFO ] 2023-01-31T09:12:23,093Z [Test worker] internal.NodeFlowManager. - Registered net.corda.samples.obligation.flows.IOUIssueFlow to initiate net.corda.samples.obligation.flows.IOUIssueFlowResponder (version 1) {}
[INFO ] 2023-01-31T09:12:23,093Z [Test worker] internal.NodeFlowManager. - Registered net.corda.samples.obligation.flows.IOUSettleFlow to initiate net.corda.samples.obligation.flows.IOUSettleFlowResponder (version 1) {}
[INFO ] 2023-01-31T09:12:23,093Z [Test worker] internal.NodeFlowManager. - Registered net.corda.samples.obligation.flows.IOUTransferFlow to initiate net.corda.samples.obligation.flows.IOUTransferFlowResponder (version 1) {}
[INFO ] 2023-01-31T09:12:23,100Z [Test worker] internal.InternalMockNetwork$MockNode. - Loaded network parameters: NetworkParameters {
      minimumPlatformVersion=4
      notaries=[NotaryInfo(identity=O=Notary, L=London, C=GB, validating=true)]
      maxMessageSize=10485760
      maxTransactionSize=524288000
      whitelistedContractImplementations {
        
      }
      eventHorizon=PT720H
      packageOwnership {
        
      }
      modifiedTime=2023-01-31T09:12:22.904Z
      epoch=1
  } {}
[INFO ] 2023-01-31T09:12:23,783Z [Test worker] internal.InternalMockNetwork$MockNode. - Connected to H2 database. {}
[INFO ] 2023-01-31T09:12:23,784Z [Test worker] persistence.HibernateConfiguration. - Init HibernateConfiguration for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1), AccountsContractsSchemaV1(name=com.r3.corda.lib.accounts.contracts.internal.schemas.AccountsContractsSchema, version=1), AccountsWorkflowsSchemaV1(name=com.r3.corda.lib.accounts.workflows.internal.schemas.AccountsWorkflowsSchema, version=1), CashSchemaV1(name=net.corda.finance.schemas.CashSchema, version=1), CommercialPaperSchemaV1(name=net.corda.finance.schemas.CommercialPaperSchema, version=1), JPANotarySchemaV1(name=net.corda.notary.jpa.JPANotarySchema, version=1)] {}
[INFO ] 2023-01-31T09:12:23,784Z [Test worker] factory.BaseSessionFactoryFactory. - Creating session factory for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1), AccountsContractsSchemaV1(name=com.r3.corda.lib.accounts.contracts.internal.schemas.AccountsContractsSchema, version=1), AccountsWorkflowsSchemaV1(name=com.r3.corda.lib.accounts.workflows.internal.schemas.AccountsWorkflowsSchema, version=1), CashSchemaV1(name=net.corda.finance.schemas.CashSchema, version=1), CommercialPaperSchemaV1(name=net.corda.finance.schemas.CommercialPaperSchema, version=1), JPANotarySchemaV1(name=net.corda.notary.jpa.JPANotarySchema, version=1)] {}
[INFO ] 2023-01-31T09:12:23,946Z [Test worker] factory.BaseSessionFactoryFactory. - Created session factory for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1), AccountsContractsSchemaV1(name=com.r3.corda.lib.accounts.contracts.internal.schemas.AccountsContractsSchema, version=1), AccountsWorkflowsSchemaV1(name=com.r3.corda.lib.accounts.workflows.internal.schemas.AccountsWorkflowsSchema, version=1), CashSchemaV1(name=net.corda.finance.schemas.CashSchema, version=1), CommercialPaperSchemaV1(name=net.corda.finance.schemas.CommercialPaperSchema, version=1), JPANotarySchemaV1(name=net.corda.notary.jpa.JPANotarySchema, version=1)] {}
[INFO ] 2023-01-31T09:12:23,949Z [Test worker] internal.InternalMockNetwork$MockNode. - Node-info has changed so submitting update. Old node-info was null {}
[INFO ] 2023-01-31T09:12:23,952Z [Test worker] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Notary, L=London, C=GB], platformVersion=11, serial=1675156343949), owningKey=DLC6huW4ebTTYY8F1udconygqBVSqVfSyuwuhd5dCK9twJ {}
[INFO ] 2023-01-31T09:12:23,952Z [Test worker] network.PersistentNetworkMapCache. - No previous node found for O=Notary, L=London, C=GB {}
[INFO ] 2023-01-31T09:12:23,963Z [Test worker] internal.InternalMockNetwork$MockNode. - New node-info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Notary, L=London, C=GB], platformVersion=11, serial=1675156343949) {}
[INFO ] 2023-01-31T09:12:23,973Z [Test worker] network.NetworkMapUpdater. - Auto-accept enabled for network parameter changes which modify only: [epoch, modifiedTime, packageOwnership, whitelistedContractImplementations] {}
[INFO ] 2023-01-31T09:12:23,973Z [Test worker] internal.MockNodeMessagingService. - Status change to true {}
[INFO ] 2023-01-31T09:12:23,973Z [Test worker] internal.InternalMockNetwork$MockNode. - MessagingService active change to: true {}
[INFO ] 2023-01-31T09:12:23,989Z [MockNode-5-2] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Notary, L=London, C=GB], platformVersion=11, serial=1675156343949), owningKey=DLC6huW4ebTTYY8F1udconygqBVSqVfSyuwuhd5dCK9twJ {}
[INFO ] 2023-01-31T09:12:23,989Z [MockNode-5-2] network.PersistentNetworkMapCache. - Previous node was identical to incoming one - doing nothing {}
[INFO ] 2023-01-31T09:12:24,019Z [Test worker] persistence.NodeAttachmentService. - Stored new attachment: id=D370FD972C7E07CE73F4F9B7886D226807F6B16C4EE287398B9C69384109DC14 uploader=app filename=Accounts SDK - States and Contracts {}
[INFO ] 2023-01-31T09:12:24,064Z [Test worker] persistence.NodeAttachmentService. - Stored new attachment: id=BD0C932EAF8B1FE96DCBBF275B914BCD776D14EDC8F97DCEBF7E15DA09C606AE uploader=app filename=Corda Finance Demo {}
[INFO ] 2023-01-31T09:12:24,083Z [Test worker] persistence.NodeAttachmentService. - Stored new attachment: id=8D797B45F40704FA4FD70921F5BC6E2D7B34450D345CE6788D2A87859EF63BD8 uploader=app filename=Obligation Contracts {}
[INFO ] 2023-01-31T09:12:24,086Z [Test worker] internal.InternalMockNetwork$MockNode. - Installed com.r3.corda.lib.accounts.workflows.services.KeyManagementBackedAccountService Corda service {}
[INFO ] 2023-01-31T09:12:24,086Z [Test worker] utilities.NotaryLoader. - Starting notary service: class net.corda.notary.jpa.JPANotaryService {}
[INFO ] 2023-01-31T09:12:24,114Z [Test worker] statemachine.SingleThreadedStateMachineManager. - Node ready, info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Notary, L=London, C=GB], platformVersion=11, serial=1675156343949) {}
[INFO ] 2023-01-31T09:12:24,115Z [Test worker] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Notary, L=London, C=GB], platformVersion=11, serial=1675156343949), owningKey=DLC6huW4ebTTYY8F1udconygqBVSqVfSyuwuhd5dCK9twJ {}
[INFO ] 2023-01-31T09:12:24,115Z [Test worker] network.PersistentNetworkMapCache. - Previous node was identical to incoming one - doing nothing {}
[INFO ] 2023-01-31T09:12:24,115Z [Test worker] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Notary, L=London, C=GB], platformVersion=11, serial=1675156343949), owningKey=DLC6huW4ebTTYY8F1udconygqBVSqVfSyuwuhd5dCK9twJ {}
[INFO ] 2023-01-31T09:12:24,115Z [Test worker] network.PersistentNetworkMapCache. - Previous node was identical to incoming one - doing nothing {}
[INFO ] 2023-01-31T09:12:24,130Z [Test worker] cordapp.JarScanningCordappLoader. - Looking for CorDapps in [build/mock-network/20230131-091222.904-4386D9818EBC177A/nodes/1/cordapps] {}
[INFO ] 2023-01-31T09:12:24,130Z [Test worker] cordapp.JarScanningCordappLoader. - Loading CorDapps from RestrictedURL(url=file:/Users/peter.li/Desktop/obligation-cordapp/workflows/build/mock-network/20230131-091222.904-4386D9818EBC177A/nodes/1/cordapps/accounts-contracts-1.0.jar, rootPackageName=null), RestrictedURL(url=file:/Users/peter.li/Desktop/obligation-cordapp/workflows/build/mock-network/20230131-091222.904-4386D9818EBC177A/nodes/1/cordapps/accounts-workflows-1.0.jar, rootPackageName=null), RestrictedURL(url=file:/Users/peter.li/Desktop/obligation-cordapp/workflows/build/mock-network/20230131-091222.904-4386D9818EBC177A/nodes/1/cordapps/corda-finance-contracts-4.9.jar, rootPackageName=null), RestrictedURL(url=file:/Users/peter.li/Desktop/obligation-cordapp/workflows/build/mock-network/20230131-091222.904-4386D9818EBC177A/nodes/1/cordapps/contracts-1.0.jar, rootPackageName=null), RestrictedURL(url=file:/Users/peter.li/Desktop/obligation-cordapp/workflows/build/mock-network/20230131-091222.904-4386D9818EBC177A/nodes/1/cordapps/workflows-1.0.jar, rootPackageName=null) {}
[INFO ] 2023-01-31T09:12:24,131Z [Test worker] cordapp.JarScanningCordappLoader. - Scanning CorDapp in file:/Users/peter.li/Desktop/obligation-cordapp/workflows/build/mock-network/20230131-091222.904-4386D9818EBC177A/nodes/1/cordapps/accounts-contracts-1.0.jar {}
[INFO ] 2023-01-31T09:12:24,155Z [Test worker] cordapp.JarScanningCordappLoader. - Scanning CorDapp in file:/Users/peter.li/Desktop/obligation-cordapp/workflows/build/mock-network/20230131-091222.904-4386D9818EBC177A/nodes/1/cordapps/accounts-workflows-1.0.jar {}
[INFO ] 2023-01-31T09:12:24,163Z [Test worker] cordapp.JarScanningCordappLoader. - Scanning CorDapp in file:/Users/peter.li/Desktop/obligation-cordapp/workflows/build/mock-network/20230131-091222.904-4386D9818EBC177A/nodes/1/cordapps/corda-finance-contracts-4.9.jar {}
[INFO ] 2023-01-31T09:12:24,172Z [Test worker] cordapp.JarScanningCordappLoader. - Scanning CorDapp in file:/Users/peter.li/Desktop/obligation-cordapp/workflows/build/mock-network/20230131-091222.904-4386D9818EBC177A/nodes/1/cordapps/contracts-1.0.jar {}
[INFO ] 2023-01-31T09:12:24,177Z [Test worker] cordapp.JarScanningCordappLoader. - Scanning CorDapp in file:/Users/peter.li/Desktop/obligation-cordapp/workflows/build/mock-network/20230131-091222.904-4386D9818EBC177A/nodes/1/cordapps/workflows-1.0.jar {}
[INFO ] 2023-01-31T09:12:24,199Z [Test worker] internal.InternalMockNetwork$MockNode. - MessagingService active change to: false {}
[INFO ] 2023-01-31T09:12:24,200Z [Test worker] internal.InternalMockNetwork$MockNode. - Flow external operation executor has a max of 2 threads {}
[INFO ] 2023-01-31T09:12:24,202Z [Test worker] internal.InternalMockNetwork$MockNode. - Node starting up ... {}
[INFO ] 2023-01-31T09:12:24,237Z [Test worker] internal.KeyStoreHandler. - Loaded trusted root certificate: DL7fwxLm5xbiMD8adUuYTsPZHAict46Ng4w6RNcySt5vAw, alias: cordarootca {}
[INFO ] 2023-01-31T09:12:24,237Z [Test worker] internal.KeyStoreHandler. - Loaded node identity key: DLHjYKNZuCXVa1R995bmio4Qv4dmB47DFBr1pohk5yQqN, alias: identity-private-key {}
[INFO ] 2023-01-31T09:12:24,243Z [Test worker] internal.NodeFlowManager. - Registered com.r3.corda.lib.accounts.workflows.flows.ShareStateAndSyncAccounts to initiate com.r3.corda.lib.accounts.workflows.flows.ReceiveStateAndSyncAccounts (version 1) {}
[INFO ] 2023-01-31T09:12:24,243Z [Test worker] internal.NodeFlowManager. - Registered com.r3.corda.lib.accounts.workflows.flows.ShareStateWithAccount to initiate com.r3.corda.lib.accounts.workflows.flows.ReceiveStateForAccount (version 1) {}
[INFO ] 2023-01-31T09:12:24,243Z [Test worker] internal.NodeFlowManager. - Registered com.r3.corda.lib.accounts.workflows.flows.RequestAccountInfo to initiate com.r3.corda.lib.accounts.workflows.flows.RequestAccountInfoHandler (version 1) {}
[INFO ] 2023-01-31T09:12:24,243Z [Test worker] internal.NodeFlowManager. - Registered com.r3.corda.lib.accounts.workflows.flows.RequestKeyForAccount to initiate com.r3.corda.lib.accounts.workflows.flows.SendKeyForAccount (version 1) {}
[INFO ] 2023-01-31T09:12:24,243Z [Test worker] internal.NodeFlowManager. - Registered com.r3.corda.lib.accounts.workflows.flows.ShareAccountInfo to initiate com.r3.corda.lib.accounts.workflows.flows.ShareAccountInfoHandler (version 1) {}
[INFO ] 2023-01-31T09:12:24,243Z [Test worker] internal.NodeFlowManager. - Registered net.corda.samples.obligation.flows.IOUIssueFlow to initiate net.corda.samples.obligation.flows.IOUIssueFlowResponder (version 1) {}
[INFO ] 2023-01-31T09:12:24,243Z [Test worker] internal.NodeFlowManager. - Registered net.corda.samples.obligation.flows.IOUSettleFlow to initiate net.corda.samples.obligation.flows.IOUSettleFlowResponder (version 1) {}
[INFO ] 2023-01-31T09:12:24,243Z [Test worker] internal.NodeFlowManager. - Registered net.corda.samples.obligation.flows.IOUTransferFlow to initiate net.corda.samples.obligation.flows.IOUTransferFlowResponder (version 1) {}
[INFO ] 2023-01-31T09:12:24,247Z [Test worker] internal.InternalMockNetwork$MockNode. - Loaded network parameters: NetworkParameters {
      minimumPlatformVersion=4
      notaries=[NotaryInfo(identity=O=Notary, L=London, C=GB, validating=true)]
      maxMessageSize=10485760
      maxTransactionSize=524288000
      whitelistedContractImplementations {
        
      }
      eventHorizon=PT720H
      packageOwnership {
        
      }
      modifiedTime=2023-01-31T09:12:22.904Z
      epoch=1
  } {}
[INFO ] 2023-01-31T09:12:24,854Z [Test worker] internal.InternalMockNetwork$MockNode. - Connected to H2 database. {}
[INFO ] 2023-01-31T09:12:24,856Z [Test worker] persistence.HibernateConfiguration. - Init HibernateConfiguration for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1), AccountsContractsSchemaV1(name=com.r3.corda.lib.accounts.contracts.internal.schemas.AccountsContractsSchema, version=1), AccountsWorkflowsSchemaV1(name=com.r3.corda.lib.accounts.workflows.internal.schemas.AccountsWorkflowsSchema, version=1), CashSchemaV1(name=net.corda.finance.schemas.CashSchema, version=1), CommercialPaperSchemaV1(name=net.corda.finance.schemas.CommercialPaperSchema, version=1)] {}
[INFO ] 2023-01-31T09:12:24,856Z [Test worker] factory.BaseSessionFactoryFactory. - Creating session factory for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1), AccountsContractsSchemaV1(name=com.r3.corda.lib.accounts.contracts.internal.schemas.AccountsContractsSchema, version=1), AccountsWorkflowsSchemaV1(name=com.r3.corda.lib.accounts.workflows.internal.schemas.AccountsWorkflowsSchema, version=1), CashSchemaV1(name=net.corda.finance.schemas.CashSchema, version=1), CommercialPaperSchemaV1(name=net.corda.finance.schemas.CommercialPaperSchema, version=1)] {}
[INFO ] 2023-01-31T09:12:25,022Z [Test worker] factory.BaseSessionFactoryFactory. - Created session factory for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1), AccountsContractsSchemaV1(name=com.r3.corda.lib.accounts.contracts.internal.schemas.AccountsContractsSchema, version=1), AccountsWorkflowsSchemaV1(name=com.r3.corda.lib.accounts.workflows.internal.schemas.AccountsWorkflowsSchema, version=1), CashSchemaV1(name=net.corda.finance.schemas.CashSchema, version=1), CommercialPaperSchemaV1(name=net.corda.finance.schemas.CommercialPaperSchema, version=1)] {}
[INFO ] 2023-01-31T09:12:25,025Z [Test worker] internal.InternalMockNetwork$MockNode. - Node-info has changed so submitting update. Old node-info was null {}
[INFO ] 2023-01-31T09:12:25,036Z [Test worker] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 1, L=London, C=GB], platformVersion=11, serial=1675156345025), owningKey=DLHjYKNZuCXVa1R995bmio4Qv4dmB47DFBr1pohk5yQqN {}
[INFO ] 2023-01-31T09:12:25,036Z [Test worker] network.PersistentNetworkMapCache. - No previous node found for O=Mock Company 1, L=London, C=GB {}
[INFO ] 2023-01-31T09:12:25,041Z [Test worker] internal.InternalMockNetwork$MockNode. - New node-info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 1, L=London, C=GB], platformVersion=11, serial=1675156345025) {}
[INFO ] 2023-01-31T09:12:25,047Z [Test worker] network.NetworkMapUpdater. - Auto-accept enabled for network parameter changes which modify only: [epoch, modifiedTime, packageOwnership, whitelistedContractImplementations] {}
[INFO ] 2023-01-31T09:12:25,048Z [Test worker] internal.MockNodeMessagingService. - Status change to true {}
[INFO ] 2023-01-31T09:12:25,048Z [Test worker] internal.InternalMockNetwork$MockNode. - MessagingService active change to: true {}
[INFO ] 2023-01-31T09:12:25,056Z [MockNode-6-2] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 1, L=London, C=GB], platformVersion=11, serial=1675156345025), owningKey=DLHjYKNZuCXVa1R995bmio4Qv4dmB47DFBr1pohk5yQqN {}
[INFO ] 2023-01-31T09:12:25,056Z [MockNode-6-2] network.PersistentNetworkMapCache. - Previous node was identical to incoming one - doing nothing {}
[INFO ] 2023-01-31T09:12:25,079Z [Test worker] persistence.NodeAttachmentService. - Stored new attachment: id=D370FD972C7E07CE73F4F9B7886D226807F6B16C4EE287398B9C69384109DC14 uploader=app filename=Accounts SDK - States and Contracts {}
[INFO ] 2023-01-31T09:12:25,121Z [Test worker] persistence.NodeAttachmentService. - Stored new attachment: id=BD0C932EAF8B1FE96DCBBF275B914BCD776D14EDC8F97DCEBF7E15DA09C606AE uploader=app filename=Corda Finance Demo {}
[INFO ] 2023-01-31T09:12:25,140Z [Test worker] persistence.NodeAttachmentService. - Stored new attachment: id=8D797B45F40704FA4FD70921F5BC6E2D7B34450D345CE6788D2A87859EF63BD8 uploader=app filename=Obligation Contracts {}
[INFO ] 2023-01-31T09:12:25,143Z [Test worker] internal.InternalMockNetwork$MockNode. - Installed com.r3.corda.lib.accounts.workflows.services.KeyManagementBackedAccountService Corda service {}
[INFO ] 2023-01-31T09:12:25,160Z [Test worker] statemachine.SingleThreadedStateMachineManager. - Node ready, info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 1, L=London, C=GB], platformVersion=11, serial=1675156345025) {}
[INFO ] 2023-01-31T09:12:25,162Z [Test worker] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Notary, L=London, C=GB], platformVersion=11, serial=1675156343949), owningKey=DLC6huW4ebTTYY8F1udconygqBVSqVfSyuwuhd5dCK9twJ {}
[INFO ] 2023-01-31T09:12:25,162Z [Test worker] network.PersistentNetworkMapCache. - No previous node found for O=Notary, L=London, C=GB {}
[INFO ] 2023-01-31T09:12:25,170Z [Test worker] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 1, L=London, C=GB], platformVersion=11, serial=1675156345025), owningKey=DLHjYKNZuCXVa1R995bmio4Qv4dmB47DFBr1pohk5yQqN {}
[INFO ] 2023-01-31T09:12:25,170Z [Test worker] network.PersistentNetworkMapCache. - No previous node found for O=Mock Company 1, L=London, C=GB {}
[INFO ] 2023-01-31T09:12:25,178Z [Test worker] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 1, L=London, C=GB], platformVersion=11, serial=1675156345025), owningKey=DLHjYKNZuCXVa1R995bmio4Qv4dmB47DFBr1pohk5yQqN {}
[INFO ] 2023-01-31T09:12:25,178Z [Test worker] network.PersistentNetworkMapCache. - Previous node was identical to incoming one - doing nothing {}
[INFO ] 2023-01-31T09:12:25,178Z [Test worker] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 1, L=London, C=GB], platformVersion=11, serial=1675156345025), owningKey=DLHjYKNZuCXVa1R995bmio4Qv4dmB47DFBr1pohk5yQqN {}
[INFO ] 2023-01-31T09:12:25,178Z [Test worker] network.PersistentNetworkMapCache. - Previous node was identical to incoming one - doing nothing {}
[INFO ] 2023-01-31T09:12:25,194Z [Test worker] cordapp.JarScanningCordappLoader. - Looking for CorDapps in [build/mock-network/20230131-091222.904-4386D9818EBC177A/nodes/2/cordapps] {}
[INFO ] 2023-01-31T09:12:25,194Z [Test worker] cordapp.JarScanningCordappLoader. - Loading CorDapps from RestrictedURL(url=file:/Users/peter.li/Desktop/obligation-cordapp/workflows/build/mock-network/20230131-091222.904-4386D9818EBC177A/nodes/2/cordapps/accounts-contracts-1.0.jar, rootPackageName=null), RestrictedURL(url=file:/Users/peter.li/Desktop/obligation-cordapp/workflows/build/mock-network/20230131-091222.904-4386D9818EBC177A/nodes/2/cordapps/accounts-workflows-1.0.jar, rootPackageName=null), RestrictedURL(url=file:/Users/peter.li/Desktop/obligation-cordapp/workflows/build/mock-network/20230131-091222.904-4386D9818EBC177A/nodes/2/cordapps/corda-finance-contracts-4.9.jar, rootPackageName=null), RestrictedURL(url=file:/Users/peter.li/Desktop/obligation-cordapp/workflows/build/mock-network/20230131-091222.904-4386D9818EBC177A/nodes/2/cordapps/contracts-1.0.jar, rootPackageName=null), RestrictedURL(url=file:/Users/peter.li/Desktop/obligation-cordapp/workflows/build/mock-network/20230131-091222.904-4386D9818EBC177A/nodes/2/cordapps/workflows-1.0.jar, rootPackageName=null) {}
[INFO ] 2023-01-31T09:12:25,194Z [Test worker] cordapp.JarScanningCordappLoader. - Scanning CorDapp in file:/Users/peter.li/Desktop/obligation-cordapp/workflows/build/mock-network/20230131-091222.904-4386D9818EBC177A/nodes/2/cordapps/accounts-contracts-1.0.jar {}
[INFO ] 2023-01-31T09:12:25,218Z [Test worker] cordapp.JarScanningCordappLoader. - Scanning CorDapp in file:/Users/peter.li/Desktop/obligation-cordapp/workflows/build/mock-network/20230131-091222.904-4386D9818EBC177A/nodes/2/cordapps/accounts-workflows-1.0.jar {}
[INFO ] 2023-01-31T09:12:25,226Z [Test worker] cordapp.JarScanningCordappLoader. - Scanning CorDapp in file:/Users/peter.li/Desktop/obligation-cordapp/workflows/build/mock-network/20230131-091222.904-4386D9818EBC177A/nodes/2/cordapps/corda-finance-contracts-4.9.jar {}
[INFO ] 2023-01-31T09:12:25,236Z [Test worker] cordapp.JarScanningCordappLoader. - Scanning CorDapp in file:/Users/peter.li/Desktop/obligation-cordapp/workflows/build/mock-network/20230131-091222.904-4386D9818EBC177A/nodes/2/cordapps/contracts-1.0.jar {}
[INFO ] 2023-01-31T09:12:25,241Z [Test worker] cordapp.JarScanningCordappLoader. - Scanning CorDapp in file:/Users/peter.li/Desktop/obligation-cordapp/workflows/build/mock-network/20230131-091222.904-4386D9818EBC177A/nodes/2/cordapps/workflows-1.0.jar {}
[INFO ] 2023-01-31T09:12:25,261Z [Test worker] internal.InternalMockNetwork$MockNode. - MessagingService active change to: false {}
[INFO ] 2023-01-31T09:12:25,262Z [Test worker] internal.InternalMockNetwork$MockNode. - Flow external operation executor has a max of 2 threads {}
[INFO ] 2023-01-31T09:12:25,264Z [Test worker] internal.InternalMockNetwork$MockNode. - Node starting up ... {}
[INFO ] 2023-01-31T09:12:25,299Z [Test worker] internal.KeyStoreHandler. - Loaded trusted root certificate: DL7fwxLm5xbiMD8adUuYTsPZHAict46Ng4w6RNcySt5vAw, alias: cordarootca {}
[INFO ] 2023-01-31T09:12:25,299Z [Test worker] internal.KeyStoreHandler. - Loaded node identity key: DLHgP4FBJo7Gef4JGoqHqwP4WTM64dekJ3THcNE5cwfp3q, alias: identity-private-key {}
[INFO ] 2023-01-31T09:12:25,305Z [Test worker] internal.NodeFlowManager. - Registered com.r3.corda.lib.accounts.workflows.flows.ShareStateAndSyncAccounts to initiate com.r3.corda.lib.accounts.workflows.flows.ReceiveStateAndSyncAccounts (version 1) {}
[INFO ] 2023-01-31T09:12:25,305Z [Test worker] internal.NodeFlowManager. - Registered com.r3.corda.lib.accounts.workflows.flows.ShareStateWithAccount to initiate com.r3.corda.lib.accounts.workflows.flows.ReceiveStateForAccount (version 1) {}
[INFO ] 2023-01-31T09:12:25,305Z [Test worker] internal.NodeFlowManager. - Registered com.r3.corda.lib.accounts.workflows.flows.RequestAccountInfo to initiate com.r3.corda.lib.accounts.workflows.flows.RequestAccountInfoHandler (version 1) {}
[INFO ] 2023-01-31T09:12:25,305Z [Test worker] internal.NodeFlowManager. - Registered com.r3.corda.lib.accounts.workflows.flows.RequestKeyForAccount to initiate com.r3.corda.lib.accounts.workflows.flows.SendKeyForAccount (version 1) {}
[INFO ] 2023-01-31T09:12:25,305Z [Test worker] internal.NodeFlowManager. - Registered com.r3.corda.lib.accounts.workflows.flows.ShareAccountInfo to initiate com.r3.corda.lib.accounts.workflows.flows.ShareAccountInfoHandler (version 1) {}
[INFO ] 2023-01-31T09:12:25,305Z [Test worker] internal.NodeFlowManager. - Registered net.corda.samples.obligation.flows.IOUIssueFlow to initiate net.corda.samples.obligation.flows.IOUIssueFlowResponder (version 1) {}
[INFO ] 2023-01-31T09:12:25,305Z [Test worker] internal.NodeFlowManager. - Registered net.corda.samples.obligation.flows.IOUSettleFlow to initiate net.corda.samples.obligation.flows.IOUSettleFlowResponder (version 1) {}
[INFO ] 2023-01-31T09:12:25,305Z [Test worker] internal.NodeFlowManager. - Registered net.corda.samples.obligation.flows.IOUTransferFlow to initiate net.corda.samples.obligation.flows.IOUTransferFlowResponder (version 1) {}
[INFO ] 2023-01-31T09:12:25,308Z [Test worker] internal.InternalMockNetwork$MockNode. - Loaded network parameters: NetworkParameters {
      minimumPlatformVersion=4
      notaries=[NotaryInfo(identity=O=Notary, L=London, C=GB, validating=true)]
      maxMessageSize=10485760
      maxTransactionSize=524288000
      whitelistedContractImplementations {
        
      }
      eventHorizon=PT720H
      packageOwnership {
        
      }
      modifiedTime=2023-01-31T09:12:22.904Z
      epoch=1
  } {}
[INFO ] 2023-01-31T09:12:25,924Z [Test worker] internal.InternalMockNetwork$MockNode. - Connected to H2 database. {}
[INFO ] 2023-01-31T09:12:25,926Z [Test worker] persistence.HibernateConfiguration. - Init HibernateConfiguration for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1), AccountsContractsSchemaV1(name=com.r3.corda.lib.accounts.contracts.internal.schemas.AccountsContractsSchema, version=1), AccountsWorkflowsSchemaV1(name=com.r3.corda.lib.accounts.workflows.internal.schemas.AccountsWorkflowsSchema, version=1), CashSchemaV1(name=net.corda.finance.schemas.CashSchema, version=1), CommercialPaperSchemaV1(name=net.corda.finance.schemas.CommercialPaperSchema, version=1)] {}
[INFO ] 2023-01-31T09:12:25,926Z [Test worker] factory.BaseSessionFactoryFactory. - Creating session factory for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1), AccountsContractsSchemaV1(name=com.r3.corda.lib.accounts.contracts.internal.schemas.AccountsContractsSchema, version=1), AccountsWorkflowsSchemaV1(name=com.r3.corda.lib.accounts.workflows.internal.schemas.AccountsWorkflowsSchema, version=1), CashSchemaV1(name=net.corda.finance.schemas.CashSchema, version=1), CommercialPaperSchemaV1(name=net.corda.finance.schemas.CommercialPaperSchema, version=1)] {}
[INFO ] 2023-01-31T09:12:26,044Z [Test worker] factory.BaseSessionFactoryFactory. - Created session factory for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1), AccountsContractsSchemaV1(name=com.r3.corda.lib.accounts.contracts.internal.schemas.AccountsContractsSchema, version=1), AccountsWorkflowsSchemaV1(name=com.r3.corda.lib.accounts.workflows.internal.schemas.AccountsWorkflowsSchema, version=1), CashSchemaV1(name=net.corda.finance.schemas.CashSchema, version=1), CommercialPaperSchemaV1(name=net.corda.finance.schemas.CommercialPaperSchema, version=1)] {}
[INFO ] 2023-01-31T09:12:26,048Z [Test worker] internal.InternalMockNetwork$MockNode. - Node-info has changed so submitting update. Old node-info was null {}
[INFO ] 2023-01-31T09:12:26,050Z [Test worker] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 2, L=London, C=GB], platformVersion=11, serial=1675156346048), owningKey=DLHgP4FBJo7Gef4JGoqHqwP4WTM64dekJ3THcNE5cwfp3q {}
[INFO ] 2023-01-31T09:12:26,050Z [Test worker] network.PersistentNetworkMapCache. - No previous node found for O=Mock Company 2, L=London, C=GB {}
[INFO ] 2023-01-31T09:12:26,054Z [Test worker] internal.InternalMockNetwork$MockNode. - New node-info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 2, L=London, C=GB], platformVersion=11, serial=1675156346048) {}
[INFO ] 2023-01-31T09:12:26,059Z [Test worker] network.NetworkMapUpdater. - Auto-accept enabled for network parameter changes which modify only: [epoch, modifiedTime, packageOwnership, whitelistedContractImplementations] {}
[INFO ] 2023-01-31T09:12:26,059Z [Test worker] internal.MockNodeMessagingService. - Status change to true {}
[INFO ] 2023-01-31T09:12:26,059Z [Test worker] internal.InternalMockNetwork$MockNode. - MessagingService active change to: true {}
[INFO ] 2023-01-31T09:12:26,068Z [MockNode-7-2] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 2, L=London, C=GB], platformVersion=11, serial=1675156346048), owningKey=DLHgP4FBJo7Gef4JGoqHqwP4WTM64dekJ3THcNE5cwfp3q {}
[INFO ] 2023-01-31T09:12:26,069Z [MockNode-7-2] network.PersistentNetworkMapCache. - Previous node was identical to incoming one - doing nothing {}
[INFO ] 2023-01-31T09:12:26,090Z [Test worker] persistence.NodeAttachmentService. - Stored new attachment: id=D370FD972C7E07CE73F4F9B7886D226807F6B16C4EE287398B9C69384109DC14 uploader=app filename=Accounts SDK - States and Contracts {}
[INFO ] 2023-01-31T09:12:26,143Z [Test worker] persistence.NodeAttachmentService. - Stored new attachment: id=BD0C932EAF8B1FE96DCBBF275B914BCD776D14EDC8F97DCEBF7E15DA09C606AE uploader=app filename=Corda Finance Demo {}
[INFO ] 2023-01-31T09:12:26,164Z [Test worker] persistence.NodeAttachmentService. - Stored new attachment: id=8D797B45F40704FA4FD70921F5BC6E2D7B34450D345CE6788D2A87859EF63BD8 uploader=app filename=Obligation Contracts {}
[INFO ] 2023-01-31T09:12:26,166Z [Test worker] internal.InternalMockNetwork$MockNode. - Installed com.r3.corda.lib.accounts.workflows.services.KeyManagementBackedAccountService Corda service {}
[INFO ] 2023-01-31T09:12:26,185Z [Test worker] statemachine.SingleThreadedStateMachineManager. - Node ready, info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 2, L=London, C=GB], platformVersion=11, serial=1675156346048) {}
[INFO ] 2023-01-31T09:12:26,187Z [Test worker] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Notary, L=London, C=GB], platformVersion=11, serial=1675156343949), owningKey=DLC6huW4ebTTYY8F1udconygqBVSqVfSyuwuhd5dCK9twJ {}
[INFO ] 2023-01-31T09:12:26,187Z [Test worker] network.PersistentNetworkMapCache. - No previous node found for O=Notary, L=London, C=GB {}
[INFO ] 2023-01-31T09:12:26,197Z [Test worker] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 2, L=London, C=GB], platformVersion=11, serial=1675156346048), owningKey=DLHgP4FBJo7Gef4JGoqHqwP4WTM64dekJ3THcNE5cwfp3q {}
[INFO ] 2023-01-31T09:12:26,197Z [Test worker] network.PersistentNetworkMapCache. - No previous node found for O=Mock Company 2, L=London, C=GB {}
[INFO ] 2023-01-31T09:12:26,205Z [Test worker] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 1, L=London, C=GB], platformVersion=11, serial=1675156345025), owningKey=DLHjYKNZuCXVa1R995bmio4Qv4dmB47DFBr1pohk5yQqN {}
[INFO ] 2023-01-31T09:12:26,205Z [Test worker] network.PersistentNetworkMapCache. - No previous node found for O=Mock Company 1, L=London, C=GB {}
[INFO ] 2023-01-31T09:12:26,213Z [Test worker] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 2, L=London, C=GB], platformVersion=11, serial=1675156346048), owningKey=DLHgP4FBJo7Gef4JGoqHqwP4WTM64dekJ3THcNE5cwfp3q {}
[INFO ] 2023-01-31T09:12:26,213Z [Test worker] network.PersistentNetworkMapCache. - No previous node found for O=Mock Company 2, L=London, C=GB {}
[INFO ] 2023-01-31T09:12:26,219Z [Test worker] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 2, L=London, C=GB], platformVersion=11, serial=1675156346048), owningKey=DLHgP4FBJo7Gef4JGoqHqwP4WTM64dekJ3THcNE5cwfp3q {}
[INFO ] 2023-01-31T09:12:26,219Z [Test worker] network.PersistentNetworkMapCache. - Previous node was identical to incoming one - doing nothing {}
[INFO ] 2023-01-31T09:12:26,219Z [Test worker] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 2, L=London, C=GB], platformVersion=11, serial=1675156346048), owningKey=DLHgP4FBJo7Gef4JGoqHqwP4WTM64dekJ3THcNE5cwfp3q {}
[INFO ] 2023-01-31T09:12:26,219Z [Test worker] network.PersistentNetworkMapCache. - Previous node was identical to incoming one - doing nothing {}
[INFO ] 2023-01-31T09:12:26,235Z [Test worker] cordapp.JarScanningCordappLoader. - Looking for CorDapps in [build/mock-network/20230131-091222.904-4386D9818EBC177A/nodes/3/cordapps] {}
[INFO ] 2023-01-31T09:12:26,236Z [Test worker] cordapp.JarScanningCordappLoader. - Loading CorDapps from RestrictedURL(url=file:/Users/peter.li/Desktop/obligation-cordapp/workflows/build/mock-network/20230131-091222.904-4386D9818EBC177A/nodes/3/cordapps/accounts-contracts-1.0.jar, rootPackageName=null), RestrictedURL(url=file:/Users/peter.li/Desktop/obligation-cordapp/workflows/build/mock-network/20230131-091222.904-4386D9818EBC177A/nodes/3/cordapps/accounts-workflows-1.0.jar, rootPackageName=null), RestrictedURL(url=file:/Users/peter.li/Desktop/obligation-cordapp/workflows/build/mock-network/20230131-091222.904-4386D9818EBC177A/nodes/3/cordapps/corda-finance-contracts-4.9.jar, rootPackageName=null), RestrictedURL(url=file:/Users/peter.li/Desktop/obligation-cordapp/workflows/build/mock-network/20230131-091222.904-4386D9818EBC177A/nodes/3/cordapps/contracts-1.0.jar, rootPackageName=null), RestrictedURL(url=file:/Users/peter.li/Desktop/obligation-cordapp/workflows/build/mock-network/20230131-091222.904-4386D9818EBC177A/nodes/3/cordapps/workflows-1.0.jar, rootPackageName=null) {}
[INFO ] 2023-01-31T09:12:26,236Z [Test worker] cordapp.JarScanningCordappLoader. - Scanning CorDapp in file:/Users/peter.li/Desktop/obligation-cordapp/workflows/build/mock-network/20230131-091222.904-4386D9818EBC177A/nodes/3/cordapps/accounts-contracts-1.0.jar {}
[INFO ] 2023-01-31T09:12:26,260Z [Test worker] cordapp.JarScanningCordappLoader. - Scanning CorDapp in file:/Users/peter.li/Desktop/obligation-cordapp/workflows/build/mock-network/20230131-091222.904-4386D9818EBC177A/nodes/3/cordapps/accounts-workflows-1.0.jar {}
[INFO ] 2023-01-31T09:12:26,267Z [Test worker] cordapp.JarScanningCordappLoader. - Scanning CorDapp in file:/Users/peter.li/Desktop/obligation-cordapp/workflows/build/mock-network/20230131-091222.904-4386D9818EBC177A/nodes/3/cordapps/corda-finance-contracts-4.9.jar {}
[INFO ] 2023-01-31T09:12:26,276Z [Test worker] cordapp.JarScanningCordappLoader. - Scanning CorDapp in file:/Users/peter.li/Desktop/obligation-cordapp/workflows/build/mock-network/20230131-091222.904-4386D9818EBC177A/nodes/3/cordapps/contracts-1.0.jar {}
[INFO ] 2023-01-31T09:12:26,282Z [Test worker] cordapp.JarScanningCordappLoader. - Scanning CorDapp in file:/Users/peter.li/Desktop/obligation-cordapp/workflows/build/mock-network/20230131-091222.904-4386D9818EBC177A/nodes/3/cordapps/workflows-1.0.jar {}
[INFO ] 2023-01-31T09:12:26,305Z [Test worker] internal.InternalMockNetwork$MockNode. - MessagingService active change to: false {}
[INFO ] 2023-01-31T09:12:26,306Z [Test worker] internal.InternalMockNetwork$MockNode. - Flow external operation executor has a max of 2 threads {}
[INFO ] 2023-01-31T09:12:26,308Z [Test worker] internal.InternalMockNetwork$MockNode. - Node starting up ... {}
[INFO ] 2023-01-31T09:12:26,350Z [Test worker] internal.KeyStoreHandler. - Loaded trusted root certificate: DL7fwxLm5xbiMD8adUuYTsPZHAict46Ng4w6RNcySt5vAw, alias: cordarootca {}
[INFO ] 2023-01-31T09:12:26,350Z [Test worker] internal.KeyStoreHandler. - Loaded node identity key: DL7w6xEvwXQp3Zqtd6PGxL1qSCtppJYsmJMJD9KtEk9Tvx, alias: identity-private-key {}
[INFO ] 2023-01-31T09:12:26,357Z [Test worker] internal.NodeFlowManager. - Registered com.r3.corda.lib.accounts.workflows.flows.ShareStateAndSyncAccounts to initiate com.r3.corda.lib.accounts.workflows.flows.ReceiveStateAndSyncAccounts (version 1) {}
[INFO ] 2023-01-31T09:12:26,357Z [Test worker] internal.NodeFlowManager. - Registered com.r3.corda.lib.accounts.workflows.flows.ShareStateWithAccount to initiate com.r3.corda.lib.accounts.workflows.flows.ReceiveStateForAccount (version 1) {}
[INFO ] 2023-01-31T09:12:26,357Z [Test worker] internal.NodeFlowManager. - Registered com.r3.corda.lib.accounts.workflows.flows.RequestAccountInfo to initiate com.r3.corda.lib.accounts.workflows.flows.RequestAccountInfoHandler (version 1) {}
[INFO ] 2023-01-31T09:12:26,357Z [Test worker] internal.NodeFlowManager. - Registered com.r3.corda.lib.accounts.workflows.flows.RequestKeyForAccount to initiate com.r3.corda.lib.accounts.workflows.flows.SendKeyForAccount (version 1) {}
[INFO ] 2023-01-31T09:12:26,357Z [Test worker] internal.NodeFlowManager. - Registered com.r3.corda.lib.accounts.workflows.flows.ShareAccountInfo to initiate com.r3.corda.lib.accounts.workflows.flows.ShareAccountInfoHandler (version 1) {}
[INFO ] 2023-01-31T09:12:26,357Z [Test worker] internal.NodeFlowManager. - Registered net.corda.samples.obligation.flows.IOUIssueFlow to initiate net.corda.samples.obligation.flows.IOUIssueFlowResponder (version 1) {}
[INFO ] 2023-01-31T09:12:26,357Z [Test worker] internal.NodeFlowManager. - Registered net.corda.samples.obligation.flows.IOUSettleFlow to initiate net.corda.samples.obligation.flows.IOUSettleFlowResponder (version 1) {}
[INFO ] 2023-01-31T09:12:26,357Z [Test worker] internal.NodeFlowManager. - Registered net.corda.samples.obligation.flows.IOUTransferFlow to initiate net.corda.samples.obligation.flows.IOUTransferFlowResponder (version 1) {}
[INFO ] 2023-01-31T09:12:26,361Z [Test worker] internal.InternalMockNetwork$MockNode. - Loaded network parameters: NetworkParameters {
      minimumPlatformVersion=4
      notaries=[NotaryInfo(identity=O=Notary, L=London, C=GB, validating=true)]
      maxMessageSize=10485760
      maxTransactionSize=524288000
      whitelistedContractImplementations {
        
      }
      eventHorizon=PT720H
      packageOwnership {
        
      }
      modifiedTime=2023-01-31T09:12:22.904Z
      epoch=1
  } {}
[INFO ] 2023-01-31T09:12:26,959Z [Test worker] internal.InternalMockNetwork$MockNode. - Connected to H2 database. {}
[INFO ] 2023-01-31T09:12:26,962Z [Test worker] persistence.HibernateConfiguration. - Init HibernateConfiguration for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1), AccountsContractsSchemaV1(name=com.r3.corda.lib.accounts.contracts.internal.schemas.AccountsContractsSchema, version=1), AccountsWorkflowsSchemaV1(name=com.r3.corda.lib.accounts.workflows.internal.schemas.AccountsWorkflowsSchema, version=1), CashSchemaV1(name=net.corda.finance.schemas.CashSchema, version=1), CommercialPaperSchemaV1(name=net.corda.finance.schemas.CommercialPaperSchema, version=1)] {}
[INFO ] 2023-01-31T09:12:26,962Z [Test worker] factory.BaseSessionFactoryFactory. - Creating session factory for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1), AccountsContractsSchemaV1(name=com.r3.corda.lib.accounts.contracts.internal.schemas.AccountsContractsSchema, version=1), AccountsWorkflowsSchemaV1(name=com.r3.corda.lib.accounts.workflows.internal.schemas.AccountsWorkflowsSchema, version=1), CashSchemaV1(name=net.corda.finance.schemas.CashSchema, version=1), CommercialPaperSchemaV1(name=net.corda.finance.schemas.CommercialPaperSchema, version=1)] {}
[INFO ] 2023-01-31T09:12:27,095Z [Test worker] factory.BaseSessionFactoryFactory. - Created session factory for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1), AccountsContractsSchemaV1(name=com.r3.corda.lib.accounts.contracts.internal.schemas.AccountsContractsSchema, version=1), AccountsWorkflowsSchemaV1(name=com.r3.corda.lib.accounts.workflows.internal.schemas.AccountsWorkflowsSchema, version=1), CashSchemaV1(name=net.corda.finance.schemas.CashSchema, version=1), CommercialPaperSchemaV1(name=net.corda.finance.schemas.CommercialPaperSchema, version=1)] {}
[INFO ] 2023-01-31T09:12:27,099Z [Test worker] internal.InternalMockNetwork$MockNode. - Node-info has changed so submitting update. Old node-info was null {}
[INFO ] 2023-01-31T09:12:27,102Z [Test worker] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 3, L=London, C=GB], platformVersion=11, serial=1675156347099), owningKey=DL7w6xEvwXQp3Zqtd6PGxL1qSCtppJYsmJMJD9KtEk9Tvx {}
[INFO ] 2023-01-31T09:12:27,102Z [Test worker] network.PersistentNetworkMapCache. - No previous node found for O=Mock Company 3, L=London, C=GB {}
[INFO ] 2023-01-31T09:12:27,107Z [Test worker] internal.InternalMockNetwork$MockNode. - New node-info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 3, L=London, C=GB], platformVersion=11, serial=1675156347099) {}
[INFO ] 2023-01-31T09:12:27,113Z [Test worker] network.NetworkMapUpdater. - Auto-accept enabled for network parameter changes which modify only: [epoch, modifiedTime, packageOwnership, whitelistedContractImplementations] {}
[INFO ] 2023-01-31T09:12:27,113Z [Test worker] internal.MockNodeMessagingService. - Status change to true {}
[INFO ] 2023-01-31T09:12:27,113Z [Test worker] internal.InternalMockNetwork$MockNode. - MessagingService active change to: true {}
[INFO ] 2023-01-31T09:12:27,122Z [MockNode-8-2] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 3, L=London, C=GB], platformVersion=11, serial=1675156347099), owningKey=DL7w6xEvwXQp3Zqtd6PGxL1qSCtppJYsmJMJD9KtEk9Tvx {}
[INFO ] 2023-01-31T09:12:27,122Z [MockNode-8-2] network.PersistentNetworkMapCache. - Previous node was identical to incoming one - doing nothing {}
[INFO ] 2023-01-31T09:12:27,142Z [Test worker] persistence.NodeAttachmentService. - Stored new attachment: id=D370FD972C7E07CE73F4F9B7886D226807F6B16C4EE287398B9C69384109DC14 uploader=app filename=Accounts SDK - States and Contracts {}
[INFO ] 2023-01-31T09:12:27,185Z [Test worker] persistence.NodeAttachmentService. - Stored new attachment: id=BD0C932EAF8B1FE96DCBBF275B914BCD776D14EDC8F97DCEBF7E15DA09C606AE uploader=app filename=Corda Finance Demo {}
[INFO ] 2023-01-31T09:12:27,202Z [Test worker] persistence.NodeAttachmentService. - Stored new attachment: id=8D797B45F40704FA4FD70921F5BC6E2D7B34450D345CE6788D2A87859EF63BD8 uploader=app filename=Obligation Contracts {}
[INFO ] 2023-01-31T09:12:27,204Z [Test worker] internal.InternalMockNetwork$MockNode. - Installed com.r3.corda.lib.accounts.workflows.services.KeyManagementBackedAccountService Corda service {}
[INFO ] 2023-01-31T09:12:27,221Z [Test worker] statemachine.SingleThreadedStateMachineManager. - Node ready, info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 3, L=London, C=GB], platformVersion=11, serial=1675156347099) {}
[INFO ] 2023-01-31T09:12:27,223Z [Test worker] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Notary, L=London, C=GB], platformVersion=11, serial=1675156343949), owningKey=DLC6huW4ebTTYY8F1udconygqBVSqVfSyuwuhd5dCK9twJ {}
[INFO ] 2023-01-31T09:12:27,223Z [Test worker] network.PersistentNetworkMapCache. - No previous node found for O=Notary, L=London, C=GB {}
[INFO ] 2023-01-31T09:12:27,233Z [Test worker] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 3, L=London, C=GB], platformVersion=11, serial=1675156347099), owningKey=DL7w6xEvwXQp3Zqtd6PGxL1qSCtppJYsmJMJD9KtEk9Tvx {}
[INFO ] 2023-01-31T09:12:27,233Z [Test worker] network.PersistentNetworkMapCache. - No previous node found for O=Mock Company 3, L=London, C=GB {}
[INFO ] 2023-01-31T09:12:27,241Z [Test worker] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 1, L=London, C=GB], platformVersion=11, serial=1675156345025), owningKey=DLHjYKNZuCXVa1R995bmio4Qv4dmB47DFBr1pohk5yQqN {}
[INFO ] 2023-01-31T09:12:27,241Z [Test worker] network.PersistentNetworkMapCache. - No previous node found for O=Mock Company 1, L=London, C=GB {}
[INFO ] 2023-01-31T09:12:27,250Z [Test worker] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 3, L=London, C=GB], platformVersion=11, serial=1675156347099), owningKey=DL7w6xEvwXQp3Zqtd6PGxL1qSCtppJYsmJMJD9KtEk9Tvx {}
[INFO ] 2023-01-31T09:12:27,250Z [Test worker] network.PersistentNetworkMapCache. - No previous node found for O=Mock Company 3, L=London, C=GB {}
[INFO ] 2023-01-31T09:12:27,258Z [Test worker] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 2, L=London, C=GB], platformVersion=11, serial=1675156346048), owningKey=DLHgP4FBJo7Gef4JGoqHqwP4WTM64dekJ3THcNE5cwfp3q {}
[INFO ] 2023-01-31T09:12:27,258Z [Test worker] network.PersistentNetworkMapCache. - No previous node found for O=Mock Company 2, L=London, C=GB {}
[INFO ] 2023-01-31T09:12:27,267Z [Test worker] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 3, L=London, C=GB], platformVersion=11, serial=1675156347099), owningKey=DL7w6xEvwXQp3Zqtd6PGxL1qSCtppJYsmJMJD9KtEk9Tvx {}
[INFO ] 2023-01-31T09:12:27,267Z [Test worker] network.PersistentNetworkMapCache. - No previous node found for O=Mock Company 3, L=London, C=GB {}
[INFO ] 2023-01-31T09:12:27,274Z [Test worker] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 3, L=London, C=GB], platformVersion=11, serial=1675156347099), owningKey=DL7w6xEvwXQp3Zqtd6PGxL1qSCtppJYsmJMJD9KtEk9Tvx {}
[INFO ] 2023-01-31T09:12:27,274Z [Test worker] network.PersistentNetworkMapCache. - Previous node was identical to incoming one - doing nothing {}
[INFO ] 2023-01-31T09:12:27,274Z [Test worker] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 3, L=London, C=GB], platformVersion=11, serial=1675156347099), owningKey=DL7w6xEvwXQp3Zqtd6PGxL1qSCtppJYsmJMJD9KtEk9Tvx {}
[INFO ] 2023-01-31T09:12:27,274Z [Test worker] network.PersistentNetworkMapCache. - Previous node was identical to incoming one - doing nothing {}
[WARN ] 2023-01-31T09:12:27,275Z [Test worker] internal.NodeFlowManager. - Multiple flows are registered for InitiatingFlow: class net.corda.samples.obligation.flows.IOUIssueFlow, currently using: class net.corda.samples.obligation.flows.IOUIssueFlowResponder {}
[INFO ] 2023-01-31T09:12:27,275Z [Test worker] internal.NodeFlowManager. - Registered net.corda.samples.obligation.flows.IOUIssueFlow to initiate net.corda.samples.obligation.flows.IOUIssueFlowResponder (version 1) {}
[WARN ] 2023-01-31T09:12:27,275Z [Test worker] internal.NodeFlowManager. - Multiple flows are registered for InitiatingFlow: class net.corda.samples.obligation.flows.IOUIssueFlow, currently using: class net.corda.samples.obligation.flows.IOUIssueFlowResponder {}
[INFO ] 2023-01-31T09:12:27,275Z [Test worker] internal.NodeFlowManager. - Registered net.corda.samples.obligation.flows.IOUIssueFlow to initiate net.corda.samples.obligation.flows.IOUIssueFlowResponder (version 1) {}
[WARN ] 2023-01-31T09:12:27,275Z [Test worker] internal.NodeFlowManager. - Multiple flows are registered for InitiatingFlow: class net.corda.samples.obligation.flows.IOUIssueFlow, currently using: class net.corda.samples.obligation.flows.IOUIssueFlowResponder {}
[INFO ] 2023-01-31T09:12:27,275Z [Test worker] internal.NodeFlowManager. - Registered net.corda.samples.obligation.flows.IOUIssueFlow to initiate net.corda.samples.obligation.flows.IOUIssueFlowResponder (version 1) {}
[WARN ] 2023-01-31T09:12:27,275Z [Test worker] internal.NodeFlowManager. - Multiple flows are registered for InitiatingFlow: class net.corda.samples.obligation.flows.IOUSettleFlow, currently using: class net.corda.samples.obligation.flows.IOUSettleFlowResponder {}
[INFO ] 2023-01-31T09:12:27,275Z [Test worker] internal.NodeFlowManager. - Registered net.corda.samples.obligation.flows.IOUSettleFlow to initiate net.corda.samples.obligation.flows.IOUSettleFlowResponder (version 1) {}
[WARN ] 2023-01-31T09:12:27,275Z [Test worker] internal.NodeFlowManager. - Multiple flows are registered for InitiatingFlow: class net.corda.samples.obligation.flows.IOUSettleFlow, currently using: class net.corda.samples.obligation.flows.IOUSettleFlowResponder {}
[INFO ] 2023-01-31T09:12:27,275Z [Test worker] internal.NodeFlowManager. - Registered net.corda.samples.obligation.flows.IOUSettleFlow to initiate net.corda.samples.obligation.flows.IOUSettleFlowResponder (version 1) {}
[WARN ] 2023-01-31T09:12:27,275Z [Test worker] internal.NodeFlowManager. - Multiple flows are registered for InitiatingFlow: class net.corda.samples.obligation.flows.IOUSettleFlow, currently using: class net.corda.samples.obligation.flows.IOUSettleFlowResponder {}
[INFO ] 2023-01-31T09:12:27,275Z [Test worker] internal.NodeFlowManager. - Registered net.corda.samples.obligation.flows.IOUSettleFlow to initiate net.corda.samples.obligation.flows.IOUSettleFlowResponder (version 1) {}
[INFO ] 2023-01-31T09:12:27,359Z [Mock network] corda.flow. - No need to notarise this transaction. {actor_id=Only For Testing, actor_owning_identity=O=Mock Company 1, L=London, C=GB, actor_store_id=TEST, fiber-id=10000033, flow-id=1eb97c64-4cf9-4c05-80ac-71215feba2de, invocation_id=06e73622-bab4-4800-af95-918520984651, invocation_timestamp=2023-01-31T09:12:27.284Z, origin=Only For Testing, session_id=06e73622-bab4-4800-af95-918520984651, session_timestamp=2023-01-31T09:12:27.284Z, thread-id=1826, tx_id=C9C54CF5427BF03BD82C2327CB6A747F5581B420540A5FF314B425F21906A3E4}
[INFO ] 2023-01-31T09:12:27,359Z [Mock network] corda.flow. - Recording transaction locally. {actor_id=Only For Testing, actor_owning_identity=O=Mock Company 1, L=London, C=GB, actor_store_id=TEST, fiber-id=10000033, flow-id=1eb97c64-4cf9-4c05-80ac-71215feba2de, invocation_id=06e73622-bab4-4800-af95-918520984651, invocation_timestamp=2023-01-31T09:12:27.284Z, origin=Only For Testing, session_id=06e73622-bab4-4800-af95-918520984651, session_timestamp=2023-01-31T09:12:27.284Z, thread-id=1826, tx_id=C9C54CF5427BF03BD82C2327CB6A747F5581B420540A5FF314B425F21906A3E4}
[INFO ] 2023-01-31T09:12:27,375Z [Mock network] corda.flow. - Recorded transaction locally successfully. {actor_id=Only For Testing, actor_owning_identity=O=Mock Company 1, L=London, C=GB, actor_store_id=TEST, fiber-id=10000033, flow-id=1eb97c64-4cf9-4c05-80ac-71215feba2de, invocation_id=06e73622-bab4-4800-af95-918520984651, invocation_timestamp=2023-01-31T09:12:27.284Z, origin=Only For Testing, session_id=06e73622-bab4-4800-af95-918520984651, session_timestamp=2023-01-31T09:12:27.284Z, thread-id=1826, tx_id=C9C54CF5427BF03BD82C2327CB6A747F5581B420540A5FF314B425F21906A3E4}
[INFO ] 2023-01-31T09:12:27,375Z [Mock network] corda.flow. - All parties received the transaction successfully. {actor_id=Only For Testing, actor_owning_identity=O=Mock Company 1, L=London, C=GB, actor_store_id=TEST, fiber-id=10000033, flow-id=1eb97c64-4cf9-4c05-80ac-71215feba2de, invocation_id=06e73622-bab4-4800-af95-918520984651, invocation_timestamp=2023-01-31T09:12:27.284Z, origin=Only For Testing, session_id=06e73622-bab4-4800-af95-918520984651, session_timestamp=2023-01-31T09:12:27.284Z, thread-id=1826, tx_id=C9C54CF5427BF03BD82C2327CB6A747F5581B420540A5FF314B425F21906A3E4}
[INFO ] 2023-01-31T09:12:27,453Z [Mock network] corda.flow. - Received transaction acknowledgement request from party O=Mock Company 1, L=London, C=GB. {fiber-id=10000034, flow-id=9964b8a4-9563-48bb-a6fd-fb138f553a55, invocation_id=241010a7-f656-40ed-8285-ce2eb0466b3c, invocation_timestamp=2023-01-31T09:12:27.423Z, origin=O=Mock Company 1, L=London, C=GB, session_id=241010a7-f656-40ed-8285-ce2eb0466b3c, session_timestamp=2023-01-31T09:12:27.423Z, thread-id=1826, tx_id=C9C54CF5427BF03BD82C2327CB6A747F5581B420540A5FF314B425F21906A3E4}
[INFO ] 2023-01-31T09:12:27,464Z [Mock network] corda.flow. - Transaction dependencies resolution completed. {fiber-id=10000034, flow-id=9964b8a4-9563-48bb-a6fd-fb138f553a55, invocation_id=241010a7-f656-40ed-8285-ce2eb0466b3c, invocation_timestamp=2023-01-31T09:12:27.423Z, origin=O=Mock Company 1, L=London, C=GB, session_id=241010a7-f656-40ed-8285-ce2eb0466b3c, session_timestamp=2023-01-31T09:12:27.423Z, thread-id=1826, tx_id=C9C54CF5427BF03BD82C2327CB6A747F5581B420540A5FF314B425F21906A3E4}
[INFO ] 2023-01-31T09:12:27,504Z [Mock network] corda.flow. - Successfully received fully signed tx. Sending it to the vault for processing. {fiber-id=10000034, flow-id=9964b8a4-9563-48bb-a6fd-fb138f553a55, invocation_id=241010a7-f656-40ed-8285-ce2eb0466b3c, invocation_timestamp=2023-01-31T09:12:27.423Z, origin=O=Mock Company 1, L=London, C=GB, session_id=241010a7-f656-40ed-8285-ce2eb0466b3c, session_timestamp=2023-01-31T09:12:27.423Z, thread-id=1826, tx_id=C9C54CF5427BF03BD82C2327CB6A747F5581B420540A5FF314B425F21906A3E4}
[INFO ] 2023-01-31T09:12:27,511Z [Mock network] corda.flow. - Successfully recorded received transaction locally. {fiber-id=10000034, flow-id=9964b8a4-9563-48bb-a6fd-fb138f553a55, invocation_id=241010a7-f656-40ed-8285-ce2eb0466b3c, invocation_timestamp=2023-01-31T09:12:27.423Z, origin=O=Mock Company 1, L=London, C=GB, session_id=241010a7-f656-40ed-8285-ce2eb0466b3c, session_timestamp=2023-01-31T09:12:27.423Z, thread-id=1826, tx_id=C9C54CF5427BF03BD82C2327CB6A747F5581B420540A5FF314B425F21906A3E4}
[INFO ] 2023-01-31T09:12:27,559Z [Mock network] corda.flow. - Received transaction acknowledgement request from party O=Mock Company 1, L=London, C=GB. {fiber-id=10000035, flow-id=f5553623-670e-4fa0-8171-998f0186babf, invocation_id=3bf19e26-167b-44f3-bc31-cf842d40a940, invocation_timestamp=2023-01-31T09:12:27.546Z, origin=O=Mock Company 1, L=London, C=GB, session_id=3bf19e26-167b-44f3-bc31-cf842d40a940, session_timestamp=2023-01-31T09:12:27.546Z, thread-id=1826, tx_id=C9C54CF5427BF03BD82C2327CB6A747F5581B420540A5FF314B425F21906A3E4}
[INFO ] 2023-01-31T09:12:27,566Z [Mock network] corda.flow. - Transaction dependencies resolution completed. {fiber-id=10000035, flow-id=f5553623-670e-4fa0-8171-998f0186babf, invocation_id=3bf19e26-167b-44f3-bc31-cf842d40a940, invocation_timestamp=2023-01-31T09:12:27.546Z, origin=O=Mock Company 1, L=London, C=GB, session_id=3bf19e26-167b-44f3-bc31-cf842d40a940, session_timestamp=2023-01-31T09:12:27.546Z, thread-id=1826, tx_id=C9C54CF5427BF03BD82C2327CB6A747F5581B420540A5FF314B425F21906A3E4}
[INFO ] 2023-01-31T09:12:27,598Z [Mock network] corda.flow. - Successfully received fully signed tx. Sending it to the vault for processing. {fiber-id=10000035, flow-id=f5553623-670e-4fa0-8171-998f0186babf, invocation_id=3bf19e26-167b-44f3-bc31-cf842d40a940, invocation_timestamp=2023-01-31T09:12:27.546Z, origin=O=Mock Company 1, L=London, C=GB, session_id=3bf19e26-167b-44f3-bc31-cf842d40a940, session_timestamp=2023-01-31T09:12:27.546Z, thread-id=1826, tx_id=C9C54CF5427BF03BD82C2327CB6A747F5581B420540A5FF314B425F21906A3E4}
[INFO ] 2023-01-31T09:12:27,604Z [Mock network] corda.flow. - Successfully recorded received transaction locally. {fiber-id=10000035, flow-id=f5553623-670e-4fa0-8171-998f0186babf, invocation_id=3bf19e26-167b-44f3-bc31-cf842d40a940, invocation_timestamp=2023-01-31T09:12:27.546Z, origin=O=Mock Company 1, L=London, C=GB, session_id=3bf19e26-167b-44f3-bc31-cf842d40a940, session_timestamp=2023-01-31T09:12:27.546Z, thread-id=1826, tx_id=C9C54CF5427BF03BD82C2327CB6A747F5581B420540A5FF314B425F21906A3E4}
[INFO ] 2023-01-31T09:12:27,889Z [Mock network] corda.flow. - No need to notarise this transaction. {actor_id=Only For Testing, actor_owning_identity=O=Mock Company 2, L=London, C=GB, actor_store_id=TEST, fiber-id=10000036, flow-id=85adf125-4226-49b5-9139-5c152ae799de, invocation_id=5fb27479-9cfb-475a-9477-93eece4a253e, invocation_timestamp=2023-01-31T09:12:27.621Z, origin=Only For Testing, session_id=5fb27479-9cfb-475a-9477-93eece4a253e, session_timestamp=2023-01-31T09:12:27.621Z, thread-id=1826, tx_id=D4694CD2B4A63BD09AB911E55C641A205438A7434793AB36E54C5D81676C22F2}
[INFO ] 2023-01-31T09:12:27,889Z [Mock network] corda.flow. - Recording transaction locally. {actor_id=Only For Testing, actor_owning_identity=O=Mock Company 2, L=London, C=GB, actor_store_id=TEST, fiber-id=10000036, flow-id=85adf125-4226-49b5-9139-5c152ae799de, invocation_id=5fb27479-9cfb-475a-9477-93eece4a253e, invocation_timestamp=2023-01-31T09:12:27.621Z, origin=Only For Testing, session_id=5fb27479-9cfb-475a-9477-93eece4a253e, session_timestamp=2023-01-31T09:12:27.621Z, thread-id=1826, tx_id=D4694CD2B4A63BD09AB911E55C641A205438A7434793AB36E54C5D81676C22F2}
[INFO ] 2023-01-31T09:12:27,893Z [Mock network] corda.flow. - Recorded transaction locally successfully. {actor_id=Only For Testing, actor_owning_identity=O=Mock Company 2, L=London, C=GB, actor_store_id=TEST, fiber-id=10000036, flow-id=85adf125-4226-49b5-9139-5c152ae799de, invocation_id=5fb27479-9cfb-475a-9477-93eece4a253e, invocation_timestamp=2023-01-31T09:12:27.621Z, origin=Only For Testing, session_id=5fb27479-9cfb-475a-9477-93eece4a253e, session_timestamp=2023-01-31T09:12:27.621Z, thread-id=1826, tx_id=D4694CD2B4A63BD09AB911E55C641A205438A7434793AB36E54C5D81676C22F2}
[INFO ] 2023-01-31T09:12:27,893Z [Mock network] corda.flow. - All parties received the transaction successfully. {actor_id=Only For Testing, actor_owning_identity=O=Mock Company 2, L=London, C=GB, actor_store_id=TEST, fiber-id=10000036, flow-id=85adf125-4226-49b5-9139-5c152ae799de, invocation_id=5fb27479-9cfb-475a-9477-93eece4a253e, invocation_timestamp=2023-01-31T09:12:27.621Z, origin=Only For Testing, session_id=5fb27479-9cfb-475a-9477-93eece4a253e, session_timestamp=2023-01-31T09:12:27.621Z, thread-id=1826, tx_id=D4694CD2B4A63BD09AB911E55C641A205438A7434793AB36E54C5D81676C22F2}
[INFO ] 2023-01-31T09:12:27,911Z [Mock network] corda.flow. - Received transaction acknowledgement request from party O=Mock Company 2, L=London, C=GB. {fiber-id=10000037, flow-id=31942bd4-3172-4672-83d5-47ca9070105c, invocation_id=2fa330c5-ca7d-491c-a9fa-4a0f734879d4, invocation_timestamp=2023-01-31T09:12:27.904Z, origin=O=Mock Company 2, L=London, C=GB, session_id=2fa330c5-ca7d-491c-a9fa-4a0f734879d4, session_timestamp=2023-01-31T09:12:27.904Z, thread-id=1826, tx_id=D4694CD2B4A63BD09AB911E55C641A205438A7434793AB36E54C5D81676C22F2}
[INFO ] 2023-01-31T09:12:27,916Z [Mock network] corda.flow. - Transaction dependencies resolution completed. {fiber-id=10000037, flow-id=31942bd4-3172-4672-83d5-47ca9070105c, invocation_id=2fa330c5-ca7d-491c-a9fa-4a0f734879d4, invocation_timestamp=2023-01-31T09:12:27.904Z, origin=O=Mock Company 2, L=London, C=GB, session_id=2fa330c5-ca7d-491c-a9fa-4a0f734879d4, session_timestamp=2023-01-31T09:12:27.904Z, thread-id=1826, tx_id=D4694CD2B4A63BD09AB911E55C641A205438A7434793AB36E54C5D81676C22F2}
[INFO ] 2023-01-31T09:12:27,918Z [Mock network] corda.flow. - Successfully received fully signed tx. Sending it to the vault for processing. {fiber-id=10000037, flow-id=31942bd4-3172-4672-83d5-47ca9070105c, invocation_id=2fa330c5-ca7d-491c-a9fa-4a0f734879d4, invocation_timestamp=2023-01-31T09:12:27.904Z, origin=O=Mock Company 2, L=London, C=GB, session_id=2fa330c5-ca7d-491c-a9fa-4a0f734879d4, session_timestamp=2023-01-31T09:12:27.904Z, thread-id=1826, tx_id=D4694CD2B4A63BD09AB911E55C641A205438A7434793AB36E54C5D81676C22F2}
[INFO ] 2023-01-31T09:12:27,921Z [Mock network] corda.flow. - Successfully recorded received transaction locally. {fiber-id=10000037, flow-id=31942bd4-3172-4672-83d5-47ca9070105c, invocation_id=2fa330c5-ca7d-491c-a9fa-4a0f734879d4, invocation_timestamp=2023-01-31T09:12:27.904Z, origin=O=Mock Company 2, L=London, C=GB, session_id=2fa330c5-ca7d-491c-a9fa-4a0f734879d4, session_timestamp=2023-01-31T09:12:27.904Z, thread-id=1826, tx_id=D4694CD2B4A63BD09AB911E55C641A205438A7434793AB36E54C5D81676C22F2}
[INFO ] 2023-01-31T09:12:27,954Z [Mock network] corda.flow. - Received transaction acknowledgement request from party O=Mock Company 2, L=London, C=GB. {fiber-id=10000038, flow-id=862ab6f1-e44e-48de-a95c-1f5df0b5eb42, invocation_id=c76dba4e-db04-417b-8d51-0e5e31b0ec81, invocation_timestamp=2023-01-31T09:12:27.946Z, origin=O=Mock Company 2, L=London, C=GB, session_id=c76dba4e-db04-417b-8d51-0e5e31b0ec81, session_timestamp=2023-01-31T09:12:27.946Z, thread-id=1826, tx_id=D4694CD2B4A63BD09AB911E55C641A205438A7434793AB36E54C5D81676C22F2}
[INFO ] 2023-01-31T09:12:27,959Z [Mock network] corda.flow. - Transaction dependencies resolution completed. {fiber-id=10000038, flow-id=862ab6f1-e44e-48de-a95c-1f5df0b5eb42, invocation_id=c76dba4e-db04-417b-8d51-0e5e31b0ec81, invocation_timestamp=2023-01-31T09:12:27.946Z, origin=O=Mock Company 2, L=London, C=GB, session_id=c76dba4e-db04-417b-8d51-0e5e31b0ec81, session_timestamp=2023-01-31T09:12:27.946Z, thread-id=1826, tx_id=D4694CD2B4A63BD09AB911E55C641A205438A7434793AB36E54C5D81676C22F2}
[INFO ] 2023-01-31T09:12:27,961Z [Mock network] corda.flow. - Successfully received fully signed tx. Sending it to the vault for processing. {fiber-id=10000038, flow-id=862ab6f1-e44e-48de-a95c-1f5df0b5eb42, invocation_id=c76dba4e-db04-417b-8d51-0e5e31b0ec81, invocation_timestamp=2023-01-31T09:12:27.946Z, origin=O=Mock Company 2, L=London, C=GB, session_id=c76dba4e-db04-417b-8d51-0e5e31b0ec81, session_timestamp=2023-01-31T09:12:27.946Z, thread-id=1826, tx_id=D4694CD2B4A63BD09AB911E55C641A205438A7434793AB36E54C5D81676C22F2}
[INFO ] 2023-01-31T09:12:27,964Z [Mock network] corda.flow. - Successfully recorded received transaction locally. {fiber-id=10000038, flow-id=862ab6f1-e44e-48de-a95c-1f5df0b5eb42, invocation_id=c76dba4e-db04-417b-8d51-0e5e31b0ec81, invocation_timestamp=2023-01-31T09:12:27.946Z, origin=O=Mock Company 2, L=London, C=GB, session_id=c76dba4e-db04-417b-8d51-0e5e31b0ec81, session_timestamp=2023-01-31T09:12:27.946Z, thread-id=1826, tx_id=D4694CD2B4A63BD09AB911E55C641A205438A7434793AB36E54C5D81676C22F2}
[INFO ] 2023-01-31T09:12:27,986Z [Mock network] identity.PersistentIdentityService. - Linking: 832CC95A4950BB04C5E2371C547F621A9B5FEC52D1A72767305AB996CDD1DDF7 to O=Mock Company 1, L=London, C=GB {actor_id=Only For Testing, actor_owning_identity=O=Mock Company 1, L=London, C=GB, actor_store_id=TEST, fiber-id=10000040, flow-id=8fa23706-0635-497b-a796-aac21fe0f388, invocation_id=ad054a46-a1bd-4dc0-bccc-9fa4cdeacefd, invocation_timestamp=2023-01-31T09:12:27.984Z, origin=Only For Testing, session_id=ad054a46-a1bd-4dc0-bccc-9fa4cdeacefd, session_timestamp=2023-01-31T09:12:27.984Z, thread-id=1826}
[INFO ] 2023-01-31T09:12:28,056Z [Mock network] corda.flow. - No need to notarise this transaction. {actor_id=Only For Testing, actor_owning_identity=O=Mock Company 1, L=London, C=GB, actor_store_id=TEST, fiber-id=10000040, flow-id=8fa23706-0635-497b-a796-aac21fe0f388, invocation_id=ad054a46-a1bd-4dc0-bccc-9fa4cdeacefd, invocation_timestamp=2023-01-31T09:12:27.984Z, origin=Only For Testing, session_id=ad054a46-a1bd-4dc0-bccc-9fa4cdeacefd, session_timestamp=2023-01-31T09:12:27.984Z, thread-id=1826, tx_id=A3257E07A0995B1468D5DD0FEFC4ED7F1D95C5B398E11F75FE552A858A272A03}
[INFO ] 2023-01-31T09:12:28,056Z [Mock network] corda.flow. - Recording transaction locally. {actor_id=Only For Testing, actor_owning_identity=O=Mock Company 1, L=London, C=GB, actor_store_id=TEST, fiber-id=10000040, flow-id=8fa23706-0635-497b-a796-aac21fe0f388, invocation_id=ad054a46-a1bd-4dc0-bccc-9fa4cdeacefd, invocation_timestamp=2023-01-31T09:12:27.984Z, origin=Only For Testing, session_id=ad054a46-a1bd-4dc0-bccc-9fa4cdeacefd, session_timestamp=2023-01-31T09:12:27.984Z, thread-id=1826, tx_id=A3257E07A0995B1468D5DD0FEFC4ED7F1D95C5B398E11F75FE552A858A272A03}
[INFO ] 2023-01-31T09:12:28,063Z [Mock network] corda.flow. - Recorded transaction locally successfully. {actor_id=Only For Testing, actor_owning_identity=O=Mock Company 1, L=London, C=GB, actor_store_id=TEST, fiber-id=10000040, flow-id=8fa23706-0635-497b-a796-aac21fe0f388, invocation_id=ad054a46-a1bd-4dc0-bccc-9fa4cdeacefd, invocation_timestamp=2023-01-31T09:12:27.984Z, origin=Only For Testing, session_id=ad054a46-a1bd-4dc0-bccc-9fa4cdeacefd, session_timestamp=2023-01-31T09:12:27.984Z, thread-id=1826, tx_id=A3257E07A0995B1468D5DD0FEFC4ED7F1D95C5B398E11F75FE552A858A272A03}
[INFO ] 2023-01-31T09:12:28,063Z [Mock network] corda.flow. - All parties received the transaction successfully. {actor_id=Only For Testing, actor_owning_identity=O=Mock Company 1, L=London, C=GB, actor_store_id=TEST, fiber-id=10000040, flow-id=8fa23706-0635-497b-a796-aac21fe0f388, invocation_id=ad054a46-a1bd-4dc0-bccc-9fa4cdeacefd, invocation_timestamp=2023-01-31T09:12:27.984Z, origin=Only For Testing, session_id=ad054a46-a1bd-4dc0-bccc-9fa4cdeacefd, session_timestamp=2023-01-31T09:12:27.984Z, thread-id=1826, tx_id=A3257E07A0995B1468D5DD0FEFC4ED7F1D95C5B398E11F75FE552A858A272A03}
[INFO ] 2023-01-31T09:12:28,071Z [Mock network] identity.PersistentIdentityService. - Linking: 44302E775C5B5DB3E0B58991A59761007E7F5E0A3A2202237B210DE3E1D36FB0 to O=Mock Company 1, L=London, C=GB {actor_id=Only For Testing, actor_owning_identity=O=Mock Company 1, L=London, C=GB, actor_store_id=TEST, fiber-id=10000041, flow-id=732bc381-4d44-470c-93ae-9a10b0c133b1, invocation_id=14334433-ec11-4440-9986-7c3dbf50e4b0, invocation_timestamp=2023-01-31T09:12:28.068Z, origin=Only For Testing, session_id=14334433-ec11-4440-9986-7c3dbf50e4b0, session_timestamp=2023-01-31T09:12:28.068Z, thread-id=1826}
[INFO ] 2023-01-31T09:12:28,085Z [Mock network] corda.flow. - No need to notarise this transaction. {actor_id=Only For Testing, actor_owning_identity=O=Mock Company 1, L=London, C=GB, actor_store_id=TEST, fiber-id=10000041, flow-id=732bc381-4d44-470c-93ae-9a10b0c133b1, invocation_id=14334433-ec11-4440-9986-7c3dbf50e4b0, invocation_timestamp=2023-01-31T09:12:28.068Z, origin=Only For Testing, session_id=14334433-ec11-4440-9986-7c3dbf50e4b0, session_timestamp=2023-01-31T09:12:28.068Z, thread-id=1826, tx_id=0D2F1C27A597917287C12BC19668CB2C4155249409E15F3AE0AD24E02A2E1271}
[INFO ] 2023-01-31T09:12:28,085Z [Mock network] corda.flow. - Recording transaction locally. {actor_id=Only For Testing, actor_owning_identity=O=Mock Company 1, L=London, C=GB, actor_store_id=TEST, fiber-id=10000041, flow-id=732bc381-4d44-470c-93ae-9a10b0c133b1, invocation_id=14334433-ec11-4440-9986-7c3dbf50e4b0, invocation_timestamp=2023-01-31T09:12:28.068Z, origin=Only For Testing, session_id=14334433-ec11-4440-9986-7c3dbf50e4b0, session_timestamp=2023-01-31T09:12:28.068Z, thread-id=1826, tx_id=0D2F1C27A597917287C12BC19668CB2C4155249409E15F3AE0AD24E02A2E1271}
[INFO ] 2023-01-31T09:12:28,088Z [Mock network] corda.flow. - Recorded transaction locally successfully. {actor_id=Only For Testing, actor_owning_identity=O=Mock Company 1, L=London, C=GB, actor_store_id=TEST, fiber-id=10000041, flow-id=732bc381-4d44-470c-93ae-9a10b0c133b1, invocation_id=14334433-ec11-4440-9986-7c3dbf50e4b0, invocation_timestamp=2023-01-31T09:12:28.068Z, origin=Only For Testing, session_id=14334433-ec11-4440-9986-7c3dbf50e4b0, session_timestamp=2023-01-31T09:12:28.068Z, thread-id=1826, tx_id=0D2F1C27A597917287C12BC19668CB2C4155249409E15F3AE0AD24E02A2E1271}
[INFO ] 2023-01-31T09:12:28,088Z [Mock network] corda.flow. - All parties received the transaction successfully. {actor_id=Only For Testing, actor_owning_identity=O=Mock Company 1, L=London, C=GB, actor_store_id=TEST, fiber-id=10000041, flow-id=732bc381-4d44-470c-93ae-9a10b0c133b1, invocation_id=14334433-ec11-4440-9986-7c3dbf50e4b0, invocation_timestamp=2023-01-31T09:12:28.068Z, origin=Only For Testing, session_id=14334433-ec11-4440-9986-7c3dbf50e4b0, session_timestamp=2023-01-31T09:12:28.068Z, thread-id=1826, tx_id=0D2F1C27A597917287C12BC19668CB2C4155249409E15F3AE0AD24E02A2E1271}
[INFO ] 2023-01-31T09:12:28,112Z [Mock network] identity.PersistentIdentityService. - Linking: 86251EBD1B48B28961D729F683C3E1AE6F09D380DFDA85105E72902E4E2F43C7 to O=Mock Company 1, L=London, C=GB {actor_id=Only For Testing, actor_owning_identity=O=Mock Company 1, L=London, C=GB, actor_store_id=TEST, fiber-id=10000043, flow-id=a323dcea-a623-4fa0-86eb-5699e96f8d1f, invocation_id=d857c70c-1df5-4d6d-89f0-d2586eeb8a72, invocation_timestamp=2023-01-31T09:12:28.107Z, origin=Only For Testing, session_id=d857c70c-1df5-4d6d-89f0-d2586eeb8a72, session_timestamp=2023-01-31T09:12:28.107Z, thread-id=1826}
[INFO ] 2023-01-31T09:12:28,145Z [Mock network] identity.PersistentIdentityService. - Linking: 640D479980C0D1BE27B4C5550EF7570EB706FA25CF5EC4FB438F04F8535C79C2 to O=Mock Company 2, L=London, C=GB {fiber-id=10000044, flow-id=540aefd5-ce69-458b-a36c-99b391f5b7a3, invocation_id=ce4d4009-019d-44fb-91b9-8c5cd405950f, invocation_timestamp=2023-01-31T09:12:28.119Z, origin=O=Mock Company 1, L=London, C=GB, session_id=ce4d4009-019d-44fb-91b9-8c5cd405950f, session_timestamp=2023-01-31T09:12:28.119Z, thread-id=1826}
[INFO ] 2023-01-31T09:12:28,157Z [Mock network] identity.PersistentIdentityService. - Linking: 640D479980C0D1BE27B4C5550EF7570EB706FA25CF5EC4FB438F04F8535C79C2 to O=Mock Company 2, L=London, C=GB {actor_id=Only For Testing, actor_owning_identity=O=Mock Company 1, L=London, C=GB, actor_store_id=TEST, fiber-id=10000043, flow-id=a323dcea-a623-4fa0-86eb-5699e96f8d1f, invocation_id=d857c70c-1df5-4d6d-89f0-d2586eeb8a72, invocation_timestamp=2023-01-31T09:12:28.107Z, origin=Only For Testing, session_id=d857c70c-1df5-4d6d-89f0-d2586eeb8a72, session_timestamp=2023-01-31T09:12:28.107Z, thread-id=1826}
[INFO ] 2023-01-31T09:12:28,230Z [Mock network] corda.flow. - Received transaction acknowledgement request from party O=Mock Company 1, L=London, C=GB. {fiber-id=10000045, flow-id=c5ed2eac-68a6-4387-bea6-d72b2b8cd4dc, invocation_id=746f41d2-509c-4be3-a59c-80dbc027367c, invocation_timestamp=2023-01-31T09:12:28.223Z, origin=O=Mock Company 1, L=London, C=GB, session_id=746f41d2-509c-4be3-a59c-80dbc027367c, session_timestamp=2023-01-31T09:12:28.223Z, thread-id=1826, tx_id=6C28F125AE06D1B750D0859A88A9B3A00934B5872C1EFD98F955A3368BECBDC6}
[INFO ] 2023-01-31T09:12:28,238Z [Mock network] corda.flow. - Transaction dependencies resolution completed. {fiber-id=10000045, flow-id=c5ed2eac-68a6-4387-bea6-d72b2b8cd4dc, invocation_id=746f41d2-509c-4be3-a59c-80dbc027367c, invocation_timestamp=2023-01-31T09:12:28.223Z, origin=O=Mock Company 1, L=London, C=GB, session_id=746f41d2-509c-4be3-a59c-80dbc027367c, session_timestamp=2023-01-31T09:12:28.223Z, thread-id=1826, tx_id=6C28F125AE06D1B750D0859A88A9B3A00934B5872C1EFD98F955A3368BECBDC6}
[INFO ] 2023-01-31T09:12:28,308Z [Mock network] corda.flow. - No need to notarise this transaction. {actor_id=Only For Testing, actor_owning_identity=O=Mock Company 1, L=London, C=GB, actor_store_id=TEST, fiber-id=10000043, flow-id=a323dcea-a623-4fa0-86eb-5699e96f8d1f, invocation_id=d857c70c-1df5-4d6d-89f0-d2586eeb8a72, invocation_timestamp=2023-01-31T09:12:28.107Z, origin=Only For Testing, session_id=d857c70c-1df5-4d6d-89f0-d2586eeb8a72, session_timestamp=2023-01-31T09:12:28.107Z, thread-id=1826, tx_id=6C28F125AE06D1B750D0859A88A9B3A00934B5872C1EFD98F955A3368BECBDC6}
[INFO ] 2023-01-31T09:12:28,308Z [Mock network] corda.flow. - Recording transaction locally. {actor_id=Only For Testing, actor_owning_identity=O=Mock Company 1, L=London, C=GB, actor_store_id=TEST, fiber-id=10000043, flow-id=a323dcea-a623-4fa0-86eb-5699e96f8d1f, invocation_id=d857c70c-1df5-4d6d-89f0-d2586eeb8a72, invocation_timestamp=2023-01-31T09:12:28.107Z, origin=Only For Testing, session_id=d857c70c-1df5-4d6d-89f0-d2586eeb8a72, session_timestamp=2023-01-31T09:12:28.107Z, thread-id=1826, tx_id=6C28F125AE06D1B750D0859A88A9B3A00934B5872C1EFD98F955A3368BECBDC6}
[INFO ] 2023-01-31T09:12:28,312Z [Mock network] corda.flow. - Recorded transaction locally successfully. {actor_id=Only For Testing, actor_owning_identity=O=Mock Company 1, L=London, C=GB, actor_store_id=TEST, fiber-id=10000043, flow-id=a323dcea-a623-4fa0-86eb-5699e96f8d1f, invocation_id=d857c70c-1df5-4d6d-89f0-d2586eeb8a72, invocation_timestamp=2023-01-31T09:12:28.107Z, origin=Only For Testing, session_id=d857c70c-1df5-4d6d-89f0-d2586eeb8a72, session_timestamp=2023-01-31T09:12:28.107Z, thread-id=1826, tx_id=6C28F125AE06D1B750D0859A88A9B3A00934B5872C1EFD98F955A3368BECBDC6}
[INFO ] 2023-01-31T09:12:28,320Z [Mock network] corda.flow. - Received transaction acknowledgement request from party O=Mock Company 1, L=London, C=GB. {fiber-id=10000045, flow-id=c5ed2eac-68a6-4387-bea6-d72b2b8cd4dc, invocation_id=746f41d2-509c-4be3-a59c-80dbc027367c, invocation_timestamp=2023-01-31T09:12:28.223Z, origin=O=Mock Company 1, L=London, C=GB, session_id=746f41d2-509c-4be3-a59c-80dbc027367c, session_timestamp=2023-01-31T09:12:28.223Z, thread-id=1826, tx_id=6C28F125AE06D1B750D0859A88A9B3A00934B5872C1EFD98F955A3368BECBDC6}
[INFO ] 2023-01-31T09:12:28,324Z [Mock network] corda.flow. - Transaction dependencies resolution completed. {fiber-id=10000045, flow-id=c5ed2eac-68a6-4387-bea6-d72b2b8cd4dc, invocation_id=746f41d2-509c-4be3-a59c-80dbc027367c, invocation_timestamp=2023-01-31T09:12:28.223Z, origin=O=Mock Company 1, L=London, C=GB, session_id=746f41d2-509c-4be3-a59c-80dbc027367c, session_timestamp=2023-01-31T09:12:28.223Z, thread-id=1826, tx_id=6C28F125AE06D1B750D0859A88A9B3A00934B5872C1EFD98F955A3368BECBDC6}
[INFO ] 2023-01-31T09:12:28,327Z [Mock network] corda.flow. - Successfully received fully signed tx. Sending it to the vault for processing. {fiber-id=10000045, flow-id=c5ed2eac-68a6-4387-bea6-d72b2b8cd4dc, invocation_id=746f41d2-509c-4be3-a59c-80dbc027367c, invocation_timestamp=2023-01-31T09:12:28.223Z, origin=O=Mock Company 1, L=London, C=GB, session_id=746f41d2-509c-4be3-a59c-80dbc027367c, session_timestamp=2023-01-31T09:12:28.223Z, thread-id=1826, tx_id=6C28F125AE06D1B750D0859A88A9B3A00934B5872C1EFD98F955A3368BECBDC6}
[INFO ] 2023-01-31T09:12:28,331Z [Mock network] corda.flow. - Successfully recorded received transaction locally. {fiber-id=10000045, flow-id=c5ed2eac-68a6-4387-bea6-d72b2b8cd4dc, invocation_id=746f41d2-509c-4be3-a59c-80dbc027367c, invocation_timestamp=2023-01-31T09:12:28.223Z, origin=O=Mock Company 1, L=London, C=GB, session_id=746f41d2-509c-4be3-a59c-80dbc027367c, session_timestamp=2023-01-31T09:12:28.223Z, thread-id=1826, tx_id=6C28F125AE06D1B750D0859A88A9B3A00934B5872C1EFD98F955A3368BECBDC6}
[WARN ] 2023-01-31T09:12:28,333Z [Mock network] persistence.AbstractPartyToX500NameAsStringConverter. - Identity service unable to resolve AbstractParty: Anonymous(DLA2eTijMB46s7yqzJEV3NTR8wL6LhoAWp7jPgaVUo8T8r) {actor_id=Only For Testing, actor_owning_identity=O=Mock Company 1, L=London, C=GB, actor_store_id=TEST, fiber-id=10000045, flow-id=c5ed2eac-68a6-4387-bea6-d72b2b8cd4dc, invocation_id=746f41d2-509c-4be3-a59c-80dbc027367c, invocation_timestamp=2023-01-31T09:12:28.223Z, origin=O=Mock Company 1, L=London, C=GB, session_id=746f41d2-509c-4be3-a59c-80dbc027367c, session_timestamp=2023-01-31T09:12:28.223Z, thread-id=1826}
[INFO ] 2023-01-31T09:12:28,336Z [Mock network] corda.flow. - Party O=Mock Company 2, L=London, C=GB received the transaction. {actor_id=Only For Testing, actor_owning_identity=O=Mock Company 1, L=London, C=GB, actor_store_id=TEST, fiber-id=10000043, flow-id=a323dcea-a623-4fa0-86eb-5699e96f8d1f, invocation_id=d857c70c-1df5-4d6d-89f0-d2586eeb8a72, invocation_timestamp=2023-01-31T09:12:28.107Z, origin=Only For Testing, session_id=d857c70c-1df5-4d6d-89f0-d2586eeb8a72, session_timestamp=2023-01-31T09:12:28.107Z, thread-id=1826, tx_id=6C28F125AE06D1B750D0859A88A9B3A00934B5872C1EFD98F955A3368BECBDC6}
[INFO ] 2023-01-31T09:12:28,336Z [Mock network] corda.flow. - All parties received the transaction successfully. {actor_id=Only For Testing, actor_owning_identity=O=Mock Company 1, L=London, C=GB, actor_store_id=TEST, fiber-id=10000043, flow-id=a323dcea-a623-4fa0-86eb-5699e96f8d1f, invocation_id=d857c70c-1df5-4d6d-89f0-d2586eeb8a72, invocation_timestamp=2023-01-31T09:12:28.107Z, origin=Only For Testing, session_id=d857c70c-1df5-4d6d-89f0-d2586eeb8a72, session_timestamp=2023-01-31T09:12:28.107Z, thread-id=1826, tx_id=6C28F125AE06D1B750D0859A88A9B3A00934B5872C1EFD98F955A3368BECBDC6}
[INFO ] 2023-01-31T09:12:28,366Z [Mock network] corda.flow. - Received transaction acknowledgement request from party O=Mock Company 1, L=London, C=GB. {fiber-id=10000046, flow-id=a8c0e475-45b7-478f-8ecb-2f8843f486c2, invocation_id=e410f4ab-4972-44c6-a01c-67d388f08295, invocation_timestamp=2023-01-31T09:12:28.353Z, origin=O=Mock Company 1, L=London, C=GB, session_id=e410f4ab-4972-44c6-a01c-67d388f08295, session_timestamp=2023-01-31T09:12:28.353Z, thread-id=1826, tx_id=D4694CD2B4A63BD09AB911E55C641A205438A7434793AB36E54C5D81676C22F2}
[INFO ] 2023-01-31T09:12:28,370Z [Mock network] corda.flow. - Transaction dependencies resolution completed. {fiber-id=10000046, flow-id=a8c0e475-45b7-478f-8ecb-2f8843f486c2, invocation_id=e410f4ab-4972-44c6-a01c-67d388f08295, invocation_timestamp=2023-01-31T09:12:28.353Z, origin=O=Mock Company 1, L=London, C=GB, session_id=e410f4ab-4972-44c6-a01c-67d388f08295, session_timestamp=2023-01-31T09:12:28.353Z, thread-id=1826, tx_id=D4694CD2B4A63BD09AB911E55C641A205438A7434793AB36E54C5D81676C22F2}
[INFO ] 2023-01-31T09:12:28,372Z [Mock network] corda.flow. - Successfully received fully signed tx. Sending it to the vault for processing. {fiber-id=10000046, flow-id=a8c0e475-45b7-478f-8ecb-2f8843f486c2, invocation_id=e410f4ab-4972-44c6-a01c-67d388f08295, invocation_timestamp=2023-01-31T09:12:28.353Z, origin=O=Mock Company 1, L=London, C=GB, session_id=e410f4ab-4972-44c6-a01c-67d388f08295, session_timestamp=2023-01-31T09:12:28.353Z, thread-id=1826, tx_id=D4694CD2B4A63BD09AB911E55C641A205438A7434793AB36E54C5D81676C22F2}
[INFO ] 2023-01-31T09:12:28,374Z [Mock network] corda.flow. - Successfully recorded received transaction locally. {fiber-id=10000046, flow-id=a8c0e475-45b7-478f-8ecb-2f8843f486c2, invocation_id=e410f4ab-4972-44c6-a01c-67d388f08295, invocation_timestamp=2023-01-31T09:12:28.353Z, origin=O=Mock Company 1, L=London, C=GB, session_id=e410f4ab-4972-44c6-a01c-67d388f08295, session_timestamp=2023-01-31T09:12:28.353Z, thread-id=1826, tx_id=D4694CD2B4A63BD09AB911E55C641A205438A7434793AB36E54C5D81676C22F2}
[INFO ] 2023-01-31T09:12:28,391Z [Mock network] identity.PersistentIdentityService. - An existing entry for DL7jZWqSBC6fcau2n31R1rHjMK2TM4M4dJAXaxYmJrYLvD already exists. {fiber-id=10000046, flow-id=a8c0e475-45b7-478f-8ecb-2f8843f486c2, invocation_id=e410f4ab-4972-44c6-a01c-67d388f08295, invocation_timestamp=2023-01-31T09:12:28.353Z, origin=O=Mock Company 1, L=London, C=GB, session_id=e410f4ab-4972-44c6-a01c-67d388f08295, session_timestamp=2023-01-31T09:12:28.353Z, thread-id=1826, tx_id=D4694CD2B4A63BD09AB911E55C641A205438A7434793AB36E54C5D81676C22F2}
[INFO ] 2023-01-31T09:12:28,397Z [Mock network] corda.flow. - Received transaction acknowledgement request from party O=Mock Company 1, L=London, C=GB. {fiber-id=10000046, flow-id=a8c0e475-45b7-478f-8ecb-2f8843f486c2, invocation_id=e410f4ab-4972-44c6-a01c-67d388f08295, invocation_timestamp=2023-01-31T09:12:28.353Z, origin=O=Mock Company 1, L=London, C=GB, session_id=e410f4ab-4972-44c6-a01c-67d388f08295, session_timestamp=2023-01-31T09:12:28.353Z, thread-id=1826, tx_id=C9C54CF5427BF03BD82C2327CB6A747F5581B420540A5FF314B425F21906A3E4}
[INFO ] 2023-01-31T09:12:28,401Z [Mock network] corda.flow. - Transaction dependencies resolution completed. {fiber-id=10000046, flow-id=a8c0e475-45b7-478f-8ecb-2f8843f486c2, invocation_id=e410f4ab-4972-44c6-a01c-67d388f08295, invocation_timestamp=2023-01-31T09:12:28.353Z, origin=O=Mock Company 1, L=London, C=GB, session_id=e410f4ab-4972-44c6-a01c-67d388f08295, session_timestamp=2023-01-31T09:12:28.353Z, thread-id=1826, tx_id=C9C54CF5427BF03BD82C2327CB6A747F5581B420540A5FF314B425F21906A3E4}
[INFO ] 2023-01-31T09:12:28,404Z [Mock network] corda.flow. - Successfully received fully signed tx. Sending it to the vault for processing. {fiber-id=10000046, flow-id=a8c0e475-45b7-478f-8ecb-2f8843f486c2, invocation_id=e410f4ab-4972-44c6-a01c-67d388f08295, invocation_timestamp=2023-01-31T09:12:28.353Z, origin=O=Mock Company 1, L=London, C=GB, session_id=e410f4ab-4972-44c6-a01c-67d388f08295, session_timestamp=2023-01-31T09:12:28.353Z, thread-id=1826, tx_id=C9C54CF5427BF03BD82C2327CB6A747F5581B420540A5FF314B425F21906A3E4}
[INFO ] 2023-01-31T09:12:28,406Z [Mock network] corda.flow. - Successfully recorded received transaction locally. {fiber-id=10000046, flow-id=a8c0e475-45b7-478f-8ecb-2f8843f486c2, invocation_id=e410f4ab-4972-44c6-a01c-67d388f08295, invocation_timestamp=2023-01-31T09:12:28.353Z, origin=O=Mock Company 1, L=London, C=GB, session_id=e410f4ab-4972-44c6-a01c-67d388f08295, session_timestamp=2023-01-31T09:12:28.353Z, thread-id=1826, tx_id=C9C54CF5427BF03BD82C2327CB6A747F5581B420540A5FF314B425F21906A3E4}
[INFO ] 2023-01-31T09:12:28,426Z [Mock network] identity.PersistentIdentityService. - Linking: 86251EBD1B48B28961D729F683C3E1AE6F09D380DFDA85105E72902E4E2F43C7 to O=Mock Company 1, L=London, C=GB {fiber-id=10000046, flow-id=a8c0e475-45b7-478f-8ecb-2f8843f486c2, invocation_id=e410f4ab-4972-44c6-a01c-67d388f08295, invocation_timestamp=2023-01-31T09:12:28.353Z, origin=O=Mock Company 1, L=London, C=GB, session_id=e410f4ab-4972-44c6-a01c-67d388f08295, session_timestamp=2023-01-31T09:12:28.353Z, thread-id=1826, tx_id=C9C54CF5427BF03BD82C2327CB6A747F5581B420540A5FF314B425F21906A3E4}
[INFO ] 2023-01-31T09:12:28,434Z [Mock network] corda.flow. - Received transaction acknowledgement request from party O=Mock Company 1, L=London, C=GB. {fiber-id=10000046, flow-id=a8c0e475-45b7-478f-8ecb-2f8843f486c2, invocation_id=e410f4ab-4972-44c6-a01c-67d388f08295, invocation_timestamp=2023-01-31T09:12:28.353Z, origin=O=Mock Company 1, L=London, C=GB, session_id=e410f4ab-4972-44c6-a01c-67d388f08295, session_timestamp=2023-01-31T09:12:28.353Z, thread-id=1826, tx_id=6C28F125AE06D1B750D0859A88A9B3A00934B5872C1EFD98F955A3368BECBDC6}
[INFO ] 2023-01-31T09:12:28,441Z [Mock network] corda.flow. - Transaction dependencies resolution completed. {fiber-id=10000046, flow-id=a8c0e475-45b7-478f-8ecb-2f8843f486c2, invocation_id=e410f4ab-4972-44c6-a01c-67d388f08295, invocation_timestamp=2023-01-31T09:12:28.353Z, origin=O=Mock Company 1, L=London, C=GB, session_id=e410f4ab-4972-44c6-a01c-67d388f08295, session_timestamp=2023-01-31T09:12:28.353Z, thread-id=1826, tx_id=6C28F125AE06D1B750D0859A88A9B3A00934B5872C1EFD98F955A3368BECBDC6}
[INFO ] 2023-01-31T09:12:28,448Z [Mock network] corda.flow. - Successfully received fully signed tx. Sending it to the vault for processing. {fiber-id=10000046, flow-id=a8c0e475-45b7-478f-8ecb-2f8843f486c2, invocation_id=e410f4ab-4972-44c6-a01c-67d388f08295, invocation_timestamp=2023-01-31T09:12:28.353Z, origin=O=Mock Company 1, L=London, C=GB, session_id=e410f4ab-4972-44c6-a01c-67d388f08295, session_timestamp=2023-01-31T09:12:28.353Z, thread-id=1826, tx_id=6C28F125AE06D1B750D0859A88A9B3A00934B5872C1EFD98F955A3368BECBDC6}
[INFO ] 2023-01-31T09:12:28,451Z [Mock network] corda.flow. - Successfully recorded received transaction locally. {fiber-id=10000046, flow-id=a8c0e475-45b7-478f-8ecb-2f8843f486c2, invocation_id=e410f4ab-4972-44c6-a01c-67d388f08295, invocation_timestamp=2023-01-31T09:12:28.353Z, origin=O=Mock Company 1, L=London, C=GB, session_id=e410f4ab-4972-44c6-a01c-67d388f08295, session_timestamp=2023-01-31T09:12:28.353Z, thread-id=1826, tx_id=6C28F125AE06D1B750D0859A88A9B3A00934B5872C1EFD98F955A3368BECBDC6}
[INFO ] 2023-01-31T09:12:28,468Z [Mock network] identity.PersistentIdentityService. - Linking: 9FE6AE97FD4D5B54185614AE5A3A2CAA77302927619FD13200EC2A19D599679C to O=Mock Company 1, L=London, C=GB {actor_id=Only For Testing, actor_owning_identity=O=Mock Company 1, L=London, C=GB, actor_store_id=TEST, fiber-id=10000047, flow-id=f7148450-0212-49d6-90ad-3cdc7523d2ba, invocation_id=aa597790-58a3-4105-86bb-2da6d2e78fed, invocation_timestamp=2023-01-31T09:12:28.461Z, origin=Only For Testing, session_id=aa597790-58a3-4105-86bb-2da6d2e78fed, session_timestamp=2023-01-31T09:12:28.461Z, thread-id=1826}
[INFO ] 2023-01-31T09:12:28,531Z [Mock network] identity.PersistentIdentityService. - Linking: 12230697CF5C981310AB38268F9BBDF2FB0CAFE2669C8EBA4A858ED07A323480 to O=Mock Company 2, L=London, C=GB {fiber-id=10000048, flow-id=6de93b01-0d86-4074-bc00-28cf1dd173a6, invocation_id=fbd52407-c195-46fe-be81-da00ff6cd75d, invocation_timestamp=2023-01-31T09:12:28.483Z, origin=O=Mock Company 1, L=London, C=GB, session_id=fbd52407-c195-46fe-be81-da00ff6cd75d, session_timestamp=2023-01-31T09:12:28.483Z, thread-id=1826}
[INFO ] 2023-01-31T09:12:28,539Z [Mock network] identity.PersistentIdentityService. - Linking: 12230697CF5C981310AB38268F9BBDF2FB0CAFE2669C8EBA4A858ED07A323480 to O=Mock Company 2, L=London, C=GB {actor_id=Only For Testing, actor_owning_identity=O=Mock Company 1, L=London, C=GB, actor_store_id=TEST, fiber-id=10000047, flow-id=f7148450-0212-49d6-90ad-3cdc7523d2ba, invocation_id=aa597790-58a3-4105-86bb-2da6d2e78fed, invocation_timestamp=2023-01-31T09:12:28.461Z, origin=Only For Testing, session_id=aa597790-58a3-4105-86bb-2da6d2e78fed, session_timestamp=2023-01-31T09:12:28.461Z, thread-id=1826}
[INFO ] 2023-01-31T09:12:28,651Z [Mock network] corda.flow. - Received transaction acknowledgement request from party O=Mock Company 1, L=London, C=GB. {fiber-id=10000049, flow-id=d9653171-1304-4390-8884-3a6ba4ea252b, invocation_id=f7e6cbdf-60eb-4fdb-b71e-e5d168d7fae7, invocation_timestamp=2023-01-31T09:12:28.644Z, origin=O=Mock Company 1, L=London, C=GB, session_id=f7e6cbdf-60eb-4fdb-b71e-e5d168d7fae7, session_timestamp=2023-01-31T09:12:28.644Z, thread-id=1826, tx_id=33D7C629BA28755B5AD90C996A6F829D319E65CC328D6C7D09216E5F9B5A9DF7}
[INFO ] 2023-01-31T09:12:28,981Z [Mock network] corda.flow. - Transaction dependencies resolution completed. {fiber-id=10000049, flow-id=d9653171-1304-4390-8884-3a6ba4ea252b, invocation_id=f7e6cbdf-60eb-4fdb-b71e-e5d168d7fae7, invocation_timestamp=2023-01-31T09:12:28.644Z, origin=O=Mock Company 1, L=London, C=GB, session_id=f7e6cbdf-60eb-4fdb-b71e-e5d168d7fae7, session_timestamp=2023-01-31T09:12:28.644Z, thread-id=1826, tx_id=33D7C629BA28755B5AD90C996A6F829D319E65CC328D6C7D09216E5F9B5A9DF7}
[INFO ] 2023-01-31T09:12:29,094Z [Mock network] corda.flow. - Sending transaction to notary: O=Notary, L=London, C=GB. {actor_id=Only For Testing, actor_owning_identity=O=Mock Company 1, L=London, C=GB, actor_store_id=TEST, fiber-id=10000047, flow-id=f7148450-0212-49d6-90ad-3cdc7523d2ba, invocation_id=aa597790-58a3-4105-86bb-2da6d2e78fed, invocation_timestamp=2023-01-31T09:12:28.461Z, origin=Only For Testing, session_id=aa597790-58a3-4105-86bb-2da6d2e78fed, session_timestamp=2023-01-31T09:12:28.461Z, thread-id=1826, tx_id=33D7C629BA28755B5AD90C996A6F829D319E65CC328D6C7D09216E5F9B5A9DF7}
[INFO ] 2023-01-31T09:12:29,115Z [Mock network] corda.flow. - Received a notarisation request for Tx [33D7C629BA28755B5AD90C996A6F829D319E65CC328D6C7D09216E5F9B5A9DF7] from [O=Mock Company 1, L=London, C=GB] {fiber-id=10000050, flow-id=fc60cfa9-edc9-44bb-b919-8d6d0b96ff72, invocation_id=cb06fc70-209a-4314-8804-be947ed720af, invocation_timestamp=2023-01-31T09:12:29.105Z, origin=O=Mock Company 1, L=London, C=GB, session_id=cb06fc70-209a-4314-8804-be947ed720af, session_timestamp=2023-01-31T09:12:29.105Z, thread-id=1826}
[INFO ] 2023-01-31T09:12:29,712Z [Notary request queue processor] jpa.JPAUniquenessProvider. - Processing notarization requests with 3 input states and 0 references {}
[INFO ] 2023-01-31T09:12:29,717Z [Mock network] corda.flow. - Transaction [33D7C629BA28755B5AD90C996A6F829D319E65CC328D6C7D09216E5F9B5A9DF7] successfully notarised, sending signature back to [O=Mock Company 1, L=London, C=GB] {fiber-id=10000050, flow-id=fc60cfa9-edc9-44bb-b919-8d6d0b96ff72, invocation_id=cb06fc70-209a-4314-8804-be947ed720af, invocation_timestamp=2023-01-31T09:12:29.105Z, origin=O=Mock Company 1, L=London, C=GB, session_id=cb06fc70-209a-4314-8804-be947ed720af, session_timestamp=2023-01-31T09:12:29.105Z, thread-id=1826}
[INFO ] 2023-01-31T09:12:29,766Z [Mock network] corda.flow. - Notary responded (O=Notary, L=London, C=GB). {actor_id=Only For Testing, actor_owning_identity=O=Mock Company 1, L=London, C=GB, actor_store_id=TEST, fiber-id=10000047, flow-id=f7148450-0212-49d6-90ad-3cdc7523d2ba, invocation_id=aa597790-58a3-4105-86bb-2da6d2e78fed, invocation_timestamp=2023-01-31T09:12:28.461Z, origin=Only For Testing, session_id=aa597790-58a3-4105-86bb-2da6d2e78fed, session_timestamp=2023-01-31T09:12:28.461Z, thread-id=1826, tx_id=33D7C629BA28755B5AD90C996A6F829D319E65CC328D6C7D09216E5F9B5A9DF7}
[INFO ] 2023-01-31T09:12:29,767Z [Mock network] corda.flow. - Recording transaction locally. {actor_id=Only For Testing, actor_owning_identity=O=Mock Company 1, L=London, C=GB, actor_store_id=TEST, fiber-id=10000047, flow-id=f7148450-0212-49d6-90ad-3cdc7523d2ba, invocation_id=aa597790-58a3-4105-86bb-2da6d2e78fed, invocation_timestamp=2023-01-31T09:12:28.461Z, origin=Only For Testing, session_id=aa597790-58a3-4105-86bb-2da6d2e78fed, session_timestamp=2023-01-31T09:12:28.461Z, thread-id=1826, tx_id=33D7C629BA28755B5AD90C996A6F829D319E65CC328D6C7D09216E5F9B5A9DF7}
[INFO ] 2023-01-31T09:12:29,776Z [Mock network] corda.flow. - Recorded transaction locally successfully. {actor_id=Only For Testing, actor_owning_identity=O=Mock Company 1, L=London, C=GB, actor_store_id=TEST, fiber-id=10000047, flow-id=f7148450-0212-49d6-90ad-3cdc7523d2ba, invocation_id=aa597790-58a3-4105-86bb-2da6d2e78fed, invocation_timestamp=2023-01-31T09:12:28.461Z, origin=Only For Testing, session_id=aa597790-58a3-4105-86bb-2da6d2e78fed, session_timestamp=2023-01-31T09:12:28.461Z, thread-id=1826, tx_id=33D7C629BA28755B5AD90C996A6F829D319E65CC328D6C7D09216E5F9B5A9DF7}
[INFO ] 2023-01-31T09:12:29,786Z [Mock network] corda.flow. - Received transaction acknowledgement request from party O=Mock Company 1, L=London, C=GB. {fiber-id=10000049, flow-id=d9653171-1304-4390-8884-3a6ba4ea252b, invocation_id=f7e6cbdf-60eb-4fdb-b71e-e5d168d7fae7, invocation_timestamp=2023-01-31T09:12:28.644Z, origin=O=Mock Company 1, L=London, C=GB, session_id=f7e6cbdf-60eb-4fdb-b71e-e5d168d7fae7, session_timestamp=2023-01-31T09:12:28.644Z, thread-id=1826, tx_id=33D7C629BA28755B5AD90C996A6F829D319E65CC328D6C7D09216E5F9B5A9DF7}
[INFO ] 2023-01-31T09:12:29,792Z [Mock network] corda.flow. - Transaction dependencies resolution completed. {fiber-id=10000049, flow-id=d9653171-1304-4390-8884-3a6ba4ea252b, invocation_id=f7e6cbdf-60eb-4fdb-b71e-e5d168d7fae7, invocation_timestamp=2023-01-31T09:12:28.644Z, origin=O=Mock Company 1, L=London, C=GB, session_id=f7e6cbdf-60eb-4fdb-b71e-e5d168d7fae7, session_timestamp=2023-01-31T09:12:28.644Z, thread-id=1826, tx_id=33D7C629BA28755B5AD90C996A6F829D319E65CC328D6C7D09216E5F9B5A9DF7}
[INFO ] 2023-01-31T09:12:29,800Z [Mock network] corda.flow. - Successfully received fully signed tx. Sending it to the vault for processing. {fiber-id=10000049, flow-id=d9653171-1304-4390-8884-3a6ba4ea252b, invocation_id=f7e6cbdf-60eb-4fdb-b71e-e5d168d7fae7, invocation_timestamp=2023-01-31T09:12:28.644Z, origin=O=Mock Company 1, L=London, C=GB, session_id=f7e6cbdf-60eb-4fdb-b71e-e5d168d7fae7, session_timestamp=2023-01-31T09:12:28.644Z, thread-id=1826, tx_id=33D7C629BA28755B5AD90C996A6F829D319E65CC328D6C7D09216E5F9B5A9DF7}
[INFO ] 2023-01-31T09:12:29,808Z [Mock network] corda.flow. - Successfully recorded received transaction locally. {fiber-id=10000049, flow-id=d9653171-1304-4390-8884-3a6ba4ea252b, invocation_id=f7e6cbdf-60eb-4fdb-b71e-e5d168d7fae7, invocation_timestamp=2023-01-31T09:12:28.644Z, origin=O=Mock Company 1, L=London, C=GB, session_id=f7e6cbdf-60eb-4fdb-b71e-e5d168d7fae7, session_timestamp=2023-01-31T09:12:28.644Z, thread-id=1826, tx_id=33D7C629BA28755B5AD90C996A6F829D319E65CC328D6C7D09216E5F9B5A9DF7}
[INFO ] 2023-01-31T09:12:29,816Z [Mock network] corda.flow. - Party O=Mock Company 2, L=London, C=GB received the transaction. {actor_id=Only For Testing, actor_owning_identity=O=Mock Company 1, L=London, C=GB, actor_store_id=TEST, fiber-id=10000047, flow-id=f7148450-0212-49d6-90ad-3cdc7523d2ba, invocation_id=aa597790-58a3-4105-86bb-2da6d2e78fed, invocation_timestamp=2023-01-31T09:12:28.461Z, origin=Only For Testing, session_id=aa597790-58a3-4105-86bb-2da6d2e78fed, session_timestamp=2023-01-31T09:12:28.461Z, thread-id=1826, tx_id=33D7C629BA28755B5AD90C996A6F829D319E65CC328D6C7D09216E5F9B5A9DF7}
[INFO ] 2023-01-31T09:12:29,816Z [Mock network] corda.flow. - All parties received the transaction successfully. {actor_id=Only For Testing, actor_owning_identity=O=Mock Company 1, L=London, C=GB, actor_store_id=TEST, fiber-id=10000047, flow-id=f7148450-0212-49d6-90ad-3cdc7523d2ba, invocation_id=aa597790-58a3-4105-86bb-2da6d2e78fed, invocation_timestamp=2023-01-31T09:12:28.461Z, origin=Only For Testing, session_id=aa597790-58a3-4105-86bb-2da6d2e78fed, session_timestamp=2023-01-31T09:12:28.461Z, thread-id=1826, tx_id=33D7C629BA28755B5AD90C996A6F829D319E65CC328D6C7D09216E5F9B5A9DF7}
[INFO ] 2023-01-31T09:12:29,833Z [Test worker] persistence.CordaPersistence. - Closing HikariDataSource (HikariPool-5) {}
[INFO ] 2023-01-31T09:12:29,844Z [Test worker] internal.MockNodeMessagingService. - Status change to false {}
[INFO ] 2023-01-31T09:12:29,844Z [Test worker] internal.InternalMockNetwork$MockNode. - MessagingService active change to: false {}
[INFO ] 2023-01-31T09:12:29,845Z [Test worker] persistence.CordaPersistence. - Closing HikariDataSource (HikariPool-6) {}
[INFO ] 2023-01-31T09:12:29,860Z [Test worker] internal.MockNodeMessagingService. - Status change to false {}
[INFO ] 2023-01-31T09:12:29,860Z [Test worker] internal.InternalMockNetwork$MockNode. - MessagingService active change to: false {}
[INFO ] 2023-01-31T09:12:29,861Z [Test worker] persistence.CordaPersistence. - Closing HikariDataSource (HikariPool-7) {}
[INFO ] 2023-01-31T09:12:29,870Z [Test worker] internal.MockNodeMessagingService. - Status change to false {}
[INFO ] 2023-01-31T09:12:29,870Z [Test worker] internal.InternalMockNetwork$MockNode. - MessagingService active change to: false {}
[INFO ] 2023-01-31T09:12:29,871Z [Test worker] persistence.CordaPersistence. - Closing HikariDataSource (HikariPool-8) {}
[INFO ] 2023-01-31T09:12:29,880Z [Test worker] internal.MockNodeMessagingService. - Status change to false {}
[INFO ] 2023-01-31T09:12:29,880Z [Test worker] internal.InternalMockNetwork$MockNode. - MessagingService active change to: false {}
[INFO ] 2023-01-31T09:27:18,810Z [Test worker] internal.TestCordappImpl. - Generating CorDapp jar from local project in /Users/peter.li/Desktop/obligation-cordapp/workflows ... {}
[INFO ] 2023-01-31T09:27:19,027Z [Connection worker] internal.TestCordappImpl. - Build {}
[INFO ] 2023-01-31T09:27:20,852Z [Connection worker] internal.TestCordappImpl. - Starting Gradle Daemon {}
[INFO ] 2023-01-31T09:27:21,672Z [Connection worker] internal.TestCordappImpl. - Connecting to Gradle Daemon {}
[INFO ] 2023-01-31T09:27:21,684Z [Connection worker] internal.TestCordappImpl. - Starting Gradle Daemon {}
[INFO ] 2023-01-31T09:27:21,685Z [Connection worker] internal.TestCordappImpl. - Build {}
[INFO ] 2023-01-31T09:27:22,220Z [Connection worker] internal.TestCordappImpl. - Run build {}
[INFO ] 2023-01-31T09:27:22,243Z [Connection worker] internal.TestCordappImpl. - Evaluate settings {}
[INFO ] 2023-01-31T09:27:22,700Z [Connection worker] internal.TestCordappImpl. - Run build {}
[INFO ] 2023-01-31T09:27:22,700Z [Connection worker] internal.TestCordappImpl. - Configure build {}
[INFO ] 2023-01-31T09:27:22,700Z [Connection worker] internal.TestCordappImpl. - Load projects {}
[INFO ] 2023-01-31T09:27:22,854Z [Connection worker] internal.TestCordappImpl. - Configure build {}
[INFO ] 2023-01-31T09:27:22,865Z [Connection worker] internal.TestCordappImpl. - Configure project : {}
[INFO ] 2023-01-31T09:27:23,372Z [Connection worker] internal.TestCordappImpl. - Resolve dependencies of :classpath {}
[INFO ] 2023-01-31T09:27:23,749Z [Connection worker] internal.TestCordappImpl. - Configure project : {}
[INFO ] 2023-01-31T09:27:23,760Z [Connection worker] internal.TestCordappImpl. - Resolve files of :classpath {}
[INFO ] 2023-01-31T09:27:23,797Z [Connection worker] internal.TestCordappImpl. - Configure project : {}
[INFO ] 2023-01-31T09:27:23,798Z [Connection worker] internal.TestCordappImpl. - Resolve files of :classpath {}
[INFO ] 2023-01-31T09:27:23,798Z [Connection worker] internal.TestCordappImpl. - Configure project : {}
[INFO ] 2023-01-31T09:27:25,143Z [Connection worker] internal.TestCordappImpl. - Configure build {}
[INFO ] 2023-01-31T09:27:25,143Z [Connection worker] internal.TestCordappImpl. - Configure project :clients {}
[INFO ] 2023-01-31T09:27:25,324Z [Connection worker] internal.TestCordappImpl. - Configure build {}
[INFO ] 2023-01-31T09:27:25,324Z [Connection worker] internal.TestCordappImpl. - Configure project :contracts {}
[INFO ] 2023-01-31T09:27:25,368Z [Connection worker] internal.TestCordappImpl. - Configure build {}
[INFO ] 2023-01-31T09:27:25,368Z [Connection worker] internal.TestCordappImpl. - Configure project :workflows {}
[INFO ] 2023-01-31T09:27:25,523Z [Connection worker] internal.TestCordappImpl. - Configure build {}
[INFO ] 2023-01-31T09:27:25,523Z [Connection worker] internal.TestCordappImpl. - Run build {}
[INFO ] 2023-01-31T09:27:25,623Z [Connection worker] internal.TestCordappImpl. - Resolve dependencies of :workflows:kotlinCompilerClasspath {}
[INFO ] 2023-01-31T09:27:25,644Z [Connection worker] internal.TestCordappImpl. - Run build {}
[INFO ] 2023-01-31T09:27:25,644Z [Connection worker] internal.TestCordappImpl. - Resolve files of :workflows:kotlinCompilerClasspath {}
[INFO ] 2023-01-31T09:27:25,644Z [Connection worker] internal.TestCordappImpl. - Run build {}
[INFO ] 2023-01-31T09:27:25,644Z [Connection worker] internal.TestCordappImpl. - Resolve dependencies of :contracts:kotlinCompilerClasspath {}
[INFO ] 2023-01-31T09:27:25,657Z [Connection worker] internal.TestCordappImpl. - Run build {}
[INFO ] 2023-01-31T09:27:25,657Z [Connection worker] internal.TestCordappImpl. - Resolve files of :contracts:kotlinCompilerClasspath {}
[INFO ] 2023-01-31T09:27:25,657Z [Connection worker] internal.TestCordappImpl. - Run build {}
[INFO ] 2023-01-31T09:27:25,657Z [Connection worker] internal.TestCordappImpl. - Run tasks {}
[INFO ] 2023-01-31T09:27:25,693Z [Connection worker] internal.TestCordappImpl. - Task :contracts:compileKotlin {}
[INFO ] 2023-01-31T09:27:25,693Z [Connection worker] internal.TestCordappImpl. - Resolve files of :contracts:kotlinCompilerClasspath {}
[INFO ] 2023-01-31T09:27:25,693Z [Connection worker] internal.TestCordappImpl. - Task :contracts:compileKotlin {}
[INFO ] 2023-01-31T09:27:25,757Z [Connection worker] internal.TestCordappImpl. - Resolve dependencies of :contracts:kotlinCompilerPluginClasspath {}
[INFO ] 2023-01-31T09:27:25,757Z [Connection worker] internal.TestCordappImpl. - Task :contracts:compileKotlin {}
[INFO ] 2023-01-31T09:27:25,757Z [Connection worker] internal.TestCordappImpl. - Resolve files of :contracts:kotlinCompilerPluginClasspath {}
[INFO ] 2023-01-31T09:27:25,757Z [Connection worker] internal.TestCordappImpl. - Task :contracts:compileKotlin {}
[INFO ] 2023-01-31T09:27:25,757Z [Connection worker] internal.TestCordappImpl. - Resolve dependencies of :contracts:compileClasspath {}
[INFO ] 2023-01-31T09:27:25,836Z [Connection worker] internal.TestCordappImpl. - Task :contracts:compileKotlin {}
[INFO ] 2023-01-31T09:27:25,836Z [Connection worker] internal.TestCordappImpl. - Resolve files of :contracts:compileClasspath {}
[INFO ] 2023-01-31T09:27:25,847Z [Connection worker] internal.TestCordappImpl. - Task :contracts:compileKotlin {}
[INFO ] 2023-01-31T09:27:26,201Z [Connection worker] internal.TestCordappImpl. - Resolve files of :contracts:compileClasspath {}
[INFO ] 2023-01-31T09:27:26,202Z [Connection worker] internal.TestCordappImpl. - Task :contracts:compileKotlin {}
[INFO ] 2023-01-31T09:27:26,212Z [Connection worker] internal.TestCordappImpl. - Resolve files of :contracts:kotlinCompilerPluginClasspath {}
[INFO ] 2023-01-31T09:27:26,212Z [Connection worker] internal.TestCordappImpl. - Task :contracts:compileKotlin {}
[INFO ] 2023-01-31T09:27:26,233Z [Connection worker] internal.TestCordappImpl. - Run tasks {}
[INFO ] 2023-01-31T09:27:26,233Z [Connection worker] internal.TestCordappImpl. - Task :contracts:compileJava {}
[INFO ] 2023-01-31T09:27:26,244Z [Connection worker] internal.TestCordappImpl. - Run tasks {}
[INFO ] 2023-01-31T09:27:26,244Z [Connection worker] internal.TestCordappImpl. - Task :contracts:processResources {}
[INFO ] 2023-01-31T09:27:26,244Z [Connection worker] internal.TestCordappImpl. - Run tasks {}
[INFO ] 2023-01-31T09:27:26,245Z [Connection worker] internal.TestCordappImpl. - Task :contracts:classes {}
[INFO ] 2023-01-31T09:27:26,245Z [Connection worker] internal.TestCordappImpl. - Run tasks {}
[INFO ] 2023-01-31T09:27:26,245Z [Connection worker] internal.TestCordappImpl. - Task :contracts:configureCordappFatJar {}
[INFO ] 2023-01-31T09:27:26,256Z [Connection worker] internal.TestCordappImpl. - Resolve dependencies of :contracts:runtime {}
[INFO ] 2023-01-31T09:27:26,278Z [Connection worker] internal.TestCordappImpl. - Task :contracts:configureCordappFatJar {}
[INFO ] 2023-01-31T09:27:26,278Z [Connection worker] internal.TestCordappImpl. - Resolve files of :contracts:runtime {}
[INFO ] 2023-01-31T09:27:26,290Z [Connection worker] internal.TestCordappImpl. - Task :contracts:configureCordappFatJar {}
[INFO ] 2023-01-31T09:27:26,290Z [Connection worker] internal.TestCordappImpl. - Resolve files of :contracts:runtime {}
[INFO ] 2023-01-31T09:27:26,290Z [Connection worker] internal.TestCordappImpl. - Task :contracts:configureCordappFatJar {}
[INFO ] 2023-01-31T09:27:26,291Z [Connection worker] internal.TestCordappImpl. - Resolve files of :contracts:runtime {}
[INFO ] 2023-01-31T09:27:26,291Z [Connection worker] internal.TestCordappImpl. - Task :contracts:configureCordappFatJar {}
[INFO ] 2023-01-31T09:27:26,291Z [Connection worker] internal.TestCordappImpl. - Resolve files of :contracts:runtime {}
[INFO ] 2023-01-31T09:27:26,291Z [Connection worker] internal.TestCordappImpl. - Task :contracts:configureCordappFatJar {}
[INFO ] 2023-01-31T09:27:26,291Z [Connection worker] internal.TestCordappImpl. - Resolve files of :contracts:runtime {}
[INFO ] 2023-01-31T09:27:26,291Z [Connection worker] internal.TestCordappImpl. - Task :contracts:configureCordappFatJar {}
[INFO ] 2023-01-31T09:27:26,291Z [Connection worker] internal.TestCordappImpl. - Run tasks {}
[INFO ] 2023-01-31T09:27:26,291Z [Connection worker] internal.TestCordappImpl. - Task :contracts:inspectClassesForKotlinIC {}
[INFO ] 2023-01-31T09:27:26,313Z [Connection worker] internal.TestCordappImpl. - Run tasks {}
[INFO ] 2023-01-31T09:27:26,314Z [Connection worker] internal.TestCordappImpl. - Task :contracts:jar {}
[INFO ] 2023-01-31T09:27:26,324Z [Connection worker] internal.TestCordappImpl. - Run tasks {}
[INFO ] 2023-01-31T09:27:26,324Z [Connection worker] internal.TestCordappImpl. - Task :workflows:compileKotlin {}
[INFO ] 2023-01-31T09:27:26,324Z [Connection worker] internal.TestCordappImpl. - Resolve files of :workflows:kotlinCompilerClasspath {}
[INFO ] 2023-01-31T09:27:26,324Z [Connection worker] internal.TestCordappImpl. - Task :workflows:compileKotlin {}
[INFO ] 2023-01-31T09:27:26,345Z [Connection worker] internal.TestCordappImpl. - Resolve dependencies of :workflows:kotlinCompilerPluginClasspath {}
[INFO ] 2023-01-31T09:27:26,346Z [Connection worker] internal.TestCordappImpl. - Task :workflows:compileKotlin {}
[INFO ] 2023-01-31T09:27:26,346Z [Connection worker] internal.TestCordappImpl. - Resolve files of :workflows:kotlinCompilerPluginClasspath {}
[INFO ] 2023-01-31T09:27:26,346Z [Connection worker] internal.TestCordappImpl. - Task :workflows:compileKotlin {}
[INFO ] 2023-01-31T09:27:26,346Z [Connection worker] internal.TestCordappImpl. - Resolve dependencies of :workflows:compileClasspath {}
[INFO ] 2023-01-31T09:27:26,366Z [Connection worker] internal.TestCordappImpl. - Task :workflows:compileKotlin {}
[INFO ] 2023-01-31T09:27:26,366Z [Connection worker] internal.TestCordappImpl. - Resolve files of :workflows:compileClasspath {}
[INFO ] 2023-01-31T09:27:26,366Z [Connection worker] internal.TestCordappImpl. - Task :workflows:compileKotlin {}
[INFO ] 2023-01-31T09:27:26,366Z [Connection worker] internal.TestCordappImpl. - Resolve files of :workflows:compileClasspath {}
[INFO ] 2023-01-31T09:27:26,366Z [Connection worker] internal.TestCordappImpl. - Task :workflows:compileKotlin {}
[INFO ] 2023-01-31T09:27:26,376Z [Connection worker] internal.TestCordappImpl. - Resolve files of :workflows:kotlinCompilerPluginClasspath {}
[INFO ] 2023-01-31T09:27:26,376Z [Connection worker] internal.TestCordappImpl. - Task :workflows:compileKotlin {}
[INFO ] 2023-01-31T09:27:26,388Z [Connection worker] internal.TestCordappImpl. - Run tasks {}
[INFO ] 2023-01-31T09:27:26,388Z [Connection worker] internal.TestCordappImpl. - Task :workflows:compileJava {}
[INFO ] 2023-01-31T09:27:26,389Z [Connection worker] internal.TestCordappImpl. - Run tasks {}
[INFO ] 2023-01-31T09:27:26,389Z [Connection worker] internal.TestCordappImpl. - Task :workflows:processResources {}
[INFO ] 2023-01-31T09:27:26,389Z [Connection worker] internal.TestCordappImpl. - Run tasks {}
[INFO ] 2023-01-31T09:27:26,389Z [Connection worker] internal.TestCordappImpl. - Task :workflows:classes {}
[INFO ] 2023-01-31T09:27:26,389Z [Connection worker] internal.TestCordappImpl. - Run tasks {}
[INFO ] 2023-01-31T09:27:26,389Z [Connection worker] internal.TestCordappImpl. - Task :workflows:configureCordappFatJar {}
[INFO ] 2023-01-31T09:27:26,389Z [Connection worker] internal.TestCordappImpl. - Resolve dependencies of :workflows:runtime {}
[INFO ] 2023-01-31T09:27:26,420Z [Connection worker] internal.TestCordappImpl. - Task :workflows:configureCordappFatJar {}
[INFO ] 2023-01-31T09:27:26,420Z [Connection worker] internal.TestCordappImpl. - Resolve files of :workflows:runtime {}
[INFO ] 2023-01-31T09:27:26,420Z [Connection worker] internal.TestCordappImpl. - Task :workflows:configureCordappFatJar {}
[INFO ] 2023-01-31T09:27:26,420Z [Connection worker] internal.TestCordappImpl. - Resolve files of :workflows:runtime {}
[INFO ] 2023-01-31T09:27:26,420Z [Connection worker] internal.TestCordappImpl. - Task :workflows:configureCordappFatJar {}
[INFO ] 2023-01-31T09:27:26,420Z [Connection worker] internal.TestCordappImpl. - Resolve files of :workflows:runtime {}
[INFO ] 2023-01-31T09:27:26,421Z [Connection worker] internal.TestCordappImpl. - Task :workflows:configureCordappFatJar {}
[INFO ] 2023-01-31T09:27:26,421Z [Connection worker] internal.TestCordappImpl. - Resolve files of :workflows:runtime {}
[INFO ] 2023-01-31T09:27:26,421Z [Connection worker] internal.TestCordappImpl. - Task :workflows:configureCordappFatJar {}
[INFO ] 2023-01-31T09:27:26,421Z [Connection worker] internal.TestCordappImpl. - Resolve files of :workflows:runtime {}
[INFO ] 2023-01-31T09:27:26,421Z [Connection worker] internal.TestCordappImpl. - Task :workflows:configureCordappFatJar {}
[INFO ] 2023-01-31T09:27:26,421Z [Connection worker] internal.TestCordappImpl. - Resolve files of :workflows:runtime {}
[INFO ] 2023-01-31T09:27:26,421Z [Connection worker] internal.TestCordappImpl. - Task :workflows:configureCordappFatJar {}
[INFO ] 2023-01-31T09:27:26,421Z [Connection worker] internal.TestCordappImpl. - Resolve files of :workflows:runtime {}
[INFO ] 2023-01-31T09:27:26,421Z [Connection worker] internal.TestCordappImpl. - Task :workflows:configureCordappFatJar {}
[INFO ] 2023-01-31T09:27:26,421Z [Connection worker] internal.TestCordappImpl. - Resolve files of :workflows:runtime {}
[INFO ] 2023-01-31T09:27:26,421Z [Connection worker] internal.TestCordappImpl. - Task :workflows:configureCordappFatJar {}
[INFO ] 2023-01-31T09:27:26,421Z [Connection worker] internal.TestCordappImpl. - Run tasks {}
[INFO ] 2023-01-31T09:27:26,421Z [Connection worker] internal.TestCordappImpl. - Task :workflows:inspectClassesForKotlinIC {}
[INFO ] 2023-01-31T09:27:26,453Z [Connection worker] internal.TestCordappImpl. - Run tasks {}
[INFO ] 2023-01-31T09:27:26,453Z [Connection worker] internal.TestCordappImpl. - Task :workflows:jar {}
[INFO ] 2023-01-31T09:27:28,183Z [Connection worker] internal.TestCordappImpl. - Run tasks {}
[INFO ] 2023-01-31T09:27:28,195Z [Connection worker] internal.TestCordappImpl. - Run build {}
[INFO ] 2023-01-31T09:27:28,196Z [Connection worker] internal.TestCordappImpl. - Build model 'java.lang.Void' for project ':workflows' {}
[INFO ] 2023-01-31T09:27:28,196Z [Connection worker] internal.TestCordappImpl. - Run build {}
[INFO ] 2023-01-31T09:27:28,201Z [Connection worker] internal.TestCordappImpl. - Build {}
[INFO ] 2023-01-31T09:27:28,219Z [Connection worker] internal.TestCordappImpl. - Deleting unused version-specific caches in /Users/peter.li/Desktop/obligation-cordapp/.gradle {}
[INFO ] 2023-01-31T09:27:28,220Z [Connection worker] internal.TestCordappImpl. - Build {}
[INFO ] 2023-01-31T09:27:28,244Z [Connection worker] internal.TestCordappImpl. -  {}
[INFO ] 2023-01-31T09:27:33,371Z [Test worker] cordapp.JarScanningCordappLoader. - Looking for CorDapps in [build/mock-network/20230131-092717.908-958A9F813F34ED7B/nodes/0/cordapps] {}
[INFO ] 2023-01-31T09:27:33,380Z [Test worker] cordapp.JarScanningCordappLoader. - Loading CorDapps from RestrictedURL(url=file:/Users/peter.li/Desktop/obligation-cordapp/workflows/build/mock-network/20230131-092717.908-958A9F813F34ED7B/nodes/0/cordapps/accounts-contracts-1.0.jar, rootPackageName=null), RestrictedURL(url=file:/Users/peter.li/Desktop/obligation-cordapp/workflows/build/mock-network/20230131-092717.908-958A9F813F34ED7B/nodes/0/cordapps/accounts-workflows-1.0.jar, rootPackageName=null), RestrictedURL(url=file:/Users/peter.li/Desktop/obligation-cordapp/workflows/build/mock-network/20230131-092717.908-958A9F813F34ED7B/nodes/0/cordapps/corda-finance-contracts-4.9.jar, rootPackageName=null), RestrictedURL(url=file:/Users/peter.li/Desktop/obligation-cordapp/workflows/build/mock-network/20230131-092717.908-958A9F813F34ED7B/nodes/0/cordapps/contracts-1.0.jar, rootPackageName=null), RestrictedURL(url=file:/Users/peter.li/Desktop/obligation-cordapp/workflows/build/mock-network/20230131-092717.908-958A9F813F34ED7B/nodes/0/cordapps/workflows-1.0.jar, rootPackageName=null) {}
[INFO ] 2023-01-31T09:27:33,391Z [Test worker] cordapp.JarScanningCordappLoader. - Scanning CorDapp in file:/Users/peter.li/Desktop/obligation-cordapp/workflows/build/mock-network/20230131-092717.908-958A9F813F34ED7B/nodes/0/cordapps/accounts-contracts-1.0.jar {}
[INFO ] 2023-01-31T09:27:33,515Z [Test worker] cordapp.JarScanningCordappLoader. - Scanning CorDapp in file:/Users/peter.li/Desktop/obligation-cordapp/workflows/build/mock-network/20230131-092717.908-958A9F813F34ED7B/nodes/0/cordapps/accounts-workflows-1.0.jar {}
[INFO ] 2023-01-31T09:27:33,699Z [Test worker] cordapp.JarScanningCordappLoader. - Scanning CorDapp in file:/Users/peter.li/Desktop/obligation-cordapp/workflows/build/mock-network/20230131-092717.908-958A9F813F34ED7B/nodes/0/cordapps/corda-finance-contracts-4.9.jar {}
[INFO ] 2023-01-31T09:27:33,841Z [Test worker] cordapp.JarScanningCordappLoader. - Scanning CorDapp in file:/Users/peter.li/Desktop/obligation-cordapp/workflows/build/mock-network/20230131-092717.908-958A9F813F34ED7B/nodes/0/cordapps/contracts-1.0.jar {}
[INFO ] 2023-01-31T09:27:33,853Z [Test worker] cordapp.JarScanningCordappLoader. - Scanning CorDapp in file:/Users/peter.li/Desktop/obligation-cordapp/workflows/build/mock-network/20230131-092717.908-958A9F813F34ED7B/nodes/0/cordapps/workflows-1.0.jar {}
[INFO ] 2023-01-31T09:27:35,233Z [Test worker] internal.InternalMockNetwork$MockNode. - MessagingService active change to: false {}
[INFO ] 2023-01-31T09:27:35,486Z [Test worker] internal.InternalMockNetwork$MockNode. - Flow external operation executor has a max of 2 threads {}
[INFO ] 2023-01-31T09:27:35,554Z [Test worker] internal.InternalMockNetwork$MockNode. - Node starting up ... {}
[INFO ] 2023-01-31T09:27:35,572Z [Test worker] internal.KeyStoreHandler. - Loaded trusted root certificate: DL7fwxLm5xbiMD8adUuYTsPZHAict46Ng4w6RNcySt5vAw, alias: cordarootca {}
[INFO ] 2023-01-31T09:27:35,577Z [Test worker] internal.KeyStoreHandler. - Loaded node identity key: DL4EAH6iWeQACNpjkSFNx5KxNjKh8VZkGGyVAveZLLZ95w, alias: identity-private-key {}
[INFO ] 2023-01-31T09:27:35,703Z [Test worker] internal.NodeFlowManager. - Registered com.r3.corda.lib.accounts.workflows.flows.ShareStateAndSyncAccounts to initiate com.r3.corda.lib.accounts.workflows.flows.ReceiveStateAndSyncAccounts (version 1) {}
[INFO ] 2023-01-31T09:27:35,704Z [Test worker] internal.NodeFlowManager. - Registered com.r3.corda.lib.accounts.workflows.flows.ShareStateWithAccount to initiate com.r3.corda.lib.accounts.workflows.flows.ReceiveStateForAccount (version 1) {}
[INFO ] 2023-01-31T09:27:35,704Z [Test worker] internal.NodeFlowManager. - Registered com.r3.corda.lib.accounts.workflows.flows.RequestAccountInfo to initiate com.r3.corda.lib.accounts.workflows.flows.RequestAccountInfoHandler (version 1) {}
[INFO ] 2023-01-31T09:27:35,705Z [Test worker] internal.NodeFlowManager. - Registered com.r3.corda.lib.accounts.workflows.flows.RequestKeyForAccount to initiate com.r3.corda.lib.accounts.workflows.flows.SendKeyForAccount (version 1) {}
[INFO ] 2023-01-31T09:27:35,705Z [Test worker] internal.NodeFlowManager. - Registered com.r3.corda.lib.accounts.workflows.flows.ShareAccountInfo to initiate com.r3.corda.lib.accounts.workflows.flows.ShareAccountInfoHandler (version 1) {}
[INFO ] 2023-01-31T09:27:35,706Z [Test worker] internal.NodeFlowManager. - Registered net.corda.samples.obligation.flows.IOUIssueFlow to initiate net.corda.samples.obligation.flows.IOUIssueFlowResponder (version 1) {}
[INFO ] 2023-01-31T09:27:35,706Z [Test worker] internal.NodeFlowManager. - Registered net.corda.samples.obligation.flows.IOUSettleFlow to initiate net.corda.samples.obligation.flows.IOUSettleFlowResponder (version 1) {}
[INFO ] 2023-01-31T09:27:35,706Z [Test worker] internal.NodeFlowManager. - Registered net.corda.samples.obligation.flows.IOUTransferFlow to initiate net.corda.samples.obligation.flows.IOUTransferFlowResponder (version 1) {}
[INFO ] 2023-01-31T09:27:35,790Z [Test worker] internal.InternalMockNetwork$MockNode. - Loaded network parameters: NetworkParameters {
      minimumPlatformVersion=4
      notaries=[NotaryInfo(identity=O=Notary, L=London, C=GB, validating=true)]
      maxMessageSize=10485760
      maxTransactionSize=524288000
      whitelistedContractImplementations {
        
      }
      eventHorizon=PT720H
      packageOwnership {
        
      }
      modifiedTime=2023-01-31T09:27:17.545Z
      epoch=1
  } {}
[INFO ] 2023-01-31T09:27:41,116Z [Test worker] internal.InternalMockNetwork$MockNode. - Connected to H2 database. {}
[INFO ] 2023-01-31T09:27:41,200Z [Test worker] persistence.HibernateConfiguration. - Init HibernateConfiguration for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1), AccountsContractsSchemaV1(name=com.r3.corda.lib.accounts.contracts.internal.schemas.AccountsContractsSchema, version=1), AccountsWorkflowsSchemaV1(name=com.r3.corda.lib.accounts.workflows.internal.schemas.AccountsWorkflowsSchema, version=1), CashSchemaV1(name=net.corda.finance.schemas.CashSchema, version=1), CommercialPaperSchemaV1(name=net.corda.finance.schemas.CommercialPaperSchema, version=1), JPANotarySchemaV1(name=net.corda.notary.jpa.JPANotarySchema, version=1)] {}
[INFO ] 2023-01-31T09:27:41,205Z [Test worker] factory.BaseSessionFactoryFactory. - Creating session factory for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1), AccountsContractsSchemaV1(name=com.r3.corda.lib.accounts.contracts.internal.schemas.AccountsContractsSchema, version=1), AccountsWorkflowsSchemaV1(name=com.r3.corda.lib.accounts.workflows.internal.schemas.AccountsWorkflowsSchema, version=1), CashSchemaV1(name=net.corda.finance.schemas.CashSchema, version=1), CommercialPaperSchemaV1(name=net.corda.finance.schemas.CommercialPaperSchema, version=1), JPANotarySchemaV1(name=net.corda.notary.jpa.JPANotarySchema, version=1)] {}
[INFO ] 2023-01-31T09:27:43,861Z [Test worker] factory.BaseSessionFactoryFactory. - Created session factory for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1), AccountsContractsSchemaV1(name=com.r3.corda.lib.accounts.contracts.internal.schemas.AccountsContractsSchema, version=1), AccountsWorkflowsSchemaV1(name=com.r3.corda.lib.accounts.workflows.internal.schemas.AccountsWorkflowsSchema, version=1), CashSchemaV1(name=net.corda.finance.schemas.CashSchema, version=1), CommercialPaperSchemaV1(name=net.corda.finance.schemas.CommercialPaperSchema, version=1), JPANotarySchemaV1(name=net.corda.notary.jpa.JPANotarySchema, version=1)] {}
[INFO ] 2023-01-31T09:27:44,130Z [Test worker] internal.InternalMockNetwork$MockNode. - Node-info has changed so submitting update. Old node-info was null {}
[INFO ] 2023-01-31T09:27:44,137Z [Test worker] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Notary, L=London, C=GB], platformVersion=11, serial=1675157264130), owningKey=DL4EAH6iWeQACNpjkSFNx5KxNjKh8VZkGGyVAveZLLZ95w {}
[INFO ] 2023-01-31T09:27:44,137Z [Test worker] network.PersistentNetworkMapCache. - No previous node found for O=Notary, L=London, C=GB {}
[INFO ] 2023-01-31T09:27:44,293Z [Test worker] internal.InternalMockNetwork$MockNode. - New node-info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Notary, L=London, C=GB], platformVersion=11, serial=1675157264130) {}
[INFO ] 2023-01-31T09:27:44,342Z [Test worker] network.NetworkMapUpdater. - Auto-accept enabled for network parameter changes which modify only: [epoch, modifiedTime, packageOwnership, whitelistedContractImplementations] {}
[INFO ] 2023-01-31T09:27:44,372Z [Test worker] internal.MockNodeMessagingService. - Status change to true {}
[INFO ] 2023-01-31T09:27:44,374Z [Test worker] internal.InternalMockNetwork$MockNode. - MessagingService active change to: true {}
[INFO ] 2023-01-31T09:27:44,406Z [MockNode-1-2] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Notary, L=London, C=GB], platformVersion=11, serial=1675157264130), owningKey=DL4EAH6iWeQACNpjkSFNx5KxNjKh8VZkGGyVAveZLLZ95w {}
[INFO ] 2023-01-31T09:27:44,406Z [MockNode-1-2] network.PersistentNetworkMapCache. - Previous node was identical to incoming one - doing nothing {}
[INFO ] 2023-01-31T09:27:44,504Z [Test worker] persistence.NodeAttachmentService. - Stored new attachment: id=D370FD972C7E07CE73F4F9B7886D226807F6B16C4EE287398B9C69384109DC14 uploader=app filename=Accounts SDK - States and Contracts {}
[INFO ] 2023-01-31T09:27:44,543Z [Test worker] persistence.NodeAttachmentService. - Stored new attachment: id=BD0C932EAF8B1FE96DCBBF275B914BCD776D14EDC8F97DCEBF7E15DA09C606AE uploader=app filename=Corda Finance Demo {}
[INFO ] 2023-01-31T09:27:44,567Z [Test worker] persistence.NodeAttachmentService. - Stored new attachment: id=6214951ECBC6BF54E3D3316B3EC4BBC038089B6478B86BD9FC3B35055850847E uploader=app filename=Obligation Contracts {}
[INFO ] 2023-01-31T09:27:44,581Z [Test worker] internal.InternalMockNetwork$MockNode. - Installed com.r3.corda.lib.accounts.workflows.services.KeyManagementBackedAccountService Corda service {}
[INFO ] 2023-01-31T09:27:44,581Z [Test worker] utilities.NotaryLoader. - Starting notary service: class net.corda.notary.jpa.JPANotaryService {}
[INFO ] 2023-01-31T09:27:45,109Z [Test worker] statemachine.SingleThreadedStateMachineManager. - Node ready, info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Notary, L=London, C=GB], platformVersion=11, serial=1675157264130) {}
[INFO ] 2023-01-31T09:27:45,358Z [Test worker] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Notary, L=London, C=GB], platformVersion=11, serial=1675157264130), owningKey=DL4EAH6iWeQACNpjkSFNx5KxNjKh8VZkGGyVAveZLLZ95w {}
[INFO ] 2023-01-31T09:27:45,358Z [Test worker] network.PersistentNetworkMapCache. - Previous node was identical to incoming one - doing nothing {}
[INFO ] 2023-01-31T09:27:45,358Z [Test worker] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Notary, L=London, C=GB], platformVersion=11, serial=1675157264130), owningKey=DL4EAH6iWeQACNpjkSFNx5KxNjKh8VZkGGyVAveZLLZ95w {}
[INFO ] 2023-01-31T09:27:45,358Z [Test worker] network.PersistentNetworkMapCache. - Previous node was identical to incoming one - doing nothing {}
[INFO ] 2023-01-31T09:27:45,375Z [Test worker] cordapp.JarScanningCordappLoader. - Looking for CorDapps in [build/mock-network/20230131-092717.908-958A9F813F34ED7B/nodes/1/cordapps] {}
[INFO ] 2023-01-31T09:27:45,376Z [Test worker] cordapp.JarScanningCordappLoader. - Loading CorDapps from RestrictedURL(url=file:/Users/peter.li/Desktop/obligation-cordapp/workflows/build/mock-network/20230131-092717.908-958A9F813F34ED7B/nodes/1/cordapps/accounts-contracts-1.0.jar, rootPackageName=null), RestrictedURL(url=file:/Users/peter.li/Desktop/obligation-cordapp/workflows/build/mock-network/20230131-092717.908-958A9F813F34ED7B/nodes/1/cordapps/accounts-workflows-1.0.jar, rootPackageName=null), RestrictedURL(url=file:/Users/peter.li/Desktop/obligation-cordapp/workflows/build/mock-network/20230131-092717.908-958A9F813F34ED7B/nodes/1/cordapps/corda-finance-contracts-4.9.jar, rootPackageName=null), RestrictedURL(url=file:/Users/peter.li/Desktop/obligation-cordapp/workflows/build/mock-network/20230131-092717.908-958A9F813F34ED7B/nodes/1/cordapps/contracts-1.0.jar, rootPackageName=null), RestrictedURL(url=file:/Users/peter.li/Desktop/obligation-cordapp/workflows/build/mock-network/20230131-092717.908-958A9F813F34ED7B/nodes/1/cordapps/workflows-1.0.jar, rootPackageName=null) {}
[INFO ] 2023-01-31T09:27:45,376Z [Test worker] cordapp.JarScanningCordappLoader. - Scanning CorDapp in file:/Users/peter.li/Desktop/obligation-cordapp/workflows/build/mock-network/20230131-092717.908-958A9F813F34ED7B/nodes/1/cordapps/accounts-contracts-1.0.jar {}
[INFO ] 2023-01-31T09:27:45,405Z [Test worker] cordapp.JarScanningCordappLoader. - Scanning CorDapp in file:/Users/peter.li/Desktop/obligation-cordapp/workflows/build/mock-network/20230131-092717.908-958A9F813F34ED7B/nodes/1/cordapps/accounts-workflows-1.0.jar {}
[INFO ] 2023-01-31T09:27:45,418Z [Test worker] cordapp.JarScanningCordappLoader. - Scanning CorDapp in file:/Users/peter.li/Desktop/obligation-cordapp/workflows/build/mock-network/20230131-092717.908-958A9F813F34ED7B/nodes/1/cordapps/corda-finance-contracts-4.9.jar {}
[INFO ] 2023-01-31T09:27:45,434Z [Test worker] cordapp.JarScanningCordappLoader. - Scanning CorDapp in file:/Users/peter.li/Desktop/obligation-cordapp/workflows/build/mock-network/20230131-092717.908-958A9F813F34ED7B/nodes/1/cordapps/contracts-1.0.jar {}
[INFO ] 2023-01-31T09:27:45,441Z [Test worker] cordapp.JarScanningCordappLoader. - Scanning CorDapp in file:/Users/peter.li/Desktop/obligation-cordapp/workflows/build/mock-network/20230131-092717.908-958A9F813F34ED7B/nodes/1/cordapps/workflows-1.0.jar {}
[INFO ] 2023-01-31T09:27:45,479Z [Test worker] internal.InternalMockNetwork$MockNode. - MessagingService active change to: false {}
[INFO ] 2023-01-31T09:27:45,480Z [Test worker] internal.InternalMockNetwork$MockNode. - Flow external operation executor has a max of 2 threads {}
[INFO ] 2023-01-31T09:27:45,482Z [Test worker] internal.InternalMockNetwork$MockNode. - Node starting up ... {}
[INFO ] 2023-01-31T09:27:45,529Z [Test worker] internal.KeyStoreHandler. - Loaded trusted root certificate: DL7fwxLm5xbiMD8adUuYTsPZHAict46Ng4w6RNcySt5vAw, alias: cordarootca {}
[INFO ] 2023-01-31T09:27:45,529Z [Test worker] internal.KeyStoreHandler. - Loaded node identity key: DLAvTo8PLH1uNTLuWtz2TEvmhwsoeWnMjGQQqWE6y2GMrM, alias: identity-private-key {}
[INFO ] 2023-01-31T09:27:45,537Z [Test worker] internal.NodeFlowManager. - Registered com.r3.corda.lib.accounts.workflows.flows.ShareStateAndSyncAccounts to initiate com.r3.corda.lib.accounts.workflows.flows.ReceiveStateAndSyncAccounts (version 1) {}
[INFO ] 2023-01-31T09:27:45,537Z [Test worker] internal.NodeFlowManager. - Registered com.r3.corda.lib.accounts.workflows.flows.ShareStateWithAccount to initiate com.r3.corda.lib.accounts.workflows.flows.ReceiveStateForAccount (version 1) {}
[INFO ] 2023-01-31T09:27:45,537Z [Test worker] internal.NodeFlowManager. - Registered com.r3.corda.lib.accounts.workflows.flows.RequestAccountInfo to initiate com.r3.corda.lib.accounts.workflows.flows.RequestAccountInfoHandler (version 1) {}
[INFO ] 2023-01-31T09:27:45,537Z [Test worker] internal.NodeFlowManager. - Registered com.r3.corda.lib.accounts.workflows.flows.RequestKeyForAccount to initiate com.r3.corda.lib.accounts.workflows.flows.SendKeyForAccount (version 1) {}
[INFO ] 2023-01-31T09:27:45,537Z [Test worker] internal.NodeFlowManager. - Registered com.r3.corda.lib.accounts.workflows.flows.ShareAccountInfo to initiate com.r3.corda.lib.accounts.workflows.flows.ShareAccountInfoHandler (version 1) {}
[INFO ] 2023-01-31T09:27:45,537Z [Test worker] internal.NodeFlowManager. - Registered net.corda.samples.obligation.flows.IOUIssueFlow to initiate net.corda.samples.obligation.flows.IOUIssueFlowResponder (version 1) {}
[INFO ] 2023-01-31T09:27:45,537Z [Test worker] internal.NodeFlowManager. - Registered net.corda.samples.obligation.flows.IOUSettleFlow to initiate net.corda.samples.obligation.flows.IOUSettleFlowResponder (version 1) {}
[INFO ] 2023-01-31T09:27:45,538Z [Test worker] internal.NodeFlowManager. - Registered net.corda.samples.obligation.flows.IOUTransferFlow to initiate net.corda.samples.obligation.flows.IOUTransferFlowResponder (version 1) {}
[INFO ] 2023-01-31T09:27:45,543Z [Test worker] internal.InternalMockNetwork$MockNode. - Loaded network parameters: NetworkParameters {
      minimumPlatformVersion=4
      notaries=[NotaryInfo(identity=O=Notary, L=London, C=GB, validating=true)]
      maxMessageSize=10485760
      maxTransactionSize=524288000
      whitelistedContractImplementations {
        
      }
      eventHorizon=PT720H
      packageOwnership {
        
      }
      modifiedTime=2023-01-31T09:27:17.545Z
      epoch=1
  } {}
[INFO ] 2023-01-31T09:27:46,244Z [Test worker] internal.InternalMockNetwork$MockNode. - Connected to H2 database. {}
[INFO ] 2023-01-31T09:27:46,245Z [Test worker] persistence.HibernateConfiguration. - Init HibernateConfiguration for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1), AccountsContractsSchemaV1(name=com.r3.corda.lib.accounts.contracts.internal.schemas.AccountsContractsSchema, version=1), AccountsWorkflowsSchemaV1(name=com.r3.corda.lib.accounts.workflows.internal.schemas.AccountsWorkflowsSchema, version=1), CashSchemaV1(name=net.corda.finance.schemas.CashSchema, version=1), CommercialPaperSchemaV1(name=net.corda.finance.schemas.CommercialPaperSchema, version=1)] {}
[INFO ] 2023-01-31T09:27:46,246Z [Test worker] factory.BaseSessionFactoryFactory. - Creating session factory for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1), AccountsContractsSchemaV1(name=com.r3.corda.lib.accounts.contracts.internal.schemas.AccountsContractsSchema, version=1), AccountsWorkflowsSchemaV1(name=com.r3.corda.lib.accounts.workflows.internal.schemas.AccountsWorkflowsSchema, version=1), CashSchemaV1(name=net.corda.finance.schemas.CashSchema, version=1), CommercialPaperSchemaV1(name=net.corda.finance.schemas.CommercialPaperSchema, version=1)] {}
[INFO ] 2023-01-31T09:27:46,440Z [Test worker] factory.BaseSessionFactoryFactory. - Created session factory for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1), AccountsContractsSchemaV1(name=com.r3.corda.lib.accounts.contracts.internal.schemas.AccountsContractsSchema, version=1), AccountsWorkflowsSchemaV1(name=com.r3.corda.lib.accounts.workflows.internal.schemas.AccountsWorkflowsSchema, version=1), CashSchemaV1(name=net.corda.finance.schemas.CashSchema, version=1), CommercialPaperSchemaV1(name=net.corda.finance.schemas.CommercialPaperSchema, version=1)] {}
[INFO ] 2023-01-31T09:27:46,445Z [Test worker] internal.InternalMockNetwork$MockNode. - Node-info has changed so submitting update. Old node-info was null {}
[INFO ] 2023-01-31T09:27:46,450Z [Test worker] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 1, L=London, C=GB], platformVersion=11, serial=1675157266445), owningKey=DLAvTo8PLH1uNTLuWtz2TEvmhwsoeWnMjGQQqWE6y2GMrM {}
[INFO ] 2023-01-31T09:27:46,450Z [Test worker] network.PersistentNetworkMapCache. - No previous node found for O=Mock Company 1, L=London, C=GB {}
[INFO ] 2023-01-31T09:27:46,458Z [Test worker] internal.InternalMockNetwork$MockNode. - New node-info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 1, L=London, C=GB], platformVersion=11, serial=1675157266445) {}
[INFO ] 2023-01-31T09:27:46,466Z [Test worker] network.NetworkMapUpdater. - Auto-accept enabled for network parameter changes which modify only: [epoch, modifiedTime, packageOwnership, whitelistedContractImplementations] {}
[INFO ] 2023-01-31T09:27:46,466Z [Test worker] internal.MockNodeMessagingService. - Status change to true {}
[INFO ] 2023-01-31T09:27:46,466Z [Test worker] internal.InternalMockNetwork$MockNode. - MessagingService active change to: true {}
[INFO ] 2023-01-31T09:27:46,478Z [MockNode-2-2] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 1, L=London, C=GB], platformVersion=11, serial=1675157266445), owningKey=DLAvTo8PLH1uNTLuWtz2TEvmhwsoeWnMjGQQqWE6y2GMrM {}
[INFO ] 2023-01-31T09:27:46,478Z [MockNode-2-2] network.PersistentNetworkMapCache. - Previous node was identical to incoming one - doing nothing {}
[INFO ] 2023-01-31T09:27:46,506Z [Test worker] persistence.NodeAttachmentService. - Stored new attachment: id=D370FD972C7E07CE73F4F9B7886D226807F6B16C4EE287398B9C69384109DC14 uploader=app filename=Accounts SDK - States and Contracts {}
[INFO ] 2023-01-31T09:27:46,564Z [Test worker] persistence.NodeAttachmentService. - Stored new attachment: id=BD0C932EAF8B1FE96DCBBF275B914BCD776D14EDC8F97DCEBF7E15DA09C606AE uploader=app filename=Corda Finance Demo {}
[INFO ] 2023-01-31T09:27:46,584Z [Test worker] persistence.NodeAttachmentService. - Stored new attachment: id=6214951ECBC6BF54E3D3316B3EC4BBC038089B6478B86BD9FC3B35055850847E uploader=app filename=Obligation Contracts {}
[INFO ] 2023-01-31T09:27:46,588Z [Test worker] internal.InternalMockNetwork$MockNode. - Installed com.r3.corda.lib.accounts.workflows.services.KeyManagementBackedAccountService Corda service {}
[INFO ] 2023-01-31T09:27:46,618Z [Test worker] statemachine.SingleThreadedStateMachineManager. - Node ready, info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 1, L=London, C=GB], platformVersion=11, serial=1675157266445) {}
[INFO ] 2023-01-31T09:27:46,621Z [Test worker] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Notary, L=London, C=GB], platformVersion=11, serial=1675157264130), owningKey=DL4EAH6iWeQACNpjkSFNx5KxNjKh8VZkGGyVAveZLLZ95w {}
[INFO ] 2023-01-31T09:27:46,621Z [Test worker] network.PersistentNetworkMapCache. - No previous node found for O=Notary, L=London, C=GB {}
[INFO ] 2023-01-31T09:27:46,636Z [Test worker] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 1, L=London, C=GB], platformVersion=11, serial=1675157266445), owningKey=DLAvTo8PLH1uNTLuWtz2TEvmhwsoeWnMjGQQqWE6y2GMrM {}
[INFO ] 2023-01-31T09:27:46,636Z [Test worker] network.PersistentNetworkMapCache. - No previous node found for O=Mock Company 1, L=London, C=GB {}
[INFO ] 2023-01-31T09:27:46,645Z [Test worker] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 1, L=London, C=GB], platformVersion=11, serial=1675157266445), owningKey=DLAvTo8PLH1uNTLuWtz2TEvmhwsoeWnMjGQQqWE6y2GMrM {}
[INFO ] 2023-01-31T09:27:46,646Z [Test worker] network.PersistentNetworkMapCache. - Previous node was identical to incoming one - doing nothing {}
[INFO ] 2023-01-31T09:27:46,646Z [Test worker] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 1, L=London, C=GB], platformVersion=11, serial=1675157266445), owningKey=DLAvTo8PLH1uNTLuWtz2TEvmhwsoeWnMjGQQqWE6y2GMrM {}
[INFO ] 2023-01-31T09:27:46,646Z [Test worker] network.PersistentNetworkMapCache. - Previous node was identical to incoming one - doing nothing {}
[INFO ] 2023-01-31T09:27:46,741Z [Test worker] cordapp.JarScanningCordappLoader. - Looking for CorDapps in [build/mock-network/20230131-092717.908-958A9F813F34ED7B/nodes/2/cordapps] {}
[INFO ] 2023-01-31T09:27:46,741Z [Test worker] cordapp.JarScanningCordappLoader. - Loading CorDapps from RestrictedURL(url=file:/Users/peter.li/Desktop/obligation-cordapp/workflows/build/mock-network/20230131-092717.908-958A9F813F34ED7B/nodes/2/cordapps/accounts-contracts-1.0.jar, rootPackageName=null), RestrictedURL(url=file:/Users/peter.li/Desktop/obligation-cordapp/workflows/build/mock-network/20230131-092717.908-958A9F813F34ED7B/nodes/2/cordapps/accounts-workflows-1.0.jar, rootPackageName=null), RestrictedURL(url=file:/Users/peter.li/Desktop/obligation-cordapp/workflows/build/mock-network/20230131-092717.908-958A9F813F34ED7B/nodes/2/cordapps/corda-finance-contracts-4.9.jar, rootPackageName=null), RestrictedURL(url=file:/Users/peter.li/Desktop/obligation-cordapp/workflows/build/mock-network/20230131-092717.908-958A9F813F34ED7B/nodes/2/cordapps/contracts-1.0.jar, rootPackageName=null), RestrictedURL(url=file:/Users/peter.li/Desktop/obligation-cordapp/workflows/build/mock-network/20230131-092717.908-958A9F813F34ED7B/nodes/2/cordapps/workflows-1.0.jar, rootPackageName=null) {}
[INFO ] 2023-01-31T09:27:46,741Z [Test worker] cordapp.JarScanningCordappLoader. - Scanning CorDapp in file:/Users/peter.li/Desktop/obligation-cordapp/workflows/build/mock-network/20230131-092717.908-958A9F813F34ED7B/nodes/2/cordapps/accounts-contracts-1.0.jar {}
[INFO ] 2023-01-31T09:27:46,762Z [Test worker] cordapp.JarScanningCordappLoader. - Scanning CorDapp in file:/Users/peter.li/Desktop/obligation-cordapp/workflows/build/mock-network/20230131-092717.908-958A9F813F34ED7B/nodes/2/cordapps/accounts-workflows-1.0.jar {}
[INFO ] 2023-01-31T09:27:46,770Z [Test worker] cordapp.JarScanningCordappLoader. - Scanning CorDapp in file:/Users/peter.li/Desktop/obligation-cordapp/workflows/build/mock-network/20230131-092717.908-958A9F813F34ED7B/nodes/2/cordapps/corda-finance-contracts-4.9.jar {}
[INFO ] 2023-01-31T09:27:46,788Z [Test worker] cordapp.JarScanningCordappLoader. - Scanning CorDapp in file:/Users/peter.li/Desktop/obligation-cordapp/workflows/build/mock-network/20230131-092717.908-958A9F813F34ED7B/nodes/2/cordapps/contracts-1.0.jar {}
[INFO ] 2023-01-31T09:27:46,793Z [Test worker] cordapp.JarScanningCordappLoader. - Scanning CorDapp in file:/Users/peter.li/Desktop/obligation-cordapp/workflows/build/mock-network/20230131-092717.908-958A9F813F34ED7B/nodes/2/cordapps/workflows-1.0.jar {}
[INFO ] 2023-01-31T09:27:46,821Z [Test worker] internal.InternalMockNetwork$MockNode. - MessagingService active change to: false {}
[INFO ] 2023-01-31T09:27:46,822Z [Test worker] internal.InternalMockNetwork$MockNode. - Flow external operation executor has a max of 2 threads {}
[INFO ] 2023-01-31T09:27:46,824Z [Test worker] internal.InternalMockNetwork$MockNode. - Node starting up ... {}
[INFO ] 2023-01-31T09:27:46,871Z [Test worker] internal.KeyStoreHandler. - Loaded trusted root certificate: DL7fwxLm5xbiMD8adUuYTsPZHAict46Ng4w6RNcySt5vAw, alias: cordarootca {}
[INFO ] 2023-01-31T09:27:46,871Z [Test worker] internal.KeyStoreHandler. - Loaded node identity key: DLWqhwPHQKB2EA2QG3Gbq6yh89HByPxWKUqqGwHaxH7ki, alias: identity-private-key {}
[INFO ] 2023-01-31T09:27:46,879Z [Test worker] internal.NodeFlowManager. - Registered com.r3.corda.lib.accounts.workflows.flows.ShareStateAndSyncAccounts to initiate com.r3.corda.lib.accounts.workflows.flows.ReceiveStateAndSyncAccounts (version 1) {}
[INFO ] 2023-01-31T09:27:46,879Z [Test worker] internal.NodeFlowManager. - Registered com.r3.corda.lib.accounts.workflows.flows.ShareStateWithAccount to initiate com.r3.corda.lib.accounts.workflows.flows.ReceiveStateForAccount (version 1) {}
[INFO ] 2023-01-31T09:27:46,879Z [Test worker] internal.NodeFlowManager. - Registered com.r3.corda.lib.accounts.workflows.flows.RequestAccountInfo to initiate com.r3.corda.lib.accounts.workflows.flows.RequestAccountInfoHandler (version 1) {}
[INFO ] 2023-01-31T09:27:46,879Z [Test worker] internal.NodeFlowManager. - Registered com.r3.corda.lib.accounts.workflows.flows.RequestKeyForAccount to initiate com.r3.corda.lib.accounts.workflows.flows.SendKeyForAccount (version 1) {}
[INFO ] 2023-01-31T09:27:46,879Z [Test worker] internal.NodeFlowManager. - Registered com.r3.corda.lib.accounts.workflows.flows.ShareAccountInfo to initiate com.r3.corda.lib.accounts.workflows.flows.ShareAccountInfoHandler (version 1) {}
[INFO ] 2023-01-31T09:27:46,879Z [Test worker] internal.NodeFlowManager. - Registered net.corda.samples.obligation.flows.IOUIssueFlow to initiate net.corda.samples.obligation.flows.IOUIssueFlowResponder (version 1) {}
[INFO ] 2023-01-31T09:27:46,879Z [Test worker] internal.NodeFlowManager. - Registered net.corda.samples.obligation.flows.IOUSettleFlow to initiate net.corda.samples.obligation.flows.IOUSettleFlowResponder (version 1) {}
[INFO ] 2023-01-31T09:27:46,879Z [Test worker] internal.NodeFlowManager. - Registered net.corda.samples.obligation.flows.IOUTransferFlow to initiate net.corda.samples.obligation.flows.IOUTransferFlowResponder (version 1) {}
[INFO ] 2023-01-31T09:27:46,885Z [Test worker] internal.InternalMockNetwork$MockNode. - Loaded network parameters: NetworkParameters {
      minimumPlatformVersion=4
      notaries=[NotaryInfo(identity=O=Notary, L=London, C=GB, validating=true)]
      maxMessageSize=10485760
      maxTransactionSize=524288000
      whitelistedContractImplementations {
        
      }
      eventHorizon=PT720H
      packageOwnership {
        
      }
      modifiedTime=2023-01-31T09:27:17.545Z
      epoch=1
  } {}
[INFO ] 2023-01-31T09:27:47,501Z [Test worker] internal.InternalMockNetwork$MockNode. - Connected to H2 database. {}
[INFO ] 2023-01-31T09:27:47,503Z [Test worker] persistence.HibernateConfiguration. - Init HibernateConfiguration for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1), AccountsContractsSchemaV1(name=com.r3.corda.lib.accounts.contracts.internal.schemas.AccountsContractsSchema, version=1), AccountsWorkflowsSchemaV1(name=com.r3.corda.lib.accounts.workflows.internal.schemas.AccountsWorkflowsSchema, version=1), CashSchemaV1(name=net.corda.finance.schemas.CashSchema, version=1), CommercialPaperSchemaV1(name=net.corda.finance.schemas.CommercialPaperSchema, version=1)] {}
[INFO ] 2023-01-31T09:27:47,503Z [Test worker] factory.BaseSessionFactoryFactory. - Creating session factory for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1), AccountsContractsSchemaV1(name=com.r3.corda.lib.accounts.contracts.internal.schemas.AccountsContractsSchema, version=1), AccountsWorkflowsSchemaV1(name=com.r3.corda.lib.accounts.workflows.internal.schemas.AccountsWorkflowsSchema, version=1), CashSchemaV1(name=net.corda.finance.schemas.CashSchema, version=1), CommercialPaperSchemaV1(name=net.corda.finance.schemas.CommercialPaperSchema, version=1)] {}
[INFO ] 2023-01-31T09:27:47,664Z [Test worker] factory.BaseSessionFactoryFactory. - Created session factory for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1), AccountsContractsSchemaV1(name=com.r3.corda.lib.accounts.contracts.internal.schemas.AccountsContractsSchema, version=1), AccountsWorkflowsSchemaV1(name=com.r3.corda.lib.accounts.workflows.internal.schemas.AccountsWorkflowsSchema, version=1), CashSchemaV1(name=net.corda.finance.schemas.CashSchema, version=1), CommercialPaperSchemaV1(name=net.corda.finance.schemas.CommercialPaperSchema, version=1)] {}
[INFO ] 2023-01-31T09:27:47,670Z [Test worker] internal.InternalMockNetwork$MockNode. - Node-info has changed so submitting update. Old node-info was null {}
[INFO ] 2023-01-31T09:27:47,674Z [Test worker] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 2, L=London, C=GB], platformVersion=11, serial=1675157267670), owningKey=DLWqhwPHQKB2EA2QG3Gbq6yh89HByPxWKUqqGwHaxH7ki {}
[INFO ] 2023-01-31T09:27:47,674Z [Test worker] network.PersistentNetworkMapCache. - No previous node found for O=Mock Company 2, L=London, C=GB {}
[INFO ] 2023-01-31T09:27:47,681Z [Test worker] internal.InternalMockNetwork$MockNode. - New node-info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 2, L=London, C=GB], platformVersion=11, serial=1675157267670) {}
[INFO ] 2023-01-31T09:27:47,688Z [Test worker] network.NetworkMapUpdater. - Auto-accept enabled for network parameter changes which modify only: [epoch, modifiedTime, packageOwnership, whitelistedContractImplementations] {}
[INFO ] 2023-01-31T09:27:47,689Z [Test worker] internal.MockNodeMessagingService. - Status change to true {}
[INFO ] 2023-01-31T09:27:47,689Z [Test worker] internal.InternalMockNetwork$MockNode. - MessagingService active change to: true {}
[INFO ] 2023-01-31T09:27:47,700Z [MockNode-3-2] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 2, L=London, C=GB], platformVersion=11, serial=1675157267670), owningKey=DLWqhwPHQKB2EA2QG3Gbq6yh89HByPxWKUqqGwHaxH7ki {}
[INFO ] 2023-01-31T09:27:47,700Z [MockNode-3-2] network.PersistentNetworkMapCache. - Previous node was identical to incoming one - doing nothing {}
[INFO ] 2023-01-31T09:27:47,727Z [Test worker] persistence.NodeAttachmentService. - Stored new attachment: id=D370FD972C7E07CE73F4F9B7886D226807F6B16C4EE287398B9C69384109DC14 uploader=app filename=Accounts SDK - States and Contracts {}
[INFO ] 2023-01-31T09:27:47,775Z [Test worker] persistence.NodeAttachmentService. - Stored new attachment: id=BD0C932EAF8B1FE96DCBBF275B914BCD776D14EDC8F97DCEBF7E15DA09C606AE uploader=app filename=Corda Finance Demo {}
[INFO ] 2023-01-31T09:27:47,795Z [Test worker] persistence.NodeAttachmentService. - Stored new attachment: id=6214951ECBC6BF54E3D3316B3EC4BBC038089B6478B86BD9FC3B35055850847E uploader=app filename=Obligation Contracts {}
[INFO ] 2023-01-31T09:27:47,799Z [Test worker] internal.InternalMockNetwork$MockNode. - Installed com.r3.corda.lib.accounts.workflows.services.KeyManagementBackedAccountService Corda service {}
[INFO ] 2023-01-31T09:27:47,830Z [Test worker] statemachine.SingleThreadedStateMachineManager. - Node ready, info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 2, L=London, C=GB], platformVersion=11, serial=1675157267670) {}
[INFO ] 2023-01-31T09:27:47,832Z [Test worker] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Notary, L=London, C=GB], platformVersion=11, serial=1675157264130), owningKey=DL4EAH6iWeQACNpjkSFNx5KxNjKh8VZkGGyVAveZLLZ95w {}
[INFO ] 2023-01-31T09:27:47,832Z [Test worker] network.PersistentNetworkMapCache. - No previous node found for O=Notary, L=London, C=GB {}
[INFO ] 2023-01-31T09:27:47,845Z [Test worker] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 2, L=London, C=GB], platformVersion=11, serial=1675157267670), owningKey=DLWqhwPHQKB2EA2QG3Gbq6yh89HByPxWKUqqGwHaxH7ki {}
[INFO ] 2023-01-31T09:27:47,845Z [Test worker] network.PersistentNetworkMapCache. - No previous node found for O=Mock Company 2, L=London, C=GB {}
[INFO ] 2023-01-31T09:27:47,858Z [Test worker] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 1, L=London, C=GB], platformVersion=11, serial=1675157266445), owningKey=DLAvTo8PLH1uNTLuWtz2TEvmhwsoeWnMjGQQqWE6y2GMrM {}
[INFO ] 2023-01-31T09:27:47,858Z [Test worker] network.PersistentNetworkMapCache. - No previous node found for O=Mock Company 1, L=London, C=GB {}
[INFO ] 2023-01-31T09:27:47,871Z [Test worker] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 2, L=London, C=GB], platformVersion=11, serial=1675157267670), owningKey=DLWqhwPHQKB2EA2QG3Gbq6yh89HByPxWKUqqGwHaxH7ki {}
[INFO ] 2023-01-31T09:27:47,871Z [Test worker] network.PersistentNetworkMapCache. - No previous node found for O=Mock Company 2, L=London, C=GB {}
[INFO ] 2023-01-31T09:27:47,880Z [Test worker] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 2, L=London, C=GB], platformVersion=11, serial=1675157267670), owningKey=DLWqhwPHQKB2EA2QG3Gbq6yh89HByPxWKUqqGwHaxH7ki {}
[INFO ] 2023-01-31T09:27:47,880Z [Test worker] network.PersistentNetworkMapCache. - Previous node was identical to incoming one - doing nothing {}
[INFO ] 2023-01-31T09:27:47,880Z [Test worker] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 2, L=London, C=GB], platformVersion=11, serial=1675157267670), owningKey=DLWqhwPHQKB2EA2QG3Gbq6yh89HByPxWKUqqGwHaxH7ki {}
[INFO ] 2023-01-31T09:27:47,880Z [Test worker] network.PersistentNetworkMapCache. - Previous node was identical to incoming one - doing nothing {}
[INFO ] 2023-01-31T09:27:47,895Z [Test worker] cordapp.JarScanningCordappLoader. - Looking for CorDapps in [build/mock-network/20230131-092717.908-958A9F813F34ED7B/nodes/3/cordapps] {}
[INFO ] 2023-01-31T09:27:47,895Z [Test worker] cordapp.JarScanningCordappLoader. - Loading CorDapps from RestrictedURL(url=file:/Users/peter.li/Desktop/obligation-cordapp/workflows/build/mock-network/20230131-092717.908-958A9F813F34ED7B/nodes/3/cordapps/accounts-contracts-1.0.jar, rootPackageName=null), RestrictedURL(url=file:/Users/peter.li/Desktop/obligation-cordapp/workflows/build/mock-network/20230131-092717.908-958A9F813F34ED7B/nodes/3/cordapps/accounts-workflows-1.0.jar, rootPackageName=null), RestrictedURL(url=file:/Users/peter.li/Desktop/obligation-cordapp/workflows/build/mock-network/20230131-092717.908-958A9F813F34ED7B/nodes/3/cordapps/corda-finance-contracts-4.9.jar, rootPackageName=null), RestrictedURL(url=file:/Users/peter.li/Desktop/obligation-cordapp/workflows/build/mock-network/20230131-092717.908-958A9F813F34ED7B/nodes/3/cordapps/contracts-1.0.jar, rootPackageName=null), RestrictedURL(url=file:/Users/peter.li/Desktop/obligation-cordapp/workflows/build/mock-network/20230131-092717.908-958A9F813F34ED7B/nodes/3/cordapps/workflows-1.0.jar, rootPackageName=null) {}
[INFO ] 2023-01-31T09:27:47,895Z [Test worker] cordapp.JarScanningCordappLoader. - Scanning CorDapp in file:/Users/peter.li/Desktop/obligation-cordapp/workflows/build/mock-network/20230131-092717.908-958A9F813F34ED7B/nodes/3/cordapps/accounts-contracts-1.0.jar {}
[INFO ] 2023-01-31T09:27:47,920Z [Test worker] cordapp.JarScanningCordappLoader. - Scanning CorDapp in file:/Users/peter.li/Desktop/obligation-cordapp/workflows/build/mock-network/20230131-092717.908-958A9F813F34ED7B/nodes/3/cordapps/accounts-workflows-1.0.jar {}
[INFO ] 2023-01-31T09:27:47,927Z [Test worker] cordapp.JarScanningCordappLoader. - Scanning CorDapp in file:/Users/peter.li/Desktop/obligation-cordapp/workflows/build/mock-network/20230131-092717.908-958A9F813F34ED7B/nodes/3/cordapps/corda-finance-contracts-4.9.jar {}
[INFO ] 2023-01-31T09:27:47,939Z [Test worker] cordapp.JarScanningCordappLoader. - Scanning CorDapp in file:/Users/peter.li/Desktop/obligation-cordapp/workflows/build/mock-network/20230131-092717.908-958A9F813F34ED7B/nodes/3/cordapps/contracts-1.0.jar {}
[INFO ] 2023-01-31T09:27:47,945Z [Test worker] cordapp.JarScanningCordappLoader. - Scanning CorDapp in file:/Users/peter.li/Desktop/obligation-cordapp/workflows/build/mock-network/20230131-092717.908-958A9F813F34ED7B/nodes/3/cordapps/workflows-1.0.jar {}
[INFO ] 2023-01-31T09:27:47,978Z [Test worker] internal.InternalMockNetwork$MockNode. - MessagingService active change to: false {}
[INFO ] 2023-01-31T09:27:47,979Z [Test worker] internal.InternalMockNetwork$MockNode. - Flow external operation executor has a max of 2 threads {}
[INFO ] 2023-01-31T09:27:47,981Z [Test worker] internal.InternalMockNetwork$MockNode. - Node starting up ... {}
[INFO ] 2023-01-31T09:27:48,021Z [Test worker] internal.KeyStoreHandler. - Loaded trusted root certificate: DL7fwxLm5xbiMD8adUuYTsPZHAict46Ng4w6RNcySt5vAw, alias: cordarootca {}
[INFO ] 2023-01-31T09:27:48,021Z [Test worker] internal.KeyStoreHandler. - Loaded node identity key: DL6iEZerm6ja6xZtQxApHgX5PhjPUchudM617TqhvvScZH, alias: identity-private-key {}
[INFO ] 2023-01-31T09:27:48,026Z [Test worker] internal.NodeFlowManager. - Registered com.r3.corda.lib.accounts.workflows.flows.ShareStateAndSyncAccounts to initiate com.r3.corda.lib.accounts.workflows.flows.ReceiveStateAndSyncAccounts (version 1) {}
[INFO ] 2023-01-31T09:27:48,026Z [Test worker] internal.NodeFlowManager. - Registered com.r3.corda.lib.accounts.workflows.flows.ShareStateWithAccount to initiate com.r3.corda.lib.accounts.workflows.flows.ReceiveStateForAccount (version 1) {}
[INFO ] 2023-01-31T09:27:48,026Z [Test worker] internal.NodeFlowManager. - Registered com.r3.corda.lib.accounts.workflows.flows.RequestAccountInfo to initiate com.r3.corda.lib.accounts.workflows.flows.RequestAccountInfoHandler (version 1) {}
[INFO ] 2023-01-31T09:27:48,026Z [Test worker] internal.NodeFlowManager. - Registered com.r3.corda.lib.accounts.workflows.flows.RequestKeyForAccount to initiate com.r3.corda.lib.accounts.workflows.flows.SendKeyForAccount (version 1) {}
[INFO ] 2023-01-31T09:27:48,026Z [Test worker] internal.NodeFlowManager. - Registered com.r3.corda.lib.accounts.workflows.flows.ShareAccountInfo to initiate com.r3.corda.lib.accounts.workflows.flows.ShareAccountInfoHandler (version 1) {}
[INFO ] 2023-01-31T09:27:48,027Z [Test worker] internal.NodeFlowManager. - Registered net.corda.samples.obligation.flows.IOUIssueFlow to initiate net.corda.samples.obligation.flows.IOUIssueFlowResponder (version 1) {}
[INFO ] 2023-01-31T09:27:48,027Z [Test worker] internal.NodeFlowManager. - Registered net.corda.samples.obligation.flows.IOUSettleFlow to initiate net.corda.samples.obligation.flows.IOUSettleFlowResponder (version 1) {}
[INFO ] 2023-01-31T09:27:48,027Z [Test worker] internal.NodeFlowManager. - Registered net.corda.samples.obligation.flows.IOUTransferFlow to initiate net.corda.samples.obligation.flows.IOUTransferFlowResponder (version 1) {}
[INFO ] 2023-01-31T09:27:48,031Z [Test worker] internal.InternalMockNetwork$MockNode. - Loaded network parameters: NetworkParameters {
      minimumPlatformVersion=4
      notaries=[NotaryInfo(identity=O=Notary, L=London, C=GB, validating=true)]
      maxMessageSize=10485760
      maxTransactionSize=524288000
      whitelistedContractImplementations {
        
      }
      eventHorizon=PT720H
      packageOwnership {
        
      }
      modifiedTime=2023-01-31T09:27:17.545Z
      epoch=1
  } {}
[INFO ] 2023-01-31T09:27:48,617Z [Test worker] internal.InternalMockNetwork$MockNode. - Connected to H2 database. {}
[INFO ] 2023-01-31T09:27:48,619Z [Test worker] persistence.HibernateConfiguration. - Init HibernateConfiguration for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1), AccountsContractsSchemaV1(name=com.r3.corda.lib.accounts.contracts.internal.schemas.AccountsContractsSchema, version=1), AccountsWorkflowsSchemaV1(name=com.r3.corda.lib.accounts.workflows.internal.schemas.AccountsWorkflowsSchema, version=1), CashSchemaV1(name=net.corda.finance.schemas.CashSchema, version=1), CommercialPaperSchemaV1(name=net.corda.finance.schemas.CommercialPaperSchema, version=1)] {}
[INFO ] 2023-01-31T09:27:48,619Z [Test worker] factory.BaseSessionFactoryFactory. - Creating session factory for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1), AccountsContractsSchemaV1(name=com.r3.corda.lib.accounts.contracts.internal.schemas.AccountsContractsSchema, version=1), AccountsWorkflowsSchemaV1(name=com.r3.corda.lib.accounts.workflows.internal.schemas.AccountsWorkflowsSchema, version=1), CashSchemaV1(name=net.corda.finance.schemas.CashSchema, version=1), CommercialPaperSchemaV1(name=net.corda.finance.schemas.CommercialPaperSchema, version=1)] {}
[INFO ] 2023-01-31T09:27:48,776Z [Test worker] factory.BaseSessionFactoryFactory. - Created session factory for schemas: [CommonSchemaV1(name=net.corda.core.schemas.CommonSchema, version=1), VaultSchemaV1(name=net.corda.node.services.vault.VaultSchema, version=1), NodeInfoSchemaV1(name=net.corda.node.internal.schemas.NodeInfoSchema, version=1), NodeCoreV1(name=net.corda.node.services.schema.NodeSchemaService$NodeCore, version=1), AccountsContractsSchemaV1(name=com.r3.corda.lib.accounts.contracts.internal.schemas.AccountsContractsSchema, version=1), AccountsWorkflowsSchemaV1(name=com.r3.corda.lib.accounts.workflows.internal.schemas.AccountsWorkflowsSchema, version=1), CashSchemaV1(name=net.corda.finance.schemas.CashSchema, version=1), CommercialPaperSchemaV1(name=net.corda.finance.schemas.CommercialPaperSchema, version=1)] {}
[INFO ] 2023-01-31T09:27:48,781Z [Test worker] internal.InternalMockNetwork$MockNode. - Node-info has changed so submitting update. Old node-info was null {}
[INFO ] 2023-01-31T09:27:48,786Z [Test worker] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 3, L=London, C=GB], platformVersion=11, serial=1675157268781), owningKey=DL6iEZerm6ja6xZtQxApHgX5PhjPUchudM617TqhvvScZH {}
[INFO ] 2023-01-31T09:27:48,786Z [Test worker] network.PersistentNetworkMapCache. - No previous node found for O=Mock Company 3, L=London, C=GB {}
[INFO ] 2023-01-31T09:27:48,793Z [Test worker] internal.InternalMockNetwork$MockNode. - New node-info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 3, L=London, C=GB], platformVersion=11, serial=1675157268781) {}
[INFO ] 2023-01-31T09:27:48,802Z [Test worker] network.NetworkMapUpdater. - Auto-accept enabled for network parameter changes which modify only: [epoch, modifiedTime, packageOwnership, whitelistedContractImplementations] {}
[INFO ] 2023-01-31T09:27:48,802Z [Test worker] internal.MockNodeMessagingService. - Status change to true {}
[INFO ] 2023-01-31T09:27:48,802Z [Test worker] internal.InternalMockNetwork$MockNode. - MessagingService active change to: true {}
[INFO ] 2023-01-31T09:27:48,815Z [MockNode-4-2] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 3, L=London, C=GB], platformVersion=11, serial=1675157268781), owningKey=DL6iEZerm6ja6xZtQxApHgX5PhjPUchudM617TqhvvScZH {}
[INFO ] 2023-01-31T09:27:48,815Z [MockNode-4-2] network.PersistentNetworkMapCache. - Previous node was identical to incoming one - doing nothing {}
[INFO ] 2023-01-31T09:27:48,850Z [Test worker] persistence.NodeAttachmentService. - Stored new attachment: id=D370FD972C7E07CE73F4F9B7886D226807F6B16C4EE287398B9C69384109DC14 uploader=app filename=Accounts SDK - States and Contracts {}
[INFO ] 2023-01-31T09:27:48,884Z [Test worker] persistence.NodeAttachmentService. - Stored new attachment: id=BD0C932EAF8B1FE96DCBBF275B914BCD776D14EDC8F97DCEBF7E15DA09C606AE uploader=app filename=Corda Finance Demo {}
[INFO ] 2023-01-31T09:27:48,897Z [Test worker] persistence.NodeAttachmentService. - Stored new attachment: id=6214951ECBC6BF54E3D3316B3EC4BBC038089B6478B86BD9FC3B35055850847E uploader=app filename=Obligation Contracts {}
[INFO ] 2023-01-31T09:27:48,900Z [Test worker] internal.InternalMockNetwork$MockNode. - Installed com.r3.corda.lib.accounts.workflows.services.KeyManagementBackedAccountService Corda service {}
[INFO ] 2023-01-31T09:27:48,920Z [Test worker] statemachine.SingleThreadedStateMachineManager. - Node ready, info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 3, L=London, C=GB], platformVersion=11, serial=1675157268781) {}
[INFO ] 2023-01-31T09:27:48,922Z [Test worker] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Notary, L=London, C=GB], platformVersion=11, serial=1675157264130), owningKey=DL4EAH6iWeQACNpjkSFNx5KxNjKh8VZkGGyVAveZLLZ95w {}
[INFO ] 2023-01-31T09:27:48,922Z [Test worker] network.PersistentNetworkMapCache. - No previous node found for O=Notary, L=London, C=GB {}
[INFO ] 2023-01-31T09:27:48,934Z [Test worker] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 3, L=London, C=GB], platformVersion=11, serial=1675157268781), owningKey=DL6iEZerm6ja6xZtQxApHgX5PhjPUchudM617TqhvvScZH {}
[INFO ] 2023-01-31T09:27:48,934Z [Test worker] network.PersistentNetworkMapCache. - No previous node found for O=Mock Company 3, L=London, C=GB {}
[INFO ] 2023-01-31T09:27:48,948Z [Test worker] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 1, L=London, C=GB], platformVersion=11, serial=1675157266445), owningKey=DLAvTo8PLH1uNTLuWtz2TEvmhwsoeWnMjGQQqWE6y2GMrM {}
[INFO ] 2023-01-31T09:27:48,948Z [Test worker] network.PersistentNetworkMapCache. - No previous node found for O=Mock Company 1, L=London, C=GB {}
[INFO ] 2023-01-31T09:27:48,959Z [Test worker] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 3, L=London, C=GB], platformVersion=11, serial=1675157268781), owningKey=DL6iEZerm6ja6xZtQxApHgX5PhjPUchudM617TqhvvScZH {}
[INFO ] 2023-01-31T09:27:48,959Z [Test worker] network.PersistentNetworkMapCache. - No previous node found for O=Mock Company 3, L=London, C=GB {}
[INFO ] 2023-01-31T09:27:48,971Z [Test worker] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 2, L=London, C=GB], platformVersion=11, serial=1675157267670), owningKey=DLWqhwPHQKB2EA2QG3Gbq6yh89HByPxWKUqqGwHaxH7ki {}
[INFO ] 2023-01-31T09:27:48,971Z [Test worker] network.PersistentNetworkMapCache. - No previous node found for O=Mock Company 2, L=London, C=GB {}
[INFO ] 2023-01-31T09:27:48,982Z [Test worker] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 3, L=London, C=GB], platformVersion=11, serial=1675157268781), owningKey=DL6iEZerm6ja6xZtQxApHgX5PhjPUchudM617TqhvvScZH {}
[INFO ] 2023-01-31T09:27:48,982Z [Test worker] network.PersistentNetworkMapCache. - No previous node found for O=Mock Company 3, L=London, C=GB {}
[INFO ] 2023-01-31T09:27:48,994Z [Test worker] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 3, L=London, C=GB], platformVersion=11, serial=1675157268781), owningKey=DL6iEZerm6ja6xZtQxApHgX5PhjPUchudM617TqhvvScZH {}
[INFO ] 2023-01-31T09:27:48,994Z [Test worker] network.PersistentNetworkMapCache. - Previous node was identical to incoming one - doing nothing {}
[INFO ] 2023-01-31T09:27:48,994Z [Test worker] network.PersistentNetworkMapCache. - Adding node with info: NodeInfo(addresses=[mock.node:1000], legalIdentitiesAndCerts=[O=Mock Company 3, L=London, C=GB], platformVersion=11, serial=1675157268781), owningKey=DL6iEZerm6ja6xZtQxApHgX5PhjPUchudM617TqhvvScZH {}
[INFO ] 2023-01-31T09:27:48,994Z [Test worker] network.PersistentNetworkMapCache. - Previous node was identical to incoming one - doing nothing {}
[WARN ] 2023-01-31T09:27:48,996Z [Test worker] internal.NodeFlowManager. - Multiple flows are registered for InitiatingFlow: class net.corda.samples.obligation.flows.IOUIssueFlow, currently using: class net.corda.samples.obligation.flows.IOUIssueFlowResponder {}
[INFO ] 2023-01-31T09:27:48,996Z [Test worker] internal.NodeFlowManager. - Registered net.corda.samples.obligation.flows.IOUIssueFlow to initiate net.corda.samples.obligation.flows.IOUIssueFlowResponder (version 1) {}
[WARN ] 2023-01-31T09:27:49,002Z [Test worker] internal.NodeFlowManager. - Multiple flows are registered for InitiatingFlow: class net.corda.samples.obligation.flows.IOUIssueFlow, currently using: class net.corda.samples.obligation.flows.IOUIssueFlowResponder {}
[INFO ] 2023-01-31T09:27:49,002Z [Test worker] internal.NodeFlowManager. - Registered net.corda.samples.obligation.flows.IOUIssueFlow to initiate net.corda.samples.obligation.flows.IOUIssueFlowResponder (version 1) {}
[WARN ] 2023-01-31T09:27:49,003Z [Test worker] internal.NodeFlowManager. - Multiple flows are registered for InitiatingFlow: class net.corda.samples.obligation.flows.IOUIssueFlow, currently using: class net.corda.samples.obligation.flows.IOUIssueFlowResponder {}
[INFO ] 2023-01-31T09:27:49,003Z [Test worker] internal.NodeFlowManager. - Registered net.corda.samples.obligation.flows.IOUIssueFlow to initiate net.corda.samples.obligation.flows.IOUIssueFlowResponder (version 1) {}
[WARN ] 2023-01-31T09:27:49,003Z [Test worker] internal.NodeFlowManager. - Multiple flows are registered for InitiatingFlow: class net.corda.samples.obligation.flows.IOUSettleFlow, currently using: class net.corda.samples.obligation.flows.IOUSettleFlowResponder {}
[INFO ] 2023-01-31T09:27:49,003Z [Test worker] internal.NodeFlowManager. - Registered net.corda.samples.obligation.flows.IOUSettleFlow to initiate net.corda.samples.obligation.flows.IOUSettleFlowResponder (version 1) {}
[WARN ] 2023-01-31T09:27:49,003Z [Test worker] internal.NodeFlowManager. - Multiple flows are registered for InitiatingFlow: class net.corda.samples.obligation.flows.IOUSettleFlow, currently using: class net.corda.samples.obligation.flows.IOUSettleFlowResponder {}
[INFO ] 2023-01-31T09:27:49,003Z [Test worker] internal.NodeFlowManager. - Registered net.corda.samples.obligation.flows.IOUSettleFlow to initiate net.corda.samples.obligation.flows.IOUSettleFlowResponder (version 1) {}
[WARN ] 2023-01-31T09:27:49,003Z [Test worker] internal.NodeFlowManager. - Multiple flows are registered for InitiatingFlow: class net.corda.samples.obligation.flows.IOUSettleFlow, currently using: class net.corda.samples.obligation.flows.IOUSettleFlowResponder {}
[INFO ] 2023-01-31T09:27:49,003Z [Test worker] internal.NodeFlowManager. - Registered net.corda.samples.obligation.flows.IOUSettleFlow to initiate net.corda.samples.obligation.flows.IOUSettleFlowResponder (version 1) {}
[INFO ] 2023-01-31T09:27:49,915Z [Mock network] corda.flow. - No need to notarise this transaction. {actor_id=Only For Testing, actor_owning_identity=O=Mock Company 1, L=London, C=GB, actor_store_id=TEST, fiber-id=10000001, flow-id=b83d0e2f-2d18-4ec5-8e2f-d2e5daad1cad, invocation_id=c11f1138-1309-4280-b1a7-10ae3da6167c, invocation_timestamp=2023-01-31T09:27:49.039Z, origin=Only For Testing, session_id=c11f1138-1309-4280-b1a7-10ae3da6167c, session_timestamp=2023-01-31T09:27:49.039Z, thread-id=854, tx_id=267E9B4976F63A87457DA8438C3CA95D95B178CD333338E0650187B319C3EEEA}
[INFO ] 2023-01-31T09:27:49,915Z [Mock network] corda.flow. - Recording transaction locally. {actor_id=Only For Testing, actor_owning_identity=O=Mock Company 1, L=London, C=GB, actor_store_id=TEST, fiber-id=10000001, flow-id=b83d0e2f-2d18-4ec5-8e2f-d2e5daad1cad, invocation_id=c11f1138-1309-4280-b1a7-10ae3da6167c, invocation_timestamp=2023-01-31T09:27:49.039Z, origin=Only For Testing, session_id=c11f1138-1309-4280-b1a7-10ae3da6167c, session_timestamp=2023-01-31T09:27:49.039Z, thread-id=854, tx_id=267E9B4976F63A87457DA8438C3CA95D95B178CD333338E0650187B319C3EEEA}
[INFO ] 2023-01-31T09:27:50,014Z [Mock network] corda.flow. - Recorded transaction locally successfully. {actor_id=Only For Testing, actor_owning_identity=O=Mock Company 1, L=London, C=GB, actor_store_id=TEST, fiber-id=10000001, flow-id=b83d0e2f-2d18-4ec5-8e2f-d2e5daad1cad, invocation_id=c11f1138-1309-4280-b1a7-10ae3da6167c, invocation_timestamp=2023-01-31T09:27:49.039Z, origin=Only For Testing, session_id=c11f1138-1309-4280-b1a7-10ae3da6167c, session_timestamp=2023-01-31T09:27:49.039Z, thread-id=854, tx_id=267E9B4976F63A87457DA8438C3CA95D95B178CD333338E0650187B319C3EEEA}
[INFO ] 2023-01-31T09:27:50,014Z [Mock network] corda.flow. - All parties received the transaction successfully. {actor_id=Only For Testing, actor_owning_identity=O=Mock Company 1, L=London, C=GB, actor_store_id=TEST, fiber-id=10000001, flow-id=b83d0e2f-2d18-4ec5-8e2f-d2e5daad1cad, invocation_id=c11f1138-1309-4280-b1a7-10ae3da6167c, invocation_timestamp=2023-01-31T09:27:49.039Z, origin=Only For Testing, session_id=c11f1138-1309-4280-b1a7-10ae3da6167c, session_timestamp=2023-01-31T09:27:49.039Z, thread-id=854, tx_id=267E9B4976F63A87457DA8438C3CA95D95B178CD333338E0650187B319C3EEEA}
[INFO ] 2023-01-31T09:27:50,206Z [Mock network] corda.flow. - Received transaction acknowledgement request from party O=Mock Company 1, L=London, C=GB. {fiber-id=10000002, flow-id=51220b79-057f-4b05-b8c9-2f91da61887a, invocation_id=23ef3213-951d-4a70-9b5e-838abf5fe4be, invocation_timestamp=2023-01-31T09:27:50.157Z, origin=O=Mock Company 1, L=London, C=GB, session_id=23ef3213-951d-4a70-9b5e-838abf5fe4be, session_timestamp=2023-01-31T09:27:50.157Z, thread-id=854, tx_id=267E9B4976F63A87457DA8438C3CA95D95B178CD333338E0650187B319C3EEEA}
[INFO ] 2023-01-31T09:27:50,257Z [Mock network] corda.flow. - Transaction dependencies resolution completed. {fiber-id=10000002, flow-id=51220b79-057f-4b05-b8c9-2f91da61887a, invocation_id=23ef3213-951d-4a70-9b5e-838abf5fe4be, invocation_timestamp=2023-01-31T09:27:50.157Z, origin=O=Mock Company 1, L=London, C=GB, session_id=23ef3213-951d-4a70-9b5e-838abf5fe4be, session_timestamp=2023-01-31T09:27:50.157Z, thread-id=854, tx_id=267E9B4976F63A87457DA8438C3CA95D95B178CD333338E0650187B319C3EEEA}
[INFO ] 2023-01-31T09:27:50,315Z [Mock network] corda.flow. - Successfully received fully signed tx. Sending it to the vault for processing. {fiber-id=10000002, flow-id=51220b79-057f-4b05-b8c9-2f91da61887a, invocation_id=23ef3213-951d-4a70-9b5e-838abf5fe4be, invocation_timestamp=2023-01-31T09:27:50.157Z, origin=O=Mock Company 1, L=London, C=GB, session_id=23ef3213-951d-4a70-9b5e-838abf5fe4be, session_timestamp=2023-01-31T09:27:50.157Z, thread-id=854, tx_id=267E9B4976F63A87457DA8438C3CA95D95B178CD333338E0650187B319C3EEEA}
[INFO ] 2023-01-31T09:27:50,323Z [Mock network] corda.flow. - Successfully recorded received transaction locally. {fiber-id=10000002, flow-id=51220b79-057f-4b05-b8c9-2f91da61887a, invocation_id=23ef3213-951d-4a70-9b5e-838abf5fe4be, invocation_timestamp=2023-01-31T09:27:50.157Z, origin=O=Mock Company 1, L=London, C=GB, session_id=23ef3213-951d-4a70-9b5e-838abf5fe4be, session_timestamp=2023-01-31T09:27:50.157Z, thread-id=854, tx_id=267E9B4976F63A87457DA8438C3CA95D95B178CD333338E0650187B319C3EEEA}
[INFO ] 2023-01-31T09:27:50,414Z [Mock network] corda.flow. - Received transaction acknowledgement request from party O=Mock Company 1, L=London, C=GB. {fiber-id=10000003, flow-id=ec90879b-6a18-4b64-8715-dc88beff1789, invocation_id=8d50c58a-f6c1-42ab-8a15-a6455e824c21, invocation_timestamp=2023-01-31T09:27:50.398Z, origin=O=Mock Company 1, L=London, C=GB, session_id=8d50c58a-f6c1-42ab-8a15-a6455e824c21, session_timestamp=2023-01-31T09:27:50.398Z, thread-id=854, tx_id=267E9B4976F63A87457DA8438C3CA95D95B178CD333338E0650187B319C3EEEA}
[INFO ] 2023-01-31T09:27:50,425Z [Mock network] corda.flow. - Transaction dependencies resolution completed. {fiber-id=10000003, flow-id=ec90879b-6a18-4b64-8715-dc88beff1789, invocation_id=8d50c58a-f6c1-42ab-8a15-a6455e824c21, invocation_timestamp=2023-01-31T09:27:50.398Z, origin=O=Mock Company 1, L=London, C=GB, session_id=8d50c58a-f6c1-42ab-8a15-a6455e824c21, session_timestamp=2023-01-31T09:27:50.398Z, thread-id=854, tx_id=267E9B4976F63A87457DA8438C3CA95D95B178CD333338E0650187B319C3EEEA}
[INFO ] 2023-01-31T09:27:50,455Z [Mock network] corda.flow. - Successfully received fully signed tx. Sending it to the vault for processing. {fiber-id=10000003, flow-id=ec90879b-6a18-4b64-8715-dc88beff1789, invocation_id=8d50c58a-f6c1-42ab-8a15-a6455e824c21, invocation_timestamp=2023-01-31T09:27:50.398Z, origin=O=Mock Company 1, L=London, C=GB, session_id=8d50c58a-f6c1-42ab-8a15-a6455e824c21, session_timestamp=2023-01-31T09:27:50.398Z, thread-id=854, tx_id=267E9B4976F63A87457DA8438C3CA95D95B178CD333338E0650187B319C3EEEA}
[INFO ] 2023-01-31T09:27:50,462Z [Mock network] corda.flow. - Successfully recorded received transaction locally. {fiber-id=10000003, flow-id=ec90879b-6a18-4b64-8715-dc88beff1789, invocation_id=8d50c58a-f6c1-42ab-8a15-a6455e824c21, invocation_timestamp=2023-01-31T09:27:50.398Z, origin=O=Mock Company 1, L=London, C=GB, session_id=8d50c58a-f6c1-42ab-8a15-a6455e824c21, session_timestamp=2023-01-31T09:27:50.398Z, thread-id=854, tx_id=267E9B4976F63A87457DA8438C3CA95D95B178CD333338E0650187B319C3EEEA}
[INFO ] 2023-01-31T09:27:50,507Z [Mock network] corda.flow. - No need to notarise this transaction. {actor_id=Only For Testing, actor_owning_identity=O=Mock Company 2, L=London, C=GB, actor_store_id=TEST, fiber-id=10000004, flow-id=279bad89-d09e-4f3c-aa85-cce787728b01, invocation_id=9e6ef368-4b5a-4420-993f-89a78e3760b8, invocation_timestamp=2023-01-31T09:27:50.487Z, origin=Only For Testing, session_id=9e6ef368-4b5a-4420-993f-89a78e3760b8, session_timestamp=2023-01-31T09:27:50.487Z, thread-id=854, tx_id=7AAE547F84F98B7AACE50E8A92FA87E7653B4360FC821297D6F4F3A49C569821}
[INFO ] 2023-01-31T09:27:50,507Z [Mock network] corda.flow. - Recording transaction locally. {actor_id=Only For Testing, actor_owning_identity=O=Mock Company 2, L=London, C=GB, actor_store_id=TEST, fiber-id=10000004, flow-id=279bad89-d09e-4f3c-aa85-cce787728b01, invocation_id=9e6ef368-4b5a-4420-993f-89a78e3760b8, invocation_timestamp=2023-01-31T09:27:50.487Z, origin=Only For Testing, session_id=9e6ef368-4b5a-4420-993f-89a78e3760b8, session_timestamp=2023-01-31T09:27:50.487Z, thread-id=854, tx_id=7AAE547F84F98B7AACE50E8A92FA87E7653B4360FC821297D6F4F3A49C569821}
[INFO ] 2023-01-31T09:27:50,510Z [Mock network] corda.flow. - Recorded transaction locally successfully. {actor_id=Only For Testing, actor_owning_identity=O=Mock Company 2, L=London, C=GB, actor_store_id=TEST, fiber-id=10000004, flow-id=279bad89-d09e-4f3c-aa85-cce787728b01, invocation_id=9e6ef368-4b5a-4420-993f-89a78e3760b8, invocation_timestamp=2023-01-31T09:27:50.487Z, origin=Only For Testing, session_id=9e6ef368-4b5a-4420-993f-89a78e3760b8, session_timestamp=2023-01-31T09:27:50.487Z, thread-id=854, tx_id=7AAE547F84F98B7AACE50E8A92FA87E7653B4360FC821297D6F4F3A49C569821}
[INFO ] 2023-01-31T09:27:50,510Z [Mock network] corda.flow. - All parties received the transaction successfully. {actor_id=Only For Testing, actor_owning_identity=O=Mock Company 2, L=London, C=GB, actor_store_id=TEST, fiber-id=10000004, flow-id=279bad89-d09e-4f3c-aa85-cce787728b01, invocation_id=9e6ef368-4b5a-4420-993f-89a78e3760b8, invocation_timestamp=2023-01-31T09:27:50.487Z, origin=Only For Testing, session_id=9e6ef368-4b5a-4420-993f-89a78e3760b8, session_timestamp=2023-01-31T09:27:50.487Z, thread-id=854, tx_id=7AAE547F84F98B7AACE50E8A92FA87E7653B4360FC821297D6F4F3A49C569821}
[INFO ] 2023-01-31T09:27:50,543Z [Mock network] corda.flow. - Received transaction acknowledgement request from party O=Mock Company 2, L=London, C=GB. {fiber-id=10000005, flow-id=2df257fb-3b1d-4a88-8f33-b1bf64edffcb, invocation_id=96fbc13f-1a7e-46d8-934c-5b13dd774921, invocation_timestamp=2023-01-31T09:27:50.528Z, origin=O=Mock Company 2, L=London, C=GB, session_id=96fbc13f-1a7e-46d8-934c-5b13dd774921, session_timestamp=2023-01-31T09:27:50.528Z, thread-id=854, tx_id=7AAE547F84F98B7AACE50E8A92FA87E7653B4360FC821297D6F4F3A49C569821}
[INFO ] 2023-01-31T09:27:50,552Z [Mock network] corda.flow. - Transaction dependencies resolution completed. {fiber-id=10000005, flow-id=2df257fb-3b1d-4a88-8f33-b1bf64edffcb, invocation_id=96fbc13f-1a7e-46d8-934c-5b13dd774921, invocation_timestamp=2023-01-31T09:27:50.528Z, origin=O=Mock Company 2, L=London, C=GB, session_id=96fbc13f-1a7e-46d8-934c-5b13dd774921, session_timestamp=2023-01-31T09:27:50.528Z, thread-id=854, tx_id=7AAE547F84F98B7AACE50E8A92FA87E7653B4360FC821297D6F4F3A49C569821}
[INFO ] 2023-01-31T09:27:50,556Z [Mock network] corda.flow. - Successfully received fully signed tx. Sending it to the vault for processing. {fiber-id=10000005, flow-id=2df257fb-3b1d-4a88-8f33-b1bf64edffcb, invocation_id=96fbc13f-1a7e-46d8-934c-5b13dd774921, invocation_timestamp=2023-01-31T09:27:50.528Z, origin=O=Mock Company 2, L=London, C=GB, session_id=96fbc13f-1a7e-46d8-934c-5b13dd774921, session_timestamp=2023-01-31T09:27:50.528Z, thread-id=854, tx_id=7AAE547F84F98B7AACE50E8A92FA87E7653B4360FC821297D6F4F3A49C569821}
[INFO ] 2023-01-31T09:27:50,561Z [Mock network] corda.flow. - Successfully recorded received transaction locally. {fiber-id=10000005, flow-id=2df257fb-3b1d-4a88-8f33-b1bf64edffcb, invocation_id=96fbc13f-1a7e-46d8-934c-5b13dd774921, invocation_timestamp=2023-01-31T09:27:50.528Z, origin=O=Mock Company 2, L=London, C=GB, session_id=96fbc13f-1a7e-46d8-934c-5b13dd774921, session_timestamp=2023-01-31T09:27:50.528Z, thread-id=854, tx_id=7AAE547F84F98B7AACE50E8A92FA87E7653B4360FC821297D6F4F3A49C569821}
[INFO ] 2023-01-31T09:27:50,610Z [Mock network] corda.flow. - Received transaction acknowledgement request from party O=Mock Company 2, L=London, C=GB. {fiber-id=10000006, flow-id=684f8ea3-a0d4-4f20-8eb8-8976ee9183c9, invocation_id=15dbbc29-65e2-4599-b33a-affda6a1c1e2, invocation_timestamp=2023-01-31T09:27:50.595Z, origin=O=Mock Company 2, L=London, C=GB, session_id=15dbbc29-65e2-4599-b33a-affda6a1c1e2, session_timestamp=2023-01-31T09:27:50.595Z, thread-id=854, tx_id=7AAE547F84F98B7AACE50E8A92FA87E7653B4360FC821297D6F4F3A49C569821}
[INFO ] 2023-01-31T09:27:50,632Z [Mock network] corda.flow. - Transaction dependencies resolution completed. {fiber-id=10000006, flow-id=684f8ea3-a0d4-4f20-8eb8-8976ee9183c9, invocation_id=15dbbc29-65e2-4599-b33a-affda6a1c1e2, invocation_timestamp=2023-01-31T09:27:50.595Z, origin=O=Mock Company 2, L=London, C=GB, session_id=15dbbc29-65e2-4599-b33a-affda6a1c1e2, session_timestamp=2023-01-31T09:27:50.595Z, thread-id=854, tx_id=7AAE547F84F98B7AACE50E8A92FA87E7653B4360FC821297D6F4F3A49C569821}
[INFO ] 2023-01-31T09:27:50,636Z [Mock network] corda.flow. - Successfully received fully signed tx. Sending it to the vault for processing. {fiber-id=10000006, flow-id=684f8ea3-a0d4-4f20-8eb8-8976ee9183c9, invocation_id=15dbbc29-65e2-4599-b33a-affda6a1c1e2, invocation_timestamp=2023-01-31T09:27:50.595Z, origin=O=Mock Company 2, L=London, C=GB, session_id=15dbbc29-65e2-4599-b33a-affda6a1c1e2, session_timestamp=2023-01-31T09:27:50.595Z, thread-id=854, tx_id=7AAE547F84F98B7AACE50E8A92FA87E7653B4360FC821297D6F4F3A49C569821}
[INFO ] 2023-01-31T09:27:50,643Z [Mock network] corda.flow. - Successfully recorded received transaction locally. {fiber-id=10000006, flow-id=684f8ea3-a0d4-4f20-8eb8-8976ee9183c9, invocation_id=15dbbc29-65e2-4599-b33a-affda6a1c1e2, invocation_timestamp=2023-01-31T09:27:50.595Z, origin=O=Mock Company 2, L=London, C=GB, session_id=15dbbc29-65e2-4599-b33a-affda6a1c1e2, session_timestamp=2023-01-31T09:27:50.595Z, thread-id=854, tx_id=7AAE547F84F98B7AACE50E8A92FA87E7653B4360FC821297D6F4F3A49C569821}
[INFO ] 2023-01-31T09:27:50,682Z [Mock network] corda.flow. - No need to notarise this transaction. {actor_id=Only For Testing, actor_owning_identity=O=Mock Company 3, L=London, C=GB, actor_store_id=TEST, fiber-id=10000007, flow-id=a798338d-0705-4532-9431-7b6e5a469aa0, invocation_id=3b493932-936b-4cd9-a254-8f33f4c50c64, invocation_timestamp=2023-01-31T09:27:50.663Z, origin=Only For Testing, session_id=3b493932-936b-4cd9-a254-8f33f4c50c64, session_timestamp=2023-01-31T09:27:50.663Z, thread-id=854, tx_id=CACEFFF893CF27B10129AD9B49F091BD78AFCDAAA9AA104C225DFB12A4DF05FE}
[INFO ] 2023-01-31T09:27:50,682Z [Mock network] corda.flow. - Recording transaction locally. {actor_id=Only For Testing, actor_owning_identity=O=Mock Company 3, L=London, C=GB, actor_store_id=TEST, fiber-id=10000007, flow-id=a798338d-0705-4532-9431-7b6e5a469aa0, invocation_id=3b493932-936b-4cd9-a254-8f33f4c50c64, invocation_timestamp=2023-01-31T09:27:50.663Z, origin=Only For Testing, session_id=3b493932-936b-4cd9-a254-8f33f4c50c64, session_timestamp=2023-01-31T09:27:50.663Z, thread-id=854, tx_id=CACEFFF893CF27B10129AD9B49F091BD78AFCDAAA9AA104C225DFB12A4DF05FE}
[INFO ] 2023-01-31T09:27:50,685Z [Mock network] corda.flow. - Recorded transaction locally successfully. {actor_id=Only For Testing, actor_owning_identity=O=Mock Company 3, L=London, C=GB, actor_store_id=TEST, fiber-id=10000007, flow-id=a798338d-0705-4532-9431-7b6e5a469aa0, invocation_id=3b493932-936b-4cd9-a254-8f33f4c50c64, invocation_timestamp=2023-01-31T09:27:50.663Z, origin=Only For Testing, session_id=3b493932-936b-4cd9-a254-8f33f4c50c64, session_timestamp=2023-01-31T09:27:50.663Z, thread-id=854, tx_id=CACEFFF893CF27B10129AD9B49F091BD78AFCDAAA9AA104C225DFB12A4DF05FE}
[INFO ] 2023-01-31T09:27:50,685Z [Mock network] corda.flow. - All parties received the transaction successfully. {actor_id=Only For Testing, actor_owning_identity=O=Mock Company 3, L=London, C=GB, actor_store_id=TEST, fiber-id=10000007, flow-id=a798338d-0705-4532-9431-7b6e5a469aa0, invocation_id=3b493932-936b-4cd9-a254-8f33f4c50c64, invocation_timestamp=2023-01-31T09:27:50.663Z, origin=Only For Testing, session_id=3b493932-936b-4cd9-a254-8f33f4c50c64, session_timestamp=2023-01-31T09:27:50.663Z, thread-id=854, tx_id=CACEFFF893CF27B10129AD9B49F091BD78AFCDAAA9AA104C225DFB12A4DF05FE}
[INFO ] 2023-01-31T09:27:50,712Z [Mock network] corda.flow. - Received transaction acknowledgement request from party O=Mock Company 3, L=London, C=GB. {fiber-id=10000008, flow-id=099334bd-321c-4ae1-af61-973116574c6f, invocation_id=cf8a0b52-c2b8-426c-8228-b4ea45bd3949, invocation_timestamp=2023-01-31T09:27:50.701Z, origin=O=Mock Company 3, L=London, C=GB, session_id=cf8a0b52-c2b8-426c-8228-b4ea45bd3949, session_timestamp=2023-01-31T09:27:50.701Z, thread-id=854, tx_id=CACEFFF893CF27B10129AD9B49F091BD78AFCDAAA9AA104C225DFB12A4DF05FE}
[INFO ] 2023-01-31T09:27:50,721Z [Mock network] corda.flow. - Transaction dependencies resolution completed. {fiber-id=10000008, flow-id=099334bd-321c-4ae1-af61-973116574c6f, invocation_id=cf8a0b52-c2b8-426c-8228-b4ea45bd3949, invocation_timestamp=2023-01-31T09:27:50.701Z, origin=O=Mock Company 3, L=London, C=GB, session_id=cf8a0b52-c2b8-426c-8228-b4ea45bd3949, session_timestamp=2023-01-31T09:27:50.701Z, thread-id=854, tx_id=CACEFFF893CF27B10129AD9B49F091BD78AFCDAAA9AA104C225DFB12A4DF05FE}
[INFO ] 2023-01-31T09:27:50,725Z [Mock network] corda.flow. - Successfully received fully signed tx. Sending it to the vault for processing. {fiber-id=10000008, flow-id=099334bd-321c-4ae1-af61-973116574c6f, invocation_id=cf8a0b52-c2b8-426c-8228-b4ea45bd3949, invocation_timestamp=2023-01-31T09:27:50.701Z, origin=O=Mock Company 3, L=London, C=GB, session_id=cf8a0b52-c2b8-426c-8228-b4ea45bd3949, session_timestamp=2023-01-31T09:27:50.701Z, thread-id=854, tx_id=CACEFFF893CF27B10129AD9B49F091BD78AFCDAAA9AA104C225DFB12A4DF05FE}
[INFO ] 2023-01-31T09:27:50,731Z [Mock network] corda.flow. - Successfully recorded received transaction locally. {fiber-id=10000008, flow-id=099334bd-321c-4ae1-af61-973116574c6f, invocation_id=cf8a0b52-c2b8-426c-8228-b4ea45bd3949, invocation_timestamp=2023-01-31T09:27:50.701Z, origin=O=Mock Company 3, L=London, C=GB, session_id=cf8a0b52-c2b8-426c-8228-b4ea45bd3949, session_timestamp=2023-01-31T09:27:50.701Z, thread-id=854, tx_id=CACEFFF893CF27B10129AD9B49F091BD78AFCDAAA9AA104C225DFB12A4DF05FE}
[INFO ] 2023-01-31T09:27:50,769Z [Mock network] corda.flow. - Received transaction acknowledgement request from party O=Mock Company 3, L=London, C=GB. {fiber-id=10000009, flow-id=79adbc44-4326-4c32-9e80-fdb753fbce4c, invocation_id=f67fa828-f5d3-42c2-bfcb-c0bb43682e3c, invocation_timestamp=2023-01-31T09:27:50.757Z, origin=O=Mock Company 3, L=London, C=GB, session_id=f67fa828-f5d3-42c2-bfcb-c0bb43682e3c, session_timestamp=2023-01-31T09:27:50.757Z, thread-id=854, tx_id=CACEFFF893CF27B10129AD9B49F091BD78AFCDAAA9AA104C225DFB12A4DF05FE}
[INFO ] 2023-01-31T09:27:50,777Z [Mock network] corda.flow. - Transaction dependencies resolution completed. {fiber-id=10000009, flow-id=79adbc44-4326-4c32-9e80-fdb753fbce4c, invocation_id=f67fa828-f5d3-42c2-bfcb-c0bb43682e3c, invocation_timestamp=2023-01-31T09:27:50.757Z, origin=O=Mock Company 3, L=London, C=GB, session_id=f67fa828-f5d3-42c2-bfcb-c0bb43682e3c, session_timestamp=2023-01-31T09:27:50.757Z, thread-id=854, tx_id=CACEFFF893CF27B10129AD9B49F091BD78AFCDAAA9AA104C225DFB12A4DF05FE}
[INFO ] 2023-01-31T09:27:50,781Z [Mock network] corda.flow. - Successfully received fully signed tx. Sending it to the vault for processing. {fiber-id=10000009, flow-id=79adbc44-4326-4c32-9e80-fdb753fbce4c, invocation_id=f67fa828-f5d3-42c2-bfcb-c0bb43682e3c, invocation_timestamp=2023-01-31T09:27:50.757Z, origin=O=Mock Company 3, L=London, C=GB, session_id=f67fa828-f5d3-42c2-bfcb-c0bb43682e3c, session_timestamp=2023-01-31T09:27:50.757Z, thread-id=854, tx_id=CACEFFF893CF27B10129AD9B49F091BD78AFCDAAA9AA104C225DFB12A4DF05FE}
[INFO ] 2023-01-31T09:27:50,788Z [Mock network] corda.flow. - Successfully recorded received transaction locally. {fiber-id=10000009, flow-id=79adbc44-4326-4c32-9e80-fdb753fbce4c, invocation_id=f67fa828-f5d3-42c2-bfcb-c0bb43682e3c, invocation_timestamp=2023-01-31T09:27:50.757Z, origin=O=Mock Company 3, L=London, C=GB, session_id=f67fa828-f5d3-42c2-bfcb-c0bb43682e3c, session_timestamp=2023-01-31T09:27:50.757Z, thread-id=854, tx_id=CACEFFF893CF27B10129AD9B49F091BD78AFCDAAA9AA104C225DFB12A4DF05FE}
[INFO ] 2023-01-31T09:27:50,838Z [Mock network] identity.PersistentIdentityService. - Linking: B3C24C48D290B79DC2B313462BAC10D149A1A62D1044085CE4905B144DFDA447 to O=Mock Company 1, L=London, C=GB {actor_id=Only For Testing, actor_owning_identity=O=Mock Company 1, L=London, C=GB, actor_store_id=TEST, fiber-id=10000011, flow-id=5a439349-3b17-4949-889e-b5a576a08ade, invocation_id=24e60915-b42b-42b3-825c-4af5ed3120b8, invocation_timestamp=2023-01-31T09:27:50.824Z, origin=Only For Testing, session_id=24e60915-b42b-42b3-825c-4af5ed3120b8, session_timestamp=2023-01-31T09:27:50.824Z, thread-id=854}
[INFO ] 2023-01-31T09:27:50,942Z [Mock network] identity.PersistentIdentityService. - Linking: 4352EC19359841FCB5071BA0D1A7849BD84D3B2356F5257065EFA059DC70D998 to O=Mock Company 2, L=London, C=GB {fiber-id=10000012, flow-id=86975e11-4b18-4670-87f2-637812b28572, invocation_id=d99126cf-43b6-4f17-9040-47e9e8ae177e, invocation_timestamp=2023-01-31T09:27:50.854Z, origin=O=Mock Company 1, L=London, C=GB, session_id=d99126cf-43b6-4f17-9040-47e9e8ae177e, session_timestamp=2023-01-31T09:27:50.854Z, thread-id=854}
[INFO ] 2023-01-31T09:27:50,977Z [Mock network] identity.PersistentIdentityService. - Linking: 4352EC19359841FCB5071BA0D1A7849BD84D3B2356F5257065EFA059DC70D998 to O=Mock Company 2, L=London, C=GB {actor_id=Only For Testing, actor_owning_identity=O=Mock Company 1, L=London, C=GB, actor_store_id=TEST, fiber-id=10000011, flow-id=5a439349-3b17-4949-889e-b5a576a08ade, invocation_id=24e60915-b42b-42b3-825c-4af5ed3120b8, invocation_timestamp=2023-01-31T09:27:50.824Z, origin=Only For Testing, session_id=24e60915-b42b-42b3-825c-4af5ed3120b8, session_timestamp=2023-01-31T09:27:50.824Z, thread-id=854}
[INFO ] 2023-01-31T09:27:51,100Z [Mock network] corda.flow. - Received transaction acknowledgement request from party O=Mock Company 1, L=London, C=GB. {fiber-id=10000013, flow-id=878df7e8-0d98-4605-8a4f-846e80e08aeb, invocation_id=814d02e6-2c23-4ece-af93-26676b39811e, invocation_timestamp=2023-01-31T09:27:51.084Z, origin=O=Mock Company 1, L=London, C=GB, session_id=814d02e6-2c23-4ece-af93-26676b39811e, session_timestamp=2023-01-31T09:27:51.084Z, thread-id=854, tx_id=7374B412E844678A3E05955355664F28F72F2E2764509ACC6EDCF5AE30A325E3}
[INFO ] 2023-01-31T09:27:51,108Z [Mock network] corda.flow. - Transaction dependencies resolution completed. {fiber-id=10000013, flow-id=878df7e8-0d98-4605-8a4f-846e80e08aeb, invocation_id=814d02e6-2c23-4ece-af93-26676b39811e, invocation_timestamp=2023-01-31T09:27:51.084Z, origin=O=Mock Company 1, L=London, C=GB, session_id=814d02e6-2c23-4ece-af93-26676b39811e, session_timestamp=2023-01-31T09:27:51.084Z, thread-id=854, tx_id=7374B412E844678A3E05955355664F28F72F2E2764509ACC6EDCF5AE30A325E3}
[INFO ] 2023-01-31T09:27:51,197Z [Mock network] corda.flow. - No need to notarise this transaction. {actor_id=Only For Testing, actor_owning_identity=O=Mock Company 1, L=London, C=GB, actor_store_id=TEST, fiber-id=10000011, flow-id=5a439349-3b17-4949-889e-b5a576a08ade, invocation_id=24e60915-b42b-42b3-825c-4af5ed3120b8, invocation_timestamp=2023-01-31T09:27:50.824Z, origin=Only For Testing, session_id=24e60915-b42b-42b3-825c-4af5ed3120b8, session_timestamp=2023-01-31T09:27:50.824Z, thread-id=854, tx_id=7374B412E844678A3E05955355664F28F72F2E2764509ACC6EDCF5AE30A325E3}
[INFO ] 2023-01-31T09:27:51,197Z [Mock network] corda.flow. - Recording transaction locally. {actor_id=Only For Testing, actor_owning_identity=O=Mock Company 1, L=London, C=GB, actor_store_id=TEST, fiber-id=10000011, flow-id=5a439349-3b17-4949-889e-b5a576a08ade, invocation_id=24e60915-b42b-42b3-825c-4af5ed3120b8, invocation_timestamp=2023-01-31T09:27:50.824Z, origin=Only For Testing, session_id=24e60915-b42b-42b3-825c-4af5ed3120b8, session_timestamp=2023-01-31T09:27:50.824Z, thread-id=854, tx_id=7374B412E844678A3E05955355664F28F72F2E2764509ACC6EDCF5AE30A325E3}
[INFO ] 2023-01-31T09:27:51,202Z [Mock network] corda.flow. - Recorded transaction locally successfully. {actor_id=Only For Testing, actor_owning_identity=O=Mock Company 1, L=London, C=GB, actor_store_id=TEST, fiber-id=10000011, flow-id=5a439349-3b17-4949-889e-b5a576a08ade, invocation_id=24e60915-b42b-42b3-825c-4af5ed3120b8, invocation_timestamp=2023-01-31T09:27:50.824Z, origin=Only For Testing, session_id=24e60915-b42b-42b3-825c-4af5ed3120b8, session_timestamp=2023-01-31T09:27:50.824Z, thread-id=854, tx_id=7374B412E844678A3E05955355664F28F72F2E2764509ACC6EDCF5AE30A325E3}
[INFO ] 2023-01-31T09:27:51,228Z [Mock network] corda.flow. - Received transaction acknowledgement request from party O=Mock Company 1, L=London, C=GB. {fiber-id=10000013, flow-id=878df7e8-0d98-4605-8a4f-846e80e08aeb, invocation_id=814d02e6-2c23-4ece-af93-26676b39811e, invocation_timestamp=2023-01-31T09:27:51.084Z, origin=O=Mock Company 1, L=London, C=GB, session_id=814d02e6-2c23-4ece-af93-26676b39811e, session_timestamp=2023-01-31T09:27:51.084Z, thread-id=854, tx_id=7374B412E844678A3E05955355664F28F72F2E2764509ACC6EDCF5AE30A325E3}
[INFO ] 2023-01-31T09:27:51,234Z [Mock network] corda.flow. - Transaction dependencies resolution completed. {fiber-id=10000013, flow-id=878df7e8-0d98-4605-8a4f-846e80e08aeb, invocation_id=814d02e6-2c23-4ece-af93-26676b39811e, invocation_timestamp=2023-01-31T09:27:51.084Z, origin=O=Mock Company 1, L=London, C=GB, session_id=814d02e6-2c23-4ece-af93-26676b39811e, session_timestamp=2023-01-31T09:27:51.084Z, thread-id=854, tx_id=7374B412E844678A3E05955355664F28F72F2E2764509ACC6EDCF5AE30A325E3}
[INFO ] 2023-01-31T09:27:51,239Z [Mock network] corda.flow. - Successfully received fully signed tx. Sending it to the vault for processing. {fiber-id=10000013, flow-id=878df7e8-0d98-4605-8a4f-846e80e08aeb, invocation_id=814d02e6-2c23-4ece-af93-26676b39811e, invocation_timestamp=2023-01-31T09:27:51.084Z, origin=O=Mock Company 1, L=London, C=GB, session_id=814d02e6-2c23-4ece-af93-26676b39811e, session_timestamp=2023-01-31T09:27:51.084Z, thread-id=854, tx_id=7374B412E844678A3E05955355664F28F72F2E2764509ACC6EDCF5AE30A325E3}
[INFO ] 2023-01-31T09:27:51,243Z [Mock network] corda.flow. - Successfully recorded received transaction locally. {fiber-id=10000013, flow-id=878df7e8-0d98-4605-8a4f-846e80e08aeb, invocation_id=814d02e6-2c23-4ece-af93-26676b39811e, invocation_timestamp=2023-01-31T09:27:51.084Z, origin=O=Mock Company 1, L=London, C=GB, session_id=814d02e6-2c23-4ece-af93-26676b39811e, session_timestamp=2023-01-31T09:27:51.084Z, thread-id=854, tx_id=7374B412E844678A3E05955355664F28F72F2E2764509ACC6EDCF5AE30A325E3}
[WARN ] 2023-01-31T09:27:51,245Z [Mock network] persistence.AbstractPartyToX500NameAsStringConverter. - Identity service unable to resolve AbstractParty: Anonymous(DLD6hpL6vSd2BaegQNWLKDu7rqjaXnBp43XVjVYnSzVPDg) {actor_id=Only For Testing, actor_owning_identity=O=Mock Company 1, L=London, C=GB, actor_store_id=TEST, fiber-id=10000013, flow-id=878df7e8-0d98-4605-8a4f-846e80e08aeb, invocation_id=814d02e6-2c23-4ece-af93-26676b39811e, invocation_timestamp=2023-01-31T09:27:51.084Z, origin=O=Mock Company 1, L=London, C=GB, session_id=814d02e6-2c23-4ece-af93-26676b39811e, session_timestamp=2023-01-31T09:27:51.084Z, thread-id=854}
[INFO ] 2023-01-31T09:27:51,250Z [Mock network] corda.flow. - Party O=Mock Company 2, L=London, C=GB received the transaction. {actor_id=Only For Testing, actor_owning_identity=O=Mock Company 1, L=London, C=GB, actor_store_id=TEST, fiber-id=10000011, flow-id=5a439349-3b17-4949-889e-b5a576a08ade, invocation_id=24e60915-b42b-42b3-825c-4af5ed3120b8, invocation_timestamp=2023-01-31T09:27:50.824Z, origin=Only For Testing, session_id=24e60915-b42b-42b3-825c-4af5ed3120b8, session_timestamp=2023-01-31T09:27:50.824Z, thread-id=854, tx_id=7374B412E844678A3E05955355664F28F72F2E2764509ACC6EDCF5AE30A325E3}
[INFO ] 2023-01-31T09:27:51,250Z [Mock network] corda.flow. - All parties received the transaction successfully. {actor_id=Only For Testing, actor_owning_identity=O=Mock Company 1, L=London, C=GB, actor_store_id=TEST, fiber-id=10000011, flow-id=5a439349-3b17-4949-889e-b5a576a08ade, invocation_id=24e60915-b42b-42b3-825c-4af5ed3120b8, invocation_timestamp=2023-01-31T09:27:50.824Z, origin=Only For Testing, session_id=24e60915-b42b-42b3-825c-4af5ed3120b8, session_timestamp=2023-01-31T09:27:50.824Z, thread-id=854, tx_id=7374B412E844678A3E05955355664F28F72F2E2764509ACC6EDCF5AE30A325E3}
[INFO ] 2023-01-31T09:27:51,312Z [Mock network] corda.flow. - Received transaction acknowledgement request from party O=Mock Company 1, L=London, C=GB. {fiber-id=10000014, flow-id=b58252dd-d71b-4925-9fcc-94c1f986b30e, invocation_id=bf2247f8-17f8-4f1a-a3c9-ccce8b730126, invocation_timestamp=2023-01-31T09:27:51.283Z, origin=O=Mock Company 1, L=London, C=GB, session_id=bf2247f8-17f8-4f1a-a3c9-ccce8b730126, session_timestamp=2023-01-31T09:27:51.283Z, thread-id=854, tx_id=7AAE547F84F98B7AACE50E8A92FA87E7653B4360FC821297D6F4F3A49C569821}
[INFO ] 2023-01-31T09:27:51,318Z [Mock network] corda.flow. - Transaction dependencies resolution completed. {fiber-id=10000014, flow-id=b58252dd-d71b-4925-9fcc-94c1f986b30e, invocation_id=bf2247f8-17f8-4f1a-a3c9-ccce8b730126, invocation_timestamp=2023-01-31T09:27:51.283Z, origin=O=Mock Company 1, L=London, C=GB, session_id=bf2247f8-17f8-4f1a-a3c9-ccce8b730126, session_timestamp=2023-01-31T09:27:51.283Z, thread-id=854, tx_id=7AAE547F84F98B7AACE50E8A92FA87E7653B4360FC821297D6F4F3A49C569821}
[INFO ] 2023-01-31T09:27:51,321Z [Mock network] corda.flow. - Successfully received fully signed tx. Sending it to the vault for processing. {fiber-id=10000014, flow-id=b58252dd-d71b-4925-9fcc-94c1f986b30e, invocation_id=bf2247f8-17f8-4f1a-a3c9-ccce8b730126, invocation_timestamp=2023-01-31T09:27:51.283Z, origin=O=Mock Company 1, L=London, C=GB, session_id=bf2247f8-17f8-4f1a-a3c9-ccce8b730126, session_timestamp=2023-01-31T09:27:51.283Z, thread-id=854, tx_id=7AAE547F84F98B7AACE50E8A92FA87E7653B4360FC821297D6F4F3A49C569821}
[INFO ] 2023-01-31T09:27:51,325Z [Mock network] corda.flow. - Successfully recorded received transaction locally. {fiber-id=10000014, flow-id=b58252dd-d71b-4925-9fcc-94c1f986b30e, invocation_id=bf2247f8-17f8-4f1a-a3c9-ccce8b730126, invocation_timestamp=2023-01-31T09:27:51.283Z, origin=O=Mock Company 1, L=London, C=GB, session_id=bf2247f8-17f8-4f1a-a3c9-ccce8b730126, session_timestamp=2023-01-31T09:27:51.283Z, thread-id=854, tx_id=7AAE547F84F98B7AACE50E8A92FA87E7653B4360FC821297D6F4F3A49C569821}
[INFO ] 2023-01-31T09:27:51,344Z [Mock network] identity.PersistentIdentityService. - An existing entry for DL5XoerQNaWGoJ9xeiRTwQuy2wagxHuW3tWrs7mDPdydWw already exists. {fiber-id=10000014, flow-id=b58252dd-d71b-4925-9fcc-94c1f986b30e, invocation_id=bf2247f8-17f8-4f1a-a3c9-ccce8b730126, invocation_timestamp=2023-01-31T09:27:51.283Z, origin=O=Mock Company 1, L=London, C=GB, session_id=bf2247f8-17f8-4f1a-a3c9-ccce8b730126, session_timestamp=2023-01-31T09:27:51.283Z, thread-id=854, tx_id=7AAE547F84F98B7AACE50E8A92FA87E7653B4360FC821297D6F4F3A49C569821}
[INFO ] 2023-01-31T09:27:51,350Z [Mock network] corda.flow. - Received transaction acknowledgement request from party O=Mock Company 1, L=London, C=GB. {fiber-id=10000014, flow-id=b58252dd-d71b-4925-9fcc-94c1f986b30e, invocation_id=bf2247f8-17f8-4f1a-a3c9-ccce8b730126, invocation_timestamp=2023-01-31T09:27:51.283Z, origin=O=Mock Company 1, L=London, C=GB, session_id=bf2247f8-17f8-4f1a-a3c9-ccce8b730126, session_timestamp=2023-01-31T09:27:51.283Z, thread-id=854, tx_id=267E9B4976F63A87457DA8438C3CA95D95B178CD333338E0650187B319C3EEEA}
[INFO ] 2023-01-31T09:27:51,356Z [Mock network] corda.flow. - Transaction dependencies resolution completed. {fiber-id=10000014, flow-id=b58252dd-d71b-4925-9fcc-94c1f986b30e, invocation_id=bf2247f8-17f8-4f1a-a3c9-ccce8b730126, invocation_timestamp=2023-01-31T09:27:51.283Z, origin=O=Mock Company 1, L=London, C=GB, session_id=bf2247f8-17f8-4f1a-a3c9-ccce8b730126, session_timestamp=2023-01-31T09:27:51.283Z, thread-id=854, tx_id=267E9B4976F63A87457DA8438C3CA95D95B178CD333338E0650187B319C3EEEA}
[INFO ] 2023-01-31T09:27:51,358Z [Mock network] corda.flow. - Successfully received fully signed tx. Sending it to the vault for processing. {fiber-id=10000014, flow-id=b58252dd-d71b-4925-9fcc-94c1f986b30e, invocation_id=bf2247f8-17f8-4f1a-a3c9-ccce8b730126, invocation_timestamp=2023-01-31T09:27:51.283Z, origin=O=Mock Company 1, L=London, C=GB, session_id=bf2247f8-17f8-4f1a-a3c9-ccce8b730126, session_timestamp=2023-01-31T09:27:51.283Z, thread-id=854, tx_id=267E9B4976F63A87457DA8438C3CA95D95B178CD333338E0650187B319C3EEEA}
[INFO ] 2023-01-31T09:27:51,361Z [Mock network] corda.flow. - Successfully recorded received transaction locally. {fiber-id=10000014, flow-id=b58252dd-d71b-4925-9fcc-94c1f986b30e, invocation_id=bf2247f8-17f8-4f1a-a3c9-ccce8b730126, invocation_timestamp=2023-01-31T09:27:51.283Z, origin=O=Mock Company 1, L=London, C=GB, session_id=bf2247f8-17f8-4f1a-a3c9-ccce8b730126, session_timestamp=2023-01-31T09:27:51.283Z, thread-id=854, tx_id=267E9B4976F63A87457DA8438C3CA95D95B178CD333338E0650187B319C3EEEA}
[INFO ] 2023-01-31T09:27:51,378Z [Mock network] identity.PersistentIdentityService. - Linking: B3C24C48D290B79DC2B313462BAC10D149A1A62D1044085CE4905B144DFDA447 to O=Mock Company 1, L=London, C=GB {fiber-id=10000014, flow-id=b58252dd-d71b-4925-9fcc-94c1f986b30e, invocation_id=bf2247f8-17f8-4f1a-a3c9-ccce8b730126, invocation_timestamp=2023-01-31T09:27:51.283Z, origin=O=Mock Company 1, L=London, C=GB, session_id=bf2247f8-17f8-4f1a-a3c9-ccce8b730126, session_timestamp=2023-01-31T09:27:51.283Z, thread-id=854, tx_id=267E9B4976F63A87457DA8438C3CA95D95B178CD333338E0650187B319C3EEEA}
[INFO ] 2023-01-31T09:27:51,392Z [Mock network] corda.flow. - Received transaction acknowledgement request from party O=Mock Company 1, L=London, C=GB. {fiber-id=10000014, flow-id=b58252dd-d71b-4925-9fcc-94c1f986b30e, invocation_id=bf2247f8-17f8-4f1a-a3c9-ccce8b730126, invocation_timestamp=2023-01-31T09:27:51.283Z, origin=O=Mock Company 1, L=London, C=GB, session_id=bf2247f8-17f8-4f1a-a3c9-ccce8b730126, session_timestamp=2023-01-31T09:27:51.283Z, thread-id=854, tx_id=7374B412E844678A3E05955355664F28F72F2E2764509ACC6EDCF5AE30A325E3}
[INFO ] 2023-01-31T09:27:51,397Z [Mock network] corda.flow. - Transaction dependencies resolution completed. {fiber-id=10000014, flow-id=b58252dd-d71b-4925-9fcc-94c1f986b30e, invocation_id=bf2247f8-17f8-4f1a-a3c9-ccce8b730126, invocation_timestamp=2023-01-31T09:27:51.283Z, origin=O=Mock Company 1, L=London, C=GB, session_id=bf2247f8-17f8-4f1a-a3c9-ccce8b730126, session_timestamp=2023-01-31T09:27:51.283Z, thread-id=854, tx_id=7374B412E844678A3E05955355664F28F72F2E2764509ACC6EDCF5AE30A325E3}
[INFO ] 2023-01-31T09:27:51,402Z [Mock network] corda.flow. - Successfully received fully signed tx. Sending it to the vault for processing. {fiber-id=10000014, flow-id=b58252dd-d71b-4925-9fcc-94c1f986b30e, invocation_id=bf2247f8-17f8-4f1a-a3c9-ccce8b730126, invocation_timestamp=2023-01-31T09:27:51.283Z, origin=O=Mock Company 1, L=London, C=GB, session_id=bf2247f8-17f8-4f1a-a3c9-ccce8b730126, session_timestamp=2023-01-31T09:27:51.283Z, thread-id=854, tx_id=7374B412E844678A3E05955355664F28F72F2E2764509ACC6EDCF5AE30A325E3}
[INFO ] 2023-01-31T09:27:51,406Z [Mock network] corda.flow. - Successfully recorded received transaction locally. {fiber-id=10000014, flow-id=b58252dd-d71b-4925-9fcc-94c1f986b30e, invocation_id=bf2247f8-17f8-4f1a-a3c9-ccce8b730126, invocation_timestamp=2023-01-31T09:27:51.283Z, origin=O=Mock Company 1, L=London, C=GB, session_id=bf2247f8-17f8-4f1a-a3c9-ccce8b730126, session_timestamp=2023-01-31T09:27:51.283Z, thread-id=854, tx_id=7374B412E844678A3E05955355664F28F72F2E2764509ACC6EDCF5AE30A325E3}
[INFO ] 2023-01-31T09:27:51,486Z [Mock network] identity.PersistentIdentityService. - Linking: BD62BCA4BF5182D2892DC177A287DFCC12B32E07C14E0943309631AB152F62E6 to O=Mock Company 1, L=London, C=GB {fiber-id=10000017, flow-id=66ca0d29-7770-4221-b39f-31418b0b7a5f, invocation_id=bacb89d5-9b3f-4f36-af84-7b4e25803917, invocation_timestamp=2023-01-31T09:27:51.463Z, origin=O=Mock Company 2, L=London, C=GB, session_id=bacb89d5-9b3f-4f36-af84-7b4e25803917, session_timestamp=2023-01-31T09:27:51.463Z, thread-id=854}
[INFO ] 2023-01-31T09:27:51,496Z [Mock network] identity.PersistentIdentityService. - Linking: BD62BCA4BF5182D2892DC177A287DFCC12B32E07C14E0943309631AB152F62E6 to O=Mock Company 1, L=London, C=GB {actor_id=Only For Testing, actor_owning_identity=O=Mock Company 2, L=London, C=GB, actor_store_id=TEST, fiber-id=10000016, flow-id=4cbaf06d-ffdc-4efe-93f1-1598544c1569, invocation_id=98ea7266-ee0d-4277-88b6-196b313f018a, invocation_timestamp=2023-01-31T09:27:51.441Z, origin=Only For Testing, session_id=98ea7266-ee0d-4277-88b6-196b313f018a, session_timestamp=2023-01-31T09:27:51.441Z, thread-id=854}
[INFO ] 2023-01-31T09:27:51,500Z [Mock network] identity.PersistentIdentityService. - Linking: 7ACAB0BB5B49B0EC4EF63A3AF99DA3D161B2E0472378E6A32E9EDA0949C2D5C7 to O=Mock Company 2, L=London, C=GB {actor_id=Only For Testing, actor_owning_identity=O=Mock Company 2, L=London, C=GB, actor_store_id=TEST, fiber-id=10000016, flow-id=4cbaf06d-ffdc-4efe-93f1-1598544c1569, invocation_id=98ea7266-ee0d-4277-88b6-196b313f018a, invocation_timestamp=2023-01-31T09:27:51.441Z, origin=Only For Testing, session_id=98ea7266-ee0d-4277-88b6-196b313f018a, session_timestamp=2023-01-31T09:27:51.441Z, thread-id=854}
[INFO ] 2023-01-31T09:27:51,543Z [Mock network] identity.PersistentIdentityService. - Linking: 151611AE8AE765AA4961994A9454D85EDFA7888A9E344C5CB7045BDD1E13EB3A to O=Mock Company 3, L=London, C=GB {fiber-id=10000018, flow-id=75375416-2e9b-4982-86ed-3a8223b0ad87, invocation_id=35a96bc5-58f2-4ca4-8490-d48dd16a9f53, invocation_timestamp=2023-01-31T09:27:51.510Z, origin=O=Mock Company 2, L=London, C=GB, session_id=35a96bc5-58f2-4ca4-8490-d48dd16a9f53, session_timestamp=2023-01-31T09:27:51.510Z, thread-id=854}
[INFO ] 2023-01-31T09:27:51,557Z [Mock network] identity.PersistentIdentityService. - Linking: 151611AE8AE765AA4961994A9454D85EDFA7888A9E344C5CB7045BDD1E13EB3A to O=Mock Company 3, L=London, C=GB {actor_id=Only For Testing, actor_owning_identity=O=Mock Company 2, L=London, C=GB, actor_store_id=TEST, fiber-id=10000016, flow-id=4cbaf06d-ffdc-4efe-93f1-1598544c1569, invocation_id=98ea7266-ee0d-4277-88b6-196b313f018a, invocation_timestamp=2023-01-31T09:27:51.441Z, origin=Only For Testing, session_id=98ea7266-ee0d-4277-88b6-196b313f018a, session_timestamp=2023-01-31T09:27:51.441Z, thread-id=854}
[INFO ] 2023-01-31T09:27:51,618Z [Mock network] corda.flow. - Received transaction acknowledgement request from party O=Mock Company 2, L=London, C=GB. {fiber-id=10000019, flow-id=75bec02a-ec92-4c9d-992d-37d7bb7bce26, invocation_id=881f1b60-0f4f-402f-8a54-734a60fdc0e7, invocation_timestamp=2023-01-31T09:27:51.608Z, origin=O=Mock Company 2, L=London, C=GB, session_id=881f1b60-0f4f-402f-8a54-734a60fdc0e7, session_timestamp=2023-01-31T09:27:51.608Z, thread-id=854, tx_id=32BCD8FC8C5AA5F05D7E009DE38753E0DA01BE0E279CC9C7EA4D34E20833028F}
[INFO ] 2023-01-31T09:27:51,722Z [Mock network] corda.flow. - Transaction dependencies resolution completed. {fiber-id=10000019, flow-id=75bec02a-ec92-4c9d-992d-37d7bb7bce26, invocation_id=881f1b60-0f4f-402f-8a54-734a60fdc0e7, invocation_timestamp=2023-01-31T09:27:51.608Z, origin=O=Mock Company 2, L=London, C=GB, session_id=881f1b60-0f4f-402f-8a54-734a60fdc0e7, session_timestamp=2023-01-31T09:27:51.608Z, thread-id=854, tx_id=32BCD8FC8C5AA5F05D7E009DE38753E0DA01BE0E279CC9C7EA4D34E20833028F}
[INFO ] 2023-01-31T09:27:51,764Z [Mock network] corda.flow. - Received transaction acknowledgement request from party O=Mock Company 2, L=London, C=GB. {fiber-id=10000020, flow-id=9de7f60b-6b44-497e-a123-a883c2fdfb14, invocation_id=0533cdc1-b559-497a-ab6f-d48a556cdcd4, invocation_timestamp=2023-01-31T09:27:51.757Z, origin=O=Mock Company 2, L=London, C=GB, session_id=0533cdc1-b559-497a-ab6f-d48a556cdcd4, session_timestamp=2023-01-31T09:27:51.757Z, thread-id=854, tx_id=32BCD8FC8C5AA5F05D7E009DE38753E0DA01BE0E279CC9C7EA4D34E20833028F}
[INFO ] 2023-01-31T09:27:51,770Z [Mock network] corda.flow. - Transaction dependencies resolution completed. {fiber-id=10000020, flow-id=9de7f60b-6b44-497e-a123-a883c2fdfb14, invocation_id=0533cdc1-b559-497a-ab6f-d48a556cdcd4, invocation_timestamp=2023-01-31T09:27:51.757Z, origin=O=Mock Company 2, L=London, C=GB, session_id=0533cdc1-b559-497a-ab6f-d48a556cdcd4, session_timestamp=2023-01-31T09:27:51.757Z, thread-id=854, tx_id=32BCD8FC8C5AA5F05D7E009DE38753E0DA01BE0E279CC9C7EA4D34E20833028F}
[INFO ] 2023-01-31T09:27:52,038Z [Mock network] corda.flow. - Sending transaction to notary: O=Notary, L=London, C=GB. {actor_id=Only For Testing, actor_owning_identity=O=Mock Company 2, L=London, C=GB, actor_store_id=TEST, fiber-id=10000016, flow-id=4cbaf06d-ffdc-4efe-93f1-1598544c1569, invocation_id=98ea7266-ee0d-4277-88b6-196b313f018a, invocation_timestamp=2023-01-31T09:27:51.441Z, origin=Only For Testing, session_id=98ea7266-ee0d-4277-88b6-196b313f018a, session_timestamp=2023-01-31T09:27:51.441Z, thread-id=854, tx_id=32BCD8FC8C5AA5F05D7E009DE38753E0DA01BE0E279CC9C7EA4D34E20833028F}
[INFO ] 2023-01-31T09:27:52,081Z [Mock network] corda.flow. - Received a notarisation request for Tx [32BCD8FC8C5AA5F05D7E009DE38753E0DA01BE0E279CC9C7EA4D34E20833028F] from [O=Mock Company 2, L=London, C=GB] {fiber-id=10000021, flow-id=db083070-350e-499d-917e-63b68d48374b, invocation_id=da32ef7c-3d4e-46dd-8d8a-07ab24d077a0, invocation_timestamp=2023-01-31T09:27:52.064Z, origin=O=Mock Company 2, L=London, C=GB, session_id=da32ef7c-3d4e-46dd-8d8a-07ab24d077a0, session_timestamp=2023-01-31T09:27:52.064Z, thread-id=854}
[INFO ] 2023-01-31T09:27:52,242Z [Notary request queue processor] jpa.JPAUniquenessProvider. - Processing notarization requests with 1 input states and 0 references {}
[INFO ] 2023-01-31T09:27:52,276Z [Mock network] corda.flow. - Transaction [32BCD8FC8C5AA5F05D7E009DE38753E0DA01BE0E279CC9C7EA4D34E20833028F] successfully notarised, sending signature back to [O=Mock Company 2, L=London, C=GB] {fiber-id=10000021, flow-id=db083070-350e-499d-917e-63b68d48374b, invocation_id=da32ef7c-3d4e-46dd-8d8a-07ab24d077a0, invocation_timestamp=2023-01-31T09:27:52.064Z, origin=O=Mock Company 2, L=London, C=GB, session_id=da32ef7c-3d4e-46dd-8d8a-07ab24d077a0, session_timestamp=2023-01-31T09:27:52.064Z, thread-id=854}
[INFO ] 2023-01-31T09:27:52,298Z [Mock network] corda.flow. - Notary responded (O=Notary, L=London, C=GB). {actor_id=Only For Testing, actor_owning_identity=O=Mock Company 2, L=London, C=GB, actor_store_id=TEST, fiber-id=10000016, flow-id=4cbaf06d-ffdc-4efe-93f1-1598544c1569, invocation_id=98ea7266-ee0d-4277-88b6-196b313f018a, invocation_timestamp=2023-01-31T09:27:51.441Z, origin=Only For Testing, session_id=98ea7266-ee0d-4277-88b6-196b313f018a, session_timestamp=2023-01-31T09:27:51.441Z, thread-id=854, tx_id=32BCD8FC8C5AA5F05D7E009DE38753E0DA01BE0E279CC9C7EA4D34E20833028F}
[INFO ] 2023-01-31T09:27:52,299Z [Mock network] corda.flow. - Recording transaction locally. {actor_id=Only For Testing, actor_owning_identity=O=Mock Company 2, L=London, C=GB, actor_store_id=TEST, fiber-id=10000016, flow-id=4cbaf06d-ffdc-4efe-93f1-1598544c1569, invocation_id=98ea7266-ee0d-4277-88b6-196b313f018a, invocation_timestamp=2023-01-31T09:27:51.441Z, origin=Only For Testing, session_id=98ea7266-ee0d-4277-88b6-196b313f018a, session_timestamp=2023-01-31T09:27:51.441Z, thread-id=854, tx_id=32BCD8FC8C5AA5F05D7E009DE38753E0DA01BE0E279CC9C7EA4D34E20833028F}
[INFO ] 2023-01-31T09:27:52,312Z [Mock network] corda.flow. - Recorded transaction locally successfully. {actor_id=Only For Testing, actor_owning_identity=O=Mock Company 2, L=London, C=GB, actor_store_id=TEST, fiber-id=10000016, flow-id=4cbaf06d-ffdc-4efe-93f1-1598544c1569, invocation_id=98ea7266-ee0d-4277-88b6-196b313f018a, invocation_timestamp=2023-01-31T09:27:51.441Z, origin=Only For Testing, session_id=98ea7266-ee0d-4277-88b6-196b313f018a, session_timestamp=2023-01-31T09:27:51.441Z, thread-id=854, tx_id=32BCD8FC8C5AA5F05D7E009DE38753E0DA01BE0E279CC9C7EA4D34E20833028F}
[INFO ] 2023-01-31T09:27:52,322Z [Mock network] corda.flow. - Received transaction acknowledgement request from party O=Mock Company 2, L=London, C=GB. {fiber-id=10000019, flow-id=75bec02a-ec92-4c9d-992d-37d7bb7bce26, invocation_id=881f1b60-0f4f-402f-8a54-734a60fdc0e7, invocation_timestamp=2023-01-31T09:27:51.608Z, origin=O=Mock Company 2, L=London, C=GB, session_id=881f1b60-0f4f-402f-8a54-734a60fdc0e7, session_timestamp=2023-01-31T09:27:51.608Z, thread-id=854, tx_id=32BCD8FC8C5AA5F05D7E009DE38753E0DA01BE0E279CC9C7EA4D34E20833028F}
[INFO ] 2023-01-31T09:27:52,328Z [Mock network] corda.flow. - Transaction dependencies resolution completed. {fiber-id=10000019, flow-id=75bec02a-ec92-4c9d-992d-37d7bb7bce26, invocation_id=881f1b60-0f4f-402f-8a54-734a60fdc0e7, invocation_timestamp=2023-01-31T09:27:51.608Z, origin=O=Mock Company 2, L=London, C=GB, session_id=881f1b60-0f4f-402f-8a54-734a60fdc0e7, session_timestamp=2023-01-31T09:27:51.608Z, thread-id=854, tx_id=32BCD8FC8C5AA5F05D7E009DE38753E0DA01BE0E279CC9C7EA4D34E20833028F}
[INFO ] 2023-01-31T09:27:52,334Z [Mock network] corda.flow. - Successfully received fully signed tx. Sending it to the vault for processing. {fiber-id=10000019, flow-id=75bec02a-ec92-4c9d-992d-37d7bb7bce26, invocation_id=881f1b60-0f4f-402f-8a54-734a60fdc0e7, invocation_timestamp=2023-01-31T09:27:51.608Z, origin=O=Mock Company 2, L=London, C=GB, session_id=881f1b60-0f4f-402f-8a54-734a60fdc0e7, session_timestamp=2023-01-31T09:27:51.608Z, thread-id=854, tx_id=32BCD8FC8C5AA5F05D7E009DE38753E0DA01BE0E279CC9C7EA4D34E20833028F}
[INFO ] 2023-01-31T09:27:52,340Z [Mock network] corda.flow. - Successfully recorded received transaction locally. {fiber-id=10000019, flow-id=75bec02a-ec92-4c9d-992d-37d7bb7bce26, invocation_id=881f1b60-0f4f-402f-8a54-734a60fdc0e7, invocation_timestamp=2023-01-31T09:27:51.608Z, origin=O=Mock Company 2, L=London, C=GB, session_id=881f1b60-0f4f-402f-8a54-734a60fdc0e7, session_timestamp=2023-01-31T09:27:51.608Z, thread-id=854, tx_id=32BCD8FC8C5AA5F05D7E009DE38753E0DA01BE0E279CC9C7EA4D34E20833028F}
[WARN ] 2023-01-31T09:27:52,342Z [Mock network] persistence.AbstractPartyToX500NameAsStringConverter. - Identity service unable to resolve AbstractParty: Anonymous(DLD6hpL6vSd2BaegQNWLKDu7rqjaXnBp43XVjVYnSzVPDg) {actor_id=Only For Testing, actor_owning_identity=O=Mock Company 2, L=London, C=GB, actor_store_id=TEST, fiber-id=10000019, flow-id=75bec02a-ec92-4c9d-992d-37d7bb7bce26, invocation_id=881f1b60-0f4f-402f-8a54-734a60fdc0e7, invocation_timestamp=2023-01-31T09:27:51.608Z, origin=O=Mock Company 2, L=London, C=GB, session_id=881f1b60-0f4f-402f-8a54-734a60fdc0e7, session_timestamp=2023-01-31T09:27:51.608Z, thread-id=854}
[INFO ] 2023-01-31T09:27:52,349Z [Mock network] corda.flow. - Party O=Mock Company 3, L=London, C=GB received the transaction. {actor_id=Only For Testing, actor_owning_identity=O=Mock Company 2, L=London, C=GB, actor_store_id=TEST, fiber-id=10000016, flow-id=4cbaf06d-ffdc-4efe-93f1-1598544c1569, invocation_id=98ea7266-ee0d-4277-88b6-196b313f018a, invocation_timestamp=2023-01-31T09:27:51.441Z, origin=Only For Testing, session_id=98ea7266-ee0d-4277-88b6-196b313f018a, session_timestamp=2023-01-31T09:27:51.441Z, thread-id=854, tx_id=32BCD8FC8C5AA5F05D7E009DE38753E0DA01BE0E279CC9C7EA4D34E20833028F}
[INFO ] 2023-01-31T09:27:52,359Z [Mock network] corda.flow. - Received transaction acknowledgement request from party O=Mock Company 2, L=London, C=GB. {fiber-id=10000020, flow-id=9de7f60b-6b44-497e-a123-a883c2fdfb14, invocation_id=0533cdc1-b559-497a-ab6f-d48a556cdcd4, invocation_timestamp=2023-01-31T09:27:51.757Z, origin=O=Mock Company 2, L=London, C=GB, session_id=0533cdc1-b559-497a-ab6f-d48a556cdcd4, session_timestamp=2023-01-31T09:27:51.757Z, thread-id=854, tx_id=32BCD8FC8C5AA5F05D7E009DE38753E0DA01BE0E279CC9C7EA4D34E20833028F}
[INFO ] 2023-01-31T09:27:52,365Z [Mock network] corda.flow. - Transaction dependencies resolution completed. {fiber-id=10000020, flow-id=9de7f60b-6b44-497e-a123-a883c2fdfb14, invocation_id=0533cdc1-b559-497a-ab6f-d48a556cdcd4, invocation_timestamp=2023-01-31T09:27:51.757Z, origin=O=Mock Company 2, L=London, C=GB, session_id=0533cdc1-b559-497a-ab6f-d48a556cdcd4, session_timestamp=2023-01-31T09:27:51.757Z, thread-id=854, tx_id=32BCD8FC8C5AA5F05D7E009DE38753E0DA01BE0E279CC9C7EA4D34E20833028F}
[INFO ] 2023-01-31T09:27:52,373Z [Mock network] corda.flow. - Successfully received fully signed tx. Sending it to the vault for processing. {fiber-id=10000020, flow-id=9de7f60b-6b44-497e-a123-a883c2fdfb14, invocation_id=0533cdc1-b559-497a-ab6f-d48a556cdcd4, invocation_timestamp=2023-01-31T09:27:51.757Z, origin=O=Mock Company 2, L=London, C=GB, session_id=0533cdc1-b559-497a-ab6f-d48a556cdcd4, session_timestamp=2023-01-31T09:27:51.757Z, thread-id=854, tx_id=32BCD8FC8C5AA5F05D7E009DE38753E0DA01BE0E279CC9C7EA4D34E20833028F}
[INFO ] 2023-01-31T09:27:52,380Z [Mock network] corda.flow. - Successfully recorded received transaction locally. {fiber-id=10000020, flow-id=9de7f60b-6b44-497e-a123-a883c2fdfb14, invocation_id=0533cdc1-b559-497a-ab6f-d48a556cdcd4, invocation_timestamp=2023-01-31T09:27:51.757Z, origin=O=Mock Company 2, L=London, C=GB, session_id=0533cdc1-b559-497a-ab6f-d48a556cdcd4, session_timestamp=2023-01-31T09:27:51.757Z, thread-id=854, tx_id=32BCD8FC8C5AA5F05D7E009DE38753E0DA01BE0E279CC9C7EA4D34E20833028F}
[WARN ] 2023-01-31T09:27:52,382Z [Mock network] persistence.AbstractPartyToX500NameAsStringConverter. - Identity service unable to resolve AbstractParty: Anonymous(DL2RK5cwfgg26gM2QMzhHB4SdK9vksmcL7sMWLb42Yn6hX) {actor_id=Only For Testing, actor_owning_identity=O=Mock Company 2, L=London, C=GB, actor_store_id=TEST, fiber-id=10000020, flow-id=9de7f60b-6b44-497e-a123-a883c2fdfb14, invocation_id=0533cdc1-b559-497a-ab6f-d48a556cdcd4, invocation_timestamp=2023-01-31T09:27:51.757Z, origin=O=Mock Company 2, L=London, C=GB, session_id=0533cdc1-b559-497a-ab6f-d48a556cdcd4, session_timestamp=2023-01-31T09:27:51.757Z, thread-id=854}
[INFO ] 2023-01-31T09:27:52,388Z [Mock network] corda.flow. - Party O=Mock Company 1, L=London, C=GB received the transaction. {actor_id=Only For Testing, actor_owning_identity=O=Mock Company 2, L=London, C=GB, actor_store_id=TEST, fiber-id=10000016, flow-id=4cbaf06d-ffdc-4efe-93f1-1598544c1569, invocation_id=98ea7266-ee0d-4277-88b6-196b313f018a, invocation_timestamp=2023-01-31T09:27:51.441Z, origin=Only For Testing, session_id=98ea7266-ee0d-4277-88b6-196b313f018a, session_timestamp=2023-01-31T09:27:51.441Z, thread-id=854, tx_id=32BCD8FC8C5AA5F05D7E009DE38753E0DA01BE0E279CC9C7EA4D34E20833028F}
[INFO ] 2023-01-31T09:27:52,388Z [Mock network] corda.flow. - All parties received the transaction successfully. {actor_id=Only For Testing, actor_owning_identity=O=Mock Company 2, L=London, C=GB, actor_store_id=TEST, fiber-id=10000016, flow-id=4cbaf06d-ffdc-4efe-93f1-1598544c1569, invocation_id=98ea7266-ee0d-4277-88b6-196b313f018a, invocation_timestamp=2023-01-31T09:27:51.441Z, origin=Only For Testing, session_id=98ea7266-ee0d-4277-88b6-196b313f018a, session_timestamp=2023-01-31T09:27:51.441Z, thread-id=854, tx_id=32BCD8FC8C5AA5F05D7E009DE38753E0DA01BE0E279CC9C7EA4D34E20833028F}
[INFO ] 2023-01-31T09:27:52,450Z [Mock network] corda.flow. - Received transaction acknowledgement request from party O=Mock Company 3, L=London, C=GB. {fiber-id=10000024, flow-id=023e9f60-6b93-447f-8740-ce0658f3349d, invocation_id=b7f3d824-c719-460f-88cf-c5c747b067fe, invocation_timestamp=2023-01-31T09:27:52.437Z, origin=O=Mock Company 3, L=London, C=GB, session_id=b7f3d824-c719-460f-88cf-c5c747b067fe, session_timestamp=2023-01-31T09:27:52.437Z, thread-id=854, tx_id=CACEFFF893CF27B10129AD9B49F091BD78AFCDAAA9AA104C225DFB12A4DF05FE}
[INFO ] 2023-01-31T09:27:52,456Z [Mock network] corda.flow. - Transaction dependencies resolution completed. {fiber-id=10000024, flow-id=023e9f60-6b93-447f-8740-ce0658f3349d, invocation_id=b7f3d824-c719-460f-88cf-c5c747b067fe, invocation_timestamp=2023-01-31T09:27:52.437Z, origin=O=Mock Company 3, L=London, C=GB, session_id=b7f3d824-c719-460f-88cf-c5c747b067fe, session_timestamp=2023-01-31T09:27:52.437Z, thread-id=854, tx_id=CACEFFF893CF27B10129AD9B49F091BD78AFCDAAA9AA104C225DFB12A4DF05FE}
[INFO ] 2023-01-31T09:27:52,458Z [Mock network] corda.flow. - Successfully received fully signed tx. Sending it to the vault for processing. {fiber-id=10000024, flow-id=023e9f60-6b93-447f-8740-ce0658f3349d, invocation_id=b7f3d824-c719-460f-88cf-c5c747b067fe, invocation_timestamp=2023-01-31T09:27:52.437Z, origin=O=Mock Company 3, L=London, C=GB, session_id=b7f3d824-c719-460f-88cf-c5c747b067fe, session_timestamp=2023-01-31T09:27:52.437Z, thread-id=854, tx_id=CACEFFF893CF27B10129AD9B49F091BD78AFCDAAA9AA104C225DFB12A4DF05FE}
[INFO ] 2023-01-31T09:27:52,460Z [Mock network] corda.flow. - Successfully recorded received transaction locally. {fiber-id=10000024, flow-id=023e9f60-6b93-447f-8740-ce0658f3349d, invocation_id=b7f3d824-c719-460f-88cf-c5c747b067fe, invocation_timestamp=2023-01-31T09:27:52.437Z, origin=O=Mock Company 3, L=London, C=GB, session_id=b7f3d824-c719-460f-88cf-c5c747b067fe, session_timestamp=2023-01-31T09:27:52.437Z, thread-id=854, tx_id=CACEFFF893CF27B10129AD9B49F091BD78AFCDAAA9AA104C225DFB12A4DF05FE}
[INFO ] 2023-01-31T09:27:52,476Z [Mock network] identity.PersistentIdentityService. - Linking: 151611AE8AE765AA4961994A9454D85EDFA7888A9E344C5CB7045BDD1E13EB3A to O=Mock Company 3, L=London, C=GB {fiber-id=10000024, flow-id=023e9f60-6b93-447f-8740-ce0658f3349d, invocation_id=b7f3d824-c719-460f-88cf-c5c747b067fe, invocation_timestamp=2023-01-31T09:27:52.437Z, origin=O=Mock Company 3, L=London, C=GB, session_id=b7f3d824-c719-460f-88cf-c5c747b067fe, session_timestamp=2023-01-31T09:27:52.437Z, thread-id=854, tx_id=CACEFFF893CF27B10129AD9B49F091BD78AFCDAAA9AA104C225DFB12A4DF05FE}
[INFO ] 2023-01-31T09:27:52,482Z [Mock network] corda.flow. - Received transaction acknowledgement request from party O=Mock Company 3, L=London, C=GB. {fiber-id=10000024, flow-id=023e9f60-6b93-447f-8740-ce0658f3349d, invocation_id=b7f3d824-c719-460f-88cf-c5c747b067fe, invocation_timestamp=2023-01-31T09:27:52.437Z, origin=O=Mock Company 3, L=London, C=GB, session_id=b7f3d824-c719-460f-88cf-c5c747b067fe, session_timestamp=2023-01-31T09:27:52.437Z, thread-id=854, tx_id=32BCD8FC8C5AA5F05D7E009DE38753E0DA01BE0E279CC9C7EA4D34E20833028F}
[INFO ] 2023-01-31T09:27:52,488Z [Mock network] corda.flow. - Transaction dependencies resolution completed. {fiber-id=10000024, flow-id=023e9f60-6b93-447f-8740-ce0658f3349d, invocation_id=b7f3d824-c719-460f-88cf-c5c747b067fe, invocation_timestamp=2023-01-31T09:27:52.437Z, origin=O=Mock Company 3, L=London, C=GB, session_id=b7f3d824-c719-460f-88cf-c5c747b067fe, session_timestamp=2023-01-31T09:27:52.437Z, thread-id=854, tx_id=32BCD8FC8C5AA5F05D7E009DE38753E0DA01BE0E279CC9C7EA4D34E20833028F}
[INFO ] 2023-01-31T09:27:52,494Z [Mock network] corda.flow. - Successfully received fully signed tx. Sending it to the vault for processing. {fiber-id=10000024, flow-id=023e9f60-6b93-447f-8740-ce0658f3349d, invocation_id=b7f3d824-c719-460f-88cf-c5c747b067fe, invocation_timestamp=2023-01-31T09:27:52.437Z, origin=O=Mock Company 3, L=London, C=GB, session_id=b7f3d824-c719-460f-88cf-c5c747b067fe, session_timestamp=2023-01-31T09:27:52.437Z, thread-id=854, tx_id=32BCD8FC8C5AA5F05D7E009DE38753E0DA01BE0E279CC9C7EA4D34E20833028F}
[INFO ] 2023-01-31T09:27:52,499Z [Mock network] corda.flow. - Successfully recorded received transaction locally. {fiber-id=10000024, flow-id=023e9f60-6b93-447f-8740-ce0658f3349d, invocation_id=b7f3d824-c719-460f-88cf-c5c747b067fe, invocation_timestamp=2023-01-31T09:27:52.437Z, origin=O=Mock Company 3, L=London, C=GB, session_id=b7f3d824-c719-460f-88cf-c5c747b067fe, session_timestamp=2023-01-31T09:27:52.437Z, thread-id=854, tx_id=32BCD8FC8C5AA5F05D7E009DE38753E0DA01BE0E279CC9C7EA4D34E20833028F}
[INFO ] 2023-01-31T09:27:52,514Z [Mock network] identity.PersistentIdentityService. - Linking: BA7A0DF1B7ED1A31BC85792B55E5EEDB98A0BDCCC91027BEEAA91EA5B44C3E45 to O=Mock Company 1, L=London, C=GB {actor_id=Only For Testing, actor_owning_identity=O=Mock Company 1, L=London, C=GB, actor_store_id=TEST, fiber-id=10000025, flow-id=498b4930-690b-42a5-b0fb-537c3d6b78b4, invocation_id=78862faa-c704-4223-9f13-dc2df4d81e3b, invocation_timestamp=2023-01-31T09:27:52.509Z, origin=Only For Testing, session_id=78862faa-c704-4223-9f13-dc2df4d81e3b, session_timestamp=2023-01-31T09:27:52.509Z, thread-id=854}
[INFO ] 2023-01-31T09:27:52,644Z [Mock network] corda.flow. - No need to notarise this transaction. {actor_id=Only For Testing, actor_owning_identity=O=Mock Company 1, L=London, C=GB, actor_store_id=TEST, fiber-id=10000025, flow-id=498b4930-690b-42a5-b0fb-537c3d6b78b4, invocation_id=78862faa-c704-4223-9f13-dc2df4d81e3b, invocation_timestamp=2023-01-31T09:27:52.509Z, origin=Only For Testing, session_id=78862faa-c704-4223-9f13-dc2df4d81e3b, session_timestamp=2023-01-31T09:27:52.509Z, thread-id=854, tx_id=7D92A43E76F0E65497F8F862755D43FBD7021A5D5F52212DD04F7F6551D688BC}
[INFO ] 2023-01-31T09:27:52,644Z [Mock network] corda.flow. - Recording transaction locally. {actor_id=Only For Testing, actor_owning_identity=O=Mock Company 1, L=London, C=GB, actor_store_id=TEST, fiber-id=10000025, flow-id=498b4930-690b-42a5-b0fb-537c3d6b78b4, invocation_id=78862faa-c704-4223-9f13-dc2df4d81e3b, invocation_timestamp=2023-01-31T09:27:52.509Z, origin=Only For Testing, session_id=78862faa-c704-4223-9f13-dc2df4d81e3b, session_timestamp=2023-01-31T09:27:52.509Z, thread-id=854, tx_id=7D92A43E76F0E65497F8F862755D43FBD7021A5D5F52212DD04F7F6551D688BC}
[INFO ] 2023-01-31T09:27:52,660Z [Mock network] corda.flow. - Recorded transaction locally successfully. {actor_id=Only For Testing, actor_owning_identity=O=Mock Company 1, L=London, C=GB, actor_store_id=TEST, fiber-id=10000025, flow-id=498b4930-690b-42a5-b0fb-537c3d6b78b4, invocation_id=78862faa-c704-4223-9f13-dc2df4d81e3b, invocation_timestamp=2023-01-31T09:27:52.509Z, origin=Only For Testing, session_id=78862faa-c704-4223-9f13-dc2df4d81e3b, session_timestamp=2023-01-31T09:27:52.509Z, thread-id=854, tx_id=7D92A43E76F0E65497F8F862755D43FBD7021A5D5F52212DD04F7F6551D688BC}
[INFO ] 2023-01-31T09:27:52,660Z [Mock network] corda.flow. - All parties received the transaction successfully. {actor_id=Only For Testing, actor_owning_identity=O=Mock Company 1, L=London, C=GB, actor_store_id=TEST, fiber-id=10000025, flow-id=498b4930-690b-42a5-b0fb-537c3d6b78b4, invocation_id=78862faa-c704-4223-9f13-dc2df4d81e3b, invocation_timestamp=2023-01-31T09:27:52.509Z, origin=Only For Testing, session_id=78862faa-c704-4223-9f13-dc2df4d81e3b, session_timestamp=2023-01-31T09:27:52.509Z, thread-id=854, tx_id=7D92A43E76F0E65497F8F862755D43FBD7021A5D5F52212DD04F7F6551D688BC}
[INFO ] 2023-01-31T09:27:52,682Z [Mock network] identity.PersistentIdentityService. - Linking: F2E2807382EC2FB69C514BA907A116C829B41EA6615B3E3A6BFB497B6B557B49 to O=Mock Company 1, L=London, C=GB {actor_id=Only For Testing, actor_owning_identity=O=Mock Company 1, L=London, C=GB, actor_store_id=TEST, fiber-id=10000026, flow-id=dc41d6f5-7924-4792-9d38-01bbed108ea9, invocation_id=2401a135-021b-4884-a101-5d28e07d4b09, invocation_timestamp=2023-01-31T09:27:52.678Z, origin=Only For Testing, session_id=2401a135-021b-4884-a101-5d28e07d4b09, session_timestamp=2023-01-31T09:27:52.678Z, thread-id=854}
[INFO ] 2023-01-31T09:27:52,693Z [Mock network] corda.flow. - No need to notarise this transaction. {actor_id=Only For Testing, actor_owning_identity=O=Mock Company 1, L=London, C=GB, actor_store_id=TEST, fiber-id=10000026, flow-id=dc41d6f5-7924-4792-9d38-01bbed108ea9, invocation_id=2401a135-021b-4884-a101-5d28e07d4b09, invocation_timestamp=2023-01-31T09:27:52.678Z, origin=Only For Testing, session_id=2401a135-021b-4884-a101-5d28e07d4b09, session_timestamp=2023-01-31T09:27:52.678Z, thread-id=854, tx_id=0B5505C6AD561883CE7EED7D24069B22322FAEBDC9D0A2233ADB2508AA664843}
[INFO ] 2023-01-31T09:27:52,693Z [Mock network] corda.flow. - Recording transaction locally. {actor_id=Only For Testing, actor_owning_identity=O=Mock Company 1, L=London, C=GB, actor_store_id=TEST, fiber-id=10000026, flow-id=dc41d6f5-7924-4792-9d38-01bbed108ea9, invocation_id=2401a135-021b-4884-a101-5d28e07d4b09, invocation_timestamp=2023-01-31T09:27:52.678Z, origin=Only For Testing, session_id=2401a135-021b-4884-a101-5d28e07d4b09, session_timestamp=2023-01-31T09:27:52.678Z, thread-id=854, tx_id=0B5505C6AD561883CE7EED7D24069B22322FAEBDC9D0A2233ADB2508AA664843}
[INFO ] 2023-01-31T09:27:52,697Z [Mock network] corda.flow. - Recorded transaction locally successfully. {actor_id=Only For Testing, actor_owning_identity=O=Mock Company 1, L=London, C=GB, actor_store_id=TEST, fiber-id=10000026, flow-id=dc41d6f5-7924-4792-9d38-01bbed108ea9, invocation_id=2401a135-021b-4884-a101-5d28e07d4b09, invocation_timestamp=2023-01-31T09:27:52.678Z, origin=Only For Testing, session_id=2401a135-021b-4884-a101-5d28e07d4b09, session_timestamp=2023-01-31T09:27:52.678Z, thread-id=854, tx_id=0B5505C6AD561883CE7EED7D24069B22322FAEBDC9D0A2233ADB2508AA664843}
[INFO ] 2023-01-31T09:27:52,697Z [Mock network] corda.flow. - All parties received the transaction successfully. {actor_id=Only For Testing, actor_owning_identity=O=Mock Company 1, L=London, C=GB, actor_store_id=TEST, fiber-id=10000026, flow-id=dc41d6f5-7924-4792-9d38-01bbed108ea9, invocation_id=2401a135-021b-4884-a101-5d28e07d4b09, invocation_timestamp=2023-01-31T09:27:52.678Z, origin=Only For Testing, session_id=2401a135-021b-4884-a101-5d28e07d4b09, session_timestamp=2023-01-31T09:27:52.678Z, thread-id=854, tx_id=0B5505C6AD561883CE7EED7D24069B22322FAEBDC9D0A2233ADB2508AA664843}
[INFO ] 2023-01-31T09:27:52,730Z [Mock network] identity.PersistentIdentityService. - Linking: FB48C2B05B5041697AAB3A3D2ACB69D7012A1FEBA4EA3704C21F790ED65E2FA8 to O=Mock Company 1, L=London, C=GB {actor_id=Only For Testing, actor_owning_identity=O=Mock Company 1, L=London, C=GB, actor_store_id=TEST, fiber-id=10000028, flow-id=2a5f1a05-4ffd-41db-94e3-c75d471484ff, invocation_id=4ada579c-83a4-497c-a1ae-010871f58c30, invocation_timestamp=2023-01-31T09:27:52.724Z, origin=Only For Testing, session_id=4ada579c-83a4-497c-a1ae-010871f58c30, session_timestamp=2023-01-31T09:27:52.724Z, thread-id=854}
[INFO ] 2023-01-31T09:27:52,772Z [Mock network] identity.PersistentIdentityService. - Linking: 0119C69D5454FD18DC88AA1E10259CD0F766EEB47702883005634E387AB35A3B to O=Mock Company 3, L=London, C=GB {fiber-id=10000029, flow-id=c0c4eaf9-c9bd-426a-bacc-d4d6e8777500, invocation_id=b3b36bc6-f3d6-4410-9655-3727f0d5bcab, invocation_timestamp=2023-01-31T09:27:52.747Z, origin=O=Mock Company 1, L=London, C=GB, session_id=b3b36bc6-f3d6-4410-9655-3727f0d5bcab, session_timestamp=2023-01-31T09:27:52.747Z, thread-id=854}
[INFO ] 2023-01-31T09:27:52,781Z [Mock network] identity.PersistentIdentityService. - Linking: 0119C69D5454FD18DC88AA1E10259CD0F766EEB47702883005634E387AB35A3B to O=Mock Company 3, L=London, C=GB {actor_id=Only For Testing, actor_owning_identity=O=Mock Company 1, L=London, C=GB, actor_store_id=TEST, fiber-id=10000028, flow-id=2a5f1a05-4ffd-41db-94e3-c75d471484ff, invocation_id=4ada579c-83a4-497c-a1ae-010871f58c30, invocation_timestamp=2023-01-31T09:27:52.724Z, origin=Only For Testing, session_id=4ada579c-83a4-497c-a1ae-010871f58c30, session_timestamp=2023-01-31T09:27:52.724Z, thread-id=854}
[INFO ] 2023-01-31T09:27:53,018Z [Mock network] corda.flow. - Received transaction acknowledgement request from party O=Mock Company 1, L=London, C=GB. {fiber-id=10000030, flow-id=0be5846f-99c8-4917-a523-e6e792be9982, invocation_id=51c95b42-e661-41ed-abf2-689fa5b5121a, invocation_timestamp=2023-01-31T09:27:53.007Z, origin=O=Mock Company 1, L=London, C=GB, session_id=51c95b42-e661-41ed-abf2-689fa5b5121a, session_timestamp=2023-01-31T09:27:53.007Z, thread-id=854, tx_id=A34F9100D1FAD3EE03E89735DDDEF18342839382F8E83E9E6E6A44255C93F063}
[INFO ] 2023-01-31T09:27:53,102Z [Mock network] corda.flow. - Transaction dependencies resolution completed. {fiber-id=10000030, flow-id=0be5846f-99c8-4917-a523-e6e792be9982, invocation_id=51c95b42-e661-41ed-abf2-689fa5b5121a, invocation_timestamp=2023-01-31T09:27:53.007Z, origin=O=Mock Company 1, L=London, C=GB, session_id=51c95b42-e661-41ed-abf2-689fa5b5121a, session_timestamp=2023-01-31T09:27:53.007Z, thread-id=854, tx_id=A34F9100D1FAD3EE03E89735DDDEF18342839382F8E83E9E6E6A44255C93F063}
[INFO ] 2023-01-31T09:27:53,221Z [Mock network] corda.flow. - Sending transaction to notary: O=Notary, L=London, C=GB. {actor_id=Only For Testing, actor_owning_identity=O=Mock Company 1, L=London, C=GB, actor_store_id=TEST, fiber-id=10000028, flow-id=2a5f1a05-4ffd-41db-94e3-c75d471484ff, invocation_id=4ada579c-83a4-497c-a1ae-010871f58c30, invocation_timestamp=2023-01-31T09:27:52.724Z, origin=Only For Testing, session_id=4ada579c-83a4-497c-a1ae-010871f58c30, session_timestamp=2023-01-31T09:27:52.724Z, thread-id=854, tx_id=A34F9100D1FAD3EE03E89735DDDEF18342839382F8E83E9E6E6A44255C93F063}
[INFO ] 2023-01-31T09:27:53,238Z [Mock network] corda.flow. - Received a notarisation request for Tx [A34F9100D1FAD3EE03E89735DDDEF18342839382F8E83E9E6E6A44255C93F063] from [O=Mock Company 1, L=London, C=GB] {fiber-id=10000031, flow-id=6651cdc8-f211-43a8-b3b3-df13055c1121, invocation_id=7ce2f33e-a5f1-486d-9a81-4aad3a55a055, invocation_timestamp=2023-01-31T09:27:53.228Z, origin=O=Mock Company 1, L=London, C=GB, session_id=7ce2f33e-a5f1-486d-9a81-4aad3a55a055, session_timestamp=2023-01-31T09:27:53.228Z, thread-id=854}
[INFO ] 2023-01-31T09:27:53,776Z [Notary request queue processor] jpa.JPAUniquenessProvider. - Processing notarization requests with 2 input states and 0 references {}
[INFO ] 2023-01-31T09:27:53,782Z [Mock network] corda.flow. - Transaction [A34F9100D1FAD3EE03E89735DDDEF18342839382F8E83E9E6E6A44255C93F063] successfully notarised, sending signature back to [O=Mock Company 1, L=London, C=GB] {fiber-id=10000031, flow-id=6651cdc8-f211-43a8-b3b3-df13055c1121, invocation_id=7ce2f33e-a5f1-486d-9a81-4aad3a55a055, invocation_timestamp=2023-01-31T09:27:53.228Z, origin=O=Mock Company 1, L=London, C=GB, session_id=7ce2f33e-a5f1-486d-9a81-4aad3a55a055, session_timestamp=2023-01-31T09:27:53.228Z, thread-id=854}
[INFO ] 2023-01-31T09:27:53,837Z [Mock network] corda.flow. - Notary responded (O=Notary, L=London, C=GB). {actor_id=Only For Testing, actor_owning_identity=O=Mock Company 1, L=London, C=GB, actor_store_id=TEST, fiber-id=10000028, flow-id=2a5f1a05-4ffd-41db-94e3-c75d471484ff, invocation_id=4ada579c-83a4-497c-a1ae-010871f58c30, invocation_timestamp=2023-01-31T09:27:52.724Z, origin=Only For Testing, session_id=4ada579c-83a4-497c-a1ae-010871f58c30, session_timestamp=2023-01-31T09:27:52.724Z, thread-id=854, tx_id=A34F9100D1FAD3EE03E89735DDDEF18342839382F8E83E9E6E6A44255C93F063}
[INFO ] 2023-01-31T09:27:53,839Z [Mock network] corda.flow. - Recording transaction locally. {actor_id=Only For Testing, actor_owning_identity=O=Mock Company 1, L=London, C=GB, actor_store_id=TEST, fiber-id=10000028, flow-id=2a5f1a05-4ffd-41db-94e3-c75d471484ff, invocation_id=4ada579c-83a4-497c-a1ae-010871f58c30, invocation_timestamp=2023-01-31T09:27:52.724Z, origin=Only For Testing, session_id=4ada579c-83a4-497c-a1ae-010871f58c30, session_timestamp=2023-01-31T09:27:52.724Z, thread-id=854, tx_id=A34F9100D1FAD3EE03E89735DDDEF18342839382F8E83E9E6E6A44255C93F063}
[INFO ] 2023-01-31T09:27:53,849Z [Mock network] corda.flow. - Recorded transaction locally successfully. {actor_id=Only For Testing, actor_owning_identity=O=Mock Company 1, L=London, C=GB, actor_store_id=TEST, fiber-id=10000028, flow-id=2a5f1a05-4ffd-41db-94e3-c75d471484ff, invocation_id=4ada579c-83a4-497c-a1ae-010871f58c30, invocation_timestamp=2023-01-31T09:27:52.724Z, origin=Only For Testing, session_id=4ada579c-83a4-497c-a1ae-010871f58c30, session_timestamp=2023-01-31T09:27:52.724Z, thread-id=854, tx_id=A34F9100D1FAD3EE03E89735DDDEF18342839382F8E83E9E6E6A44255C93F063}
[INFO ] 2023-01-31T09:27:53,880Z [Mock network] corda.flow. - Received transaction acknowledgement request from party O=Mock Company 1, L=London, C=GB. {fiber-id=10000030, flow-id=0be5846f-99c8-4917-a523-e6e792be9982, invocation_id=51c95b42-e661-41ed-abf2-689fa5b5121a, invocation_timestamp=2023-01-31T09:27:53.007Z, origin=O=Mock Company 1, L=London, C=GB, session_id=51c95b42-e661-41ed-abf2-689fa5b5121a, session_timestamp=2023-01-31T09:27:53.007Z, thread-id=854, tx_id=A34F9100D1FAD3EE03E89735DDDEF18342839382F8E83E9E6E6A44255C93F063}
[INFO ] 2023-01-31T09:27:53,885Z [Mock network] corda.flow. - Transaction dependencies resolution completed. {fiber-id=10000030, flow-id=0be5846f-99c8-4917-a523-e6e792be9982, invocation_id=51c95b42-e661-41ed-abf2-689fa5b5121a, invocation_timestamp=2023-01-31T09:27:53.007Z, origin=O=Mock Company 1, L=London, C=GB, session_id=51c95b42-e661-41ed-abf2-689fa5b5121a, session_timestamp=2023-01-31T09:27:53.007Z, thread-id=854, tx_id=A34F9100D1FAD3EE03E89735DDDEF18342839382F8E83E9E6E6A44255C93F063}
[INFO ] 2023-01-31T09:27:53,892Z [Mock network] corda.flow. - Successfully received fully signed tx. Sending it to the vault for processing. {fiber-id=10000030, flow-id=0be5846f-99c8-4917-a523-e6e792be9982, invocation_id=51c95b42-e661-41ed-abf2-689fa5b5121a, invocation_timestamp=2023-01-31T09:27:53.007Z, origin=O=Mock Company 1, L=London, C=GB, session_id=51c95b42-e661-41ed-abf2-689fa5b5121a, session_timestamp=2023-01-31T09:27:53.007Z, thread-id=854, tx_id=A34F9100D1FAD3EE03E89735DDDEF18342839382F8E83E9E6E6A44255C93F063}
[WARN ] 2023-01-31T09:27:53,900Z [Mock network] persistence.AbstractPartyToX500NameAsStringConverter. - Identity service unable to resolve AbstractParty: Anonymous(DLD6hpL6vSd2BaegQNWLKDu7rqjaXnBp43XVjVYnSzVPDg) {fiber-id=10000030, flow-id=0be5846f-99c8-4917-a523-e6e792be9982, invocation_id=51c95b42-e661-41ed-abf2-689fa5b5121a, invocation_timestamp=2023-01-31T09:27:53.007Z, origin=O=Mock Company 1, L=London, C=GB, session_id=51c95b42-e661-41ed-abf2-689fa5b5121a, session_timestamp=2023-01-31T09:27:53.007Z, thread-id=854, tx_id=A34F9100D1FAD3EE03E89735DDDEF18342839382F8E83E9E6E6A44255C93F063}
[INFO ] 2023-01-31T09:27:53,902Z [Mock network] corda.flow. - Successfully recorded received transaction locally. {fiber-id=10000030, flow-id=0be5846f-99c8-4917-a523-e6e792be9982, invocation_id=51c95b42-e661-41ed-abf2-689fa5b5121a, invocation_timestamp=2023-01-31T09:27:53.007Z, origin=O=Mock Company 1, L=London, C=GB, session_id=51c95b42-e661-41ed-abf2-689fa5b5121a, session_timestamp=2023-01-31T09:27:53.007Z, thread-id=854, tx_id=A34F9100D1FAD3EE03E89735DDDEF18342839382F8E83E9E6E6A44255C93F063}
[INFO ] 2023-01-31T09:27:53,909Z [Mock network] corda.flow. - Party O=Mock Company 3, L=London, C=GB received the transaction. {actor_id=Only For Testing, actor_owning_identity=O=Mock Company 1, L=London, C=GB, actor_store_id=TEST, fiber-id=10000028, flow-id=2a5f1a05-4ffd-41db-94e3-c75d471484ff, invocation_id=4ada579c-83a4-497c-a1ae-010871f58c30, invocation_timestamp=2023-01-31T09:27:52.724Z, origin=Only For Testing, session_id=4ada579c-83a4-497c-a1ae-010871f58c30, session_timestamp=2023-01-31T09:27:52.724Z, thread-id=854, tx_id=A34F9100D1FAD3EE03E89735DDDEF18342839382F8E83E9E6E6A44255C93F063}
[INFO ] 2023-01-31T09:27:53,909Z [Mock network] corda.flow. - All parties received the transaction successfully. {actor_id=Only For Testing, actor_owning_identity=O=Mock Company 1, L=London, C=GB, actor_store_id=TEST, fiber-id=10000028, flow-id=2a5f1a05-4ffd-41db-94e3-c75d471484ff, invocation_id=4ada579c-83a4-497c-a1ae-010871f58c30, invocation_timestamp=2023-01-31T09:27:52.724Z, origin=Only For Testing, session_id=4ada579c-83a4-497c-a1ae-010871f58c30, session_timestamp=2023-01-31T09:27:52.724Z, thread-id=854, tx_id=A34F9100D1FAD3EE03E89735DDDEF18342839382F8E83E9E6E6A44255C93F063}
[INFO ] 2023-01-31T09:27:53,941Z [Test worker] persistence.CordaPersistence. - Closing HikariDataSource (HikariPool-1) {}
[INFO ] 2023-01-31T09:27:53,968Z [Test worker] internal.MockNodeMessagingService. - Status change to false {}
[INFO ] 2023-01-31T09:27:53,968Z [Test worker] internal.InternalMockNetwork$MockNode. - MessagingService active change to: false {}
[INFO ] 2023-01-31T09:27:53,971Z [Test worker] persistence.CordaPersistence. - Closing HikariDataSource (HikariPool-2) {}
[INFO ] 2023-01-31T09:27:53,987Z [Test worker] internal.MockNodeMessagingService. - Status change to false {}
[INFO ] 2023-01-31T09:27:53,987Z [Test worker] internal.InternalMockNetwork$MockNode. - MessagingService active change to: false {}
[INFO ] 2023-01-31T09:27:53,988Z [Test worker] persistence.CordaPersistence. - Closing HikariDataSource (HikariPool-3) {}
[INFO ] 2023-01-31T09:27:53,999Z [Test worker] internal.MockNodeMessagingService. - Status change to false {}
[INFO ] 2023-01-31T09:27:53,999Z [Test worker] internal.InternalMockNetwork$MockNode. - MessagingService active change to: false {}
[INFO ] 2023-01-31T09:27:54,000Z [Test worker] persistence.CordaPersistence. - Closing HikariDataSource (HikariPool-4) {}
[INFO ] 2023-01-31T09:27:54,013Z [Test worker] internal.MockNodeMessagingService. - Status change to false {}
[INFO ] 2023-01-31T09:27:54,013Z [Test worker] internal.InternalMockNetwork$MockNode. - MessagingService active change to: false {}
